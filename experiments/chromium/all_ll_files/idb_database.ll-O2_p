; ModuleID = '../../third_party/blink/renderer/modules/indexeddb/idb_database.cc'
source_filename = "../../third_party/blink/renderer/modules/indexeddb/idb_database.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.434", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.434" = type { %"class.base::RefCounted.435" }
%"class.base::RefCounted.435" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.438" }
%"class.blink::HeapHashMap.438" = type { %"class.WTF::HashMap.441" }
%"class.WTF::HashMap.441" = type { %"class.WTF::HashTable.442" }
%"class.WTF::HashTable.442" = type <{ %"struct.WTF::KeyValuePair.444"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.444" = type { %"class.blink::WeakMember.445", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.445" = type { %"class.blink::MemberBase.446" }
%"class.blink::MemberBase.446" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.227", i32, [4 x i8], %"class.std::__1::unique_ptr.363", %"class.std::__1::unique_ptr.363", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque.369", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.375", %"class.std::__1::unique_ptr.381", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.393", %"class.std::__1::unique_ptr.399", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.406", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.236", %"class.std::__1::unique_ptr.242", %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.254", %"class.std::__1::unique_ptr.260", %"class.std::__1::unique_ptr.271", %"class.std::__1::unique_ptr.278", %"class.std::__1::unique_ptr.278", %"class.std::__1::unique_ptr.285", %"class.std::__1::unique_ptr.292", %"class.std::__1::unique_ptr.299", %"class.std::__1::unique_ptr.299", %"class.std::__1::unique_ptr.306", %"class.std::__1::unique_ptr.313", %"class.std::__1::unique_ptr.320", %"class.std::__1::unique_ptr.343", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.230" = type { %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.242" = type { %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.248" = type { %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250" }
%"struct.std::__1::__compressed_pair_elem.250" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.254" = type { %"class.std::__1::__compressed_pair.255" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.260" = type { %"class.std::__1::__compressed_pair.261" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.263" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.263" = type { %"struct.std::__1::__atomic_base.264" }
%"struct.std::__1::__atomic_base.264" = type { %"struct.std::__1::__atomic_base.265" }
%"struct.std::__1::__atomic_base.265" = type { %"struct.std::__1::__cxx_atomic_impl.266" }
%"struct.std::__1::__cxx_atomic_impl.266" = type { %"struct.std::__1::__cxx_atomic_base_impl.267" }
%"struct.std::__1::__cxx_atomic_base_impl.267" = type { i64 }
%"class.std::__1::unique_ptr.271" = type { %"class.std::__1::__compressed_pair.272" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"class.blink::Worklist.274"* }
%"class.blink::Worklist.274" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.263" }
%"class.std::__1::unique_ptr.278" = type { %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"class.blink::Worklist.281"* }
%"class.blink::Worklist.281" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.263" }
%"class.std::__1::unique_ptr.285" = type { %"class.std::__1::__compressed_pair.286" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"struct.std::__1::__compressed_pair_elem.287" = type { %"class.blink::Worklist.288"* }
%"class.blink::Worklist.288" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.263" }
%"class.std::__1::unique_ptr.292" = type { %"class.std::__1::__compressed_pair.293" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.294" }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"class.blink::Worklist.295"* }
%"class.blink::Worklist.295" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.263" }
%"class.std::__1::unique_ptr.299" = type { %"class.std::__1::__compressed_pair.300" }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.301" }
%"struct.std::__1::__compressed_pair_elem.301" = type { %"class.blink::Worklist.302"* }
%"class.blink::Worklist.302" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.263" }
%"class.std::__1::unique_ptr.306" = type { %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"class.blink::Worklist.309"* }
%"class.blink::Worklist.309" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.263" }
%"class.std::__1::unique_ptr.313" = type { %"class.std::__1::__compressed_pair.314" }
%"class.std::__1::__compressed_pair.314" = type { %"struct.std::__1::__compressed_pair_elem.315" }
%"struct.std::__1::__compressed_pair_elem.315" = type { %"class.blink::Worklist.316"* }
%"class.blink::Worklist.316" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.263" }
%"class.std::__1::unique_ptr.320" = type { %"class.std::__1::__compressed_pair.321" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322" }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.323", %"class.std::__1::__compressed_pair.330", %"class.std::__1::__compressed_pair.335", %"class.std::__1::__compressed_pair.337", [4 x i8] }>
%"class.std::__1::unique_ptr.323" = type { %"class.std::__1::__compressed_pair.324" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.325", %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.325" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.327" }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.328" }
%"struct.std::__1::__compressed_pair_elem.328" = type { i64 }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.331" }
%"struct.std::__1::__compressed_pair_elem.331" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.335" = type { %"struct.std::__1::__compressed_pair_elem.328" }
%"class.std::__1::__compressed_pair.337" = type { %"struct.std::__1::__compressed_pair_elem.338" }
%"struct.std::__1::__compressed_pair_elem.338" = type { float }
%"class.std::__1::unique_ptr.343" = type { %"class.std::__1::__compressed_pair.344" }
%"class.std::__1::__compressed_pair.344" = type { %"struct.std::__1::__compressed_pair_elem.345" }
%"struct.std::__1::__compressed_pair_elem.345" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.346", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.346" = type { %"class.std::__1::__compressed_pair.347" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.348" }
%"struct.std::__1::__compressed_pair_elem.348" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.355" }
%"class.WTF::Vector.355" = type { %"class.WTF::VectorBuffer.356" }
%"class.WTF::VectorBuffer.356" = type { %"class.WTF::VectorBufferBase.357" }
%"class.WTF::VectorBufferBase.357" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.363" = type { %"class.std::__1::__compressed_pair.364" }
%"class.std::__1::__compressed_pair.364" = type { %"struct.std::__1::__compressed_pair_elem.365" }
%"struct.std::__1::__compressed_pair_elem.365" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque.369" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.372" }
%"class.WTF::VectorBuffer.372" = type { %"class.WTF::VectorBufferBase.373" }
%"class.WTF::VectorBufferBase.373" = type { %"struct.std::__1::pair.374"*, i32, i32 }
%"struct.std::__1::pair.374" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.375" = type { %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.381" = type { %"class.std::__1::__compressed_pair.382" }
%"class.std::__1::__compressed_pair.382" = type { %"struct.std::__1::__compressed_pair_elem.383" }
%"struct.std::__1::__compressed_pair_elem.383" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.387" }
%"class.std::__1::unique_ptr.387" = type { %"class.std::__1::__compressed_pair.388" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.389" }
%"struct.std::__1::__compressed_pair_elem.389" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.274"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.281"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.288"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.295"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.302"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.410" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.411" }
%"struct.std::__1::__compressed_pair_elem.411" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.393" = type { %"class.std::__1::__compressed_pair.394" }
%"class.std::__1::__compressed_pair.394" = type { %"struct.std::__1::__compressed_pair_elem.395" }
%"struct.std::__1::__compressed_pair_elem.395" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.405 }
%class.scoped_refptr.405 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.406" = type { %"struct.std::__1::__atomic_base.407" }
%"struct.std::__1::__atomic_base.407" = type { %"struct.std::__1::__cxx_atomic_impl.408" }
%"struct.std::__1::__cxx_atomic_impl.408" = type { %"struct.std::__1::__cxx_atomic_base_impl.409" }
%"struct.std::__1::__cxx_atomic_base_impl.409" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.118" }
%"struct.std::__1::atomic.118" = type { %"struct.std::__1::__atomic_base.119" }
%"struct.std::__1::__atomic_base.119" = type { %"struct.std::__1::__atomic_base.120" }
%"struct.std::__1::__atomic_base.120" = type { %"struct.std::__1::__cxx_atomic_impl.121" }
%"struct.std::__1::__cxx_atomic_impl.121" = type { %"struct.std::__1::__cxx_atomic_base_impl.122" }
%"struct.std::__1::__cxx_atomic_base_impl.122" = type { i32 }
%"class.blink::IDBDatabase" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::mojom::blink::IDBDatabaseCallbacks", %"struct.blink::IDBDatabaseMetadata", %"class.std::__1::unique_ptr.27", %"class.blink::Member.33", %"class.blink::HeapHashMap.128", %"class.mojo::PendingRemote", i8, %"class.blink::Member.99", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::AtomicString", %"class.blink::Member" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::HeapVector.5"* }
%"class.blink::HeapVector.5" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.WTF::Vector.6"* }
%"class.WTF::Vector.6" = type opaque
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.8" }
%"class.blink::MemberBase.8" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::WeakMember.12"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.12" = type opaque
%"class.blink::mojom::blink::IDBDatabaseCallbacks" = type { i32 (...)** }
%"struct.blink::IDBDatabaseMetadata" = type <{ %"class.WTF::String", i64, i64, i64, %"class.WTF::HashMap", i8, [7 x i8] }>
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.13" }
%"class.WTF::HashTable.13" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { i64, %class.scoped_refptr.16 }
%class.scoped_refptr.16 = type { %"class.blink::IDBObjectStoreMetadata"* }
%"class.blink::IDBObjectStoreMetadata" = type { %"class.WTF::RefCounted", %"class.WTF::String", i64, %"class.blink::IDBKeyPath", i8, i64, %"class.WTF::HashMap.22" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::IDBKeyPath" = type { i32, %"class.WTF::String", %"class.WTF::Vector.17" }
%"class.WTF::Vector.17" = type { %"class.WTF::VectorBuffer.18" }
%"class.WTF::VectorBuffer.18" = type { %"class.WTF::VectorBufferBase.19" }
%"class.WTF::VectorBufferBase.19" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::HashMap.22" = type { %"class.WTF::HashTable.23" }
%"class.WTF::HashTable.23" = type <{ %"struct.WTF::KeyValuePair.26"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.26" = type { i64, %class.scoped_refptr.137 }
%class.scoped_refptr.137 = type { %"class.blink::IDBIndexMetadata"* }
%"class.blink::IDBIndexMetadata" = type <{ %"class.WTF::RefCounted.138", [4 x i8], %"class.WTF::String", i64, %"class.blink::IDBKeyPath", i8, i8, [6 x i8] }>
%"class.WTF::RefCounted.138" = type { %"class.base::RefCounted.139" }
%"class.base::RefCounted.139" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.blink::WebIDBDatabase"* }
%"class.blink::Member.33" = type { %"class.blink::MemberBase.34" }
%"class.blink::MemberBase.34" = type { %"class.blink::IDBTransaction"* }
%"class.blink::IDBTransaction" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::ActiveScriptWrappable.35", %"class.blink::ExecutionContextLifecycleObserver.base", %"class.std::__1::unique_ptr.36", i64, %"class.blink::Member.42", %"class.blink::Member.44", i32, i32, %"class.WTF::HashSet.46", i32, i8, i64, %"class.blink::Member.50", %"class.blink::HeapLinkedHashSet", %"class.WTF::Deque", %"class.blink::HeapHashMap", %"class.blink::HeapHashMap.78", %"class.WTF::Vector.85", %"class.blink::HeapVector.90", %"struct.blink::IDBDatabaseMetadata", %"class.blink::Member.99", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" }
%"class.blink::ActiveScriptWrappable.35" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.blink::WebIDBTransaction"* }
%"class.blink::WebIDBTransaction" = type { i32 (...)** }
%"class.blink::Member.42" = type { %"class.blink::MemberBase.43" }
%"class.blink::MemberBase.43" = type { %"class.blink::IDBDatabase"* }
%"class.blink::Member.44" = type { %"class.blink::MemberBase.45" }
%"class.blink::MemberBase.45" = type { %"class.blink::IDBOpenDBRequest"* }
%"class.blink::IDBOpenDBRequest" = type opaque
%"class.WTF::HashSet.46" = type { %"class.WTF::HashTable.47" }
%"class.WTF::HashTable.47" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.50" = type { %"class.blink::MemberBase.51" }
%"class.blink::MemberBase.51" = type { %"class.blink::DOMException"* }
%"class.blink::DOMException" = type { %"class.blink::ScriptWrappable", i16, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.54", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.54" = type { %"class.WTF::HashTable.55" }
%"class.WTF::HashTable.55" = type <{ %"struct.WTF::KeyValuePair.57"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.57" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.58", i32, i32 }
%"class.WTF::Vector.58" = type { %"class.WTF::VectorBuffer.59" }
%"class.WTF::VectorBuffer.59" = type { %"class.WTF::VectorBufferBase.60" }
%"class.WTF::VectorBufferBase.60" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::IDBRequestQueueItem, std::__1::default_delete<blink::IDBRequestQueueItem> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::IDBRequestQueueItem, std::__1::default_delete<blink::IDBRequestQueueItem> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.64" }
%"class.WTF::VectorBuffer.64" = type { %"class.WTF::VectorBufferBase.65" }
%"class.WTF::VectorBufferBase.65" = type { %"class.std::__1::unique_ptr.66"*, i32, i32 }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.blink::IDBRequestQueueItem"* }
%"class.blink::IDBRequestQueueItem" = type opaque
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.74" }
%"class.WTF::HashMap.74" = type { %"class.WTF::HashTable.75" }
%"class.WTF::HashTable.75" = type <{ %"struct.WTF::KeyValuePair.77"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.77" = type opaque
%"class.blink::HeapHashMap.78" = type { %"class.WTF::HashMap.81" }
%"class.WTF::HashMap.81" = type { %"class.WTF::HashTable.82" }
%"class.WTF::HashTable.82" = type <{ %"struct.WTF::KeyValuePair.84"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.84" = type opaque
%"class.WTF::Vector.85" = type { %"class.WTF::VectorBuffer.86" }
%"class.WTF::VectorBuffer.86" = type { %"class.WTF::VectorBufferBase.87" }
%"class.WTF::VectorBufferBase.87" = type { %class.scoped_refptr.16*, i32, i32 }
%"class.blink::HeapVector.90" = type { %"class.WTF::Vector.93" }
%"class.WTF::Vector.93" = type { %"class.WTF::VectorBuffer.94" }
%"class.WTF::VectorBuffer.94" = type { %"class.WTF::VectorBufferBase.95" }
%"class.WTF::VectorBufferBase.95" = type { %"class.blink::Member.96"*, i32, i32 }
%"class.blink::Member.96" = type { %"class.blink::MemberBase.97" }
%"class.blink::MemberBase.97" = type { %"class.blink::IDBIndex"* }
%"class.blink::IDBIndex" = type <{ %"class.blink::ScriptWrappable", %class.scoped_refptr.137, %"class.blink::Member.140", %"class.blink::Member.33", i8, [7 x i8] }>
%"class.blink::Member.140" = type { %"class.blink::MemberBase.141" }
%"class.blink::MemberBase.141" = type { %"class.blink::IDBObjectStore"* }
%"class.blink::IDBObjectStore" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.16, %"class.blink::Member.33", i8, [7 x i8], %"class.blink::HeapHashMap.142" }
%"class.blink::HeapHashMap.142" = type { %"class.WTF::HashMap.145" }
%"class.WTF::HashMap.145" = type { %"class.WTF::HashTable.146" }
%"class.WTF::HashTable.146" = type <{ %"struct.WTF::KeyValuePair.148"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.148" = type opaque
%"class.blink::HeapHashMap.128" = type { %"class.WTF::HashMap.131" }
%"class.WTF::HashMap.131" = type { %"class.WTF::HashTable.132" }
%"class.WTF::HashTable.132" = type <{ %"struct.WTF::KeyValuePair.134"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.134" = type { i64, %"class.blink::Member.33" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.blink::Member.99" = type { %"class.blink::MemberBase.100" }
%"class.blink::MemberBase.100" = type { %"class.blink::EventQueue"* }
%"class.blink::EventQueue" = type <{ %"class.blink::ExecutionContextLifecycleObserver.base", i8, [3 x i8], %"class.blink::HeapLinkedHashSet.103", i8, [7 x i8] }>
%"class.blink::HeapLinkedHashSet.103" = type { %"class.WTF::LinkedHashSet.106" }
%"class.WTF::LinkedHashSet.106" = type { %"class.WTF::HashMap.107", %"class.WTF::VectorBackedLinkedList.111" }
%"class.WTF::HashMap.107" = type { %"class.WTF::HashTable.108" }
%"class.WTF::HashTable.108" = type <{ %"struct.WTF::KeyValuePair.110"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.110" = type opaque
%"class.WTF::VectorBackedLinkedList.111" = type { %"class.WTF::Vector.112", i32, i32 }
%"class.WTF::Vector.112" = type { %"class.WTF::VectorBuffer.113" }
%"class.WTF::VectorBuffer.113" = type { %"class.WTF::VectorBufferBase.114" }
%"class.WTF::VectorBufferBase.114" = type { %"class.WTF::VectorBackedLinkedListNode.115"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.115" = type opaque
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.135" }
%"class.blink::Member.135" = type { %"class.blink::MemberBase.136" }
%"class.blink::MemberBase.136" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::IDBDatabaseCallbacks, blink::IDBDatabase, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::IDBDatabaseCallbacks, blink::IDBDatabase, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.42", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::IDBDatabaseCallbacksStub", %"class.base::WeakPtrFactory.611" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.467" }
%"class.std::__1::unique_ptr.467" = type { %"class.std::__1::__compressed_pair.468" }
%"class.std::__1::__compressed_pair.468" = type { %"struct.std::__1::__compressed_pair_elem.469" }
%"struct.std::__1::__compressed_pair_elem.469" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback", %"class.absl::optional.472", %"class.absl::optional.477", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.489", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map", %"class.std::__1::map.519", i64, %"class.base::OnceCallback.483", %"class.base::OnceCallback.528", i8, %class.scoped_refptr.224, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.529" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.470 }
%class.scoped_refptr.470 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.471", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.471" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.118" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.472" = type { %"class.absl::optional_internal::optional_data.473" }
%"class.absl::optional_internal::optional_data.473" = type { %"class.absl::optional_internal::optional_data_base.474" }
%"class.absl::optional_internal::optional_data_base.474" = type { %"class.absl::optional_internal::optional_data_dtor_base.475" }
%"class.absl::optional_internal::optional_data_dtor_base.475" = type { i8, %union.anon.476 }
%union.anon.476 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.477" = type { %"class.absl::optional_internal::optional_data.478" }
%"class.absl::optional_internal::optional_data.478" = type { %"class.absl::optional_internal::optional_data_base.479" }
%"class.absl::optional_internal::optional_data_base.479" = type { %"class.absl::optional_internal::optional_data_dtor_base.480" }
%"class.absl::optional_internal::optional_data_dtor_base.480" = type { i8, %union.anon.481 }
%union.anon.481 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback.483" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.224, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.482" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type opaque
%"class.base::WeakPtrFactory.482" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.223 }
%class.scoped_refptr.223 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.123" }
%"struct.std::__1::atomic.123" = type { %"struct.std::__1::__atomic_base.124" }
%"struct.std::__1::__atomic_base.124" = type { %"struct.std::__1::__atomic_base.125" }
%"struct.std::__1::__atomic_base.125" = type { %"struct.std::__1::__cxx_atomic_impl.126" }
%"struct.std::__1::__cxx_atomic_impl.126" = type { %"struct.std::__1::__cxx_atomic_base_impl.127" }
%"struct.std::__1::__cxx_atomic_base_impl.127" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.488 }
%class.scoped_refptr.488 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.542", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.224, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.542" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.217 }
%class.scoped_refptr.217 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.489" = type { %"class.std::__1::__compressed_pair.490" }
%"class.std::__1::__compressed_pair.490" = type { %"struct.std::__1::__compressed_pair_elem.491" }
%"struct.std::__1::__compressed_pair_elem.491" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.492", %class.scoped_refptr.493 }
%"class.base::RepeatingCallback.492" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.493 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.494", [4 x i8] }>
%"class.base::RefCountedThreadSafe.494" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.498", %"class.std::__1::unique_ptr.504", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.510" }
%"class.std::__1::unique_ptr.498" = type { %"class.std::__1::__compressed_pair.499" }
%"class.std::__1::__compressed_pair.499" = type { %"struct.std::__1::__compressed_pair_elem.500" }
%"struct.std::__1::__compressed_pair_elem.500" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.504" = type { %"class.std::__1::__compressed_pair.505" }
%"class.std::__1::__compressed_pair.505" = type { %"struct.std::__1::__compressed_pair_elem.506" }
%"struct.std::__1::__compressed_pair_elem.506" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.510" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.511", %"class.std::__1::__compressed_pair.516" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.512" }
%"struct.std::__1::__compressed_pair_elem.512" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.516" = type { %"struct.std::__1::__compressed_pair_elem.328" }
%"class.std::__1::map.519" = type { %"class.std::__1::__tree.520" }
%"class.std::__1::__tree.520" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.521", %"class.std::__1::__compressed_pair.525" }
%"class.std::__1::__compressed_pair.521" = type { %"struct.std::__1::__compressed_pair_elem.512" }
%"class.std::__1::__compressed_pair.525" = type { %"struct.std::__1::__compressed_pair_elem.328" }
%"class.base::OnceCallback.483" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.528" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.224 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.225" }>
%"class.base::RefCountedThreadSafe.225" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback.483" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.529" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::IDBDatabaseCallbacksStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::IDBDatabaseCallbacks"* }
%"class.base::WeakPtrFactory.611" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.117 }
%class.scoped_refptr.117 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.186", i32, i8, [3 x i8], %"class.blink::HeapVector.188", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.196", %"class.blink::Member.198", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.207", %"class.blink::Member.213", %"class.blink::Member.215", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.149" }
%"class.blink::HeapHashMap.149" = type { %"class.WTF::HashMap.152" }
%"class.WTF::HashMap.152" = type { %"class.WTF::HashTable.153" }
%"class.WTF::HashTable.153" = type <{ %"struct.WTF::KeyValuePair.155"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.155" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.156" }
%"class.blink::Supplementable.156" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.157" }
%"class.blink::HeapHashMap.157" = type { %"class.WTF::HashMap.160" }
%"class.WTF::HashMap.160" = type { %"class.WTF::HashTable.161" }
%"class.WTF::HashTable.161" = type <{ %"struct.WTF::KeyValuePair.163"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.163" = type { i8*, %"class.blink::Member.605" }
%"class.blink::Member.605" = type { %"class.blink::MemberBase.606" }
%"class.blink::MemberBase.606" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.607" }
%"class.blink::Member.607" = type { %"class.blink::MemberBase.608" }
%"class.blink::MemberBase.608" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.164, %"class.std::__1::unique_ptr.168", %"class.std::__1::unique_ptr.168", %"class.std::__1::unique_ptr.174", %"class.std::__1::unique_ptr.174", %"class.blink::Member.180", i32, [4 x i8], %"class.WTF::HashSet.182", i32, i32 }
%class.scoped_refptr.164 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.165", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.167 }
%"class.WTF::RefCounted.165" = type { %"class.base::RefCounted.166" }
%"class.base::RefCounted.166" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.167 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.168" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.174" = type { %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.180" = type { %"class.blink::MemberBase.181" }
%"class.blink::MemberBase.181" = type { %"class.blink::ExecutionContext"* }
%"class.WTF::HashSet.182" = type { %"class.WTF::HashTable.183" }
%"class.WTF::HashTable.183" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.186" = type { %"class.blink::MemberBase.187" }
%"class.blink::MemberBase.187" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.188" = type { %"class.WTF::Vector.191" }
%"class.WTF::Vector.191" = type { %"class.WTF::VectorBuffer.192" }
%"class.WTF::VectorBuffer.192" = type { %"class.WTF::VectorBufferBase.193" }
%"class.WTF::VectorBufferBase.193" = type { %"class.blink::Member.194"*, i32, i32 }
%"class.blink::Member.194" = type opaque
%"class.blink::Member.196" = type { %"class.blink::MemberBase.197" }
%"class.blink::MemberBase.197" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.198" = type { %"class.blink::MemberBase.199" }
%"class.blink::MemberBase.199" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.200", i32, i32 }
%"class.blink::HeapHashMap.200" = type { %"class.WTF::HashMap.203" }
%"class.WTF::HashMap.203" = type { %"class.WTF::HashTable.204" }
%"class.WTF::HashTable.204" = type <{ %"struct.WTF::KeyValuePair.206"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.206" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.213" = type { %"class.blink::MemberBase.214" }
%"class.blink::MemberBase.214" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.215" = type { %"class.blink::MemberBase.216" }
%"class.blink::MemberBase.216" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::WebIDBDatabase" = type { i32 (...)** }
%"class.mojo::PendingAssociatedReceiver" = type { %"class.mojo::ScopedInterfaceEndpointHandle" }
%"class.blink::ExecutionContextLifecycleObserver" = type <{ %"class.blink::ContextLifecycleObserver", i32, [4 x i8] }>
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.218", %"class.base::WeakPtrFactory" }
%"class.WTF::HashMap.218" = type { %"class.WTF::HashTable.219" }
%"class.WTF::HashTable.219" = type <{ %"struct.WTF::KeyValuePair.222"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.222" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.blink::DummyExceptionStateForTesting" = type { %"class.blink::ExceptionState" }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.415" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.415" = type { %"class.v8::TracedReference.416" }
%"class.v8::TracedReference.416" = type { %"class.v8::BasicTracedReference.417" }
%"class.v8::BasicTracedReference.417" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.423", %"class.blink::Member.423", %"class.blink::Member.425", %"class.blink::Member.427", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.418" }
%"class.absl::optional.418" = type { %"class.absl::optional_internal::optional_data.419" }
%"class.absl::optional_internal::optional_data.419" = type { %"class.absl::optional_internal::optional_data_base.420" }
%"class.absl::optional_internal::optional_data_base.420" = type { %"class.absl::optional_internal::optional_data_dtor_base.421" }
%"class.absl::optional_internal::optional_data_dtor_base.421" = type { i8, %union.anon.422 }
%union.anon.422 = type { i64 }
%"class.blink::Member.423" = type { %"class.blink::MemberBase.424" }
%"class.blink::MemberBase.424" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.425" = type { %"class.blink::MemberBase.426" }
%"class.blink::MemberBase.426" = type { %"class.blink::Event"* }
%"class.blink::Member.427" = type { %"class.blink::MemberBase.428" }
%"class.blink::MemberBase.428" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.v8::internal::Isolate" = type opaque
%"class.v8::Value" = type { i8 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.blink::IDBVersionChangeEvent" = type { %"class.blink::Event", i64, %"class.absl::optional.418", i32, %"class.WTF::String" }
%"class.blink::DOMStringList" = type { %"class.blink::ScriptWrappable", %"class.WTF::Vector.17" }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.433, %"class.blink::Member.447", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.433 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.447" = type { %"class.blink::MemberBase.448" }
%"class.blink::MemberBase.448" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.449" }
%"class.blink::Persistent.449" = type { %"class.blink::PersistentBase.450" }
%"class.blink::PersistentBase.450" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.blink::V8UnionStringOrStringSequence" = type { %"class.blink::bindings::UnionBase", i32, %"class.WTF::String", %"class.WTF::Vector.17" }
%"class.blink::bindings::UnionBase" = type { i32 (...)** }
%"class.blink::IDBTransactionOptions" = type { %"class.blink::IDLDictionaryBase", %"class.WTF::String" }
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.WTF::Vector.456" = type { %"class.WTF::VectorBuffer.457" }
%"class.WTF::VectorBuffer.457" = type { %"class.WTF::VectorBufferBase.458" }
%"class.WTF::VectorBufferBase.458" = type { i64*, i32, i32 }
%"class.WTF::StringAppend" = type { %"class.WTF::StringAppend.463", i8* }
%"class.WTF::StringAppend.463" = type { i8*, %"class.WTF::String" }
%"class.mojo::PendingAssociatedReceiver.543" = type { %"class.mojo::ScopedInterfaceEndpointHandle" }
%"class.blink::WebIDBTransactionImpl" = type { %"class.blink::WebIDBTransaction", i64, %"class.mojo::AssociatedRemote", %class.scoped_refptr.224, i64 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.533" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.467", i32 }>
%"class.std::__1::unique_ptr.533" = type { %"class.std::__1::__compressed_pair.534" }
%"class.std::__1::__compressed_pair.534" = type { %"struct.std::__1::__compressed_pair_elem.535" }
%"struct.std::__1::__compressed_pair_elem.535" = type { %"class.blink::mojom::blink::IDBTransactionProxy"* }
%"class.blink::mojom::blink::IDBTransactionProxy" = type { %"class.blink::mojom::blink::IDBTransaction", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::IDBTransaction" = type { i32 (...)** }
%"class.WTF::StringTypeAdapter.730" = type <{ i8*, i32, [4 x i8] }>
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.616 }
%union.anon.616 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.546", %"class.blink::Member.548", %"class.blink::Member.546", %"class.blink::Member.546", %"class.blink::Member.550" }
%"class.blink::Member.548" = type { %"class.blink::MemberBase.549" }
%"class.blink::MemberBase.549" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.554", %"class.blink::Member.556", %"class.blink::Member.548", %"class.blink::Member.558", %"class.blink::Member.558", %"class.blink::Member.582", %"class.blink::Member.584", %"class.blink::Member.586", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.591", %"class.blink::HeapVector.593" }
%"class.blink::Member.554" = type { %"class.blink::MemberBase.555" }
%"class.blink::MemberBase.555" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type opaque
%"class.blink::Member.556" = type { %"class.blink::MemberBase.557" }
%"class.blink::MemberBase.557" = type { %"class.blink::Document"* }
%"class.blink::Document" = type opaque
%"class.blink::Member.558" = type { %"class.blink::MemberBase.559" }
%"class.blink::MemberBase.559" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.562" }
%"class.blink::HeapHashMap.562" = type { %"class.WTF::HashMap.565" }
%"class.WTF::HashMap.565" = type { %"class.WTF::HashTable.566" }
%"class.WTF::HashTable.566" = type <{ %"struct.WTF::KeyValuePair.568"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.568" = type { %"class.WTF::AtomicString", %"class.blink::Member.569" }
%"class.blink::Member.569" = type { %"class.blink::MemberBase.570" }
%"class.blink::MemberBase.570" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.573", i32, %"class.blink::HeapVector.575" }
%"class.blink::Member.573" = type { %"class.blink::MemberBase.574" }
%"class.blink::MemberBase.574" = type { %"class.blink::Element"* }
%"class.blink::Element" = type opaque
%"class.blink::HeapVector.575" = type { %"class.WTF::Vector.578" }
%"class.WTF::Vector.578" = type { %"class.WTF::VectorBuffer.579" }
%"class.WTF::VectorBuffer.579" = type { %"class.WTF::VectorBufferBase.580" }
%"class.WTF::VectorBufferBase.580" = type { %"class.blink::Member.573"*, i32, i32 }
%"class.blink::Member.582" = type { %"class.blink::MemberBase.583" }
%"class.blink::MemberBase.583" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.584" = type { %"class.blink::MemberBase.585" }
%"class.blink::MemberBase.585" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.586" = type { %"class.blink::MemberBase.587" }
%"class.blink::MemberBase.587" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.588" }
%"class.blink::Member.588" = type { %"class.blink::MemberBase.589" }
%"class.blink::MemberBase.589" = type { %"class.blink::HeapHashMap.590"* }
%"class.blink::HeapHashMap.590" = type opaque
%"class.blink::Member.591" = type { %"class.blink::MemberBase.592" }
%"class.blink::MemberBase.592" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.593" = type { %"class.WTF::Vector.596" }
%"class.WTF::Vector.596" = type { %"class.WTF::VectorBuffer.597" }
%"class.WTF::VectorBuffer.597" = type { %"class.WTF::VectorBufferBase.598" }
%"class.WTF::VectorBufferBase.598" = type { %"class.blink::Member.599"*, i32, i32 }
%"class.blink::Member.599" = type opaque
%"class.blink::Member.546" = type { %"class.blink::MemberBase.547" }
%"class.blink::MemberBase.547" = type { %"class.blink::Node"* }
%"class.blink::Member.550" = type { %"class.blink::MemberBase.551" }
%"class.blink::MemberBase.551" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::DOMWindow" = type opaque
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::MessagePort" = type opaque
%"class.blink::ServiceWorker" = type opaque
%"class.blink::PortalHost" = type opaque
%"class.blink::EventListener" = type { %"class.blink::NameClient", %"class.blink::probe::AsyncTaskId" }
%"class.blink::AddEventListenerOptionsResolved" = type opaque
%"class.blink::RegisteredEventListener" = type <{ %"class.blink::Member.603", i8, [7 x i8] }>
%"class.blink::Member.603" = type { %"class.blink::MemberBase.604" }
%"class.blink::MemberBase.604" = type { %"class.blink::EventListener"* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.225", [4 x i8] }>
%"class.mojo::Message" = type { %"class.mojo::ScopedHandleBase.673", %"class.mojo::internal::Buffer", %"class.std::__1::vector.674", %"class.std::__1::vector.682", %"class.mojo::ConnectionGroup::Ref"*, i8, i8, i8* }
%"class.mojo::ScopedHandleBase.673" = type { %"class.mojo::MessageHandle" }
%"class.mojo::MessageHandle" = type { i64 }
%"class.mojo::internal::Buffer" = type { %"class.mojo::MessageHandle", i64, i8*, i64, i64 }
%"class.std::__1::vector.674" = type { %"class.std::__1::__vector_base.675" }
%"class.std::__1::__vector_base.675" = type { %"class.mojo::ScopedHandleBase.676"*, %"class.mojo::ScopedHandleBase.676"*, %"class.std::__1::__compressed_pair.677" }
%"class.mojo::ScopedHandleBase.676" = type { %"class.mojo::Handle" }
%"class.std::__1::__compressed_pair.677" = type { %"struct.std::__1::__compressed_pair_elem.678" }
%"struct.std::__1::__compressed_pair_elem.678" = type { %"class.mojo::ScopedHandleBase.676"* }
%"class.std::__1::vector.682" = type { %"class.std::__1::__vector_base.683" }
%"class.std::__1::__vector_base.683" = type { %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.std::__1::__compressed_pair.684" }
%"class.std::__1::__compressed_pair.684" = type { %"struct.std::__1::__compressed_pair_elem.685" }
%"struct.std::__1::__compressed_pair_elem.685" = type { %"class.mojo::ScopedInterfaceEndpointHandle"* }
%"class.mojo::MessageReceiverWithStatus" = type { %"class.mojo::MessageReceiver" }
%"class.blink::HeapHashTableBacking" = type { i8 }
%"class.WTF::StringTypeAdapter.731" = type { %"class.WTF::StringTypeAdapter.732" }
%"class.WTF::StringTypeAdapter.732" = type { %"class.WTF::StringView" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>

$_ZNK5blink25EventTargetWithInlineData5TraceEPNS_7VisitorE = comdat any

$_ZNK3WTF7HashMapIlN5blink6MemberINS1_14IDBTransactionEEENS_7IntHashIlEENS_10HashTraitsIlEENS7_IS4_EENS1_13HeapAllocatorEE2atERKl = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev = comdat any

$_ZN5blink22FrameOrWorkerScheduler32SchedulingAffectingFeatureHandle5resetEv = comdat any

$_ZNK5blink11EventTarget17HasEventListenersEv = comdat any

$_ZNK5blink11IDBDatabase18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE = comdat any

$_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv = comdat any

$_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv = comdat any

$_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv = comdat any

$_ZNK5blink21ActiveScriptWrappableINS_11IDBDatabaseEE18IsContextDestroyedEv = comdat any

$_ZNK5blink21ActiveScriptWrappableINS_11IDBDatabaseEE26DispatchHasPendingActivityEv = comdat any

$_ZNK5blink33ExecutionContextLifecycleObserver35IsExecutionContextLifecycleObserverEv = comdat any

$_ZN5blink25EventTargetWithInlineDataD2Ev = comdat any

$_ZN5blink25EventTargetWithInlineDataD0Ev = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink11EventTarget18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink21GarbageCollectedMixin5TraceEPNS_7VisitorE = comdat any

$_ZN5blink25ActiveScriptWrappableBaseD2Ev = comdat any

$_ZN5blink21ActiveScriptWrappableINS_11IDBDatabaseEED0Ev = comdat any

$_ZN3WTF9HashTableIlNS_12KeyValuePairIl13scoped_refptrIN5blink22IDBObjectStoreMetadataEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS_18PartitionAllocatorEEaSERKSG_ = comdat any

$_ZN3WTF9HashTableIlNS_12KeyValuePairIl13scoped_refptrIN5blink22IDBObjectStoreMetadataEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj = comdat any

$_ZN3WTF9HashTableIlNS_12KeyValuePairIl13scoped_refptrIN5blink22IDBObjectStoreMetadataEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSH_ = comdat any

$_ZN3WTF9HashTableIlNS_12KeyValuePairIl13scoped_refptrIN5blink22IDBObjectStoreMetadataEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE16LookupForWritingERKl = comdat any

$_ZN3WTF9HashTableIlNS_12KeyValuePairIl13scoped_refptrIN5blink22IDBObjectStoreMetadataEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS9_SE_SF_EERKlRKS6_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIlNS_12KeyValuePairIl13scoped_refptrIN5blink22IDBObjectStoreMetadataEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_10EventQueueEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_10EventQueueEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_10EventQueueEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_10EventQueueEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_26HeapMojoAssociatedReceiverINS_5mojom5blink20IDBDatabaseCallbacksENS_11IDBDatabaseELNS_19HeapMojoWrapperModeE0EE7WrapperEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_26HeapMojoAssociatedReceiverINS_5mojom5blink20IDBDatabaseCallbacksENS_11IDBDatabaseELNS_19HeapMojoWrapperModeE0EE7WrapperEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_26HeapMojoAssociatedReceiverINS_5mojom5blink20IDBDatabaseCallbacksENS_11IDBDatabaseELNS_19HeapMojoWrapperModeE0EE7WrapperEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_26HeapMojoAssociatedReceiverINS_5mojom5blink20IDBDatabaseCallbacksENS_11IDBDatabaseELNS_19HeapMojoWrapperModeE0EE7WrapperEE7GetNameEPKv = comdat any

$_ZNK5blink26HeapMojoAssociatedReceiverINS_5mojom5blink20IDBDatabaseCallbacksENS_11IDBDatabaseELNS_19HeapMojoWrapperModeE0EE7Wrapper5TraceEPNS_7VisitorE = comdat any

$_ZN5blink10TraceTraitINS_11IDBDatabaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink26HeapMojoAssociatedReceiverINS_5mojom5blink20IDBDatabaseCallbacksENS_11IDBDatabaseELNS_19HeapMojoWrapperModeE0EE7WrapperD2Ev = comdat any

$_ZN5blink26HeapMojoAssociatedReceiverINS_5mojom5blink20IDBDatabaseCallbacksENS_11IDBDatabaseELNS_19HeapMojoWrapperModeE0EE7WrapperD0Ev = comdat any

$_ZNK5blink24ContextLifecycleObserver35IsExecutionContextLifecycleObserverEv = comdat any

$_ZN5blink26HeapMojoAssociatedReceiverINS_5mojom5blink20IDBDatabaseCallbacksENS_11IDBDatabaseELNS_19HeapMojoWrapperModeE0EE7Wrapper16ContextDestroyedEv = comdat any

$_ZN5blink11ThreadState24PrefinalizerRegistrationINS_26HeapMojoAssociatedReceiverINS_5mojom5blink20IDBDatabaseCallbacksENS_11IDBDatabaseELNS_19HeapMojoWrapperModeE0EE7WrapperEEC2EPS9_ = comdat any

$_ZN5blink26HeapMojoAssociatedReceiverINS_5mojom5blink20IDBDatabaseCallbacksENS_11IDBDatabaseELNS_19HeapMojoWrapperModeE0EE7Wrapper18InvokePreFinalizerERKNS_14LivenessBrokerEPv = comdat any

$_ZN3WTF5DequeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES3_EEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES4_EEEEEmm = comdat any

$_ZN5blink5mojom5blink24IDBDatabaseCallbacksStubIN4mojo19RawPtrImplRefTraitsINS1_20IDBDatabaseCallbacksEEEED0Ev = comdat any

$_ZN5blink5mojom5blink24IDBDatabaseCallbacksStubIN4mojo19RawPtrImplRefTraitsINS1_20IDBDatabaseCallbacksEEEE6AcceptEPNS3_7MessageE = comdat any

$_ZN5blink5mojom5blink24IDBDatabaseCallbacksStubIN4mojo19RawPtrImplRefTraitsINS1_20IDBDatabaseCallbacksEEEE19AcceptWithResponderEPNS3_7MessageENSt3__110unique_ptrINS3_25MessageReceiverWithStatusENSA_14default_deleteISC_EEEE = comdat any

$_ZN4mojo15MessageReceiverD2Ev = comdat any

$_ZN4mojo18AssociatedReceiverIN5blink5mojom5blink20IDBDatabaseCallbacksENS_19RawPtrImplRefTraitsIS4_EEE4BindENS_25PendingAssociatedReceiverIS4_EE13scoped_refptrIN4base19SequencedTaskRunnerEE = comdat any

$_ZN5blink10TraceTraitINS_14IDBTransactionEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIlNS2_12KeyValuePairIlNS_6MemberINS_14IDBTransactionEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIlEENS2_18HashMapValueTraitsINS2_10HashTraitsIlEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink6MemberINS2_14IDBTransactionEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EElRPS4_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink6MemberINS2_14IDBTransactionEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE6ExpandEPS6_ = comdat any

$_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink6MemberINS2_14IDBTransactionEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE12ExpandBufferEjPS6_Rb = comdat any

$_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink6MemberINS2_14IDBTransactionEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE8RehashToEPS6_jSH_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableIlNS2_12KeyValuePairIlNS_6MemberINS_14IDBTransactionEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIlEENS2_18HashMapValueTraitsINS2_10HashTraitsIlEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableIlNS1_12KeyValuePairIlNS_6MemberINS_14IDBTransactionEEEEENS1_24KeyValuePairKeyExtractorENS1_7IntHashIlEENS1_18HashMapValueTraitsINS1_10HashTraitsIlEENSC_IS6_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableIlNS2_12KeyValuePairIlNS_6MemberINS_14IDBTransactionEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIlEENS2_18HashMapValueTraitsINS2_10HashTraitsIlEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink6MemberINS2_14IDBTransactionEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE16LookupForWritingERKl = comdat any

$_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink6MemberINS2_14IDBTransactionEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE5eraseEPKS6_ = comdat any

$_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink6MemberINS2_14IDBTransactionEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE4findERKl = comdat any

$_ZN5blink13DOMStringListD2Ev = comdat any

$_ZN5blink13DOMStringListD0Ev = comdat any

$_ZNK5blink15ScriptWrappable17HasEventListenersEv = comdat any

$_ZNK5blink13DOMStringList18GetWrapperTypeInfoEv = comdat any

$_ZNK3WTF9HashTableIlNS_12KeyValuePairIl13scoped_refptrIN5blink22IDBObjectStoreMetadataEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE4findERKl = comdat any

$_ZN5blink22IDBObjectStoreMetadataD2Ev = comdat any

$_ZN5blink16IDBIndexMetadataD2Ev = comdat any

$_ZN3WTF9HashTableIlNS_12KeyValuePairIl13scoped_refptrIN5blink22IDBObjectStoreMetadataEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERlS5_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIlNS_12KeyValuePairIl13scoped_refptrIN5blink22IDBObjectStoreMetadataEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE5eraseEPKS6_ = comdat any

$_ZN3WTF9HashTableIlNS_12KeyValuePairIl13scoped_refptrIN5blink22IDBObjectStoreMetadataEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE4findERKl = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZN3WTF6VectorIlLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRlEEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIlEEmm = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv = comdat any

$_ZTVN5blink25EventTargetWithInlineDataE = comdat any

$_ZTVN5blink21ActiveScriptWrappableINS_11IDBDatabaseEEE = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_10EventQueueEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_10EventQueueEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_26HeapMojoAssociatedReceiverINS_5mojom5blink20IDBDatabaseCallbacksENS_11IDBDatabaseELNS_19HeapMojoWrapperModeE0EE7WrapperEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_26HeapMojoAssociatedReceiverINS_5mojom5blink20IDBDatabaseCallbacksENS_11IDBDatabaseELNS_19HeapMojoWrapperModeE0EE7WrapperEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink26HeapMojoAssociatedReceiverINS_5mojom5blink20IDBDatabaseCallbacksENS_11IDBDatabaseELNS_19HeapMojoWrapperModeE0EE7WrapperE = comdat any

$_ZTVN5blink5mojom5blink24IDBDatabaseCallbacksStubIN4mojo19RawPtrImplRefTraitsINS1_20IDBDatabaseCallbacksEEEEE = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIlNS2_12KeyValuePairIlNS_6MemberINS_14IDBTransactionEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIlEENS2_18HashMapValueTraitsINS2_10HashTraitsIlEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIlNS2_12KeyValuePairIlNS_6MemberINS_14IDBTransactionEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIlEENS2_18HashMapValueTraitsINS2_10HashTraitsIlEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink13DOMStringListE = comdat any

@_ZN5blink11IDBDatabase25kIndexDeletedErrorMessageE = hidden local_unnamed_addr constant [48 x i8] c"The index or its object store has been deleted.\00", align 16
@_ZN5blink11IDBDatabase27kIndexNameTakenErrorMessageE = hidden local_unnamed_addr constant [49 x i8] c"An index with the specified name already exists.\00", align 16
@_ZN5blink11IDBDatabase24kIsKeyCursorErrorMessageE = hidden local_unnamed_addr constant [28 x i8] c"The cursor is a key cursor.\00", align 16
@_ZN5blink11IDBDatabase28kNoKeyOrKeyRangeErrorMessageE = hidden local_unnamed_addr constant [31 x i8] c"No key or key range specified.\00", align 16
@_ZN5blink11IDBDatabase24kNoSuchIndexErrorMessageE = hidden local_unnamed_addr constant [35 x i8] c"The specified index was not found.\00", align 16
@_ZN5blink11IDBDatabase30kNoSuchObjectStoreErrorMessageE = hidden local_unnamed_addr constant [42 x i8] c"The specified object store was not found.\00", align 16
@_ZN5blink11IDBDatabase20kNoValueErrorMessageE = hidden local_unnamed_addr constant [59 x i8] c"The cursor is being iterated or has iterated past its end.\00", align 16
@_ZN5blink11IDBDatabase24kNotValidKeyErrorMessageE = hidden local_unnamed_addr constant [34 x i8] c"The parameter is not a valid key.\00", align 16
@_ZN5blink11IDBDatabase40kNotVersionChangeTransactionErrorMessageE = hidden constant [58 x i8] c"The database is not running a version change transaction.\00", align 16
@_ZN5blink11IDBDatabase31kObjectStoreDeletedErrorMessageE = hidden local_unnamed_addr constant [35 x i8] c"The object store has been deleted.\00", align 16
@_ZN5blink11IDBDatabase33kObjectStoreNameTakenErrorMessageE = hidden constant [56 x i8] c"An object store with the specified name already exists.\00", align 16
@_ZN5blink11IDBDatabase31kRequestNotFinishedErrorMessageE = hidden local_unnamed_addr constant [30 x i8] c"The request has not finished.\00", align 16
@_ZN5blink11IDBDatabase26kSourceDeletedErrorMessageE = hidden local_unnamed_addr constant [64 x i8] c"The cursor's source or effective object store has been deleted.\00", align 16
@_ZN5blink11IDBDatabase32kTransactionInactiveErrorMessageE = hidden local_unnamed_addr constant [31 x i8] c"The transaction is not active.\00", align 16
@_ZN5blink11IDBDatabase32kTransactionFinishedErrorMessageE = hidden local_unnamed_addr constant [30 x i8] c"The transaction has finished.\00", align 16
@_ZN5blink11IDBDatabase32kTransactionReadOnlyErrorMessageE = hidden local_unnamed_addr constant [30 x i8] c"The transaction is read-only.\00", align 16
@_ZN5blink11IDBDatabase27kDatabaseClosedErrorMessageE = hidden constant [35 x i8] c"The database connection is closed.\00", align 16
@_ZTVN5blink11IDBDatabaseE = hidden unnamed_addr constant { [34 x i8*], [7 x i8*], [8 x i8*], [8 x i8*] } { [34 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::IDBDatabase"*)* @_ZN5blink11IDBDatabaseD2Ev to i8*), i8* bitcast (void (%"class.blink::IDBDatabase"*)* @_ZN5blink11IDBDatabaseD0Ev to i8*), i8* bitcast (i1 (%"class.blink::IDBDatabase"*)* @_ZNK5blink11IDBDatabase18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::IDBDatabase"*, %"class.blink::Visitor"*)* @_ZNK5blink11IDBDatabase5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::IDBDatabase"*)* @_ZNK5blink11IDBDatabase18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::IDBDatabase"*)* @_ZNK5blink11IDBDatabase13InterfaceNameEv to i8*), i8* bitcast (%"class.blink::ExecutionContext"* (%"class.blink::IDBDatabase"*)* @_ZNK5blink11IDBDatabase19GetExecutionContextEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget6ToNodeEv to i8*), i8* bitcast (%"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget11ToDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::MessagePort"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget13ToMessagePortEv to i8*), i8* bitcast (%"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget15ToServiceWorkerEv to i8*), i8* bitcast (%"class.blink::PortalHost"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget12ToPortalHostEv to i8*), i8* bitcast (void (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget23RemoveAllEventListenersEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*)* @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE to i8*), i8* bitcast (void (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink11EventTarget18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE to i8*), i8* bitcast (void (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink11EventTarget20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE to i8*), i8* bitcast (i32 (%"class.blink::IDBDatabase"*, %"class.blink::Event"*)* @_ZN5blink11IDBDatabase21DispatchEventInternalERNS_5EventE to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv to i8*), i8* bitcast (void (%"class.blink::IDBDatabase"*)* @_ZN5blink11IDBDatabase11ForcedCloseEv to i8*), i8* bitcast (void (%"class.blink::IDBDatabase"*, i64, i64)* @_ZN5blink11IDBDatabase13VersionChangeEll to i8*), i8* bitcast (void (%"class.blink::IDBDatabase"*, i64, i32, %"class.WTF::String"*)* @_ZN5blink11IDBDatabase5AbortElNS_5mojom12IDBExceptionERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::IDBDatabase"*, i64)* @_ZN5blink11IDBDatabase8CompleteEl to i8*), i8* bitcast (void (%"class.blink::IDBDatabase"*)* @_ZN5blink11IDBDatabase16ContextDestroyedEv to i8*)], [7 x i8*] [i8* inttoptr (i64 -72 to i8*), i8* null, i8* bitcast (void (%"class.blink::IDBDatabase"*, %"class.blink::Visitor"*)* @_ZThn72_NK5blink11IDBDatabase5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::IDBDatabase"*)* @_ZThn72_N5blink11IDBDatabaseD1Ev to i8*), i8* bitcast (void (%"class.blink::IDBDatabase"*)* @_ZThn72_N5blink11IDBDatabaseD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ActiveScriptWrappable"*)* @_ZNK5blink21ActiveScriptWrappableINS_11IDBDatabaseEE18IsContextDestroyedEv to i8*), i8* bitcast (i1 (%"class.blink::ActiveScriptWrappable"*)* @_ZNK5blink21ActiveScriptWrappableINS_11IDBDatabaseEE26DispatchHasPendingActivityEv to i8*)], [8 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (void (%"class.blink::IDBDatabase"*, %"class.blink::Visitor"*)* @_ZThn80_NK5blink11IDBDatabase5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::IDBDatabase"*)* @_ZThn80_N5blink11IDBDatabaseD1Ev to i8*), i8* bitcast (void (%"class.blink::IDBDatabase"*)* @_ZThn80_N5blink11IDBDatabaseD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContextLifecycleObserver"*)* @_ZNK5blink33ExecutionContextLifecycleObserver35IsExecutionContextLifecycleObserverEv to i8*), i8* bitcast (void (%"class.blink::IDBDatabase"*)* @_ZThn80_N5blink11IDBDatabase16ContextDestroyedEv to i8*), i8* bitcast (void (%"class.blink::ExecutionContextLifecycleObserver"*, %"class.blink::ExecutionContext"*)* @_ZN5blink33ExecutionContextLifecycleObserver19SetExecutionContextEPNS_16ExecutionContextE to i8*)], [8 x i8*] [i8* inttoptr (i64 -104 to i8*), i8* null, i8* bitcast (void (%"class.blink::IDBDatabase"*)* @_ZThn104_N5blink11IDBDatabaseD1Ev to i8*), i8* bitcast (void (%"class.blink::IDBDatabase"*)* @_ZThn104_N5blink11IDBDatabaseD0Ev to i8*), i8* bitcast (void (%"class.blink::IDBDatabase"*)* @_ZThn104_N5blink11IDBDatabase11ForcedCloseEv to i8*), i8* bitcast (void (%"class.blink::IDBDatabase"*, i64, i64)* @_ZThn104_N5blink11IDBDatabase13VersionChangeEll to i8*), i8* bitcast (void (%"class.blink::IDBDatabase"*, i64, i32, %"class.WTF::String"*)* @_ZThn104_N5blink11IDBDatabase5AbortElNS_5mojom12IDBExceptionERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::IDBDatabase"*, i64)* @_ZThn104_N5blink11IDBDatabase8CompleteEl to i8*)] }, align 8
@_ZZN5blink11IDBDatabase17NextTransactionIdEvE22current_transaction_id = internal global { { { i32 } } } zeroinitializer, align 4
@_ZN5blink16event_type_names6kCloseE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [29 x i8] c"IDBDatabase::onVersionChange\00", align 1
@_ZN5blink16event_type_names14kVersionchangeE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.1 = private unnamed_addr constant [31 x i8] c"IDBDatabase::createObjectStore\00", align 1
@.str.2 = private unnamed_addr constant [44 x i8] c"The keyPath option is not a valid key path.\00", align 1
@.str.3 = private unnamed_addr constant [79 x i8] c"The autoIncrement option was set but the keyPath option was empty or an array.\00", align 1
@.str.4 = private unnamed_addr constant [31 x i8] c"IDBDatabase::deleteObjectStore\00", align 1
@.str.6 = private unnamed_addr constant [25 x i8] c"IDBDatabase::transaction\00", align 1
@.str.7 = private unnamed_addr constant [41 x i8] c"A version change transaction is running.\00", align 1
@.str.8 = private unnamed_addr constant [36 x i8] c"The database connection is closing.\00", align 1
@.str.9 = private unnamed_addr constant [36 x i8] c"The storeNames parameter was empty.\00", align 1
@.str.10 = private unnamed_addr constant [50 x i8] c"One of the specified object stores was not found.\00", align 1
@.str.11 = private unnamed_addr constant [21 x i8] c"The mode provided ('\00", align 1
@.str.12 = private unnamed_addr constant [44 x i8] c"') is not one of 'readonly' or 'readwrite'.\00", align 1
@_ZN5blink16indexed_db_names8kRelaxedE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16indexed_db_names7kStrictE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.13 = private unnamed_addr constant [19 x i8] c"IDBDatabase::close\00", align 1
@.str.14 = private unnamed_addr constant [13 x i8] c"EnqueueEvent\00", align 1
@.str.15 = private unnamed_addr constant [67 x i8] c"../../third_party/blink/renderer/modules/indexeddb/idb_database.cc\00", align 1
@.str.16 = private unnamed_addr constant [27 x i8] c"IDBDatabase::dispatchEvent\00", align 1
@_ZN5blink18event_target_names12kIDBDatabaseE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZTVN5blink25EventTargetWithInlineDataE = linkonce_odr hidden unnamed_addr constant { [29 x i8*] } { [29 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineDataD2Ev to i8*), i8* bitcast (void (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineDataD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::EventTargetWithInlineData"*, %"class.blink::Visitor"*)* @_ZNK5blink25EventTargetWithInlineData5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget6ToNodeEv to i8*), i8* bitcast (%"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget11ToDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::MessagePort"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget13ToMessagePortEv to i8*), i8* bitcast (%"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget15ToServiceWorkerEv to i8*), i8* bitcast (%"class.blink::PortalHost"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget12ToPortalHostEv to i8*), i8* bitcast (void (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget23RemoveAllEventListenersEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*)* @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE to i8*), i8* bitcast (void (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink11EventTarget18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE to i8*), i8* bitcast (void (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink11EventTarget20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE to i8*), i8* bitcast (i32 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZN5blink11EventTarget21DispatchEventInternalERNS_5EventE to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv to i8*)] }, comdat, align 8
@.str.17 = private unnamed_addr constant [23 x i8] c"blink_gc_plugin_ignore\00", section "llvm.metadata"
@.str.18 = private unnamed_addr constant [64 x i8] c"../../third_party/blink/renderer/core/dom/events/event_target.h\00", section "llvm.metadata"
@_ZN5blink11EventTarget18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZTVN5blink21ActiveScriptWrappableINS_11IDBDatabaseEEE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::GarbageCollectedMixin"*, %"class.blink::Visitor"*)* @_ZNK5blink21GarbageCollectedMixin5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::ActiveScriptWrappableBase"*)* @_ZN5blink25ActiveScriptWrappableBaseD2Ev to i8*), i8* bitcast (void (%"class.blink::ActiveScriptWrappable"*)* @_ZN5blink21ActiveScriptWrappableINS_11IDBDatabaseEED0Ev to i8*), i8* bitcast (i1 (%"class.blink::ActiveScriptWrappable"*)* @_ZNK5blink21ActiveScriptWrappableINS_11IDBDatabaseEE18IsContextDestroyedEv to i8*), i8* bitcast (i1 (%"class.blink::ActiveScriptWrappable"*)* @_ZNK5blink21ActiveScriptWrappableINS_11IDBDatabaseEE26DispatchHasPendingActivityEv to i8*)] }, comdat, align 8
@.str.19 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.20 = private unnamed_addr constant [39 x i8] c"!static_cast<int>( new_capacity >> 31)\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIl13scoped_refptrIN5blink22IDBObjectStoreMetadataEEEEEEPKcv = private unnamed_addr constant [118 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<long, scoped_refptr<blink::IDBObjectStoreMetadata> >]\00", align 1
@.str.21 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@_ZTVN5blink29DummyExceptionStateForTestingE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZTVN5blink14ExceptionStateE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@.str.22 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.23 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.25 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.26 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.27 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@.str.28 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.29 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1
@_ZN5blink11IDBDatabase18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10EventQueueEEEPKcv = private unnamed_addr constant [65 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::EventQueue]\00", align 1
@_ZZN5blink11GCInfoTraitINS_10EventQueueEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_10EventQueueEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_10EventQueueEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_10EventQueueEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_10EventQueueEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.30 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink26HeapMojoAssociatedReceiverINS1_5mojom5blink20IDBDatabaseCallbacksENS1_11IDBDatabaseELNS1_19HeapMojoWrapperModeE0EE7WrapperEEEPKcv = private unnamed_addr constant [203 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapMojoAssociatedReceiver<blink::mojom::blink::IDBDatabaseCallbacks, blink::IDBDatabase, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper]\00", align 1
@_ZZN5blink11GCInfoTraitINS_26HeapMojoAssociatedReceiverINS_5mojom5blink20IDBDatabaseCallbacksENS_11IDBDatabaseELNS_19HeapMojoWrapperModeE0EE7WrapperEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_26HeapMojoAssociatedReceiverINS_5mojom5blink20IDBDatabaseCallbacksENS_11IDBDatabaseELNS_19HeapMojoWrapperModeE0EE7WrapperEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_26HeapMojoAssociatedReceiverINS_5mojom5blink20IDBDatabaseCallbacksENS_11IDBDatabaseELNS_19HeapMojoWrapperModeE0EE7WrapperEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_26HeapMojoAssociatedReceiverINS_5mojom5blink20IDBDatabaseCallbacksENS_11IDBDatabaseELNS_19HeapMojoWrapperModeE0EE7WrapperEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_26HeapMojoAssociatedReceiverINS_5mojom5blink20IDBDatabaseCallbacksENS_11IDBDatabaseELNS_19HeapMojoWrapperModeE0EE7WrapperEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink26HeapMojoAssociatedReceiverINS_5mojom5blink20IDBDatabaseCallbacksENS_11IDBDatabaseELNS_19HeapMojoWrapperModeE0EE7WrapperE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::IDBDatabaseCallbacks, blink::IDBDatabase, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*, %"class.blink::Visitor"*)* @_ZNK5blink26HeapMojoAssociatedReceiverINS_5mojom5blink20IDBDatabaseCallbacksENS_11IDBDatabaseELNS_19HeapMojoWrapperModeE0EE7Wrapper5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::IDBDatabaseCallbacks, blink::IDBDatabase, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*)* @_ZN5blink26HeapMojoAssociatedReceiverINS_5mojom5blink20IDBDatabaseCallbacksENS_11IDBDatabaseELNS_19HeapMojoWrapperModeE0EE7WrapperD2Ev to i8*), i8* bitcast (void (%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::IDBDatabaseCallbacks, blink::IDBDatabase, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*)* @_ZN5blink26HeapMojoAssociatedReceiverINS_5mojom5blink20IDBDatabaseCallbacksENS_11IDBDatabaseELNS_19HeapMojoWrapperModeE0EE7WrapperD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ContextLifecycleObserver"*)* @_ZNK5blink24ContextLifecycleObserver35IsExecutionContextLifecycleObserverEv to i8*), i8* bitcast (void (%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::IDBDatabaseCallbacks, blink::IDBDatabase, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*)* @_ZN5blink26HeapMojoAssociatedReceiverINS_5mojom5blink20IDBDatabaseCallbacksENS_11IDBDatabaseELNS_19HeapMojoWrapperModeE0EE7Wrapper16ContextDestroyedEv to i8*)] }, comdat, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES3_EEEEEPKcv = private unnamed_addr constant [119 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>]\00", align 1
@_ZTVN5blink5mojom5blink24IDBDatabaseCallbacksStubIN4mojo19RawPtrImplRefTraitsINS1_20IDBDatabaseCallbacksEEEEE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.mojo::MessageReceiver"*)* @_ZN4mojo15MessageReceiverD2Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::IDBDatabaseCallbacksStub"*)* @_ZN5blink5mojom5blink24IDBDatabaseCallbacksStubIN4mojo19RawPtrImplRefTraitsINS1_20IDBDatabaseCallbacksEEEED0Ev to i8*), i8* bitcast (i1 (%"class.mojo::MessageReceiver"*)* @_ZN4mojo15MessageReceiver25PrefersSerializedMessagesEv to i8*), i8* bitcast (i1 (%"class.blink::mojom::blink::IDBDatabaseCallbacksStub"*, %"class.mojo::Message"*)* @_ZN5blink5mojom5blink24IDBDatabaseCallbacksStubIN4mojo19RawPtrImplRefTraitsINS1_20IDBDatabaseCallbacksEEEE6AcceptEPNS3_7MessageE to i8*), i8* bitcast (i1 (%"class.blink::mojom::blink::IDBDatabaseCallbacksStub"*, %"class.mojo::Message"*, %"class.mojo::MessageReceiverWithStatus"*)* @_ZN5blink5mojom5blink24IDBDatabaseCallbacksStubIN4mojo19RawPtrImplRefTraitsINS1_20IDBDatabaseCallbacksEEEE19AcceptWithResponderEPNS3_7MessageENSt3__110unique_ptrINS3_25MessageReceiverWithStatusENSA_14default_deleteISC_EEEE to i8*)] }, comdat, align 8
@_ZN5blink5mojom5blink20IDBDatabaseCallbacks5Name_E = external constant [0 x i8], align 1
@_ZTVN5blink5mojom5blink36IDBDatabaseCallbacksRequestValidatorE = external unnamed_addr constant { [6 x i8*] }, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.31 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.32 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIlNS2_12KeyValuePairIlNS_6MemberINS_14IDBTransactionEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIlEENS2_18HashMapValueTraitsINS2_10HashTraitsIlEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIlNS2_12KeyValuePairIlNS_6MemberINS_14IDBTransactionEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIlEENS2_18HashMapValueTraitsINS2_10HashTraitsIlEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableIlNS2_12KeyValuePairIlNS_6MemberINS_14IDBTransactionEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIlEENS2_18HashMapValueTraitsINS2_10HashTraitsIlEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIlNS2_12KeyValuePairIlNS_6MemberINS_14IDBTransactionEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIlEENS2_18HashMapValueTraitsINS2_10HashTraitsIlEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableIlNS_12KeyValuePairIlNS1_6MemberINS1_14IDBTransactionEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSD_IS7_EEEESE_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [363 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<long, WTF::KeyValuePair<long, blink::Member<blink::IDBTransaction> >, WTF::KeyValuePairKeyExtractor, WTF::IntHash<long>, WTF::HashMapValueTraits<WTF::HashTraits<long>, WTF::HashTraits<blink::Member<blink::IDBTransaction> > >, WTF::HashTraits<long>, blink::HeapAllocator> >]\00", align 1
@_ZTVN5blink13DOMStringListE = linkonce_odr hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::DOMStringList"*)* @_ZN5blink13DOMStringListD2Ev to i8*), i8* bitcast (void (%"class.blink::DOMStringList"*)* @_ZN5blink13DOMStringListD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)* @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::DOMStringList"*)* @_ZNK5blink13DOMStringList18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*)] }, comdat, align 8
@_ZN5blink13DOMStringList18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIlEEPKcv = private unnamed_addr constant [52 x i8] c"const char *WTF::GetStringWithTypeName() [T = long]\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.33 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.34 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.35 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1

@_ZN5blink11IDBDatabaseC1EPNS_16ExecutionContextENSt3__110unique_ptrINS_14WebIDBDatabaseENS3_14default_deleteIS5_EEEEN4mojo25PendingAssociatedReceiverINS_5mojom5blink20IDBDatabaseCallbacksEEENS9_13PendingRemoteINSC_15ObservedFeatureEEE = hidden unnamed_addr alias void (%"class.blink::IDBDatabase"*, %"class.blink::ExecutionContext"*, %"class.blink::WebIDBDatabase"*, %"class.mojo::PendingAssociatedReceiver"*, %"class.mojo::PendingRemote"*), void (%"class.blink::IDBDatabase"*, %"class.blink::ExecutionContext"*, %"class.blink::WebIDBDatabase"*, %"class.mojo::PendingAssociatedReceiver"*, %"class.mojo::PendingRemote"*)* @_ZN5blink11IDBDatabaseC2EPNS_16ExecutionContextENSt3__110unique_ptrINS_14WebIDBDatabaseENS3_14default_deleteIS5_EEEEN4mojo25PendingAssociatedReceiverINS_5mojom5blink20IDBDatabaseCallbacksEEENS9_13PendingRemoteINSC_15ObservedFeatureEEE
@_ZN5blink11IDBDatabaseD1Ev = hidden unnamed_addr alias void (%"class.blink::IDBDatabase"*), void (%"class.blink::IDBDatabase"*)* @_ZN5blink11IDBDatabaseD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11IDBDatabaseC2EPNS_16ExecutionContextENSt3__110unique_ptrINS_14WebIDBDatabaseENS3_14default_deleteIS5_EEEEN4mojo25PendingAssociatedReceiverINS_5mojom5blink20IDBDatabaseCallbacksEEENS9_13PendingRemoteINSC_15ObservedFeatureEEE(%"class.blink::IDBDatabase"*, %"class.blink::ExecutionContext"*, %"class.blink::WebIDBDatabase"*, %"class.mojo::PendingAssociatedReceiver"*, %"class.mojo::PendingRemote"*) unnamed_addr #0 align 2 {
  %6 = alloca %"class.mojo::PendingAssociatedReceiver", align 8
  %7 = alloca %"class.mojo::PendingAssociatedReceiver", align 8
  %8 = ptrtoint %"class.blink::WebIDBDatabase"* %2 to i64
  %9 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink11EventTargetC2Ev(%"class.blink::EventTarget"* %9) #7
  %10 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTVN5blink25EventTargetWithInlineDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 0, i32 1
  %12 = bitcast %"class.blink::EventTargetData"* %11 to i8*
  %13 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %12, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.18, i64 0, i64 0), i32 261) #7
  %14 = bitcast i8* %13 to %"class.blink::EventTargetData"*
  tail call void @_ZN5blink15EventTargetDataC1Ev(%"class.blink::EventTargetData"* %14) #7
  %15 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink21ActiveScriptWrappableINS_11IDBDatabaseEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %16 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 2
  %17 = bitcast %"class.blink::ExecutionContextLifecycleObserver.base"* %16 to %"class.blink::ExecutionContextLifecycleObserver"*
  tail call void @_ZN5blink33ExecutionContextLifecycleObserverC2EPNS_16ExecutionContextENS0_4TypeE(%"class.blink::ExecutionContextLifecycleObserver"* %17, %"class.blink::ExecutionContext"* %1, i32 0) #7
  %18 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 3
  %19 = getelementptr inbounds %"class.blink::mojom::blink::IDBDatabaseCallbacks", %"class.blink::mojom::blink::IDBDatabaseCallbacks"* %18, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [34 x i8*], [7 x i8*], [8 x i8*], [8 x i8*] }, { [34 x i8*], [7 x i8*], [8 x i8*], [8 x i8*] }* @_ZTVN5blink11IDBDatabaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %20 = bitcast i32 (...)*** %15 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [34 x i8*], [7 x i8*], [8 x i8*], [8 x i8*] }, { [34 x i8*], [7 x i8*], [8 x i8*], [8 x i8*] }* @_ZTVN5blink11IDBDatabaseE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [34 x i8*], [7 x i8*], [8 x i8*], [8 x i8*] }, { [34 x i8*], [7 x i8*], [8 x i8*], [8 x i8*] }* @_ZTVN5blink11IDBDatabaseE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %20, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [34 x i8*], [7 x i8*], [8 x i8*], [8 x i8*] }, { [34 x i8*], [7 x i8*], [8 x i8*], [8 x i8*] }* @_ZTVN5blink11IDBDatabaseE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %19, align 8
  %21 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 4
  tail call void @_ZN5blink19IDBDatabaseMetadataC1Ev(%"struct.blink::IDBDatabaseMetadata"* %21) #7
  %22 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 5
  %23 = bitcast %"class.std::__1::unique_ptr.27"* %22 to i64*
  store i64 %8, i64* %23, align 8
  %24 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 6, i32 0, i32 0
  %25 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 8, i32 0
  %26 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %4, i64 0, i32 0
  %27 = bitcast %"class.blink::IDBTransaction"** %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 28, i1 false)
  tail call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* %25, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8) %26) #7
  %28 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 9
  store i8 0, i8* %28, align 8
  %29 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_10EventQueueEEEPhm(i64 80) #7
  %30 = bitcast i8* %29 to %"class.blink::EventQueue"*
  tail call void @_ZN5blink10EventQueueC1EPNS_16ExecutionContextENS_8TaskTypeE(%"class.blink::EventQueue"* %30, %"class.blink::ExecutionContext"* %1, i8 zeroext 16) #7
  %31 = getelementptr inbounds i8, i8* %29, i64 -4
  %32 = bitcast i8* %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = or i16 %33, 1
  store atomic i16 %34, i16* %32 release, align 2
  %35 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 10, i32 0, i32 0
  %36 = bitcast %"class.blink::EventQueue"** %35 to i8**
  store i8* %29, i8** %36, align 8
  %37 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 11
  %38 = icmp eq %"class.blink::ExecutionContext"* %1, null
  %39 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %1, i64 0, i32 1, i32 0
  %40 = select i1 %38, %"class.blink::ContextLifecycleNotifier"* null, %"class.blink::ContextLifecycleNotifier"* %39
  %41 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_26HeapMojoAssociatedReceiverINS_5mojom5blink20IDBDatabaseCallbacksENS_11IDBDatabaseELNS_19HeapMojoWrapperModeE0EE7WrapperEEEPhm(i64 72) #7
  %42 = bitcast i8* %41 to %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::IDBDatabaseCallbacks, blink::IDBDatabase, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*
  %43 = bitcast i8* %41 to %"class.blink::ContextLifecycleObserver"*
  %44 = bitcast i8* %41 to i32 (...)***
  %45 = getelementptr inbounds i8, i8* %41, i64 8
  %46 = bitcast i8* %45 to %"class.blink::ContextLifecycleNotifier"**
  store %"class.blink::ContextLifecycleNotifier"* null, %"class.blink::ContextLifecycleNotifier"** %46, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink26HeapMojoAssociatedReceiverINS_5mojom5blink20IDBDatabaseCallbacksENS_11IDBDatabaseELNS_19HeapMojoWrapperModeE0EE7WrapperE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %47 = getelementptr inbounds i8, i8* %41, i64 16
  %48 = bitcast i8* %47 to %"class.blink::ThreadState::PrefinalizerRegistration"*
  tail call void @_ZN5blink11ThreadState24PrefinalizerRegistrationINS_26HeapMojoAssociatedReceiverINS_5mojom5blink20IDBDatabaseCallbacksENS_11IDBDatabaseELNS_19HeapMojoWrapperModeE0EE7WrapperEEC2EPS9_(%"class.blink::ThreadState::PrefinalizerRegistration"* %48, %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::IDBDatabaseCallbacks, blink::IDBDatabase, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %42) #7
  %49 = getelementptr inbounds i8, i8* %41, i64 24
  %50 = bitcast i8* %49 to %"class.blink::IDBDatabase"**
  store %"class.blink::IDBDatabase"* %0, %"class.blink::IDBDatabase"** %50, align 8
  %51 = getelementptr inbounds i8, i8* %41, i64 32
  %52 = icmp eq %"class.blink::IDBDatabase"* %0, null
  %53 = bitcast i8* %51 to %"class.mojo::internal::AssociatedReceiverBase"*
  tail call void @_ZN4mojo8internal22AssociatedReceiverBaseC2Ev(%"class.mojo::internal::AssociatedReceiverBase"* %53) #7
  %54 = getelementptr inbounds i8, i8* %41, i64 40
  %55 = bitcast i8* %54 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5mojom5blink24IDBDatabaseCallbacksStubIN4mojo19RawPtrImplRefTraitsINS1_20IDBDatabaseCallbacksEEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %55, align 8
  %56 = getelementptr inbounds i8, i8* %41, i64 56
  %57 = bitcast i8* %56 to %"class.base::internal::WeakPtrFactoryBase"*
  %58 = ptrtoint i8* %51 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %57, i64 %58) #7
  %59 = ptrtoint %"class.blink::mojom::blink::IDBDatabaseCallbacks"* %18 to i64
  %60 = select i1 %52, i64 0, i64 %59
  %61 = getelementptr inbounds i8, i8* %41, i64 48
  %62 = bitcast i8* %61 to i64*
  store i64 %60, i64* %62, align 8
  tail call void @_ZN5blink24ContextLifecycleObserver27SetContextLifecycleNotifierEPNS_24ContextLifecycleNotifierE(%"class.blink::ContextLifecycleObserver"* %43, %"class.blink::ContextLifecycleNotifier"* %40) #7
  %63 = getelementptr inbounds i8, i8* %41, i64 -4
  %64 = bitcast i8* %63 to i16*
  %65 = load atomic i16, i16* %64 monotonic, align 2
  %66 = or i16 %65, 1
  store atomic i16 %66, i16* %64 release, align 2
  %67 = bitcast %"class.blink::HeapMojoAssociatedReceiver"* %37 to i8**
  store i8* %41, i8** %67, align 8
  %68 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 12
  br i1 %38, label %75, label %69

69:                                               ; preds = %5
  %70 = bitcast %"class.blink::ExecutionContext"* %1 to %"class.blink::FrameOrWorkerScheduler"* (%"class.blink::ExecutionContext"*)***
  %71 = load %"class.blink::FrameOrWorkerScheduler"* (%"class.blink::ExecutionContext"*)**, %"class.blink::FrameOrWorkerScheduler"* (%"class.blink::ExecutionContext"*)*** %70, align 8
  %72 = getelementptr inbounds %"class.blink::FrameOrWorkerScheduler"* (%"class.blink::ExecutionContext"*)*, %"class.blink::FrameOrWorkerScheduler"* (%"class.blink::ExecutionContext"*)** %71, i64 36
  %73 = load %"class.blink::FrameOrWorkerScheduler"* (%"class.blink::ExecutionContext"*)*, %"class.blink::FrameOrWorkerScheduler"* (%"class.blink::ExecutionContext"*)** %72, align 8
  %74 = tail call %"class.blink::FrameOrWorkerScheduler"* %73(%"class.blink::ExecutionContext"* nonnull %1) #7
  tail call void @_ZN5blink22FrameOrWorkerScheduler15RegisterFeatureENS_9scheduler26WebSchedulerTrackedFeatureENS_16SchedulingPolicyE(%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle"* sret %68, %"class.blink::FrameOrWorkerScheduler"* %74, i32 28, i16 256) #7
  br label %81

75:                                               ; preds = %5
  %76 = bitcast %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle"* %68 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 0, i64 24, i1 false)
  %77 = getelementptr inbounds %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle"* %68, i64 0, i32 0
  store i32 56, i32* %77, align 8
  %78 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 12, i32 1, i32 0
  store i8 0, i8* %78, align 1
  %79 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 12, i32 1, i32 1
  store i8 0, i8* %79, align 1
  %80 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 12, i32 2, i32 0
  tail call void @_ZN4base8internal11WeakPtrBaseC2Ev(%"class.base::internal::WeakPtrBase"* %80) #7
  br label %81

81:                                               ; preds = %75, %69
  %82 = getelementptr inbounds %"class.mojo::PendingAssociatedReceiver", %"class.mojo::PendingAssociatedReceiver"* %7, i64 0, i32 0
  %83 = getelementptr inbounds %"class.mojo::PendingAssociatedReceiver", %"class.mojo::PendingAssociatedReceiver"* %3, i64 0, i32 0
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %82, %"class.mojo::ScopedInterfaceEndpointHandle"* dereferenceable(8) %83) #7
  %84 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %1, i64 0, i32 1
  %85 = bitcast %"class.blink::MojoBindingContext"* %84 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)***
  %86 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*** %85, align 8
  %87 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %86, i64 6
  %88 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %87, align 8
  %89 = call %"class.base::SingleThreadTaskRunner"* %88(%"class.blink::MojoBindingContext"* %84, i8 zeroext 16) #7
  %90 = bitcast %"class.base::SingleThreadTaskRunner"* %89 to %"class.base::SequencedTaskRunner"*
  %91 = bitcast %"class.mojo::PendingAssociatedReceiver"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %91)
  %92 = getelementptr inbounds %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver"* %37, i64 0, i32 0, i32 0, i32 0
  %93 = load %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::IDBDatabaseCallbacks, blink::IDBDatabase, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*, %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::IDBDatabaseCallbacks, blink::IDBDatabase, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"** %92, align 8
  %94 = getelementptr inbounds %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::IDBDatabaseCallbacks, blink::IDBDatabase, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::IDBDatabaseCallbacks, blink::IDBDatabase, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %93, i64 0, i32 3
  %95 = getelementptr inbounds %"class.mojo::PendingAssociatedReceiver", %"class.mojo::PendingAssociatedReceiver"* %6, i64 0, i32 0
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %95, %"class.mojo::ScopedInterfaceEndpointHandle"* nonnull dereferenceable(8) %82) #7
  call void @_ZN4mojo18AssociatedReceiverIN5blink5mojom5blink20IDBDatabaseCallbacksENS_19RawPtrImplRefTraitsIS4_EEE4BindENS_25PendingAssociatedReceiverIS4_EE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::AssociatedReceiver"* %94, %"class.mojo::PendingAssociatedReceiver"* nonnull %6, %"class.base::SequencedTaskRunner"* %90) #7
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %95) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %91)
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %82) #7
  ret void
}

declare void @_ZN5blink33ExecutionContextLifecycleObserverC2EPNS_16ExecutionContextENS0_4TypeE(%"class.blink::ExecutionContextLifecycleObserver"*, %"class.blink::ExecutionContext"*, i32) unnamed_addr #1

declare void @_ZN5blink19IDBDatabaseMetadataC1Ev(%"struct.blink::IDBDatabaseMetadata"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN5blink22FrameOrWorkerScheduler15RegisterFeatureENS_9scheduler26WebSchedulerTrackedFeatureENS_16SchedulingPolicyE(%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle"* sret, %"class.blink::FrameOrWorkerScheduler"*, i32, i16) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11IDBDatabaseD2Ev(%"class.blink::IDBDatabase"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [34 x i8*], [7 x i8*], [8 x i8*], [8 x i8*] }, { [34 x i8*], [7 x i8*], [8 x i8*], [8 x i8*] }* @_ZTVN5blink11IDBDatabaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = bitcast i32 (...)*** %3 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [34 x i8*], [7 x i8*], [8 x i8*], [8 x i8*] }, { [34 x i8*], [7 x i8*], [8 x i8*], [8 x i8*] }* @_ZTVN5blink11IDBDatabaseE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [34 x i8*], [7 x i8*], [8 x i8*], [8 x i8*] }, { [34 x i8*], [7 x i8*], [8 x i8*], [8 x i8*] }* @_ZTVN5blink11IDBDatabaseE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %4, align 8
  %5 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 3, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [34 x i8*], [7 x i8*], [8 x i8*], [8 x i8*] }, { [34 x i8*], [7 x i8*], [8 x i8*], [8 x i8*] }* @_ZTVN5blink11IDBDatabaseE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 9
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %18

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %11 = load %"class.blink::WebIDBDatabase"*, %"class.blink::WebIDBDatabase"** %10, align 8
  %12 = icmp eq %"class.blink::WebIDBDatabase"* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %9
  %14 = bitcast %"class.blink::WebIDBDatabase"* %11 to void (%"class.blink::WebIDBDatabase"*)***
  %15 = load void (%"class.blink::WebIDBDatabase"*)**, void (%"class.blink::WebIDBDatabase"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::WebIDBDatabase"*)*, void (%"class.blink::WebIDBDatabase"*)** %15, i64 4
  %17 = load void (%"class.blink::WebIDBDatabase"*)*, void (%"class.blink::WebIDBDatabase"*)** %16, align 8
  tail call void %17(%"class.blink::WebIDBDatabase"* nonnull %11) #7
  br label %18

18:                                               ; preds = %9, %1, %13
  %19 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 12
  tail call void @_ZN5blink22FrameOrWorkerScheduler32SchedulingAffectingFeatureHandle5resetEv(%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle"* %19) #7
  %20 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 12, i32 2, i32 0
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %20) #7
  %21 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 8, i32 0
  tail call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* %21) #7
  %22 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %23 = load %"class.blink::WebIDBDatabase"*, %"class.blink::WebIDBDatabase"** %22, align 8
  store %"class.blink::WebIDBDatabase"* null, %"class.blink::WebIDBDatabase"** %22, align 8
  %24 = icmp eq %"class.blink::WebIDBDatabase"* %23, null
  br i1 %24, label %30, label %25

25:                                               ; preds = %18
  %26 = bitcast %"class.blink::WebIDBDatabase"* %23 to void (%"class.blink::WebIDBDatabase"*)***
  %27 = load void (%"class.blink::WebIDBDatabase"*)**, void (%"class.blink::WebIDBDatabase"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.blink::WebIDBDatabase"*)*, void (%"class.blink::WebIDBDatabase"*)** %27, i64 1
  %29 = load void (%"class.blink::WebIDBDatabase"*)*, void (%"class.blink::WebIDBDatabase"*)** %28, align 8
  tail call void %29(%"class.blink::WebIDBDatabase"* nonnull %23) #7
  br label %30

30:                                               ; preds = %18, %25
  %31 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 4, i32 4, i32 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair"* %32, null
  br i1 %33, label %61, label %34, !prof !3

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 4, i32 4, i32 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %59, label %38

38:                                               ; preds = %34
  %39 = zext i32 %36 to i64
  br label %40

40:                                               ; preds = %56, %38
  %41 = phi i64 [ 0, %38 ], [ %57, %56 ]
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %32, i64 %41, i32 0
  %43 = load i64, i64* %42, align 8
  %44 = icmp eq i64 %43, -1
  br i1 %44, label %56, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %32, i64 %41, i32 1, i32 0
  %47 = load %"class.blink::IDBObjectStoreMetadata"*, %"class.blink::IDBObjectStoreMetadata"** %46, align 8
  %48 = icmp eq %"class.blink::IDBObjectStoreMetadata"* %47, null
  br i1 %48, label %56, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %47, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %50) #7
  %51 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %56

54:                                               ; preds = %49
  tail call void @_ZN5blink22IDBObjectStoreMetadataD2Ev(%"class.blink::IDBObjectStoreMetadata"* nonnull %47) #7
  %55 = bitcast %"class.blink::IDBObjectStoreMetadata"* %47 to i8*
  tail call void @free(i8* %55) #7
  br label %56

56:                                               ; preds = %54, %49, %45, %40
  %57 = add nuw nsw i64 %41, 1
  %58 = icmp eq i64 %57, %39
  br i1 %58, label %59, label %40

59:                                               ; preds = %56, %34
  %60 = bitcast %"struct.WTF::KeyValuePair"* %32 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %60) #7
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %31, align 8
  br label %61

61:                                               ; preds = %59, %30
  %62 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %64, label %78, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  br i1 %69, label %72, label %74

72:                                               ; preds = %65
  %73 = add i32 %71, -1
  store i32 %73, i32* %70, align 4
  br label %74

74:                                               ; preds = %72, %65
  %75 = phi i32 [ %73, %72 ], [ %71, %65 ]
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %78

77:                                               ; preds = %74
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %63) #7
  br label %78

78:                                               ; preds = %61, %74, %77
  %79 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN5blink24ContextLifecycleObserverD2Ev(%"class.blink::ContextLifecycleObserver"* %79) #7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTVN5blink25EventTargetWithInlineDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %80 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 0, i32 1
  %81 = bitcast %"class.blink::EventTargetData"* %80 to i8*
  %82 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %81, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.18, i64 0, i64 0), i32 261) #7
  %83 = bitcast i8* %82 to %"class.blink::EventTargetData"*
  tail call void @_ZN5blink15EventTargetDataD1Ev(%"class.blink::EventTargetData"* %83) #7
  %84 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink11EventTargetD2Ev(%"class.blink::EventTarget"* %84) #7
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink24ContextLifecycleObserverD2Ev(%"class.blink::ContextLifecycleObserver"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn72_N5blink11IDBDatabaseD1Ev(%"class.blink::IDBDatabase"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 -1, i32 7, i32 0, i32 0, i32 1
  %3 = bitcast i32* %2 to %"class.blink::IDBDatabase"*
  tail call void @_ZN5blink11IDBDatabaseD2Ev(%"class.blink::IDBDatabase"* %3) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn80_N5blink11IDBDatabaseD1Ev(%"class.blink::IDBDatabase"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 -1, i32 7
  %3 = bitcast %"class.blink::HeapHashMap.128"* %2 to %"class.blink::IDBDatabase"*
  tail call void @_ZN5blink11IDBDatabaseD2Ev(%"class.blink::IDBDatabase"* %3) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N5blink11IDBDatabaseD1Ev(%"class.blink::IDBDatabase"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 -1, i32 4, i32 5
  %3 = bitcast i8* %2 to %"class.blink::IDBDatabase"*
  tail call void @_ZN5blink11IDBDatabaseD2Ev(%"class.blink::IDBDatabase"* %3) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11IDBDatabaseD0Ev(%"class.blink::IDBDatabase"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink11IDBDatabaseD2Ev(%"class.blink::IDBDatabase"* %0) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn72_N5blink11IDBDatabaseD0Ev(%"class.blink::IDBDatabase"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 -1, i32 7, i32 0, i32 0, i32 1
  %3 = bitcast i32* %2 to %"class.blink::IDBDatabase"*
  tail call void @_ZN5blink11IDBDatabaseD2Ev(%"class.blink::IDBDatabase"* %3) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn80_N5blink11IDBDatabaseD0Ev(%"class.blink::IDBDatabase"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 -1, i32 7
  %3 = bitcast %"class.blink::HeapHashMap.128"* %2 to %"class.blink::IDBDatabase"*
  tail call void @_ZN5blink11IDBDatabaseD2Ev(%"class.blink::IDBDatabase"* %3) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N5blink11IDBDatabaseD0Ev(%"class.blink::IDBDatabase"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 -1, i32 4, i32 5
  %3 = bitcast i8* %2 to %"class.blink::IDBDatabase"*
  tail call void @_ZN5blink11IDBDatabaseD2Ev(%"class.blink::IDBDatabase"* %3) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink11IDBDatabase5TraceEPNS_7VisitorE(%"class.blink::IDBDatabase"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 6
  %4 = bitcast %"class.blink::Member.33"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14IDBTransactionEE5TraceEPNS_7VisitorEPKv) #7
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 7
  %15 = bitcast %"class.blink::HeapHashMap.128"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = bitcast %"class.blink::HeapHashMap.128"* %14 to i8**
  %18 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %19 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %19, i64 11
  %21 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %20, align 8
  tail call void %21(%"class.blink::Visitor"* %1, i8** %17) #7
  %22 = icmp eq i64 %16, 0
  br i1 %22, label %29, label %23

23:                                               ; preds = %13
  %24 = inttoptr i64 %16 to i8*
  %25 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %26 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %26, i64 5
  %28 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %27, align 8
  tail call void %28(%"class.blink::Visitor"* %1, i8* nonnull %24, i8* nonnull %24, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIlNS2_12KeyValuePairIlNS_6MemberINS_14IDBTransactionEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIlEENS2_18HashMapValueTraitsINS2_10HashTraitsIlEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #7
  br label %29

29:                                               ; preds = %13, %23
  %30 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 10
  %31 = bitcast %"class.blink::Member.99"* %30 to i64*
  %32 = load atomic i64, i64* %31 monotonic, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %40, label %34

34:                                               ; preds = %29
  %35 = inttoptr i64 %32 to i8*
  %36 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %37, i64 5
  %39 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %38, align 8
  tail call void %39(%"class.blink::Visitor"* %1, i8* nonnull %35, i8* nonnull %35, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10EventQueueEE5TraceEPNS_7VisitorEPKv) #7
  br label %40

40:                                               ; preds = %29, %34
  %41 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 11
  %42 = bitcast %"class.blink::HeapMojoAssociatedReceiver"* %41 to i64*
  %43 = load atomic i64, i64* %42 monotonic, align 8
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %51, label %45

45:                                               ; preds = %40
  %46 = inttoptr i64 %43 to i8*
  %47 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %48 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %48, i64 5
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %49, align 8
  tail call void %50(%"class.blink::Visitor"* %1, i8* nonnull %46, i8* nonnull %46, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_26HeapMojoAssociatedReceiverINS_5mojom5blink20IDBDatabaseCallbacksENS_11IDBDatabaseELNS_19HeapMojoWrapperModeE0EE7WrapperEE5TraceEPNS_7VisitorEPKv) #7
  br label %51

51:                                               ; preds = %40, %45
  %52 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 0, i32 1
  %53 = bitcast %"class.blink::EventTargetData"* %52 to i8*
  %54 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %53, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.18, i64 0, i64 0), i32 261) #7
  %55 = bitcast i8* %54 to %"class.blink::EventTargetData"*
  tail call void @_ZNK5blink15EventTargetData5TraceEPNS_7VisitorE(%"class.blink::EventTargetData"* %55, %"class.blink::Visitor"* %1) #7
  %56 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %56, %"class.blink::Visitor"* %1) #7
  %57 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 2
  %58 = bitcast %"class.blink::ExecutionContextLifecycleObserver.base"* %57 to %"class.blink::ExecutionContextLifecycleObserver"*
  tail call void @_ZNK5blink33ExecutionContextLifecycleObserver5TraceEPNS_7VisitorE(%"class.blink::ExecutionContextLifecycleObserver"* %58, %"class.blink::Visitor"* %1) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink25EventTargetWithInlineData5TraceEPNS_7VisitorE(%"class.blink::EventTargetWithInlineData"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::EventTargetData"* %3 to i8*
  %5 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.18, i64 0, i64 0), i32 261)
  %6 = bitcast i8* %5 to %"class.blink::EventTargetData"*
  tail call void @_ZNK5blink15EventTargetData5TraceEPNS_7VisitorE(%"class.blink::EventTargetData"* %6, %"class.blink::Visitor"* %1) #7
  %7 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 0, i32 0
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %7, %"class.blink::Visitor"* %1) #7
  ret void
}

declare void @_ZNK5blink33ExecutionContextLifecycleObserver5TraceEPNS_7VisitorE(%"class.blink::ExecutionContextLifecycleObserver"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn72_NK5blink11IDBDatabase5TraceEPNS_7VisitorE(%"class.blink::IDBDatabase"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 -1, i32 7, i32 0, i32 0, i32 1
  %4 = bitcast i32* %3 to %"class.blink::IDBDatabase"*
  tail call void @_ZNK5blink11IDBDatabase5TraceEPNS_7VisitorE(%"class.blink::IDBDatabase"* %4, %"class.blink::Visitor"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn80_NK5blink11IDBDatabase5TraceEPNS_7VisitorE(%"class.blink::IDBDatabase"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 -1, i32 7
  %4 = bitcast %"class.blink::HeapHashMap.128"* %3 to %"class.blink::IDBDatabase"*
  tail call void @_ZNK5blink11IDBDatabase5TraceEPNS_7VisitorE(%"class.blink::IDBDatabase"* %4, %"class.blink::Visitor"* %1)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i64 @_ZN5blink11IDBDatabase17NextTransactionIdEv() local_unnamed_addr #4 align 2 {
  %1 = atomicrmw add i32* getelementptr inbounds ({ { { i32 } } }, { { { i32 } } }* @_ZZN5blink11IDBDatabase17NextTransactionIdEvE22current_transaction_id, i64 0, i32 0, i32 0, i32 0), i32 1 monotonic
  %2 = add nsw i32 %1, 1
  %3 = sext i32 %2 to i64
  ret i64 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11IDBDatabase11SetMetadataERKNS_19IDBDatabaseMetadataE(%"class.blink::IDBDatabase"*, %"struct.blink::IDBDatabaseMetadata"* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 4
  %4 = getelementptr inbounds %"struct.blink::IDBDatabaseMetadata", %"struct.blink::IDBDatabaseMetadata"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #7
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !4

21:                                               ; preds = %12
  tail call void @llvm.trap() #7
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %22, %7, %2
  %25 = ptrtoint %"class.WTF::StringImpl"* %5 to i64
  %26 = bitcast %"struct.blink::IDBDatabaseMetadata"* %3 to i64*
  %27 = getelementptr inbounds %"struct.blink::IDBDatabaseMetadata", %"struct.blink::IDBDatabaseMetadata"* %3, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  store i64 %25, i64* %26, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #7
  br label %43

43:                                               ; preds = %24, %39, %42
  %44 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 4, i32 1
  %45 = getelementptr inbounds %"struct.blink::IDBDatabaseMetadata", %"struct.blink::IDBDatabaseMetadata"* %1, i64 0, i32 1
  %46 = bitcast i64* %44 to i8*
  %47 = bitcast i64* %45 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %47, i64 24, i1 false) #7
  %48 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 4, i32 4, i32 0
  %49 = getelementptr inbounds %"struct.blink::IDBDatabaseMetadata", %"struct.blink::IDBDatabaseMetadata"* %1, i64 0, i32 4, i32 0
  %50 = tail call dereferenceable(24) %"class.WTF::HashTable.13"* @_ZN3WTF9HashTableIlNS_12KeyValuePairIl13scoped_refptrIN5blink22IDBObjectStoreMetadataEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS_18PartitionAllocatorEEaSERKSG_(%"class.WTF::HashTable.13"* %48, %"class.WTF::HashTable.13"* dereferenceable(24) %49) #7
  %51 = getelementptr inbounds %"struct.blink::IDBDatabaseMetadata", %"struct.blink::IDBDatabaseMetadata"* %1, i64 0, i32 5
  %52 = load i8, i8* %51, align 8, !range !2
  %53 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 4, i32 5
  store i8 %52, i8* %53, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11IDBDatabase19SetDatabaseMetadataERKNS_19IDBDatabaseMetadataE(%"class.blink::IDBDatabase"*, %"struct.blink::IDBDatabaseMetadata"* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 4
  tail call void @_ZN5blink19IDBDatabaseMetadata8CopyFromERKS0_(%"struct.blink::IDBDatabaseMetadata"* %3, %"struct.blink::IDBDatabaseMetadata"* dereferenceable(64) %1) #7
  ret void
}

declare void @_ZN5blink19IDBDatabaseMetadata8CopyFromERKS0_(%"struct.blink::IDBDatabaseMetadata"*, %"struct.blink::IDBDatabaseMetadata"* dereferenceable(64)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11IDBDatabase18TransactionCreatedEPNS_14IDBTransactionE(%"class.blink::IDBDatabase"*, %"class.blink::IDBTransaction"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::IDBTransaction"*, align 8
  %4 = alloca i64, align 8
  store %"class.blink::IDBTransaction"* %1, %"class.blink::IDBTransaction"** %3, align 8
  %5 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.blink::IDBTransaction", %"class.blink::IDBTransaction"* %1, i64 0, i32 4
  %7 = load i64, i64* %6, align 8
  store i64 %7, i64* %4, align 8
  %8 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 7, i32 0, i32 0
  %9 = call { %"struct.WTF::KeyValuePair.134"*, i8 } @_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink6MemberINS2_14IDBTransactionEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EElRPS4_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.132"* %8, i64* nonnull dereferenceable(8) %4, %"class.blink::IDBTransaction"** nonnull dereferenceable(8) %3) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  %10 = load %"class.blink::IDBTransaction"*, %"class.blink::IDBTransaction"** %3, align 8
  %11 = getelementptr inbounds %"class.blink::IDBTransaction", %"class.blink::IDBTransaction"* %10, i64 0, i32 7
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 2
  br i1 %13, label %14, label %23

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 6
  %16 = ptrtoint %"class.blink::IDBTransaction"* %10 to i64
  %17 = bitcast %"class.blink::Member.33"* %15 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.blink::IDBTransaction"* %10 to i8*
  %22 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %21) #7
  br label %23

23:                                               ; preds = %20, %14, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11IDBDatabase19TransactionFinishedEPKNS_14IDBTransactionE(%"class.blink::IDBDatabase"*, %"class.blink::IDBTransaction"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 7, i32 0
  %5 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.blink::IDBTransaction", %"class.blink::IDBTransaction"* %1, i64 0, i32 4
  %7 = load i64, i64* %6, align 8
  store i64 %7, i64* %3, align 8
  %8 = getelementptr inbounds %"class.WTF::HashMap.131", %"class.WTF::HashMap.131"* %4, i64 0, i32 0
  %9 = call { %"struct.WTF::KeyValuePair.134"*, %"struct.WTF::KeyValuePair.134"* } @_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink6MemberINS2_14IDBTransactionEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE4findERKl(%"class.WTF::HashTable.132"* %8, i64* nonnull dereferenceable(8) %3) #7
  %10 = extractvalue { %"struct.WTF::KeyValuePair.134"*, %"struct.WTF::KeyValuePair.134"* } %9, 0
  %11 = getelementptr inbounds %"class.WTF::HashMap.131", %"class.WTF::HashMap.131"* %4, i64 0, i32 0, i32 0
  %12 = load %"struct.WTF::KeyValuePair.134"*, %"struct.WTF::KeyValuePair.134"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair.134", %"struct.WTF::KeyValuePair.134"* %12, i64 %15
  %17 = icmp eq %"struct.WTF::KeyValuePair.134"* %16, %10
  br i1 %17, label %19, label %18

18:                                               ; preds = %2
  call void @_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink6MemberINS2_14IDBTransactionEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE5eraseEPKS6_(%"class.WTF::HashTable.132"* %8, %"struct.WTF::KeyValuePair.134"* %10) #7
  br label %19

19:                                               ; preds = %2, %18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  %20 = getelementptr inbounds %"class.blink::IDBTransaction", %"class.blink::IDBTransaction"* %1, i64 0, i32 7
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 2
  br i1 %22, label %23, label %26

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 6
  %25 = bitcast %"class.blink::Member.33"* %24 to i64*
  store atomic i64 0, i64* %25 monotonic, align 8
  br label %26

26:                                               ; preds = %23, %19
  %27 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 9
  %28 = load i8, i8* %27, align 8, !range !2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %66, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 7, i32 0, i32 0, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %66

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %36 = load %"class.blink::WebIDBDatabase"*, %"class.blink::WebIDBDatabase"** %35, align 8
  %37 = icmp eq %"class.blink::WebIDBDatabase"* %36, null
  br i1 %37, label %50, label %38

38:                                               ; preds = %34
  %39 = bitcast %"class.blink::WebIDBDatabase"* %36 to void (%"class.blink::WebIDBDatabase"*)***
  %40 = load void (%"class.blink::WebIDBDatabase"*)**, void (%"class.blink::WebIDBDatabase"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.blink::WebIDBDatabase"*)*, void (%"class.blink::WebIDBDatabase"*)** %40, i64 4
  %42 = load void (%"class.blink::WebIDBDatabase"*)*, void (%"class.blink::WebIDBDatabase"*)** %41, align 8
  call void %42(%"class.blink::WebIDBDatabase"* nonnull %36) #7
  %43 = load %"class.blink::WebIDBDatabase"*, %"class.blink::WebIDBDatabase"** %35, align 8
  store %"class.blink::WebIDBDatabase"* null, %"class.blink::WebIDBDatabase"** %35, align 8
  %44 = icmp eq %"class.blink::WebIDBDatabase"* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.blink::WebIDBDatabase"* %43 to void (%"class.blink::WebIDBDatabase"*)***
  %47 = load void (%"class.blink::WebIDBDatabase"*)**, void (%"class.blink::WebIDBDatabase"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.blink::WebIDBDatabase"*)*, void (%"class.blink::WebIDBDatabase"*)** %47, i64 1
  %49 = load void (%"class.blink::WebIDBDatabase"*)*, void (%"class.blink::WebIDBDatabase"*)** %48, align 8
  call void %49(%"class.blink::WebIDBDatabase"* nonnull %43) #7
  br label %50

50:                                               ; preds = %45, %38, %34
  %51 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %52 = load %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::IDBDatabaseCallbacks, blink::IDBDatabase, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*, %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::IDBDatabaseCallbacks, blink::IDBDatabase, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::IDBDatabaseCallbacks, blink::IDBDatabase, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::IDBDatabaseCallbacks, blink::IDBDatabase, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %52, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load %"class.mojo::InterfaceEndpointClient"*, %"class.mojo::InterfaceEndpointClient"** %53, align 8
  %55 = icmp eq %"class.mojo::InterfaceEndpointClient"* %54, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::IDBDatabaseCallbacks, blink::IDBDatabase, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::IDBDatabaseCallbacks, blink::IDBDatabase, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %52, i64 0, i32 3, i32 0
  call void @_ZN4mojo8internal22AssociatedReceiverBase5resetEv(%"class.mojo::internal::AssociatedReceiverBase"* %57) #7
  br label %58

58:                                               ; preds = %56, %50
  %59 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 2
  %60 = bitcast %"class.blink::ExecutionContextLifecycleObserver.base"* %59 to %"class.blink::ExecutionContextLifecycleObserver"*
  %61 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %60) #7
  %62 = icmp eq %"class.blink::ExecutionContext"* %61, null
  br i1 %62, label %66, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 10, i32 0, i32 0
  %65 = load %"class.blink::EventQueue"*, %"class.blink::EventQueue"** %64, align 8
  call void @_ZN5blink10EventQueue15CancelAllEventsEv(%"class.blink::EventQueue"* %65) #7
  br label %66

66:                                               ; preds = %63, %58, %26, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11IDBDatabase15CloseConnectionEv(%"class.blink::IDBDatabase"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %3 = load %"class.blink::WebIDBDatabase"*, %"class.blink::WebIDBDatabase"** %2, align 8
  %4 = icmp eq %"class.blink::WebIDBDatabase"* %3, null
  br i1 %4, label %17, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::WebIDBDatabase"* %3 to void (%"class.blink::WebIDBDatabase"*)***
  %7 = load void (%"class.blink::WebIDBDatabase"*)**, void (%"class.blink::WebIDBDatabase"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::WebIDBDatabase"*)*, void (%"class.blink::WebIDBDatabase"*)** %7, i64 4
  %9 = load void (%"class.blink::WebIDBDatabase"*)*, void (%"class.blink::WebIDBDatabase"*)** %8, align 8
  tail call void %9(%"class.blink::WebIDBDatabase"* nonnull %3) #7
  %10 = load %"class.blink::WebIDBDatabase"*, %"class.blink::WebIDBDatabase"** %2, align 8
  store %"class.blink::WebIDBDatabase"* null, %"class.blink::WebIDBDatabase"** %2, align 8
  %11 = icmp eq %"class.blink::WebIDBDatabase"* %10, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %5
  %13 = bitcast %"class.blink::WebIDBDatabase"* %10 to void (%"class.blink::WebIDBDatabase"*)***
  %14 = load void (%"class.blink::WebIDBDatabase"*)**, void (%"class.blink::WebIDBDatabase"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::WebIDBDatabase"*)*, void (%"class.blink::WebIDBDatabase"*)** %14, i64 1
  %16 = load void (%"class.blink::WebIDBDatabase"*)*, void (%"class.blink::WebIDBDatabase"*)** %15, align 8
  tail call void %16(%"class.blink::WebIDBDatabase"* nonnull %10) #7
  br label %17

17:                                               ; preds = %1, %12, %5
  %18 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %19 = load %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::IDBDatabaseCallbacks, blink::IDBDatabase, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*, %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::IDBDatabaseCallbacks, blink::IDBDatabase, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::IDBDatabaseCallbacks, blink::IDBDatabase, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::IDBDatabaseCallbacks, blink::IDBDatabase, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %19, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"class.mojo::InterfaceEndpointClient"*, %"class.mojo::InterfaceEndpointClient"** %20, align 8
  %22 = icmp eq %"class.mojo::InterfaceEndpointClient"* %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::IDBDatabaseCallbacks, blink::IDBDatabase, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::IDBDatabaseCallbacks, blink::IDBDatabase, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %19, i64 0, i32 3, i32 0
  tail call void @_ZN4mojo8internal22AssociatedReceiverBase5resetEv(%"class.mojo::internal::AssociatedReceiverBase"* %24) #7
  br label %25

25:                                               ; preds = %17, %23
  %26 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 2
  %27 = bitcast %"class.blink::ExecutionContextLifecycleObserver.base"* %26 to %"class.blink::ExecutionContextLifecycleObserver"*
  %28 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %27) #7
  %29 = icmp eq %"class.blink::ExecutionContext"* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 10, i32 0, i32 0
  %32 = load %"class.blink::EventQueue"*, %"class.blink::EventQueue"** %31, align 8
  tail call void @_ZN5blink10EventQueue15CancelAllEventsEv(%"class.blink::EventQueue"* %32) #7
  br label %33

33:                                               ; preds = %25, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11IDBDatabase11ForcedCloseEv(%"class.blink::IDBDatabase"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::Location", align 8
  %3 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %4 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 7, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %8 = load %"struct.WTF::KeyValuePair.134"*, %"struct.WTF::KeyValuePair.134"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"struct.WTF::KeyValuePair.134", %"struct.WTF::KeyValuePair.134"* %8, i64 %11
  br i1 %6, label %40, label %13

13:                                               ; preds = %1
  %14 = icmp eq i32 %10, 0
  br i1 %14, label %24, label %15

15:                                               ; preds = %13, %21
  %16 = phi %"struct.WTF::KeyValuePair.134"* [ %22, %21 ], [ %8, %13 ]
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair.134", %"struct.WTF::KeyValuePair.134"* %16, i64 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = add i64 %18, 1
  %20 = icmp ult i64 %19, 2
  br i1 %20, label %21, label %24

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"struct.WTF::KeyValuePair.134", %"struct.WTF::KeyValuePair.134"* %16, i64 1
  %23 = icmp eq %"struct.WTF::KeyValuePair.134"* %22, %12
  br i1 %23, label %40, label %15

24:                                               ; preds = %15, %13
  %25 = phi %"struct.WTF::KeyValuePair.134"* [ %8, %13 ], [ %16, %15 ]
  %26 = icmp eq %"struct.WTF::KeyValuePair.134"* %25, %12
  br i1 %26, label %40, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::DummyExceptionStateForTesting"* %3 to i8*
  %29 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 1, i32 0
  %31 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 1, i32 1
  %32 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 1, i32 2
  %33 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 5, i32 0, i32 0
  %34 = bitcast %"class.WTF::StringImpl"** %33 to i8*
  %35 = bitcast i8** %32 to i8*
  %36 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0
  %37 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 4
  %38 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 3
  br label %53

40:                                               ; preds = %21, %88, %100, %97, %1, %24
  call void @_ZN5blink11IDBDatabase5closeEv(%"class.blink::IDBDatabase"* %0)
  %41 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names6kCloseE, align 8
  %42 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 104) #7
  %43 = bitcast i8* %42 to %"class.blink::Event"*
  call void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"* %43, %"class.WTF::AtomicString"* dereferenceable(8) %41, i32 1, i32 1, i32 1) #7
  %44 = getelementptr inbounds i8, i8* %42, i64 -4
  %45 = bitcast i8* %44 to i16*
  %46 = load atomic i16, i16* %45 monotonic, align 2
  %47 = or i16 %46, 1
  store atomic i16 %47, i16* %45 release, align 2
  %48 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 0, i32 0
  call void @_ZN5blink5Event9SetTargetEPNS_11EventTargetE(%"class.blink::Event"* %43, %"class.blink::EventTarget"* %48) #7
  %49 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 10, i32 0, i32 0
  %50 = load %"class.blink::EventQueue"*, %"class.blink::EventQueue"** %49, align 8
  %51 = bitcast %"class.base::Location"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %51) #7
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.15, i64 0, i64 0), i32 471) #7
  %52 = call zeroext i1 @_ZN5blink10EventQueue12EnqueueEventERKN4base8LocationERNS_5EventE(%"class.blink::EventQueue"* %50, %"class.base::Location"* nonnull dereferenceable(32) %2, %"class.blink::Event"* dereferenceable(104) %43) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %51) #7
  ret void

53:                                               ; preds = %27, %100
  %54 = phi %"struct.WTF::KeyValuePair.134"* [ %25, %27 ], [ %92, %100 ]
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.134", %"struct.WTF::KeyValuePair.134"* %54, i64 0, i32 1, i32 0, i32 0
  %56 = load %"class.blink::IDBTransaction"*, %"class.blink::IDBTransaction"** %55, align 8
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %28) #7
  store i16 1, i16* %30, align 8
  store i16 0, i16* %31, align 2
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 16, i1 false) #7
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 36, i1 false) #7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %29, align 8
  call void @_ZN5blink14IDBTransaction5abortERNS_14ExceptionStateE(%"class.blink::IDBTransaction"* %56, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %36) #7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %29, align 8
  %57 = load i32, i32* %37, align 8
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %60, label %59

59:                                               ; preds = %53
  call void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"* nonnull %36) #7
  br label %60

60:                                               ; preds = %53, %59
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %29, align 8
  %61 = load i64*, i64** %38, align 8
  %62 = icmp eq i64* %61, null
  br i1 %62, label %72, label %63

63:                                               ; preds = %60
  %64 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %39, align 8
  %65 = bitcast %"class.v8::Isolate"* %64 to %"class.v8::internal::Isolate"*
  %66 = load i64, i64* %61, align 8
  %67 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %65, i64 %66) #7
  %68 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %64) #7
  br i1 %68, label %72, label %69

69:                                               ; preds = %63
  %70 = bitcast i64* %67 to %"class.v8::Value"*
  %71 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %64, %"class.v8::Value"* %70) #7
  br label %72

72:                                               ; preds = %69, %63, %60
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %72
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #7
  br label %88

88:                                               ; preds = %72, %84, %87
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %28) #7
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair.134", %"struct.WTF::KeyValuePair.134"* %54, i64 1
  %90 = icmp eq %"struct.WTF::KeyValuePair.134"* %89, %12
  br i1 %90, label %40, label %91

91:                                               ; preds = %88, %97
  %92 = phi %"struct.WTF::KeyValuePair.134"* [ %98, %97 ], [ %89, %88 ]
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair.134", %"struct.WTF::KeyValuePair.134"* %92, i64 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, 1
  %96 = icmp ult i64 %95, 2
  br i1 %96, label %97, label %100

97:                                               ; preds = %91
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair.134", %"struct.WTF::KeyValuePair.134"* %92, i64 1
  %99 = icmp eq %"struct.WTF::KeyValuePair.134"* %98, %12
  br i1 %99, label %40, label %91

100:                                              ; preds = %91
  %101 = icmp eq %"struct.WTF::KeyValuePair.134"* %92, %12
  br i1 %101, label %40, label %53
}

declare void @_ZN5blink14IDBTransaction5abortERNS_14ExceptionStateE(%"class.blink::IDBTransaction"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11IDBDatabase5closeEv(%"class.blink::IDBDatabase"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::TimeTicks", align 8
  %3 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 66, i32 0), align 16
  %4 = and i8 %3, 25
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %12, label %6, !prof !3

6:                                                ; preds = %1
  %7 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #7
  %8 = bitcast %"class.base::TimeTicks"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #7
  %9 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 0, i32 0, i32 0
  %10 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #7
  store i64 %10, i64* %9, align 8
  %11 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 66, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.13, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %7, %"class.base::TimeTicks"* nonnull dereferenceable(8) %2, %"class.base::trace_event::TraceArguments"* null, i32 0) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #7
  br label %12

12:                                               ; preds = %1, %6
  %13 = phi i64 [ -6148914691236517206, %1 ], [ %11, %6 ]
  %14 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %1 ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @.str.13, i64 0, i64 0), %6 ]
  %15 = phi i8* [ null, %1 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 66, i32 0), %6 ]
  %16 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 9
  %17 = load i8, i8* %16, align 8, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %57

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 8, i32 0
  call void @_ZN4mojo8internal18PendingRemoteState5resetEv(%"struct.mojo::internal::PendingRemoteState"* %20) #7
  store i8 1, i8* %16, align 8
  %21 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 12
  call void @_ZN5blink22FrameOrWorkerScheduler32SchedulingAffectingFeatureHandle5resetEv(%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle"* %21)
  %22 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 7, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %57

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %27 = load %"class.blink::WebIDBDatabase"*, %"class.blink::WebIDBDatabase"** %26, align 8
  %28 = icmp eq %"class.blink::WebIDBDatabase"* %27, null
  br i1 %28, label %41, label %29

29:                                               ; preds = %25
  %30 = bitcast %"class.blink::WebIDBDatabase"* %27 to void (%"class.blink::WebIDBDatabase"*)***
  %31 = load void (%"class.blink::WebIDBDatabase"*)**, void (%"class.blink::WebIDBDatabase"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::WebIDBDatabase"*)*, void (%"class.blink::WebIDBDatabase"*)** %31, i64 4
  %33 = load void (%"class.blink::WebIDBDatabase"*)*, void (%"class.blink::WebIDBDatabase"*)** %32, align 8
  call void %33(%"class.blink::WebIDBDatabase"* nonnull %27) #7
  %34 = load %"class.blink::WebIDBDatabase"*, %"class.blink::WebIDBDatabase"** %26, align 8
  store %"class.blink::WebIDBDatabase"* null, %"class.blink::WebIDBDatabase"** %26, align 8
  %35 = icmp eq %"class.blink::WebIDBDatabase"* %34, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %29
  %37 = bitcast %"class.blink::WebIDBDatabase"* %34 to void (%"class.blink::WebIDBDatabase"*)***
  %38 = load void (%"class.blink::WebIDBDatabase"*)**, void (%"class.blink::WebIDBDatabase"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.blink::WebIDBDatabase"*)*, void (%"class.blink::WebIDBDatabase"*)** %38, i64 1
  %40 = load void (%"class.blink::WebIDBDatabase"*)*, void (%"class.blink::WebIDBDatabase"*)** %39, align 8
  call void %40(%"class.blink::WebIDBDatabase"* nonnull %34) #7
  br label %41

41:                                               ; preds = %36, %29, %25
  %42 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %43 = load %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::IDBDatabaseCallbacks, blink::IDBDatabase, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*, %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::IDBDatabaseCallbacks, blink::IDBDatabase, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::IDBDatabaseCallbacks, blink::IDBDatabase, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::IDBDatabaseCallbacks, blink::IDBDatabase, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %43, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load %"class.mojo::InterfaceEndpointClient"*, %"class.mojo::InterfaceEndpointClient"** %44, align 8
  %46 = icmp eq %"class.mojo::InterfaceEndpointClient"* %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::IDBDatabaseCallbacks, blink::IDBDatabase, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::IDBDatabaseCallbacks, blink::IDBDatabase, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %43, i64 0, i32 3, i32 0
  call void @_ZN4mojo8internal22AssociatedReceiverBase5resetEv(%"class.mojo::internal::AssociatedReceiverBase"* %48) #7
  br label %49

49:                                               ; preds = %47, %41
  %50 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 2
  %51 = bitcast %"class.blink::ExecutionContextLifecycleObserver.base"* %50 to %"class.blink::ExecutionContextLifecycleObserver"*
  %52 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %51) #7
  %53 = icmp eq %"class.blink::ExecutionContext"* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 10, i32 0, i32 0
  %56 = load %"class.blink::EventQueue"*, %"class.blink::EventQueue"** %55, align 8
  call void @_ZN5blink10EventQueue15CancelAllEventsEv(%"class.blink::EventQueue"* %56) #7
  br label %57

57:                                               ; preds = %54, %49, %19, %12
  %58 = icmp eq i8* %15, null
  br i1 %58, label %63, label %59

59:                                               ; preds = %57
  %60 = load i8, i8* %15, align 1
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %63, label %62

62:                                               ; preds = %59
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %15, i8* %14, i64 %13) #7
  br label %63

63:                                               ; preds = %57, %59, %62
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11IDBDatabase12EnqueueEventEPNS_5EventE(%"class.blink::IDBDatabase"*, %"class.blink::Event"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink5Event9SetTargetEPNS_11EventTargetE(%"class.blink::Event"* %1, %"class.blink::EventTarget"* %4) #7
  %5 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 10, i32 0, i32 0
  %6 = load %"class.blink::EventQueue"*, %"class.blink::EventQueue"** %5, align 8
  %7 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #7
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.15, i64 0, i64 0), i32 471) #7
  %8 = call zeroext i1 @_ZN5blink10EventQueue12EnqueueEventERKN4base8LocationERNS_5EventE(%"class.blink::EventQueue"* %6, %"class.base::Location"* nonnull dereferenceable(32) %3, %"class.blink::Event"* dereferenceable(104) %1) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N5blink11IDBDatabase11ForcedCloseEv(%"class.blink::IDBDatabase"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 -1, i32 4, i32 5
  %3 = bitcast i8* %2 to %"class.blink::IDBDatabase"*
  tail call void @_ZN5blink11IDBDatabase11ForcedCloseEv(%"class.blink::IDBDatabase"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11IDBDatabase13VersionChangeEll(%"class.blink::IDBDatabase"*, i64, i64) unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.base::Location", align 8
  %6 = alloca %"class.base::TimeTicks", align 8
  %7 = alloca %"class.absl::optional.418", align 8
  %8 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 66, i32 0), align 16
  %9 = and i8 %8, 25
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %17, label %11, !prof !3

11:                                               ; preds = %3
  %12 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #7
  %13 = bitcast %"class.base::TimeTicks"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #7
  %14 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %6, i64 0, i32 0, i32 0
  %15 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #7
  store i64 %15, i64* %14, align 8
  %16 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 66, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %12, %"class.base::TimeTicks"* nonnull dereferenceable(8) %6, %"class.base::trace_event::TraceArguments"* null, i32 0) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #7
  br label %17

17:                                               ; preds = %3, %11
  %18 = phi i64 [ -6148914691236517206, %3 ], [ %16, %11 ]
  %19 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %3 ], [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0), %11 ]
  %20 = phi i8* [ null, %3 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 66, i32 0), %11 ]
  %21 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 2
  %22 = bitcast %"class.blink::ExecutionContextLifecycleObserver.base"* %21 to %"class.blink::ExecutionContextLifecycleObserver"*
  %23 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %22) #7
  %24 = icmp eq %"class.blink::ExecutionContext"* %23, null
  br i1 %24, label %73, label %25

25:                                               ; preds = %17
  %26 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 9
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %36, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %31 = load %"class.blink::WebIDBDatabase"*, %"class.blink::WebIDBDatabase"** %30, align 8
  %32 = bitcast %"class.blink::WebIDBDatabase"* %31 to void (%"class.blink::WebIDBDatabase"*)***
  %33 = load void (%"class.blink::WebIDBDatabase"*)**, void (%"class.blink::WebIDBDatabase"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.blink::WebIDBDatabase"*)*, void (%"class.blink::WebIDBDatabase"*)** %33, i64 5
  %35 = load void (%"class.blink::WebIDBDatabase"*)*, void (%"class.blink::WebIDBDatabase"*)** %34, align 8
  call void %35(%"class.blink::WebIDBDatabase"* %31) #7
  br label %73

36:                                               ; preds = %25
  %37 = getelementptr inbounds %"class.absl::optional.418", %"class.absl::optional.418"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 16, i1 false)
  store i8 0, i8* %37, align 8
  %38 = icmp eq i64 %2, -1
  br i1 %38, label %41, label %39

39:                                               ; preds = %36
  store i8 1, i8* %37, align 8
  %40 = getelementptr inbounds %"class.absl::optional.418", %"class.absl::optional.418"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i64 %2, i64* %40, align 8
  br label %41

41:                                               ; preds = %36, %39
  %42 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names14kVersionchangeE, align 8
  %43 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 144) #7
  %44 = bitcast i8* %43 to %"class.blink::IDBVersionChangeEvent"*
  %45 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #7
  %46 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %46, align 8
  call void @_ZN5blink21IDBVersionChangeEventC1ERKN3WTF12AtomicStringEmRKN4absl8optionalImEENS_5mojom11IDBDataLossERKNS1_6StringE(%"class.blink::IDBVersionChangeEvent"* %44, %"class.WTF::AtomicString"* dereferenceable(8) %42, i64 %1, %"class.absl::optional.418"* nonnull dereferenceable(16) %7, i32 0, %"class.WTF::String"* nonnull dereferenceable(8) %4) #7
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %48, label %62, label %49

49:                                               ; preds = %41
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %49
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %49
  %59 = phi i32 [ %57, %56 ], [ %55, %49 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %47) #7
  br label %62

62:                                               ; preds = %41, %58, %61
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #7
  %63 = getelementptr inbounds i8, i8* %43, i64 -4
  %64 = bitcast i8* %63 to i16*
  %65 = load atomic i16, i16* %64 monotonic, align 2
  %66 = or i16 %65, 1
  store atomic i16 %66, i16* %64 release, align 2
  %67 = bitcast i8* %43 to %"class.blink::Event"*
  %68 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 0, i32 0
  call void @_ZN5blink5Event9SetTargetEPNS_11EventTargetE(%"class.blink::Event"* %67, %"class.blink::EventTarget"* %68) #7
  %69 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 10, i32 0, i32 0
  %70 = load %"class.blink::EventQueue"*, %"class.blink::EventQueue"** %69, align 8
  %71 = bitcast %"class.base::Location"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %71) #7
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %5, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.15, i64 0, i64 0), i32 471) #7
  %72 = call zeroext i1 @_ZN5blink10EventQueue12EnqueueEventERKN4base8LocationERNS_5EventE(%"class.blink::EventQueue"* %70, %"class.base::Location"* nonnull dereferenceable(32) %5, %"class.blink::Event"* dereferenceable(104) %67) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %71) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #7
  br label %73

73:                                               ; preds = %17, %62, %29
  %74 = icmp eq i8* %20, null
  br i1 %74, label %79, label %75

75:                                               ; preds = %73
  %76 = load i8, i8* %20, align 1
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %79, label %78

78:                                               ; preds = %75
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %20, i8* %19, i64 %18) #7
  br label %79

79:                                               ; preds = %73, %75, %78
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ExecutionContext"* @_ZNK5blink11IDBDatabase19GetExecutionContextEv(%"class.blink::IDBDatabase"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 2
  %3 = bitcast %"class.blink::ExecutionContextLifecycleObserver.base"* %2 to %"class.blink::ExecutionContextLifecycleObserver"*
  %4 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %3) #7
  ret %"class.blink::ExecutionContext"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N5blink11IDBDatabase13VersionChangeEll(%"class.blink::IDBDatabase"*, i64, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 -1, i32 4, i32 5
  %5 = bitcast i8* %4 to %"class.blink::IDBDatabase"*
  tail call void @_ZN5blink11IDBDatabase13VersionChangeEll(%"class.blink::IDBDatabase"* %5, i64 %1, i64 %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11IDBDatabase5AbortElNS_5mojom12IDBExceptionERKN3WTF6StringE(%"class.blink::IDBDatabase"*, i64, i32, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca i64, align 8
  store i64 %1, i64* %6, align 8
  %7 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 7, i32 0
  %8 = call %"class.blink::IDBTransaction"* @_ZNK3WTF7HashMapIlN5blink6MemberINS1_14IDBTransactionEEENS_7IntHashIlEENS_10HashTraitsIlEENS7_IS4_EENS1_13HeapAllocatorEE2atERKl(%"class.WTF::HashMap.131"* %7, i64* nonnull dereferenceable(8) %6)
  %9 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 48) #7
  %10 = bitcast i8* %9 to %"class.blink::DOMException"*
  %11 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #7
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %12, align 8
  call void @_ZN5blink12DOMExceptionC1ENS_16DOMExceptionCodeERKN3WTF6StringES5_(%"class.blink::DOMException"* %10, i32 %2, %"class.WTF::String"* dereferenceable(8) %3, %"class.WTF::String"* nonnull dereferenceable(8) %5) #7
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %28, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  br i1 %19, label %22, label %24

22:                                               ; preds = %15
  %23 = add i32 %21, -1
  store i32 %23, i32* %20, align 4
  br label %24

24:                                               ; preds = %22, %15
  %25 = phi i32 [ %23, %22 ], [ %21, %15 ]
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %24
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %13) #7
  br label %28

28:                                               ; preds = %4, %24, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #7
  %29 = getelementptr inbounds i8, i8* %9, i64 -4
  %30 = bitcast i8* %29 to i16*
  %31 = load atomic i16, i16* %30 monotonic, align 2
  %32 = or i16 %31, 1
  store atomic i16 %32, i16* %30 release, align 2
  call void @_ZN5blink14IDBTransaction7OnAbortEPNS_12DOMExceptionE(%"class.blink::IDBTransaction"* %8, %"class.blink::DOMException"* %10) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::IDBTransaction"* @_ZNK3WTF7HashMapIlN5blink6MemberINS1_14IDBTransactionEEENS_7IntHashIlEENS_10HashTraitsIlEENS7_IS4_EENS1_13HeapAllocatorEE2atERKl(%"class.WTF::HashMap.131"*, i64* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashMap.131", %"class.WTF::HashMap.131"* %0, i64 0, i32 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.134"*, %"struct.WTF::KeyValuePair.134"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.134"* %4, null
  br i1 %5, label %71, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashMap.131", %"class.WTF::HashMap.131"* %0, i64 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %1, align 8
  %12 = shl i64 %11, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %11, %13
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %9, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.134", %"struct.WTF::KeyValuePair.134"* %4, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.134", %"struct.WTF::KeyValuePair.134"* %33, i64 0, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = icmp eq i64 %35, %11
  br i1 %36, label %65, label %37

37:                                               ; preds = %6
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %56, %37
  %52 = phi i64 [ %35, %37 ], [ %63, %56 ]
  %53 = phi i64 [ %32, %37 ], [ %60, %56 ]
  %54 = phi i64 [ 0, %37 ], [ %58, %56 ]
  %55 = icmp eq i64 %52, 0
  br i1 %55, label %71, label %56

56:                                               ; preds = %51
  %57 = icmp eq i64 %54, 0
  %58 = select i1 %57, i64 %50, i64 %54
  %59 = add i64 %58, %53
  %60 = and i64 %59, %10
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.134", %"struct.WTF::KeyValuePair.134"* %4, i64 %60
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.134", %"struct.WTF::KeyValuePair.134"* %61, i64 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = icmp eq i64 %63, %11
  br i1 %64, label %65, label %51

65:                                               ; preds = %56, %6
  %66 = phi %"struct.WTF::KeyValuePair.134"* [ %33, %6 ], [ %61, %56 ]
  %67 = icmp eq %"struct.WTF::KeyValuePair.134"* %66, null
  br i1 %67, label %71, label %68

68:                                               ; preds = %65
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.134", %"struct.WTF::KeyValuePair.134"* %66, i64 0, i32 1, i32 0, i32 0
  %70 = load %"class.blink::IDBTransaction"*, %"class.blink::IDBTransaction"** %69, align 8
  br label %71

71:                                               ; preds = %51, %2, %65, %68
  %72 = phi %"class.blink::IDBTransaction"* [ %70, %68 ], [ null, %65 ], [ null, %2 ], [ null, %51 ]
  ret %"class.blink::IDBTransaction"* %72
}

declare void @_ZN5blink14IDBTransaction7OnAbortEPNS_12DOMExceptionE(%"class.blink::IDBTransaction"*, %"class.blink::DOMException"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N5blink11IDBDatabase5AbortElNS_5mojom12IDBExceptionERKN3WTF6StringE(%"class.blink::IDBDatabase"*, i64, i32, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 -1, i32 4, i32 5
  %6 = bitcast i8* %5 to %"class.blink::IDBDatabase"*
  tail call void @_ZN5blink11IDBDatabase5AbortElNS_5mojom12IDBExceptionERKN3WTF6StringE(%"class.blink::IDBDatabase"* %6, i64 %1, i32 %2, %"class.WTF::String"* dereferenceable(8) %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11IDBDatabase8CompleteEl(%"class.blink::IDBDatabase"*, i64) unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 7, i32 0
  %5 = call %"class.blink::IDBTransaction"* @_ZNK3WTF7HashMapIlN5blink6MemberINS1_14IDBTransactionEEENS_7IntHashIlEENS_10HashTraitsIlEENS7_IS4_EENS1_13HeapAllocatorEE2atERKl(%"class.WTF::HashMap.131"* %4, i64* nonnull dereferenceable(8) %3)
  call void @_ZN5blink14IDBTransaction10OnCompleteEv(%"class.blink::IDBTransaction"* %5) #7
  ret void
}

declare void @_ZN5blink14IDBTransaction10OnCompleteEv(%"class.blink::IDBTransaction"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N5blink11IDBDatabase8CompleteEl(%"class.blink::IDBDatabase"*, i64) unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 -1, i32 4, i32 5
  %5 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5)
  store i64 %1, i64* %3, align 8
  %6 = getelementptr inbounds i8, i8* %4, i64 192
  %7 = bitcast i8* %6 to %"class.WTF::HashMap.131"*
  %8 = call %"class.blink::IDBTransaction"* @_ZNK3WTF7HashMapIlN5blink6MemberINS1_14IDBTransactionEEENS_7IntHashIlEENS_10HashTraitsIlEENS7_IS4_EENS1_13HeapAllocatorEE2atERKl(%"class.WTF::HashMap.131"* %7, i64* nonnull dereferenceable(8) %3) #7
  call void @_ZN5blink14IDBTransaction10OnCompleteEv(%"class.blink::IDBTransaction"* %8) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMStringList"* @_ZNK5blink11IDBDatabase16objectStoreNamesEv(%"class.blink::IDBDatabase"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 32) #7
  %3 = bitcast i8* %2 to %"class.blink::DOMStringList"*
  %4 = bitcast i8* %2 to i32 (...)***
  %5 = getelementptr inbounds i8, i8* %2, i64 8
  %6 = bitcast i8* %5 to i64*
  store i64 0, i64* %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink13DOMStringListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %7 = getelementptr inbounds i8, i8* %2, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #7
  %8 = getelementptr inbounds i8, i8* %2, i64 -4
  %9 = bitcast i8* %8 to i16*
  %10 = load atomic i16, i16* %9 monotonic, align 2
  %11 = or i16 %10, 1
  store atomic i16 %11, i16* %9 release, align 2
  %12 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 4, i32 4, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 4, i32 4, i32 0, i32 0
  %16 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 4, i32 4, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %16, i64 %19
  br i1 %14, label %42, label %21

21:                                               ; preds = %1
  %22 = icmp eq i32 %18, 0
  br i1 %22, label %32, label %23

23:                                               ; preds = %21, %29
  %24 = phi %"struct.WTF::KeyValuePair"* [ %30, %29 ], [ %16, %21 ]
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %24, i64 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = add i64 %26, 1
  %28 = icmp ult i64 %27, 2
  br i1 %28, label %29, label %32

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %24, i64 1
  %31 = icmp eq %"struct.WTF::KeyValuePair"* %30, %20
  br i1 %31, label %42, label %23

32:                                               ; preds = %23, %21
  %33 = phi %"struct.WTF::KeyValuePair"* [ %16, %21 ], [ %24, %23 ]
  %34 = icmp eq %"struct.WTF::KeyValuePair"* %33, %20
  br i1 %34, label %42, label %35

35:                                               ; preds = %32
  %36 = getelementptr inbounds i8, i8* %2, i64 28
  %37 = bitcast i8* %36 to i32*
  %38 = getelementptr inbounds i8, i8* %2, i64 24
  %39 = bitcast i8* %38 to i32*
  %40 = bitcast i8* %7 to %"class.WTF::String"**
  %41 = bitcast i8* %7 to %"class.WTF::Vector.17"*
  br label %43

42:                                               ; preds = %29, %79, %91, %88, %1, %32
  tail call void @_ZN5blink13DOMStringList4SortEv(%"class.blink::DOMStringList"* %3) #7
  ret %"class.blink::DOMStringList"* %3

43:                                               ; preds = %35, %91
  %44 = phi %"struct.WTF::KeyValuePair"* [ %33, %35 ], [ %83, %91 ]
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %44, i64 0, i32 1, i32 0
  %46 = load %"class.blink::IDBObjectStoreMetadata"*, %"class.blink::IDBObjectStoreMetadata"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %46, i64 0, i32 1
  %48 = load i32, i32* %37, align 4
  %49 = load i32, i32* %39, align 8
  %50 = icmp eq i32 %48, %49
  br i1 %50, label %78, label %51, !prof !4

51:                                               ; preds = %43
  %52 = load %"class.WTF::String"*, %"class.WTF::String"** %40, align 8
  %53 = zext i32 %48 to i64
  %54 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %47, i64 0, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %56 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %52, i64 %53, i32 0, i32 0
  store %"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"** %56, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %57, label %75, label %58

58:                                               ; preds = %51
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %75

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = zext i32 %65 to i33
  %67 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %66, i33 1) #7
  %68 = extractvalue { i33, i1 } %67, 1
  %69 = extractvalue { i33, i1 } %67, 0
  %70 = icmp slt i33 %69, 0
  %71 = or i1 %68, %70
  br i1 %71, label %72, label %73, !prof !4

72:                                               ; preds = %63
  tail call void @llvm.trap() #7
  unreachable

73:                                               ; preds = %63
  %74 = trunc i33 %69 to i32
  store i32 %74, i32* %64, align 4
  br label %75

75:                                               ; preds = %73, %58, %51
  %76 = load i32, i32* %37, align 4
  %77 = add i32 %76, 1
  store i32 %77, i32* %37, align 4
  br label %79

78:                                               ; preds = %43
  tail call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.17"* %41, %"class.WTF::String"* dereferenceable(8) %47) #7
  br label %79

79:                                               ; preds = %75, %78
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %44, i64 1
  %81 = icmp eq %"struct.WTF::KeyValuePair"* %80, %20
  br i1 %81, label %42, label %82

82:                                               ; preds = %79, %88
  %83 = phi %"struct.WTF::KeyValuePair"* [ %89, %88 ], [ %80, %79 ]
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %83, i64 0, i32 0
  %85 = load i64, i64* %84, align 8
  %86 = add i64 %85, 1
  %87 = icmp ult i64 %86, 2
  br i1 %87, label %88, label %91

88:                                               ; preds = %82
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %83, i64 1
  %90 = icmp eq %"struct.WTF::KeyValuePair"* %89, %20
  br i1 %90, label %42, label %82

91:                                               ; preds = %82
  %92 = icmp eq %"struct.WTF::KeyValuePair"* %83, %20
  br i1 %92, label %42, label %43
}

declare void @_ZN5blink13DOMStringList4SortEv(%"class.blink::DOMStringList"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(8) %"class.WTF::String"* @_ZNK5blink11IDBDatabase18GetObjectStoreNameEl(%"class.blink::IDBDatabase"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 4, i32 4, i32 0
  %5 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZNK3WTF9HashTableIlNS_12KeyValuePairIl13scoped_refptrIN5blink22IDBObjectStoreMetadataEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE4findERKl(%"class.WTF::HashTable.13"* %4, i64* nonnull dereferenceable(8) %3) #7
  %6 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %5, 0
  %7 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 0, i32 1, i32 0
  %8 = load %"class.blink::IDBObjectStoreMetadata"*, %"class.blink::IDBObjectStoreMetadata"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %8, i64 0, i32 1
  ret %"class.WTF::String"* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::IDBObjectStore"* @_ZN5blink11IDBDatabase17createObjectStoreERKN3WTF6StringERKNS_10IDBKeyPathEbRNS_14ExceptionStateE(%"class.blink::IDBDatabase"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::IDBKeyPath"* dereferenceable(32), i1 zeroext, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::TimeTicks", align 8
  %7 = alloca i64, align 8
  %8 = alloca %class.scoped_refptr.16, align 8
  %9 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 66, i32 0), align 16
  %10 = and i8 %9, 25
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %18, label %12, !prof !3

12:                                               ; preds = %5
  %13 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #7
  %14 = bitcast %"class.base::TimeTicks"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #7
  %15 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %6, i64 0, i32 0, i32 0
  %16 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #7
  store i64 %16, i64* %15, align 8
  %17 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 66, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %13, %"class.base::TimeTicks"* nonnull dereferenceable(8) %6, %"class.base::trace_event::TraceArguments"* null, i32 0) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #7
  br label %18

18:                                               ; preds = %5, %12
  %19 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %5 ], [ getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1, i64 0, i64 0), %12 ]
  %20 = phi i8* [ null, %5 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 66, i32 0), %12 ]
  %21 = phi i64 [ -6148914691236517206, %5 ], [ %17, %12 ]
  %22 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 6, i32 0, i32 0
  %23 = load %"class.blink::IDBTransaction"*, %"class.blink::IDBTransaction"** %22, align 8
  %24 = icmp eq %"class.blink::IDBTransaction"* %23, null
  br i1 %24, label %25, label %26

25:                                               ; preds = %18
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %4, i32 11, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @_ZN5blink11IDBDatabase40kNotVersionChangeTransactionErrorMessageE, i64 0, i64 0)) #7
  br label %172

26:                                               ; preds = %18
  %27 = getelementptr inbounds %"class.blink::IDBTransaction", %"class.blink::IDBTransaction"* %23, i64 0, i32 10
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %32, label %30

30:                                               ; preds = %26
  %31 = call i8* @_ZNK5blink14IDBTransaction20InactiveErrorMessageEv(%"class.blink::IDBTransaction"* nonnull %23) #7
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %4, i32 31, i8* %31) #7
  br label %172

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.blink::IDBKeyPath", %"class.blink::IDBKeyPath"* %2, i64 0, i32 0
  %34 = load i32, i32* %33, align 8
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %39, label %36

36:                                               ; preds = %32
  %37 = call zeroext i1 @_ZNK5blink10IDBKeyPath7IsValidEv(%"class.blink::IDBKeyPath"* %2) #7
  br i1 %37, label %39, label %38

38:                                               ; preds = %36
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %4, i32 12, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0)) #7
  br label %172

39:                                               ; preds = %36, %32
  %40 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 4, i32 4, i32 0, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  %43 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 4, i32 4, i32 0, i32 0
  %44 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 4, i32 4, i32 0, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %44, i64 %47
  br i1 %42, label %92, label %49

49:                                               ; preds = %39
  %50 = icmp eq i32 %46, 0
  br i1 %50, label %60, label %51

51:                                               ; preds = %49, %57
  %52 = phi %"struct.WTF::KeyValuePair"* [ %58, %57 ], [ %44, %49 ]
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %52, i64 0, i32 0
  %54 = load i64, i64* %53, align 8
  %55 = add i64 %54, 1
  %56 = icmp ult i64 %55, 2
  br i1 %56, label %57, label %60

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %52, i64 1
  %59 = icmp eq %"struct.WTF::KeyValuePair"* %58, %48
  br i1 %59, label %92, label %51

60:                                               ; preds = %51, %49
  %61 = phi %"struct.WTF::KeyValuePair"* [ %44, %49 ], [ %52, %51 ]
  %62 = icmp eq %"struct.WTF::KeyValuePair"* %61, %48
  br i1 %62, label %92, label %63

63:                                               ; preds = %60
  %64 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  br label %65

65:                                               ; preds = %85, %63
  %66 = phi %"struct.WTF::KeyValuePair"* [ %61, %63 ], [ %77, %85 ]
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %66, i64 0, i32 1, i32 0
  %68 = load %"class.blink::IDBObjectStoreMetadata"*, %"class.blink::IDBObjectStoreMetadata"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %68, i64 0, i32 1, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %72 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %70, %"class.WTF::StringImpl"* %71) #7
  br i1 %72, label %87, label %73

73:                                               ; preds = %65
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %66, i64 1
  %75 = icmp eq %"struct.WTF::KeyValuePair"* %74, %48
  br i1 %75, label %92, label %76

76:                                               ; preds = %73, %82
  %77 = phi %"struct.WTF::KeyValuePair"* [ %83, %82 ], [ %74, %73 ]
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %77, i64 0, i32 0
  %79 = load i64, i64* %78, align 8
  %80 = add i64 %79, 1
  %81 = icmp ult i64 %80, 2
  br i1 %81, label %82, label %85

82:                                               ; preds = %76
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %77, i64 1
  %84 = icmp eq %"struct.WTF::KeyValuePair"* %83, %48
  br i1 %84, label %92, label %76

85:                                               ; preds = %76
  %86 = icmp eq %"struct.WTF::KeyValuePair"* %77, %48
  br i1 %86, label %92, label %65

87:                                               ; preds = %65
  %88 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %66, i64 0, i32 0
  %89 = load i64, i64* %88, align 8
  %90 = icmp eq i64 %89, -1
  br i1 %90, label %92, label %91

91:                                               ; preds = %87
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %4, i32 29, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @_ZN5blink11IDBDatabase33kObjectStoreNameTakenErrorMessageE, i64 0, i64 0)) #7
  br label %172

92:                                               ; preds = %57, %73, %85, %82, %87, %39, %60
  br i1 %3, label %93, label %104

93:                                               ; preds = %92
  %94 = load i32, i32* %33, align 8
  switch i32 %94, label %104 [
    i32 1, label %95
    i32 2, label %103
  ]

95:                                               ; preds = %93
  %96 = getelementptr inbounds %"class.blink::IDBKeyPath", %"class.blink::IDBKeyPath"* %2, i64 0, i32 1, i32 0, i32 0
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %96, align 8
  %98 = icmp eq %"class.WTF::StringImpl"* %97, null
  br i1 %98, label %103, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 1
  %101 = load i32, i32* %100, align 4
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %104

103:                                              ; preds = %93, %95, %99
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %4, i32 15, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.3, i64 0, i64 0)) #7
  br label %172

104:                                              ; preds = %93, %99, %92
  %105 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %106 = load %"class.blink::WebIDBDatabase"*, %"class.blink::WebIDBDatabase"** %105, align 8
  %107 = icmp eq %"class.blink::WebIDBDatabase"* %106, null
  br i1 %107, label %108, label %109

108:                                              ; preds = %104
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %4, i32 11, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @_ZN5blink11IDBDatabase27kDatabaseClosedErrorMessageE, i64 0, i64 0)) #7
  br label %172

109:                                              ; preds = %104
  %110 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %110) #7
  %111 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 4, i32 3
  %112 = load i64, i64* %111, align 8
  %113 = add nsw i64 %112, 1
  store i64 %113, i64* %7, align 8
  %114 = load %"class.blink::IDBTransaction"*, %"class.blink::IDBTransaction"** %22, align 8
  %115 = getelementptr inbounds %"class.blink::IDBTransaction", %"class.blink::IDBTransaction"* %114, i64 0, i32 3, i32 0, i32 0, i32 0
  %116 = load %"class.blink::WebIDBTransaction"*, %"class.blink::WebIDBTransaction"** %115, align 8
  %117 = bitcast %"class.blink::WebIDBTransaction"* %116 to void (%"class.blink::WebIDBTransaction"*, i64, %"class.WTF::String"*, %"class.blink::IDBKeyPath"*, i1)***
  %118 = load void (%"class.blink::WebIDBTransaction"*, i64, %"class.WTF::String"*, %"class.blink::IDBKeyPath"*, i1)**, void (%"class.blink::WebIDBTransaction"*, i64, %"class.WTF::String"*, %"class.blink::IDBKeyPath"*, i1)*** %117, align 8
  %119 = getelementptr inbounds void (%"class.blink::WebIDBTransaction"*, i64, %"class.WTF::String"*, %"class.blink::IDBKeyPath"*, i1)*, void (%"class.blink::WebIDBTransaction"*, i64, %"class.WTF::String"*, %"class.blink::IDBKeyPath"*, i1)** %118, i64 2
  %120 = load void (%"class.blink::WebIDBTransaction"*, i64, %"class.WTF::String"*, %"class.blink::IDBKeyPath"*, i1)*, void (%"class.blink::WebIDBTransaction"*, i64, %"class.WTF::String"*, %"class.blink::IDBKeyPath"*, i1)** %119, align 8
  call void %120(%"class.blink::WebIDBTransaction"* %116, i64 %113, %"class.WTF::String"* dereferenceable(8) %1, %"class.blink::IDBKeyPath"* dereferenceable(32) %2, i1 zeroext %3) #7
  %121 = bitcast %class.scoped_refptr.16* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %121) #7
  %122 = getelementptr inbounds %class.scoped_refptr.16, %class.scoped_refptr.16* %8, i64 0, i32 0
  %123 = call noalias i8* @malloc(i64 96) #7
  %124 = bitcast i8* %123 to %"class.blink::IDBObjectStoreMetadata"*
  call void @_ZN5blink22IDBObjectStoreMetadataC1ERKN3WTF6StringElRKNS_10IDBKeyPathEbl(%"class.blink::IDBObjectStoreMetadata"* %124, %"class.WTF::String"* dereferenceable(8) %1, i64 %113, %"class.blink::IDBKeyPath"* dereferenceable(32) %2, i1 zeroext %3, i64 30) #7
  %125 = bitcast %class.scoped_refptr.16* %8 to i8**
  store i8* %123, i8** %125, align 8
  %126 = load %"class.blink::IDBTransaction"*, %"class.blink::IDBTransaction"** %22, align 8
  %127 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 64) #7
  %128 = bitcast i8* %127 to %"class.blink::IDBObjectStore"*
  %129 = icmp eq i8* %123, null
  br i1 %129, label %132, label %130

130:                                              ; preds = %109
  %131 = bitcast i8* %123 to %"class.base::subtle::RefCountedBase"*
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* nonnull %131) #7
  br label %132

132:                                              ; preds = %109, %130
  call void @_ZN5blink14IDBObjectStoreC1E13scoped_refptrINS_22IDBObjectStoreMetadataEEPNS_14IDBTransactionE(%"class.blink::IDBObjectStore"* %128, %"class.blink::IDBObjectStoreMetadata"* %124, %"class.blink::IDBTransaction"* %126) #7
  %133 = getelementptr inbounds i8, i8* %127, i64 -4
  %134 = bitcast i8* %133 to i16*
  %135 = load atomic i16, i16* %134 monotonic, align 2
  %136 = or i16 %135, 1
  store atomic i16 %136, i16* %134 release, align 2
  %137 = load %"class.blink::IDBTransaction"*, %"class.blink::IDBTransaction"** %22, align 8
  call void @_ZN5blink14IDBTransaction18ObjectStoreCreatedERKN3WTF6StringEPNS_14IDBObjectStoreE(%"class.blink::IDBTransaction"* %137, %"class.WTF::String"* dereferenceable(8) %1, %"class.blink::IDBObjectStore"* %128) #7
  %138 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 4, i32 4, i32 0
  %139 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIlNS_12KeyValuePairIl13scoped_refptrIN5blink22IDBObjectStoreMetadataEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERlS5_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.13"* %138, i64* nonnull dereferenceable(8) %7, %class.scoped_refptr.16* nonnull dereferenceable(8) %8) #7
  %140 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %139, 1
  %141 = and i8 %140, 1
  %142 = icmp eq i8 %141, 0
  br i1 %142, label %143, label %159

143:                                              ; preds = %132
  %144 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %139, 0
  %145 = bitcast %class.scoped_refptr.16* %8 to i64*
  %146 = load i64, i64* %145, align 8
  store %"class.blink::IDBObjectStoreMetadata"* null, %"class.blink::IDBObjectStoreMetadata"** %122, align 8
  %147 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %144, i64 0, i32 1
  %148 = bitcast %class.scoped_refptr.16* %147 to i64*
  %149 = getelementptr inbounds %class.scoped_refptr.16, %class.scoped_refptr.16* %147, i64 0, i32 0
  %150 = load %"class.blink::IDBObjectStoreMetadata"*, %"class.blink::IDBObjectStoreMetadata"** %149, align 8
  store i64 %146, i64* %148, align 8
  %151 = icmp eq %"class.blink::IDBObjectStoreMetadata"* %150, null
  br i1 %151, label %159, label %152

152:                                              ; preds = %143
  %153 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %150, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %153) #7
  %154 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %150, i64 0, i32 0, i32 0, i32 0, i32 0
  %155 = load i32, i32* %154, align 4
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %159

157:                                              ; preds = %152
  call void @_ZN5blink22IDBObjectStoreMetadataD2Ev(%"class.blink::IDBObjectStoreMetadata"* nonnull %150) #7
  %158 = bitcast %"class.blink::IDBObjectStoreMetadata"* %150 to i8*
  call void @free(i8* %158) #7
  br label %159

159:                                              ; preds = %132, %143, %152, %157
  %160 = load i64, i64* %111, align 8
  %161 = add nsw i64 %160, 1
  store i64 %161, i64* %111, align 8
  %162 = load %"class.blink::IDBObjectStoreMetadata"*, %"class.blink::IDBObjectStoreMetadata"** %122, align 8
  %163 = icmp eq %"class.blink::IDBObjectStoreMetadata"* %162, null
  br i1 %163, label %171, label %164

164:                                              ; preds = %159
  %165 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %162, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %165) #7
  %166 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %162, i64 0, i32 0, i32 0, i32 0, i32 0
  %167 = load i32, i32* %166, align 4
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %169, label %171

169:                                              ; preds = %164
  call void @_ZN5blink22IDBObjectStoreMetadataD2Ev(%"class.blink::IDBObjectStoreMetadata"* nonnull %162) #7
  %170 = bitcast %"class.blink::IDBObjectStoreMetadata"* %162 to i8*
  call void @free(i8* %170) #7
  br label %171

171:                                              ; preds = %159, %164, %169
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %121) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %110) #7
  br label %172

172:                                              ; preds = %171, %108, %103, %91, %38, %30, %25
  %173 = phi %"class.blink::IDBObjectStore"* [ null, %91 ], [ null, %103 ], [ %128, %171 ], [ null, %108 ], [ null, %38 ], [ null, %30 ], [ null, %25 ]
  %174 = icmp eq i8* %20, null
  br i1 %174, label %179, label %175

175:                                              ; preds = %172
  %176 = load i8, i8* %20, align 1
  %177 = icmp eq i8 %176, 0
  br i1 %177, label %179, label %178

178:                                              ; preds = %175
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %20, i8* %19, i64 %21) #7
  br label %179

179:                                              ; preds = %172, %175, %178
  ret %"class.blink::IDBObjectStore"* %173
}

declare void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"*, i32, i8*) local_unnamed_addr #1

declare i8* @_ZNK5blink14IDBTransaction20InactiveErrorMessageEv(%"class.blink::IDBTransaction"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink10IDBKeyPath7IsValidEv(%"class.blink::IDBKeyPath"*) local_unnamed_addr #1

declare void @_ZN5blink22IDBObjectStoreMetadataC1ERKN3WTF6StringElRKNS_10IDBKeyPathEbl(%"class.blink::IDBObjectStoreMetadata"*, %"class.WTF::String"* dereferenceable(8), i64, %"class.blink::IDBKeyPath"* dereferenceable(32), i1 zeroext, i64) unnamed_addr #1

declare void @_ZN5blink14IDBTransaction18ObjectStoreCreatedERKN3WTF6StringEPNS_14IDBObjectStoreE(%"class.blink::IDBTransaction"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::IDBObjectStore"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11IDBDatabase17deleteObjectStoreERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::IDBDatabase"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::TimeTicks", align 8
  %5 = alloca i64, align 8
  %6 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 66, i32 0), align 16
  %7 = and i8 %6, 25
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %15, label %9, !prof !3

9:                                                ; preds = %3
  %10 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #7
  %11 = bitcast %"class.base::TimeTicks"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #7
  %12 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %4, i64 0, i32 0, i32 0
  %13 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #7
  store i64 %13, i64* %12, align 8
  %14 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 66, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.4, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %10, %"class.base::TimeTicks"* nonnull dereferenceable(8) %4, %"class.base::trace_event::TraceArguments"* null, i32 0) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #7
  br label %15

15:                                               ; preds = %3, %9
  %16 = phi i64 [ -6148914691236517206, %3 ], [ %14, %9 ]
  %17 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %3 ], [ getelementptr inbounds ([31 x i8], [31 x i8]* @.str.4, i64 0, i64 0), %9 ]
  %18 = phi i8* [ null, %3 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 66, i32 0), %9 ]
  %19 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 6, i32 0, i32 0
  %20 = load %"class.blink::IDBTransaction"*, %"class.blink::IDBTransaction"** %19, align 8
  %21 = icmp eq %"class.blink::IDBTransaction"* %20, null
  br i1 %21, label %22, label %23

22:                                               ; preds = %15
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 11, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @_ZN5blink11IDBDatabase40kNotVersionChangeTransactionErrorMessageE, i64 0, i64 0)) #7
  br label %110

23:                                               ; preds = %15
  %24 = getelementptr inbounds %"class.blink::IDBTransaction", %"class.blink::IDBTransaction"* %20, i64 0, i32 10
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %29, label %27

27:                                               ; preds = %23
  %28 = call i8* @_ZNK5blink14IDBTransaction20InactiveErrorMessageEv(%"class.blink::IDBTransaction"* nonnull %20) #7
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 31, i8* %28) #7
  br label %110

29:                                               ; preds = %23
  %30 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #7
  store i64 -6148914691236517206, i64* %5, align 8
  %31 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 4, i32 4, i32 0, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 4, i32 4, i32 0, i32 0
  %35 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 4, i32 4, i32 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %35, i64 %38
  br i1 %33, label %80, label %40

40:                                               ; preds = %29
  %41 = icmp eq i32 %37, 0
  br i1 %41, label %51, label %42

42:                                               ; preds = %40, %48
  %43 = phi %"struct.WTF::KeyValuePair"* [ %49, %48 ], [ %35, %40 ]
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %43, i64 0, i32 0
  %45 = load i64, i64* %44, align 8
  %46 = add i64 %45, 1
  %47 = icmp ult i64 %46, 2
  br i1 %47, label %48, label %51

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %43, i64 1
  %50 = icmp eq %"struct.WTF::KeyValuePair"* %49, %39
  br i1 %50, label %80, label %42

51:                                               ; preds = %42, %40
  %52 = phi %"struct.WTF::KeyValuePair"* [ %35, %40 ], [ %43, %42 ]
  %53 = icmp eq %"struct.WTF::KeyValuePair"* %52, %39
  br i1 %53, label %80, label %54

54:                                               ; preds = %51
  %55 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  br label %56

56:                                               ; preds = %78, %54
  %57 = phi %"struct.WTF::KeyValuePair"* [ %52, %54 ], [ %70, %78 ]
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %57, i64 0, i32 1, i32 0
  %59 = load %"class.blink::IDBObjectStoreMetadata"*, %"class.blink::IDBObjectStoreMetadata"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %59, i64 0, i32 1, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %63 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %61, %"class.WTF::StringImpl"* %62) #7
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %57, i64 0, i32 0
  %65 = load i64, i64* %64, align 8
  br i1 %63, label %81, label %66

66:                                               ; preds = %56
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %57, i64 1
  %68 = icmp eq %"struct.WTF::KeyValuePair"* %67, %39
  br i1 %68, label %80, label %69

69:                                               ; preds = %66, %75
  %70 = phi %"struct.WTF::KeyValuePair"* [ %76, %75 ], [ %67, %66 ]
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %70, i64 0, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = add i64 %72, 1
  %74 = icmp ult i64 %73, 2
  br i1 %74, label %75, label %78

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %70, i64 1
  %77 = icmp eq %"struct.WTF::KeyValuePair"* %76, %39
  br i1 %77, label %80, label %69

78:                                               ; preds = %69
  %79 = icmp eq %"struct.WTF::KeyValuePair"* %70, %39
  br i1 %79, label %80, label %56

80:                                               ; preds = %48, %66, %78, %75, %51, %29
  store i64 -1, i64* %5, align 8
  br label %83

81:                                               ; preds = %56
  store i64 %65, i64* %5, align 8
  %82 = icmp eq i64 %65, -1
  br i1 %82, label %83, label %84

83:                                               ; preds = %80, %81
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 8, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @_ZN5blink11IDBDatabase30kNoSuchObjectStoreErrorMessageE, i64 0, i64 0)) #7
  br label %109

84:                                               ; preds = %81
  %85 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %86 = load %"class.blink::WebIDBDatabase"*, %"class.blink::WebIDBDatabase"** %85, align 8
  %87 = icmp eq %"class.blink::WebIDBDatabase"* %86, null
  br i1 %87, label %88, label %89

88:                                               ; preds = %84
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 11, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @_ZN5blink11IDBDatabase27kDatabaseClosedErrorMessageE, i64 0, i64 0)) #7
  br label %109

89:                                               ; preds = %84
  %90 = load %"class.blink::IDBTransaction"*, %"class.blink::IDBTransaction"** %19, align 8
  %91 = getelementptr inbounds %"class.blink::IDBTransaction", %"class.blink::IDBTransaction"* %90, i64 0, i32 3, i32 0, i32 0, i32 0
  %92 = load %"class.blink::WebIDBTransaction"*, %"class.blink::WebIDBTransaction"** %91, align 8
  %93 = bitcast %"class.blink::WebIDBTransaction"* %92 to void (%"class.blink::WebIDBTransaction"*, i64)***
  %94 = load void (%"class.blink::WebIDBTransaction"*, i64)**, void (%"class.blink::WebIDBTransaction"*, i64)*** %93, align 8
  %95 = getelementptr inbounds void (%"class.blink::WebIDBTransaction"*, i64)*, void (%"class.blink::WebIDBTransaction"*, i64)** %94, i64 3
  %96 = load void (%"class.blink::WebIDBTransaction"*, i64)*, void (%"class.blink::WebIDBTransaction"*, i64)** %95, align 8
  call void %96(%"class.blink::WebIDBTransaction"* %92, i64 %65) #7
  %97 = load %"class.blink::IDBTransaction"*, %"class.blink::IDBTransaction"** %19, align 8
  call void @_ZN5blink14IDBTransaction18ObjectStoreDeletedElRKN3WTF6StringE(%"class.blink::IDBTransaction"* %97, i64 %65, %"class.WTF::String"* dereferenceable(8) %1) #7
  %98 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 4, i32 4
  %99 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %98, i64 0, i32 0
  %100 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIlNS_12KeyValuePairIl13scoped_refptrIN5blink22IDBObjectStoreMetadataEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE4findERKl(%"class.WTF::HashTable.13"* %99, i64* nonnull dereferenceable(8) %5) #7
  %101 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %100, 0
  %102 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %98, i64 0, i32 0, i32 0
  %103 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %102, align 8
  %104 = load i32, i32* %36, align 8
  %105 = zext i32 %104 to i64
  %106 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %103, i64 %105
  %107 = icmp eq %"struct.WTF::KeyValuePair"* %106, %101
  br i1 %107, label %109, label %108

108:                                              ; preds = %89
  call void @_ZN3WTF9HashTableIlNS_12KeyValuePairIl13scoped_refptrIN5blink22IDBObjectStoreMetadataEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE5eraseEPKS6_(%"class.WTF::HashTable.13"* %99, %"struct.WTF::KeyValuePair"* %101) #7
  br label %109

109:                                              ; preds = %108, %89, %88, %83
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #7
  br label %110

110:                                              ; preds = %109, %27, %22
  %111 = icmp eq i8* %18, null
  br i1 %111, label %116, label %112

112:                                              ; preds = %110
  %113 = load i8, i8* %18, align 1
  %114 = icmp eq i8 %113, 0
  br i1 %114, label %116, label %115

115:                                              ; preds = %112
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %18, i8* %17, i64 %16) #7
  br label %116

116:                                              ; preds = %110, %112, %115
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink11IDBDatabase17FindObjectStoreIdERKN3WTF6StringE(%"class.blink::IDBDatabase"* nocapture readonly, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 4, i32 4, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  %6 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 4, i32 4, i32 0, i32 0
  %7 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 4, i32 4, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %7, i64 %10
  br i1 %5, label %52, label %12

12:                                               ; preds = %2
  %13 = icmp eq i32 %9, 0
  br i1 %13, label %23, label %14

14:                                               ; preds = %12, %20
  %15 = phi %"struct.WTF::KeyValuePair"* [ %21, %20 ], [ %7, %12 ]
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %15, i64 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = add i64 %17, 1
  %19 = icmp ult i64 %18, 2
  br i1 %19, label %20, label %23

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %15, i64 1
  %22 = icmp eq %"struct.WTF::KeyValuePair"* %21, %11
  br i1 %22, label %52, label %14

23:                                               ; preds = %14, %12
  %24 = phi %"struct.WTF::KeyValuePair"* [ %7, %12 ], [ %15, %14 ]
  %25 = icmp eq %"struct.WTF::KeyValuePair"* %24, %11
  br i1 %25, label %52, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  br label %28

28:                                               ; preds = %26, %50
  %29 = phi %"struct.WTF::KeyValuePair"* [ %24, %26 ], [ %42, %50 ]
  %30 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %29, i64 0, i32 1, i32 0
  %31 = load %"class.blink::IDBObjectStoreMetadata"*, %"class.blink::IDBObjectStoreMetadata"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %31, i64 0, i32 1, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %35 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %33, %"class.WTF::StringImpl"* %34) #7
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %29, i64 0, i32 0
  %37 = load i64, i64* %36, align 8
  br i1 %35, label %52, label %38

38:                                               ; preds = %28
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %29, i64 1
  %40 = icmp eq %"struct.WTF::KeyValuePair"* %39, %11
  br i1 %40, label %52, label %41

41:                                               ; preds = %38, %47
  %42 = phi %"struct.WTF::KeyValuePair"* [ %48, %47 ], [ %39, %38 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %42, i64 0, i32 0
  %44 = load i64, i64* %43, align 8
  %45 = add i64 %44, 1
  %46 = icmp ult i64 %45, 2
  br i1 %46, label %47, label %50

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %42, i64 1
  %49 = icmp eq %"struct.WTF::KeyValuePair"* %48, %11
  br i1 %49, label %52, label %41

50:                                               ; preds = %41
  %51 = icmp eq %"struct.WTF::KeyValuePair"* %42, %11
  br i1 %51, label %52, label %28

52:                                               ; preds = %20, %38, %50, %28, %47, %2, %23
  %53 = phi i64 [ -1, %23 ], [ -1, %2 ], [ -1, %47 ], [ -1, %38 ], [ %37, %28 ], [ -1, %50 ], [ -1, %20 ]
  ret i64 %53
}

declare void @_ZN5blink14IDBTransaction18ObjectStoreDeletedElRKN3WTF6StringE(%"class.blink::IDBTransaction"*, i64, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::IDBTransaction"* @_ZN5blink11IDBDatabase11transactionEPNS_11ScriptStateEPKNS_29V8UnionStringOrStringSequenceERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::IDBDatabase"*, %"class.blink::ScriptState"*, %"class.blink::V8UnionStringOrStringSequence"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = tail call %"class.blink::IDBTransaction"* @_ZN5blink11IDBDatabase11transactionEPNS_11ScriptStateEPKNS_29V8UnionStringOrStringSequenceERKN3WTF6StringEPKNS_21IDBTransactionOptionsERNS_14ExceptionStateE(%"class.blink::IDBDatabase"* %0, %"class.blink::ScriptState"* %1, %"class.blink::V8UnionStringOrStringSequence"* %2, %"class.WTF::String"* dereferenceable(8) %3, %"class.blink::IDBTransactionOptions"* null, %"class.blink::ExceptionState"* dereferenceable(72) %4)
  ret %"class.blink::IDBTransaction"* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::IDBTransaction"* @_ZN5blink11IDBDatabase11transactionEPNS_11ScriptStateEPKNS_29V8UnionStringOrStringSequenceERKN3WTF6StringEPKNS_21IDBTransactionOptionsERNS_14ExceptionStateE(%"class.blink::IDBDatabase"*, %"class.blink::ScriptState"*, %"class.blink::V8UnionStringOrStringSequence"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::IDBTransactionOptions"* readonly, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.base::TimeTicks", align 8
  %8 = alloca %"class.WTF::HashSet.46", align 8
  %9 = alloca %"class.WTF::Vector.456", align 8
  %10 = alloca i64, align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.WTF::StringAppend", align 8
  %13 = alloca %"class.mojo::PendingAssociatedReceiver.543", align 8
  %14 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 66, i32 0), align 16
  %15 = and i8 %14, 25
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %23, label %17, !prof !3

17:                                               ; preds = %6
  %18 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #7
  %19 = bitcast %"class.base::TimeTicks"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #7
  %20 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %7, i64 0, i32 0, i32 0
  %21 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #7
  store i64 %21, i64* %20, align 8
  %22 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 66, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.6, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %18, %"class.base::TimeTicks"* nonnull dereferenceable(8) %7, %"class.base::trace_event::TraceArguments"* null, i32 0) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #7
  br label %23

23:                                               ; preds = %6, %17
  %24 = phi i8* [ null, %6 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 66, i32 0), %17 ]
  %25 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %6 ], [ getelementptr inbounds ([25 x i8], [25 x i8]* @.str.6, i64 0, i64 0), %17 ]
  %26 = phi i64 [ -6148914691236517206, %6 ], [ %22, %17 ]
  %27 = bitcast %"class.WTF::HashSet.46"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #7
  %28 = getelementptr inbounds %"class.WTF::HashSet.46", %"class.WTF::HashSet.46"* %8, i64 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.WTF::HashSet.46", %"class.WTF::HashSet.46"* %8, i64 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::HashSet.46", %"class.WTF::HashSet.46"* %8, i64 0, i32 0, i32 2
  %31 = bitcast %"class.WTF::HashSet.46"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 0, i64 20, i1 false) #7
  %32 = getelementptr inbounds %"class.blink::V8UnionStringOrStringSequence", %"class.blink::V8UnionStringOrStringSequence"* %2, i64 0, i32 1
  %33 = load i32, i32* %32, align 8
  switch i32 %33, label %53 [
    i32 0, label %34
    i32 1, label %38
  ]

34:                                               ; preds = %23
  %35 = getelementptr inbounds %"class.blink::V8UnionStringOrStringSequence", %"class.blink::V8UnionStringOrStringSequence"* %2, i64 0, i32 2
  %36 = getelementptr inbounds %"class.WTF::HashSet.46", %"class.WTF::HashSet.46"* %8, i64 0, i32 0
  %37 = call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.47"* nonnull %36, %"class.WTF::String"* dereferenceable(8) %35, %"class.WTF::String"* dereferenceable(8) %35) #7
  br label %53

38:                                               ; preds = %23
  %39 = getelementptr inbounds %"class.blink::V8UnionStringOrStringSequence", %"class.blink::V8UnionStringOrStringSequence"* %2, i64 0, i32 3, i32 0, i32 0, i32 0
  %40 = load %"class.WTF::String"*, %"class.WTF::String"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::V8UnionStringOrStringSequence", %"class.blink::V8UnionStringOrStringSequence"* %2, i64 0, i32 3, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %40, i64 %43
  %45 = icmp eq i32 %42, 0
  br i1 %45, label %53, label %46

46:                                               ; preds = %38
  %47 = getelementptr inbounds %"class.WTF::HashSet.46", %"class.WTF::HashSet.46"* %8, i64 0, i32 0
  br label %48

48:                                               ; preds = %46, %48
  %49 = phi %"class.WTF::String"* [ %40, %46 ], [ %51, %48 ]
  %50 = call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.47"* nonnull %47, %"class.WTF::String"* dereferenceable(8) %49, %"class.WTF::String"* dereferenceable(8) %49) #7
  %51 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %49, i64 1
  %52 = icmp eq %"class.WTF::String"* %51, %44
  br i1 %52, label %53, label %48

53:                                               ; preds = %48, %38, %23, %34
  %54 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 6, i32 0, i32 0
  %55 = load %"class.blink::IDBTransaction"*, %"class.blink::IDBTransaction"** %54, align 8
  %56 = icmp eq %"class.blink::IDBTransaction"* %55, null
  br i1 %56, label %58, label %57

57:                                               ; preds = %53
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %5, i32 11, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.7, i64 0, i64 0)) #7
  br label %380

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 9
  %60 = load i8, i8* %59, align 8, !range !2
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %63, label %62

62:                                               ; preds = %58
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %5, i32 11, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8, i64 0, i64 0)) #7
  br label %380

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %65 = load %"class.blink::WebIDBDatabase"*, %"class.blink::WebIDBDatabase"** %64, align 8
  %66 = icmp eq %"class.blink::WebIDBDatabase"* %65, null
  br i1 %66, label %67, label %68

67:                                               ; preds = %63
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %5, i32 11, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @_ZN5blink11IDBDatabase27kDatabaseClosedErrorMessageE, i64 0, i64 0)) #7
  br label %380

68:                                               ; preds = %63
  %69 = load i32, i32* %30, align 4
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %5, i32 15, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.9, i64 0, i64 0)) #7
  br label %380

72:                                               ; preds = %68
  %73 = bitcast %"class.WTF::Vector.456"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %73) #7
  %74 = getelementptr inbounds %"class.WTF::Vector.456", %"class.WTF::Vector.456"* %9, i64 0, i32 0, i32 0, i32 0
  %75 = getelementptr inbounds %"class.WTF::Vector.456", %"class.WTF::Vector.456"* %9, i64 0, i32 0, i32 0, i32 1
  %76 = getelementptr inbounds %"class.WTF::Vector.456", %"class.WTF::Vector.456"* %9, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %73, i8 0, i64 16, i1 false) #7
  %77 = load %"class.WTF::String"*, %"class.WTF::String"** %28, align 8
  %78 = load i32, i32* %29, align 8
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %77, i64 %79
  %81 = icmp eq i32 %78, 0
  br i1 %81, label %89, label %82

82:                                               ; preds = %72, %86
  %83 = phi %"class.WTF::String"* [ %87, %86 ], [ %77, %72 ]
  %84 = bitcast %"class.WTF::String"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  switch i64 %85, label %89 [
    i64 -1, label %86
    i64 0, label %86
  ]

86:                                               ; preds = %82, %82
  %87 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %83, i64 1
  %88 = icmp eq %"class.WTF::String"* %87, %80
  br i1 %88, label %172, label %82

89:                                               ; preds = %82, %72
  %90 = phi %"class.WTF::String"* [ %77, %72 ], [ %83, %82 ]
  %91 = icmp eq %"class.WTF::String"* %90, %80
  br i1 %91, label %172, label %92

92:                                               ; preds = %89
  %93 = bitcast i64* %10 to i8*
  %94 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 4, i32 4, i32 0, i32 2
  %95 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 4, i32 4, i32 0, i32 0
  %96 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 4, i32 4, i32 0, i32 1
  br label %97

97:                                               ; preds = %92, %169
  %98 = phi %"class.WTF::String"* [ %90, %92 ], [ %163, %169 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %93) #7
  store i64 -6148914691236517206, i64* %10, align 8
  %99 = load i32, i32* %94, align 4
  %100 = icmp eq i32 %99, 0
  %101 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %95, align 8
  %102 = load i32, i32* %96, align 8
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %101, i64 %103
  br i1 %100, label %145, label %105

105:                                              ; preds = %97
  %106 = icmp eq i32 %102, 0
  br i1 %106, label %116, label %107

107:                                              ; preds = %105, %113
  %108 = phi %"struct.WTF::KeyValuePair"* [ %114, %113 ], [ %101, %105 ]
  %109 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %108, i64 0, i32 0
  %110 = load i64, i64* %109, align 8
  %111 = add i64 %110, 1
  %112 = icmp ult i64 %111, 2
  br i1 %112, label %113, label %116

113:                                              ; preds = %107
  %114 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %108, i64 1
  %115 = icmp eq %"struct.WTF::KeyValuePair"* %114, %104
  br i1 %115, label %145, label %107

116:                                              ; preds = %107, %105
  %117 = phi %"struct.WTF::KeyValuePair"* [ %101, %105 ], [ %108, %107 ]
  %118 = icmp eq %"struct.WTF::KeyValuePair"* %117, %104
  br i1 %118, label %145, label %119

119:                                              ; preds = %116
  %120 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %98, i64 0, i32 0, i32 0
  br label %121

121:                                              ; preds = %143, %119
  %122 = phi %"struct.WTF::KeyValuePair"* [ %117, %119 ], [ %135, %143 ]
  %123 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %122, i64 0, i32 1, i32 0
  %124 = load %"class.blink::IDBObjectStoreMetadata"*, %"class.blink::IDBObjectStoreMetadata"** %123, align 8
  %125 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %124, i64 0, i32 1, i32 0, i32 0
  %126 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %125, align 8
  %127 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %120, align 8
  %128 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %126, %"class.WTF::StringImpl"* %127) #7
  %129 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %122, i64 0, i32 0
  %130 = load i64, i64* %129, align 8
  br i1 %128, label %146, label %131

131:                                              ; preds = %121
  %132 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %122, i64 1
  %133 = icmp eq %"struct.WTF::KeyValuePair"* %132, %104
  br i1 %133, label %145, label %134

134:                                              ; preds = %131, %140
  %135 = phi %"struct.WTF::KeyValuePair"* [ %141, %140 ], [ %132, %131 ]
  %136 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %135, i64 0, i32 0
  %137 = load i64, i64* %136, align 8
  %138 = add i64 %137, 1
  %139 = icmp ult i64 %138, 2
  br i1 %139, label %140, label %143

140:                                              ; preds = %134
  %141 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %135, i64 1
  %142 = icmp eq %"struct.WTF::KeyValuePair"* %141, %104
  br i1 %142, label %145, label %134

143:                                              ; preds = %134
  %144 = icmp eq %"struct.WTF::KeyValuePair"* %135, %104
  br i1 %144, label %145, label %121

145:                                              ; preds = %116, %97, %113, %131, %143, %140
  store i64 -1, i64* %10, align 8
  br label %171

146:                                              ; preds = %121
  store i64 %130, i64* %10, align 8
  %147 = icmp eq i64 %130, -1
  br i1 %147, label %171, label %148

148:                                              ; preds = %146
  %149 = load i32, i32* %76, align 4
  %150 = load i32, i32* %75, align 8
  %151 = icmp eq i32 %149, %150
  br i1 %151, label %158, label %152, !prof !4

152:                                              ; preds = %148
  %153 = load i64*, i64** %74, align 8
  %154 = zext i32 %149 to i64
  %155 = getelementptr inbounds i64, i64* %153, i64 %154
  store i64 %130, i64* %155, align 8
  %156 = load i32, i32* %76, align 4
  %157 = add i32 %156, 1
  store i32 %157, i32* %76, align 4
  br label %159

158:                                              ; preds = %148
  call void @_ZN3WTF6VectorIlLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRlEEvOT_(%"class.WTF::Vector.456"* nonnull %9, i64* nonnull dereferenceable(8) %10) #7
  br label %159

159:                                              ; preds = %152, %158
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %93) #7
  %160 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %98, i64 1
  %161 = icmp eq %"class.WTF::String"* %160, %80
  br i1 %161, label %172, label %162

162:                                              ; preds = %159, %166
  %163 = phi %"class.WTF::String"* [ %167, %166 ], [ %160, %159 ]
  %164 = bitcast %"class.WTF::String"* %163 to i64*
  %165 = load i64, i64* %164, align 8
  switch i64 %165, label %169 [
    i64 -1, label %166
    i64 0, label %166
  ]

166:                                              ; preds = %162, %162
  %167 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %163, i64 1
  %168 = icmp eq %"class.WTF::String"* %167, %80
  br i1 %168, label %172, label %162

169:                                              ; preds = %162
  %170 = icmp eq %"class.WTF::String"* %163, %80
  br i1 %170, label %172, label %97

171:                                              ; preds = %146, %145
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %5, i32 8, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.10, i64 0, i64 0)) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %93) #7
  br label %369

172:                                              ; preds = %86, %159, %169, %166, %89
  %173 = call i32 @_ZN5blink14IDBTransaction12StringToModeERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %3) #7
  %174 = icmp ugt i32 %173, 1
  br i1 %174, label %175, label %326

175:                                              ; preds = %172
  %176 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %176) #7
  %177 = bitcast %"class.WTF::StringAppend"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %177) #7
  %178 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %179 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %178, align 8
  %180 = icmp eq %"class.WTF::StringImpl"* %179, null
  br i1 %180, label %256, label %181

181:                                              ; preds = %175
  %182 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %183 = load atomic i32, i32* %182 monotonic, align 4
  %184 = and i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 0, i32 0
  %187 = load i32, i32* %186, align 4
  br i1 %185, label %188, label %198

188:                                              ; preds = %181
  %189 = zext i32 %187 to i33
  %190 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %189, i33 1) #7
  %191 = extractvalue { i33, i1 } %190, 1
  %192 = extractvalue { i33, i1 } %190, 0
  %193 = icmp slt i33 %192, 0
  %194 = or i1 %191, %193
  br i1 %194, label %195, label %196, !prof !4

195:                                              ; preds = %188
  call void @llvm.trap() #7
  unreachable

196:                                              ; preds = %188
  %197 = trunc i33 %192 to i32
  store i32 %197, i32* %186, align 4
  br label %198

198:                                              ; preds = %196, %181
  %199 = phi i32 [ %197, %196 ], [ %187, %181 ]
  %200 = load atomic i32, i32* %182 monotonic, align 4
  %201 = and i32 %200, 2
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %203, label %213

203:                                              ; preds = %198
  %204 = zext i32 %199 to i33
  %205 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %204, i33 1) #7
  %206 = extractvalue { i33, i1 } %205, 1
  %207 = extractvalue { i33, i1 } %205, 0
  %208 = icmp slt i33 %207, 0
  %209 = or i1 %206, %208
  br i1 %209, label %210, label %211, !prof !4

210:                                              ; preds = %203
  call void @llvm.trap() #7
  unreachable

211:                                              ; preds = %203
  %212 = trunc i33 %207 to i32
  store i32 %212, i32* %186, align 4
  br label %213

213:                                              ; preds = %211, %198
  %214 = phi i32 [ %212, %211 ], [ %199, %198 ]
  %215 = load atomic i32, i32* %182 monotonic, align 4
  %216 = and i32 %215, 2
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %218, label %220

218:                                              ; preds = %213
  %219 = add i32 %214, -1
  store i32 %219, i32* %186, align 4
  br label %220

220:                                              ; preds = %218, %213
  %221 = phi i32 [ %219, %218 ], [ %214, %213 ]
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %223, label %224

223:                                              ; preds = %220
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %179) #7
  br label %224

224:                                              ; preds = %220, %223
  %225 = load atomic i32, i32* %182 monotonic, align 4
  %226 = and i32 %225, 2
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %228, label %239

228:                                              ; preds = %224
  %229 = load i32, i32* %186, align 4
  %230 = zext i32 %229 to i33
  %231 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %230, i33 1) #7
  %232 = extractvalue { i33, i1 } %231, 1
  %233 = extractvalue { i33, i1 } %231, 0
  %234 = icmp slt i33 %233, 0
  %235 = or i1 %232, %234
  br i1 %235, label %236, label %237, !prof !4

236:                                              ; preds = %228
  call void @llvm.trap() #7
  unreachable

237:                                              ; preds = %228
  %238 = trunc i33 %233 to i32
  store i32 %238, i32* %186, align 4
  br label %239

239:                                              ; preds = %224, %237
  %240 = bitcast %"class.WTF::StringAppend"* %12 to i64*
  store i64 ptrtoint ([21 x i8]* @.str.11 to i64), i64* %240, align 8
  %241 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %12, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %179, %"class.WTF::StringImpl"** %241, align 8
  %242 = load atomic i32, i32* %182 monotonic, align 4
  %243 = and i32 %242, 2
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %245, label %260

245:                                              ; preds = %239
  %246 = load i32, i32* %186, align 4
  %247 = zext i32 %246 to i33
  %248 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %247, i33 1) #7
  %249 = extractvalue { i33, i1 } %248, 1
  %250 = extractvalue { i33, i1 } %248, 0
  %251 = icmp slt i33 %250, 0
  %252 = or i1 %249, %251
  br i1 %252, label %253, label %254, !prof !4

253:                                              ; preds = %245
  call void @llvm.trap() #7
  unreachable

254:                                              ; preds = %245
  %255 = trunc i33 %250 to i32
  store i32 %255, i32* %186, align 4
  br label %260

256:                                              ; preds = %175
  %257 = bitcast %"class.WTF::StringAppend"* %12 to i64*
  store i64 ptrtoint ([21 x i8]* @.str.11 to i64), i64* %257, align 8
  %258 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %12, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %258, align 8
  %259 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %12, i64 0, i32 1
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.12, i64 0, i64 0), i8** %259, align 8
  br label %272

260:                                              ; preds = %254, %239
  %261 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %12, i64 0, i32 1
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.12, i64 0, i64 0), i8** %261, align 8
  %262 = load atomic i32, i32* %182 monotonic, align 4
  %263 = and i32 %262, 2
  %264 = icmp eq i32 %263, 0
  %265 = load i32, i32* %186, align 4
  br i1 %264, label %266, label %268

266:                                              ; preds = %260
  %267 = add i32 %265, -1
  store i32 %267, i32* %186, align 4
  br label %268

268:                                              ; preds = %266, %260
  %269 = phi i32 [ %267, %266 ], [ %265, %260 ]
  %270 = icmp eq i32 %269, 0
  br i1 %270, label %271, label %272

271:                                              ; preds = %268
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %179) #7
  br label %272

272:                                              ; preds = %256, %268, %271
  %273 = phi %"class.WTF::StringImpl"** [ %258, %256 ], [ %241, %268 ], [ %241, %271 ]
  %274 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %12)
  %275 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %274, %"class.WTF::StringImpl"** %275, align 8
  %276 = bitcast %"class.blink::ExceptionState"* %5 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %277 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %276, align 8
  %278 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %277, i64 3
  %279 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %278, align 8
  call void %279(%"class.blink::ExceptionState"* %5, %"class.WTF::String"* nonnull dereferenceable(8) %11) #7
  %280 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %275, align 8
  %281 = icmp eq %"class.WTF::StringImpl"* %280, null
  br i1 %281, label %295, label %282

282:                                              ; preds = %272
  %283 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %280, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %284 = load atomic i32, i32* %283 monotonic, align 4
  %285 = and i32 %284, 2
  %286 = icmp eq i32 %285, 0
  %287 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %280, i64 0, i32 0
  %288 = load i32, i32* %287, align 4
  br i1 %286, label %289, label %291

289:                                              ; preds = %282
  %290 = add i32 %288, -1
  store i32 %290, i32* %287, align 4
  br label %291

291:                                              ; preds = %289, %282
  %292 = phi i32 [ %290, %289 ], [ %288, %282 ]
  %293 = icmp eq i32 %292, 0
  br i1 %293, label %294, label %295

294:                                              ; preds = %291
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %280) #7
  br label %295

295:                                              ; preds = %272, %291, %294
  %296 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %273, align 8
  %297 = icmp eq %"class.WTF::StringImpl"* %296, null
  br i1 %297, label %311, label %298

298:                                              ; preds = %295
  %299 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %296, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %300 = load atomic i32, i32* %299 monotonic, align 4
  %301 = and i32 %300, 2
  %302 = icmp eq i32 %301, 0
  %303 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %296, i64 0, i32 0
  %304 = load i32, i32* %303, align 4
  br i1 %302, label %305, label %307

305:                                              ; preds = %298
  %306 = add i32 %304, -1
  store i32 %306, i32* %303, align 4
  br label %307

307:                                              ; preds = %305, %298
  %308 = phi i32 [ %306, %305 ], [ %304, %298 ]
  %309 = icmp eq i32 %308, 0
  br i1 %309, label %310, label %311

310:                                              ; preds = %307
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %296) #7
  br label %311

311:                                              ; preds = %295, %307, %310
  br i1 %180, label %325, label %312

312:                                              ; preds = %311
  %313 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %314 = load atomic i32, i32* %313 monotonic, align 4
  %315 = and i32 %314, 2
  %316 = icmp eq i32 %315, 0
  %317 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 0, i32 0
  %318 = load i32, i32* %317, align 4
  br i1 %316, label %319, label %321

319:                                              ; preds = %312
  %320 = add i32 %318, -1
  store i32 %320, i32* %317, align 4
  br label %321

321:                                              ; preds = %319, %312
  %322 = phi i32 [ %320, %319 ], [ %318, %312 ]
  %323 = icmp eq i32 %322, 0
  br i1 %323, label %324, label %325

324:                                              ; preds = %321
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %179) #7
  br label %325

325:                                              ; preds = %311, %321, %324
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %177) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %176) #7
  br label %369

326:                                              ; preds = %172
  %327 = atomicrmw add i32* getelementptr inbounds ({ { { i32 } } }, { { { i32 } } }* @_ZZN5blink11IDBDatabase17NextTransactionIdEvE22current_transaction_id, i64 0, i32 0, i32 0, i32 0), i32 1 monotonic
  %328 = add nsw i32 %327, 1
  %329 = sext i32 %328 to i64
  %330 = call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %1) #7
  %331 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %330, i64 0, i32 1
  %332 = bitcast %"class.blink::MojoBindingContext"* %331 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)***
  %333 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*** %332, align 8
  %334 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %333, i64 6
  %335 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %334, align 8
  %336 = call %"class.base::SingleThreadTaskRunner"* %335(%"class.blink::MojoBindingContext"* %331, i8 zeroext 16) #7
  %337 = call i8* @_Znwm(i64 56) #14
  %338 = bitcast i8* %337 to %"class.blink::WebIDBTransactionImpl"*
  %339 = bitcast %"class.base::SingleThreadTaskRunner"* %336 to %"class.base::SequencedTaskRunner"*
  call void @_ZN5blink21WebIDBTransactionImplC1E13scoped_refptrIN4base19SequencedTaskRunnerEEl(%"class.blink::WebIDBTransactionImpl"* nonnull %338, %"class.base::SequencedTaskRunner"* %339, i64 %329) #7
  %340 = icmp eq %"class.blink::IDBTransactionOptions"* %4, null
  br i1 %340, label %355, label %341

341:                                              ; preds = %326
  %342 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16indexed_db_names8kRelaxedE, align 8
  %343 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %342, i64 0, i32 0, i32 0, i32 0
  %344 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %343, align 8
  %345 = getelementptr inbounds %"class.blink::IDBTransactionOptions", %"class.blink::IDBTransactionOptions"* %4, i64 0, i32 1, i32 0, i32 0
  %346 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %345, align 8
  %347 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %344, %"class.WTF::StringImpl"* %346) #7
  br i1 %347, label %355, label %348

348:                                              ; preds = %341
  %349 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16indexed_db_names7kStrictE, align 8
  %350 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %349, i64 0, i32 0, i32 0, i32 0
  %351 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %350, align 8
  %352 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %345, align 8
  %353 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %351, %"class.WTF::StringImpl"* %352) #7
  %354 = zext i1 %353 to i32
  br label %355

355:                                              ; preds = %326, %341, %348
  %356 = phi i32 [ 0, %326 ], [ 2, %341 ], [ %354, %348 ]
  %357 = load %"class.blink::WebIDBDatabase"*, %"class.blink::WebIDBDatabase"** %64, align 8
  %358 = bitcast i8* %337 to void (%"class.mojo::PendingAssociatedReceiver.543"*, %"class.blink::WebIDBTransactionImpl"*)***
  %359 = load void (%"class.mojo::PendingAssociatedReceiver.543"*, %"class.blink::WebIDBTransactionImpl"*)**, void (%"class.mojo::PendingAssociatedReceiver.543"*, %"class.blink::WebIDBTransactionImpl"*)*** %358, align 8
  %360 = getelementptr inbounds void (%"class.mojo::PendingAssociatedReceiver.543"*, %"class.blink::WebIDBTransactionImpl"*)*, void (%"class.mojo::PendingAssociatedReceiver.543"*, %"class.blink::WebIDBTransactionImpl"*)** %359, i64 7
  %361 = load void (%"class.mojo::PendingAssociatedReceiver.543"*, %"class.blink::WebIDBTransactionImpl"*)*, void (%"class.mojo::PendingAssociatedReceiver.543"*, %"class.blink::WebIDBTransactionImpl"*)** %360, align 8
  call void %361(%"class.mojo::PendingAssociatedReceiver.543"* nonnull sret %13, %"class.blink::WebIDBTransactionImpl"* nonnull %338) #7
  %362 = bitcast %"class.blink::WebIDBDatabase"* %357 to void (%"class.blink::WebIDBDatabase"*, %"class.mojo::PendingAssociatedReceiver.543"*, i64, %"class.WTF::Vector.456"*, i32, i32)***
  %363 = load void (%"class.blink::WebIDBDatabase"*, %"class.mojo::PendingAssociatedReceiver.543"*, i64, %"class.WTF::Vector.456"*, i32, i32)**, void (%"class.blink::WebIDBDatabase"*, %"class.mojo::PendingAssociatedReceiver.543"*, i64, %"class.WTF::Vector.456"*, i32, i32)*** %362, align 8
  %364 = getelementptr inbounds void (%"class.blink::WebIDBDatabase"*, %"class.mojo::PendingAssociatedReceiver.543"*, i64, %"class.WTF::Vector.456"*, i32, i32)*, void (%"class.blink::WebIDBDatabase"*, %"class.mojo::PendingAssociatedReceiver.543"*, i64, %"class.WTF::Vector.456"*, i32, i32)** %363, i64 3
  %365 = load void (%"class.blink::WebIDBDatabase"*, %"class.mojo::PendingAssociatedReceiver.543"*, i64, %"class.WTF::Vector.456"*, i32, i32)*, void (%"class.blink::WebIDBDatabase"*, %"class.mojo::PendingAssociatedReceiver.543"*, i64, %"class.WTF::Vector.456"*, i32, i32)** %364, align 8
  call void %365(%"class.blink::WebIDBDatabase"* %357, %"class.mojo::PendingAssociatedReceiver.543"* nonnull %13, i64 %329, %"class.WTF::Vector.456"* nonnull dereferenceable(16) %9, i32 %173, i32 %356) #7
  %366 = getelementptr inbounds %"class.mojo::PendingAssociatedReceiver.543", %"class.mojo::PendingAssociatedReceiver.543"* %13, i64 0, i32 0
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %366) #7
  %367 = bitcast i8* %337 to %"class.blink::WebIDBTransaction"*
  %368 = call %"class.blink::IDBTransaction"* @_ZN5blink14IDBTransaction22CreateNonVersionChangeEPNS_11ScriptStateENSt3__110unique_ptrINS_17WebIDBTransactionENS3_14default_deleteIS5_EEEElRKN3WTF7HashSetINS9_6StringENS9_10StringHashENS9_10HashTraitsISB_EENS9_18PartitionAllocatorEEENS_5mojom18IDBTransactionModeENSJ_24IDBTransactionDurabilityEPNS_11IDBDatabaseE(%"class.blink::ScriptState"* %1, %"class.blink::WebIDBTransaction"* nonnull %367, i64 %329, %"class.WTF::HashSet.46"* nonnull dereferenceable(24) %8, i32 %173, i32 %356, %"class.blink::IDBDatabase"* %0) #7
  br label %369

369:                                              ; preds = %171, %325, %355
  %370 = phi %"class.blink::IDBTransaction"* [ null, %171 ], [ null, %325 ], [ %368, %355 ]
  %371 = load i64*, i64** %74, align 8
  %372 = icmp eq i64* %371, null
  %373 = bitcast i64* %371 to i8*
  br i1 %372, label %379, label %374, !prof !3

374:                                              ; preds = %369
  %375 = load i32, i32* %76, align 4
  %376 = icmp eq i32 %375, 0
  br i1 %376, label %378, label %377, !prof !4

377:                                              ; preds = %374
  store i32 0, i32* %76, align 4
  br label %378

378:                                              ; preds = %377, %374
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %373) #7
  store i64* null, i64** %74, align 8
  br label %379

379:                                              ; preds = %369, %378
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %73) #7
  br label %380

380:                                              ; preds = %379, %71, %67, %62, %57
  %381 = phi %"class.blink::IDBTransaction"* [ null, %57 ], [ null, %62 ], [ null, %71 ], [ %370, %379 ], [ null, %67 ]
  %382 = load %"class.WTF::String"*, %"class.WTF::String"** %28, align 8
  %383 = icmp eq %"class.WTF::String"* %382, null
  br i1 %383, label %415, label %384, !prof !3

384:                                              ; preds = %380
  %385 = load i32, i32* %29, align 8
  %386 = icmp eq i32 %385, 0
  br i1 %386, label %413, label %387

387:                                              ; preds = %384
  %388 = zext i32 %385 to i64
  br label %389

389:                                              ; preds = %410, %387
  %390 = phi i64 [ 0, %387 ], [ %411, %410 ]
  %391 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %382, i64 %390
  %392 = bitcast %"class.WTF::String"* %391 to i8**
  %393 = load i8*, i8** %392, align 8
  %394 = bitcast i8* %393 to %"class.WTF::StringImpl"*
  %395 = ptrtoint i8* %393 to i64
  switch i64 %395, label %396 [
    i64 -1, label %410
    i64 0, label %410
  ]

396:                                              ; preds = %389
  %397 = getelementptr inbounds i8, i8* %393, i64 8
  %398 = bitcast i8* %397 to i32*
  %399 = load atomic i32, i32* %398 monotonic, align 4
  %400 = and i32 %399, 2
  %401 = icmp eq i32 %400, 0
  %402 = bitcast i8* %393 to i32*
  %403 = load i32, i32* %402, align 4
  br i1 %401, label %404, label %406

404:                                              ; preds = %396
  %405 = add i32 %403, -1
  store i32 %405, i32* %402, align 4
  br label %406

406:                                              ; preds = %404, %396
  %407 = phi i32 [ %405, %404 ], [ %403, %396 ]
  %408 = icmp eq i32 %407, 0
  br i1 %408, label %409, label %410

409:                                              ; preds = %406
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %394) #7
  br label %410

410:                                              ; preds = %409, %406, %389, %389
  %411 = add nuw nsw i64 %390, 1
  %412 = icmp eq i64 %411, %388
  br i1 %412, label %413, label %389

413:                                              ; preds = %410, %384
  %414 = bitcast %"class.WTF::String"* %382 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %414) #7
  store %"class.WTF::String"* null, %"class.WTF::String"** %28, align 8
  br label %415

415:                                              ; preds = %380, %413
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #7
  %416 = icmp eq i8* %24, null
  br i1 %416, label %421, label %417

417:                                              ; preds = %415
  %418 = load i8, i8* %24, align 1
  %419 = icmp eq i8 %418, 0
  br i1 %419, label %421, label %420

420:                                              ; preds = %417
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %24, i8* %25, i64 %26) #7
  br label %421

421:                                              ; preds = %415, %417, %420
  ret %"class.blink::IDBTransaction"* %381
}

declare i32 @_ZN5blink14IDBTransaction12StringToModeERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.730", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.730", align 8
  %4 = alloca i8*, align 8
  %5 = alloca i16*, align 8
  %6 = bitcast %"class.WTF::StringTypeAdapter.730"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #7
  %7 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false) #7
  %8 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.730"* nonnull %3, i8* %8) #7
  %9 = bitcast %"class.WTF::StringTypeAdapter.730"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #7
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #7
  %11 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.730"* nonnull %2, i8* %11) #7
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = select i1 %14, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #7
  br i1 %20, label %57, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #7
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %4) #7
  %25 = load i8*, i8** %4, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend"* %0, i8* %25)
  %26 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %26, label %93, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %44

34:                                               ; preds = %27
  %35 = zext i32 %33 to i33
  %36 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #7
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !4

41:                                               ; preds = %34
  call void @llvm.trap() #7
  unreachable

42:                                               ; preds = %34
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %32, align 4
  br label %44

44:                                               ; preds = %27, %42
  %45 = phi i32 [ %43, %42 ], [ %33, %27 ]
  %46 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %47 = load atomic i32, i32* %28 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %52 = add i32 %45, -1
  store i32 %52, i32* %51, align 4
  br label %53

53:                                               ; preds = %50, %44
  %54 = phi i32 [ %52, %50 ], [ %45, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %93

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #7
  br label %93

57:                                               ; preds = %1
  %58 = bitcast i16** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #7
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %5, align 8
  %59 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %60 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %59, i16** nonnull dereferenceable(8) %5) #7
  %61 = load i16*, i16** %5, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend"* %0, i16* %61)
  %62 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %62, label %93, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %80

70:                                               ; preds = %63
  %71 = zext i32 %69 to i33
  %72 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #7
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !4

77:                                               ; preds = %70
  call void @llvm.trap() #7
  unreachable

78:                                               ; preds = %70
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %68, align 4
  br label %80

80:                                               ; preds = %63, %78
  %81 = phi i32 [ %79, %78 ], [ %69, %63 ]
  %82 = ptrtoint %"class.WTF::StringImpl"* %60 to i64
  %83 = load atomic i32, i32* %64 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %88 = add i32 %81, -1
  store i32 %88, i32* %87, align 4
  br label %89

89:                                               ; preds = %86, %80
  %90 = phi i32 [ %88, %86 ], [ %81, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #7
  br label %93

93:                                               ; preds = %92, %89, %57, %56, %53, %21
  %94 = phi i8* [ %22, %21 ], [ %22, %53 ], [ %22, %56 ], [ %58, %57 ], [ %58, %89 ], [ %58, %92 ]
  %95 = phi i64 [ 0, %21 ], [ %46, %53 ], [ %46, %56 ], [ 0, %57 ], [ %82, %89 ], [ %82, %92 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #7
  %96 = inttoptr i64 %95 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %96
}

declare %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"*) local_unnamed_addr #1

declare %"class.blink::IDBTransaction"* @_ZN5blink14IDBTransaction22CreateNonVersionChangeEPNS_11ScriptStateENSt3__110unique_ptrINS_17WebIDBTransactionENS3_14default_deleteIS5_EEEElRKN3WTF7HashSetINS9_6StringENS9_10StringHashENS9_10HashTraitsISB_EENS9_18PartitionAllocatorEEENS_5mojom18IDBTransactionModeENSJ_24IDBTransactionDurabilityEPNS_11IDBDatabaseE(%"class.blink::ScriptState"*, %"class.blink::WebIDBTransaction"*, i64, %"class.WTF::HashSet.46"* dereferenceable(24), i32, i32, %"class.blink::IDBDatabase"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22FrameOrWorkerScheduler32SchedulingAffectingFeatureHandle5resetEv(%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle"*) local_unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.base::WeakPtr", align 8
  %4 = getelementptr inbounds %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0, i32 0
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #7
  br i1 %6, label %7, label %31

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle"* %0, i64 0, i32 2, i32 0, i32 1
  %9 = bitcast i64* %8 to %"class.blink::FrameOrWorkerScheduler"**
  %10 = load %"class.blink::FrameOrWorkerScheduler"*, %"class.blink::FrameOrWorkerScheduler"** %9, align 8
  %11 = icmp eq %"class.blink::FrameOrWorkerScheduler"* %10, null
  br i1 %11, label %31, label %12

12:                                               ; preds = %7
  %13 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #7
  br i1 %13, label %17, label %14

14:                                               ; preds = %12
  %15 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i64 0, i64 0)) #7
  %16 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #7
  br label %17

17:                                               ; preds = %14, %12
  %18 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #7
  br i1 %18, label %19, label %22

19:                                               ; preds = %17
  %20 = load %"class.blink::FrameOrWorkerScheduler"*, %"class.blink::FrameOrWorkerScheduler"** %9, align 8
  %21 = bitcast %"class.blink::FrameOrWorkerScheduler"* %20 to void (%"class.blink::FrameOrWorkerScheduler"*, i32, %"struct.blink::SchedulingPolicy"*)***
  br label %22

22:                                               ; preds = %17, %19
  %23 = phi void (%"class.blink::FrameOrWorkerScheduler"*, i32, %"struct.blink::SchedulingPolicy"*)*** [ %21, %19 ], [ null, %17 ]
  %24 = phi %"class.blink::FrameOrWorkerScheduler"* [ %20, %19 ], [ null, %17 ]
  %25 = getelementptr inbounds %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle"* %0, i64 0, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = getelementptr inbounds %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle"* %0, i64 0, i32 1
  %28 = load void (%"class.blink::FrameOrWorkerScheduler"*, i32, %"struct.blink::SchedulingPolicy"*)**, void (%"class.blink::FrameOrWorkerScheduler"*, i32, %"struct.blink::SchedulingPolicy"*)*** %23, align 8
  %29 = getelementptr inbounds void (%"class.blink::FrameOrWorkerScheduler"*, i32, %"struct.blink::SchedulingPolicy"*)*, void (%"class.blink::FrameOrWorkerScheduler"*, i32, %"struct.blink::SchedulingPolicy"*)** %28, i64 7
  %30 = load void (%"class.blink::FrameOrWorkerScheduler"*, i32, %"struct.blink::SchedulingPolicy"*)*, void (%"class.blink::FrameOrWorkerScheduler"*, i32, %"struct.blink::SchedulingPolicy"*)** %29, align 8
  call void %30(%"class.blink::FrameOrWorkerScheduler"* %24, i32 %26, %"struct.blink::SchedulingPolicy"* dereferenceable(2) %27) #7
  br label %31

31:                                               ; preds = %7, %1, %22
  %32 = bitcast %"class.base::WeakPtr"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #7
  %33 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %3, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2Ev(%"class.base::internal::WeakPtrBase"* nonnull %33) #7
  %34 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = bitcast %"class.base::WeakPtr"* %3 to i64*
  %36 = load i64, i64* %35, align 8
  store %"class.base::internal::WeakReference::Flag"* null, %"class.base::internal::WeakReference::Flag"** %34, align 8
  %37 = bitcast %"class.base::WeakPtr"* %4 to i64*
  %38 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %"class.base::internal::WeakReference::Flag"*, %"class.base::internal::WeakReference::Flag"** %38, align 8
  store i64 %36, i64* %37, align 8
  %40 = icmp eq %"class.base::internal::WeakReference::Flag"* %39, null
  br i1 %40, label %47, label %41

41:                                               ; preds = %31
  %42 = getelementptr inbounds %"class.base::internal::WeakReference::Flag", %"class.base::internal::WeakReference::Flag"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = atomicrmw sub i32* %42, i32 1 acq_rel
  %44 = icmp eq i32 %43, 1
  br i1 %44, label %45, label %47

45:                                               ; preds = %41
  call void @_ZN4base8internal13WeakReference4FlagD1Ev(%"class.base::internal::WeakReference::Flag"* nonnull %39) #7
  %46 = bitcast %"class.base::internal::WeakReference::Flag"* %39 to i8*
  call void @_ZdlPv(i8* %46) #14
  br label %47

47:                                               ; preds = %31, %41, %45
  %48 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %3, i64 0, i32 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle"* %0, i64 0, i32 2, i32 0, i32 1
  store i64 %49, i64* %50, align 8
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %33) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #7
  ret void
}

declare void @_ZN5blink10EventQueue15CancelAllEventsEv(%"class.blink::EventQueue"*) local_unnamed_addr #1

declare void @_ZN5blink5Event9SetTargetEPNS_11EventTargetE(%"class.blink::Event"*, %"class.blink::EventTarget"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink10EventQueue12EnqueueEventERKN4base8LocationERNS_5EventE(%"class.blink::EventQueue"*, %"class.base::Location"* dereferenceable(32), %"class.blink::Event"* dereferenceable(104)) local_unnamed_addr #1

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink11IDBDatabase21DispatchEventInternalERNS_5EventE(%"class.blink::IDBDatabase"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::TimeTicks", align 8
  %4 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 66, i32 0), align 16
  %5 = and i8 %4, 25
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %13, label %7, !prof !3

7:                                                ; preds = %2
  %8 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #7
  %9 = bitcast %"class.base::TimeTicks"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #7
  %10 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  %11 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #7
  store i64 %11, i64* %10, align 8
  %12 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 66, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.16, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %8, %"class.base::TimeTicks"* nonnull dereferenceable(8) %3, %"class.base::trace_event::TraceArguments"* null, i32 0) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #7
  br label %13

13:                                               ; preds = %2, %7
  %14 = phi i64 [ -6148914691236517206, %2 ], [ %12, %7 ]
  %15 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %2 ], [ getelementptr inbounds ([27 x i8], [27 x i8]* @.str.16, i64 0, i64 0), %7 ]
  %16 = phi i8* [ null, %2 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 66, i32 0), %7 ]
  %17 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 0, i32 0
  call void @_ZN5blink5Event9SetTargetEPNS_11EventTargetE(%"class.blink::Event"* %1, %"class.blink::EventTarget"* %17) #7
  %18 = getelementptr inbounds %"class.blink::Event", %"class.blink::Event"* %1, i64 0, i32 2
  %19 = load i16, i16* %18, align 8
  %20 = and i16 %19, 256
  %21 = icmp eq i16 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %13
  %23 = call i32 @_ZN5blink11EventTarget21DispatchEventInternalERNS_5EventE(%"class.blink::EventTarget"* %17, %"class.blink::Event"* dereferenceable(104) %1) #7
  br label %50

24:                                               ; preds = %13
  %25 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 2
  %26 = bitcast %"class.blink::ExecutionContextLifecycleObserver.base"* %25 to %"class.blink::ExecutionContextLifecycleObserver"*
  %27 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %26) #7
  %28 = icmp eq %"class.blink::ExecutionContext"* %27, null
  br i1 %28, label %50, label %29

29:                                               ; preds = %24
  %30 = call i32 @_ZN5blink11EventTarget21DispatchEventInternalERNS_5EventE(%"class.blink::EventTarget"* %17, %"class.blink::Event"* dereferenceable(104) %1) #7
  %31 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names14kVersionchangeE, align 8
  %32 = getelementptr inbounds %"class.blink::Event", %"class.blink::Event"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %31, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %33, %35
  br i1 %36, label %37, label %50

37:                                               ; preds = %29
  %38 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 9
  %39 = load i8, i8* %38, align 8, !range !2
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %41, label %50

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %43 = load %"class.blink::WebIDBDatabase"*, %"class.blink::WebIDBDatabase"** %42, align 8
  %44 = icmp eq %"class.blink::WebIDBDatabase"* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %41
  %46 = bitcast %"class.blink::WebIDBDatabase"* %43 to void (%"class.blink::WebIDBDatabase"*)***
  %47 = load void (%"class.blink::WebIDBDatabase"*)**, void (%"class.blink::WebIDBDatabase"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.blink::WebIDBDatabase"*)*, void (%"class.blink::WebIDBDatabase"*)** %47, i64 5
  %49 = load void (%"class.blink::WebIDBDatabase"*)*, void (%"class.blink::WebIDBDatabase"*)** %48, align 8
  call void %49(%"class.blink::WebIDBDatabase"* nonnull %43) #7
  br label %50

50:                                               ; preds = %41, %29, %45, %37, %24, %22
  %51 = phi i32 [ %23, %22 ], [ 3, %24 ], [ %30, %37 ], [ %30, %45 ], [ %30, %41 ], [ %30, %29 ]
  %52 = icmp eq i8* %16, null
  br i1 %52, label %57, label %53

53:                                               ; preds = %50
  %54 = load i8, i8* %16, align 1
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %57, label %56

56:                                               ; preds = %53
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %16, i8* %15, i64 %14) #7
  br label %57

57:                                               ; preds = %50, %53, %56
  ret i32 %51
}

declare i32 @_ZN5blink11EventTarget21DispatchEventInternalERNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11IDBDatabase17RenameObjectStoreElRKN3WTF6StringE(%"class.blink::IDBDatabase"* nocapture readonly, i64, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %5 = load %"class.blink::WebIDBDatabase"*, %"class.blink::WebIDBDatabase"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 6, i32 0, i32 0
  %7 = load %"class.blink::IDBTransaction"*, %"class.blink::IDBTransaction"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::IDBTransaction", %"class.blink::IDBTransaction"* %7, i64 0, i32 4
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.blink::WebIDBDatabase"* %5 to void (%"class.blink::WebIDBDatabase"*, i64, i64, %"class.WTF::String"*)***
  %11 = load void (%"class.blink::WebIDBDatabase"*, i64, i64, %"class.WTF::String"*)**, void (%"class.blink::WebIDBDatabase"*, i64, i64, %"class.WTF::String"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::WebIDBDatabase"*, i64, i64, %"class.WTF::String"*)*, void (%"class.blink::WebIDBDatabase"*, i64, i64, %"class.WTF::String"*)** %11, i64 2
  %13 = load void (%"class.blink::WebIDBDatabase"*, i64, i64, %"class.WTF::String"*)*, void (%"class.blink::WebIDBDatabase"*, i64, i64, %"class.WTF::String"*)** %12, align 8
  tail call void %13(%"class.blink::WebIDBDatabase"* %5, i64 %9, i64 %1, %"class.WTF::String"* dereferenceable(8) %2) #7
  %14 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 4, i32 4, i32 0, i32 0
  %15 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %14, align 8
  %16 = icmp eq %"struct.WTF::KeyValuePair"* %15, null
  br i1 %16, label %81, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 4, i32 4, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = add i32 %19, -1
  %21 = zext i32 %20 to i64
  %22 = shl i64 %1, 32
  %23 = xor i64 %22, -1
  %24 = add i64 %23, %1
  %25 = lshr i64 %24, 22
  %26 = xor i64 %25, %24
  %27 = shl i64 %26, 13
  %28 = xor i64 %27, -1
  %29 = add i64 %26, %28
  %30 = lshr i64 %29, 8
  %31 = xor i64 %30, %29
  %32 = mul i64 %31, 9
  %33 = lshr i64 %32, 15
  %34 = xor i64 %33, %32
  %35 = shl i64 %34, 27
  %36 = xor i64 %35, -1
  %37 = add i64 %34, %36
  %38 = lshr i64 %37, 31
  %39 = xor i64 %38, %37
  %40 = trunc i64 %39 to i32
  %41 = and i32 %20, %40
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %15, i64 %42
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %43, i64 0, i32 0
  %45 = load i64, i64* %44, align 8
  %46 = icmp eq i64 %45, %1
  br i1 %46, label %75, label %47

47:                                               ; preds = %17
  %48 = xor i32 %40, -1
  %49 = lshr i32 %40, 23
  %50 = add i32 %49, %48
  %51 = shl i32 %50, 12
  %52 = xor i32 %51, %50
  %53 = lshr i32 %52, 7
  %54 = xor i32 %53, %52
  %55 = shl i32 %54, 2
  %56 = xor i32 %55, %54
  %57 = lshr i32 %56, 20
  %58 = xor i32 %57, %56
  %59 = or i32 %58, 1
  %60 = zext i32 %59 to i64
  br label %61

61:                                               ; preds = %66, %47
  %62 = phi i64 [ %45, %47 ], [ %73, %66 ]
  %63 = phi i64 [ %42, %47 ], [ %70, %66 ]
  %64 = phi i64 [ 0, %47 ], [ %68, %66 ]
  %65 = icmp eq i64 %62, 0
  br i1 %65, label %81, label %66

66:                                               ; preds = %61
  %67 = icmp eq i64 %64, 0
  %68 = select i1 %67, i64 %60, i64 %64
  %69 = add i64 %68, %63
  %70 = and i64 %69, %21
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %15, i64 %70
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %71, i64 0, i32 0
  %73 = load i64, i64* %72, align 8
  %74 = icmp eq i64 %73, %1
  br i1 %74, label %75, label %61

75:                                               ; preds = %66, %17
  %76 = phi %"struct.WTF::KeyValuePair"* [ %43, %17 ], [ %71, %66 ]
  %77 = icmp eq %"struct.WTF::KeyValuePair"* %76, null
  br i1 %77, label %81, label %78

78:                                               ; preds = %75
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %76, i64 0, i32 1, i32 0
  %80 = load %"class.blink::IDBObjectStoreMetadata"*, %"class.blink::IDBObjectStoreMetadata"** %79, align 8
  br label %81

81:                                               ; preds = %61, %3, %75, %78
  %82 = phi %"class.blink::IDBObjectStoreMetadata"* [ %80, %78 ], [ null, %75 ], [ null, %3 ], [ null, %61 ]
  %83 = load %"class.blink::IDBTransaction"*, %"class.blink::IDBTransaction"** %6, align 8
  %84 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %82, i64 0, i32 1
  tail call void @_ZN5blink14IDBTransaction18ObjectStoreRenamedERKN3WTF6StringES4_(%"class.blink::IDBTransaction"* %83, %"class.WTF::String"* dereferenceable(8) %84, %"class.WTF::String"* dereferenceable(8) %2) #7
  %85 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %86, null
  br i1 %87, label %105, label %88

88:                                               ; preds = %81
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = and i32 %90, 2
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %105

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 0
  %95 = load i32, i32* %94, align 4
  %96 = zext i32 %95 to i33
  %97 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %96, i33 1) #7
  %98 = extractvalue { i33, i1 } %97, 1
  %99 = extractvalue { i33, i1 } %97, 0
  %100 = icmp slt i33 %99, 0
  %101 = or i1 %98, %100
  br i1 %101, label %102, label %103, !prof !4

102:                                              ; preds = %93
  tail call void @llvm.trap() #7
  unreachable

103:                                              ; preds = %93
  %104 = trunc i33 %99 to i32
  store i32 %104, i32* %94, align 4
  br label %105

105:                                              ; preds = %103, %88, %81
  %106 = ptrtoint %"class.WTF::StringImpl"* %86 to i64
  %107 = bitcast %"class.WTF::String"* %84 to i64*
  %108 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %84, i64 0, i32 0, i32 0
  %109 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %108, align 8
  store i64 %106, i64* %107, align 8
  %110 = icmp eq %"class.WTF::StringImpl"* %109, null
  br i1 %110, label %124, label %111

111:                                              ; preds = %105
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  br i1 %115, label %118, label %120

118:                                              ; preds = %111
  %119 = add i32 %117, -1
  store i32 %119, i32* %116, align 4
  br label %120

120:                                              ; preds = %118, %111
  %121 = phi i32 [ %119, %118 ], [ %117, %111 ]
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %124

123:                                              ; preds = %120
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %109) #7
  br label %124

124:                                              ; preds = %105, %120, %123
  ret void
}

declare void @_ZN5blink14IDBTransaction18ObjectStoreRenamedERKN3WTF6StringES4_(%"class.blink::IDBTransaction"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11IDBDatabase25RevertObjectStoreCreationEl(%"class.blink::IDBDatabase"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 4, i32 4
  %5 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %4, i64 0, i32 0
  %6 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIlNS_12KeyValuePairIl13scoped_refptrIN5blink22IDBObjectStoreMetadataEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE4findERKl(%"class.WTF::HashTable.13"* %5, i64* nonnull dereferenceable(8) %3) #7
  %7 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %6, 0
  %8 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %4, i64 0, i32 0, i32 0
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 4, i32 4, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %9, i64 %12
  %14 = icmp eq %"struct.WTF::KeyValuePair"* %13, %7
  br i1 %14, label %16, label %15

15:                                               ; preds = %2
  call void @_ZN3WTF9HashTableIlNS_12KeyValuePairIl13scoped_refptrIN5blink22IDBObjectStoreMetadataEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE5eraseEPKS6_(%"class.WTF::HashTable.13"* %5, %"struct.WTF::KeyValuePair"* %7) #7
  br label %16

16:                                               ; preds = %2, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11IDBDatabase25RevertObjectStoreMetadataE13scoped_refptrINS_22IDBObjectStoreMetadataEE(%"class.blink::IDBDatabase"*, %"class.blink::IDBObjectStoreMetadata"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.scoped_refptr.16, align 8
  %4 = getelementptr inbounds %class.scoped_refptr.16, %class.scoped_refptr.16* %3, i64 0, i32 0
  store %"class.blink::IDBObjectStoreMetadata"* %1, %"class.blink::IDBObjectStoreMetadata"** %4, align 8
  %5 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %1, i64 0, i32 2
  %6 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 4, i32 4, i32 0
  %7 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIlNS_12KeyValuePairIl13scoped_refptrIN5blink22IDBObjectStoreMetadataEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERlS5_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.13"* %6, i64* dereferenceable(8) %5, %class.scoped_refptr.16* nonnull dereferenceable(8) %3) #7
  %8 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %7, 1
  %9 = and i8 %8, 1
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %27

11:                                               ; preds = %2
  %12 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %7, 0
  %13 = bitcast %class.scoped_refptr.16* %3 to i64*
  %14 = load i64, i64* %13, align 8
  store %"class.blink::IDBObjectStoreMetadata"* null, %"class.blink::IDBObjectStoreMetadata"** %4, align 8
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %12, i64 0, i32 1
  %16 = bitcast %class.scoped_refptr.16* %15 to i64*
  %17 = getelementptr inbounds %class.scoped_refptr.16, %class.scoped_refptr.16* %15, i64 0, i32 0
  %18 = load %"class.blink::IDBObjectStoreMetadata"*, %"class.blink::IDBObjectStoreMetadata"** %17, align 8
  store i64 %14, i64* %16, align 8
  %19 = icmp eq %"class.blink::IDBObjectStoreMetadata"* %18, null
  br i1 %19, label %27, label %20

20:                                               ; preds = %11
  %21 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %18, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %21) #7
  %22 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %20
  call void @_ZN5blink22IDBObjectStoreMetadataD2Ev(%"class.blink::IDBObjectStoreMetadata"* nonnull %18) #7
  %26 = bitcast %"class.blink::IDBObjectStoreMetadata"* %18 to i8*
  call void @free(i8* %26) #7
  br label %27

27:                                               ; preds = %2, %11, %20, %25
  %28 = load %"class.blink::IDBObjectStoreMetadata"*, %"class.blink::IDBObjectStoreMetadata"** %4, align 8
  %29 = icmp eq %"class.blink::IDBObjectStoreMetadata"* %28, null
  br i1 %29, label %37, label %30

30:                                               ; preds = %27
  %31 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %28, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %31) #7
  %32 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %28, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %30
  call void @_ZN5blink22IDBObjectStoreMetadataD2Ev(%"class.blink::IDBObjectStoreMetadata"* nonnull %28) #7
  %36 = bitcast %"class.blink::IDBObjectStoreMetadata"* %28 to i8*
  call void @free(i8* %36) #7
  br label %37

37:                                               ; preds = %27, %30, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink11IDBDatabase18HasPendingActivityEv(%"class.blink::IDBDatabase"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 9
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %22

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 2
  %7 = bitcast %"class.blink::ExecutionContextLifecycleObserver.base"* %6 to %"class.blink::ExecutionContextLifecycleObserver"*
  %8 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %7) #7
  %9 = icmp eq %"class.blink::ExecutionContext"* %8, null
  br i1 %9, label %22, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 0, i32 0
  %12 = bitcast %"class.blink::IDBDatabase"* %0 to %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)***
  %13 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)**, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*** %12, align 8
  %14 = getelementptr inbounds %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %13, i64 25
  %15 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %14, align 8
  %16 = tail call %"class.blink::EventTargetData"* %15(%"class.blink::EventTarget"* %11) #7
  %17 = icmp eq %"class.blink::EventTargetData"* %16, null
  br i1 %17, label %22, label %18

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.blink::EventTargetData", %"class.blink::EventTargetData"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = icmp ne i32 %20, 0
  br label %22

22:                                               ; preds = %18, %10, %5, %1
  %23 = phi i1 [ false, %5 ], [ false, %1 ], [ %21, %18 ], [ false, %10 ]
  ret i1 %23
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget17HasEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %"class.blink::EventTarget"* %0 to %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)***
  %3 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)**, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %3, i64 25
  %5 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %4, align 8
  %6 = tail call %"class.blink::EventTargetData"* %5(%"class.blink::EventTarget"* %0) #7
  %7 = icmp eq %"class.blink::EventTargetData"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::EventTargetData", %"class.blink::EventTargetData"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %10, 0
  br label %12

12:                                               ; preds = %1, %8
  %13 = phi i1 [ %11, %8 ], [ false, %1 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11IDBDatabase16ContextDestroyedEv(%"class.blink::IDBDatabase"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %3 = load %"class.blink::WebIDBDatabase"*, %"class.blink::WebIDBDatabase"** %2, align 8
  %4 = icmp eq %"class.blink::WebIDBDatabase"* %3, null
  br i1 %4, label %17, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::WebIDBDatabase"* %3 to void (%"class.blink::WebIDBDatabase"*)***
  %7 = load void (%"class.blink::WebIDBDatabase"*)**, void (%"class.blink::WebIDBDatabase"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::WebIDBDatabase"*)*, void (%"class.blink::WebIDBDatabase"*)** %7, i64 4
  %9 = load void (%"class.blink::WebIDBDatabase"*)*, void (%"class.blink::WebIDBDatabase"*)** %8, align 8
  tail call void %9(%"class.blink::WebIDBDatabase"* nonnull %3) #7
  %10 = load %"class.blink::WebIDBDatabase"*, %"class.blink::WebIDBDatabase"** %2, align 8
  store %"class.blink::WebIDBDatabase"* null, %"class.blink::WebIDBDatabase"** %2, align 8
  %11 = icmp eq %"class.blink::WebIDBDatabase"* %10, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %5
  %13 = bitcast %"class.blink::WebIDBDatabase"* %10 to void (%"class.blink::WebIDBDatabase"*)***
  %14 = load void (%"class.blink::WebIDBDatabase"*)**, void (%"class.blink::WebIDBDatabase"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::WebIDBDatabase"*)*, void (%"class.blink::WebIDBDatabase"*)** %14, i64 1
  %16 = load void (%"class.blink::WebIDBDatabase"*)*, void (%"class.blink::WebIDBDatabase"*)** %15, align 8
  tail call void %16(%"class.blink::WebIDBDatabase"* nonnull %10) #7
  br label %17

17:                                               ; preds = %1, %12, %5
  %18 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 0, i32 8, i32 0
  tail call void @_ZN4mojo8internal18PendingRemoteState5resetEv(%"struct.mojo::internal::PendingRemoteState"* %18) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn80_N5blink11IDBDatabase16ContextDestroyedEv(%"class.blink::IDBDatabase"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %0, i64 -1, i32 7
  %3 = getelementptr inbounds %"class.blink::HeapHashMap.128", %"class.blink::HeapHashMap.128"* %2, i64 7, i32 0, i32 0, i32 1
  %4 = bitcast i32* %3 to %"class.blink::WebIDBDatabase"**
  %5 = load %"class.blink::WebIDBDatabase"*, %"class.blink::WebIDBDatabase"** %4, align 8
  %6 = icmp eq %"class.blink::WebIDBDatabase"* %5, null
  br i1 %6, label %19, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.blink::WebIDBDatabase"* %5 to void (%"class.blink::WebIDBDatabase"*)***
  %9 = load void (%"class.blink::WebIDBDatabase"*)**, void (%"class.blink::WebIDBDatabase"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::WebIDBDatabase"*)*, void (%"class.blink::WebIDBDatabase"*)** %9, i64 4
  %11 = load void (%"class.blink::WebIDBDatabase"*)*, void (%"class.blink::WebIDBDatabase"*)** %10, align 8
  tail call void %11(%"class.blink::WebIDBDatabase"* nonnull %5) #7
  %12 = load %"class.blink::WebIDBDatabase"*, %"class.blink::WebIDBDatabase"** %4, align 8
  store %"class.blink::WebIDBDatabase"* null, %"class.blink::WebIDBDatabase"** %4, align 8
  %13 = icmp eq %"class.blink::WebIDBDatabase"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %7
  %15 = bitcast %"class.blink::WebIDBDatabase"* %12 to void (%"class.blink::WebIDBDatabase"*)***
  %16 = load void (%"class.blink::WebIDBDatabase"*)**, void (%"class.blink::WebIDBDatabase"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::WebIDBDatabase"*)*, void (%"class.blink::WebIDBDatabase"*)** %16, i64 1
  %18 = load void (%"class.blink::WebIDBDatabase"*)*, void (%"class.blink::WebIDBDatabase"*)** %17, align 8
  tail call void %18(%"class.blink::WebIDBDatabase"* nonnull %12) #7
  br label %19

19:                                               ; preds = %1, %7, %14
  %20 = getelementptr inbounds %"class.blink::HeapHashMap.128", %"class.blink::HeapHashMap.128"* %2, i64 9
  %21 = bitcast %"class.blink::HeapHashMap.128"* %20 to %"struct.mojo::internal::PendingRemoteState"*
  tail call void @_ZN4mojo8internal18PendingRemoteState5resetEv(%"struct.mojo::internal::PendingRemoteState"* %21) #7
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink11IDBDatabase13InterfaceNameEv(%"class.blink::IDBDatabase"* nocapture readnone) unnamed_addr #6 align 2 {
  %2 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink18event_target_names12kIDBDatabaseE, align 8
  ret %"class.WTF::AtomicString"* %2
}

declare %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"*) local_unnamed_addr #1

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink11IDBDatabase18GetWrapperTypeInfoEv(%"class.blink::IDBDatabase"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink11IDBDatabase18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #1

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #1

declare %"class.blink::Node"* @_ZN5blink11EventTarget6ToNodeEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::DOMWindow"* @_ZNK5blink11EventTarget11ToDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::LocalDOMWindow"* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::LocalDOMWindow"* @_ZN5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::MessagePort"* @_ZN5blink11EventTarget13ToMessagePortEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::ServiceWorker"* @_ZN5blink11EventTarget15ToServiceWorkerEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::PortalHost"* @_ZN5blink11EventTarget12ToPortalHostEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare void @_ZN5blink11EventTarget23RemoveAllEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv(%"class.blink::EventTarget"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*) unnamed_addr #1

declare void @_ZN5blink11EventTarget18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN5blink11EventTarget20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::EventTargetData"* @_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv(%"class.blink::EventTargetWithInlineData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::EventTargetData"* %2 to i8*
  %4 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.18, i64 0, i64 0), i32 261)
  %5 = bitcast i8* %4 to %"class.blink::EventTargetData"*
  ret %"class.blink::EventTargetData"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(56) %"class.blink::EventTargetData"* @_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv(%"class.blink::EventTargetWithInlineData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::EventTargetData"* %2 to i8*
  %4 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.18, i64 0, i64 0), i32 261)
  %5 = bitcast i8* %4 to %"class.blink::EventTargetData"*
  ret %"class.blink::EventTargetData"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21ActiveScriptWrappableINS_11IDBDatabaseEE18IsContextDestroyedEv(%"class.blink::ActiveScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ActiveScriptWrappable", %"class.blink::ActiveScriptWrappable"* %0, i64 1
  %3 = bitcast %"class.blink::ActiveScriptWrappable"* %2 to %"class.blink::ExecutionContextLifecycleObserver"*
  %4 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %3) #7
  %5 = tail call zeroext i1 @_ZN5blink42IsContextDestroyedForActiveScriptWrappableEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"* %4) #7
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21ActiveScriptWrappableINS_11IDBDatabaseEE26DispatchHasPendingActivityEv(%"class.blink::ActiveScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ActiveScriptWrappable", %"class.blink::ActiveScriptWrappable"* %0, i64 -9
  %3 = getelementptr inbounds %"class.blink::ActiveScriptWrappable", %"class.blink::ActiveScriptWrappable"* %0, i64 19
  %4 = bitcast %"class.blink::ActiveScriptWrappable"* %3 to i8*
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %24

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::ActiveScriptWrappable", %"class.blink::ActiveScriptWrappable"* %0, i64 1
  %9 = bitcast %"class.blink::ActiveScriptWrappable"* %8 to %"class.blink::ExecutionContextLifecycleObserver"*
  %10 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %9) #7
  %11 = icmp eq %"class.blink::ExecutionContext"* %10, null
  br i1 %11, label %24, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.blink::ActiveScriptWrappable"* %2 to %"class.blink::EventTarget"*
  %14 = bitcast %"class.blink::ActiveScriptWrappable"* %2 to %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)***
  %15 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)**, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*** %14, align 8
  %16 = getelementptr inbounds %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %15, i64 25
  %17 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %16, align 8
  %18 = tail call %"class.blink::EventTargetData"* %17(%"class.blink::EventTarget"* %13) #7
  %19 = icmp eq %"class.blink::EventTargetData"* %18, null
  br i1 %19, label %24, label %20

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.blink::EventTargetData", %"class.blink::EventTargetData"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = icmp ne i32 %22, 0
  br label %24

24:                                               ; preds = %1, %7, %12, %20
  %25 = phi i1 [ false, %7 ], [ false, %1 ], [ %23, %20 ], [ false, %12 ]
  ret i1 %25
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink33ExecutionContextLifecycleObserver35IsExecutionContextLifecycleObserverEv(%"class.blink::ExecutionContextLifecycleObserver"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare void @_ZN5blink33ExecutionContextLifecycleObserver19SetExecutionContextEPNS_16ExecutionContextE(%"class.blink::ExecutionContextLifecycleObserver"*, %"class.blink::ExecutionContext"*) unnamed_addr #1

declare void @_ZN5blink11EventTargetC2Ev(%"class.blink::EventTarget"*) unnamed_addr #1

; Function Attrs: nounwind
declare i8* @llvm.ptr.annotation.p0i8(i8*, i8*, i8*, i32) #7

declare void @_ZN5blink15EventTargetDataC1Ev(%"class.blink::EventTargetData"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink25EventTargetWithInlineDataD2Ev(%"class.blink::EventTargetWithInlineData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTVN5blink25EventTargetWithInlineDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::EventTargetData"* %3 to i8*
  %5 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.18, i64 0, i64 0), i32 261)
  %6 = bitcast i8* %5 to %"class.blink::EventTargetData"*
  tail call void @_ZN5blink15EventTargetDataD1Ev(%"class.blink::EventTargetData"* %6) #7
  %7 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 0
  tail call void @_ZN5blink11EventTargetD2Ev(%"class.blink::EventTarget"* %7) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink25EventTargetWithInlineDataD0Ev(%"class.blink::EventTargetWithInlineData"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #15
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink11EventTarget18GetWrapperTypeInfoEv(%"class.blink::EventTarget"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink11EventTarget18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink21GarbageCollectedMixin5TraceEPNS_7VisitorE(%"class.blink::GarbageCollectedMixin"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink25ActiveScriptWrappableBaseD2Ev(%"class.blink::ActiveScriptWrappableBase"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21ActiveScriptWrappableINS_11IDBDatabaseEED0Ev(%"class.blink::ActiveScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::ActiveScriptWrappable"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"*, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8)) unnamed_addr #3

declare void @_ZN4base8internal11WeakPtrBaseC2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"*) unnamed_addr #3

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink15EventTargetDataD1Ev(%"class.blink::EventTargetData"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink11EventTargetD2Ev(%"class.blink::EventTarget"*) unnamed_addr #3

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #1

declare void @_ZNK5blink15EventTargetData5TraceEPNS_7VisitorE(%"class.blink::EventTargetData"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.WTF::HashTable.13"* @_ZN3WTF9HashTableIlNS_12KeyValuePairIl13scoped_refptrIN5blink22IDBObjectStoreMetadataEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS_18PartitionAllocatorEEaSERKSG_(%"class.WTF::HashTable.13"*, %"class.WTF::HashTable.13"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::HashTable.13", align 8
  %4 = bitcast %"class.WTF::HashTable.13"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #7
  %5 = getelementptr inbounds %"class.WTF::HashTable.13", %"class.WTF::HashTable.13"* %3, i64 0, i32 0
  %6 = getelementptr inbounds %"class.WTF::HashTable.13", %"class.WTF::HashTable.13"* %3, i64 0, i32 1
  %7 = getelementptr inbounds %"class.WTF::HashTable.13", %"class.WTF::HashTable.13"* %3, i64 0, i32 2
  %8 = getelementptr inbounds %"class.WTF::HashTable.13", %"class.WTF::HashTable.13"* %3, i64 0, i32 3
  %9 = getelementptr inbounds %"class.WTF::HashTable.13", %"class.WTF::HashTable.13"* %1, i64 0, i32 2
  %10 = bitcast %"class.WTF::HashTable.13"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 20, i1 false) #7
  %11 = load i32, i32* %9, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %53, label %13

13:                                               ; preds = %2
  call void @_ZN3WTF9HashTableIlNS_12KeyValuePairIl13scoped_refptrIN5blink22IDBObjectStoreMetadataEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.13"* nonnull %3, i32 %11) #7
  %14 = load i32, i32* %9, align 4
  %15 = icmp eq i32 %14, 0
  %16 = getelementptr inbounds %"class.WTF::HashTable.13", %"class.WTF::HashTable.13"* %1, i64 0, i32 0
  %17 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::HashTable.13", %"class.WTF::HashTable.13"* %1, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %17, i64 %20
  br i1 %15, label %53, label %22

22:                                               ; preds = %13
  %23 = icmp eq i32 %19, 0
  br i1 %23, label %33, label %24

24:                                               ; preds = %22, %30
  %25 = phi %"struct.WTF::KeyValuePair"* [ %31, %30 ], [ %17, %22 ]
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %25, i64 0, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, 1
  %29 = icmp ult i64 %28, 2
  br i1 %29, label %30, label %33

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %25, i64 1
  %32 = icmp eq %"struct.WTF::KeyValuePair"* %31, %21
  br i1 %32, label %53, label %24

33:                                               ; preds = %24, %22
  %34 = phi %"struct.WTF::KeyValuePair"* [ %17, %22 ], [ %25, %24 ]
  %35 = icmp eq %"struct.WTF::KeyValuePair"* %34, %21
  br i1 %35, label %53, label %36

36:                                               ; preds = %33, %51
  %37 = phi %"struct.WTF::KeyValuePair"* [ %43, %51 ], [ %34, %33 ]
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %37, i64 0, i32 0
  %39 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIlNS_12KeyValuePairIl13scoped_refptrIN5blink22IDBObjectStoreMetadataEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS9_SE_SF_EERKlRKS6_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.13"* nonnull %3, i64* dereferenceable(8) %38, %"struct.WTF::KeyValuePair"* dereferenceable(16) %37) #7
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %37, i64 1
  %41 = icmp eq %"struct.WTF::KeyValuePair"* %40, %21
  br i1 %41, label %53, label %42

42:                                               ; preds = %36, %48
  %43 = phi %"struct.WTF::KeyValuePair"* [ %49, %48 ], [ %40, %36 ]
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %43, i64 0, i32 0
  %45 = load i64, i64* %44, align 8
  %46 = add i64 %45, 1
  %47 = icmp ult i64 %46, 2
  br i1 %47, label %48, label %51

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %43, i64 1
  %50 = icmp eq %"struct.WTF::KeyValuePair"* %49, %21
  br i1 %50, label %53, label %42

51:                                               ; preds = %42
  %52 = icmp eq %"struct.WTF::KeyValuePair"* %43, %21
  br i1 %52, label %53, label %36

53:                                               ; preds = %30, %36, %51, %48, %2, %13, %33
  %54 = bitcast %"class.WTF::HashTable.13"* %3 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.WTF::HashTable.13"* %0 to i64*
  %57 = load i64, i64* %56, align 8
  store atomic i64 %57, i64* %54 monotonic, align 8
  store atomic i64 %55, i64* %56 monotonic, align 8
  %58 = getelementptr inbounds %"class.WTF::HashTable.13", %"class.WTF::HashTable.13"* %0, i64 0, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = load i32, i32* %6, align 8
  store i32 %60, i32* %58, align 4
  store i32 %59, i32* %6, align 8
  %61 = getelementptr inbounds %"class.WTF::HashTable.13", %"class.WTF::HashTable.13"* %0, i64 0, i32 2
  %62 = load i32, i32* %61, align 4
  %63 = load i32, i32* %7, align 4
  store i32 %63, i32* %61, align 4
  store i32 %62, i32* %7, align 4
  %64 = getelementptr inbounds %"class.WTF::HashTable.13", %"class.WTF::HashTable.13"* %0, i64 0, i32 3
  %65 = load i32, i32* %64, align 8
  %66 = and i32 %65, 2147483647
  %67 = load i32, i32* %8, align 8
  %68 = and i32 %67, 2147483647
  %69 = and i32 %65, -2147483648
  %70 = or i32 %68, %69
  store i32 %70, i32* %64, align 8
  %71 = and i32 %67, -2147483648
  %72 = or i32 %71, %66
  store i32 %72, i32* %8, align 8
  %73 = inttoptr i64 %57 to %"struct.WTF::KeyValuePair"*
  %74 = icmp eq i64 %57, 0
  br i1 %74, label %100, label %75, !prof !3

75:                                               ; preds = %53
  %76 = icmp eq i32 %59, 0
  br i1 %76, label %98, label %77

77:                                               ; preds = %75
  %78 = zext i32 %59 to i64
  br label %79

79:                                               ; preds = %95, %77
  %80 = phi i64 [ 0, %77 ], [ %96, %95 ]
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %73, i64 %80, i32 0
  %82 = load i64, i64* %81, align 8
  %83 = icmp eq i64 %82, -1
  br i1 %83, label %95, label %84

84:                                               ; preds = %79
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %73, i64 %80, i32 1, i32 0
  %86 = load %"class.blink::IDBObjectStoreMetadata"*, %"class.blink::IDBObjectStoreMetadata"** %85, align 8
  %87 = icmp eq %"class.blink::IDBObjectStoreMetadata"* %86, null
  br i1 %87, label %95, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %86, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %89) #7
  %90 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %86, i64 0, i32 0, i32 0, i32 0, i32 0
  %91 = load i32, i32* %90, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %95

93:                                               ; preds = %88
  call void @_ZN5blink22IDBObjectStoreMetadataD2Ev(%"class.blink::IDBObjectStoreMetadata"* nonnull %86) #7
  %94 = bitcast %"class.blink::IDBObjectStoreMetadata"* %86 to i8*
  call void @free(i8* %94) #7
  br label %95

95:                                               ; preds = %93, %88, %84, %79
  %96 = add nuw nsw i64 %80, 1
  %97 = icmp eq i64 %96, %78
  br i1 %97, label %98, label %79

98:                                               ; preds = %95, %75
  %99 = inttoptr i64 %57 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %99) #7
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %5, align 8
  br label %100

100:                                              ; preds = %53, %98
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #7
  ret %"class.WTF::HashTable.13"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIlNS_12KeyValuePairIl13scoped_refptrIN5blink22IDBObjectStoreMetadataEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.13"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %2, %5
  %6 = phi i32 [ %9, %5 ], [ %1, %2 ]
  %7 = phi i32 [ %8, %5 ], [ %1, %2 ]
  %8 = or i32 %7, %6
  %9 = lshr i32 %6, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %5

11:                                               ; preds = %5
  %12 = shl i32 %8, 1
  %13 = add i32 %12, 2
  %14 = icmp ugt i32 %13, 8
  %15 = select i1 %14, i32 %13, i32 8
  br label %16

16:                                               ; preds = %11, %2
  %17 = phi i32 [ 8, %2 ], [ %15, %11 ]
  %18 = getelementptr inbounds %"class.WTF::HashTable.13", %"class.WTF::HashTable.13"* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp ugt i32 %17, %19
  br i1 %20, label %21, label %32

21:                                               ; preds = %16
  %22 = icmp slt i32 %17, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %21
  %24 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.19, i64 0, i64 0), i32 1094, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.20, i64 0, i64 0)) #7
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #7
  br label %26

26:                                               ; preds = %21, %23
  %27 = zext i32 %17 to i64
  %28 = shl nuw nsw i64 %27, 4
  %29 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([118 x i8], [118 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIl13scoped_refptrIN5blink22IDBObjectStoreMetadataEEEEEEPKcv, i64 0, i64 0)) #7
  call void @llvm.memset.p0i8.i64(i8* align 1 %29, i8 0, i64 %28, i1 false) #7
  %30 = bitcast i8* %29 to %"struct.WTF::KeyValuePair"*
  %31 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIlNS_12KeyValuePairIl13scoped_refptrIN5blink22IDBObjectStoreMetadataEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.13"* %0, %"struct.WTF::KeyValuePair"* %30, i32 %17, %"struct.WTF::KeyValuePair"* null) #7
  br label %32

32:                                               ; preds = %26, %16
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIlNS_12KeyValuePairIl13scoped_refptrIN5blink22IDBObjectStoreMetadataEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.13"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.13", align 8
  %6 = bitcast %"class.WTF::HashTable.13"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #7
  %7 = getelementptr inbounds %"class.WTF::HashTable.13", %"class.WTF::HashTable.13"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.13", %"class.WTF::HashTable.13"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.13", %"class.WTF::HashTable.13"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.13", %"class.WTF::HashTable.13"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.13"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair"* %1, %"struct.WTF::KeyValuePair"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.13", %"class.WTF::HashTable.13"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.13", %"class.WTF::HashTable.13"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.13"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.13"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair"* %22 to i64
  br label %66

24:                                               ; preds = %105
  %25 = bitcast %"class.WTF::HashTable.13"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.13"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %106, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair"* [ null, %16 ], [ %109, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %107, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %62, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %60, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %57, %39
  %42 = phi i64 [ 0, %39 ], [ %58, %57 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %35, i64 %42, i32 0
  %44 = load i64, i64* %43, align 8
  %45 = icmp eq i64 %44, -1
  br i1 %45, label %57, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %35, i64 %42, i32 1, i32 0
  %48 = load %"class.blink::IDBObjectStoreMetadata"*, %"class.blink::IDBObjectStoreMetadata"** %47, align 8
  %49 = icmp eq %"class.blink::IDBObjectStoreMetadata"* %48, null
  br i1 %49, label %57, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %48, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %51) #7
  %52 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %57

55:                                               ; preds = %50
  call void @_ZN5blink22IDBObjectStoreMetadataD2Ev(%"class.blink::IDBObjectStoreMetadata"* nonnull %48) #7
  %56 = bitcast %"class.blink::IDBObjectStoreMetadata"* %48 to i8*
  call void @free(i8* %56) #7
  br label %57

57:                                               ; preds = %55, %50, %46, %41
  %58 = add nuw nsw i64 %42, 1
  %59 = icmp eq i64 %58, %40
  br i1 %59, label %60, label %41

60:                                               ; preds = %57, %37
  %61 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %61) #7
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %62

62:                                               ; preds = %28, %60
  %63 = getelementptr inbounds %"class.WTF::HashTable.13", %"class.WTF::HashTable.13"* %0, i64 0, i32 3
  %64 = load i32, i32* %63, align 8
  %65 = and i32 %64, -2147483648
  store i32 %65, i32* %63, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #7
  ret %"struct.WTF::KeyValuePair"* %33

66:                                               ; preds = %21, %105
  %67 = phi i64 [ %106, %105 ], [ %23, %21 ]
  %68 = phi i32 [ %107, %105 ], [ %13, %21 ]
  %69 = phi %"struct.WTF::KeyValuePair"* [ %108, %105 ], [ %22, %21 ]
  %70 = phi %"struct.WTF::KeyValuePair"* [ %109, %105 ], [ null, %21 ]
  %71 = phi i32 [ %110, %105 ], [ 0, %21 ]
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %69, i64 %72, i32 0
  %74 = load i64, i64* %73, align 8
  %75 = add i64 %74, 1
  %76 = icmp ult i64 %75, 2
  br i1 %76, label %105, label %77

77:                                               ; preds = %66
  %78 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIlNS_12KeyValuePairIl13scoped_refptrIN5blink22IDBObjectStoreMetadataEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE16LookupForWritingERKl(%"class.WTF::HashTable.13"* nonnull %5, i64* dereferenceable(8) %73) #7
  %79 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %78, 0
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %79, i64 0, i32 1, i32 0
  %81 = load %"class.blink::IDBObjectStoreMetadata"*, %"class.blink::IDBObjectStoreMetadata"** %80, align 8
  %82 = icmp eq %"class.blink::IDBObjectStoreMetadata"* %81, null
  br i1 %82, label %90, label %83

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %81, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %84) #7
  %85 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %81, i64 0, i32 0, i32 0, i32 0, i32 0
  %86 = load i32, i32* %85, align 4
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %90

88:                                               ; preds = %83
  call void @_ZN5blink22IDBObjectStoreMetadataD2Ev(%"class.blink::IDBObjectStoreMetadata"* nonnull %81) #7
  %89 = bitcast %"class.blink::IDBObjectStoreMetadata"* %81 to i8*
  call void @free(i8* %89) #7
  br label %90

90:                                               ; preds = %77, %83, %88
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %79, i64 0, i32 0
  %92 = load i64, i64* %73, align 8
  store i64 %92, i64* %91, align 8
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %79, i64 0, i32 1
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %69, i64 %72, i32 1
  %95 = getelementptr inbounds %class.scoped_refptr.16, %class.scoped_refptr.16* %94, i64 0, i32 0
  %96 = bitcast %class.scoped_refptr.16* %94 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = bitcast %class.scoped_refptr.16* %93 to i64*
  store i64 %97, i64* %98, align 8
  store %"class.blink::IDBObjectStoreMetadata"* null, %"class.blink::IDBObjectStoreMetadata"** %95, align 8
  %99 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %100 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %99, i64 %72
  %101 = icmp eq %"struct.WTF::KeyValuePair"* %100, %3
  %102 = select i1 %101, %"struct.WTF::KeyValuePair"* %79, %"struct.WTF::KeyValuePair"* %70
  %103 = load i32, i32* %12, align 8
  %104 = ptrtoint %"struct.WTF::KeyValuePair"* %99 to i64
  br label %105

105:                                              ; preds = %66, %90
  %106 = phi i64 [ %67, %66 ], [ %104, %90 ]
  %107 = phi i32 [ %68, %66 ], [ %103, %90 ]
  %108 = phi %"struct.WTF::KeyValuePair"* [ %69, %66 ], [ %99, %90 ]
  %109 = phi %"struct.WTF::KeyValuePair"* [ %70, %66 ], [ %102, %90 ]
  %110 = add i32 %71, 1
  %111 = icmp eq i32 %110, %107
  br i1 %111, label %24, label %66
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIlNS_12KeyValuePairIl13scoped_refptrIN5blink22IDBObjectStoreMetadataEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE16LookupForWritingERKl(%"class.WTF::HashTable.13"*, i64* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.13", %"class.WTF::HashTable.13"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.13", %"class.WTF::HashTable.13"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = load i64, i64* %1, align 8
  %10 = shl i64 %9, 32
  %11 = xor i64 %10, -1
  %12 = add i64 %9, %11
  %13 = lshr i64 %12, 22
  %14 = xor i64 %13, %12
  %15 = shl i64 %14, 13
  %16 = xor i64 %15, -1
  %17 = add i64 %14, %16
  %18 = lshr i64 %17, 8
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, 9
  %21 = lshr i64 %20, 15
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 27
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 31
  %27 = xor i64 %26, %25
  %28 = trunc i64 %27 to i32
  %29 = and i32 %7, %28
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %30
  %32 = ptrtoint %"struct.WTF::KeyValuePair"* %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %31, i64 0, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %53, label %36

36:                                               ; preds = %2
  %37 = xor i32 %28, -1
  %38 = lshr i32 %28, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %59

50:                                               ; preds = %66
  %51 = ptrtoint %"struct.WTF::KeyValuePair"* %73 to i64
  %52 = inttoptr i64 %68 to %"struct.WTF::KeyValuePair"*
  br label %53

53:                                               ; preds = %50, %2
  %54 = phi i64 [ %51, %50 ], [ %32, %2 ]
  %55 = phi %"struct.WTF::KeyValuePair"* [ %52, %50 ], [ null, %2 ]
  %56 = icmp eq %"struct.WTF::KeyValuePair"* %55, null
  %57 = ptrtoint %"struct.WTF::KeyValuePair"* %55 to i64
  %58 = select i1 %56, i64 %54, i64 %57
  br label %78

59:                                               ; preds = %66, %36
  %60 = phi i64 [ 0, %36 ], [ %68, %66 ]
  %61 = phi i64 [ %34, %36 ], [ %76, %66 ]
  %62 = phi i64 [ %32, %36 ], [ %74, %66 ]
  %63 = phi i64 [ %30, %36 ], [ %72, %66 ]
  %64 = phi i64 [ 0, %36 ], [ %70, %66 ]
  %65 = icmp eq i64 %61, %9
  br i1 %65, label %78, label %66

66:                                               ; preds = %59
  %67 = icmp eq i64 %61, -1
  %68 = select i1 %67, i64 %62, i64 %60
  %69 = icmp eq i64 %64, 0
  %70 = select i1 %69, i64 %49, i64 %64
  %71 = add i64 %70, %63
  %72 = and i64 %71, %8
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %72
  %74 = ptrtoint %"struct.WTF::KeyValuePair"* %73 to i64
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %73, i64 0, i32 0
  %76 = load i64, i64* %75, align 8
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %50, label %59

78:                                               ; preds = %59, %53
  %79 = phi i64 [ %58, %53 ], [ %62, %59 ]
  %80 = phi i8 [ 0, %53 ], [ 1, %59 ]
  %81 = inttoptr i64 %79 to %"struct.WTF::KeyValuePair"*
  %82 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %81, 0
  %83 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %82, i8 %80, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %83
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIlNS_12KeyValuePairIl13scoped_refptrIN5blink22IDBObjectStoreMetadataEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS9_SE_SF_EERKlRKS6_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.13"*, i64* dereferenceable(8), %"struct.WTF::KeyValuePair"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.13", %"class.WTF::HashTable.13"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIlNS_12KeyValuePairIl13scoped_refptrIN5blink22IDBObjectStoreMetadataEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.13"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.13", %"class.WTF::HashTable.13"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %1, align 8
  %17 = shl i64 %16, 32
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 22
  %21 = xor i64 %20, %19
  %22 = shl i64 %21, 13
  %23 = xor i64 %22, -1
  %24 = add i64 %21, %23
  %25 = lshr i64 %24, 8
  %26 = xor i64 %25, %24
  %27 = mul i64 %26, 9
  %28 = lshr i64 %27, 15
  %29 = xor i64 %28, %27
  %30 = shl i64 %29, 27
  %31 = xor i64 %30, -1
  %32 = add i64 %29, %31
  %33 = lshr i64 %32, 31
  %34 = xor i64 %33, %32
  %35 = trunc i64 %34 to i32
  %36 = and i32 %14, %35
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %37
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %38, i64 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %84, label %42

42:                                               ; preds = %10
  %43 = xor i32 %35, -1
  %44 = lshr i32 %35, 23
  %45 = add i32 %44, %43
  %46 = shl i32 %45, 12
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 7
  %49 = xor i32 %48, %47
  %50 = shl i32 %49, 2
  %51 = xor i32 %50, %49
  %52 = lshr i32 %51, 20
  %53 = xor i32 %52, %51
  %54 = or i32 %53, 1
  %55 = zext i32 %54 to i64
  br label %56

56:                                               ; preds = %42, %63
  %57 = phi i64 [ %40, %42 ], [ %72, %63 ]
  %58 = phi %"struct.WTF::KeyValuePair"* [ %38, %42 ], [ %70, %63 ]
  %59 = phi %"struct.WTF::KeyValuePair"* [ null, %42 ], [ %65, %63 ]
  %60 = phi i64 [ %37, %42 ], [ %69, %63 ]
  %61 = phi i64 [ 0, %42 ], [ %67, %63 ]
  %62 = icmp eq i64 %57, %16
  br i1 %62, label %120, label %63

63:                                               ; preds = %56
  %64 = icmp eq i64 %57, -1
  %65 = select i1 %64, %"struct.WTF::KeyValuePair"* %58, %"struct.WTF::KeyValuePair"* %59
  %66 = icmp eq i64 %61, 0
  %67 = select i1 %66, i64 %55, i64 %61
  %68 = add i64 %67, %60
  %69 = and i64 %68, %15
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %69
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %70, i64 0, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %74, label %56

74:                                               ; preds = %63
  %75 = icmp eq %"struct.WTF::KeyValuePair"* %65, null
  br i1 %75, label %84, label %76

76:                                               ; preds = %74
  %77 = bitcast %"struct.WTF::KeyValuePair"* %65 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %77, i8 0, i64 16, i1 false) #7
  %78 = getelementptr inbounds %"class.WTF::HashTable.13", %"class.WTF::HashTable.13"* %0, i64 0, i32 3
  %79 = load i32, i32* %78, align 8
  %80 = add i32 %79, 2147483647
  %81 = and i32 %80, 2147483647
  %82 = and i32 %79, -2147483648
  %83 = or i32 %81, %82
  store i32 %83, i32* %78, align 8
  br label %84

84:                                               ; preds = %10, %74, %76
  %85 = phi %"struct.WTF::KeyValuePair"* [ %65, %76 ], [ %70, %74 ], [ %38, %10 ]
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %2, i64 0, i32 0
  %87 = load i64, i64* %86, align 8
  %88 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %85, i64 0, i32 0
  store i64 %87, i64* %88, align 8
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %85, i64 0, i32 1
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %2, i64 0, i32 1, i32 0
  %91 = load %"class.blink::IDBObjectStoreMetadata"*, %"class.blink::IDBObjectStoreMetadata"** %90, align 8
  %92 = icmp eq %"class.blink::IDBObjectStoreMetadata"* %91, null
  br i1 %92, label %95, label %93

93:                                               ; preds = %84
  %94 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %91, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %94) #7
  br label %95

95:                                               ; preds = %93, %84
  %96 = ptrtoint %"class.blink::IDBObjectStoreMetadata"* %91 to i64
  %97 = bitcast %class.scoped_refptr.16* %89 to i64*
  %98 = getelementptr inbounds %class.scoped_refptr.16, %class.scoped_refptr.16* %89, i64 0, i32 0
  %99 = load %"class.blink::IDBObjectStoreMetadata"*, %"class.blink::IDBObjectStoreMetadata"** %98, align 8
  store i64 %96, i64* %97, align 8
  %100 = icmp eq %"class.blink::IDBObjectStoreMetadata"* %99, null
  br i1 %100, label %108, label %101

101:                                              ; preds = %95
  %102 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %99, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %102) #7
  %103 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %99, i64 0, i32 0, i32 0, i32 0, i32 0
  %104 = load i32, i32* %103, align 4
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %108

106:                                              ; preds = %101
  tail call void @_ZN5blink22IDBObjectStoreMetadataD2Ev(%"class.blink::IDBObjectStoreMetadata"* nonnull %99) #7
  %107 = bitcast %"class.blink::IDBObjectStoreMetadata"* %99 to i8*
  tail call void @free(i8* %107) #7
  br label %108

108:                                              ; preds = %95, %101, %106
  %109 = getelementptr inbounds %"class.WTF::HashTable.13", %"class.WTF::HashTable.13"* %0, i64 0, i32 2
  %110 = load i32, i32* %109, align 4
  %111 = add i32 %110, 1
  store i32 %111, i32* %109, align 4
  %112 = getelementptr inbounds %"class.WTF::HashTable.13", %"class.WTF::HashTable.13"* %0, i64 0, i32 3
  %113 = load i32, i32* %112, align 8
  %114 = add i32 %113, %111
  %115 = shl i32 %114, 1
  %116 = load i32, i32* %12, align 8
  %117 = icmp ult i32 %115, %116
  br i1 %117, label %120, label %118

118:                                              ; preds = %108
  %119 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIlNS_12KeyValuePairIl13scoped_refptrIN5blink22IDBObjectStoreMetadataEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.13"* %0, %"struct.WTF::KeyValuePair"* %85)
  br label %120

120:                                              ; preds = %56, %108, %118
  %121 = phi i8 [ 1, %108 ], [ 1, %118 ], [ 0, %56 ]
  %122 = phi %"struct.WTF::KeyValuePair"* [ %85, %108 ], [ %119, %118 ], [ %58, %56 ]
  %123 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %122, 0
  %124 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %123, i8 %121, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %124
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIlNS_12KeyValuePairIl13scoped_refptrIN5blink22IDBObjectStoreMetadataEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.13"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.13", %"class.WTF::HashTable.13"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.13", %"class.WTF::HashTable.13"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #7
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #7
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i64 0, i64 0), i8* %22, i8* %23) #7
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.19, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #7
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #7
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #7
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([118 x i8], [118 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIl13scoped_refptrIN5blink22IDBObjectStoreMetadataEEEEEEPKcv, i64 0, i64 0)) #7
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #7
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair"*
  %37 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIlNS_12KeyValuePairIl13scoped_refptrIN5blink22IDBObjectStoreMetadataEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.13"* %0, %"struct.WTF::KeyValuePair"* %36, i32 %32, %"struct.WTF::KeyValuePair"* %1) #7
  ret %"struct.WTF::KeyValuePair"* %37
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

declare void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"*) unnamed_addr #1

declare zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #1

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #1

declare void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"*, %"class.WTF::AtomicString"* dereferenceable(8), i32, i32, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #7
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !4

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #7
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #7
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #5 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #7
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #7
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #7
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #7
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.22, i64 0, i64 0), i8* %21, i8* %22) #7
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #7
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.23, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #7
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #7
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #7
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !4

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #7
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #7
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #1

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #1

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #1

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.17"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %8 = icmp ugt %"class.WTF::String"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 %10
  %12 = icmp ugt %"class.WTF::String"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq %"class.WTF::String"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %26) #7
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #7
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.17"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.WTF::String"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.WTF::String"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !3

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #7
  %47 = bitcast %"class.WTF::Vector.17"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #7
  %51 = bitcast %"class.WTF::Vector.17"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.WTF::String"* %1 to i64
  %56 = ptrtoint %"class.WTF::String"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !3

69:                                               ; preds = %54
  %70 = icmp eq %"class.WTF::String"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %71) #7
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #7
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.17"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.WTF::String"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.WTF::String"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !3

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #7
  %87 = bitcast %"class.WTF::Vector.17"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #7
  %91 = bitcast %"class.WTF::Vector.17"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.WTF::String"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.WTF::String"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.WTF::String"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.WTF::String"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %101, i64 0, i32 0, i32 0
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %106 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %100, i64 %103, i32 0, i32 0
  store %"class.WTF::StringImpl"* %105, %"class.WTF::StringImpl"** %106, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %107, label %125, label %108

108:                                              ; preds = %99
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %125

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = zext i32 %115 to i33
  %117 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %116, i33 1) #7
  %118 = extractvalue { i33, i1 } %117, 1
  %119 = extractvalue { i33, i1 } %117, 0
  %120 = icmp slt i33 %119, 0
  %121 = or i1 %118, %120
  br i1 %121, label %122, label %123, !prof !4

122:                                              ; preds = %113
  tail call void @llvm.trap() #7
  unreachable

123:                                              ; preds = %113
  %124 = trunc i33 %119 to i32
  store i32 %124, i32* %114, align 4
  br label %125

125:                                              ; preds = %99, %108, %123
  %126 = load i32, i32* %3, align 4
  %127 = add i32 %126, 1
  store i32 %127, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #7
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.26, i64 0, i64 0), i8* %11, i8* %12) #7
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.27, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #7
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #7
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #7
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #12

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReference4FlagD1Ev(%"class.base::internal::WeakReference::Flag"*) unnamed_addr #3

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #1

declare void @_ZN5blink10EventQueueC1EPNS_16ExecutionContextENS_8TaskTypeE(%"class.blink::EventQueue"*, %"class.blink::ExecutionContext"*, i8 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_10EventQueueEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #7
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !4

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #7
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_10EventQueueEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_10EventQueueEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_10EventQueueEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #7
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10EventQueueEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_10EventQueueEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::EventQueue"*
  tail call void @_ZNK5blink10EventQueue5TraceEPNS_7VisitorE(%"class.blink::EventQueue"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_10EventQueueEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::EventQueue"*
  tail call void @_ZN5blink10EventQueueD1Ev(%"class.blink::EventQueue"* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_10EventQueueEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.30, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink10EventQueue5TraceEPNS_7VisitorE(%"class.blink::EventQueue"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink10EventQueueD1Ev(%"class.blink::EventQueue"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_26HeapMojoAssociatedReceiverINS_5mojom5blink20IDBDatabaseCallbacksENS_11IDBDatabaseELNS_19HeapMojoWrapperModeE0EE7WrapperEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #7
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !4

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #7
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_26HeapMojoAssociatedReceiverINS_5mojom5blink20IDBDatabaseCallbacksENS_11IDBDatabaseELNS_19HeapMojoWrapperModeE0EE7WrapperEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_26HeapMojoAssociatedReceiverINS_5mojom5blink20IDBDatabaseCallbacksENS_11IDBDatabaseELNS_19HeapMojoWrapperModeE0EE7WrapperEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_26HeapMojoAssociatedReceiverINS_5mojom5blink20IDBDatabaseCallbacksENS_11IDBDatabaseELNS_19HeapMojoWrapperModeE0EE7WrapperEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #7
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([203 x i8], [203 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink26HeapMojoAssociatedReceiverINS1_5mojom5blink20IDBDatabaseCallbacksENS1_11IDBDatabaseELNS1_19HeapMojoWrapperModeE0EE7WrapperEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_26HeapMojoAssociatedReceiverINS_5mojom5blink20IDBDatabaseCallbacksENS_11IDBDatabaseELNS_19HeapMojoWrapperModeE0EE7WrapperEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 24
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %0, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11IDBDatabaseEE5TraceEPNS_7VisitorEPKv) #7
  br label %13

13:                                               ; preds = %2, %7
  %14 = bitcast i8* %1 to %"class.blink::ContextLifecycleObserver"*
  tail call void @_ZNK5blink24ContextLifecycleObserver5TraceEPNS_7VisitorE(%"class.blink::ContextLifecycleObserver"* %14, %"class.blink::Visitor"* %0) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_26HeapMojoAssociatedReceiverINS_5mojom5blink20IDBDatabaseCallbacksENS_11IDBDatabaseELNS_19HeapMojoWrapperModeE0EE7WrapperEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink26HeapMojoAssociatedReceiverINS_5mojom5blink20IDBDatabaseCallbacksENS_11IDBDatabaseELNS_19HeapMojoWrapperModeE0EE7WrapperE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds i8, i8* %0, i64 56
  %4 = bitcast i8* %3 to %"class.base::internal::WeakPtrFactoryBase"*
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %4) #7
  %5 = getelementptr inbounds i8, i8* %0, i64 32
  %6 = bitcast i8* %5 to %"class.mojo::internal::AssociatedReceiverBase"*
  tail call void @_ZN4mojo8internal22AssociatedReceiverBaseD2Ev(%"class.mojo::internal::AssociatedReceiverBase"* %6) #7
  %7 = bitcast i8* %0 to %"class.blink::ContextLifecycleObserver"*
  tail call void @_ZN5blink24ContextLifecycleObserverD2Ev(%"class.blink::ContextLifecycleObserver"* %7) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_26HeapMojoAssociatedReceiverINS_5mojom5blink20IDBDatabaseCallbacksENS_11IDBDatabaseELNS_19HeapMojoWrapperModeE0EE7WrapperEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.30, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink26HeapMojoAssociatedReceiverINS_5mojom5blink20IDBDatabaseCallbacksENS_11IDBDatabaseELNS_19HeapMojoWrapperModeE0EE7Wrapper5TraceEPNS_7VisitorE(%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::IDBDatabaseCallbacks, blink::IDBDatabase, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::IDBDatabaseCallbacks, blink::IDBDatabase, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::IDBDatabaseCallbacks, blink::IDBDatabase, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::Member.42"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11IDBDatabaseEE5TraceEPNS_7VisitorEPKv) #7
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::IDBDatabaseCallbacks, blink::IDBDatabase, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::IDBDatabaseCallbacks, blink::IDBDatabase, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %0, i64 0, i32 0
  tail call void @_ZNK5blink24ContextLifecycleObserver5TraceEPNS_7VisitorE(%"class.blink::ContextLifecycleObserver"* %14, %"class.blink::Visitor"* %1) #7
  ret void
}

declare void @_ZNK5blink24ContextLifecycleObserver5TraceEPNS_7VisitorE(%"class.blink::ContextLifecycleObserver"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11IDBDatabaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::IDBDatabase"*
  tail call void @_ZNK5blink11IDBDatabase5TraceEPNS_7VisitorE(%"class.blink::IDBDatabase"* %3, %"class.blink::Visitor"* %0)
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink26HeapMojoAssociatedReceiverINS_5mojom5blink20IDBDatabaseCallbacksENS_11IDBDatabaseELNS_19HeapMojoWrapperModeE0EE7WrapperD2Ev(%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::IDBDatabaseCallbacks, blink::IDBDatabase, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::IDBDatabaseCallbacks, blink::IDBDatabase, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::IDBDatabaseCallbacks, blink::IDBDatabase, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink26HeapMojoAssociatedReceiverINS_5mojom5blink20IDBDatabaseCallbacksENS_11IDBDatabaseELNS_19HeapMojoWrapperModeE0EE7WrapperE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::IDBDatabaseCallbacks, blink::IDBDatabase, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::IDBDatabaseCallbacks, blink::IDBDatabase, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %0, i64 0, i32 3, i32 2, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %3) #7
  %4 = getelementptr inbounds %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::IDBDatabaseCallbacks, blink::IDBDatabase, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::IDBDatabaseCallbacks, blink::IDBDatabase, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN4mojo8internal22AssociatedReceiverBaseD2Ev(%"class.mojo::internal::AssociatedReceiverBase"* %4) #7
  %5 = getelementptr inbounds %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::IDBDatabaseCallbacks, blink::IDBDatabase, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::IDBDatabaseCallbacks, blink::IDBDatabase, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %0, i64 0, i32 0
  tail call void @_ZN5blink24ContextLifecycleObserverD2Ev(%"class.blink::ContextLifecycleObserver"* %5) #7
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink26HeapMojoAssociatedReceiverINS_5mojom5blink20IDBDatabaseCallbacksENS_11IDBDatabaseELNS_19HeapMojoWrapperModeE0EE7WrapperD0Ev(%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::IDBDatabaseCallbacks, blink::IDBDatabase, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::IDBDatabaseCallbacks, blink::IDBDatabase, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::IDBDatabaseCallbacks, blink::IDBDatabase, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink26HeapMojoAssociatedReceiverINS_5mojom5blink20IDBDatabaseCallbacksENS_11IDBDatabaseELNS_19HeapMojoWrapperModeE0EE7WrapperE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::IDBDatabaseCallbacks, blink::IDBDatabase, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::IDBDatabaseCallbacks, blink::IDBDatabase, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %0, i64 0, i32 3, i32 2, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %3) #7
  %4 = getelementptr inbounds %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::IDBDatabaseCallbacks, blink::IDBDatabase, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::IDBDatabaseCallbacks, blink::IDBDatabase, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN4mojo8internal22AssociatedReceiverBaseD2Ev(%"class.mojo::internal::AssociatedReceiverBase"* %4) #7
  %5 = getelementptr inbounds %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::IDBDatabaseCallbacks, blink::IDBDatabase, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::IDBDatabaseCallbacks, blink::IDBDatabase, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %0, i64 0, i32 0
  tail call void @_ZN5blink24ContextLifecycleObserverD2Ev(%"class.blink::ContextLifecycleObserver"* %5) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink24ContextLifecycleObserver35IsExecutionContextLifecycleObserverEv(%"class.blink::ContextLifecycleObserver"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink26HeapMojoAssociatedReceiverINS_5mojom5blink20IDBDatabaseCallbacksENS_11IDBDatabaseELNS_19HeapMojoWrapperModeE0EE7Wrapper16ContextDestroyedEv(%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::IDBDatabaseCallbacks, blink::IDBDatabase, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::IDBDatabaseCallbacks, blink::IDBDatabase, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::IDBDatabaseCallbacks, blink::IDBDatabase, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN4mojo8internal22AssociatedReceiverBase5resetEv(%"class.mojo::internal::AssociatedReceiverBase"* %2) #7
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4mojo8internal22AssociatedReceiverBaseD2Ev(%"class.mojo::internal::AssociatedReceiverBase"*) unnamed_addr #3

declare void @_ZN4mojo8internal22AssociatedReceiverBase5resetEv(%"class.mojo::internal::AssociatedReceiverBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink11ThreadState24PrefinalizerRegistrationINS_26HeapMojoAssociatedReceiverINS_5mojom5blink20IDBDatabaseCallbacksENS_11IDBDatabaseELNS_19HeapMojoWrapperModeE0EE7WrapperEEC2EPS9_(%"class.blink::ThreadState::PrefinalizerRegistration"*, %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::IDBDatabaseCallbacks, blink::IDBDatabase, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*) unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::IDBDatabaseCallbacks, blink::IDBDatabase, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %1 to i64
  %4 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %5 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %4, i64 0, i32 1
  %6 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %5) #7
  %7 = icmp eq i8* %6, null
  br i1 %7, label %8, label %10, !prof !4

8:                                                ; preds = %2
  %9 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %5, i8* %9) #7
  br label %10

10:                                               ; preds = %2, %8
  %11 = phi i8* [ %9, %8 ], [ %6, %2 ]
  %12 = bitcast i8* %11 to %"class.blink::ThreadState"**
  %13 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %13, i64 0, i32 19
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %13, i64 0, i32 19, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %13, i64 0, i32 19, i32 2
  %19 = load i32, i32* %18, align 4
  br i1 %17, label %23, label %20

20:                                               ; preds = %10
  %21 = add i32 %19, 1
  %22 = icmp eq i32 %21, %16
  br i1 %22, label %32, label %34

23:                                               ; preds = %10
  %24 = icmp eq i32 %19, 0
  %25 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %13, i64 0, i32 19, i32 0, i32 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  br i1 %24, label %30, label %27

27:                                               ; preds = %23
  %28 = add i32 %26, -1
  %29 = icmp eq i32 %19, %28
  br i1 %29, label %32, label %34

30:                                               ; preds = %23
  %31 = icmp eq i32 %26, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %30, %27, %20
  tail call void @_ZN3WTF5DequeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES3_EEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque.369"* %14) #7
  %33 = load i32, i32* %18, align 4
  br label %34

34:                                               ; preds = %20, %27, %30, %32
  %35 = phi i32 [ %19, %20 ], [ %19, %27 ], [ 0, %30 ], [ %33, %32 ]
  %36 = getelementptr inbounds %"class.WTF::Deque.369", %"class.WTF::Deque.369"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load %"struct.std::__1::pair.374"*, %"struct.std::__1::pair.374"** %36, align 8
  %38 = zext i32 %35 to i64
  %39 = getelementptr inbounds %"struct.std::__1::pair.374", %"struct.std::__1::pair.374"* %37, i64 %38
  %40 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %13, i64 0, i32 19, i32 0, i32 0, i32 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = add i32 %41, -1
  %43 = icmp eq i32 %35, %42
  %44 = add i32 %35, 1
  %45 = select i1 %43, i32 0, i32 %44
  store i32 %45, i32* %18, align 4
  %46 = bitcast %"struct.std::__1::pair.374"* %39 to i64*
  store i64 %3, i64* %46, align 8
  %47 = getelementptr inbounds %"struct.std::__1::pair.374", %"struct.std::__1::pair.374"* %37, i64 %38, i32 1
  store i1 (%"class.blink::LivenessBroker"*, i8*)* @_ZN5blink26HeapMojoAssociatedReceiverINS_5mojom5blink20IDBDatabaseCallbacksENS_11IDBDatabaseELNS_19HeapMojoWrapperModeE0EE7Wrapper18InvokePreFinalizerERKNS_14LivenessBrokerEPv, i1 (%"class.blink::LivenessBroker"*, i8*)** %47, align 8
  ret void
}

declare void @_ZN5blink24ContextLifecycleObserver27SetContextLifecycleNotifierEPNS_24ContextLifecycleNotifierE(%"class.blink::ContextLifecycleObserver"*, %"class.blink::ContextLifecycleNotifier"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink26HeapMojoAssociatedReceiverINS_5mojom5blink20IDBDatabaseCallbacksENS_11IDBDatabaseELNS_19HeapMojoWrapperModeE0EE7Wrapper18InvokePreFinalizerERKNS_14LivenessBrokerEPv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %25, label %4

4:                                                ; preds = %2
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #7
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !4

9:                                                ; preds = %4
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #7
  br label %11

11:                                               ; preds = %9, %4
  %12 = phi i8* [ %10, %9 ], [ %7, %4 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = icmp eq %"class.blink::ThreadState"* %14, null
  br i1 %15, label %25, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds i8, i8* %1, i64 -2
  %18 = bitcast i8* %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = and i16 %19, 1
  %21 = icmp eq i16 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %16
  %23 = getelementptr inbounds i8, i8* %1, i64 32
  %24 = bitcast i8* %23 to %"class.mojo::internal::AssociatedReceiverBase"*
  tail call void @_ZN4mojo8internal22AssociatedReceiverBase5resetEv(%"class.mojo::internal::AssociatedReceiverBase"* %24) #7
  br label %25

25:                                               ; preds = %16, %11, %2, %22
  %26 = phi i1 [ true, %22 ], [ false, %16 ], [ false, %2 ], [ false, %11 ]
  ret i1 %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5DequeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES3_EEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque.369"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::Deque.369", %"class.WTF::Deque.369"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.WTF::Deque.369", %"class.WTF::Deque.369"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"struct.std::__1::pair.374"*, %"struct.std::__1::pair.374"** %4, align 8
  %6 = lshr i32 %3, 2
  %7 = add i32 %3, 1
  %8 = add i32 %7, %6
  %9 = icmp ugt i32 %8, 16
  %10 = select i1 %9, i32 %8, i32 16
  %11 = zext i32 %10 to i64
  %12 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES4_EEEEEmm(i64 %11) #7
  %13 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES4_EEEEEmm(i64 %11) #7
  %14 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %13, i8* getelementptr inbounds ([119 x i8], [119 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES3_EEEEEPKcv, i64 0, i64 0)) #7
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast %"class.WTF::Deque.369"* %0 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = lshr i64 %13, 4
  %18 = trunc i64 %17 to i32
  store i32 %18, i32* %2, align 8
  %19 = getelementptr inbounds %"class.WTF::Deque.369", %"class.WTF::Deque.369"* %0, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Deque.369", %"class.WTF::Deque.369"* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = icmp ugt i32 %20, %22
  %24 = bitcast i8* %14 to %"struct.std::__1::pair.374"*
  br i1 %23, label %40, label %25

25:                                               ; preds = %1
  %26 = zext i32 %20 to i64
  %27 = getelementptr inbounds %"struct.std::__1::pair.374", %"struct.std::__1::pair.374"* %5, i64 %26
  %28 = getelementptr inbounds %"struct.std::__1::pair.374", %"struct.std::__1::pair.374"* %24, i64 %26
  %29 = icmp ne %"struct.std::__1::pair.374"* %28, null
  %30 = icmp ne %"struct.std::__1::pair.374"* %27, null
  %31 = and i1 %30, %29
  br i1 %31, label %32, label %73, !prof !3

32:                                               ; preds = %25
  %33 = zext i32 %22 to i64
  %34 = getelementptr inbounds %"struct.std::__1::pair.374", %"struct.std::__1::pair.374"* %5, i64 %33
  %35 = bitcast %"struct.std::__1::pair.374"* %27 to i8*
  %36 = ptrtoint %"struct.std::__1::pair.374"* %34 to i64
  %37 = ptrtoint %"struct.std::__1::pair.374"* %27 to i64
  %38 = sub i64 %36, %37
  %39 = bitcast %"struct.std::__1::pair.374"* %28 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %39, i8* nonnull align 8 %35, i64 %38, i1 false) #7
  br label %73

40:                                               ; preds = %1
  %41 = icmp ne i8* %14, null
  %42 = icmp ne %"struct.std::__1::pair.374"* %5, null
  %43 = and i1 %42, %41
  br i1 %43, label %44, label %51, !prof !3

44:                                               ; preds = %40
  %45 = zext i32 %22 to i64
  %46 = bitcast %"struct.std::__1::pair.374"* %5 to i8*
  %47 = shl nuw nsw i64 %45, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* nonnull align 8 %46, i64 %47, i1 false) #7
  %48 = load i32, i32* %2, align 8
  %49 = load i32, i32* %19, align 8
  %50 = load %"struct.std::__1::pair.374"*, %"struct.std::__1::pair.374"** %4, align 8
  br label %51

51:                                               ; preds = %40, %44
  %52 = phi %"struct.std::__1::pair.374"* [ %24, %40 ], [ %50, %44 ]
  %53 = phi i32 [ %20, %40 ], [ %49, %44 ]
  %54 = phi i32 [ %18, %40 ], [ %48, %44 ]
  %55 = sub i32 %53, %3
  %56 = add i32 %55, %54
  %57 = zext i32 %53 to i64
  %58 = getelementptr inbounds %"struct.std::__1::pair.374", %"struct.std::__1::pair.374"* %5, i64 %57
  %59 = zext i32 %56 to i64
  %60 = getelementptr inbounds %"struct.std::__1::pair.374", %"struct.std::__1::pair.374"* %52, i64 %59
  %61 = icmp ne %"struct.std::__1::pair.374"* %60, null
  %62 = icmp ne %"struct.std::__1::pair.374"* %58, null
  %63 = and i1 %62, %61
  br i1 %63, label %64, label %72, !prof !3

64:                                               ; preds = %51
  %65 = zext i32 %3 to i64
  %66 = getelementptr inbounds %"struct.std::__1::pair.374", %"struct.std::__1::pair.374"* %5, i64 %65
  %67 = bitcast %"struct.std::__1::pair.374"* %58 to i8*
  %68 = ptrtoint %"struct.std::__1::pair.374"* %66 to i64
  %69 = ptrtoint %"struct.std::__1::pair.374"* %58 to i64
  %70 = sub i64 %68, %69
  %71 = bitcast %"struct.std::__1::pair.374"* %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %71, i8* nonnull align 8 %67, i64 %70, i1 false) #7
  br label %72

72:                                               ; preds = %51, %64
  store i32 %56, i32* %19, align 8
  br label %73

73:                                               ; preds = %32, %25, %72
  %74 = bitcast %"struct.std::__1::pair.374"* %5 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %74) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES4_EEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #7
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.26, i64 0, i64 0), i8* %11, i8* %12) #7
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.27, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #7
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #7
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #7
  ret i64 %21
}

declare void @_ZN4mojo8internal22AssociatedReceiverBaseC2Ev(%"class.mojo::internal::AssociatedReceiverBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink24IDBDatabaseCallbacksStubIN4mojo19RawPtrImplRefTraitsINS1_20IDBDatabaseCallbacksEEEED0Ev(%"class.blink::mojom::blink::IDBDatabaseCallbacksStub"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::mojom::blink::IDBDatabaseCallbacksStub"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

declare zeroext i1 @_ZN4mojo15MessageReceiver25PrefersSerializedMessagesEv(%"class.mojo::MessageReceiver"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink5mojom5blink24IDBDatabaseCallbacksStubIN4mojo19RawPtrImplRefTraitsINS1_20IDBDatabaseCallbacksEEEE6AcceptEPNS3_7MessageE(%"class.blink::mojom::blink::IDBDatabaseCallbacksStub"*, %"class.mojo::Message"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::blink::IDBDatabaseCallbacksStub", %"class.blink::mojom::blink::IDBDatabaseCallbacksStub"* %0, i64 0, i32 1
  %4 = load %"class.blink::mojom::blink::IDBDatabaseCallbacks"*, %"class.blink::mojom::blink::IDBDatabaseCallbacks"** %3, align 8
  %5 = icmp eq %"class.blink::mojom::blink::IDBDatabaseCallbacks"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = tail call zeroext i1 @_ZN5blink5mojom5blink32IDBDatabaseCallbacksStubDispatch6AcceptEPNS1_20IDBDatabaseCallbacksEPN4mojo7MessageE(%"class.blink::mojom::blink::IDBDatabaseCallbacks"* nonnull %4, %"class.mojo::Message"* %1) #7
  br label %8

8:                                                ; preds = %2, %6
  %9 = phi i1 [ %7, %6 ], [ false, %2 ]
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink5mojom5blink24IDBDatabaseCallbacksStubIN4mojo19RawPtrImplRefTraitsINS1_20IDBDatabaseCallbacksEEEE19AcceptWithResponderEPNS3_7MessageENSt3__110unique_ptrINS3_25MessageReceiverWithStatusENSA_14default_deleteISC_EEEE(%"class.blink::mojom::blink::IDBDatabaseCallbacksStub"*, %"class.mojo::Message"*, %"class.mojo::MessageReceiverWithStatus"*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::mojom::blink::IDBDatabaseCallbacksStub", %"class.blink::mojom::blink::IDBDatabaseCallbacksStub"* %0, i64 0, i32 1
  %5 = load %"class.blink::mojom::blink::IDBDatabaseCallbacks"*, %"class.blink::mojom::blink::IDBDatabaseCallbacks"** %4, align 8
  %6 = icmp eq %"class.blink::mojom::blink::IDBDatabaseCallbacks"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  %8 = tail call zeroext i1 @_ZN5blink5mojom5blink32IDBDatabaseCallbacksStubDispatch19AcceptWithResponderEPNS1_20IDBDatabaseCallbacksEPN4mojo7MessageENSt3__110unique_ptrINS5_25MessageReceiverWithStatusENS8_14default_deleteISA_EEEE(%"class.blink::mojom::blink::IDBDatabaseCallbacks"* nonnull %5, %"class.mojo::Message"* %1, %"class.mojo::MessageReceiverWithStatus"* %2) #7
  br label %16

9:                                                ; preds = %3
  %10 = icmp eq %"class.mojo::MessageReceiverWithStatus"* %2, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %9
  %12 = bitcast %"class.mojo::MessageReceiverWithStatus"* %2 to void (%"class.mojo::MessageReceiverWithStatus"*)***
  %13 = load void (%"class.mojo::MessageReceiverWithStatus"*)**, void (%"class.mojo::MessageReceiverWithStatus"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.mojo::MessageReceiverWithStatus"*)*, void (%"class.mojo::MessageReceiverWithStatus"*)** %13, i64 1
  %15 = load void (%"class.mojo::MessageReceiverWithStatus"*)*, void (%"class.mojo::MessageReceiverWithStatus"*)** %14, align 8
  tail call void %15(%"class.mojo::MessageReceiverWithStatus"* nonnull %2) #7
  br label %16

16:                                               ; preds = %7, %9, %11
  %17 = phi i1 [ %8, %7 ], [ false, %9 ], [ false, %11 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo15MessageReceiverD2Ev(%"class.mojo::MessageReceiver"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare zeroext i1 @_ZN5blink5mojom5blink32IDBDatabaseCallbacksStubDispatch6AcceptEPNS1_20IDBDatabaseCallbacksEPN4mojo7MessageE(%"class.blink::mojom::blink::IDBDatabaseCallbacks"*, %"class.mojo::Message"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink5mojom5blink32IDBDatabaseCallbacksStubDispatch19AcceptWithResponderEPNS1_20IDBDatabaseCallbacksEPN4mojo7MessageENSt3__110unique_ptrINS5_25MessageReceiverWithStatusENS8_14default_deleteISA_EEEE(%"class.blink::mojom::blink::IDBDatabaseCallbacks"*, %"class.mojo::Message"*, %"class.mojo::MessageReceiverWithStatus"*) local_unnamed_addr #1

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo18AssociatedReceiverIN5blink5mojom5blink20IDBDatabaseCallbacksENS_19RawPtrImplRefTraitsIS4_EEE4BindENS_25PendingAssociatedReceiverIS4_EE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::AssociatedReceiver"*, %"class.mojo::PendingAssociatedReceiver"*, %"class.base::SequencedTaskRunner"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.mojo::ScopedInterfaceEndpointHandle", align 8
  %5 = getelementptr inbounds %"class.mojo::PendingAssociatedReceiver", %"class.mojo::PendingAssociatedReceiver"* %1, i64 0, i32 0
  %6 = tail call zeroext i1 @_ZNK4mojo29ScopedInterfaceEndpointHandle8is_validEv(%"class.mojo::ScopedInterfaceEndpointHandle"* %5) #7
  %7 = getelementptr inbounds %"class.mojo::AssociatedReceiver", %"class.mojo::AssociatedReceiver"* %0, i64 0, i32 0
  br i1 %6, label %8, label %13

8:                                                ; preds = %3
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %4, %"class.mojo::ScopedInterfaceEndpointHandle"* dereferenceable(8) %5) #7
  %9 = getelementptr inbounds %"class.mojo::AssociatedReceiver", %"class.mojo::AssociatedReceiver"* %0, i64 0, i32 1, i32 0
  %10 = call i8* @_Znwm(i64 8) #14
  %11 = bitcast i8* %10 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink5mojom5blink36IDBDatabaseCallbacksRequestValidatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = bitcast i8* %10 to %"class.mojo::MessageReceiver"*
  call void @_ZN4mojo8internal22AssociatedReceiverBase8BindImplENS_29ScopedInterfaceEndpointHandleEPNS_34MessageReceiverWithResponderStatusENSt3__110unique_ptrINS_15MessageReceiverENS5_14default_deleteIS7_EEEEb13scoped_refptrIN4base19SequencedTaskRunnerEEjPKc(%"class.mojo::internal::AssociatedReceiverBase"* %7, %"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %4, %"class.mojo::MessageReceiverWithResponderStatus"* %9, %"class.mojo::MessageReceiver"* nonnull %12, i1 zeroext false, %"class.base::SequencedTaskRunner"* %2, i32 0, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink5mojom5blink20IDBDatabaseCallbacks5Name_E, i64 0, i64 0)) #7
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %4) #7
  br label %23

13:                                               ; preds = %3
  tail call void @_ZN4mojo8internal22AssociatedReceiverBase5resetEv(%"class.mojo::internal::AssociatedReceiverBase"* %7) #7
  %14 = icmp eq %"class.base::SequencedTaskRunner"* %2, null
  br i1 %14, label %23, label %15

15:                                               ; preds = %13
  %16 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %2, i64 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.base::RefCountedThreadSafe.225", %"class.base::RefCountedThreadSafe.225"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw sub i32* %17, i32 1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %23

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.base::RefCountedThreadSafe.225", %"class.base::RefCountedThreadSafe.225"* %16, i64 -2
  %22 = bitcast %"class.base::RefCountedThreadSafe.225"* %21 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %22) #7
  br label %23

23:                                               ; preds = %8, %13, %15, %20
  ret void
}

declare void @_ZN4mojo8internal22AssociatedReceiverBase8BindImplENS_29ScopedInterfaceEndpointHandleEPNS_34MessageReceiverWithResponderStatusENSt3__110unique_ptrINS_15MessageReceiverENS5_14default_deleteIS7_EEEEb13scoped_refptrIN4base19SequencedTaskRunnerEEjPKc(%"class.mojo::internal::AssociatedReceiverBase"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::MessageReceiver"*, i1 zeroext, %"class.base::SequencedTaskRunner"*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #13

declare zeroext i1 @_ZNK4mojo29ScopedInterfaceEndpointHandle8is_validEv(%"class.mojo::ScopedInterfaceEndpointHandle"*) local_unnamed_addr #1

declare void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14IDBTransactionEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::IDBTransaction"*
  tail call void @_ZNK5blink14IDBTransaction5TraceEPNS_7VisitorE(%"class.blink::IDBTransaction"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

declare void @_ZNK5blink14IDBTransaction5TraceEPNS_7VisitorE(%"class.blink::IDBTransaction"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIlNS2_12KeyValuePairIlNS_6MemberINS_14IDBTransactionEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIlEENS2_18HashMapValueTraitsINS2_10HashTraitsIlEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIlNS2_12KeyValuePairIlNS_6MemberINS_14IDBTransactionEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIlEENS2_18HashMapValueTraitsINS2_10HashTraitsIlEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, i64 %23) #7
  br i1 %28, label %93, label %29

29:                                               ; preds = %2, %22
  %30 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.134"*
  %31 = getelementptr inbounds i8, i8* %1, i64 -2
  %32 = bitcast i8* %31 to i16*
  %33 = load i16, i16* %32, align 2
  %34 = lshr i16 %33, 2
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %36, label %44, !prof !4

36:                                               ; preds = %29
  %37 = getelementptr inbounds i8, i8* %1, i64 -8
  %38 = ptrtoint i8* %37 to i64
  %39 = and i64 %38, -131072
  %40 = inttoptr i64 %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 4144
  %42 = bitcast i8* %41 to i64*
  %43 = load i64, i64* %42, align 16
  br label %47

44:                                               ; preds = %29
  %45 = zext i16 %34 to i64
  %46 = shl nuw nsw i64 %45, 3
  br label %47

47:                                               ; preds = %44, %36
  %48 = phi i64 [ %43, %36 ], [ %46, %44 ]
  %49 = add i64 %48, -8
  %50 = lshr i64 %49, 4
  %51 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %52 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %51, align 8
  %53 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %52, i64 3
  %54 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %53, align 8
  %55 = tail call zeroext i1 %54(%"class.blink::Visitor"* %0) #7
  %56 = icmp eq i64 %50, 0
  br i1 %56, label %93, label %57

57:                                               ; preds = %47
  %58 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %59

59:                                               ; preds = %90, %57
  %60 = phi i64 [ 0, %57 ], [ %91, %90 ]
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.134", %"struct.WTF::KeyValuePair.134"* %30, i64 %60, i32 0
  br i1 %55, label %62, label %76

62:                                               ; preds = %59
  %63 = load atomic i64, i64* %61 monotonic, align 8
  %64 = add i64 %63, 1
  %65 = icmp ult i64 %64, 2
  br i1 %65, label %90, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.134", %"struct.WTF::KeyValuePair.134"* %30, i64 %60, i32 1
  %68 = bitcast %"class.blink::Member.33"* %67 to i64*
  %69 = load atomic i64, i64* %68 monotonic, align 8
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %90, label %71

71:                                               ; preds = %66
  %72 = inttoptr i64 %69 to i8*
  %73 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %58, align 8
  %74 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %73, i64 5
  %75 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %74, align 8
  tail call void %75(%"class.blink::Visitor"* %0, i8* nonnull %72, i8* nonnull %72, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14IDBTransactionEE5TraceEPNS_7VisitorEPKv) #7
  br label %90

76:                                               ; preds = %59
  %77 = load i64, i64* %61, align 8
  %78 = add i64 %77, 1
  %79 = icmp ult i64 %78, 2
  br i1 %79, label %90, label %80

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair.134", %"struct.WTF::KeyValuePair.134"* %30, i64 %60, i32 1
  %82 = bitcast %"class.blink::Member.33"* %81 to i64*
  %83 = load atomic i64, i64* %82 monotonic, align 8
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %90, label %85

85:                                               ; preds = %80
  %86 = inttoptr i64 %83 to i8*
  %87 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %58, align 8
  %88 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %87, i64 5
  %89 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %88, align 8
  tail call void %89(%"class.blink::Visitor"* %0, i8* nonnull %86, i8* nonnull %86, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14IDBTransactionEE5TraceEPNS_7VisitorEPKv) #7
  br label %90

90:                                               ; preds = %85, %80, %76, %71, %66, %62
  %91 = add nuw nsw i64 %60, 1
  %92 = icmp eq i64 %91, %50
  br i1 %92, label %93, label %59

93:                                               ; preds = %90, %47, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.134"*, i8 } @_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink6MemberINS2_14IDBTransactionEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EElRPS4_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.132"*, i64* dereferenceable(8), %"class.blink::IDBTransaction"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.132", %"class.WTF::HashTable.132"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.134"*, %"struct.WTF::KeyValuePair.134"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.134"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.134"* @_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink6MemberINS2_14IDBTransactionEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.132"* %0, %"struct.WTF::KeyValuePair.134"* null)
  %9 = load %"struct.WTF::KeyValuePair.134"*, %"struct.WTF::KeyValuePair.134"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.134"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.132", %"class.WTF::HashTable.132"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %1, align 8
  %17 = shl i64 %16, 32
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 22
  %21 = xor i64 %20, %19
  %22 = shl i64 %21, 13
  %23 = xor i64 %22, -1
  %24 = add i64 %21, %23
  %25 = lshr i64 %24, 8
  %26 = xor i64 %25, %24
  %27 = mul i64 %26, 9
  %28 = lshr i64 %27, 15
  %29 = xor i64 %28, %27
  %30 = shl i64 %29, 27
  %31 = xor i64 %30, -1
  %32 = add i64 %29, %31
  %33 = lshr i64 %32, 31
  %34 = xor i64 %33, %32
  %35 = trunc i64 %34 to i32
  %36 = and i32 %14, %35
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair.134", %"struct.WTF::KeyValuePair.134"* %11, i64 %37
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.134", %"struct.WTF::KeyValuePair.134"* %38, i64 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %85, label %42

42:                                               ; preds = %10
  %43 = xor i32 %35, -1
  %44 = lshr i32 %35, 23
  %45 = add i32 %44, %43
  %46 = shl i32 %45, 12
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 7
  %49 = xor i32 %48, %47
  %50 = shl i32 %49, 2
  %51 = xor i32 %50, %49
  %52 = lshr i32 %51, 20
  %53 = xor i32 %52, %51
  %54 = or i32 %53, 1
  %55 = zext i32 %54 to i64
  br label %56

56:                                               ; preds = %42, %63
  %57 = phi i64 [ %40, %42 ], [ %72, %63 ]
  %58 = phi %"struct.WTF::KeyValuePair.134"* [ %38, %42 ], [ %70, %63 ]
  %59 = phi %"struct.WTF::KeyValuePair.134"* [ null, %42 ], [ %65, %63 ]
  %60 = phi i64 [ %37, %42 ], [ %69, %63 ]
  %61 = phi i64 [ 0, %42 ], [ %67, %63 ]
  %62 = icmp eq i64 %57, %16
  br i1 %62, label %146, label %63

63:                                               ; preds = %56
  %64 = icmp eq i64 %57, -1
  %65 = select i1 %64, %"struct.WTF::KeyValuePair.134"* %58, %"struct.WTF::KeyValuePair.134"* %59
  %66 = icmp eq i64 %61, 0
  %67 = select i1 %66, i64 %55, i64 %61
  %68 = add i64 %67, %60
  %69 = and i64 %68, %15
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair.134", %"struct.WTF::KeyValuePair.134"* %11, i64 %69
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.134", %"struct.WTF::KeyValuePair.134"* %70, i64 0, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %74, label %56

74:                                               ; preds = %63
  %75 = icmp eq %"struct.WTF::KeyValuePair.134"* %65, null
  br i1 %75, label %85, label %76

76:                                               ; preds = %74
  %77 = bitcast %"struct.WTF::KeyValuePair.134"* %65 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %77, i64 16) #7
  %78 = getelementptr inbounds %"class.WTF::HashTable.132", %"class.WTF::HashTable.132"* %0, i64 0, i32 3
  %79 = load i32, i32* %78, align 8
  %80 = add i32 %79, 2147483647
  %81 = and i32 %80, 2147483647
  %82 = and i32 %79, -2147483648
  %83 = or i32 %81, %82
  store i32 %83, i32* %78, align 8
  %84 = load i64, i64* %1, align 8
  br label %85

85:                                               ; preds = %10, %74, %76
  %86 = phi i64 [ %84, %76 ], [ %16, %74 ], [ %16, %10 ]
  %87 = phi %"struct.WTF::KeyValuePair.134"* [ %65, %76 ], [ %70, %74 ], [ %38, %10 ]
  %88 = getelementptr inbounds %"struct.WTF::KeyValuePair.134", %"struct.WTF::KeyValuePair.134"* %87, i64 0, i32 0
  store i64 %86, i64* %88, align 8
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair.134", %"struct.WTF::KeyValuePair.134"* %87, i64 0, i32 1
  %90 = load %"class.blink::IDBTransaction"*, %"class.blink::IDBTransaction"** %2, align 8
  %91 = ptrtoint %"class.blink::IDBTransaction"* %90 to i64
  %92 = bitcast %"class.blink::Member.33"* %89 to i64*
  store atomic i64 %91, i64* %92 monotonic, align 8
  %93 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %98, label %95

95:                                               ; preds = %85
  %96 = bitcast %"class.blink::IDBTransaction"* %90 to i8*
  %97 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %96) #7
  br label %98

98:                                               ; preds = %85, %95
  %99 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %134, label %101

101:                                              ; preds = %98
  %102 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %103 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %102, i64 0, i32 1
  %104 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %103) #7
  %105 = icmp eq i8* %104, null
  br i1 %105, label %106, label %108, !prof !4

106:                                              ; preds = %101
  %107 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %103, i8* %107) #7
  br label %108

108:                                              ; preds = %106, %101
  %109 = phi i8* [ %107, %106 ], [ %104, %101 ]
  %110 = bitcast i8* %109 to %"class.blink::ThreadState"**
  %111 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %110, align 8
  %112 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %111, i64 0, i32 9
  %113 = load i8, i8* %112, align 1, !range !2
  %114 = icmp eq i8 %113, 0
  br i1 %114, label %134, label %115

115:                                              ; preds = %108
  %116 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %111, i64 0, i32 13
  %117 = load i64, i64* %116, align 8
  %118 = add i64 %117, 1
  store i64 %118, i64* %116, align 8
  %119 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %111, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %120 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %119, align 8
  %121 = load atomic i64, i64* %92 monotonic, align 8
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %131, label %123

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %120, i64 0, i32 0, i32 0
  %125 = inttoptr i64 %121 to i8*
  %126 = bitcast %"class.blink::MarkingVisitor"* %120 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %127 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %126, align 8
  %128 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %127, i64 5
  %129 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %128, align 8
  tail call void %129(%"class.blink::Visitor"* %124, i8* nonnull %125, i8* nonnull %125, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14IDBTransactionEE5TraceEPNS_7VisitorEPKv) #7
  %130 = load i64, i64* %116, align 8
  br label %131

131:                                              ; preds = %123, %115
  %132 = phi i64 [ %118, %115 ], [ %130, %123 ]
  %133 = add i64 %132, -1
  store i64 %133, i64* %116, align 8
  br label %134

134:                                              ; preds = %98, %108, %131
  %135 = getelementptr inbounds %"class.WTF::HashTable.132", %"class.WTF::HashTable.132"* %0, i64 0, i32 2
  %136 = load i32, i32* %135, align 4
  %137 = add i32 %136, 1
  store i32 %137, i32* %135, align 4
  %138 = getelementptr inbounds %"class.WTF::HashTable.132", %"class.WTF::HashTable.132"* %0, i64 0, i32 3
  %139 = load i32, i32* %138, align 8
  %140 = add i32 %139, %137
  %141 = shl i32 %140, 1
  %142 = load i32, i32* %12, align 8
  %143 = icmp ult i32 %141, %142
  br i1 %143, label %146, label %144

144:                                              ; preds = %134
  %145 = tail call %"struct.WTF::KeyValuePair.134"* @_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink6MemberINS2_14IDBTransactionEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.132"* %0, %"struct.WTF::KeyValuePair.134"* %87)
  br label %146

146:                                              ; preds = %56, %134, %144
  %147 = phi i8 [ 1, %134 ], [ 1, %144 ], [ 0, %56 ]
  %148 = phi %"struct.WTF::KeyValuePair.134"* [ %87, %134 ], [ %145, %144 ], [ %58, %56 ]
  %149 = insertvalue { %"struct.WTF::KeyValuePair.134"*, i8 } undef, %"struct.WTF::KeyValuePair.134"* %148, 0
  %150 = insertvalue { %"struct.WTF::KeyValuePair.134"*, i8 } %149, i8 %147, 1
  ret { %"struct.WTF::KeyValuePair.134"*, i8 } %150
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.134"* @_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink6MemberINS2_14IDBTransactionEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.132"*, %"struct.WTF::KeyValuePair.134"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.132", %"class.WTF::HashTable.132"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.132", %"class.WTF::HashTable.132"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #7
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #7
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i64 0, i64 0), i8* %23, i8* %24) #7
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.19, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #7
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #7
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #7
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #7
  store i8 -86, i8* %4, align 1
  %36 = call %"struct.WTF::KeyValuePair.134"* @_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink6MemberINS2_14IDBTransactionEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE12ExpandBufferEjPS6_Rb(%"class.WTF::HashTable.132"* %0, i32 %35, %"struct.WTF::KeyValuePair.134"* %1, i8* nonnull dereferenceable(1) %4) #7
  %37 = load i8, i8* %4, align 1, !range !2
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #7
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableIlNS2_12KeyValuePairIlNS_6MemberINS_14IDBTransactionEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIlEENS2_18HashMapValueTraitsINS2_10HashTraitsIlEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #7
  %43 = bitcast %"class.blink::HeapHashTableBacking"* %42 to %"struct.WTF::KeyValuePair.134"*
  %44 = call %"struct.WTF::KeyValuePair.134"* @_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink6MemberINS2_14IDBTransactionEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.132"* %0, %"struct.WTF::KeyValuePair.134"* %43, i32 %40, %"struct.WTF::KeyValuePair.134"* %1) #7
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"struct.WTF::KeyValuePair.134"* [ %44, %39 ], [ %36, %34 ]
  ret %"struct.WTF::KeyValuePair.134"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.134"* @_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink6MemberINS2_14IDBTransactionEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE12ExpandBufferEjPS6_Rb(%"class.WTF::HashTable.132"*, i32, %"struct.WTF::KeyValuePair.134"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #7
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !4

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #7
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.19, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.25, i64 0, i64 0)) #7
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #7
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.132", %"class.WTF::HashTable.132"* %0, i64 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair.134"*, %"struct.WTF::KeyValuePair.134"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair.134"* %32, null
  br i1 %33, label %82, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 4
  %37 = bitcast %"struct.WTF::KeyValuePair.134"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #7
  br i1 %38, label %39, label %82

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.132", %"class.WTF::HashTable.132"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"struct.WTF::KeyValuePair.134"*, %"struct.WTF::KeyValuePair.134"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableIlNS2_12KeyValuePairIlNS_6MemberINS_14IDBTransactionEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIlEENS2_18HashMapValueTraitsINS2_10HashTraitsIlEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #7
  %45 = bitcast %"class.blink::HeapHashTableBacking"* %44 to %"struct.WTF::KeyValuePair.134"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %47, label %58

47:                                               ; preds = %79, %39
  %48 = phi %"struct.WTF::KeyValuePair.134"* [ null, %39 ], [ %65, %79 ]
  %49 = bitcast %"class.WTF::HashTable.132"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %44, %"class.blink::HeapHashTableBacking"** %49, align 8
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %44, i64 0, i32 0
  %54 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #7
  br label %55

55:                                               ; preds = %47, %52
  %56 = bitcast %"struct.WTF::KeyValuePair.134"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 %36, i1 false)
  %57 = call %"struct.WTF::KeyValuePair.134"* @_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink6MemberINS2_14IDBTransactionEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.132"* %0, %"struct.WTF::KeyValuePair.134"* %42, i32 %1, %"struct.WTF::KeyValuePair.134"* %48)
  br label %82

58:                                               ; preds = %39, %79
  %59 = phi i64 [ %80, %79 ], [ 0, %39 ]
  %60 = phi %"struct.WTF::KeyValuePair.134"* [ %65, %79 ], [ null, %39 ]
  %61 = load %"struct.WTF::KeyValuePair.134"*, %"struct.WTF::KeyValuePair.134"** %31, align 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.134", %"struct.WTF::KeyValuePair.134"* %61, i64 %59
  %63 = icmp eq %"struct.WTF::KeyValuePair.134"* %62, %2
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.134", %"struct.WTF::KeyValuePair.134"* %45, i64 %59
  %65 = select i1 %63, %"struct.WTF::KeyValuePair.134"* %64, %"struct.WTF::KeyValuePair.134"* %60
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair.134", %"struct.WTF::KeyValuePair.134"* %62, i64 0, i32 0
  %67 = load i64, i64* %66, align 8
  %68 = add i64 %67, 1
  %69 = icmp ult i64 %68, 2
  br i1 %69, label %70, label %72

70:                                               ; preds = %58
  %71 = bitcast %"struct.WTF::KeyValuePair.134"* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 16, i1 false)
  br label %79

72:                                               ; preds = %58
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.134", %"struct.WTF::KeyValuePair.134"* %64, i64 0, i32 0
  store i64 %67, i64* %73, align 8
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.134", %"struct.WTF::KeyValuePair.134"* %45, i64 %59, i32 1
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.134", %"struct.WTF::KeyValuePair.134"* %61, i64 %59, i32 1
  %76 = bitcast %"class.blink::Member.33"* %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = bitcast %"class.blink::Member.33"* %74 to i64*
  store i64 %77, i64* %78, align 8
  br label %79

79:                                               ; preds = %70, %72
  %80 = add nuw nsw i64 %59, 1
  %81 = icmp eq i64 %80, %43
  br i1 %81, label %47, label %58

82:                                               ; preds = %34, %30, %55
  %83 = phi %"struct.WTF::KeyValuePair.134"* [ %57, %55 ], [ null, %30 ], [ null, %34 ]
  ret %"struct.WTF::KeyValuePair.134"* %83
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.134"* @_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink6MemberINS2_14IDBTransactionEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.132"*, %"struct.WTF::KeyValuePair.134"*, i32, %"struct.WTF::KeyValuePair.134"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.132", align 8
  %6 = bitcast %"class.WTF::HashTable.132"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #7
  %7 = getelementptr inbounds %"class.WTF::HashTable.132", %"class.WTF::HashTable.132"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.132", %"class.WTF::HashTable.132"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.132", %"class.WTF::HashTable.132"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.132", %"class.WTF::HashTable.132"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.132"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.134"* %1, %"struct.WTF::KeyValuePair.134"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.132", %"class.WTF::HashTable.132"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = ptrtoint %"struct.WTF::KeyValuePair.134"* %1 to i64
  %17 = bitcast %"struct.WTF::KeyValuePair.134"* %1 to i8*
  br label %25

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::HashTable.132", %"class.WTF::HashTable.132"* %0, i64 0, i32 0
  %20 = load %"struct.WTF::KeyValuePair.134"*, %"struct.WTF::KeyValuePair.134"** %19, align 8
  br label %57

21:                                               ; preds = %82
  %22 = bitcast %"class.WTF::HashTable.132"* %5 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = ptrtoint i8* %23 to i64
  br label %25

25:                                               ; preds = %15, %21
  %26 = phi i64 [ %16, %15 ], [ %24, %21 ]
  %27 = phi i32 [ 0, %15 ], [ %83, %21 ]
  %28 = phi i8* [ %17, %15 ], [ %23, %21 ]
  %29 = phi %"struct.WTF::KeyValuePair.134"* [ null, %15 ], [ %85, %21 ]
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %25
  %33 = bitcast %"class.WTF::HashTable.132"* %5 to i64*
  br label %38

34:                                               ; preds = %25
  call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %28) #7
  %35 = load i32, i32* %12, align 8
  %36 = bitcast %"class.WTF::HashTable.132"* %5 to i64*
  %37 = load i64, i64* %36, align 8
  br label %38

38:                                               ; preds = %32, %34
  %39 = phi i64* [ %33, %32 ], [ %36, %34 ]
  %40 = phi i64 [ %26, %32 ], [ %37, %34 ]
  %41 = phi i32 [ %27, %32 ], [ %35, %34 ]
  %42 = bitcast %"class.WTF::HashTable.132"* %0 to i64*
  %43 = load i64, i64* %42, align 8
  store atomic i64 %40, i64* %42 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %38
  %47 = inttoptr i64 %40 to i8*
  %48 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #7
  br label %49

49:                                               ; preds = %38, %46
  store i32 %2, i32* %12, align 8
  store i64 %43, i64* %39, align 8
  store i32 %41, i32* %8, align 8
  %50 = icmp eq i64 %43, 0
  br i1 %50, label %53, label %51

51:                                               ; preds = %49
  %52 = inttoptr i64 %43 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %52) #7
  store atomic i64 0, i64* %39 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %53

53:                                               ; preds = %49, %51
  %54 = getelementptr inbounds %"class.WTF::HashTable.132", %"class.WTF::HashTable.132"* %0, i64 0, i32 3
  %55 = load i32, i32* %54, align 8
  %56 = and i32 %55, -2147483648
  store i32 %56, i32* %54, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #7
  ret %"struct.WTF::KeyValuePair.134"* %29

57:                                               ; preds = %18, %82
  %58 = phi i32 [ %13, %18 ], [ %83, %82 ]
  %59 = phi %"struct.WTF::KeyValuePair.134"* [ %20, %18 ], [ %84, %82 ]
  %60 = phi %"struct.WTF::KeyValuePair.134"* [ null, %18 ], [ %85, %82 ]
  %61 = phi i32 [ 0, %18 ], [ %86, %82 ]
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.134", %"struct.WTF::KeyValuePair.134"* %59, i64 %62, i32 0
  %64 = load i64, i64* %63, align 8
  %65 = add i64 %64, 1
  %66 = icmp ult i64 %65, 2
  br i1 %66, label %82, label %67

67:                                               ; preds = %57
  %68 = call { %"struct.WTF::KeyValuePair.134"*, i8 } @_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink6MemberINS2_14IDBTransactionEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE16LookupForWritingERKl(%"class.WTF::HashTable.132"* nonnull %5, i64* dereferenceable(8) %63) #7
  %69 = extractvalue { %"struct.WTF::KeyValuePair.134"*, i8 } %68, 0
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair.134", %"struct.WTF::KeyValuePair.134"* %69, i64 0, i32 0
  %71 = load i64, i64* %63, align 8
  store i64 %71, i64* %70, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.134", %"struct.WTF::KeyValuePair.134"* %69, i64 0, i32 1
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.134", %"struct.WTF::KeyValuePair.134"* %59, i64 %62, i32 1
  %74 = bitcast %"class.blink::Member.33"* %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.blink::Member.33"* %72 to i64*
  store i64 %75, i64* %76, align 8
  %77 = load %"struct.WTF::KeyValuePair.134"*, %"struct.WTF::KeyValuePair.134"** %19, align 8
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.134", %"struct.WTF::KeyValuePair.134"* %77, i64 %62
  %79 = icmp eq %"struct.WTF::KeyValuePair.134"* %78, %3
  %80 = select i1 %79, %"struct.WTF::KeyValuePair.134"* %69, %"struct.WTF::KeyValuePair.134"* %60
  %81 = load i32, i32* %12, align 8
  br label %82

82:                                               ; preds = %57, %67
  %83 = phi i32 [ %58, %57 ], [ %81, %67 ]
  %84 = phi %"struct.WTF::KeyValuePair.134"* [ %59, %57 ], [ %77, %67 ]
  %85 = phi %"struct.WTF::KeyValuePair.134"* [ %60, %57 ], [ %80, %67 ]
  %86 = add i32 %61, 1
  %87 = icmp eq i32 %86, %83
  br i1 %87, label %21, label %57
}

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableIlNS2_12KeyValuePairIlNS_6MemberINS_14IDBTransactionEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIlEENS2_18HashMapValueTraitsINS2_10HashTraitsIlEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #7
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.31, i64 0, i64 0), i8* %11, i8* %12) #7
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.32, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #7
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #7
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableIlNS1_12KeyValuePairIlNS_6MemberINS_14IDBTransactionEEEEENS1_24KeyValuePairKeyExtractorENS1_7IntHashIlEENS1_18HashMapValueTraitsINS1_10HashTraitsIlEENSC_IS6_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableIlNS1_12KeyValuePairIlNS_6MemberINS_14IDBTransactionEEEEENS1_24KeyValuePairKeyExtractorENS1_7IntHashIlEENS1_18HashMapValueTraitsINS1_10HashTraitsIlEENSC_IS6_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #7
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !4

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #7
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIlNS2_12KeyValuePairIlNS_6MemberINS_14IDBTransactionEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIlEENS2_18HashMapValueTraitsINS2_10HashTraitsIlEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIlNS2_12KeyValuePairIlNS_6MemberINS_14IDBTransactionEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIlEENS2_18HashMapValueTraitsINS2_10HashTraitsIlEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableIlNS2_12KeyValuePairIlNS_6MemberINS_14IDBTransactionEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIlEENS2_18HashMapValueTraitsINS2_10HashTraitsIlEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #7
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([363 x i8], [363 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableIlNS_12KeyValuePairIlNS1_6MemberINS1_14IDBTransactionEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSD_IS7_EEEESE_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableIlNS2_12KeyValuePairIlNS_6MemberINS_14IDBTransactionEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIlEENS2_18HashMapValueTraitsINS2_10HashTraitsIlEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.30, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.134"*, i8 } @_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink6MemberINS2_14IDBTransactionEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE16LookupForWritingERKl(%"class.WTF::HashTable.132"*, i64* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.132", %"class.WTF::HashTable.132"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.134"*, %"struct.WTF::KeyValuePair.134"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.132", %"class.WTF::HashTable.132"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = load i64, i64* %1, align 8
  %10 = shl i64 %9, 32
  %11 = xor i64 %10, -1
  %12 = add i64 %9, %11
  %13 = lshr i64 %12, 22
  %14 = xor i64 %13, %12
  %15 = shl i64 %14, 13
  %16 = xor i64 %15, -1
  %17 = add i64 %14, %16
  %18 = lshr i64 %17, 8
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, 9
  %21 = lshr i64 %20, 15
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 27
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 31
  %27 = xor i64 %26, %25
  %28 = trunc i64 %27 to i32
  %29 = and i32 %7, %28
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair.134", %"struct.WTF::KeyValuePair.134"* %4, i64 %30
  %32 = ptrtoint %"struct.WTF::KeyValuePair.134"* %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.134", %"struct.WTF::KeyValuePair.134"* %31, i64 0, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %53, label %36

36:                                               ; preds = %2
  %37 = xor i32 %28, -1
  %38 = lshr i32 %28, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %59

50:                                               ; preds = %66
  %51 = ptrtoint %"struct.WTF::KeyValuePair.134"* %73 to i64
  %52 = inttoptr i64 %68 to %"struct.WTF::KeyValuePair.134"*
  br label %53

53:                                               ; preds = %50, %2
  %54 = phi i64 [ %51, %50 ], [ %32, %2 ]
  %55 = phi %"struct.WTF::KeyValuePair.134"* [ %52, %50 ], [ null, %2 ]
  %56 = icmp eq %"struct.WTF::KeyValuePair.134"* %55, null
  %57 = ptrtoint %"struct.WTF::KeyValuePair.134"* %55 to i64
  %58 = select i1 %56, i64 %54, i64 %57
  br label %78

59:                                               ; preds = %66, %36
  %60 = phi i64 [ 0, %36 ], [ %68, %66 ]
  %61 = phi i64 [ %34, %36 ], [ %76, %66 ]
  %62 = phi i64 [ %32, %36 ], [ %74, %66 ]
  %63 = phi i64 [ %30, %36 ], [ %72, %66 ]
  %64 = phi i64 [ 0, %36 ], [ %70, %66 ]
  %65 = icmp eq i64 %61, %9
  br i1 %65, label %78, label %66

66:                                               ; preds = %59
  %67 = icmp eq i64 %61, -1
  %68 = select i1 %67, i64 %62, i64 %60
  %69 = icmp eq i64 %64, 0
  %70 = select i1 %69, i64 %49, i64 %64
  %71 = add i64 %70, %63
  %72 = and i64 %71, %8
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.134", %"struct.WTF::KeyValuePair.134"* %4, i64 %72
  %74 = ptrtoint %"struct.WTF::KeyValuePair.134"* %73 to i64
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.134", %"struct.WTF::KeyValuePair.134"* %73, i64 0, i32 0
  %76 = load i64, i64* %75, align 8
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %50, label %59

78:                                               ; preds = %59, %53
  %79 = phi i64 [ %58, %53 ], [ %62, %59 ]
  %80 = phi i8 [ 0, %53 ], [ 1, %59 ]
  %81 = inttoptr i64 %79 to %"struct.WTF::KeyValuePair.134"*
  %82 = insertvalue { %"struct.WTF::KeyValuePair.134"*, i8 } undef, %"struct.WTF::KeyValuePair.134"* %81, 0
  %83 = insertvalue { %"struct.WTF::KeyValuePair.134"*, i8 } %82, i8 %80, 1
  ret { %"struct.WTF::KeyValuePair.134"*, i8 } %83
}

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #1

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #1

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink6MemberINS2_14IDBTransactionEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE5eraseEPKS6_(%"class.WTF::HashTable.132"*, %"struct.WTF::KeyValuePair.134"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.134", %"struct.WTF::KeyValuePair.134"* %1, i64 0, i32 0
  store i64 -1, i64* %3, align 8
  %4 = getelementptr inbounds %"struct.WTF::KeyValuePair.134", %"struct.WTF::KeyValuePair.134"* %1, i64 0, i32 1
  %5 = bitcast %"class.blink::Member.33"* %4 to i64*
  store atomic i64 0, i64* %5 monotonic, align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.132", %"class.WTF::HashTable.132"* %0, i64 0, i32 3
  %7 = load i32, i32* %6, align 8
  %8 = add i32 %7, 1
  %9 = and i32 %8, 2147483647
  %10 = and i32 %7, -2147483648
  %11 = or i32 %9, %10
  store i32 %11, i32* %6, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.132", %"class.WTF::HashTable.132"* %0, i64 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = add i32 %13, -1
  store i32 %14, i32* %12, align 4
  %15 = mul i32 %14, 6
  %16 = getelementptr inbounds %"class.WTF::HashTable.132", %"class.WTF::HashTable.132"* %0, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = icmp ult i32 %15, %17
  %19 = icmp ugt i32 %17, 8
  %20 = and i1 %18, %19
  br i1 %20, label %21, label %50

21:                                               ; preds = %2
  %22 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %23 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %22, i64 0, i32 1
  %24 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %23) #7
  %25 = icmp eq i8* %24, null
  br i1 %25, label %26, label %28, !prof !4

26:                                               ; preds = %21
  %27 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %23, i8* %27) #7
  br label %28

28:                                               ; preds = %26, %21
  %29 = phi i8* [ %27, %26 ], [ %24, %21 ]
  %30 = bitcast i8* %29 to %"class.blink::ThreadState"**
  %31 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %31, i64 0, i32 6
  %33 = load i8, i8* %32, align 8, !range !2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %31, i64 0, i32 16
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %50, label %39

39:                                               ; preds = %28, %35
  %40 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %31, i64 0, i32 13
  %41 = load i64, i64* %40, align 8
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %50

43:                                               ; preds = %39
  %44 = load i32, i32* %16, align 8
  %45 = lshr i32 %44, 1
  %46 = zext i32 %45 to i64
  %47 = tail call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableIlNS2_12KeyValuePairIlNS_6MemberINS_14IDBTransactionEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIlEENS2_18HashMapValueTraitsINS2_10HashTraitsIlEENSD_IS7_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %46) #7
  %48 = bitcast %"class.blink::HeapHashTableBacking"* %47 to %"struct.WTF::KeyValuePair.134"*
  %49 = tail call %"struct.WTF::KeyValuePair.134"* @_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink6MemberINS2_14IDBTransactionEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.132"* %0, %"struct.WTF::KeyValuePair.134"* %48, i32 %45, %"struct.WTF::KeyValuePair.134"* null) #7
  br label %50

50:                                               ; preds = %35, %2, %43, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.134"*, %"struct.WTF::KeyValuePair.134"* } @_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink6MemberINS2_14IDBTransactionEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS2_13HeapAllocatorEE4findERKl(%"class.WTF::HashTable.132"*, i64* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.132", %"class.WTF::HashTable.132"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.134"*, %"struct.WTF::KeyValuePair.134"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.134"* %4, null
  %6 = getelementptr inbounds %"class.WTF::HashTable.132", %"class.WTF::HashTable.132"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  br i1 %5, label %68, label %8

8:                                                ; preds = %2
  %9 = add i32 %7, -1
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %1, align 8
  %12 = shl i64 %11, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %11, %13
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %9, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.134", %"struct.WTF::KeyValuePair.134"* %4, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.134", %"struct.WTF::KeyValuePair.134"* %33, i64 0, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = icmp eq i64 %35, %11
  br i1 %36, label %65, label %37

37:                                               ; preds = %8
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %56, %37
  %52 = phi i64 [ %35, %37 ], [ %63, %56 ]
  %53 = phi i64 [ %32, %37 ], [ %60, %56 ]
  %54 = phi i64 [ 0, %37 ], [ %58, %56 ]
  %55 = icmp eq i64 %52, 0
  br i1 %55, label %68, label %56

56:                                               ; preds = %51
  %57 = icmp eq i64 %54, 0
  %58 = select i1 %57, i64 %50, i64 %54
  %59 = add i64 %58, %53
  %60 = and i64 %59, %10
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.134", %"struct.WTF::KeyValuePair.134"* %4, i64 %60
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.134", %"struct.WTF::KeyValuePair.134"* %61, i64 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = icmp eq i64 %63, %11
  br i1 %64, label %65, label %51

65:                                               ; preds = %56, %8
  %66 = phi %"struct.WTF::KeyValuePair.134"* [ %33, %8 ], [ %61, %56 ]
  %67 = icmp eq %"struct.WTF::KeyValuePair.134"* %66, null
  br i1 %67, label %68, label %71

68:                                               ; preds = %51, %65, %2
  %69 = zext i32 %7 to i64
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair.134", %"struct.WTF::KeyValuePair.134"* %4, i64 %69
  br label %74

71:                                               ; preds = %65
  %72 = zext i32 %7 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.134", %"struct.WTF::KeyValuePair.134"* %4, i64 %72
  br label %74

74:                                               ; preds = %68, %71
  %75 = phi %"struct.WTF::KeyValuePair.134"* [ %66, %71 ], [ %70, %68 ]
  %76 = phi %"struct.WTF::KeyValuePair.134"* [ %73, %71 ], [ %70, %68 ]
  %77 = insertvalue { %"struct.WTF::KeyValuePair.134"*, %"struct.WTF::KeyValuePair.134"* } undef, %"struct.WTF::KeyValuePair.134"* %75, 0
  %78 = insertvalue { %"struct.WTF::KeyValuePair.134"*, %"struct.WTF::KeyValuePair.134"* } %77, %"struct.WTF::KeyValuePair.134"* %76, 1
  ret { %"struct.WTF::KeyValuePair.134"*, %"struct.WTF::KeyValuePair.134"* } %78
}

declare void @_ZN5blink21IDBVersionChangeEventC1ERKN3WTF12AtomicStringEmRKN4absl8optionalImEENS_5mojom11IDBDataLossERKNS1_6StringE(%"class.blink::IDBVersionChangeEvent"*, %"class.WTF::AtomicString"* dereferenceable(8), i64, %"class.absl::optional.418"* dereferenceable(16), i32, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN5blink12DOMExceptionC1ENS_16DOMExceptionCodeERKN3WTF6StringES5_(%"class.blink::DOMException"*, i32, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13DOMStringListD2Ev(%"class.blink::DOMStringList"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMStringList", %"class.blink::DOMStringList"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink13DOMStringListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::DOMStringList", %"class.blink::DOMStringList"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  %6 = icmp eq %"class.WTF::String"* %5, null
  br i1 %6, label %41, label %7, !prof !3

7:                                                ; preds = %1
  %8 = bitcast %"class.WTF::String"* %5 to i8*
  %9 = getelementptr inbounds %"class.blink::DOMStringList", %"class.blink::DOMStringList"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %39, label %12, !prof !4

12:                                               ; preds = %7
  %13 = zext i32 %10 to i64
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 %13
  br label %15

15:                                               ; preds = %33, %12
  %16 = phi %"class.WTF::String"* [ %34, %33 ], [ %5, %12 ]
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #7
  br label %33

33:                                               ; preds = %32, %29, %15
  %34 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 1
  %35 = icmp eq %"class.WTF::String"* %34, %14
  br i1 %35, label %36, label %15

36:                                               ; preds = %33
  store i32 0, i32* %9, align 4
  %37 = bitcast %"class.WTF::Vector.17"* %3 to i8**
  %38 = load i8*, i8** %37, align 8
  br label %39

39:                                               ; preds = %36, %7
  %40 = phi i8* [ %38, %36 ], [ %8, %7 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %40) #7
  store %"class.WTF::String"* null, %"class.WTF::String"** %4, align 8
  br label %41

41:                                               ; preds = %1, %39
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13DOMStringListD0Ev(%"class.blink::DOMStringList"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMStringList", %"class.blink::DOMStringList"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink13DOMStringListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::DOMStringList", %"class.blink::DOMStringList"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  %6 = icmp eq %"class.WTF::String"* %5, null
  br i1 %6, label %41, label %7, !prof !3

7:                                                ; preds = %1
  %8 = bitcast %"class.WTF::String"* %5 to i8*
  %9 = getelementptr inbounds %"class.blink::DOMStringList", %"class.blink::DOMStringList"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %39, label %12, !prof !4

12:                                               ; preds = %7
  %13 = zext i32 %10 to i64
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 %13
  br label %15

15:                                               ; preds = %33, %12
  %16 = phi %"class.WTF::String"* [ %34, %33 ], [ %5, %12 ]
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #7
  br label %33

33:                                               ; preds = %32, %29, %15
  %34 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 1
  %35 = icmp eq %"class.WTF::String"* %34, %14
  br i1 %35, label %36, label %15

36:                                               ; preds = %33
  store i32 0, i32* %9, align 4
  %37 = bitcast %"class.WTF::Vector.17"* %3 to i8**
  %38 = load i8*, i8** %37, align 8
  br label %39

39:                                               ; preds = %36, %7
  %40 = phi i8* [ %38, %36 ], [ %8, %7 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %40) #7
  store %"class.WTF::String"* null, %"class.WTF::String"** %4, align 8
  br label %41

41:                                               ; preds = %1, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable17HasEventListenersEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink13DOMStringList18GetWrapperTypeInfoEv(%"class.blink::DOMStringList"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink13DOMStringList18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZNK3WTF9HashTableIlNS_12KeyValuePairIl13scoped_refptrIN5blink22IDBObjectStoreMetadataEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE4findERKl(%"class.WTF::HashTable.13"*, i64* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.13", %"class.WTF::HashTable.13"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  %6 = getelementptr inbounds %"class.WTF::HashTable.13", %"class.WTF::HashTable.13"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  br i1 %5, label %68, label %8

8:                                                ; preds = %2
  %9 = add i32 %7, -1
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %1, align 8
  %12 = shl i64 %11, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %11, %13
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %9, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %33, i64 0, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = icmp eq i64 %35, %11
  br i1 %36, label %65, label %37

37:                                               ; preds = %8
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %56, %37
  %52 = phi i64 [ %35, %37 ], [ %63, %56 ]
  %53 = phi i64 [ %32, %37 ], [ %60, %56 ]
  %54 = phi i64 [ 0, %37 ], [ %58, %56 ]
  %55 = icmp eq i64 %52, 0
  br i1 %55, label %68, label %56

56:                                               ; preds = %51
  %57 = icmp eq i64 %54, 0
  %58 = select i1 %57, i64 %50, i64 %54
  %59 = add i64 %58, %53
  %60 = and i64 %59, %10
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %60
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %61, i64 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = icmp eq i64 %63, %11
  br i1 %64, label %65, label %51

65:                                               ; preds = %56, %8
  %66 = phi %"struct.WTF::KeyValuePair"* [ %33, %8 ], [ %61, %56 ]
  %67 = icmp eq %"struct.WTF::KeyValuePair"* %66, null
  br i1 %67, label %68, label %71

68:                                               ; preds = %51, %65, %2
  %69 = zext i32 %7 to i64
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %69
  br label %74

71:                                               ; preds = %65
  %72 = zext i32 %7 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %72
  br label %74

74:                                               ; preds = %68, %71
  %75 = phi %"struct.WTF::KeyValuePair"* [ %66, %71 ], [ %70, %68 ]
  %76 = phi %"struct.WTF::KeyValuePair"* [ %73, %71 ], [ %70, %68 ]
  %77 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %75, 0
  %78 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %77, %"struct.WTF::KeyValuePair"* %76, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %78
}

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22IDBObjectStoreMetadataD2Ev(%"class.blink::IDBObjectStoreMetadata"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %0, i64 0, i32 6, i32 0, i32 0
  %3 = load %"struct.WTF::KeyValuePair.26"*, %"struct.WTF::KeyValuePair.26"** %2, align 8
  %4 = icmp eq %"struct.WTF::KeyValuePair.26"* %3, null
  br i1 %4, label %32, label %5, !prof !3

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %0, i64 0, i32 6, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %30, label %9

9:                                                ; preds = %5
  %10 = zext i32 %7 to i64
  br label %11

11:                                               ; preds = %27, %9
  %12 = phi i64 [ 0, %9 ], [ %28, %27 ]
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair.26", %"struct.WTF::KeyValuePair.26"* %3, i64 %12, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, -1
  br i1 %15, label %27, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair.26", %"struct.WTF::KeyValuePair.26"* %3, i64 %12, i32 1, i32 0
  %18 = load %"class.blink::IDBIndexMetadata"*, %"class.blink::IDBIndexMetadata"** %17, align 8
  %19 = icmp eq %"class.blink::IDBIndexMetadata"* %18, null
  br i1 %19, label %27, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::IDBIndexMetadata", %"class.blink::IDBIndexMetadata"* %18, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %21) #7
  %22 = getelementptr inbounds %"class.blink::IDBIndexMetadata", %"class.blink::IDBIndexMetadata"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %20
  tail call void @_ZN5blink16IDBIndexMetadataD2Ev(%"class.blink::IDBIndexMetadata"* nonnull %18) #7
  %26 = bitcast %"class.blink::IDBIndexMetadata"* %18 to i8*
  tail call void @free(i8* %26) #7
  br label %27

27:                                               ; preds = %25, %20, %16, %11
  %28 = add nuw nsw i64 %12, 1
  %29 = icmp eq i64 %28, %10
  br i1 %29, label %30, label %11

30:                                               ; preds = %27, %5
  %31 = bitcast %"struct.WTF::KeyValuePair.26"* %3 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %31) #7
  store %"struct.WTF::KeyValuePair.26"* null, %"struct.WTF::KeyValuePair.26"** %2, align 8
  br label %32

32:                                               ; preds = %1, %30
  %33 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %0, i64 0, i32 3, i32 2
  %34 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::String"*, %"class.WTF::String"** %34, align 8
  %36 = icmp eq %"class.WTF::String"* %35, null
  br i1 %36, label %71, label %37, !prof !3

37:                                               ; preds = %32
  %38 = bitcast %"class.WTF::String"* %35 to i8*
  %39 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %0, i64 0, i32 3, i32 2, i32 0, i32 0, i32 2
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %69, label %42, !prof !4

42:                                               ; preds = %37
  %43 = zext i32 %40 to i64
  %44 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 %43
  br label %45

45:                                               ; preds = %63, %42
  %46 = phi %"class.WTF::String"* [ %64, %63 ], [ %35, %42 ]
  %47 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %46, i64 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %50
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %50
  %60 = phi i32 [ %58, %57 ], [ %56, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #7
  br label %63

63:                                               ; preds = %62, %59, %45
  %64 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %46, i64 1
  %65 = icmp eq %"class.WTF::String"* %64, %44
  br i1 %65, label %66, label %45

66:                                               ; preds = %63
  store i32 0, i32* %39, align 4
  %67 = bitcast %"class.WTF::Vector.17"* %33 to i8**
  %68 = load i8*, i8** %67, align 8
  br label %69

69:                                               ; preds = %66, %37
  %70 = phi i8* [ %68, %66 ], [ %38, %37 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %70) #7
  store %"class.WTF::String"* null, %"class.WTF::String"** %34, align 8
  br label %71

71:                                               ; preds = %69, %32
  %72 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %0, i64 0, i32 3, i32 1, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #7
  br label %88

88:                                               ; preds = %71, %84, %87
  %89 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %0, i64 0, i32 1, i32 0, i32 0
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %91 = icmp eq %"class.WTF::StringImpl"* %90, null
  br i1 %91, label %105, label %92

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load atomic i32, i32* %93 monotonic, align 4
  %95 = and i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 0
  %98 = load i32, i32* %97, align 4
  br i1 %96, label %99, label %101

99:                                               ; preds = %92
  %100 = add i32 %98, -1
  store i32 %100, i32* %97, align 4
  br label %101

101:                                              ; preds = %99, %92
  %102 = phi i32 [ %100, %99 ], [ %98, %92 ]
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %105

104:                                              ; preds = %101
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %90) #7
  br label %105

105:                                              ; preds = %88, %101, %104
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16IDBIndexMetadataD2Ev(%"class.blink::IDBIndexMetadata"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::IDBIndexMetadata", %"class.blink::IDBIndexMetadata"* %0, i64 0, i32 4, i32 2
  %3 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %5 = icmp eq %"class.WTF::String"* %4, null
  br i1 %5, label %40, label %6, !prof !3

6:                                                ; preds = %1
  %7 = bitcast %"class.WTF::String"* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::IDBIndexMetadata", %"class.blink::IDBIndexMetadata"* %0, i64 0, i32 4, i32 2, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %38, label %11, !prof !4

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 %12
  br label %14

14:                                               ; preds = %32, %11
  %15 = phi %"class.WTF::String"* [ %33, %32 ], [ %4, %11 ]
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #7
  br label %32

32:                                               ; preds = %31, %28, %14
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 1
  %34 = icmp eq %"class.WTF::String"* %33, %13
  br i1 %34, label %35, label %14

35:                                               ; preds = %32
  store i32 0, i32* %8, align 4
  %36 = bitcast %"class.WTF::Vector.17"* %2 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %35, %6
  %39 = phi i8* [ %37, %35 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #7
  store %"class.WTF::String"* null, %"class.WTF::String"** %3, align 8
  br label %40

40:                                               ; preds = %38, %1
  %41 = getelementptr inbounds %"class.blink::IDBIndexMetadata", %"class.blink::IDBIndexMetadata"* %0, i64 0, i32 4, i32 1, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  br i1 %48, label %51, label %53

51:                                               ; preds = %44
  %52 = add i32 %50, -1
  store i32 %52, i32* %49, align 4
  br label %53

53:                                               ; preds = %51, %44
  %54 = phi i32 [ %52, %51 ], [ %50, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #7
  br label %57

57:                                               ; preds = %40, %53, %56
  %58 = getelementptr inbounds %"class.blink::IDBIndexMetadata", %"class.blink::IDBIndexMetadata"* %0, i64 0, i32 2, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %74, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  br i1 %65, label %68, label %70

68:                                               ; preds = %61
  %69 = add i32 %67, -1
  store i32 %69, i32* %66, align 4
  br label %70

70:                                               ; preds = %68, %61
  %71 = phi i32 [ %69, %68 ], [ %67, %61 ]
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %70
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %59) #7
  br label %74

74:                                               ; preds = %57, %70, %73
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

declare void @_ZN5blink14IDBObjectStoreC1E13scoped_refptrINS_22IDBObjectStoreMetadataEEPNS_14IDBTransactionE(%"class.blink::IDBObjectStore"*, %"class.blink::IDBObjectStoreMetadata"*, %"class.blink::IDBTransaction"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIlNS_12KeyValuePairIl13scoped_refptrIN5blink22IDBObjectStoreMetadataEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERlS5_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.13"*, i64* dereferenceable(8), %class.scoped_refptr.16* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.13", %"class.WTF::HashTable.13"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIlNS_12KeyValuePairIl13scoped_refptrIN5blink22IDBObjectStoreMetadataEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.13"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.13", %"class.WTF::HashTable.13"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %1, align 8
  %17 = shl i64 %16, 32
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 22
  %21 = xor i64 %20, %19
  %22 = shl i64 %21, 13
  %23 = xor i64 %22, -1
  %24 = add i64 %21, %23
  %25 = lshr i64 %24, 8
  %26 = xor i64 %25, %24
  %27 = mul i64 %26, 9
  %28 = lshr i64 %27, 15
  %29 = xor i64 %28, %27
  %30 = shl i64 %29, 27
  %31 = xor i64 %30, -1
  %32 = add i64 %29, %31
  %33 = lshr i64 %32, 31
  %34 = xor i64 %33, %32
  %35 = trunc i64 %34 to i32
  %36 = and i32 %14, %35
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %37
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %38, i64 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %85, label %42

42:                                               ; preds = %10
  %43 = xor i32 %35, -1
  %44 = lshr i32 %35, 23
  %45 = add i32 %44, %43
  %46 = shl i32 %45, 12
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 7
  %49 = xor i32 %48, %47
  %50 = shl i32 %49, 2
  %51 = xor i32 %50, %49
  %52 = lshr i32 %51, 20
  %53 = xor i32 %52, %51
  %54 = or i32 %53, 1
  %55 = zext i32 %54 to i64
  br label %56

56:                                               ; preds = %42, %63
  %57 = phi i64 [ %40, %42 ], [ %72, %63 ]
  %58 = phi %"struct.WTF::KeyValuePair"* [ %38, %42 ], [ %70, %63 ]
  %59 = phi %"struct.WTF::KeyValuePair"* [ null, %42 ], [ %65, %63 ]
  %60 = phi i64 [ %37, %42 ], [ %69, %63 ]
  %61 = phi i64 [ 0, %42 ], [ %67, %63 ]
  %62 = icmp eq i64 %57, %16
  br i1 %62, label %116, label %63

63:                                               ; preds = %56
  %64 = icmp eq i64 %57, -1
  %65 = select i1 %64, %"struct.WTF::KeyValuePair"* %58, %"struct.WTF::KeyValuePair"* %59
  %66 = icmp eq i64 %61, 0
  %67 = select i1 %66, i64 %55, i64 %61
  %68 = add i64 %67, %60
  %69 = and i64 %68, %15
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %69
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %70, i64 0, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %74, label %56

74:                                               ; preds = %63
  %75 = icmp eq %"struct.WTF::KeyValuePair"* %65, null
  br i1 %75, label %85, label %76

76:                                               ; preds = %74
  %77 = bitcast %"struct.WTF::KeyValuePair"* %65 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %77, i8 0, i64 16, i1 false) #7
  %78 = getelementptr inbounds %"class.WTF::HashTable.13", %"class.WTF::HashTable.13"* %0, i64 0, i32 3
  %79 = load i32, i32* %78, align 8
  %80 = add i32 %79, 2147483647
  %81 = and i32 %80, 2147483647
  %82 = and i32 %79, -2147483648
  %83 = or i32 %81, %82
  store i32 %83, i32* %78, align 8
  %84 = load i64, i64* %1, align 8
  br label %85

85:                                               ; preds = %10, %74, %76
  %86 = phi i64 [ %84, %76 ], [ %16, %74 ], [ %16, %10 ]
  %87 = phi %"struct.WTF::KeyValuePair"* [ %65, %76 ], [ %70, %74 ], [ %38, %10 ]
  %88 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %87, i64 0, i32 0
  store i64 %86, i64* %88, align 8
  %89 = getelementptr inbounds %class.scoped_refptr.16, %class.scoped_refptr.16* %2, i64 0, i32 0
  %90 = bitcast %class.scoped_refptr.16* %2 to i64*
  %91 = load i64, i64* %90, align 8
  store %"class.blink::IDBObjectStoreMetadata"* null, %"class.blink::IDBObjectStoreMetadata"** %89, align 8
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %87, i64 0, i32 1
  %93 = bitcast %class.scoped_refptr.16* %92 to i64*
  %94 = getelementptr inbounds %class.scoped_refptr.16, %class.scoped_refptr.16* %92, i64 0, i32 0
  %95 = load %"class.blink::IDBObjectStoreMetadata"*, %"class.blink::IDBObjectStoreMetadata"** %94, align 8
  store i64 %91, i64* %93, align 8
  %96 = icmp eq %"class.blink::IDBObjectStoreMetadata"* %95, null
  br i1 %96, label %104, label %97

97:                                               ; preds = %85
  %98 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %95, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %98) #7
  %99 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %95, i64 0, i32 0, i32 0, i32 0, i32 0
  %100 = load i32, i32* %99, align 4
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %104

102:                                              ; preds = %97
  tail call void @_ZN5blink22IDBObjectStoreMetadataD2Ev(%"class.blink::IDBObjectStoreMetadata"* nonnull %95) #7
  %103 = bitcast %"class.blink::IDBObjectStoreMetadata"* %95 to i8*
  tail call void @free(i8* %103) #7
  br label %104

104:                                              ; preds = %85, %97, %102
  %105 = getelementptr inbounds %"class.WTF::HashTable.13", %"class.WTF::HashTable.13"* %0, i64 0, i32 2
  %106 = load i32, i32* %105, align 4
  %107 = add i32 %106, 1
  store i32 %107, i32* %105, align 4
  %108 = getelementptr inbounds %"class.WTF::HashTable.13", %"class.WTF::HashTable.13"* %0, i64 0, i32 3
  %109 = load i32, i32* %108, align 8
  %110 = add i32 %109, %107
  %111 = shl i32 %110, 1
  %112 = load i32, i32* %12, align 8
  %113 = icmp ult i32 %111, %112
  br i1 %113, label %116, label %114

114:                                              ; preds = %104
  %115 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIlNS_12KeyValuePairIl13scoped_refptrIN5blink22IDBObjectStoreMetadataEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.13"* %0, %"struct.WTF::KeyValuePair"* %87)
  br label %116

116:                                              ; preds = %56, %104, %114
  %117 = phi i8 [ 1, %104 ], [ 1, %114 ], [ 0, %56 ]
  %118 = phi %"struct.WTF::KeyValuePair"* [ %87, %104 ], [ %115, %114 ], [ %58, %56 ]
  %119 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %118, 0
  %120 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %119, i8 %117, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %120
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIlNS_12KeyValuePairIl13scoped_refptrIN5blink22IDBObjectStoreMetadataEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE5eraseEPKS6_(%"class.WTF::HashTable.13"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1, i32 0
  %4 = load %"class.blink::IDBObjectStoreMetadata"*, %"class.blink::IDBObjectStoreMetadata"** %3, align 8
  %5 = icmp eq %"class.blink::IDBObjectStoreMetadata"* %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %4, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %7) #7
  %8 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %6
  tail call void @_ZN5blink22IDBObjectStoreMetadataD2Ev(%"class.blink::IDBObjectStoreMetadata"* nonnull %4) #7
  %12 = bitcast %"class.blink::IDBObjectStoreMetadata"* %4 to i8*
  tail call void @free(i8* %12) #7
  br label %13

13:                                               ; preds = %2, %6, %11
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0
  store i64 -1, i64* %14, align 8
  %15 = getelementptr inbounds %"class.WTF::HashTable.13", %"class.WTF::HashTable.13"* %0, i64 0, i32 3
  %16 = load i32, i32* %15, align 8
  %17 = add i32 %16, 1
  %18 = and i32 %17, 2147483647
  %19 = and i32 %16, -2147483648
  %20 = or i32 %18, %19
  store i32 %20, i32* %15, align 8
  %21 = getelementptr inbounds %"class.WTF::HashTable.13", %"class.WTF::HashTable.13"* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = add i32 %22, -1
  store i32 %23, i32* %21, align 4
  %24 = mul i32 %23, 6
  %25 = getelementptr inbounds %"class.WTF::HashTable.13", %"class.WTF::HashTable.13"* %0, i64 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp ult i32 %24, %26
  %28 = icmp ugt i32 %26, 8
  %29 = and i1 %27, %28
  br i1 %29, label %30, label %37

30:                                               ; preds = %13
  %31 = lshr i32 %26, 1
  %32 = zext i32 %31 to i64
  %33 = shl nuw nsw i64 %32, 4
  %34 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %33, i8* getelementptr inbounds ([118 x i8], [118 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIl13scoped_refptrIN5blink22IDBObjectStoreMetadataEEEEEEPKcv, i64 0, i64 0)) #7
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %34, i8 0, i64 %33, i1 false) #7
  %35 = bitcast i8* %34 to %"struct.WTF::KeyValuePair"*
  %36 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIlNS_12KeyValuePairIl13scoped_refptrIN5blink22IDBObjectStoreMetadataEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.13"* %0, %"struct.WTF::KeyValuePair"* %35, i32 %31, %"struct.WTF::KeyValuePair"* null) #7
  br label %37

37:                                               ; preds = %30, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIlNS_12KeyValuePairIl13scoped_refptrIN5blink22IDBObjectStoreMetadataEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE4findERKl(%"class.WTF::HashTable.13"*, i64* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.13", %"class.WTF::HashTable.13"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  %6 = getelementptr inbounds %"class.WTF::HashTable.13", %"class.WTF::HashTable.13"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  br i1 %5, label %68, label %8

8:                                                ; preds = %2
  %9 = add i32 %7, -1
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %1, align 8
  %12 = shl i64 %11, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %11, %13
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %9, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %33, i64 0, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = icmp eq i64 %35, %11
  br i1 %36, label %65, label %37

37:                                               ; preds = %8
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %56, %37
  %52 = phi i64 [ %35, %37 ], [ %63, %56 ]
  %53 = phi i64 [ %32, %37 ], [ %60, %56 ]
  %54 = phi i64 [ 0, %37 ], [ %58, %56 ]
  %55 = icmp eq i64 %52, 0
  br i1 %55, label %68, label %56

56:                                               ; preds = %51
  %57 = icmp eq i64 %54, 0
  %58 = select i1 %57, i64 %50, i64 %54
  %59 = add i64 %58, %53
  %60 = and i64 %59, %10
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %60
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %61, i64 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = icmp eq i64 %63, %11
  br i1 %64, label %65, label %51

65:                                               ; preds = %56, %8
  %66 = phi %"struct.WTF::KeyValuePair"* [ %33, %8 ], [ %61, %56 ]
  %67 = icmp eq %"struct.WTF::KeyValuePair"* %66, null
  br i1 %67, label %68, label %71

68:                                               ; preds = %51, %65, %2
  %69 = zext i32 %7 to i64
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %69
  br label %74

71:                                               ; preds = %65
  %72 = zext i32 %7 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %72
  br label %74

74:                                               ; preds = %68, %71
  %75 = phi %"struct.WTF::KeyValuePair"* [ %66, %71 ], [ %70, %68 ]
  %76 = phi %"struct.WTF::KeyValuePair"* [ %73, %71 ], [ %70, %68 ]
  %77 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %75, 0
  %78 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %77, %"struct.WTF::KeyValuePair"* %76, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %78
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.47"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.47", %"class.WTF::HashTable.47"* %0, i64 0, i32 0
  %5 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  %6 = icmp eq %"class.WTF::String"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.47"* %0, %"class.WTF::String"* null)
  %9 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.WTF::String"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.47", %"class.WTF::HashTable.47"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #7
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 %27
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"class.WTF::StringImpl"* [ %30, %32 ], [ %66, %58 ]
  %48 = phi %"class.WTF::String"* [ %28, %32 ], [ %64, %58 ]
  %49 = phi %"class.WTF::String"* [ null, %32 ], [ %59, %58 ]
  %50 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %51 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %52 = bitcast %"class.WTF::String"* %48 to i8**
  %53 = load i8*, i8** %52, align 8
  %54 = icmp eq i8* %53, inttoptr (i64 -1 to i8*)
  br i1 %54, label %58, label %55

55:                                               ; preds = %46
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* nonnull %47, %"class.WTF::StringImpl"* %56) #7
  br i1 %57, label %131, label %58

58:                                               ; preds = %46, %55
  %59 = phi %"class.WTF::String"* [ %49, %55 ], [ %48, %46 ]
  %60 = icmp eq i64 %51, 0
  %61 = select i1 %60, i64 %45, i64 %51
  %62 = add i64 %61, %50
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 %63
  %65 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"class.WTF::String"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"class.WTF::String"* %59 to i64*
  store i64 0, i64* %71, align 8
  %72 = getelementptr inbounds %"class.WTF::HashTable.47", %"class.WTF::HashTable.47"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"class.WTF::String"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %80 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %100, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %100

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = zext i32 %90 to i33
  %92 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %91, i33 1) #7
  %93 = extractvalue { i33, i1 } %92, 1
  %94 = extractvalue { i33, i1 } %92, 0
  %95 = icmp slt i33 %94, 0
  %96 = or i1 %93, %95
  br i1 %96, label %97, label %98, !prof !4

97:                                               ; preds = %88
  tail call void @llvm.trap() #7
  unreachable

98:                                               ; preds = %88
  %99 = trunc i33 %94 to i32
  store i32 %99, i32* %89, align 4
  br label %100

100:                                              ; preds = %98, %83, %78
  %101 = ptrtoint %"class.WTF::StringImpl"* %81 to i64
  %102 = bitcast %"class.WTF::String"* %79 to i64*
  %103 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 0, i32 0, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  store i64 %101, i64* %102, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, null
  br i1 %105, label %119, label %106

106:                                              ; preds = %100
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  br i1 %110, label %113, label %115

113:                                              ; preds = %106
  %114 = add i32 %112, -1
  store i32 %114, i32* %111, align 4
  br label %115

115:                                              ; preds = %113, %106
  %116 = phi i32 [ %114, %113 ], [ %112, %106 ]
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %115
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %104) #7
  br label %119

119:                                              ; preds = %100, %115, %118
  %120 = getelementptr inbounds %"class.WTF::HashTable.47", %"class.WTF::HashTable.47"* %0, i64 0, i32 2
  %121 = load i32, i32* %120, align 4
  %122 = add i32 %121, 1
  store i32 %122, i32* %120, align 4
  %123 = getelementptr inbounds %"class.WTF::HashTable.47", %"class.WTF::HashTable.47"* %0, i64 0, i32 3
  %124 = load i32, i32* %123, align 8
  %125 = add i32 %124, %122
  %126 = shl i32 %125, 1
  %127 = load i32, i32* %12, align 8
  %128 = icmp ult i32 %126, %127
  br i1 %128, label %131, label %129

129:                                              ; preds = %119
  %130 = tail call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.47"* %0, %"class.WTF::String"* %79)
  br label %131

131:                                              ; preds = %55, %119, %129
  %132 = phi i8 [ 1, %119 ], [ 1, %129 ], [ 0, %55 ]
  %133 = phi %"class.WTF::String"* [ %79, %119 ], [ %130, %129 ], [ %48, %55 ]
  %134 = insertvalue { %"class.WTF::String"*, i8 } undef, %"class.WTF::String"* %133, 0
  %135 = insertvalue { %"class.WTF::String"*, i8 } %134, i8 %132, 1
  ret { %"class.WTF::String"*, i8 } %135
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.47"*, %"class.WTF::String"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.47", %"class.WTF::HashTable.47"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.47", %"class.WTF::HashTable.47"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #7
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #7
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i64 0, i64 0), i8* %22, i8* %23) #7
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.19, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #7
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #7
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #7
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #7
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #7
  %36 = bitcast i8* %35 to %"class.WTF::String"*
  %37 = call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable.47"* %0, %"class.WTF::String"* %36, i32 %32, %"class.WTF::String"* %1) #7
  ret %"class.WTF::String"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable.47"*, %"class.WTF::String"*, i32, %"class.WTF::String"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.47", align 8
  %6 = bitcast %"class.WTF::HashTable.47"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #7
  %7 = getelementptr inbounds %"class.WTF::HashTable.47", %"class.WTF::HashTable.47"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.47", %"class.WTF::HashTable.47"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.47", %"class.WTF::HashTable.47"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.47", %"class.WTF::HashTable.47"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.47"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"class.WTF::String"* %1, %"class.WTF::String"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.47", %"class.WTF::HashTable.47"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.47", %"class.WTF::HashTable.47"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"class.WTF::String"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.47"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.47"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %23 = ptrtoint %"class.WTF::String"* %22 to i64
  br label %71

24:                                               ; preds = %110
  %25 = bitcast %"class.WTF::HashTable.47"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.47"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %111, %24 ]
  %33 = phi %"class.WTF::String"* [ null, %16 ], [ %114, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %112, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"class.WTF::String"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %67, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %65, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %62, %39
  %42 = phi i64 [ 0, %39 ], [ %63, %62 ]
  %43 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 %42
  %44 = bitcast %"class.WTF::String"* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = bitcast i8* %45 to %"class.WTF::StringImpl"*
  %47 = ptrtoint i8* %45 to i64
  switch i64 %47, label %48 [
    i64 -1, label %62
    i64 0, label %62
  ]

48:                                               ; preds = %41
  %49 = getelementptr inbounds i8, i8* %45, i64 8
  %50 = bitcast i8* %49 to i32*
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = bitcast i8* %45 to i32*
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %48
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %48
  %59 = phi i32 [ %57, %56 ], [ %55, %48 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #7
  br label %62

62:                                               ; preds = %61, %58, %41, %41
  %63 = add nuw nsw i64 %42, 1
  %64 = icmp eq i64 %63, %40
  br i1 %64, label %65, label %41

65:                                               ; preds = %62, %37
  %66 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %66) #7
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %67

67:                                               ; preds = %28, %65
  %68 = getelementptr inbounds %"class.WTF::HashTable.47", %"class.WTF::HashTable.47"* %0, i64 0, i32 3
  %69 = load i32, i32* %68, align 8
  %70 = and i32 %69, -2147483648
  store i32 %70, i32* %68, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #7
  ret %"class.WTF::String"* %33

71:                                               ; preds = %21, %110
  %72 = phi i64 [ %111, %110 ], [ %23, %21 ]
  %73 = phi i32 [ %112, %110 ], [ %13, %21 ]
  %74 = phi %"class.WTF::String"* [ %113, %110 ], [ %22, %21 ]
  %75 = phi %"class.WTF::String"* [ %114, %110 ], [ null, %21 ]
  %76 = phi i32 [ %115, %110 ], [ 0, %21 ]
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %74, i64 %77
  %79 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 0, i32 0, i32 0
  %80 = bitcast %"class.WTF::String"* %78 to i64*
  %81 = load i64, i64* %80, align 8
  switch i64 %81, label %82 [
    i64 -1, label %110
    i64 0, label %110
  ]

82:                                               ; preds = %71
  %83 = call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.47"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %78) #7
  %84 = extractvalue { %"class.WTF::String"*, i8 } %83, 0
  %85 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %84, i64 0, i32 0, i32 0
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %86, null
  br i1 %87, label %101, label %88

88:                                               ; preds = %82
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = and i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 0
  %94 = load i32, i32* %93, align 4
  br i1 %92, label %95, label %97

95:                                               ; preds = %88
  %96 = add i32 %94, -1
  store i32 %96, i32* %93, align 4
  br label %97

97:                                               ; preds = %95, %88
  %98 = phi i32 [ %96, %95 ], [ %94, %88 ]
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %101

100:                                              ; preds = %97
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %86) #7
  br label %101

101:                                              ; preds = %82, %97, %100
  %102 = load i64, i64* %80, align 8
  %103 = bitcast %"class.WTF::String"* %84 to i64*
  store i64 %102, i64* %103, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %79, align 8
  %104 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %104, i64 %77
  %106 = icmp eq %"class.WTF::String"* %105, %3
  %107 = select i1 %106, %"class.WTF::String"* %84, %"class.WTF::String"* %75
  %108 = load i32, i32* %12, align 8
  %109 = ptrtoint %"class.WTF::String"* %104 to i64
  br label %110

110:                                              ; preds = %71, %71, %101
  %111 = phi i64 [ %72, %71 ], [ %109, %101 ], [ %72, %71 ]
  %112 = phi i32 [ %73, %71 ], [ %108, %101 ], [ %73, %71 ]
  %113 = phi %"class.WTF::String"* [ %74, %71 ], [ %104, %101 ], [ %74, %71 ]
  %114 = phi %"class.WTF::String"* [ %75, %71 ], [ %107, %101 ], [ %75, %71 ]
  %115 = add i32 %76, 1
  %116 = icmp eq i32 %115, %112
  br i1 %116, label %24, label %71
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.47"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.47", %"class.WTF::HashTable.47"* %0, i64 0, i32 0
  %4 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.47", %"class.WTF::HashTable.47"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #7
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 %20
  %22 = ptrtoint %"class.WTF::String"* %21 to i64
  %23 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %21, i64 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"class.WTF::String"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"class.WTF::String"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"class.WTF::String"* %44, null
  %46 = ptrtoint %"class.WTF::String"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"class.WTF::String"* [ null, %26 ], [ %62, %61 ]
  %50 = phi %"class.WTF::StringImpl"* [ %24, %26 ], [ %70, %61 ]
  %51 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %52 = phi %"class.WTF::String"* [ %21, %26 ], [ %67, %61 ]
  %53 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %54 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %55 = bitcast %"class.WTF::String"* %52 to i8**
  %56 = load i8*, i8** %55, align 8
  %57 = icmp eq i8* %56, inttoptr (i64 -1 to i8*)
  br i1 %57, label %61, label %58

58:                                               ; preds = %48
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* nonnull %50, %"class.WTF::StringImpl"* %59) #7
  br i1 %60, label %72, label %61

61:                                               ; preds = %58, %48
  %62 = phi %"class.WTF::String"* [ %49, %58 ], [ %52, %48 ]
  %63 = icmp eq i64 %54, 0
  %64 = select i1 %63, i64 %39, i64 %54
  %65 = add i64 %64, %53
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 %66
  %68 = ptrtoint %"class.WTF::String"* %67 to i64
  %69 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %67, i64 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %58, %42
  %73 = phi i64 [ %47, %42 ], [ %51, %58 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %58 ]
  %75 = inttoptr i64 %73 to %"class.WTF::String"*
  %76 = insertvalue { %"class.WTF::String"*, i8 } undef, %"class.WTF::String"* %75, 0
  %77 = insertvalue { %"class.WTF::String"*, i8 } %76, i8 %74, 1
  ret { %"class.WTF::String"*, i8 } %77
}

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIlLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRlEEvOT_(%"class.WTF::Vector.456"*, i64* dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.456", %"class.WTF::Vector.456"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.456", %"class.WTF::Vector.456"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = icmp ugt i64* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i64, i64* %7, i64 %10
  %12 = icmp ugt i64* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.456", %"class.WTF::Vector.456"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq i64* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIlEEmm(i64 %26) #7
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIlEEPKcv, i64 0, i64 0)) #7
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.456"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to i64*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load i64*, i64** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne i64* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast i64* %38 to i8*
  br i1 %41, label %43, label %49, !prof !3

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #7
  %47 = bitcast %"class.WTF::Vector.456"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #7
  %51 = bitcast %"class.WTF::Vector.456"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to i64*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint i64* %1 to i64
  %56 = ptrtoint i64* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.456", %"class.WTF::Vector.456"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !3

69:                                               ; preds = %54
  %70 = icmp eq i64* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIlEEmm(i64 %71) #7
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIlEEPKcv, i64 0, i64 0)) #7
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.456"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load i64*, i64** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne i64* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast i64* %78 to i8*
  br i1 %81, label %83, label %89, !prof !3

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #7
  %87 = bitcast %"class.WTF::Vector.456"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #7
  %91 = bitcast %"class.WTF::Vector.456"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to i64*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi i64* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds i64, i64* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi i64* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi i64* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds i64, i64* %100, i64 %103
  %105 = load i64, i64* %101, align 8
  store i64 %105, i64* %104, align 8
  %106 = load i32, i32* %3, align 4
  %107 = add i32 %106, 1
  store i32 %107, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIlEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #7
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.26, i64 0, i64 0), i8* %11, i8* %12) #7
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.27, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #7
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #7
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #7
  ret i64 %21
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.730", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.730"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #7
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.730", %"class.WTF::StringTypeAdapter.730"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.730"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.730"* nonnull %4, i8* %14) #7
  %15 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.463"* %9) #7
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #7
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.463"* %9) #7
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #7
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.33, i64 0, i64 0), i8* %25, i8* %26) #7
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.34, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #7
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #7
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #7
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #7
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #7
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.35, i64 0, i64 0), i8* %41, i8* %42) #7
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.34, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #7
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #7
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #7
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.730", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.731", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.730", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.730"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #7
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.730"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.730"* nonnull %5, i8* %10) #7
  %11 = bitcast %"class.WTF::StringTypeAdapter.730"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #7
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.730", %"class.WTF::StringTypeAdapter.730"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #7
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.730"* nonnull %3, i8* %14) #7
  %15 = bitcast %"class.WTF::StringTypeAdapter.731"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #7
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.731", %"class.WTF::StringTypeAdapter.731"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.731", %"class.WTF::StringTypeAdapter.731"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #7
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.731"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.730"* nonnull %3, i8* %1) #7
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.731", %"class.WTF::StringTypeAdapter.731"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.732"* nonnull %34, i8* %37) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #7
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.463"* %6) #7
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.730"* nonnull %5, i8* %40) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #7
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.730", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.731", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.730", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.730"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #7
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.730"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.730"* nonnull %5, i8* %10) #7
  %11 = bitcast %"class.WTF::StringTypeAdapter.730"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #7
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.730", %"class.WTF::StringTypeAdapter.730"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #7
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.730"* nonnull %3, i8* %14) #7
  %15 = bitcast %"class.WTF::StringTypeAdapter.731"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #7
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.731", %"class.WTF::StringTypeAdapter.731"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.731", %"class.WTF::StringTypeAdapter.731"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #7
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.731"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.730"* nonnull %3, i16* %1) #7
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.731", %"class.WTF::StringTypeAdapter.731"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i16, i16* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.732"* nonnull %34, i16* %37) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #7
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.463"* %6) #7
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i16, i16* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.730"* nonnull %5, i16* %40) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #7
  ret void
}

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.730"*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.463"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.730", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.730"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #7
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter.730", %"class.WTF::StringTypeAdapter.730"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend.463", %"class.WTF::StringAppend.463"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter.730"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.730"* nonnull %4, i8* %13) #7
  %14 = getelementptr inbounds %"class.WTF::StringAppend.463", %"class.WTF::StringAppend.463"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #7
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #7
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.33, i64 0, i64 0), i8* %30, i8* %31) #7
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.34, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #7
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #7
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #7
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #7
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #7
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.35, i64 0, i64 0), i8* %45, i8* %46) #7
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.34, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #7
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #7
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #7
  ret i32 %23
}

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.730"*, i8*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.732"*, i8*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.730"*, i16*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.732"*, i16*) local_unnamed_addr #1

declare void @_ZN5blink21WebIDBTransactionImplC1E13scoped_refptrIN4base19SequencedTaskRunnerEEl(%"class.blink::WebIDBTransactionImpl"*, %"class.base::SequencedTaskRunner"*, i64) unnamed_addr #1

declare void @_ZN4mojo8internal18PendingRemoteState5resetEv(%"struct.mojo::internal::PendingRemoteState"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink42IsContextDestroyedForActiveScriptWrappableEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!"branch_weights", i32 1, i32 2000}
