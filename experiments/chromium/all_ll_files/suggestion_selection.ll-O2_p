; ModuleID = '../../components/autofill/core/browser/ui/suggestion_selection.cc'
source_filename = "../../components/autofill/core/browser/ui/suggestion_selection.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%"struct.std::nothrow_t" = type { i8 }
%"class.std::__1::vector.71" = type { %"class.std::__1::__vector_base.72" }
%"class.std::__1::__vector_base.72" = type { %"struct.autofill::Suggestion"*, %"struct.autofill::Suggestion"*, %"class.std::__1::__compressed_pair.74" }
%"struct.autofill::Suggestion" = type { %"class.std::__1::basic_string.4", i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.gfx::Image", %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4", i32, i8, %"class.base::StrongAlias", %"class.std::__1::basic_string.4" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.gfx::Image" = type { %class.scoped_refptr.73 }
%class.scoped_refptr.73 = type { %"class.gfx::internal::ImageStorage"* }
%"class.gfx::internal::ImageStorage" = type opaque
%"class.base::StrongAlias" = type { i8 }
%"class.std::__1::basic_string.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.7 }
%union.anon.7 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.autofill::Suggestion"* }
%"class.autofill::AutofillType" = type { i32, i32, i32 }
%"class.autofill::AutofillProfileComparator" = type { %"class.autofill::l10n::CaseInsensitiveCompare", %"class.std::__1::basic_string.4" }
%"class.autofill::l10n::CaseInsensitiveCompare" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.icu_69::Collator"* }
%"class.icu_69::Collator" = type { %"class.icu_69::UObject" }
%"class.icu_69::UObject" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.autofill::AutofillProfile"**, %"class.autofill::AutofillProfile"**, %"class.std::__1::__compressed_pair.66" }
%"class.autofill::AutofillProfile" = type { %"class.autofill::AutofillDataModel", %"class.autofill::NameInfo", %"class.autofill::EmailInfo", %"class.autofill::CompanyInfo", %"class.autofill::PhoneNumber", %"class.autofill::Address", %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4", i8, %"class.std::__1::basic_string.4", %"class.base::Time", i32, i8, i8, %"class.std::__1::map", %"class.std::__1::map", %"class.base::WeakPtrFactory" }
%"class.autofill::AutofillDataModel" = type { %"class.autofill::FormGroup", %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4", i64, %"class.base::Time", %"class.base::Time" }
%"class.autofill::FormGroup" = type { i32 (...)** }
%"class.autofill::NameInfo" = type { %"class.autofill::FormGroup", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.13" }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.autofill::structured_address::AddressComponent"* }
%"class.autofill::structured_address::AddressComponent" = type <{ i32 (...)**, %"class.absl::optional", i32, i32, %"class.std::__1::vector.17", %"class.absl::optional.24", %"class.autofill::structured_address::AddressComponent"*, i32, [4 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.16 }
%union.anon.16 = type { %"class.std::__1::basic_string" }
%"class.std::__1::vector.17" = type { %"class.std::__1::__vector_base.18" }
%"class.std::__1::__vector_base.18" = type { %"class.autofill::structured_address::AddressComponent"**, %"class.autofill::structured_address::AddressComponent"**, %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.autofill::structured_address::AddressComponent"** }
%"class.absl::optional.24" = type { %"class.absl::optional_internal::optional_data.25" }
%"class.absl::optional_internal::optional_data.25" = type { %"class.absl::optional_internal::optional_data_base.26" }
%"class.absl::optional_internal::optional_data_base.26" = type { %"class.absl::optional_internal::optional_data_dtor_base.27" }
%"class.absl::optional_internal::optional_data_dtor_base.27" = type { i8, %union.anon.28 }
%union.anon.28 = type { %"class.std::__1::vector.29" }
%"class.std::__1::vector.29" = type { %"class.std::__1::__vector_base.30" }
%"class.std::__1::__vector_base.30" = type { %"struct.autofill::structured_address::AddressToken"*, %"struct.autofill::structured_address::AddressToken"*, %"class.std::__1::__compressed_pair.31" }
%"struct.autofill::structured_address::AddressToken" = type opaque
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"struct.autofill::structured_address::AddressToken"* }
%"class.autofill::EmailInfo" = type { %"class.autofill::FormGroup", %"class.std::__1::basic_string" }
%"class.autofill::CompanyInfo" = type { %"class.autofill::FormGroup", %"class.std::__1::basic_string", %"class.autofill::AutofillProfile"* }
%"class.autofill::PhoneNumber" = type { %"class.autofill::FormGroup", %"class.std::__1::basic_string", %"class.autofill::AutofillProfile"*, %"class.autofill::i18n::PhoneObject" }
%"class.autofill::i18n::PhoneObject" = type { %"class.std::__1::basic_string.4", %"class.std::__1::unique_ptr.39", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.i18n::phonenumbers::PhoneNumber"* }
%"class.i18n::phonenumbers::PhoneNumber" = type opaque
%"class.autofill::Address" = type { %"class.autofill::FormGroup", %"class.std::__1::vector.45", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string.4", %"class.autofill::structured_address::Address" }
%"class.std::__1::vector.45" = type { %"class.std::__1::__vector_base.46" }
%"class.std::__1::__vector_base.46" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.std::__1::basic_string"* }
%"class.autofill::structured_address::Address" = type { %"class.autofill::structured_address::AddressComponent.base", %"class.autofill::structured_address::StreetAddress", %"class.autofill::structured_address::PostalCode", %"class.autofill::structured_address::SortingCode", %"class.autofill::structured_address::DependentLocality", %"class.autofill::structured_address::City", %"class.autofill::structured_address::State", %"class.autofill::structured_address::CountryCode" }
%"class.autofill::structured_address::AddressComponent.base" = type <{ i32 (...)**, %"class.absl::optional", i32, i32, %"class.std::__1::vector.17", %"class.absl::optional.24", %"class.autofill::structured_address::AddressComponent"*, i32 }>
%"class.autofill::structured_address::StreetAddress" = type { %"class.autofill::structured_address::AddressComponentWithRewriter.base", [4 x i8], %"class.autofill::structured_address::StreetAndDependentStreetName", %"class.autofill::structured_address::HouseNumber", %"class.autofill::structured_address::Premise", %"class.autofill::structured_address::SubPremise", %"class.std::__1::vector.45" }
%"class.autofill::structured_address::AddressComponentWithRewriter.base" = type { %"class.autofill::structured_address::AddressComponent.base" }
%"class.autofill::structured_address::StreetAndDependentStreetName" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8], %"class.autofill::structured_address::StreetName", %"class.autofill::structured_address::DependentStreetName" }
%"class.autofill::structured_address::StreetName" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8] }
%"class.autofill::structured_address::DependentStreetName" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8] }
%"class.autofill::structured_address::HouseNumber" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8] }
%"class.autofill::structured_address::Premise" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8] }
%"class.autofill::structured_address::SubPremise" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8], %"class.autofill::structured_address::Floor", %"class.autofill::structured_address::Apartment" }
%"class.autofill::structured_address::Floor" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8] }
%"class.autofill::structured_address::Apartment" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8] }
%"class.autofill::structured_address::PostalCode" = type { %"class.autofill::structured_address::AddressComponentWithRewriter.base", [4 x i8] }
%"class.autofill::structured_address::SortingCode" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8] }
%"class.autofill::structured_address::DependentLocality" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8] }
%"class.autofill::structured_address::City" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8] }
%"class.autofill::structured_address::State" = type { %"class.autofill::structured_address::AddressComponentWithRewriter.base", [4 x i8] }
%"class.autofill::structured_address::CountryCode" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8] }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.52", %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { i64 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.60" }
%"struct.std::__1::__atomic_base.60" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.61" }
%"struct.std::__1::atomic.61" = type { %"struct.std::__1::__atomic_base.62" }
%"struct.std::__1::__atomic_base.62" = type { %"struct.std::__1::__atomic_base.63" }
%"struct.std::__1::__atomic_base.63" = type { %"struct.std::__1::__cxx_atomic_impl.64" }
%"struct.std::__1::__cxx_atomic_impl.64" = type { %"struct.std::__1::__cxx_atomic_base_impl.65" }
%"struct.std::__1::__cxx_atomic_base_impl.65" = type { i8 }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.autofill::AutofillProfile"** }
%class.anon = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.8 }
%struct.anon.8 = type { i8 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"struct.i18n::addressinput::AddressData" = type { %"class.std::__1::basic_string.4", %"class.std::__1::vector.110", %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4" }
%"class.std::__1::vector.110" = type { %"class.std::__1::__vector_base.111" }
%"class.std::__1::__vector_base.111" = type { %"class.std::__1::basic_string.4"*, %"class.std::__1::basic_string.4"*, %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.std::__1::basic_string.4"* }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::vector.80" = type { %"class.std::__1::__vector_base.81" }
%"class.std::__1::__vector_base.81" = type { i32*, i32*, %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { i32* }
%"class.autofill::DenseSet" = type { %"class.std::__1::bitset" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [2 x i64] }
%class.anon.90 = type { %"class.base::Time" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.91", %"class.std::__1::__compressed_pair.99", %"class.std::__1::__compressed_pair.104", %"class.std::__1::__compressed_pair.106", [4 x i8] }>
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93", %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { float }
%"struct.std::__1::__murmur2_or_cityhash" = type { i8 }

$_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EERKS9_SB_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_ = comdat any

$_ZN4i18n12addressinput11AddressDataD2Ev = comdat any

$_ZNSt3__16vectorIN8autofill10SuggestionENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

$_ZNSt3__116__rotate_forwardINS_11__wrap_iterIPN8autofill10SuggestionEEEEET_S6_S6_S6_ = comdat any

$_ZNSt3__16vectorIN8autofill10SuggestionENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

$_ZNSt3__112__hash_tableINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JS6_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE6rehashEm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm = comdat any

$_ZNSt3__112__hash_tableINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE8__rehashEm = comdat any

@_ZN8autofill20suggestion_selection26kMaxSuggestedProfilesCountE = hidden local_unnamed_addr constant i64 50, align 8
@_ZN8autofill20suggestion_selection26kMaxUniqueSuggestionsCountE = hidden local_unnamed_addr constant i64 10, align 8
@_ZN8autofill20suggestion_selection32kMaxPrunedUniqueSuggestionsCountE = hidden local_unnamed_addr constant i64 3, align 8
@_ZN8autofill8features39kAutofillUseImprovedLabelDisambiguationE = external global %"struct.base::Feature", align 8
@_ZN8autofill8features25kAutofillPruneSuggestionsE = external global %"struct.base::Feature", align 8
@_ZSt7nothrow = external global %"struct.std::nothrow_t", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill20suggestion_selection27GetPrefixMatchedSuggestionsERKNS_12AutofillTypeERKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEESC_RKNS_25AutofillProfileComparatorEbRKNS4_6vectorIPNS_15AutofillProfileENS8_ISI_EEEEPSK_(%"class.std::__1::vector.71"* noalias sret, %"class.autofill::AutofillType"* dereferenceable(12), %"class.std::__1::basic_string"* nocapture readnone dereferenceable(24), %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"class.autofill::AutofillProfileComparator"* nocapture readonly dereferenceable(32), i1 zeroext, %"class.std::__1::vector"* nocapture readonly dereferenceable(24), %"class.std::__1::vector"*) local_unnamed_addr #0 {
  %9 = alloca i32, align 4
  %10 = alloca %"class.std::__1::basic_string.4", align 8
  %11 = alloca %class.anon, align 1
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.std::__1::basic_string.4", align 8
  %14 = alloca i8, align 1
  %15 = alloca %"class.std::__1::basic_string", align 8
  %16 = alloca %"class.std::__1::basic_string", align 8
  %17 = alloca %"class.std::__1::basic_string", align 8
  %18 = alloca %"class.std::__1::basic_string", align 8
  %19 = alloca %"class.std::__1::basic_string.4", align 8
  %20 = alloca %"class.std::__1::basic_string.4", align 8
  %21 = alloca %"class.std::__1::basic_string.4", align 8
  %22 = alloca %"class.std::__1::basic_string.4", align 8
  %23 = alloca %"struct.autofill::Suggestion", align 8
  %24 = alloca %"class.std::__1::basic_string", align 8
  %25 = alloca %"class.std::__1::basic_string.4", align 8
  %26 = getelementptr inbounds %"class.std::__1::vector.71", %"class.std::__1::vector.71"* %0, i64 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.std::__1::vector.71", %"class.std::__1::vector.71"* %0, i64 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.std::__1::vector.71", %"class.std::__1::vector.71"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %29 = bitcast %"class.std::__1::vector.71"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 24, i1 false) #11
  %30 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %31 = bitcast %"class.autofill::AutofillProfile"*** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"class.std::__1::vector"* %6 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %32, %34
  br i1 %35, label %132, label %36

36:                                               ; preds = %8
  %37 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 1
  %38 = bitcast %"class.autofill::AutofillProfile"*** %37 to i64*
  %39 = bitcast %"class.std::__1::vector"* %7 to i64*
  %40 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %43 = bitcast %"class.std::__1::basic_string.4"* %13 to i8*
  %44 = getelementptr inbounds %"class.autofill::AutofillProfileComparator", %"class.autofill::AutofillProfileComparator"* %4, i64 0, i32 1
  %45 = bitcast %"class.std::__1::basic_string.4"* %44 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  %47 = bitcast %"class.std::__1::basic_string.4"* %44 to i8*
  %48 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = getelementptr inbounds %"class.autofill::AutofillProfileComparator", %"class.autofill::AutofillProfileComparator"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %50 = bitcast i32* %9 to i8*
  %51 = bitcast %"class.std::__1::basic_string.4"* %10 to i8*
  %52 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %54 = bitcast %"class.std::__1::basic_string.4"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %54, i64 0, i32 1, i32 0
  %56 = bitcast %"class.std::__1::basic_string.4"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  %58 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %59, i64 0, i32 1, i32 1
  %61 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %64 = bitcast %"class.std::__1::basic_string"* %12 to i16*
  %65 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %65, i64 0, i32 1, i32 1
  %67 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  %68 = bitcast %"class.std::__1::basic_string"* %16 to i8**
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %71 = bitcast %"class.std::__1::basic_string"* %16 to i16*
  %72 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %72, i64 0, i32 1, i32 1
  %74 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %74, i64 0, i32 1, i32 1
  %76 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  %77 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %80 = bitcast %"class.std::__1::basic_string"* %17 to i8**
  %81 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %83 = bitcast %"class.std::__1::basic_string"* %17 to i16*
  %84 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %85 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %84, i64 0, i32 1, i32 1
  %86 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %87 = bitcast %"class.autofill::AutofillProfile"*** %86 to i64*
  %88 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 0
  %89 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  %90 = bitcast %"class.std::__1::basic_string.4"* %19 to i8*
  %91 = bitcast %"class.std::__1::basic_string.4"* %20 to i8*
  %92 = bitcast %"class.std::__1::basic_string.4"* %21 to i8*
  %93 = bitcast %"class.std::__1::basic_string.4"* %22 to i8*
  %94 = bitcast %"class.std::__1::basic_string.4"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %95 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %94, i64 0, i32 1, i32 0
  %96 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %98 = bitcast %"class.std::__1::basic_string"* %12 to i8**
  %99 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %100 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %99, i64 0, i32 1, i32 1
  %101 = bitcast %"class.std::__1::basic_string"* %18 to i16*
  %102 = bitcast %"class.std::__1::basic_string.4"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %103 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %102, i64 0, i32 1, i32 0
  %104 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = bitcast %"class.std::__1::basic_string.4"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %106 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %105, i64 0, i32 1, i32 0
  %107 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = bitcast %"class.std::__1::basic_string.4"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %109 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %108, i64 0, i32 1, i32 0
  %110 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = bitcast %"struct.autofill::Suggestion"* %23 to i8*
  %112 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  %113 = bitcast %"class.std::__1::basic_string"* %24 to i8**
  %114 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %115 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %116 = bitcast %"class.std::__1::basic_string"* %24 to i16*
  %117 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %118 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %117, i64 0, i32 1, i32 1
  %119 = bitcast %"struct.autofill::Suggestion"** %27 to i64*
  %120 = bitcast %"class.std::__1::basic_string.4"* %25 to i8*
  %121 = bitcast %"class.std::__1::basic_string"* %15 to i8**
  %122 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  %123 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  br label %124

124:                                              ; preds = %36, %886
  %125 = phi i64 [ %34, %36 ], [ %889, %886 ]
  %126 = phi i64 [ 0, %36 ], [ %887, %886 ]
  %127 = load i64, i64* %38, align 8
  %128 = load i64, i64* %39, align 8
  %129 = sub i64 %127, %128
  %130 = ashr exact i64 %129, 3
  %131 = icmp ult i64 %130, 50
  br i1 %131, label %134, label %132

132:                                              ; preds = %124, %886, %8
  %133 = call zeroext i1 @_ZN8autofill30IsFeatureSubstringMatchEnabledEv() #11
  br i1 %133, label %893, label %917

134:                                              ; preds = %124
  %135 = inttoptr i64 %125 to %"class.autofill::AutofillProfile"**
  %136 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %135, i64 %126
  %137 = load %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %136, align 8
  %138 = ptrtoint %"class.autofill::AutofillProfile"* %137 to i64
  %139 = call i32 @_ZNK8autofill12AutofillType15GetStorableTypeEv(%"class.autofill::AutofillType"* %1) #11
  %140 = call zeroext i1 @_ZNK8autofill15AutofillProfile29ShouldSkipFillingOrSuggestingENS_15ServerFieldTypeE(%"class.autofill::AutofillProfile"* %137, i32 %139) #11
  br i1 %140, label %886, label %141

141:                                              ; preds = %134
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %122, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #11
  %142 = load i8, i8* %46, align 1, !noalias !2
  %143 = icmp slt i8 %142, 0
  br i1 %143, label %145, label %144

144:                                              ; preds = %141
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %43, i8* align 8 %47, i64 24, i1 false) #11
  br label %148

145:                                              ; preds = %141
  %146 = load i8*, i8** %48, align 8, !noalias !2
  %147 = load i64, i64* %49, align 8, !noalias !2
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string.4"* nonnull %13, i8* %146, i64 %147) #11
  br label %148

148:                                              ; preds = %144, %145
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %50) #11, !noalias !5
  store i32 -1431655766, i32* %9, align 4, !noalias !5
  %149 = call i32 @_ZNK8autofill12AutofillType15GetStorableTypeEv(%"class.autofill::AutofillType"* %1) #11, !noalias !5
  %150 = call zeroext i1 @_ZN8autofill4i18n12FieldForTypeENS_15ServerFieldTypeEPN4i18n12addressinput12AddressFieldE(i32 %149, i32* nonnull %9) #11, !noalias !5
  %151 = load i32, i32* %9, align 4, !noalias !5
  %152 = icmp eq i32 %151, 6
  %153 = and i1 %150, %152
  br i1 %153, label %154, label %172

154:                                              ; preds = %148
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #11, !noalias !5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 0, i64 24, i1 false) #11, !noalias !5
  %155 = call %"struct.i18n::addressinput::AddressData"* @_ZN8autofill4i18n36CreateAddressDataFromAutofillProfileERKNS_15AutofillProfileERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.autofill::AutofillProfile"* dereferenceable(2856) %137, %"class.std::__1::basic_string.4"* nonnull dereferenceable(24) %13) #11
  call void @_ZN4i18n12addressinput33GetStreetAddressLinesAsSingleLineERKNS0_11AddressDataEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"struct.i18n::addressinput::AddressData"* dereferenceable(240) %155, %"class.std::__1::basic_string.4"* nonnull %10) #11
  %156 = icmp eq %"struct.i18n::addressinput::AddressData"* %155, null
  br i1 %156, label %159, label %157

157:                                              ; preds = %154
  call void @_ZN4i18n12addressinput11AddressDataD2Ev(%"struct.i18n::addressinput::AddressData"* nonnull %155) #11
  %158 = bitcast %"struct.i18n::addressinput::AddressData"* %155 to i8*
  call void @_ZdlPv(i8* %158) #12
  br label %159

159:                                              ; preds = %157, %154
  %160 = load i8, i8* %55, align 1, !noalias !5
  %161 = icmp slt i8 %160, 0
  %162 = load i8*, i8** %52, align 8, !noalias !5
  %163 = select i1 %161, i8* %162, i8* %51
  %164 = load i64, i64* %53, align 8, !noalias !5
  %165 = zext i8 %160 to i64
  %166 = select i1 %161, i64 %164, i64 %165
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %12, i8* %163, i64 %166) #11
  %167 = load i8, i8* %55, align 1, !noalias !5
  %168 = icmp slt i8 %167, 0
  br i1 %168, label %169, label %171

169:                                              ; preds = %159
  %170 = load i8*, i8** %52, align 8, !noalias !5
  call void @_ZdlPv(i8* %170) #12
  br label %171

171:                                              ; preds = %169, %159
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #11, !noalias !5
  br label %174

172:                                              ; preds = %148
  %173 = getelementptr inbounds %"class.autofill::AutofillProfile", %"class.autofill::AutofillProfile"* %137, i64 0, i32 0, i32 0
  call void @_ZNK8autofill9FormGroup7GetInfoERKNS_12AutofillTypeERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %12, %"class.autofill::FormGroup"* %173, %"class.autofill::AutofillType"* dereferenceable(12) %1, %"class.std::__1::basic_string.4"* nonnull dereferenceable(24) %13) #11
  br label %174

174:                                              ; preds = %171, %172
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %50) #11, !noalias !5
  %175 = load i8, i8* %57, align 1
  %176 = icmp slt i8 %175, 0
  br i1 %176, label %177, label %179

177:                                              ; preds = %174
  %178 = load i8*, i8** %58, align 8
  call void @_ZdlPv(i8* %178) #12
  br label %179

179:                                              ; preds = %174, %177
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #11
  %180 = load i8, i8* %60, align 1
  %181 = icmp slt i8 %180, 0
  %182 = load i64, i64* %42, align 8
  %183 = zext i8 %180 to i64
  %184 = select i1 %181, i64 %182, i64 %183
  %185 = icmp eq i64 %184, 0
  br i1 %185, label %880, label %186

186:                                              ; preds = %179
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %14) #11
  store i8 -86, i8* %14, align 1
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %123, i8 -86, i64 24, i1 false)
  %187 = load i16*, i16** %41, align 8
  %188 = select i1 %181, i16* %187, i16* %64
  call void @_ZN8autofill25AutofillProfileComparator22NormalizeForComparisonEN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS0_14WhitespaceSpecE(%"class.std::__1::basic_string"* nonnull sret %15, i16* %188, i64 %184, i32 0) #11
  %189 = load i8, i8* %66, align 1
  %190 = icmp slt i8 %189, 0
  br i1 %190, label %192, label %191

191:                                              ; preds = %186
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %67, i8* nonnull align 8 %61, i64 24, i1 false) #11
  br label %360

192:                                              ; preds = %186
  %193 = load i16*, i16** %62, align 8
  %194 = load i64, i64* %63, align 8
  %195 = icmp ult i64 %194, 11
  br i1 %195, label %196, label %198

196:                                              ; preds = %192
  %197 = trunc i64 %194 to i8
  store i8 %197, i8* %73, align 1
  br label %212

198:                                              ; preds = %192
  %199 = icmp ugt i64 %194, 9223372036854775791
  br i1 %199, label %200, label %202

200:                                              ; preds = %198
  %201 = bitcast %"class.std::__1::basic_string"* %16 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %201) #13
  unreachable

202:                                              ; preds = %198
  %203 = add nuw nsw i64 %194, 8
  %204 = and i64 %203, -8
  %205 = icmp slt i64 %204, 0
  br i1 %205, label %206, label %207

206:                                              ; preds = %202
  call void @abort() #13
  unreachable

207:                                              ; preds = %202
  %208 = shl i64 %204, 1
  %209 = call i8* @_Znwm(i64 %208) #12
  %210 = bitcast i8* %209 to i16*
  store i8* %209, i8** %68, align 8
  %211 = or i64 %204, -9223372036854775808
  store i64 %211, i64* %69, align 8
  store i64 %194, i64* %70, align 8
  br label %212

212:                                              ; preds = %207, %196
  %213 = phi i16* [ %71, %196 ], [ %210, %207 ]
  %214 = add nuw nsw i64 %194, 1
  %215 = add i64 %194, 1
  %216 = icmp ult i64 %215, 16
  br i1 %216, label %307, label %217

217:                                              ; preds = %212
  %218 = getelementptr i16, i16* %213, i64 1
  %219 = getelementptr i16, i16* %218, i64 %194
  %220 = getelementptr i16, i16* %193, i64 1
  %221 = getelementptr i16, i16* %220, i64 %194
  %222 = icmp ult i16* %213, %221
  %223 = icmp ult i16* %193, %219
  %224 = and i1 %222, %223
  br i1 %224, label %307, label %225

225:                                              ; preds = %217
  %226 = and i64 %215, -16
  %227 = sub i64 %214, %226
  %228 = getelementptr i16, i16* %193, i64 %226
  %229 = getelementptr i16, i16* %213, i64 %226
  %230 = add i64 %226, -16
  %231 = lshr exact i64 %230, 4
  %232 = add nuw nsw i64 %231, 1
  %233 = and i64 %232, 3
  %234 = icmp ult i64 %230, 48
  br i1 %234, label %286, label %235

235:                                              ; preds = %225
  %236 = sub nsw i64 %232, %233
  br label %237

237:                                              ; preds = %237, %235
  %238 = phi i64 [ 0, %235 ], [ %283, %237 ]
  %239 = phi i64 [ %236, %235 ], [ %284, %237 ]
  %240 = getelementptr i16, i16* %193, i64 %238
  %241 = getelementptr i16, i16* %213, i64 %238
  %242 = bitcast i16* %240 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !8
  %244 = getelementptr i16, i16* %240, i64 8
  %245 = bitcast i16* %244 to <8 x i16>*
  %246 = load <8 x i16>, <8 x i16>* %245, align 2, !alias.scope !8
  %247 = bitcast i16* %241 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %247, align 2, !alias.scope !11, !noalias !8
  %248 = getelementptr i16, i16* %241, i64 8
  %249 = bitcast i16* %248 to <8 x i16>*
  store <8 x i16> %246, <8 x i16>* %249, align 2, !alias.scope !11, !noalias !8
  %250 = or i64 %238, 16
  %251 = getelementptr i16, i16* %193, i64 %250
  %252 = getelementptr i16, i16* %213, i64 %250
  %253 = bitcast i16* %251 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !8
  %255 = getelementptr i16, i16* %251, i64 8
  %256 = bitcast i16* %255 to <8 x i16>*
  %257 = load <8 x i16>, <8 x i16>* %256, align 2, !alias.scope !8
  %258 = bitcast i16* %252 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %258, align 2, !alias.scope !11, !noalias !8
  %259 = getelementptr i16, i16* %252, i64 8
  %260 = bitcast i16* %259 to <8 x i16>*
  store <8 x i16> %257, <8 x i16>* %260, align 2, !alias.scope !11, !noalias !8
  %261 = or i64 %238, 32
  %262 = getelementptr i16, i16* %193, i64 %261
  %263 = getelementptr i16, i16* %213, i64 %261
  %264 = bitcast i16* %262 to <8 x i16>*
  %265 = load <8 x i16>, <8 x i16>* %264, align 2, !alias.scope !8
  %266 = getelementptr i16, i16* %262, i64 8
  %267 = bitcast i16* %266 to <8 x i16>*
  %268 = load <8 x i16>, <8 x i16>* %267, align 2, !alias.scope !8
  %269 = bitcast i16* %263 to <8 x i16>*
  store <8 x i16> %265, <8 x i16>* %269, align 2, !alias.scope !11, !noalias !8
  %270 = getelementptr i16, i16* %263, i64 8
  %271 = bitcast i16* %270 to <8 x i16>*
  store <8 x i16> %268, <8 x i16>* %271, align 2, !alias.scope !11, !noalias !8
  %272 = or i64 %238, 48
  %273 = getelementptr i16, i16* %193, i64 %272
  %274 = getelementptr i16, i16* %213, i64 %272
  %275 = bitcast i16* %273 to <8 x i16>*
  %276 = load <8 x i16>, <8 x i16>* %275, align 2, !alias.scope !8
  %277 = getelementptr i16, i16* %273, i64 8
  %278 = bitcast i16* %277 to <8 x i16>*
  %279 = load <8 x i16>, <8 x i16>* %278, align 2, !alias.scope !8
  %280 = bitcast i16* %274 to <8 x i16>*
  store <8 x i16> %276, <8 x i16>* %280, align 2, !alias.scope !11, !noalias !8
  %281 = getelementptr i16, i16* %274, i64 8
  %282 = bitcast i16* %281 to <8 x i16>*
  store <8 x i16> %279, <8 x i16>* %282, align 2, !alias.scope !11, !noalias !8
  %283 = add i64 %238, 64
  %284 = add i64 %239, -4
  %285 = icmp eq i64 %284, 0
  br i1 %285, label %286, label %237, !llvm.loop !13

286:                                              ; preds = %237, %225
  %287 = phi i64 [ 0, %225 ], [ %283, %237 ]
  %288 = icmp eq i64 %233, 0
  br i1 %288, label %305, label %289

289:                                              ; preds = %286, %289
  %290 = phi i64 [ %302, %289 ], [ %287, %286 ]
  %291 = phi i64 [ %303, %289 ], [ %233, %286 ]
  %292 = getelementptr i16, i16* %193, i64 %290
  %293 = getelementptr i16, i16* %213, i64 %290
  %294 = bitcast i16* %292 to <8 x i16>*
  %295 = load <8 x i16>, <8 x i16>* %294, align 2, !alias.scope !8
  %296 = getelementptr i16, i16* %292, i64 8
  %297 = bitcast i16* %296 to <8 x i16>*
  %298 = load <8 x i16>, <8 x i16>* %297, align 2, !alias.scope !8
  %299 = bitcast i16* %293 to <8 x i16>*
  store <8 x i16> %295, <8 x i16>* %299, align 2, !alias.scope !11, !noalias !8
  %300 = getelementptr i16, i16* %293, i64 8
  %301 = bitcast i16* %300 to <8 x i16>*
  store <8 x i16> %298, <8 x i16>* %301, align 2, !alias.scope !11, !noalias !8
  %302 = add i64 %290, 16
  %303 = add i64 %291, -1
  %304 = icmp eq i64 %303, 0
  br i1 %304, label %305, label %289, !llvm.loop !15

305:                                              ; preds = %289, %286
  %306 = icmp eq i64 %215, %226
  br i1 %306, label %360, label %307

307:                                              ; preds = %305, %217, %212
  %308 = phi i64 [ %214, %217 ], [ %214, %212 ], [ %227, %305 ]
  %309 = phi i16* [ %193, %217 ], [ %193, %212 ], [ %228, %305 ]
  %310 = phi i16* [ %213, %217 ], [ %213, %212 ], [ %229, %305 ]
  %311 = add i64 %308, -1
  %312 = and i64 %308, 7
  %313 = icmp eq i64 %312, 0
  br i1 %313, label %325, label %314

314:                                              ; preds = %307, %314
  %315 = phi i64 [ %320, %314 ], [ %308, %307 ]
  %316 = phi i16* [ %322, %314 ], [ %309, %307 ]
  %317 = phi i16* [ %321, %314 ], [ %310, %307 ]
  %318 = phi i64 [ %323, %314 ], [ %312, %307 ]
  %319 = load i16, i16* %316, align 2
  store i16 %319, i16* %317, align 2
  %320 = add i64 %315, -1
  %321 = getelementptr inbounds i16, i16* %317, i64 1
  %322 = getelementptr inbounds i16, i16* %316, i64 1
  %323 = add i64 %318, -1
  %324 = icmp eq i64 %323, 0
  br i1 %324, label %325, label %314, !llvm.loop !17

325:                                              ; preds = %314, %307
  %326 = phi i64 [ %308, %307 ], [ %320, %314 ]
  %327 = phi i16* [ %309, %307 ], [ %322, %314 ]
  %328 = phi i16* [ %310, %307 ], [ %321, %314 ]
  %329 = icmp ult i64 %311, 7
  br i1 %329, label %360, label %330

330:                                              ; preds = %325, %330
  %331 = phi i64 [ %356, %330 ], [ %326, %325 ]
  %332 = phi i16* [ %358, %330 ], [ %327, %325 ]
  %333 = phi i16* [ %357, %330 ], [ %328, %325 ]
  %334 = load i16, i16* %332, align 2
  store i16 %334, i16* %333, align 2
  %335 = getelementptr inbounds i16, i16* %333, i64 1
  %336 = getelementptr inbounds i16, i16* %332, i64 1
  %337 = load i16, i16* %336, align 2
  store i16 %337, i16* %335, align 2
  %338 = getelementptr inbounds i16, i16* %333, i64 2
  %339 = getelementptr inbounds i16, i16* %332, i64 2
  %340 = load i16, i16* %339, align 2
  store i16 %340, i16* %338, align 2
  %341 = getelementptr inbounds i16, i16* %333, i64 3
  %342 = getelementptr inbounds i16, i16* %332, i64 3
  %343 = load i16, i16* %342, align 2
  store i16 %343, i16* %341, align 2
  %344 = getelementptr inbounds i16, i16* %333, i64 4
  %345 = getelementptr inbounds i16, i16* %332, i64 4
  %346 = load i16, i16* %345, align 2
  store i16 %346, i16* %344, align 2
  %347 = getelementptr inbounds i16, i16* %333, i64 5
  %348 = getelementptr inbounds i16, i16* %332, i64 5
  %349 = load i16, i16* %348, align 2
  store i16 %349, i16* %347, align 2
  %350 = getelementptr inbounds i16, i16* %333, i64 6
  %351 = getelementptr inbounds i16, i16* %332, i64 6
  %352 = load i16, i16* %351, align 2
  store i16 %352, i16* %350, align 2
  %353 = getelementptr inbounds i16, i16* %333, i64 7
  %354 = getelementptr inbounds i16, i16* %332, i64 7
  %355 = load i16, i16* %354, align 2
  store i16 %355, i16* %353, align 2
  %356 = add i64 %331, -8
  %357 = getelementptr inbounds i16, i16* %333, i64 8
  %358 = getelementptr inbounds i16, i16* %332, i64 8
  %359 = icmp eq i64 %356, 0
  br i1 %359, label %360, label %330, !llvm.loop !18

360:                                              ; preds = %325, %330, %305, %191
  %361 = load i8, i8* %75, align 1
  %362 = icmp slt i8 %361, 0
  br i1 %362, label %364, label %363

363:                                              ; preds = %360
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %76, i8* align 8 %77, i64 24, i1 false) #11
  br label %532

364:                                              ; preds = %360
  %365 = load i16*, i16** %78, align 8
  %366 = load i64, i64* %79, align 8
  %367 = icmp ult i64 %366, 11
  br i1 %367, label %368, label %370

368:                                              ; preds = %364
  %369 = trunc i64 %366 to i8
  store i8 %369, i8* %85, align 1
  br label %384

370:                                              ; preds = %364
  %371 = icmp ugt i64 %366, 9223372036854775791
  br i1 %371, label %372, label %374

372:                                              ; preds = %370
  %373 = bitcast %"class.std::__1::basic_string"* %17 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %373) #13
  unreachable

374:                                              ; preds = %370
  %375 = add nuw nsw i64 %366, 8
  %376 = and i64 %375, -8
  %377 = icmp slt i64 %376, 0
  br i1 %377, label %378, label %379

378:                                              ; preds = %374
  call void @abort() #13
  unreachable

379:                                              ; preds = %374
  %380 = shl i64 %376, 1
  %381 = call i8* @_Znwm(i64 %380) #12
  %382 = bitcast i8* %381 to i16*
  store i8* %381, i8** %80, align 8
  %383 = or i64 %376, -9223372036854775808
  store i64 %383, i64* %81, align 8
  store i64 %366, i64* %82, align 8
  br label %384

384:                                              ; preds = %379, %368
  %385 = phi i16* [ %83, %368 ], [ %382, %379 ]
  %386 = add nuw nsw i64 %366, 1
  %387 = add i64 %366, 1
  %388 = icmp ult i64 %387, 16
  br i1 %388, label %479, label %389

389:                                              ; preds = %384
  %390 = getelementptr i16, i16* %385, i64 1
  %391 = getelementptr i16, i16* %390, i64 %366
  %392 = getelementptr i16, i16* %365, i64 1
  %393 = getelementptr i16, i16* %392, i64 %366
  %394 = icmp ult i16* %385, %393
  %395 = icmp ult i16* %365, %391
  %396 = and i1 %394, %395
  br i1 %396, label %479, label %397

397:                                              ; preds = %389
  %398 = and i64 %387, -16
  %399 = sub i64 %386, %398
  %400 = getelementptr i16, i16* %365, i64 %398
  %401 = getelementptr i16, i16* %385, i64 %398
  %402 = add i64 %398, -16
  %403 = lshr exact i64 %402, 4
  %404 = add nuw nsw i64 %403, 1
  %405 = and i64 %404, 3
  %406 = icmp ult i64 %402, 48
  br i1 %406, label %458, label %407

407:                                              ; preds = %397
  %408 = sub nsw i64 %404, %405
  br label %409

409:                                              ; preds = %409, %407
  %410 = phi i64 [ 0, %407 ], [ %455, %409 ]
  %411 = phi i64 [ %408, %407 ], [ %456, %409 ]
  %412 = getelementptr i16, i16* %365, i64 %410
  %413 = getelementptr i16, i16* %385, i64 %410
  %414 = bitcast i16* %412 to <8 x i16>*
  %415 = load <8 x i16>, <8 x i16>* %414, align 2, !alias.scope !19
  %416 = getelementptr i16, i16* %412, i64 8
  %417 = bitcast i16* %416 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !19
  %419 = bitcast i16* %413 to <8 x i16>*
  store <8 x i16> %415, <8 x i16>* %419, align 2, !alias.scope !22, !noalias !19
  %420 = getelementptr i16, i16* %413, i64 8
  %421 = bitcast i16* %420 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %421, align 2, !alias.scope !22, !noalias !19
  %422 = or i64 %410, 16
  %423 = getelementptr i16, i16* %365, i64 %422
  %424 = getelementptr i16, i16* %385, i64 %422
  %425 = bitcast i16* %423 to <8 x i16>*
  %426 = load <8 x i16>, <8 x i16>* %425, align 2, !alias.scope !19
  %427 = getelementptr i16, i16* %423, i64 8
  %428 = bitcast i16* %427 to <8 x i16>*
  %429 = load <8 x i16>, <8 x i16>* %428, align 2, !alias.scope !19
  %430 = bitcast i16* %424 to <8 x i16>*
  store <8 x i16> %426, <8 x i16>* %430, align 2, !alias.scope !22, !noalias !19
  %431 = getelementptr i16, i16* %424, i64 8
  %432 = bitcast i16* %431 to <8 x i16>*
  store <8 x i16> %429, <8 x i16>* %432, align 2, !alias.scope !22, !noalias !19
  %433 = or i64 %410, 32
  %434 = getelementptr i16, i16* %365, i64 %433
  %435 = getelementptr i16, i16* %385, i64 %433
  %436 = bitcast i16* %434 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !19
  %438 = getelementptr i16, i16* %434, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !19
  %441 = bitcast i16* %435 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %441, align 2, !alias.scope !22, !noalias !19
  %442 = getelementptr i16, i16* %435, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %443, align 2, !alias.scope !22, !noalias !19
  %444 = or i64 %410, 48
  %445 = getelementptr i16, i16* %365, i64 %444
  %446 = getelementptr i16, i16* %385, i64 %444
  %447 = bitcast i16* %445 to <8 x i16>*
  %448 = load <8 x i16>, <8 x i16>* %447, align 2, !alias.scope !19
  %449 = getelementptr i16, i16* %445, i64 8
  %450 = bitcast i16* %449 to <8 x i16>*
  %451 = load <8 x i16>, <8 x i16>* %450, align 2, !alias.scope !19
  %452 = bitcast i16* %446 to <8 x i16>*
  store <8 x i16> %448, <8 x i16>* %452, align 2, !alias.scope !22, !noalias !19
  %453 = getelementptr i16, i16* %446, i64 8
  %454 = bitcast i16* %453 to <8 x i16>*
  store <8 x i16> %451, <8 x i16>* %454, align 2, !alias.scope !22, !noalias !19
  %455 = add i64 %410, 64
  %456 = add i64 %411, -4
  %457 = icmp eq i64 %456, 0
  br i1 %457, label %458, label %409, !llvm.loop !24

458:                                              ; preds = %409, %397
  %459 = phi i64 [ 0, %397 ], [ %455, %409 ]
  %460 = icmp eq i64 %405, 0
  br i1 %460, label %477, label %461

461:                                              ; preds = %458, %461
  %462 = phi i64 [ %474, %461 ], [ %459, %458 ]
  %463 = phi i64 [ %475, %461 ], [ %405, %458 ]
  %464 = getelementptr i16, i16* %365, i64 %462
  %465 = getelementptr i16, i16* %385, i64 %462
  %466 = bitcast i16* %464 to <8 x i16>*
  %467 = load <8 x i16>, <8 x i16>* %466, align 2, !alias.scope !19
  %468 = getelementptr i16, i16* %464, i64 8
  %469 = bitcast i16* %468 to <8 x i16>*
  %470 = load <8 x i16>, <8 x i16>* %469, align 2, !alias.scope !19
  %471 = bitcast i16* %465 to <8 x i16>*
  store <8 x i16> %467, <8 x i16>* %471, align 2, !alias.scope !22, !noalias !19
  %472 = getelementptr i16, i16* %465, i64 8
  %473 = bitcast i16* %472 to <8 x i16>*
  store <8 x i16> %470, <8 x i16>* %473, align 2, !alias.scope !22, !noalias !19
  %474 = add i64 %462, 16
  %475 = add i64 %463, -1
  %476 = icmp eq i64 %475, 0
  br i1 %476, label %477, label %461, !llvm.loop !25

477:                                              ; preds = %461, %458
  %478 = icmp eq i64 %387, %398
  br i1 %478, label %532, label %479

479:                                              ; preds = %477, %389, %384
  %480 = phi i64 [ %386, %389 ], [ %386, %384 ], [ %399, %477 ]
  %481 = phi i16* [ %365, %389 ], [ %365, %384 ], [ %400, %477 ]
  %482 = phi i16* [ %385, %389 ], [ %385, %384 ], [ %401, %477 ]
  %483 = add i64 %480, -1
  %484 = and i64 %480, 7
  %485 = icmp eq i64 %484, 0
  br i1 %485, label %497, label %486

486:                                              ; preds = %479, %486
  %487 = phi i64 [ %492, %486 ], [ %480, %479 ]
  %488 = phi i16* [ %494, %486 ], [ %481, %479 ]
  %489 = phi i16* [ %493, %486 ], [ %482, %479 ]
  %490 = phi i64 [ %495, %486 ], [ %484, %479 ]
  %491 = load i16, i16* %488, align 2
  store i16 %491, i16* %489, align 2
  %492 = add i64 %487, -1
  %493 = getelementptr inbounds i16, i16* %489, i64 1
  %494 = getelementptr inbounds i16, i16* %488, i64 1
  %495 = add i64 %490, -1
  %496 = icmp eq i64 %495, 0
  br i1 %496, label %497, label %486, !llvm.loop !26

497:                                              ; preds = %486, %479
  %498 = phi i64 [ %480, %479 ], [ %492, %486 ]
  %499 = phi i16* [ %481, %479 ], [ %494, %486 ]
  %500 = phi i16* [ %482, %479 ], [ %493, %486 ]
  %501 = icmp ult i64 %483, 7
  br i1 %501, label %532, label %502

502:                                              ; preds = %497, %502
  %503 = phi i64 [ %528, %502 ], [ %498, %497 ]
  %504 = phi i16* [ %530, %502 ], [ %499, %497 ]
  %505 = phi i16* [ %529, %502 ], [ %500, %497 ]
  %506 = load i16, i16* %504, align 2
  store i16 %506, i16* %505, align 2
  %507 = getelementptr inbounds i16, i16* %505, i64 1
  %508 = getelementptr inbounds i16, i16* %504, i64 1
  %509 = load i16, i16* %508, align 2
  store i16 %509, i16* %507, align 2
  %510 = getelementptr inbounds i16, i16* %505, i64 2
  %511 = getelementptr inbounds i16, i16* %504, i64 2
  %512 = load i16, i16* %511, align 2
  store i16 %512, i16* %510, align 2
  %513 = getelementptr inbounds i16, i16* %505, i64 3
  %514 = getelementptr inbounds i16, i16* %504, i64 3
  %515 = load i16, i16* %514, align 2
  store i16 %515, i16* %513, align 2
  %516 = getelementptr inbounds i16, i16* %505, i64 4
  %517 = getelementptr inbounds i16, i16* %504, i64 4
  %518 = load i16, i16* %517, align 2
  store i16 %518, i16* %516, align 2
  %519 = getelementptr inbounds i16, i16* %505, i64 5
  %520 = getelementptr inbounds i16, i16* %504, i64 5
  %521 = load i16, i16* %520, align 2
  store i16 %521, i16* %519, align 2
  %522 = getelementptr inbounds i16, i16* %505, i64 6
  %523 = getelementptr inbounds i16, i16* %504, i64 6
  %524 = load i16, i16* %523, align 2
  store i16 %524, i16* %522, align 2
  %525 = getelementptr inbounds i16, i16* %505, i64 7
  %526 = getelementptr inbounds i16, i16* %504, i64 7
  %527 = load i16, i16* %526, align 2
  store i16 %527, i16* %525, align 2
  %528 = add i64 %503, -8
  %529 = getelementptr inbounds i16, i16* %505, i64 8
  %530 = getelementptr inbounds i16, i16* %504, i64 8
  %531 = icmp eq i64 %528, 0
  br i1 %531, label %532, label %502, !llvm.loop !27

532:                                              ; preds = %497, %502, %477, %363
  %533 = call zeroext i1 @_ZN8autofill20suggestion_selection33IsValidSuggestionForFieldContentsENSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEES7_RKNS_12AutofillTypeEbPb(%"class.std::__1::basic_string"* nonnull %16, %"class.std::__1::basic_string"* nonnull %17, %"class.autofill::AutofillType"* dereferenceable(12) %1, i1 zeroext false, i8* nonnull %14)
  %534 = load i8, i8* %85, align 1
  %535 = icmp slt i8 %534, 0
  br i1 %535, label %536, label %538

536:                                              ; preds = %532
  %537 = load i8*, i8** %80, align 8
  call void @_ZdlPv(i8* %537) #12
  br label %538

538:                                              ; preds = %532, %536
  %539 = load i8, i8* %73, align 1
  %540 = icmp slt i8 %539, 0
  br i1 %540, label %541, label %543

541:                                              ; preds = %538
  %542 = load i8*, i8** %68, align 8
  call void @_ZdlPv(i8* %542) #12
  br label %543

543:                                              ; preds = %538, %541
  br i1 %533, label %544, label %873

544:                                              ; preds = %543
  %545 = load %"class.autofill::AutofillProfile"**, %"class.autofill::AutofillProfile"*** %37, align 8
  %546 = load %"class.autofill::AutofillProfile"**, %"class.autofill::AutofillProfile"*** %86, align 8
  %547 = icmp eq %"class.autofill::AutofillProfile"** %545, %546
  %548 = ptrtoint %"class.autofill::AutofillProfile"** %546 to i64
  br i1 %547, label %553, label %549

549:                                              ; preds = %544
  %550 = bitcast %"class.autofill::AutofillProfile"** %545 to i64*
  store i64 %138, i64* %550, align 8
  %551 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %545, i64 1
  %552 = ptrtoint %"class.autofill::AutofillProfile"** %551 to i64
  store i64 %552, i64* %38, align 8
  br label %606

553:                                              ; preds = %544
  %554 = ptrtoint %"class.autofill::AutofillProfile"** %545 to i64
  %555 = load i64, i64* %39, align 8
  %556 = sub i64 %554, %555
  %557 = ashr exact i64 %556, 3
  %558 = add nsw i64 %557, 1
  %559 = icmp ugt i64 %558, 2305843009213693951
  br i1 %559, label %560, label %562

560:                                              ; preds = %553
  %561 = bitcast %"class.std::__1::vector"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %561) #13
  unreachable

562:                                              ; preds = %553
  %563 = sub i64 %548, %555
  %564 = ashr exact i64 %563, 3
  %565 = icmp ult i64 %564, 1152921504606846975
  br i1 %565, label %566, label %574

566:                                              ; preds = %562
  %567 = ashr exact i64 %563, 2
  %568 = icmp ult i64 %567, %558
  %569 = select i1 %568, i64 %558, i64 %567
  %570 = icmp eq i64 %569, 0
  br i1 %570, label %579, label %571

571:                                              ; preds = %566
  %572 = icmp ugt i64 %569, 2305843009213693951
  br i1 %572, label %573, label %574

573:                                              ; preds = %571
  call void @abort() #13
  unreachable

574:                                              ; preds = %571, %562
  %575 = phi i64 [ %569, %571 ], [ 2305843009213693951, %562 ]
  %576 = shl i64 %575, 3
  %577 = call i8* @_Znwm(i64 %576) #12
  %578 = bitcast i8* %577 to %"class.autofill::AutofillProfile"**
  br label %579

579:                                              ; preds = %574, %566
  %580 = phi i64 [ %575, %574 ], [ 0, %566 ]
  %581 = phi %"class.autofill::AutofillProfile"** [ %578, %574 ], [ null, %566 ]
  %582 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %581, i64 %557
  %583 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %581, i64 %580
  %584 = ptrtoint %"class.autofill::AutofillProfile"** %583 to i64
  %585 = bitcast %"class.autofill::AutofillProfile"** %582 to i64*
  store i64 %138, i64* %585, align 8
  %586 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %582, i64 1
  %587 = ptrtoint %"class.autofill::AutofillProfile"** %586 to i64
  %588 = load %"class.autofill::AutofillProfile"**, %"class.autofill::AutofillProfile"*** %88, align 8
  %589 = load i64, i64* %38, align 8
  %590 = ptrtoint %"class.autofill::AutofillProfile"** %588 to i64
  %591 = sub i64 %589, %590
  %592 = ashr exact i64 %591, 3
  %593 = sub nsw i64 0, %592
  %594 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %582, i64 %593
  %595 = ptrtoint %"class.autofill::AutofillProfile"** %594 to i64
  %596 = icmp sgt i64 %591, 0
  br i1 %596, label %597, label %601

597:                                              ; preds = %579
  %598 = bitcast %"class.autofill::AutofillProfile"** %594 to i8*
  %599 = bitcast %"class.autofill::AutofillProfile"** %588 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %598, i8* align 8 %599, i64 %591, i1 false) #11
  %600 = load %"class.autofill::AutofillProfile"**, %"class.autofill::AutofillProfile"*** %88, align 8
  br label %601

601:                                              ; preds = %597, %579
  %602 = phi %"class.autofill::AutofillProfile"** [ %588, %579 ], [ %600, %597 ]
  store i64 %595, i64* %39, align 8
  store i64 %587, i64* %38, align 8
  store i64 %584, i64* %87, align 8
  %603 = icmp eq %"class.autofill::AutofillProfile"** %602, null
  br i1 %603, label %606, label %604

604:                                              ; preds = %601
  %605 = bitcast %"class.autofill::AutofillProfile"** %602 to i8*
  call void @_ZdlPv(i8* %605) #12
  br label %606

606:                                              ; preds = %549, %601, %604
  %607 = call i32 @_ZNK8autofill12AutofillType5groupEv(%"class.autofill::AutofillType"* %1) #11
  %608 = icmp eq i32 %607, 7
  br i1 %608, label %609, label %658

609:                                              ; preds = %606
  %610 = call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN8autofill8features39kAutofillUseImprovedLabelDisambiguationE) #11
  br i1 %610, label %611, label %658

611:                                              ; preds = %609
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %89) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %91) #11
  %612 = load i8, i8* %60, align 1
  %613 = icmp slt i8 %612, 0
  %614 = load i16*, i16** %41, align 8
  %615 = select i1 %613, i16* %614, i16* %64
  %616 = load i64, i64* %42, align 8
  %617 = zext i8 %612 to i64
  %618 = select i1 %613, i64 %616, i64 %617
  call void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.4"* nonnull sret %20, i16* %615, i64 %618) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %92) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %93) #11
  %619 = load i8, i8* %46, align 1, !noalias !28
  %620 = icmp slt i8 %619, 0
  br i1 %620, label %622, label %621

621:                                              ; preds = %611
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %93, i8* align 8 %47, i64 24, i1 false) #11
  br label %625

622:                                              ; preds = %611
  %623 = load i8*, i8** %48, align 8, !noalias !28
  %624 = load i64, i64* %49, align 8, !noalias !28
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string.4"* nonnull %22, i8* %623, i64 %624) #11
  br label %625

625:                                              ; preds = %621, %622
  call void @_ZN8autofill9data_util26GetCountryCodeWithFallbackERKNS_15AutofillProfileERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.std::__1::basic_string.4"* nonnull sret %21, %"class.autofill::AutofillProfile"* dereferenceable(2856) %137, %"class.std::__1::basic_string.4"* nonnull dereferenceable(24) %22) #11
  call void @_ZN8autofill4i18n31FormatPhoneNationallyForDisplayERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_(%"class.std::__1::basic_string.4"* nonnull sret %19, %"class.std::__1::basic_string.4"* nonnull dereferenceable(24) %20, %"class.std::__1::basic_string.4"* nonnull dereferenceable(24) %21) #11
  %626 = load i8, i8* %95, align 1
  %627 = icmp slt i8 %626, 0
  %628 = load i8*, i8** %96, align 8
  %629 = select i1 %627, i8* %628, i8* %90
  %630 = load i64, i64* %97, align 8
  %631 = zext i8 %626 to i64
  %632 = select i1 %627, i64 %630, i64 %631
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %18, i8* %629, i64 %632) #11
  %633 = load i8, i8* %60, align 1
  %634 = icmp slt i8 %633, 0
  br i1 %634, label %635, label %637

635:                                              ; preds = %625
  %636 = load i8*, i8** %98, align 8
  call void @_ZdlPv(i8* %636) #12
  br label %637

637:                                              ; preds = %635, %625
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %40, i8* nonnull align 8 %89, i64 24, i1 false) #11
  store i8 0, i8* %100, align 1
  store i16 0, i16* %101, align 8
  %638 = load i8, i8* %95, align 1
  %639 = icmp slt i8 %638, 0
  br i1 %639, label %640, label %642

640:                                              ; preds = %637
  %641 = load i8*, i8** %96, align 8
  call void @_ZdlPv(i8* %641) #12
  br label %642

642:                                              ; preds = %637, %640
  %643 = load i8, i8* %103, align 1
  %644 = icmp slt i8 %643, 0
  br i1 %644, label %645, label %647

645:                                              ; preds = %642
  %646 = load i8*, i8** %104, align 8
  call void @_ZdlPv(i8* %646) #12
  br label %647

647:                                              ; preds = %642, %645
  %648 = load i8, i8* %106, align 1
  %649 = icmp slt i8 %648, 0
  br i1 %649, label %650, label %652

650:                                              ; preds = %647
  %651 = load i8*, i8** %107, align 8
  call void @_ZdlPv(i8* %651) #12
  br label %652

652:                                              ; preds = %647, %650
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %93) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %92) #11
  %653 = load i8, i8* %109, align 1
  %654 = icmp slt i8 %653, 0
  br i1 %654, label %655, label %657

655:                                              ; preds = %652
  %656 = load i8*, i8** %110, align 8
  call void @_ZdlPv(i8* %656) #12
  br label %657

657:                                              ; preds = %652, %655
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %91) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %89) #11
  br label %658

658:                                              ; preds = %609, %657, %606
  call void @llvm.lifetime.start.p0i8(i64 216, i8* nonnull %111) #11
  %659 = load i8, i8* %60, align 1
  %660 = icmp slt i8 %659, 0
  br i1 %660, label %662, label %661

661:                                              ; preds = %658
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %112, i8* nonnull align 8 %40, i64 24, i1 false) #11
  br label %830

662:                                              ; preds = %658
  %663 = load i16*, i16** %41, align 8
  %664 = load i64, i64* %42, align 8
  %665 = icmp ult i64 %664, 11
  br i1 %665, label %666, label %668

666:                                              ; preds = %662
  %667 = trunc i64 %664 to i8
  store i8 %667, i8* %118, align 1
  br label %682

668:                                              ; preds = %662
  %669 = icmp ugt i64 %664, 9223372036854775791
  br i1 %669, label %670, label %672

670:                                              ; preds = %668
  %671 = bitcast %"class.std::__1::basic_string"* %24 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %671) #13
  unreachable

672:                                              ; preds = %668
  %673 = add nuw nsw i64 %664, 8
  %674 = and i64 %673, -8
  %675 = icmp slt i64 %674, 0
  br i1 %675, label %676, label %677

676:                                              ; preds = %672
  call void @abort() #13
  unreachable

677:                                              ; preds = %672
  %678 = shl i64 %674, 1
  %679 = call i8* @_Znwm(i64 %678) #12
  %680 = bitcast i8* %679 to i16*
  store i8* %679, i8** %113, align 8
  %681 = or i64 %674, -9223372036854775808
  store i64 %681, i64* %114, align 8
  store i64 %664, i64* %115, align 8
  br label %682

682:                                              ; preds = %677, %666
  %683 = phi i16* [ %116, %666 ], [ %680, %677 ]
  %684 = add nuw nsw i64 %664, 1
  %685 = add i64 %664, 1
  %686 = icmp ult i64 %685, 16
  br i1 %686, label %777, label %687

687:                                              ; preds = %682
  %688 = getelementptr i16, i16* %683, i64 1
  %689 = getelementptr i16, i16* %688, i64 %664
  %690 = getelementptr i16, i16* %663, i64 1
  %691 = getelementptr i16, i16* %690, i64 %664
  %692 = icmp ult i16* %683, %691
  %693 = icmp ult i16* %663, %689
  %694 = and i1 %692, %693
  br i1 %694, label %777, label %695

695:                                              ; preds = %687
  %696 = and i64 %685, -16
  %697 = sub i64 %684, %696
  %698 = getelementptr i16, i16* %663, i64 %696
  %699 = getelementptr i16, i16* %683, i64 %696
  %700 = add i64 %696, -16
  %701 = lshr exact i64 %700, 4
  %702 = add nuw nsw i64 %701, 1
  %703 = and i64 %702, 3
  %704 = icmp ult i64 %700, 48
  br i1 %704, label %756, label %705

705:                                              ; preds = %695
  %706 = sub nsw i64 %702, %703
  br label %707

707:                                              ; preds = %707, %705
  %708 = phi i64 [ 0, %705 ], [ %753, %707 ]
  %709 = phi i64 [ %706, %705 ], [ %754, %707 ]
  %710 = getelementptr i16, i16* %663, i64 %708
  %711 = getelementptr i16, i16* %683, i64 %708
  %712 = bitcast i16* %710 to <8 x i16>*
  %713 = load <8 x i16>, <8 x i16>* %712, align 2, !alias.scope !31
  %714 = getelementptr i16, i16* %710, i64 8
  %715 = bitcast i16* %714 to <8 x i16>*
  %716 = load <8 x i16>, <8 x i16>* %715, align 2, !alias.scope !31
  %717 = bitcast i16* %711 to <8 x i16>*
  store <8 x i16> %713, <8 x i16>* %717, align 2, !alias.scope !34, !noalias !31
  %718 = getelementptr i16, i16* %711, i64 8
  %719 = bitcast i16* %718 to <8 x i16>*
  store <8 x i16> %716, <8 x i16>* %719, align 2, !alias.scope !34, !noalias !31
  %720 = or i64 %708, 16
  %721 = getelementptr i16, i16* %663, i64 %720
  %722 = getelementptr i16, i16* %683, i64 %720
  %723 = bitcast i16* %721 to <8 x i16>*
  %724 = load <8 x i16>, <8 x i16>* %723, align 2, !alias.scope !31
  %725 = getelementptr i16, i16* %721, i64 8
  %726 = bitcast i16* %725 to <8 x i16>*
  %727 = load <8 x i16>, <8 x i16>* %726, align 2, !alias.scope !31
  %728 = bitcast i16* %722 to <8 x i16>*
  store <8 x i16> %724, <8 x i16>* %728, align 2, !alias.scope !34, !noalias !31
  %729 = getelementptr i16, i16* %722, i64 8
  %730 = bitcast i16* %729 to <8 x i16>*
  store <8 x i16> %727, <8 x i16>* %730, align 2, !alias.scope !34, !noalias !31
  %731 = or i64 %708, 32
  %732 = getelementptr i16, i16* %663, i64 %731
  %733 = getelementptr i16, i16* %683, i64 %731
  %734 = bitcast i16* %732 to <8 x i16>*
  %735 = load <8 x i16>, <8 x i16>* %734, align 2, !alias.scope !31
  %736 = getelementptr i16, i16* %732, i64 8
  %737 = bitcast i16* %736 to <8 x i16>*
  %738 = load <8 x i16>, <8 x i16>* %737, align 2, !alias.scope !31
  %739 = bitcast i16* %733 to <8 x i16>*
  store <8 x i16> %735, <8 x i16>* %739, align 2, !alias.scope !34, !noalias !31
  %740 = getelementptr i16, i16* %733, i64 8
  %741 = bitcast i16* %740 to <8 x i16>*
  store <8 x i16> %738, <8 x i16>* %741, align 2, !alias.scope !34, !noalias !31
  %742 = or i64 %708, 48
  %743 = getelementptr i16, i16* %663, i64 %742
  %744 = getelementptr i16, i16* %683, i64 %742
  %745 = bitcast i16* %743 to <8 x i16>*
  %746 = load <8 x i16>, <8 x i16>* %745, align 2, !alias.scope !31
  %747 = getelementptr i16, i16* %743, i64 8
  %748 = bitcast i16* %747 to <8 x i16>*
  %749 = load <8 x i16>, <8 x i16>* %748, align 2, !alias.scope !31
  %750 = bitcast i16* %744 to <8 x i16>*
  store <8 x i16> %746, <8 x i16>* %750, align 2, !alias.scope !34, !noalias !31
  %751 = getelementptr i16, i16* %744, i64 8
  %752 = bitcast i16* %751 to <8 x i16>*
  store <8 x i16> %749, <8 x i16>* %752, align 2, !alias.scope !34, !noalias !31
  %753 = add i64 %708, 64
  %754 = add i64 %709, -4
  %755 = icmp eq i64 %754, 0
  br i1 %755, label %756, label %707, !llvm.loop !36

756:                                              ; preds = %707, %695
  %757 = phi i64 [ 0, %695 ], [ %753, %707 ]
  %758 = icmp eq i64 %703, 0
  br i1 %758, label %775, label %759

759:                                              ; preds = %756, %759
  %760 = phi i64 [ %772, %759 ], [ %757, %756 ]
  %761 = phi i64 [ %773, %759 ], [ %703, %756 ]
  %762 = getelementptr i16, i16* %663, i64 %760
  %763 = getelementptr i16, i16* %683, i64 %760
  %764 = bitcast i16* %762 to <8 x i16>*
  %765 = load <8 x i16>, <8 x i16>* %764, align 2, !alias.scope !31
  %766 = getelementptr i16, i16* %762, i64 8
  %767 = bitcast i16* %766 to <8 x i16>*
  %768 = load <8 x i16>, <8 x i16>* %767, align 2, !alias.scope !31
  %769 = bitcast i16* %763 to <8 x i16>*
  store <8 x i16> %765, <8 x i16>* %769, align 2, !alias.scope !34, !noalias !31
  %770 = getelementptr i16, i16* %763, i64 8
  %771 = bitcast i16* %770 to <8 x i16>*
  store <8 x i16> %768, <8 x i16>* %771, align 2, !alias.scope !34, !noalias !31
  %772 = add i64 %760, 16
  %773 = add i64 %761, -1
  %774 = icmp eq i64 %773, 0
  br i1 %774, label %775, label %759, !llvm.loop !37

775:                                              ; preds = %759, %756
  %776 = icmp eq i64 %685, %696
  br i1 %776, label %830, label %777

777:                                              ; preds = %775, %687, %682
  %778 = phi i64 [ %684, %687 ], [ %684, %682 ], [ %697, %775 ]
  %779 = phi i16* [ %663, %687 ], [ %663, %682 ], [ %698, %775 ]
  %780 = phi i16* [ %683, %687 ], [ %683, %682 ], [ %699, %775 ]
  %781 = add i64 %778, -1
  %782 = and i64 %778, 7
  %783 = icmp eq i64 %782, 0
  br i1 %783, label %795, label %784

784:                                              ; preds = %777, %784
  %785 = phi i64 [ %790, %784 ], [ %778, %777 ]
  %786 = phi i16* [ %792, %784 ], [ %779, %777 ]
  %787 = phi i16* [ %791, %784 ], [ %780, %777 ]
  %788 = phi i64 [ %793, %784 ], [ %782, %777 ]
  %789 = load i16, i16* %786, align 2
  store i16 %789, i16* %787, align 2
  %790 = add i64 %785, -1
  %791 = getelementptr inbounds i16, i16* %787, i64 1
  %792 = getelementptr inbounds i16, i16* %786, i64 1
  %793 = add i64 %788, -1
  %794 = icmp eq i64 %793, 0
  br i1 %794, label %795, label %784, !llvm.loop !38

795:                                              ; preds = %784, %777
  %796 = phi i64 [ %778, %777 ], [ %790, %784 ]
  %797 = phi i16* [ %779, %777 ], [ %792, %784 ]
  %798 = phi i16* [ %780, %777 ], [ %791, %784 ]
  %799 = icmp ult i64 %781, 7
  br i1 %799, label %830, label %800

800:                                              ; preds = %795, %800
  %801 = phi i64 [ %826, %800 ], [ %796, %795 ]
  %802 = phi i16* [ %828, %800 ], [ %797, %795 ]
  %803 = phi i16* [ %827, %800 ], [ %798, %795 ]
  %804 = load i16, i16* %802, align 2
  store i16 %804, i16* %803, align 2
  %805 = getelementptr inbounds i16, i16* %803, i64 1
  %806 = getelementptr inbounds i16, i16* %802, i64 1
  %807 = load i16, i16* %806, align 2
  store i16 %807, i16* %805, align 2
  %808 = getelementptr inbounds i16, i16* %803, i64 2
  %809 = getelementptr inbounds i16, i16* %802, i64 2
  %810 = load i16, i16* %809, align 2
  store i16 %810, i16* %808, align 2
  %811 = getelementptr inbounds i16, i16* %803, i64 3
  %812 = getelementptr inbounds i16, i16* %802, i64 3
  %813 = load i16, i16* %812, align 2
  store i16 %813, i16* %811, align 2
  %814 = getelementptr inbounds i16, i16* %803, i64 4
  %815 = getelementptr inbounds i16, i16* %802, i64 4
  %816 = load i16, i16* %815, align 2
  store i16 %816, i16* %814, align 2
  %817 = getelementptr inbounds i16, i16* %803, i64 5
  %818 = getelementptr inbounds i16, i16* %802, i64 5
  %819 = load i16, i16* %818, align 2
  store i16 %819, i16* %817, align 2
  %820 = getelementptr inbounds i16, i16* %803, i64 6
  %821 = getelementptr inbounds i16, i16* %802, i64 6
  %822 = load i16, i16* %821, align 2
  store i16 %822, i16* %820, align 2
  %823 = getelementptr inbounds i16, i16* %803, i64 7
  %824 = getelementptr inbounds i16, i16* %802, i64 7
  %825 = load i16, i16* %824, align 2
  store i16 %825, i16* %823, align 2
  %826 = add i64 %801, -8
  %827 = getelementptr inbounds i16, i16* %803, i64 8
  %828 = getelementptr inbounds i16, i16* %802, i64 8
  %829 = icmp eq i64 %826, 0
  br i1 %829, label %830, label %800, !llvm.loop !39

830:                                              ; preds = %795, %800, %775, %661
  call void @_ZN8autofill10SuggestionC1ENSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"struct.autofill::Suggestion"* nonnull %23, %"class.std::__1::basic_string"* nonnull %24) #11
  %831 = load %"struct.autofill::Suggestion"*, %"struct.autofill::Suggestion"** %27, align 8
  %832 = load %"struct.autofill::Suggestion"*, %"struct.autofill::Suggestion"** %28, align 8
  %833 = icmp ult %"struct.autofill::Suggestion"* %831, %832
  br i1 %833, label %834, label %837

834:                                              ; preds = %830
  call void @_ZN8autofill10SuggestionC1EOS0_(%"struct.autofill::Suggestion"* %831, %"struct.autofill::Suggestion"* nonnull dereferenceable(216) %23) #11
  %835 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %831, i64 1
  %836 = ptrtoint %"struct.autofill::Suggestion"* %835 to i64
  store i64 %836, i64* %119, align 8
  br label %838

837:                                              ; preds = %830
  call void @_ZNSt3__16vectorIN8autofill10SuggestionENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.71"* %0, %"struct.autofill::Suggestion"* nonnull dereferenceable(216) %23) #11
  br label %838

838:                                              ; preds = %834, %837
  call void @_ZN8autofill10SuggestionD1Ev(%"struct.autofill::Suggestion"* nonnull %23) #11
  %839 = load i8, i8* %118, align 1
  %840 = icmp slt i8 %839, 0
  br i1 %840, label %841, label %843

841:                                              ; preds = %838
  %842 = load i8*, i8** %113, align 8
  call void @_ZdlPv(i8* %842) #12
  br label %843

843:                                              ; preds = %838, %841
  call void @llvm.lifetime.end.p0i8(i64 216, i8* nonnull %111) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %120) #11
  %844 = getelementptr inbounds %"class.autofill::AutofillProfile", %"class.autofill::AutofillProfile"* %137, i64 0, i32 0, i32 1
  %845 = bitcast %"class.std::__1::basic_string.4"* %844 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %846 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %845, i64 0, i32 1, i32 0
  %847 = load i8, i8* %846, align 1, !noalias !40
  %848 = icmp slt i8 %847, 0
  br i1 %848, label %851, label %849

849:                                              ; preds = %843
  %850 = bitcast %"class.std::__1::basic_string.4"* %844 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %120, i8* align 8 %850, i64 24, i1 false) #11
  br label %856

851:                                              ; preds = %843
  %852 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %844, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %853 = load i8*, i8** %852, align 8, !noalias !40
  %854 = getelementptr inbounds %"class.autofill::AutofillProfile", %"class.autofill::AutofillProfile"* %137, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %855 = load i64, i64* %854, align 8, !noalias !40
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string.4"* nonnull %25, i8* %853, i64 %855) #11
  br label %856

856:                                              ; preds = %849, %851
  %857 = load %"struct.autofill::Suggestion"*, %"struct.autofill::Suggestion"** %27, align 8
  %858 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %857, i64 -1, i32 0
  %859 = bitcast %"class.std::__1::basic_string.4"* %858 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %860 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %859, i64 0, i32 1, i32 0
  %861 = load i8, i8* %860, align 1
  %862 = icmp slt i8 %861, 0
  br i1 %862, label %863, label %866

863:                                              ; preds = %856
  %864 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %858, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %865 = load i8*, i8** %864, align 8
  call void @_ZdlPv(i8* %865) #12
  br label %866

866:                                              ; preds = %863, %856
  %867 = bitcast %"class.std::__1::basic_string.4"* %858 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %867, i8* nonnull align 8 %120, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %120) #11
  %868 = load i8, i8* %14, align 1, !range !43
  %869 = xor i8 %868, 1
  %870 = zext i8 %869 to i32
  %871 = load %"struct.autofill::Suggestion"*, %"struct.autofill::Suggestion"** %27, align 8
  %872 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %871, i64 -1, i32 9
  store i32 %870, i32* %872, align 8
  br label %873

873:                                              ; preds = %866, %543
  %874 = load i8, i8* %66, align 1
  %875 = icmp slt i8 %874, 0
  br i1 %875, label %876, label %878

876:                                              ; preds = %873
  %877 = load i8*, i8** %121, align 8
  call void @_ZdlPv(i8* %877) #12
  br label %878

878:                                              ; preds = %873, %876
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %14) #11
  %879 = load i8, i8* %60, align 1
  br label %880

880:                                              ; preds = %179, %878
  %881 = phi i8 [ %180, %179 ], [ %879, %878 ]
  %882 = icmp slt i8 %881, 0
  br i1 %882, label %883, label %885

883:                                              ; preds = %880
  %884 = load i8*, i8** %98, align 8
  call void @_ZdlPv(i8* %884) #12
  br label %885

885:                                              ; preds = %880, %883
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #11
  br label %886

886:                                              ; preds = %134, %885
  %887 = add nuw i64 %126, 1
  %888 = load i64, i64* %31, align 8
  %889 = load i64, i64* %33, align 8
  %890 = sub i64 %888, %889
  %891 = ashr exact i64 %890, 3
  %892 = icmp ult i64 %887, %891
  br i1 %892, label %124, label %132

893:                                              ; preds = %132
  %894 = load %"struct.autofill::Suggestion"*, %"struct.autofill::Suggestion"** %26, align 8
  %895 = load %"struct.autofill::Suggestion"*, %"struct.autofill::Suggestion"** %27, align 8
  %896 = getelementptr inbounds %class.anon, %class.anon* %11, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %896)
  %897 = ptrtoint %"struct.autofill::Suggestion"* %894 to i64
  %898 = ptrtoint %"struct.autofill::Suggestion"* %895 to i64
  %899 = sub i64 %898, %897
  %900 = sdiv exact i64 %899, 216
  %901 = icmp sgt i64 %899, 0
  br i1 %901, label %902, label %913

902:                                              ; preds = %893
  %903 = icmp slt i64 %900, 42700796466920258
  %904 = select i1 %903, i64 %900, i64 42700796466920258
  br label %905

905:                                              ; preds = %910, %902
  %906 = phi i64 [ %911, %910 ], [ %904, %902 ]
  %907 = mul i64 %906, 216
  %908 = call noalias i8* @_ZnwmRKSt9nothrow_t(i64 %907, %"struct.std::nothrow_t"* nonnull dereferenceable(1) @_ZSt7nothrow) #11
  %909 = icmp eq i8* %908, null
  br i1 %909, label %910, label %914

910:                                              ; preds = %905
  %911 = lshr i64 %906, 1
  %912 = icmp eq i64 %911, 0
  br i1 %912, label %913, label %905

913:                                              ; preds = %910, %893
  call fastcc void @"_ZNSt3__113__stable_sortIRZN8autofill20suggestion_selection27GetPrefixMatchedSuggestionsERKNS1_12AutofillTypeERKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEESD_RKNS1_25AutofillProfileComparatorEbRKNS_6vectorIPNS1_15AutofillProfileENS9_ISJ_EEEEPSL_E3$_0NS_11__wrap_iterIPNS1_10SuggestionEEEEEvT0_SV_T_NS_15iterator_traitsISV_E15difference_typeEPNSY_10value_typeEl"(%"struct.autofill::Suggestion"* %894, %"struct.autofill::Suggestion"* %895, %class.anon* nonnull dereferenceable(1) %11, i64 %900, %"struct.autofill::Suggestion"* null, i64 0) #11
  br label %916

914:                                              ; preds = %905
  %915 = bitcast i8* %908 to %"struct.autofill::Suggestion"*
  call fastcc void @"_ZNSt3__113__stable_sortIRZN8autofill20suggestion_selection27GetPrefixMatchedSuggestionsERKNS1_12AutofillTypeERKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEESD_RKNS1_25AutofillProfileComparatorEbRKNS_6vectorIPNS1_15AutofillProfileENS9_ISJ_EEEEPSL_E3$_0NS_11__wrap_iterIPNS1_10SuggestionEEEEEvT0_SV_T_NS_15iterator_traitsISV_E15difference_typeEPNSY_10value_typeEl"(%"struct.autofill::Suggestion"* %894, %"struct.autofill::Suggestion"* %895, %class.anon* nonnull dereferenceable(1) %11, i64 %900, %"struct.autofill::Suggestion"* nonnull %915, i64 %906) #11
  call void @_ZdlPv(i8* nonnull %908) #12
  br label %916

916:                                              ; preds = %913, %914
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %896)
  br label %917

917:                                              ; preds = %132, %916
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZNK8autofill15AutofillProfile29ShouldSkipFillingOrSuggestingENS_15ServerFieldTypeE(%"class.autofill::AutofillProfile"*, i32) local_unnamed_addr #2

declare i32 @_ZNK8autofill12AutofillType15GetStorableTypeEv(%"class.autofill::AutofillType"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN8autofill25AutofillProfileComparator22NormalizeForComparisonEN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS0_14WhitespaceSpecE(%"class.std::__1::basic_string"* sret, i16*, i64, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8autofill20suggestion_selection33IsValidSuggestionForFieldContentsENSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEES7_RKNS_12AutofillTypeEbPb(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.autofill::AutofillType"* dereferenceable(12), i1 zeroext, i8* nocapture) local_unnamed_addr #0 {
  store i8 1, i8* %4, align 1
  %6 = tail call i32 @_ZNK8autofill12AutofillType5groupEv(%"class.autofill::AutofillType"* %2) #11
  %7 = icmp eq i32 %6, 7
  br i1 %7, label %13, label %8

8:                                                ; preds = %5
  %9 = tail call i32 @_ZNK8autofill12AutofillType5groupEv(%"class.autofill::AutofillType"* %2) #11
  %10 = icmp eq i32 %9, 8
  br i1 %10, label %13, label %11

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  br label %94

13:                                               ; preds = %8, %5
  %14 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %23

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  br label %26

23:                                               ; preds = %13
  %24 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %25 = zext i8 %16 to i64
  br label %26

26:                                               ; preds = %23, %18
  %27 = phi i16* [ %20, %18 ], [ %24, %23 ]
  %28 = phi i64 [ %22, %18 ], [ %25, %23 ]
  %29 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %29, i64 0, i32 1, i32 1
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i16*, i16** %33, align 8
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %38 = zext i8 %31 to i64
  %39 = select i1 %32, i16* %34, i16* %37
  %40 = select i1 %32, i64 %36, i64 %38
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %229, label %42

42:                                               ; preds = %26
  %43 = getelementptr inbounds i16, i16* %27, i64 %28
  %44 = shl nuw i64 %40, 1
  %45 = ashr exact i64 %44, 1
  %46 = ptrtoint i16* %43 to i64
  %47 = ptrtoint i16* %27 to i64
  %48 = shl nuw i64 %28, 1
  %49 = ashr exact i64 %48, 1
  %50 = icmp slt i64 %49, %45
  br i1 %50, label %94, label %51

51:                                               ; preds = %42
  %52 = load i16, i16* %39, align 2
  br label %53

53:                                               ; preds = %82, %51
  %54 = phi i64 [ %49, %51 ], [ %86, %82 ]
  %55 = phi i16* [ %27, %51 ], [ %83, %82 ]
  %56 = sub nsw i64 %54, %45
  %57 = add nsw i64 %56, 1
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %94, label %59

59:                                               ; preds = %53, %64
  %60 = phi i64 [ %66, %64 ], [ %57, %53 ]
  %61 = phi i16* [ %65, %64 ], [ %55, %53 ]
  %62 = load i16, i16* %61, align 2
  %63 = icmp eq i16 %62, %52
  br i1 %63, label %68, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds i16, i16* %61, i64 1
  %66 = add i64 %60, -1
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %94, label %59

68:                                               ; preds = %59
  %69 = icmp eq i16* %61, null
  br i1 %69, label %94, label %70

70:                                               ; preds = %68, %77
  %71 = phi i16* [ %75, %77 ], [ %61, %68 ]
  %72 = phi i16* [ %78, %77 ], [ %39, %68 ]
  %73 = phi i64 [ %74, %77 ], [ %45, %68 ]
  %74 = add i64 %73, -1
  %75 = getelementptr inbounds i16, i16* %71, i64 1
  %76 = icmp eq i64 %74, 0
  br i1 %76, label %88, label %77

77:                                               ; preds = %70
  %78 = getelementptr inbounds i16, i16* %72, i64 1
  %79 = load i16, i16* %75, align 2
  %80 = load i16, i16* %78, align 2
  %81 = icmp eq i16 %80, %79
  br i1 %81, label %70, label %82

82:                                               ; preds = %77
  %83 = getelementptr inbounds i16, i16* %61, i64 1
  %84 = ptrtoint i16* %83 to i64
  %85 = sub i64 %46, %84
  %86 = ashr exact i64 %85, 1
  %87 = icmp slt i64 %86, %45
  br i1 %87, label %94, label %53

88:                                               ; preds = %70
  %89 = ptrtoint i16* %61 to i64
  %90 = icmp eq i16* %61, %43
  %91 = sub i64 %89, %47
  %92 = icmp eq i64 %91, -2
  %93 = or i1 %90, %92
  br i1 %93, label %94, label %229

94:                                               ; preds = %82, %68, %53, %64, %11, %42, %88
  %95 = phi %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* [ %12, %11 ], [ %14, %42 ], [ %14, %88 ], [ %14, %64 ], [ %14, %53 ], [ %14, %68 ], [ %14, %82 ]
  %96 = tail call i32 @_ZNK8autofill12AutofillType15GetStorableTypeEv(%"class.autofill::AutofillType"* %2) #11
  %97 = icmp eq i32 %96, 52
  %98 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %95, i64 0, i32 1, i32 1
  %99 = load i8, i8* %98, align 1
  %100 = icmp slt i8 %99, 0
  br i1 %97, label %101, label %183

101:                                              ; preds = %94
  br i1 %100, label %102, label %107

102:                                              ; preds = %101
  %103 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load i16*, i16** %103, align 8
  %105 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %106 = load i64, i64* %105, align 8
  br label %110

107:                                              ; preds = %101
  %108 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %109 = zext i8 %99 to i64
  br label %110

110:                                              ; preds = %107, %102
  %111 = phi i16* [ %104, %102 ], [ %108, %107 ]
  %112 = phi i64 [ %106, %102 ], [ %109, %107 ]
  %113 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %114 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %113, i64 0, i32 1, i32 1
  %115 = load i8, i8* %114, align 1
  %116 = icmp slt i8 %115, 0
  %117 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = load i16*, i16** %117, align 8
  %119 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %120 = load i64, i64* %119, align 8
  %121 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %122 = zext i8 %115 to i64
  %123 = select i1 %116, i16* %118, i16* %121
  %124 = select i1 %116, i64 %120, i64 %122
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %182, label %126

126:                                              ; preds = %110
  %127 = getelementptr inbounds i16, i16* %111, i64 %112
  %128 = shl nuw i64 %124, 1
  %129 = ashr exact i64 %128, 1
  %130 = ptrtoint i16* %127 to i64
  %131 = ptrtoint i16* %111 to i64
  %132 = shl nuw i64 %112, 1
  %133 = ashr exact i64 %132, 1
  %134 = icmp slt i64 %133, %129
  br i1 %134, label %178, label %135

135:                                              ; preds = %126
  %136 = load i16, i16* %123, align 2
  br label %137

137:                                              ; preds = %166, %135
  %138 = phi i64 [ %133, %135 ], [ %170, %166 ]
  %139 = phi i16* [ %111, %135 ], [ %167, %166 ]
  %140 = sub nsw i64 %138, %129
  %141 = add nsw i64 %140, 1
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %178, label %143

143:                                              ; preds = %137, %148
  %144 = phi i64 [ %150, %148 ], [ %141, %137 ]
  %145 = phi i16* [ %149, %148 ], [ %139, %137 ]
  %146 = load i16, i16* %145, align 2
  %147 = icmp eq i16 %146, %136
  br i1 %147, label %152, label %148

148:                                              ; preds = %143
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = add i64 %144, -1
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %178, label %143

152:                                              ; preds = %143
  %153 = icmp eq i16* %145, null
  br i1 %153, label %178, label %154

154:                                              ; preds = %152, %161
  %155 = phi i16* [ %159, %161 ], [ %145, %152 ]
  %156 = phi i16* [ %162, %161 ], [ %123, %152 ]
  %157 = phi i64 [ %158, %161 ], [ %129, %152 ]
  %158 = add i64 %157, -1
  %159 = getelementptr inbounds i16, i16* %155, i64 1
  %160 = icmp eq i64 %158, 0
  br i1 %160, label %172, label %161

161:                                              ; preds = %154
  %162 = getelementptr inbounds i16, i16* %156, i64 1
  %163 = load i16, i16* %159, align 2
  %164 = load i16, i16* %162, align 2
  %165 = icmp eq i16 %164, %163
  br i1 %165, label %154, label %166

166:                                              ; preds = %161
  %167 = getelementptr inbounds i16, i16* %145, i64 1
  %168 = ptrtoint i16* %167 to i64
  %169 = sub i64 %130, %168
  %170 = ashr exact i64 %169, 1
  %171 = icmp slt i64 %170, %129
  br i1 %171, label %178, label %137

172:                                              ; preds = %154
  %173 = ptrtoint i16* %145 to i64
  %174 = icmp eq i16* %145, %127
  %175 = sub i64 %173, %131
  %176 = icmp eq i64 %175, -2
  %177 = or i1 %174, %176
  br i1 %177, label %178, label %182

178:                                              ; preds = %166, %152, %137, %148, %126, %172
  %179 = xor i1 %3, true
  %180 = icmp ugt i64 %124, 5
  %181 = or i1 %180, %179
  br i1 %181, label %229, label %182

182:                                              ; preds = %178, %172, %110
  br label %229

183:                                              ; preds = %94
  %184 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %185 = load i16*, i16** %184, align 8
  %186 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %187 = select i1 %100, i16* %185, i16* %186
  %188 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %189 = load i64, i64* %188, align 8
  %190 = zext i8 %99 to i64
  %191 = select i1 %100, i64 %189, i64 %190
  %192 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %193 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %192, i64 0, i32 1, i32 1
  %194 = load i8, i8* %193, align 1
  %195 = icmp slt i8 %194, 0
  %196 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %197 = load i16*, i16** %196, align 8
  %198 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %199 = select i1 %195, i16* %197, i16* %198
  %200 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %201 = load i64, i64* %200, align 8
  %202 = zext i8 %194 to i64
  %203 = select i1 %195, i64 %201, i64 %202
  %204 = tail call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_11CompareCaseE(i16* %187, i64 %191, i16* %199, i64 %203, i32 0) #11
  br i1 %204, label %229, label %205

205:                                              ; preds = %183
  %206 = tail call zeroext i1 @_ZN8autofill30IsFeatureSubstringMatchEnabledEv() #11
  br i1 %206, label %207, label %229

207:                                              ; preds = %205
  %208 = load i8, i8* %98, align 1
  %209 = icmp slt i8 %208, 0
  br i1 %209, label %210, label %212

210:                                              ; preds = %207
  %211 = load i64, i64* %188, align 8
  br label %214

212:                                              ; preds = %207
  %213 = zext i8 %208 to i64
  br label %214

214:                                              ; preds = %210, %212
  %215 = phi i64 [ %211, %210 ], [ %213, %212 ]
  %216 = load i8, i8* %193, align 1
  %217 = icmp slt i8 %216, 0
  br i1 %217, label %218, label %220

218:                                              ; preds = %214
  %219 = load i64, i64* %200, align 8
  br label %222

220:                                              ; preds = %214
  %221 = zext i8 %216 to i64
  br label %222

222:                                              ; preds = %218, %220
  %223 = phi i64 [ %219, %218 ], [ %221, %220 ]
  %224 = icmp ult i64 %215, %223
  br i1 %224, label %229, label %225

225:                                              ; preds = %222
  %226 = tail call i64 @_ZN8autofill21GetTextSelectionStartERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_b(%"class.std::__1::basic_string"* dereferenceable(24) %0, %"class.std::__1::basic_string"* dereferenceable(24) %1, i1 zeroext false) #11
  %227 = icmp eq i64 %226, -1
  br i1 %227, label %229, label %228

228:                                              ; preds = %225
  store i8 0, i8* %4, align 1
  br label %229

229:                                              ; preds = %178, %88, %26, %205, %222, %225, %183, %228, %182
  %230 = phi i1 [ true, %182 ], [ true, %228 ], [ false, %178 ], [ true, %183 ], [ false, %225 ], [ false, %222 ], [ false, %205 ], [ true, %26 ], [ true, %88 ]
  ret i1 %230
}

declare i32 @_ZNK8autofill12AutofillType5groupEv(%"class.autofill::AutofillType"*) local_unnamed_addr #2

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, i8*, i64) local_unnamed_addr #2

declare void @_ZN8autofill4i18n31FormatPhoneNationallyForDisplayERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_(%"class.std::__1::basic_string.4"* sret, %"class.std::__1::basic_string.4"* dereferenceable(24), %"class.std::__1::basic_string.4"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.4"* sret, i16*, i64) local_unnamed_addr #2

declare void @_ZN8autofill9data_util26GetCountryCodeWithFallbackERKNS_15AutofillProfileERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.std::__1::basic_string.4"* sret, %"class.autofill::AutofillProfile"* dereferenceable(2856), %"class.std::__1::basic_string.4"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN8autofill10SuggestionC1ENSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"struct.autofill::Suggestion"*, %"class.std::__1::basic_string"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8autofill10SuggestionD1Ev(%"struct.autofill::Suggestion"*) unnamed_addr #3

declare zeroext i1 @_ZN8autofill30IsFeatureSubstringMatchEnabledEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill20suggestion_selection20GetUniqueSuggestionsERKNSt3__16vectorINS_15ServerFieldTypeENS1_9allocatorIS3_EEEERKNS_25AutofillProfileComparatorENS1_12basic_stringIcNS1_11char_traitsIcEENS4_IcEEEENS2_IPNS_15AutofillProfileENS4_ISI_EEEERKNS2_INS_10SuggestionENS4_ISL_EEEEPSK_(%"class.std::__1::vector.71"* noalias sret, %"class.std::__1::vector.80"* nocapture readonly dereferenceable(24), %"class.autofill::AutofillProfileComparator"* dereferenceable(32), %"class.std::__1::basic_string.4"*, %"class.std::__1::vector"* nocapture readonly, %"class.std::__1::vector.71"* nocapture readonly dereferenceable(24), %"class.std::__1::vector"*) local_unnamed_addr #0 {
  %8 = alloca %"class.autofill::DenseSet", align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.71", %"class.std::__1::vector.71"* %0, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.std::__1::vector.71", %"class.std::__1::vector.71"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %11 = bitcast %"class.std::__1::vector.71"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #11
  %12 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN8autofill8features25kAutofillPruneSuggestionsE) #11
  %13 = select i1 %12, i64 3, i64 10
  %14 = bitcast %"class.autofill::DenseSet"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #11
  %15 = getelementptr inbounds %"class.std::__1::vector.80", %"class.std::__1::vector.80"* %1, i64 0, i32 0, i32 0
  %16 = load i32*, i32** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::vector.80", %"class.std::__1::vector.80"* %1, i64 0, i32 0, i32 1
  %18 = load i32*, i32** %17, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 16, i1 false) #11
  %19 = icmp eq i32* %16, %18
  br i1 %19, label %35, label %20

20:                                               ; preds = %7, %26
  %21 = phi i32* [ %33, %26 ], [ %16, %7 ]
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i64
  %24 = icmp ugt i32 %22, 118
  br i1 %24, label %25, label %26

25:                                               ; preds = %20
  tail call void @abort() #13, !noalias !44
  unreachable

26:                                               ; preds = %20
  %27 = lshr i64 %23, 6
  %28 = and i64 %23, 63
  %29 = shl i64 1, %28
  %30 = getelementptr inbounds %"class.autofill::DenseSet", %"class.autofill::DenseSet"* %8, i64 0, i32 0, i32 0, i32 0, i64 %27
  %31 = load i64, i64* %30, align 8, !noalias !44
  %32 = or i64 %31, %29
  store i64 %32, i64* %30, align 8, !noalias !44
  %33 = getelementptr inbounds i32, i32* %21, i64 1
  %34 = icmp eq i32* %33, %18
  br i1 %34, label %35, label %20

35:                                               ; preds = %26, %7
  %36 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %37 = bitcast %"class.autofill::AutofillProfile"*** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.std::__1::vector"* %4 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %38, %40
  br i1 %41, label %52, label %42

42:                                               ; preds = %35
  %43 = bitcast %"struct.autofill::Suggestion"** %9 to i64*
  %44 = bitcast %"class.std::__1::vector.71"* %0 to i64*
  %45 = getelementptr inbounds %"class.std::__1::vector.71", %"class.std::__1::vector.71"* %5, i64 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %47 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %48 = bitcast %"class.autofill::AutofillProfile"*** %46 to i64*
  %49 = bitcast %"class.std::__1::vector"* %6 to i64*
  %50 = bitcast %"class.autofill::AutofillProfile"*** %47 to i64*
  %51 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  br label %53

52:                                               ; preds = %197, %190, %35
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #11
  ret void

53:                                               ; preds = %42, %197
  %54 = phi i64 [ %40, %42 ], [ %193, %197 ]
  %55 = phi i64 [ 0, %42 ], [ %191, %197 ]
  %56 = phi i64 [ %38, %42 ], [ %192, %197 ]
  %57 = inttoptr i64 %54 to %"class.autofill::AutofillProfile"**
  %58 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %57, i64 %55
  %59 = load %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %58, align 8
  %60 = icmp eq i64 %56, %54
  br i1 %60, label %112, label %61

61:                                               ; preds = %53, %102
  %62 = phi %"class.autofill::AutofillProfile"** [ %109, %102 ], [ %57, %53 ]
  %63 = phi i64 [ %103, %102 ], [ 0, %53 ]
  %64 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %62, i64 %63
  %65 = load %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %64, align 8
  %66 = icmp eq i64 %55, %63
  br i1 %66, label %102, label %67

67:                                               ; preds = %61
  %68 = load %"struct.autofill::Suggestion"*, %"struct.autofill::Suggestion"** %45, align 8
  %69 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %68, i64 %55, i32 2
  %70 = bitcast %"class.std::__1::basic_string"* %69 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %70, i64 0, i32 1, i32 1
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %69, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load i16*, i16** %74, align 8
  %76 = bitcast %"class.std::__1::basic_string"* %69 to i16*
  %77 = select i1 %73, i16* %75, i16* %76
  %78 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %68, i64 %55, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %79 = load i64, i64* %78, align 8
  %80 = zext i8 %72 to i64
  %81 = select i1 %73, i64 %79, i64 %80
  %82 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %68, i64 %63, i32 2
  %83 = bitcast %"class.std::__1::basic_string"* %82 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %84 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %83, i64 0, i32 1, i32 1
  %85 = load i8, i8* %84, align 1
  %86 = icmp slt i8 %85, 0
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %82, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load i16*, i16** %87, align 8
  %89 = bitcast %"class.std::__1::basic_string"* %82 to i16*
  %90 = select i1 %86, i16* %88, i16* %89
  %91 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %68, i64 %63, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %92 = load i64, i64* %91, align 8
  %93 = zext i8 %85 to i64
  %94 = select i1 %86, i64 %92, i64 %93
  %95 = call zeroext i1 @_ZNK8autofill25AutofillProfileComparator7CompareEN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES6_NS0_14WhitespaceSpecE(%"class.autofill::AutofillProfileComparator"* %2, i16* %77, i64 %81, i16* %90, i64 %94, i32 1) #11
  br i1 %95, label %96, label %102

96:                                               ; preds = %67
  %97 = call zeroext i1 @_ZNK8autofill15AutofillProfile21IsSubsetOfForFieldSetERKNS_25AutofillProfileComparatorERKS0_RKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEERKNS_8DenseSetINS_15ServerFieldTypeELSG_118EEE(%"class.autofill::AutofillProfile"* %59, %"class.autofill::AutofillProfileComparator"* dereferenceable(32) %2, %"class.autofill::AutofillProfile"* dereferenceable(2856) %65, %"class.std::__1::basic_string.4"* dereferenceable(24) %3, %"class.autofill::DenseSet"* nonnull dereferenceable(16) %8) #11
  br i1 %97, label %98, label %102

98:                                               ; preds = %96
  %99 = icmp ult i64 %55, %63
  br i1 %99, label %100, label %190

100:                                              ; preds = %98
  %101 = call zeroext i1 @_ZNK8autofill15AutofillProfile21IsSubsetOfForFieldSetERKNS_25AutofillProfileComparatorERKS0_RKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEERKNS_8DenseSetINS_15ServerFieldTypeELSG_118EEE(%"class.autofill::AutofillProfile"* %65, %"class.autofill::AutofillProfileComparator"* dereferenceable(32) %2, %"class.autofill::AutofillProfile"* dereferenceable(2856) %59, %"class.std::__1::basic_string.4"* dereferenceable(24) %3, %"class.autofill::DenseSet"* nonnull dereferenceable(16) %8) #11
  br i1 %101, label %102, label %190

102:                                              ; preds = %96, %61, %67, %100
  %103 = add nuw i64 %63, 1
  %104 = load i64, i64* %37, align 8
  %105 = load i64, i64* %39, align 8
  %106 = sub i64 %104, %105
  %107 = ashr exact i64 %106, 3
  %108 = icmp ult i64 %103, %107
  %109 = inttoptr i64 %105 to %"class.autofill::AutofillProfile"**
  br i1 %108, label %61, label %110

110:                                              ; preds = %102
  %111 = inttoptr i64 %105 to %"class.autofill::AutofillProfile"**
  br label %112

112:                                              ; preds = %110, %53
  %113 = phi %"class.autofill::AutofillProfile"** [ %57, %53 ], [ %111, %110 ]
  %114 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %113, i64 %55
  %115 = load %"class.autofill::AutofillProfile"**, %"class.autofill::AutofillProfile"*** %46, align 8
  %116 = load %"class.autofill::AutofillProfile"**, %"class.autofill::AutofillProfile"*** %47, align 8
  %117 = icmp eq %"class.autofill::AutofillProfile"** %115, %116
  %118 = ptrtoint %"class.autofill::AutofillProfile"** %116 to i64
  br i1 %117, label %125, label %119

119:                                              ; preds = %112
  %120 = bitcast %"class.autofill::AutofillProfile"** %114 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = bitcast %"class.autofill::AutofillProfile"** %115 to i64*
  store i64 %121, i64* %122, align 8
  %123 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %115, i64 1
  %124 = ptrtoint %"class.autofill::AutofillProfile"** %123 to i64
  store i64 %124, i64* %48, align 8
  br label %180

125:                                              ; preds = %112
  %126 = ptrtoint %"class.autofill::AutofillProfile"** %115 to i64
  %127 = load i64, i64* %49, align 8
  %128 = sub i64 %126, %127
  %129 = ashr exact i64 %128, 3
  %130 = add nsw i64 %129, 1
  %131 = icmp ugt i64 %130, 2305843009213693951
  br i1 %131, label %132, label %134

132:                                              ; preds = %125
  %133 = bitcast %"class.std::__1::vector"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %133) #13
  unreachable

134:                                              ; preds = %125
  %135 = sub i64 %118, %127
  %136 = ashr exact i64 %135, 3
  %137 = icmp ult i64 %136, 1152921504606846975
  br i1 %137, label %138, label %146

138:                                              ; preds = %134
  %139 = ashr exact i64 %135, 2
  %140 = icmp ult i64 %139, %130
  %141 = select i1 %140, i64 %130, i64 %139
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %151, label %143

143:                                              ; preds = %138
  %144 = icmp ugt i64 %141, 2305843009213693951
  br i1 %144, label %145, label %146

145:                                              ; preds = %143
  call void @abort() #13
  unreachable

146:                                              ; preds = %143, %134
  %147 = phi i64 [ %141, %143 ], [ 2305843009213693951, %134 ]
  %148 = shl i64 %147, 3
  %149 = call i8* @_Znwm(i64 %148) #12
  %150 = bitcast i8* %149 to %"class.autofill::AutofillProfile"**
  br label %151

151:                                              ; preds = %146, %138
  %152 = phi i64 [ %147, %146 ], [ 0, %138 ]
  %153 = phi %"class.autofill::AutofillProfile"** [ %150, %146 ], [ null, %138 ]
  %154 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %153, i64 %129
  %155 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %153, i64 %152
  %156 = ptrtoint %"class.autofill::AutofillProfile"** %155 to i64
  %157 = bitcast %"class.autofill::AutofillProfile"** %114 to i64*
  %158 = load i64, i64* %157, align 8
  %159 = bitcast %"class.autofill::AutofillProfile"** %154 to i64*
  store i64 %158, i64* %159, align 8
  %160 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %154, i64 1
  %161 = ptrtoint %"class.autofill::AutofillProfile"** %160 to i64
  %162 = load %"class.autofill::AutofillProfile"**, %"class.autofill::AutofillProfile"*** %51, align 8
  %163 = load i64, i64* %48, align 8
  %164 = ptrtoint %"class.autofill::AutofillProfile"** %162 to i64
  %165 = sub i64 %163, %164
  %166 = ashr exact i64 %165, 3
  %167 = sub nsw i64 0, %166
  %168 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %154, i64 %167
  %169 = ptrtoint %"class.autofill::AutofillProfile"** %168 to i64
  %170 = icmp sgt i64 %165, 0
  br i1 %170, label %171, label %175

171:                                              ; preds = %151
  %172 = bitcast %"class.autofill::AutofillProfile"** %168 to i8*
  %173 = bitcast %"class.autofill::AutofillProfile"** %162 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %172, i8* align 8 %173, i64 %165, i1 false) #11
  %174 = load %"class.autofill::AutofillProfile"**, %"class.autofill::AutofillProfile"*** %51, align 8
  br label %175

175:                                              ; preds = %171, %151
  %176 = phi %"class.autofill::AutofillProfile"** [ %162, %151 ], [ %174, %171 ]
  store i64 %169, i64* %49, align 8
  store i64 %161, i64* %48, align 8
  store i64 %156, i64* %50, align 8
  %177 = icmp eq %"class.autofill::AutofillProfile"** %176, null
  br i1 %177, label %180, label %178

178:                                              ; preds = %175
  %179 = bitcast %"class.autofill::AutofillProfile"** %176 to i8*
  call void @_ZdlPv(i8* %179) #12
  br label %180

180:                                              ; preds = %119, %175, %178
  %181 = load %"struct.autofill::Suggestion"*, %"struct.autofill::Suggestion"** %45, align 8
  %182 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %181, i64 %55
  %183 = load %"struct.autofill::Suggestion"*, %"struct.autofill::Suggestion"** %9, align 8
  %184 = load %"struct.autofill::Suggestion"*, %"struct.autofill::Suggestion"** %10, align 8
  %185 = icmp eq %"struct.autofill::Suggestion"* %183, %184
  br i1 %185, label %189, label %186

186:                                              ; preds = %180
  call void @_ZN8autofill10SuggestionC1ERKS0_(%"struct.autofill::Suggestion"* %183, %"struct.autofill::Suggestion"* dereferenceable(216) %182) #11
  %187 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %183, i64 1
  %188 = ptrtoint %"struct.autofill::Suggestion"* %187 to i64
  store i64 %188, i64* %43, align 8
  br label %190

189:                                              ; preds = %180
  call void @_ZNSt3__16vectorIN8autofill10SuggestionENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.71"* %0, %"struct.autofill::Suggestion"* dereferenceable(216) %182) #11
  br label %190

190:                                              ; preds = %100, %98, %189, %186
  %191 = add nuw i64 %55, 1
  %192 = load i64, i64* %37, align 8
  %193 = load i64, i64* %39, align 8
  %194 = sub i64 %192, %193
  %195 = ashr exact i64 %194, 3
  %196 = icmp ult i64 %191, %195
  br i1 %196, label %197, label %52

197:                                              ; preds = %190
  %198 = load i64, i64* %43, align 8
  %199 = load i64, i64* %44, align 8
  %200 = sub i64 %198, %199
  %201 = sdiv exact i64 %200, 216
  %202 = icmp ult i64 %201, %13
  br i1 %202, label %53, label %52
}

declare zeroext i1 @_ZNK8autofill25AutofillProfileComparator7CompareEN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES6_NS0_14WhitespaceSpecE(%"class.autofill::AutofillProfileComparator"*, i16*, i64, i16*, i64, i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK8autofill15AutofillProfile21IsSubsetOfForFieldSetERKNS_25AutofillProfileComparatorERKS0_RKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEERKNS_8DenseSetINS_15ServerFieldTypeELSG_118EEE(%"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfileComparator"* dereferenceable(32), %"class.autofill::AutofillProfile"* dereferenceable(2856), %"class.std::__1::basic_string.4"* dereferenceable(24), %"class.autofill::DenseSet"* dereferenceable(16)) local_unnamed_addr #2

declare zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_11CompareCaseE(i16*, i64, i16*, i64, i32) local_unnamed_addr #2

declare i64 @_ZN8autofill21GetTextSelectionStartERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_b(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill20suggestion_selection35RemoveProfilesNotUsedSinceTimestampEN4base4TimeEPNSt3__16vectorIPNS_15AutofillProfileENS3_9allocatorIS6_EEEE(i64, %"class.std::__1::vector"* nocapture) local_unnamed_addr #0 {
  %3 = alloca %class.anon.90, align 8
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %5 = bitcast %"class.autofill::AutofillProfile"*** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 3
  %11 = inttoptr i64 %8 to %"class.autofill::AutofillProfile"**
  %12 = inttoptr i64 %6 to %"class.autofill::AutofillProfile"**
  %13 = bitcast %class.anon.90* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  %14 = getelementptr inbounds %class.anon.90, %class.anon.90* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %0, i64* %14, align 8
  %15 = icmp eq %"class.autofill::AutofillProfile"** %11, %12
  br i1 %15, label %59, label %16

16:                                               ; preds = %2, %23
  %17 = phi %"class.autofill::AutofillProfile"** [ %24, %23 ], [ %11, %2 ]
  %18 = bitcast %"class.autofill::AutofillProfile"** %17 to %"class.autofill::AutofillDataModel"**
  %19 = load %"class.autofill::AutofillDataModel"*, %"class.autofill::AutofillDataModel"** %18, align 8
  %20 = getelementptr inbounds %"class.autofill::AutofillDataModel", %"class.autofill::AutofillDataModel"* %19, i64 0, i32 4, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = icmp sgt i64 %21, %0
  br i1 %22, label %23, label %26

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %17, i64 1
  %25 = icmp eq %"class.autofill::AutofillProfile"** %24, %12
  br i1 %25, label %59, label %16

26:                                               ; preds = %16, %30
  %27 = phi %"class.autofill::AutofillProfile"** [ %28, %30 ], [ %12, %16 ]
  %28 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %27, i64 -1
  %29 = icmp eq %"class.autofill::AutofillProfile"** %17, %28
  br i1 %29, label %59, label %30

30:                                               ; preds = %26
  %31 = bitcast %"class.autofill::AutofillProfile"** %28 to %"class.autofill::AutofillDataModel"**
  %32 = load %"class.autofill::AutofillDataModel"*, %"class.autofill::AutofillDataModel"** %31, align 8
  %33 = getelementptr inbounds %"class.autofill::AutofillDataModel", %"class.autofill::AutofillDataModel"* %32, i64 0, i32 4, i32 0, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = icmp sgt i64 %34, %0
  br i1 %35, label %36, label %26

36:                                               ; preds = %30
  %37 = ptrtoint %"class.autofill::AutofillProfile"** %17 to i64
  %38 = ptrtoint %"class.autofill::AutofillProfile"** %28 to i64
  %39 = sub i64 %38, %37
  %40 = ashr exact i64 %39, 3
  %41 = add nsw i64 %40, 1
  %42 = icmp sgt i64 %39, 16
  br i1 %42, label %43, label %54

43:                                               ; preds = %36
  %44 = icmp slt i64 %41, 1152921504606846975
  %45 = select i1 %44, i64 %41, i64 1152921504606846975
  br label %46

46:                                               ; preds = %51, %43
  %47 = phi i64 [ %52, %51 ], [ %45, %43 ]
  %48 = shl i64 %47, 3
  %49 = tail call noalias i8* @_ZnwmRKSt9nothrow_t(i64 %48, %"struct.std::nothrow_t"* nonnull dereferenceable(1) @_ZSt7nothrow) #11
  %50 = icmp eq i8* %49, null
  br i1 %50, label %51, label %56

51:                                               ; preds = %46
  %52 = lshr i64 %47, 1
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %54, label %46

54:                                               ; preds = %51, %36
  %55 = call fastcc %"class.autofill::AutofillProfile"** @"_ZNSt3__118__stable_partitionIRZN8autofill20suggestion_selection35RemoveProfilesNotUsedSinceTimestampEN4base4TimeEPNS_6vectorIPNS1_15AutofillProfileENS_9allocatorIS7_EEEEE3$_1NS_11__wrap_iterIPS7_EElNS_4pairISF_lEEEET0_SJ_SJ_T_T1_T2_NS_26bidirectional_iterator_tagE"(%"class.autofill::AutofillProfile"** %17, %"class.autofill::AutofillProfile"** %28, %class.anon.90* nonnull dereferenceable(8) %3, i64 %41, %"class.autofill::AutofillProfile"** null, i64 0) #11
  br label %59

56:                                               ; preds = %46
  %57 = bitcast i8* %49 to %"class.autofill::AutofillProfile"**
  %58 = call fastcc %"class.autofill::AutofillProfile"** @"_ZNSt3__118__stable_partitionIRZN8autofill20suggestion_selection35RemoveProfilesNotUsedSinceTimestampEN4base4TimeEPNS_6vectorIPNS1_15AutofillProfileENS_9allocatorIS7_EEEEE3$_1NS_11__wrap_iterIPS7_EElNS_4pairISF_lEEEET0_SJ_SJ_T_T1_T2_NS_26bidirectional_iterator_tagE"(%"class.autofill::AutofillProfile"** %17, %"class.autofill::AutofillProfile"** %28, %class.anon.90* nonnull dereferenceable(8) %3, i64 %41, %"class.autofill::AutofillProfile"** nonnull %57, i64 %47) #11
  call void @_ZdlPv(i8* nonnull %49) #12
  br label %59

59:                                               ; preds = %23, %26, %2, %54, %56
  %60 = phi %"class.autofill::AutofillProfile"** [ %58, %56 ], [ %11, %2 ], [ %55, %54 ], [ %17, %26 ], [ %12, %23 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  %61 = load %"class.autofill::AutofillProfile"**, %"class.autofill::AutofillProfile"*** %4, align 8
  %62 = icmp eq %"class.autofill::AutofillProfile"** %60, %61
  br i1 %62, label %64, label %63

63:                                               ; preds = %59
  store %"class.autofill::AutofillProfile"** %60, %"class.autofill::AutofillProfile"*** %4, align 8
  br label %64

64:                                               ; preds = %59, %63
  %65 = phi %"class.autofill::AutofillProfile"** [ %61, %59 ], [ %60, %63 ]
  %66 = ptrtoint %"class.autofill::AutofillProfile"** %65 to i64
  %67 = load i64, i64* %7, align 8
  %68 = sub i64 %66, %67
  %69 = ashr exact i64 %68, 3
  %70 = sub nsw i64 %10, %69
  call void @_ZN8autofill15AutofillMetrics39LogNumberOfAddressesSuppressedForDisuseEm(i64 %70) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN8autofill15AutofillMetrics39LogNumberOfAddressesSuppressedForDisuseEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill20suggestion_selection18PrepareSuggestionsERKNSt3__16vectorINS1_12basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEENS6_IS8_EEEEPNS2_INS_10SuggestionENS6_ISD_EEEERKNS_25AutofillProfileComparatorE(%"class.std::__1::vector.45"* nocapture readonly dereferenceable(24), %"class.std::__1::vector.71"*, %"class.autofill::AutofillProfileComparator"* dereferenceable(32)) local_unnamed_addr #0 {
  %4 = alloca %"class.std::__1::unordered_set", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = bitcast %"class.std::__1::unordered_set"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %8) #11
  %9 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %4, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %4, i64 0, i32 0, i32 4, i64 0
  %12 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %4, i64 0, i32 0, i32 3
  %13 = bitcast %"class.std::__1::__compressed_pair.106"* %12 to i32*
  %14 = bitcast i8* %11 to i32*
  store i32 -1431655766, i32* %14, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %0, i64 0, i32 0, i32 1
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.std::__1::vector.45"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %17, %19
  br i1 %20, label %44, label %21

21:                                               ; preds = %3
  %22 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %25 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %0, i64 0, i32 0, i32 0
  %26 = bitcast %"class.std::__1::basic_string"* %5 to i8**
  %27 = bitcast %"class.std::__1::basic_string"* %5 to i16*
  %28 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %28, i64 0, i32 1, i32 1
  %30 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %32 = getelementptr inbounds %"class.std::__1::vector.71", %"class.std::__1::vector.71"* %1, i64 0, i32 0, i32 0
  %33 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %33, i64 0, i32 1, i32 1
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = bitcast %"class.std::__1::basic_string"* %7 to i16*
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %4, i64 0, i32 0
  %39 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %39, i64 0, i32 1, i32 1
  %41 = bitcast %"class.std::__1::basic_string"* %6 to i8**
  %42 = bitcast %"class.std::__1::basic_string"* %7 to i8**
  %43 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  br label %54

44:                                               ; preds = %311, %3
  %45 = phi i64 [ 0, %3 ], [ %306, %311 ]
  %46 = getelementptr inbounds %"class.std::__1::vector.71", %"class.std::__1::vector.71"* %1, i64 0, i32 0, i32 1
  %47 = bitcast %"struct.autofill::Suggestion"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.std::__1::vector.71"* %1 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = sub i64 %48, %50
  %52 = sdiv exact i64 %51, 216
  %53 = icmp ult i64 %45, %52
  br i1 %53, label %318, label %328

54:                                               ; preds = %21, %311
  %55 = phi i64 [ %19, %21 ], [ %314, %311 ]
  %56 = phi i64 [ 0, %21 ], [ %306, %311 ]
  %57 = phi i64 [ 0, %21 ], [ %312, %311 ]
  %58 = inttoptr i64 %55 to %"class.std::__1::basic_string"*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #11
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %58, i64 %57
  %60 = bitcast %"class.std::__1::basic_string"* %59 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %60, i64 0, i32 1, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 24, i1 false)
  %62 = load i8, i8* %61, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %66, label %64

64:                                               ; preds = %54
  %65 = bitcast %"class.std::__1::basic_string"* %59 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* align 8 %65, i64 24, i1 false) #11
  br label %236

66:                                               ; preds = %54
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load i16*, i16** %67, align 8
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %58, i64 %57, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %70 = load i64, i64* %69, align 8
  %71 = icmp ult i64 %70, 11
  br i1 %71, label %72, label %74

72:                                               ; preds = %66
  %73 = trunc i64 %70 to i8
  store i8 %73, i8* %29, align 1
  br label %88

74:                                               ; preds = %66
  %75 = icmp ugt i64 %70, 9223372036854775791
  br i1 %75, label %76, label %78

76:                                               ; preds = %74
  %77 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %77) #13
  unreachable

78:                                               ; preds = %74
  %79 = add nuw nsw i64 %70, 8
  %80 = and i64 %79, -8
  %81 = icmp slt i64 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %78
  call void @abort() #13
  unreachable

83:                                               ; preds = %78
  %84 = shl i64 %80, 1
  %85 = call i8* @_Znwm(i64 %84) #12
  %86 = bitcast i8* %85 to i16*
  store i8* %85, i8** %26, align 8
  %87 = or i64 %80, -9223372036854775808
  store i64 %87, i64* %24, align 8
  store i64 %70, i64* %23, align 8
  br label %88

88:                                               ; preds = %83, %72
  %89 = phi i16* [ %27, %72 ], [ %86, %83 ]
  %90 = add nuw nsw i64 %70, 1
  %91 = add i64 %70, 1
  %92 = icmp ult i64 %91, 16
  br i1 %92, label %183, label %93

93:                                               ; preds = %88
  %94 = getelementptr i16, i16* %89, i64 1
  %95 = getelementptr i16, i16* %94, i64 %70
  %96 = getelementptr i16, i16* %68, i64 1
  %97 = getelementptr i16, i16* %96, i64 %70
  %98 = icmp ult i16* %89, %97
  %99 = icmp ult i16* %68, %95
  %100 = and i1 %98, %99
  br i1 %100, label %183, label %101

101:                                              ; preds = %93
  %102 = and i64 %91, -16
  %103 = sub i64 %90, %102
  %104 = getelementptr i16, i16* %68, i64 %102
  %105 = getelementptr i16, i16* %89, i64 %102
  %106 = add i64 %102, -16
  %107 = lshr exact i64 %106, 4
  %108 = add nuw nsw i64 %107, 1
  %109 = and i64 %108, 3
  %110 = icmp ult i64 %106, 48
  br i1 %110, label %162, label %111

111:                                              ; preds = %101
  %112 = sub nsw i64 %108, %109
  br label %113

113:                                              ; preds = %113, %111
  %114 = phi i64 [ 0, %111 ], [ %159, %113 ]
  %115 = phi i64 [ %112, %111 ], [ %160, %113 ]
  %116 = getelementptr i16, i16* %68, i64 %114
  %117 = getelementptr i16, i16* %89, i64 %114
  %118 = bitcast i16* %116 to <8 x i16>*
  %119 = load <8 x i16>, <8 x i16>* %118, align 2, !alias.scope !47
  %120 = getelementptr i16, i16* %116, i64 8
  %121 = bitcast i16* %120 to <8 x i16>*
  %122 = load <8 x i16>, <8 x i16>* %121, align 2, !alias.scope !47
  %123 = bitcast i16* %117 to <8 x i16>*
  store <8 x i16> %119, <8 x i16>* %123, align 2, !alias.scope !50, !noalias !47
  %124 = getelementptr i16, i16* %117, i64 8
  %125 = bitcast i16* %124 to <8 x i16>*
  store <8 x i16> %122, <8 x i16>* %125, align 2, !alias.scope !50, !noalias !47
  %126 = or i64 %114, 16
  %127 = getelementptr i16, i16* %68, i64 %126
  %128 = getelementptr i16, i16* %89, i64 %126
  %129 = bitcast i16* %127 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !47
  %131 = getelementptr i16, i16* %127, i64 8
  %132 = bitcast i16* %131 to <8 x i16>*
  %133 = load <8 x i16>, <8 x i16>* %132, align 2, !alias.scope !47
  %134 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %130, <8 x i16>* %134, align 2, !alias.scope !50, !noalias !47
  %135 = getelementptr i16, i16* %128, i64 8
  %136 = bitcast i16* %135 to <8 x i16>*
  store <8 x i16> %133, <8 x i16>* %136, align 2, !alias.scope !50, !noalias !47
  %137 = or i64 %114, 32
  %138 = getelementptr i16, i16* %68, i64 %137
  %139 = getelementptr i16, i16* %89, i64 %137
  %140 = bitcast i16* %138 to <8 x i16>*
  %141 = load <8 x i16>, <8 x i16>* %140, align 2, !alias.scope !47
  %142 = getelementptr i16, i16* %138, i64 8
  %143 = bitcast i16* %142 to <8 x i16>*
  %144 = load <8 x i16>, <8 x i16>* %143, align 2, !alias.scope !47
  %145 = bitcast i16* %139 to <8 x i16>*
  store <8 x i16> %141, <8 x i16>* %145, align 2, !alias.scope !50, !noalias !47
  %146 = getelementptr i16, i16* %139, i64 8
  %147 = bitcast i16* %146 to <8 x i16>*
  store <8 x i16> %144, <8 x i16>* %147, align 2, !alias.scope !50, !noalias !47
  %148 = or i64 %114, 48
  %149 = getelementptr i16, i16* %68, i64 %148
  %150 = getelementptr i16, i16* %89, i64 %148
  %151 = bitcast i16* %149 to <8 x i16>*
  %152 = load <8 x i16>, <8 x i16>* %151, align 2, !alias.scope !47
  %153 = getelementptr i16, i16* %149, i64 8
  %154 = bitcast i16* %153 to <8 x i16>*
  %155 = load <8 x i16>, <8 x i16>* %154, align 2, !alias.scope !47
  %156 = bitcast i16* %150 to <8 x i16>*
  store <8 x i16> %152, <8 x i16>* %156, align 2, !alias.scope !50, !noalias !47
  %157 = getelementptr i16, i16* %150, i64 8
  %158 = bitcast i16* %157 to <8 x i16>*
  store <8 x i16> %155, <8 x i16>* %158, align 2, !alias.scope !50, !noalias !47
  %159 = add i64 %114, 64
  %160 = add i64 %115, -4
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %162, label %113, !llvm.loop !52

162:                                              ; preds = %113, %101
  %163 = phi i64 [ 0, %101 ], [ %159, %113 ]
  %164 = icmp eq i64 %109, 0
  br i1 %164, label %181, label %165

165:                                              ; preds = %162, %165
  %166 = phi i64 [ %178, %165 ], [ %163, %162 ]
  %167 = phi i64 [ %179, %165 ], [ %109, %162 ]
  %168 = getelementptr i16, i16* %68, i64 %166
  %169 = getelementptr i16, i16* %89, i64 %166
  %170 = bitcast i16* %168 to <8 x i16>*
  %171 = load <8 x i16>, <8 x i16>* %170, align 2, !alias.scope !47
  %172 = getelementptr i16, i16* %168, i64 8
  %173 = bitcast i16* %172 to <8 x i16>*
  %174 = load <8 x i16>, <8 x i16>* %173, align 2, !alias.scope !47
  %175 = bitcast i16* %169 to <8 x i16>*
  store <8 x i16> %171, <8 x i16>* %175, align 2, !alias.scope !50, !noalias !47
  %176 = getelementptr i16, i16* %169, i64 8
  %177 = bitcast i16* %176 to <8 x i16>*
  store <8 x i16> %174, <8 x i16>* %177, align 2, !alias.scope !50, !noalias !47
  %178 = add i64 %166, 16
  %179 = add i64 %167, -1
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %181, label %165, !llvm.loop !53

181:                                              ; preds = %165, %162
  %182 = icmp eq i64 %91, %102
  br i1 %182, label %236, label %183

183:                                              ; preds = %181, %93, %88
  %184 = phi i64 [ %90, %93 ], [ %90, %88 ], [ %103, %181 ]
  %185 = phi i16* [ %68, %93 ], [ %68, %88 ], [ %104, %181 ]
  %186 = phi i16* [ %89, %93 ], [ %89, %88 ], [ %105, %181 ]
  %187 = add i64 %184, -1
  %188 = and i64 %184, 7
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %201, label %190

190:                                              ; preds = %183, %190
  %191 = phi i64 [ %196, %190 ], [ %184, %183 ]
  %192 = phi i16* [ %198, %190 ], [ %185, %183 ]
  %193 = phi i16* [ %197, %190 ], [ %186, %183 ]
  %194 = phi i64 [ %199, %190 ], [ %188, %183 ]
  %195 = load i16, i16* %192, align 2
  store i16 %195, i16* %193, align 2
  %196 = add i64 %191, -1
  %197 = getelementptr inbounds i16, i16* %193, i64 1
  %198 = getelementptr inbounds i16, i16* %192, i64 1
  %199 = add i64 %194, -1
  %200 = icmp eq i64 %199, 0
  br i1 %200, label %201, label %190, !llvm.loop !54

201:                                              ; preds = %190, %183
  %202 = phi i64 [ %184, %183 ], [ %196, %190 ]
  %203 = phi i16* [ %185, %183 ], [ %198, %190 ]
  %204 = phi i16* [ %186, %183 ], [ %197, %190 ]
  %205 = icmp ult i64 %187, 7
  br i1 %205, label %236, label %206

206:                                              ; preds = %201, %206
  %207 = phi i64 [ %232, %206 ], [ %202, %201 ]
  %208 = phi i16* [ %234, %206 ], [ %203, %201 ]
  %209 = phi i16* [ %233, %206 ], [ %204, %201 ]
  %210 = load i16, i16* %208, align 2
  store i16 %210, i16* %209, align 2
  %211 = getelementptr inbounds i16, i16* %209, i64 1
  %212 = getelementptr inbounds i16, i16* %208, i64 1
  %213 = load i16, i16* %212, align 2
  store i16 %213, i16* %211, align 2
  %214 = getelementptr inbounds i16, i16* %209, i64 2
  %215 = getelementptr inbounds i16, i16* %208, i64 2
  %216 = load i16, i16* %215, align 2
  store i16 %216, i16* %214, align 2
  %217 = getelementptr inbounds i16, i16* %209, i64 3
  %218 = getelementptr inbounds i16, i16* %208, i64 3
  %219 = load i16, i16* %218, align 2
  store i16 %219, i16* %217, align 2
  %220 = getelementptr inbounds i16, i16* %209, i64 4
  %221 = getelementptr inbounds i16, i16* %208, i64 4
  %222 = load i16, i16* %221, align 2
  store i16 %222, i16* %220, align 2
  %223 = getelementptr inbounds i16, i16* %209, i64 5
  %224 = getelementptr inbounds i16, i16* %208, i64 5
  %225 = load i16, i16* %224, align 2
  store i16 %225, i16* %223, align 2
  %226 = getelementptr inbounds i16, i16* %209, i64 6
  %227 = getelementptr inbounds i16, i16* %208, i64 6
  %228 = load i16, i16* %227, align 2
  store i16 %228, i16* %226, align 2
  %229 = getelementptr inbounds i16, i16* %209, i64 7
  %230 = getelementptr inbounds i16, i16* %208, i64 7
  %231 = load i16, i16* %230, align 2
  store i16 %231, i16* %229, align 2
  %232 = add i64 %207, -8
  %233 = getelementptr inbounds i16, i16* %209, i64 8
  %234 = getelementptr inbounds i16, i16* %208, i64 8
  %235 = icmp eq i64 %232, 0
  br i1 %235, label %236, label %206, !llvm.loop !55

236:                                              ; preds = %201, %206, %181, %64
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #11
  %237 = load %"struct.autofill::Suggestion"*, %"struct.autofill::Suggestion"** %32, align 8
  %238 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %237, i64 %57, i32 2
  call void @_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EERKS9_SB_(%"class.std::__1::basic_string"* nonnull sret %7, %"class.std::__1::basic_string"* dereferenceable(24) %238, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5)
  %239 = load i8, i8* %34, align 1
  %240 = icmp slt i8 %239, 0
  %241 = load i16*, i16** %35, align 8
  %242 = select i1 %240, i16* %241, i16* %36
  %243 = load i64, i64* %37, align 8
  %244 = zext i8 %239 to i64
  %245 = select i1 %240, i64 %243, i64 %244
  call void @_ZN8autofill25AutofillProfileComparator22NormalizeForComparisonEN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS0_14WhitespaceSpecE(%"class.std::__1::basic_string"* nonnull sret %6, i16* %242, i64 %245, i32 1) #11
  %246 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JS6_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* nonnull %38, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #11
  %247 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %246, 1
  %248 = and i8 %247, 1
  %249 = icmp eq i8 %248, 0
  %250 = load i8, i8* %40, align 1
  %251 = icmp slt i8 %250, 0
  br i1 %251, label %252, label %254

252:                                              ; preds = %236
  %253 = load i8*, i8** %41, align 8
  call void @_ZdlPv(i8* %253) #12
  br label %254

254:                                              ; preds = %236, %252
  %255 = load i8, i8* %34, align 1
  %256 = icmp slt i8 %255, 0
  br i1 %256, label %257, label %259

257:                                              ; preds = %254
  %258 = load i8*, i8** %42, align 8
  call void @_ZdlPv(i8* %258) #12
  br label %259

259:                                              ; preds = %254, %257
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #11
  br i1 %249, label %305, label %260

260:                                              ; preds = %259
  %261 = icmp eq i64 %56, %57
  br i1 %261, label %267, label %262

262:                                              ; preds = %260
  %263 = load %"struct.autofill::Suggestion"*, %"struct.autofill::Suggestion"** %32, align 8
  %264 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %263, i64 %57
  %265 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %263, i64 %56
  %266 = call dereferenceable(216) %"struct.autofill::Suggestion"* @_ZN8autofill10SuggestionaSERKS0_(%"struct.autofill::Suggestion"* %265, %"struct.autofill::Suggestion"* dereferenceable(216) %264) #11
  br label %267

267:                                              ; preds = %260, %262
  %268 = load %"struct.autofill::Suggestion"*, %"struct.autofill::Suggestion"** %32, align 8
  %269 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %268, i64 %56, i32 2
  %270 = bitcast %"class.std::__1::basic_string"* %269 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %271 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %270, i64 0, i32 1, i32 1
  %272 = load i8, i8* %271, align 1
  %273 = icmp slt i8 %272, 0
  %274 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %269, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %275 = load i16*, i16** %274, align 8
  %276 = bitcast %"class.std::__1::basic_string"* %269 to i16*
  %277 = select i1 %273, i16* %275, i16* %276
  %278 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %268, i64 %56, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %279 = load i64, i64* %278, align 8
  %280 = zext i8 %272 to i64
  %281 = select i1 %273, i64 %279, i64 %280
  %282 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %25, align 8
  %283 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %282, i64 %57
  %284 = bitcast %"class.std::__1::basic_string"* %283 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %285 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %284, i64 0, i32 1, i32 1
  %286 = load i8, i8* %285, align 1
  %287 = icmp slt i8 %286, 0
  %288 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %283, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %289 = load i16*, i16** %288, align 8
  %290 = bitcast %"class.std::__1::basic_string"* %283 to i16*
  %291 = select i1 %287, i16* %289, i16* %290
  %292 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %282, i64 %57, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %293 = load i64, i64* %292, align 8
  %294 = zext i8 %286 to i64
  %295 = select i1 %287, i64 %293, i64 %294
  %296 = call zeroext i1 @_ZNK8autofill25AutofillProfileComparator7CompareEN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES6_NS0_14WhitespaceSpecE(%"class.autofill::AutofillProfileComparator"* %2, i16* %277, i64 %281, i16* %291, i64 %295, i32 1) #11
  br i1 %296, label %303, label %297

297:                                              ; preds = %267
  %298 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %25, align 8
  %299 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %298, i64 %57
  %300 = load %"struct.autofill::Suggestion"*, %"struct.autofill::Suggestion"** %32, align 8
  %301 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %300, i64 %56, i32 3
  %302 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %301, %"class.std::__1::basic_string"* dereferenceable(24) %299)
  br label %303

303:                                              ; preds = %267, %297
  %304 = add i64 %56, 1
  br label %305

305:                                              ; preds = %259, %303
  %306 = phi i64 [ %304, %303 ], [ %56, %259 ]
  %307 = load i8, i8* %29, align 1
  %308 = icmp slt i8 %307, 0
  br i1 %308, label %309, label %311

309:                                              ; preds = %305
  %310 = load i8*, i8** %26, align 8
  call void @_ZdlPv(i8* %310) #12
  br label %311

311:                                              ; preds = %305, %309
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #11
  %312 = add nuw i64 %57, 1
  %313 = load i64, i64* %16, align 8
  %314 = load i64, i64* %18, align 8
  %315 = sub i64 %313, %314
  %316 = sdiv exact i64 %315, 24
  %317 = icmp ult i64 %312, %316
  br i1 %317, label %54, label %44

318:                                              ; preds = %44
  %319 = inttoptr i64 %50 to %"struct.autofill::Suggestion"*
  %320 = inttoptr i64 %48 to %"struct.autofill::Suggestion"*
  %321 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %319, i64 %45
  %322 = icmp eq %"struct.autofill::Suggestion"* %321, %320
  br i1 %322, label %327, label %323

323:                                              ; preds = %318, %323
  %324 = phi %"struct.autofill::Suggestion"* [ %325, %323 ], [ %320, %318 ]
  %325 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %324, i64 -1
  call void @_ZN8autofill10SuggestionD1Ev(%"struct.autofill::Suggestion"* %325) #11
  %326 = icmp eq %"struct.autofill::Suggestion"* %325, %321
  br i1 %326, label %327, label %323

327:                                              ; preds = %323, %318
  store %"struct.autofill::Suggestion"* %321, %"struct.autofill::Suggestion"** %46, align 8
  br label %328

328:                                              ; preds = %327, %44
  %329 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %10, align 8
  %330 = icmp eq %"struct.std::__1::__hash_node_base"* %329, null
  br i1 %330, label %346, label %331

331:                                              ; preds = %328, %343
  %332 = phi %"struct.std::__1::__hash_node_base"* [ %334, %343 ], [ %329, %328 ]
  %333 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %332, i64 0, i32 0
  %334 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %333, align 8
  %335 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %332, i64 2
  %336 = bitcast %"struct.std::__1::__hash_node_base"* %335 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %337 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %336, i64 0, i32 1, i32 1
  %338 = load i8, i8* %337, align 1
  %339 = icmp slt i8 %338, 0
  br i1 %339, label %340, label %343

340:                                              ; preds = %331
  %341 = bitcast %"struct.std::__1::__hash_node_base"* %335 to i8**
  %342 = load i8*, i8** %341, align 8
  call void @_ZdlPv(i8* %342) #12
  br label %343

343:                                              ; preds = %340, %331
  %344 = bitcast %"struct.std::__1::__hash_node_base"* %332 to i8*
  call void @_ZdlPv(i8* %344) #12
  %345 = icmp eq %"struct.std::__1::__hash_node_base"* %334, null
  br i1 %345, label %346, label %331

346:                                              ; preds = %343, %328
  %347 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %9, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %9, align 8
  %348 = icmp eq %"struct.std::__1::__hash_node_base"** %347, null
  br i1 %348, label %351, label %349

349:                                              ; preds = %346
  %350 = bitcast %"struct.std::__1::__hash_node_base"** %347 to i8*
  call void @_ZdlPv(i8* %350) #12
  br label %351

351:                                              ; preds = %346, %349
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %8) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EERKS9_SB_(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #11
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %8, i64 0, i32 1, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %10 to i64
  %15 = select i1 %11, i64 %13, i64 %14
  %16 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %16, i64 0, i32 1, i32 1
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = zext i8 %18 to i64
  %23 = select i1 %19, i64 %21, i64 %22
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i16*, i16** %24, align 8
  %26 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %27 = select i1 %11, i16* %25, i16* %26
  %28 = add i64 %23, %15
  %29 = icmp ugt i64 %28, 9223372036854775791
  br i1 %29, label %30, label %32

30:                                               ; preds = %3
  %31 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %31) #13
  unreachable

32:                                               ; preds = %3
  %33 = icmp ult i64 %28, 11
  br i1 %33, label %34, label %39

34:                                               ; preds = %32
  %35 = trunc i64 %15 to i8
  %36 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %36, i64 0, i32 1, i32 1
  store i8 %35, i8* %37, align 1
  %38 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %50

39:                                               ; preds = %32
  %40 = add nuw nsw i64 %28, 8
  %41 = and i64 %40, -8
  %42 = icmp slt i64 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %39
  tail call void @abort() #13
  unreachable

44:                                               ; preds = %39
  %45 = shl i64 %41, 1
  %46 = tail call i8* @_Znwm(i64 %45) #12
  %47 = bitcast i8* %46 to i16*
  %48 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %46, i8** %48, align 8
  %49 = or i64 %41, -9223372036854775808
  store i64 %49, i64* %6, align 8
  store i64 %15, i64* %5, align 8
  br label %50

50:                                               ; preds = %44, %34
  %51 = phi i16* [ %38, %34 ], [ %47, %44 ]
  %52 = icmp eq i64 %15, 0
  br i1 %52, label %198, label %53

53:                                               ; preds = %50
  %54 = icmp ult i64 %15, 16
  br i1 %54, label %143, label %55

55:                                               ; preds = %53
  %56 = getelementptr i16, i16* %51, i64 %15
  %57 = getelementptr i16, i16* %27, i64 %15
  %58 = icmp ult i16* %51, %57
  %59 = icmp ult i16* %27, %56
  %60 = and i1 %58, %59
  br i1 %60, label %143, label %61

61:                                               ; preds = %55
  %62 = and i64 %15, -16
  %63 = sub i64 %15, %62
  %64 = getelementptr i16, i16* %27, i64 %62
  %65 = getelementptr i16, i16* %51, i64 %62
  %66 = add i64 %62, -16
  %67 = lshr exact i64 %66, 4
  %68 = add nuw nsw i64 %67, 1
  %69 = and i64 %68, 3
  %70 = icmp ult i64 %66, 48
  br i1 %70, label %122, label %71

71:                                               ; preds = %61
  %72 = sub nsw i64 %68, %69
  br label %73

73:                                               ; preds = %73, %71
  %74 = phi i64 [ 0, %71 ], [ %119, %73 ]
  %75 = phi i64 [ %72, %71 ], [ %120, %73 ]
  %76 = getelementptr i16, i16* %27, i64 %74
  %77 = getelementptr i16, i16* %51, i64 %74
  %78 = bitcast i16* %76 to <8 x i16>*
  %79 = load <8 x i16>, <8 x i16>* %78, align 2, !alias.scope !56
  %80 = getelementptr i16, i16* %76, i64 8
  %81 = bitcast i16* %80 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !56
  %83 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %79, <8 x i16>* %83, align 2, !alias.scope !59, !noalias !56
  %84 = getelementptr i16, i16* %77, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %85, align 2, !alias.scope !59, !noalias !56
  %86 = or i64 %74, 16
  %87 = getelementptr i16, i16* %27, i64 %86
  %88 = getelementptr i16, i16* %51, i64 %86
  %89 = bitcast i16* %87 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !56
  %91 = getelementptr i16, i16* %87, i64 8
  %92 = bitcast i16* %91 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !56
  %94 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %94, align 2, !alias.scope !59, !noalias !56
  %95 = getelementptr i16, i16* %88, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %96, align 2, !alias.scope !59, !noalias !56
  %97 = or i64 %74, 32
  %98 = getelementptr i16, i16* %27, i64 %97
  %99 = getelementptr i16, i16* %51, i64 %97
  %100 = bitcast i16* %98 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !56
  %102 = getelementptr i16, i16* %98, i64 8
  %103 = bitcast i16* %102 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !56
  %105 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %105, align 2, !alias.scope !59, !noalias !56
  %106 = getelementptr i16, i16* %99, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %107, align 2, !alias.scope !59, !noalias !56
  %108 = or i64 %74, 48
  %109 = getelementptr i16, i16* %27, i64 %108
  %110 = getelementptr i16, i16* %51, i64 %108
  %111 = bitcast i16* %109 to <8 x i16>*
  %112 = load <8 x i16>, <8 x i16>* %111, align 2, !alias.scope !56
  %113 = getelementptr i16, i16* %109, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  %115 = load <8 x i16>, <8 x i16>* %114, align 2, !alias.scope !56
  %116 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %112, <8 x i16>* %116, align 2, !alias.scope !59, !noalias !56
  %117 = getelementptr i16, i16* %110, i64 8
  %118 = bitcast i16* %117 to <8 x i16>*
  store <8 x i16> %115, <8 x i16>* %118, align 2, !alias.scope !59, !noalias !56
  %119 = add i64 %74, 64
  %120 = add i64 %75, -4
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %122, label %73, !llvm.loop !61

122:                                              ; preds = %73, %61
  %123 = phi i64 [ 0, %61 ], [ %119, %73 ]
  %124 = icmp eq i64 %69, 0
  br i1 %124, label %141, label %125

125:                                              ; preds = %122, %125
  %126 = phi i64 [ %138, %125 ], [ %123, %122 ]
  %127 = phi i64 [ %139, %125 ], [ %69, %122 ]
  %128 = getelementptr i16, i16* %27, i64 %126
  %129 = getelementptr i16, i16* %51, i64 %126
  %130 = bitcast i16* %128 to <8 x i16>*
  %131 = load <8 x i16>, <8 x i16>* %130, align 2, !alias.scope !56
  %132 = getelementptr i16, i16* %128, i64 8
  %133 = bitcast i16* %132 to <8 x i16>*
  %134 = load <8 x i16>, <8 x i16>* %133, align 2, !alias.scope !56
  %135 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %131, <8 x i16>* %135, align 2, !alias.scope !59, !noalias !56
  %136 = getelementptr i16, i16* %129, i64 8
  %137 = bitcast i16* %136 to <8 x i16>*
  store <8 x i16> %134, <8 x i16>* %137, align 2, !alias.scope !59, !noalias !56
  %138 = add i64 %126, 16
  %139 = add i64 %127, -1
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %141, label %125, !llvm.loop !62

141:                                              ; preds = %125, %122
  %142 = icmp eq i64 %15, %62
  br i1 %142, label %196, label %143

143:                                              ; preds = %141, %55, %53
  %144 = phi i64 [ %15, %55 ], [ %15, %53 ], [ %63, %141 ]
  %145 = phi i16* [ %27, %55 ], [ %27, %53 ], [ %64, %141 ]
  %146 = phi i16* [ %51, %55 ], [ %51, %53 ], [ %65, %141 ]
  %147 = add i64 %144, -1
  %148 = and i64 %144, 7
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %161, label %150

150:                                              ; preds = %143, %150
  %151 = phi i64 [ %156, %150 ], [ %144, %143 ]
  %152 = phi i16* [ %158, %150 ], [ %145, %143 ]
  %153 = phi i16* [ %157, %150 ], [ %146, %143 ]
  %154 = phi i64 [ %159, %150 ], [ %148, %143 ]
  %155 = load i16, i16* %152, align 2
  store i16 %155, i16* %153, align 2
  %156 = add i64 %151, -1
  %157 = getelementptr inbounds i16, i16* %153, i64 1
  %158 = getelementptr inbounds i16, i16* %152, i64 1
  %159 = add i64 %154, -1
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %161, label %150, !llvm.loop !63

161:                                              ; preds = %150, %143
  %162 = phi i64 [ %144, %143 ], [ %156, %150 ]
  %163 = phi i16* [ %145, %143 ], [ %158, %150 ]
  %164 = phi i16* [ %146, %143 ], [ %157, %150 ]
  %165 = icmp ult i64 %147, 7
  br i1 %165, label %196, label %166

166:                                              ; preds = %161, %166
  %167 = phi i64 [ %192, %166 ], [ %162, %161 ]
  %168 = phi i16* [ %194, %166 ], [ %163, %161 ]
  %169 = phi i16* [ %193, %166 ], [ %164, %161 ]
  %170 = load i16, i16* %168, align 2
  store i16 %170, i16* %169, align 2
  %171 = getelementptr inbounds i16, i16* %169, i64 1
  %172 = getelementptr inbounds i16, i16* %168, i64 1
  %173 = load i16, i16* %172, align 2
  store i16 %173, i16* %171, align 2
  %174 = getelementptr inbounds i16, i16* %169, i64 2
  %175 = getelementptr inbounds i16, i16* %168, i64 2
  %176 = load i16, i16* %175, align 2
  store i16 %176, i16* %174, align 2
  %177 = getelementptr inbounds i16, i16* %169, i64 3
  %178 = getelementptr inbounds i16, i16* %168, i64 3
  %179 = load i16, i16* %178, align 2
  store i16 %179, i16* %177, align 2
  %180 = getelementptr inbounds i16, i16* %169, i64 4
  %181 = getelementptr inbounds i16, i16* %168, i64 4
  %182 = load i16, i16* %181, align 2
  store i16 %182, i16* %180, align 2
  %183 = getelementptr inbounds i16, i16* %169, i64 5
  %184 = getelementptr inbounds i16, i16* %168, i64 5
  %185 = load i16, i16* %184, align 2
  store i16 %185, i16* %183, align 2
  %186 = getelementptr inbounds i16, i16* %169, i64 6
  %187 = getelementptr inbounds i16, i16* %168, i64 6
  %188 = load i16, i16* %187, align 2
  store i16 %188, i16* %186, align 2
  %189 = getelementptr inbounds i16, i16* %169, i64 7
  %190 = getelementptr inbounds i16, i16* %168, i64 7
  %191 = load i16, i16* %190, align 2
  store i16 %191, i16* %189, align 2
  %192 = add i64 %167, -8
  %193 = getelementptr inbounds i16, i16* %169, i64 8
  %194 = getelementptr inbounds i16, i16* %168, i64 8
  %195 = icmp eq i64 %192, 0
  br i1 %195, label %196, label %166, !llvm.loop !64

196:                                              ; preds = %161, %166, %141
  %197 = load i8, i8* %17, align 1
  br label %198

198:                                              ; preds = %196, %50
  %199 = phi i8 [ %197, %196 ], [ %18, %50 ]
  %200 = getelementptr inbounds i16, i16* %51, i64 %15
  store i16 0, i16* %200, align 2
  %201 = icmp slt i8 %199, 0
  %202 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %203 = load i16*, i16** %202, align 8
  %204 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  %205 = select i1 %201, i16* %203, i16* %204
  %206 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %207 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %206, i64 0, i32 1, i32 1
  %208 = load i8, i8* %207, align 1
  %209 = icmp slt i8 %208, 0
  br i1 %209, label %210, label %215

210:                                              ; preds = %198
  %211 = load i64, i64* %6, align 8
  %212 = and i64 %211, 9223372036854775807
  %213 = add nsw i64 %212, -1
  %214 = load i64, i64* %5, align 8
  br label %217

215:                                              ; preds = %198
  %216 = zext i8 %208 to i64
  br label %217

217:                                              ; preds = %215, %210
  %218 = phi i64 [ %213, %210 ], [ 10, %215 ]
  %219 = phi i64 [ %214, %210 ], [ %216, %215 ]
  %220 = sub i64 %218, %219
  %221 = icmp ult i64 %220, %23
  br i1 %221, label %381, label %222

222:                                              ; preds = %217
  %223 = icmp eq i64 %23, 0
  br i1 %223, label %384, label %224

224:                                              ; preds = %222
  %225 = load i16*, i16** %4, align 8
  %226 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %227 = select i1 %209, i16* %225, i16* %226
  %228 = getelementptr inbounds i16, i16* %227, i64 %219
  %229 = icmp ult i64 %23, 16
  br i1 %229, label %319, label %230

230:                                              ; preds = %224
  %231 = add i64 %23, %219
  %232 = getelementptr i16, i16* %227, i64 %231
  %233 = getelementptr i16, i16* %205, i64 %23
  %234 = icmp ult i16* %228, %233
  %235 = icmp ult i16* %205, %232
  %236 = and i1 %234, %235
  br i1 %236, label %319, label %237

237:                                              ; preds = %230
  %238 = and i64 %23, -16
  %239 = sub i64 %23, %238
  %240 = getelementptr i16, i16* %205, i64 %238
  %241 = getelementptr i16, i16* %228, i64 %238
  %242 = add i64 %238, -16
  %243 = lshr exact i64 %242, 4
  %244 = add nuw nsw i64 %243, 1
  %245 = and i64 %244, 3
  %246 = icmp ult i64 %242, 48
  br i1 %246, label %298, label %247

247:                                              ; preds = %237
  %248 = sub nsw i64 %244, %245
  br label %249

249:                                              ; preds = %249, %247
  %250 = phi i64 [ 0, %247 ], [ %295, %249 ]
  %251 = phi i64 [ %248, %247 ], [ %296, %249 ]
  %252 = getelementptr i16, i16* %205, i64 %250
  %253 = getelementptr i16, i16* %228, i64 %250
  %254 = bitcast i16* %252 to <8 x i16>*
  %255 = load <8 x i16>, <8 x i16>* %254, align 2, !alias.scope !65
  %256 = getelementptr i16, i16* %252, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  %258 = load <8 x i16>, <8 x i16>* %257, align 2, !alias.scope !65
  %259 = bitcast i16* %253 to <8 x i16>*
  store <8 x i16> %255, <8 x i16>* %259, align 2, !alias.scope !68, !noalias !65
  %260 = getelementptr i16, i16* %253, i64 8
  %261 = bitcast i16* %260 to <8 x i16>*
  store <8 x i16> %258, <8 x i16>* %261, align 2, !alias.scope !68, !noalias !65
  %262 = or i64 %250, 16
  %263 = getelementptr i16, i16* %205, i64 %262
  %264 = getelementptr i16, i16* %228, i64 %262
  %265 = bitcast i16* %263 to <8 x i16>*
  %266 = load <8 x i16>, <8 x i16>* %265, align 2, !alias.scope !65
  %267 = getelementptr i16, i16* %263, i64 8
  %268 = bitcast i16* %267 to <8 x i16>*
  %269 = load <8 x i16>, <8 x i16>* %268, align 2, !alias.scope !65
  %270 = bitcast i16* %264 to <8 x i16>*
  store <8 x i16> %266, <8 x i16>* %270, align 2, !alias.scope !68, !noalias !65
  %271 = getelementptr i16, i16* %264, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  store <8 x i16> %269, <8 x i16>* %272, align 2, !alias.scope !68, !noalias !65
  %273 = or i64 %250, 32
  %274 = getelementptr i16, i16* %205, i64 %273
  %275 = getelementptr i16, i16* %228, i64 %273
  %276 = bitcast i16* %274 to <8 x i16>*
  %277 = load <8 x i16>, <8 x i16>* %276, align 2, !alias.scope !65
  %278 = getelementptr i16, i16* %274, i64 8
  %279 = bitcast i16* %278 to <8 x i16>*
  %280 = load <8 x i16>, <8 x i16>* %279, align 2, !alias.scope !65
  %281 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %277, <8 x i16>* %281, align 2, !alias.scope !68, !noalias !65
  %282 = getelementptr i16, i16* %275, i64 8
  %283 = bitcast i16* %282 to <8 x i16>*
  store <8 x i16> %280, <8 x i16>* %283, align 2, !alias.scope !68, !noalias !65
  %284 = or i64 %250, 48
  %285 = getelementptr i16, i16* %205, i64 %284
  %286 = getelementptr i16, i16* %228, i64 %284
  %287 = bitcast i16* %285 to <8 x i16>*
  %288 = load <8 x i16>, <8 x i16>* %287, align 2, !alias.scope !65
  %289 = getelementptr i16, i16* %285, i64 8
  %290 = bitcast i16* %289 to <8 x i16>*
  %291 = load <8 x i16>, <8 x i16>* %290, align 2, !alias.scope !65
  %292 = bitcast i16* %286 to <8 x i16>*
  store <8 x i16> %288, <8 x i16>* %292, align 2, !alias.scope !68, !noalias !65
  %293 = getelementptr i16, i16* %286, i64 8
  %294 = bitcast i16* %293 to <8 x i16>*
  store <8 x i16> %291, <8 x i16>* %294, align 2, !alias.scope !68, !noalias !65
  %295 = add i64 %250, 64
  %296 = add i64 %251, -4
  %297 = icmp eq i64 %296, 0
  br i1 %297, label %298, label %249, !llvm.loop !70

298:                                              ; preds = %249, %237
  %299 = phi i64 [ 0, %237 ], [ %295, %249 ]
  %300 = icmp eq i64 %245, 0
  br i1 %300, label %317, label %301

301:                                              ; preds = %298, %301
  %302 = phi i64 [ %314, %301 ], [ %299, %298 ]
  %303 = phi i64 [ %315, %301 ], [ %245, %298 ]
  %304 = getelementptr i16, i16* %205, i64 %302
  %305 = getelementptr i16, i16* %228, i64 %302
  %306 = bitcast i16* %304 to <8 x i16>*
  %307 = load <8 x i16>, <8 x i16>* %306, align 2, !alias.scope !65
  %308 = getelementptr i16, i16* %304, i64 8
  %309 = bitcast i16* %308 to <8 x i16>*
  %310 = load <8 x i16>, <8 x i16>* %309, align 2, !alias.scope !65
  %311 = bitcast i16* %305 to <8 x i16>*
  store <8 x i16> %307, <8 x i16>* %311, align 2, !alias.scope !68, !noalias !65
  %312 = getelementptr i16, i16* %305, i64 8
  %313 = bitcast i16* %312 to <8 x i16>*
  store <8 x i16> %310, <8 x i16>* %313, align 2, !alias.scope !68, !noalias !65
  %314 = add i64 %302, 16
  %315 = add i64 %303, -1
  %316 = icmp eq i64 %315, 0
  br i1 %316, label %317, label %301, !llvm.loop !71

317:                                              ; preds = %301, %298
  %318 = icmp eq i64 %23, %238
  br i1 %318, label %372, label %319

319:                                              ; preds = %317, %230, %224
  %320 = phi i64 [ %23, %230 ], [ %23, %224 ], [ %239, %317 ]
  %321 = phi i16* [ %205, %230 ], [ %205, %224 ], [ %240, %317 ]
  %322 = phi i16* [ %228, %230 ], [ %228, %224 ], [ %241, %317 ]
  %323 = add i64 %320, -1
  %324 = and i64 %320, 7
  %325 = icmp eq i64 %324, 0
  br i1 %325, label %337, label %326

326:                                              ; preds = %319, %326
  %327 = phi i64 [ %332, %326 ], [ %320, %319 ]
  %328 = phi i16* [ %334, %326 ], [ %321, %319 ]
  %329 = phi i16* [ %333, %326 ], [ %322, %319 ]
  %330 = phi i64 [ %335, %326 ], [ %324, %319 ]
  %331 = load i16, i16* %328, align 2
  store i16 %331, i16* %329, align 2
  %332 = add i64 %327, -1
  %333 = getelementptr inbounds i16, i16* %329, i64 1
  %334 = getelementptr inbounds i16, i16* %328, i64 1
  %335 = add i64 %330, -1
  %336 = icmp eq i64 %335, 0
  br i1 %336, label %337, label %326, !llvm.loop !72

337:                                              ; preds = %326, %319
  %338 = phi i64 [ %320, %319 ], [ %332, %326 ]
  %339 = phi i16* [ %321, %319 ], [ %334, %326 ]
  %340 = phi i16* [ %322, %319 ], [ %333, %326 ]
  %341 = icmp ult i64 %323, 7
  br i1 %341, label %372, label %342

342:                                              ; preds = %337, %342
  %343 = phi i64 [ %368, %342 ], [ %338, %337 ]
  %344 = phi i16* [ %370, %342 ], [ %339, %337 ]
  %345 = phi i16* [ %369, %342 ], [ %340, %337 ]
  %346 = load i16, i16* %344, align 2
  store i16 %346, i16* %345, align 2
  %347 = getelementptr inbounds i16, i16* %345, i64 1
  %348 = getelementptr inbounds i16, i16* %344, i64 1
  %349 = load i16, i16* %348, align 2
  store i16 %349, i16* %347, align 2
  %350 = getelementptr inbounds i16, i16* %345, i64 2
  %351 = getelementptr inbounds i16, i16* %344, i64 2
  %352 = load i16, i16* %351, align 2
  store i16 %352, i16* %350, align 2
  %353 = getelementptr inbounds i16, i16* %345, i64 3
  %354 = getelementptr inbounds i16, i16* %344, i64 3
  %355 = load i16, i16* %354, align 2
  store i16 %355, i16* %353, align 2
  %356 = getelementptr inbounds i16, i16* %345, i64 4
  %357 = getelementptr inbounds i16, i16* %344, i64 4
  %358 = load i16, i16* %357, align 2
  store i16 %358, i16* %356, align 2
  %359 = getelementptr inbounds i16, i16* %345, i64 5
  %360 = getelementptr inbounds i16, i16* %344, i64 5
  %361 = load i16, i16* %360, align 2
  store i16 %361, i16* %359, align 2
  %362 = getelementptr inbounds i16, i16* %345, i64 6
  %363 = getelementptr inbounds i16, i16* %344, i64 6
  %364 = load i16, i16* %363, align 2
  store i16 %364, i16* %362, align 2
  %365 = getelementptr inbounds i16, i16* %345, i64 7
  %366 = getelementptr inbounds i16, i16* %344, i64 7
  %367 = load i16, i16* %366, align 2
  store i16 %367, i16* %365, align 2
  %368 = add i64 %343, -8
  %369 = getelementptr inbounds i16, i16* %345, i64 8
  %370 = getelementptr inbounds i16, i16* %344, i64 8
  %371 = icmp eq i64 %368, 0
  br i1 %371, label %372, label %342, !llvm.loop !73

372:                                              ; preds = %337, %342, %317
  %373 = add i64 %219, %23
  %374 = load i8, i8* %207, align 1
  %375 = icmp slt i8 %374, 0
  br i1 %375, label %376, label %377

376:                                              ; preds = %372
  store i64 %373, i64* %5, align 8
  br label %379

377:                                              ; preds = %372
  %378 = trunc i64 %373 to i8
  store i8 %378, i8* %207, align 1
  br label %379

379:                                              ; preds = %377, %376
  %380 = getelementptr inbounds i16, i16* %227, i64 %373
  store i16 0, i16* %380, align 2
  br label %384

381:                                              ; preds = %217
  %382 = add i64 %219, %23
  %383 = sub i64 %382, %218
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %0, i64 %218, i64 %383, i64 %219, i64 %219, i64 0, i64 %23, i16* %205) #11
  br label %384

384:                                              ; preds = %222, %379, %381
  ret void
}

declare dereferenceable(216) %"struct.autofill::Suggestion"* @_ZN8autofill10SuggestionaSERKS0_(%"struct.autofill::Suggestion"*, %"struct.autofill::Suggestion"* dereferenceable(216)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %4 = icmp eq %"class.std::__1::basic_string"* %0, %1
  br i1 %4, label %510, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %341, label %14

14:                                               ; preds = %5
  br i1 %13, label %17, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %16, i64 24, i1 false)
  br label %510

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast i16* %19 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %175

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %26 = trunc i64 %22 to i8
  store i8 %26, i8* %7, align 1
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %173, label %28

28:                                               ; preds = %24
  %29 = icmp ult i64 %22, 16
  br i1 %29, label %120, label %30

30:                                               ; preds = %28
  %31 = shl i64 %22, 1
  %32 = getelementptr i8, i8* %3, i64 %31
  %33 = getelementptr i16, i16* %19, i64 %22
  %34 = bitcast i16* %33 to %"class.std::__1::basic_string"*
  %35 = icmp ugt %"class.std::__1::basic_string"* %34, %0
  %36 = icmp ugt i8* %32, %20
  %37 = and i1 %35, %36
  br i1 %37, label %120, label %38

38:                                               ; preds = %30
  %39 = and i64 %22, -16
  %40 = sub i64 %22, %39
  %41 = getelementptr i16, i16* %19, i64 %39
  %42 = getelementptr i16, i16* %25, i64 %39
  %43 = add i64 %39, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 48
  br i1 %47, label %99, label %48

48:                                               ; preds = %38
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %97, %50 ]
  %53 = getelementptr i16, i16* %19, i64 %51
  %54 = getelementptr i16, i16* %25, i64 %51
  %55 = bitcast i16* %53 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !74
  %57 = getelementptr i16, i16* %53, i64 8
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2, !alias.scope !74
  %60 = bitcast i16* %54 to <8 x i16>*
  store <8 x i16> %56, <8 x i16>* %60, align 2, !alias.scope !77, !noalias !74
  %61 = getelementptr i16, i16* %54, i64 8
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %59, <8 x i16>* %62, align 2, !alias.scope !77, !noalias !74
  %63 = or i64 %51, 16
  %64 = getelementptr i16, i16* %19, i64 %63
  %65 = getelementptr i16, i16* %25, i64 %63
  %66 = bitcast i16* %64 to <8 x i16>*
  %67 = load <8 x i16>, <8 x i16>* %66, align 2, !alias.scope !74
  %68 = getelementptr i16, i16* %64, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !74
  %71 = bitcast i16* %65 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %71, align 2, !alias.scope !77, !noalias !74
  %72 = getelementptr i16, i16* %65, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %73, align 2, !alias.scope !77, !noalias !74
  %74 = or i64 %51, 32
  %75 = getelementptr i16, i16* %19, i64 %74
  %76 = getelementptr i16, i16* %25, i64 %74
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !74
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !74
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !77, !noalias !74
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !77, !noalias !74
  %85 = or i64 %51, 48
  %86 = getelementptr i16, i16* %19, i64 %85
  %87 = getelementptr i16, i16* %25, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !74
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !74
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !77, !noalias !74
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !77, !noalias !74
  %96 = add i64 %51, 64
  %97 = add i64 %52, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %50, !llvm.loop !79

99:                                               ; preds = %50, %38
  %100 = phi i64 [ 0, %38 ], [ %96, %50 ]
  %101 = icmp eq i64 %46, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %115, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %116, %102 ], [ %46, %99 ]
  %105 = getelementptr i16, i16* %19, i64 %103
  %106 = getelementptr i16, i16* %25, i64 %103
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !74
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !74
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !77, !noalias !74
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !77, !noalias !74
  %115 = add i64 %103, 16
  %116 = add i64 %104, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %102, !llvm.loop !80

118:                                              ; preds = %102, %99
  %119 = icmp eq i64 %22, %39
  br i1 %119, label %173, label %120

120:                                              ; preds = %118, %30, %28
  %121 = phi i64 [ %22, %30 ], [ %22, %28 ], [ %40, %118 ]
  %122 = phi i16* [ %19, %30 ], [ %19, %28 ], [ %41, %118 ]
  %123 = phi i16* [ %25, %30 ], [ %25, %28 ], [ %42, %118 ]
  %124 = add i64 %121, -1
  %125 = and i64 %121, 7
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %120, %127
  %128 = phi i64 [ %133, %127 ], [ %121, %120 ]
  %129 = phi i16* [ %135, %127 ], [ %122, %120 ]
  %130 = phi i16* [ %134, %127 ], [ %123, %120 ]
  %131 = phi i64 [ %136, %127 ], [ %125, %120 ]
  %132 = load i16, i16* %129, align 2
  store i16 %132, i16* %130, align 2
  %133 = add i64 %128, -1
  %134 = getelementptr inbounds i16, i16* %130, i64 1
  %135 = getelementptr inbounds i16, i16* %129, i64 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %127, !llvm.loop !81

138:                                              ; preds = %127, %120
  %139 = phi i64 [ %121, %120 ], [ %133, %127 ]
  %140 = phi i16* [ %122, %120 ], [ %135, %127 ]
  %141 = phi i16* [ %123, %120 ], [ %134, %127 ]
  %142 = icmp ult i64 %124, 7
  br i1 %142, label %173, label %143

143:                                              ; preds = %138, %143
  %144 = phi i64 [ %169, %143 ], [ %139, %138 ]
  %145 = phi i16* [ %171, %143 ], [ %140, %138 ]
  %146 = phi i16* [ %170, %143 ], [ %141, %138 ]
  %147 = load i16, i16* %145, align 2
  store i16 %147, i16* %146, align 2
  %148 = getelementptr inbounds i16, i16* %146, i64 1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %148, align 2
  %151 = getelementptr inbounds i16, i16* %146, i64 2
  %152 = getelementptr inbounds i16, i16* %145, i64 2
  %153 = load i16, i16* %152, align 2
  store i16 %153, i16* %151, align 2
  %154 = getelementptr inbounds i16, i16* %146, i64 3
  %155 = getelementptr inbounds i16, i16* %145, i64 3
  %156 = load i16, i16* %155, align 2
  store i16 %156, i16* %154, align 2
  %157 = getelementptr inbounds i16, i16* %146, i64 4
  %158 = getelementptr inbounds i16, i16* %145, i64 4
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %146, i64 5
  %161 = getelementptr inbounds i16, i16* %145, i64 5
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %146, i64 6
  %164 = getelementptr inbounds i16, i16* %145, i64 6
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %146, i64 7
  %167 = getelementptr inbounds i16, i16* %145, i64 7
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %144, -8
  %170 = getelementptr inbounds i16, i16* %146, i64 8
  %171 = getelementptr inbounds i16, i16* %145, i64 8
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %173, label %143, !llvm.loop !82

173:                                              ; preds = %138, %143, %118, %24
  %174 = getelementptr inbounds i16, i16* %25, i64 %22
  store i16 0, i16* %174, align 2
  br label %510

175:                                              ; preds = %17
  %176 = add i64 %22, -10
  %177 = icmp ugt i64 %176, 9223372036854775780
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %179) #13
  unreachable

180:                                              ; preds = %175
  %181 = icmp ugt i64 %22, 20
  %182 = select i1 %181, i64 %22, i64 20
  %183 = add nuw nsw i64 %182, 8
  %184 = and i64 %183, -8
  %185 = icmp slt i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180
  tail call void @abort() #13
  unreachable

187:                                              ; preds = %180
  %188 = shl i64 %184, 1
  %189 = tail call i8* @_Znwm(i64 %188) #12
  %190 = bitcast i8* %189 to i16*
  %191 = icmp ult i64 %22, 16
  br i1 %191, label %282, label %192

192:                                              ; preds = %187
  %193 = shl i64 %22, 1
  %194 = getelementptr i8, i8* %189, i64 %193
  %195 = getelementptr i16, i16* %19, i64 %22
  %196 = bitcast i16* %195 to i8*
  %197 = icmp ult i8* %189, %196
  %198 = icmp ugt i8* %194, %20
  %199 = and i1 %197, %198
  br i1 %199, label %282, label %200

200:                                              ; preds = %192
  %201 = and i64 %22, -16
  %202 = sub i64 %22, %201
  %203 = getelementptr i16, i16* %19, i64 %201
  %204 = getelementptr i16, i16* %190, i64 %201
  %205 = add i64 %201, -16
  %206 = lshr exact i64 %205, 4
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 3
  %209 = icmp ult i64 %205, 48
  br i1 %209, label %261, label %210

210:                                              ; preds = %200
  %211 = sub nsw i64 %207, %208
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %258, %212 ]
  %214 = phi i64 [ %211, %210 ], [ %259, %212 ]
  %215 = getelementptr i16, i16* %19, i64 %213
  %216 = getelementptr i16, i16* %190, i64 %213
  %217 = bitcast i16* %215 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !83
  %219 = getelementptr i16, i16* %215, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !83
  %222 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !86, !noalias !83
  %223 = getelementptr i16, i16* %216, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !86, !noalias !83
  %225 = or i64 %213, 16
  %226 = getelementptr i16, i16* %19, i64 %225
  %227 = getelementptr i16, i16* %190, i64 %225
  %228 = bitcast i16* %226 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !83
  %230 = getelementptr i16, i16* %226, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !83
  %233 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %233, align 2, !alias.scope !86, !noalias !83
  %234 = getelementptr i16, i16* %227, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %235, align 2, !alias.scope !86, !noalias !83
  %236 = or i64 %213, 32
  %237 = getelementptr i16, i16* %19, i64 %236
  %238 = getelementptr i16, i16* %190, i64 %236
  %239 = bitcast i16* %237 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !83
  %241 = getelementptr i16, i16* %237, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !83
  %244 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %244, align 2, !alias.scope !86, !noalias !83
  %245 = getelementptr i16, i16* %238, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %246, align 2, !alias.scope !86, !noalias !83
  %247 = or i64 %213, 48
  %248 = getelementptr i16, i16* %19, i64 %247
  %249 = getelementptr i16, i16* %190, i64 %247
  %250 = bitcast i16* %248 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !83
  %252 = getelementptr i16, i16* %248, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !83
  %255 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %255, align 2, !alias.scope !86, !noalias !83
  %256 = getelementptr i16, i16* %249, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %257, align 2, !alias.scope !86, !noalias !83
  %258 = add i64 %213, 64
  %259 = add i64 %214, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %212, !llvm.loop !88

261:                                              ; preds = %212, %200
  %262 = phi i64 [ 0, %200 ], [ %258, %212 ]
  %263 = icmp eq i64 %208, 0
  br i1 %263, label %280, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %277, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %278, %264 ], [ %208, %261 ]
  %267 = getelementptr i16, i16* %19, i64 %265
  %268 = getelementptr i16, i16* %190, i64 %265
  %269 = bitcast i16* %267 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !83
  %271 = getelementptr i16, i16* %267, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !83
  %274 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !86, !noalias !83
  %275 = getelementptr i16, i16* %268, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !86, !noalias !83
  %277 = add i64 %265, 16
  %278 = add i64 %266, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %264, !llvm.loop !89

280:                                              ; preds = %264, %261
  %281 = icmp eq i64 %22, %201
  br i1 %281, label %335, label %282

282:                                              ; preds = %280, %192, %187
  %283 = phi i64 [ %22, %192 ], [ %22, %187 ], [ %202, %280 ]
  %284 = phi i16* [ %19, %192 ], [ %19, %187 ], [ %203, %280 ]
  %285 = phi i16* [ %190, %192 ], [ %190, %187 ], [ %204, %280 ]
  %286 = add i64 %283, -1
  %287 = and i64 %283, 7
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %300, label %289

289:                                              ; preds = %282, %289
  %290 = phi i64 [ %295, %289 ], [ %283, %282 ]
  %291 = phi i16* [ %297, %289 ], [ %284, %282 ]
  %292 = phi i16* [ %296, %289 ], [ %285, %282 ]
  %293 = phi i64 [ %298, %289 ], [ %287, %282 ]
  %294 = load i16, i16* %291, align 2
  store i16 %294, i16* %292, align 2
  %295 = add i64 %290, -1
  %296 = getelementptr inbounds i16, i16* %292, i64 1
  %297 = getelementptr inbounds i16, i16* %291, i64 1
  %298 = add i64 %293, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %289, !llvm.loop !90

300:                                              ; preds = %289, %282
  %301 = phi i64 [ %283, %282 ], [ %295, %289 ]
  %302 = phi i16* [ %284, %282 ], [ %297, %289 ]
  %303 = phi i16* [ %285, %282 ], [ %296, %289 ]
  %304 = icmp ult i64 %286, 7
  br i1 %304, label %335, label %305

305:                                              ; preds = %300, %305
  %306 = phi i64 [ %331, %305 ], [ %301, %300 ]
  %307 = phi i16* [ %333, %305 ], [ %302, %300 ]
  %308 = phi i16* [ %332, %305 ], [ %303, %300 ]
  %309 = load i16, i16* %307, align 2
  store i16 %309, i16* %308, align 2
  %310 = getelementptr inbounds i16, i16* %308, i64 1
  %311 = getelementptr inbounds i16, i16* %307, i64 1
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2
  %313 = getelementptr inbounds i16, i16* %308, i64 2
  %314 = getelementptr inbounds i16, i16* %307, i64 2
  %315 = load i16, i16* %314, align 2
  store i16 %315, i16* %313, align 2
  %316 = getelementptr inbounds i16, i16* %308, i64 3
  %317 = getelementptr inbounds i16, i16* %307, i64 3
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = getelementptr inbounds i16, i16* %308, i64 4
  %320 = getelementptr inbounds i16, i16* %307, i64 4
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %319, align 2
  %322 = getelementptr inbounds i16, i16* %308, i64 5
  %323 = getelementptr inbounds i16, i16* %307, i64 5
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %308, i64 6
  %326 = getelementptr inbounds i16, i16* %307, i64 6
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %308, i64 7
  %329 = getelementptr inbounds i16, i16* %307, i64 7
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = add i64 %306, -8
  %332 = getelementptr inbounds i16, i16* %308, i64 8
  %333 = getelementptr inbounds i16, i16* %307, i64 8
  %334 = icmp eq i64 %331, 0
  br i1 %334, label %335, label %305, !llvm.loop !91

335:                                              ; preds = %300, %305, %280
  %336 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %189, i8** %336, align 8
  %337 = or i64 %184, -9223372036854775808
  %338 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %339, align 8
  %340 = getelementptr inbounds i16, i16* %190, i64 %22
  store i16 0, i16* %340, align 2
  br label %510

341:                                              ; preds = %5
  %342 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i16*, i16** %342, align 8
  %344 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %347 = zext i8 %12 to i64
  %348 = select i1 %13, i16* %343, i16* %346
  %349 = select i1 %13, i64 %345, i64 %347
  %350 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = and i64 %351, 9223372036854775807
  %353 = icmp ugt i64 %352, %349
  br i1 %353, label %354, label %504

354:                                              ; preds = %341
  %355 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load i16*, i16** %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %349, i64* %357, align 8
  %358 = icmp eq i64 %349, 0
  br i1 %358, label %502, label %359

359:                                              ; preds = %354
  %360 = icmp ult i64 %349, 16
  br i1 %360, label %449, label %361

361:                                              ; preds = %359
  %362 = getelementptr i16, i16* %356, i64 %349
  %363 = getelementptr i16, i16* %348, i64 %349
  %364 = icmp ult i16* %356, %363
  %365 = icmp ult i16* %348, %362
  %366 = and i1 %364, %365
  br i1 %366, label %449, label %367

367:                                              ; preds = %361
  %368 = and i64 %349, -16
  %369 = sub i64 %349, %368
  %370 = getelementptr i16, i16* %348, i64 %368
  %371 = getelementptr i16, i16* %356, i64 %368
  %372 = add i64 %368, -16
  %373 = lshr exact i64 %372, 4
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 3
  %376 = icmp ult i64 %372, 48
  br i1 %376, label %428, label %377

377:                                              ; preds = %367
  %378 = sub nsw i64 %374, %375
  br label %379

379:                                              ; preds = %379, %377
  %380 = phi i64 [ 0, %377 ], [ %425, %379 ]
  %381 = phi i64 [ %378, %377 ], [ %426, %379 ]
  %382 = getelementptr i16, i16* %348, i64 %380
  %383 = getelementptr i16, i16* %356, i64 %380
  %384 = bitcast i16* %382 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !92
  %386 = getelementptr i16, i16* %382, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !92
  %389 = bitcast i16* %383 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %389, align 2, !alias.scope !95, !noalias !92
  %390 = getelementptr i16, i16* %383, i64 8
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %391, align 2, !alias.scope !95, !noalias !92
  %392 = or i64 %380, 16
  %393 = getelementptr i16, i16* %348, i64 %392
  %394 = getelementptr i16, i16* %356, i64 %392
  %395 = bitcast i16* %393 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !92
  %397 = getelementptr i16, i16* %393, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !92
  %400 = bitcast i16* %394 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %400, align 2, !alias.scope !95, !noalias !92
  %401 = getelementptr i16, i16* %394, i64 8
  %402 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %402, align 2, !alias.scope !95, !noalias !92
  %403 = or i64 %380, 32
  %404 = getelementptr i16, i16* %348, i64 %403
  %405 = getelementptr i16, i16* %356, i64 %403
  %406 = bitcast i16* %404 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !92
  %408 = getelementptr i16, i16* %404, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !92
  %411 = bitcast i16* %405 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %411, align 2, !alias.scope !95, !noalias !92
  %412 = getelementptr i16, i16* %405, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %413, align 2, !alias.scope !95, !noalias !92
  %414 = or i64 %380, 48
  %415 = getelementptr i16, i16* %348, i64 %414
  %416 = getelementptr i16, i16* %356, i64 %414
  %417 = bitcast i16* %415 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !92
  %419 = getelementptr i16, i16* %415, i64 8
  %420 = bitcast i16* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !92
  %422 = bitcast i16* %416 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %422, align 2, !alias.scope !95, !noalias !92
  %423 = getelementptr i16, i16* %416, i64 8
  %424 = bitcast i16* %423 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %424, align 2, !alias.scope !95, !noalias !92
  %425 = add i64 %380, 64
  %426 = add i64 %381, -4
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %379, !llvm.loop !97

428:                                              ; preds = %379, %367
  %429 = phi i64 [ 0, %367 ], [ %425, %379 ]
  %430 = icmp eq i64 %375, 0
  br i1 %430, label %447, label %431

431:                                              ; preds = %428, %431
  %432 = phi i64 [ %444, %431 ], [ %429, %428 ]
  %433 = phi i64 [ %445, %431 ], [ %375, %428 ]
  %434 = getelementptr i16, i16* %348, i64 %432
  %435 = getelementptr i16, i16* %356, i64 %432
  %436 = bitcast i16* %434 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !92
  %438 = getelementptr i16, i16* %434, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !92
  %441 = bitcast i16* %435 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %441, align 2, !alias.scope !95, !noalias !92
  %442 = getelementptr i16, i16* %435, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %443, align 2, !alias.scope !95, !noalias !92
  %444 = add i64 %432, 16
  %445 = add i64 %433, -1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %431, !llvm.loop !98

447:                                              ; preds = %431, %428
  %448 = icmp eq i64 %349, %368
  br i1 %448, label %502, label %449

449:                                              ; preds = %447, %361, %359
  %450 = phi i64 [ %349, %361 ], [ %349, %359 ], [ %369, %447 ]
  %451 = phi i16* [ %348, %361 ], [ %348, %359 ], [ %370, %447 ]
  %452 = phi i16* [ %356, %361 ], [ %356, %359 ], [ %371, %447 ]
  %453 = add i64 %450, -1
  %454 = and i64 %450, 7
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %467, label %456

456:                                              ; preds = %449, %456
  %457 = phi i64 [ %462, %456 ], [ %450, %449 ]
  %458 = phi i16* [ %464, %456 ], [ %451, %449 ]
  %459 = phi i16* [ %463, %456 ], [ %452, %449 ]
  %460 = phi i64 [ %465, %456 ], [ %454, %449 ]
  %461 = load i16, i16* %458, align 2
  store i16 %461, i16* %459, align 2
  %462 = add i64 %457, -1
  %463 = getelementptr inbounds i16, i16* %459, i64 1
  %464 = getelementptr inbounds i16, i16* %458, i64 1
  %465 = add i64 %460, -1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %456, !llvm.loop !99

467:                                              ; preds = %456, %449
  %468 = phi i64 [ %450, %449 ], [ %462, %456 ]
  %469 = phi i16* [ %451, %449 ], [ %464, %456 ]
  %470 = phi i16* [ %452, %449 ], [ %463, %456 ]
  %471 = icmp ult i64 %453, 7
  br i1 %471, label %502, label %472

472:                                              ; preds = %467, %472
  %473 = phi i64 [ %498, %472 ], [ %468, %467 ]
  %474 = phi i16* [ %500, %472 ], [ %469, %467 ]
  %475 = phi i16* [ %499, %472 ], [ %470, %467 ]
  %476 = load i16, i16* %474, align 2
  store i16 %476, i16* %475, align 2
  %477 = getelementptr inbounds i16, i16* %475, i64 1
  %478 = getelementptr inbounds i16, i16* %474, i64 1
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %475, i64 2
  %481 = getelementptr inbounds i16, i16* %474, i64 2
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %475, i64 3
  %484 = getelementptr inbounds i16, i16* %474, i64 3
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %475, i64 4
  %487 = getelementptr inbounds i16, i16* %474, i64 4
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %475, i64 5
  %490 = getelementptr inbounds i16, i16* %474, i64 5
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %475, i64 6
  %493 = getelementptr inbounds i16, i16* %474, i64 6
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %475, i64 7
  %496 = getelementptr inbounds i16, i16* %474, i64 7
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = add i64 %473, -8
  %499 = getelementptr inbounds i16, i16* %475, i64 8
  %500 = getelementptr inbounds i16, i16* %474, i64 8
  %501 = icmp eq i64 %498, 0
  br i1 %501, label %502, label %472, !llvm.loop !100

502:                                              ; preds = %467, %472, %447, %354
  %503 = getelementptr inbounds i16, i16* %356, i64 %349
  store i16 0, i16* %503, align 2
  br label %510

504:                                              ; preds = %341
  %505 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %506 = load i64, i64* %505, align 8
  %507 = add nsw i64 %352, -1
  %508 = add i64 %349, 1
  %509 = sub i64 %508, %352
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %0, i64 %507, i64 %509, i64 %506, i64 0, i64 %506, i64 %349, i16* %348) #11
  br label %510

510:                                              ; preds = %504, %502, %335, %173, %15, %2
  ret %"class.std::__1::basic_string"* %0
}

declare zeroext i1 @_ZN8autofill4i18n12FieldForTypeENS_15ServerFieldTypeEPN4i18n12addressinput12AddressFieldE(i32, i32*) local_unnamed_addr #2

declare void @_ZN4i18n12addressinput33GetStreetAddressLinesAsSingleLineERKNS0_11AddressDataEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"struct.i18n::addressinput::AddressData"* dereferenceable(240), %"class.std::__1::basic_string.4"*) local_unnamed_addr #2

declare %"struct.i18n::addressinput::AddressData"* @_ZN8autofill4i18n36CreateAddressDataFromAutofillProfileERKNS_15AutofillProfileERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.autofill::AutofillProfile"* dereferenceable(2856), %"class.std::__1::basic_string.4"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZNK8autofill9FormGroup7GetInfoERKNS_12AutofillTypeERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.std::__1::basic_string"* sret, %"class.autofill::FormGroup"*, %"class.autofill::AutofillType"* dereferenceable(12), %"class.std::__1::basic_string.4"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4i18n12addressinput11AddressDataD2Ev(%"struct.i18n::addressinput::AddressData"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"struct.i18n::addressinput::AddressData", %"struct.i18n::addressinput::AddressData"* %0, i64 0, i32 9
  %3 = bitcast %"class.std::__1::basic_string.4"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #12
  br label %10

10:                                               ; preds = %1, %7
  %11 = getelementptr inbounds %"struct.i18n::addressinput::AddressData", %"struct.i18n::addressinput::AddressData"* %0, i64 0, i32 8
  %12 = bitcast %"class.std::__1::basic_string.4"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  tail call void @_ZdlPv(i8* %18) #12
  br label %19

19:                                               ; preds = %10, %16
  %20 = getelementptr inbounds %"struct.i18n::addressinput::AddressData", %"struct.i18n::addressinput::AddressData"* %0, i64 0, i32 7
  %21 = bitcast %"class.std::__1::basic_string.4"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  tail call void @_ZdlPv(i8* %27) #12
  br label %28

28:                                               ; preds = %19, %25
  %29 = getelementptr inbounds %"struct.i18n::addressinput::AddressData", %"struct.i18n::addressinput::AddressData"* %0, i64 0, i32 6
  %30 = bitcast %"class.std::__1::basic_string.4"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  tail call void @_ZdlPv(i8* %36) #12
  br label %37

37:                                               ; preds = %28, %34
  %38 = getelementptr inbounds %"struct.i18n::addressinput::AddressData", %"struct.i18n::addressinput::AddressData"* %0, i64 0, i32 5
  %39 = bitcast %"class.std::__1::basic_string.4"* %38 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  tail call void @_ZdlPv(i8* %45) #12
  br label %46

46:                                               ; preds = %37, %43
  %47 = getelementptr inbounds %"struct.i18n::addressinput::AddressData", %"struct.i18n::addressinput::AddressData"* %0, i64 0, i32 4
  %48 = bitcast %"class.std::__1::basic_string.4"* %47 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  tail call void @_ZdlPv(i8* %54) #12
  br label %55

55:                                               ; preds = %46, %52
  %56 = getelementptr inbounds %"struct.i18n::addressinput::AddressData", %"struct.i18n::addressinput::AddressData"* %0, i64 0, i32 3
  %57 = bitcast %"class.std::__1::basic_string.4"* %56 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %57, i64 0, i32 1, i32 0
  %59 = load i8, i8* %58, align 1
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %61, label %64

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i8*, i8** %62, align 8
  tail call void @_ZdlPv(i8* %63) #12
  br label %64

64:                                               ; preds = %55, %61
  %65 = getelementptr inbounds %"struct.i18n::addressinput::AddressData", %"struct.i18n::addressinput::AddressData"* %0, i64 0, i32 2
  %66 = bitcast %"class.std::__1::basic_string.4"* %65 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %66, i64 0, i32 1, i32 0
  %68 = load i8, i8* %67, align 1
  %69 = icmp slt i8 %68, 0
  br i1 %69, label %70, label %73

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %65, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load i8*, i8** %71, align 8
  tail call void @_ZdlPv(i8* %72) #12
  br label %73

73:                                               ; preds = %64, %70
  %74 = getelementptr inbounds %"struct.i18n::addressinput::AddressData", %"struct.i18n::addressinput::AddressData"* %0, i64 0, i32 1
  %75 = getelementptr inbounds %"class.std::__1::vector.110", %"class.std::__1::vector.110"* %74, i64 0, i32 0, i32 0
  %76 = load %"class.std::__1::basic_string.4"*, %"class.std::__1::basic_string.4"** %75, align 8
  %77 = icmp eq %"class.std::__1::basic_string.4"* %76, null
  br i1 %77, label %100, label %78

78:                                               ; preds = %73
  %79 = bitcast %"class.std::__1::basic_string.4"* %76 to i8*
  %80 = getelementptr inbounds %"struct.i18n::addressinput::AddressData", %"struct.i18n::addressinput::AddressData"* %0, i64 0, i32 1, i32 0, i32 1
  %81 = load %"class.std::__1::basic_string.4"*, %"class.std::__1::basic_string.4"** %80, align 8
  %82 = icmp eq %"class.std::__1::basic_string.4"* %81, %76
  br i1 %82, label %98, label %83

83:                                               ; preds = %78, %93
  %84 = phi %"class.std::__1::basic_string.4"* [ %85, %93 ], [ %81, %78 ]
  %85 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %84, i64 -1
  %86 = bitcast %"class.std::__1::basic_string.4"* %85 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %87 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %86, i64 0, i32 1, i32 0
  %88 = load i8, i8* %87, align 1
  %89 = icmp slt i8 %88, 0
  br i1 %89, label %90, label %93

90:                                               ; preds = %83
  %91 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %85, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load i8*, i8** %91, align 8
  tail call void @_ZdlPv(i8* %92) #12
  br label %93

93:                                               ; preds = %90, %83
  %94 = icmp eq %"class.std::__1::basic_string.4"* %85, %76
  br i1 %94, label %95, label %83

95:                                               ; preds = %93
  %96 = bitcast %"class.std::__1::vector.110"* %74 to i8**
  %97 = load i8*, i8** %96, align 8
  br label %98

98:                                               ; preds = %95, %78
  %99 = phi i8* [ %97, %95 ], [ %79, %78 ]
  store %"class.std::__1::basic_string.4"* %76, %"class.std::__1::basic_string.4"** %80, align 8
  tail call void @_ZdlPv(i8* %99) #12
  br label %100

100:                                              ; preds = %73, %98
  %101 = bitcast %"struct.i18n::addressinput::AddressData"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %102 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %101, i64 0, i32 1, i32 0
  %103 = load i8, i8* %102, align 1
  %104 = icmp slt i8 %103, 0
  br i1 %104, label %105, label %108

105:                                              ; preds = %100
  %106 = getelementptr inbounds %"struct.i18n::addressinput::AddressData", %"struct.i18n::addressinput::AddressData"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load i8*, i8** %106, align 8
  tail call void @_ZdlPv(i8* %107) #12
  br label %108

108:                                              ; preds = %100, %105
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string.4"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN8autofill10SuggestionENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.71"*, %"struct.autofill::Suggestion"* dereferenceable(216)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.71", %"class.std::__1::vector.71"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.autofill::Suggestion"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.71"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 216
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 85401592933840516
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.71"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.71", %"class.std::__1::vector.71"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.autofill::Suggestion"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 216
  %20 = icmp ult i64 %19, 42700796466920258
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 85401592933840516, %14 ]
  %28 = mul i64 %27, 216
  %29 = tail call i8* @_Znwm(i64 %28) #12
  %30 = bitcast i8* %29 to %"struct.autofill::Suggestion"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.autofill::Suggestion"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %33, i64 %32
  %36 = ptrtoint %"struct.autofill::Suggestion"* %35 to i64
  tail call void @_ZN8autofill10SuggestionC1EOS0_(%"struct.autofill::Suggestion"* %34, %"struct.autofill::Suggestion"* dereferenceable(216) %1) #11
  %37 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %34, i64 1
  %38 = ptrtoint %"struct.autofill::Suggestion"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.71", %"class.std::__1::vector.71"* %0, i64 0, i32 0, i32 0
  %40 = load %"struct.autofill::Suggestion"*, %"struct.autofill::Suggestion"** %39, align 8
  %41 = load %"struct.autofill::Suggestion"*, %"struct.autofill::Suggestion"** %3, align 8
  %42 = icmp eq %"struct.autofill::Suggestion"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"struct.autofill::Suggestion"* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %"struct.autofill::Suggestion"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"struct.autofill::Suggestion"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %46, i64 -1
  %49 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %47, i64 -1
  tail call void @_ZN8autofill10SuggestionC1EOS0_(%"struct.autofill::Suggestion"* %48, %"struct.autofill::Suggestion"* dereferenceable(216) %49) #11
  %50 = icmp eq %"struct.autofill::Suggestion"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %"struct.autofill::Suggestion"*, %"struct.autofill::Suggestion"** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %"struct.autofill::Suggestion"* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %"struct.autofill::Suggestion"* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %"struct.autofill::Suggestion"* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %"struct.autofill::Suggestion"*
  %60 = icmp eq %"struct.autofill::Suggestion"* %55, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %54, %61
  %62 = phi %"struct.autofill::Suggestion"* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %62, i64 -1
  tail call void @_ZN8autofill10SuggestionD1Ev(%"struct.autofill::Suggestion"* %63) #11
  %64 = icmp eq %"struct.autofill::Suggestion"* %63, %59
  br i1 %64, label %65, label %61

65:                                               ; preds = %61, %54
  %66 = icmp eq i64 %57, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %68) #12
  br label %69

69:                                               ; preds = %65, %67
  ret void
}

declare void @_ZN8autofill10SuggestionC1EOS0_(%"struct.autofill::Suggestion"*, %"struct.autofill::Suggestion"* dereferenceable(216)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @"_ZNSt3__113__stable_sortIRZN8autofill20suggestion_selection27GetPrefixMatchedSuggestionsERKNS1_12AutofillTypeERKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEESD_RKNS1_25AutofillProfileComparatorEbRKNS_6vectorIPNS1_15AutofillProfileENS9_ISJ_EEEEPSL_E3$_0NS_11__wrap_iterIPNS1_10SuggestionEEEEEvT0_SV_T_NS_15iterator_traitsISV_E15difference_typeEPNSY_10value_typeEl"(%"struct.autofill::Suggestion"*, %"struct.autofill::Suggestion"*, %class.anon* dereferenceable(1), i64, %"struct.autofill::Suggestion"*, i64) unnamed_addr #0 {
  %7 = alloca %"struct.autofill::Suggestion", align 8
  %8 = alloca %"struct.autofill::Suggestion", align 8
  switch i64 %3, label %20 [
    i64 0, label %108
    i64 1, label %108
    i64 2, label %9
  ]

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %1, i64 -1
  %11 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %1, i64 -1, i32 9
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %0, i64 0, i32 9
  %14 = load i32, i32* %13, align 8
  %15 = icmp slt i32 %12, %14
  br i1 %15, label %16, label %108

16:                                               ; preds = %9
  %17 = bitcast %"struct.autofill::Suggestion"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 216, i8* nonnull %17) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 216, i1 false) #11
  call void @_ZN8autofill10SuggestionC1EOS0_(%"struct.autofill::Suggestion"* nonnull %8, %"struct.autofill::Suggestion"* dereferenceable(216) %0) #11
  %18 = call dereferenceable(216) %"struct.autofill::Suggestion"* @_ZN8autofill10SuggestionaSEOS0_(%"struct.autofill::Suggestion"* %0, %"struct.autofill::Suggestion"* dereferenceable(216) %10) #11
  %19 = call dereferenceable(216) %"struct.autofill::Suggestion"* @_ZN8autofill10SuggestionaSEOS0_(%"struct.autofill::Suggestion"* %10, %"struct.autofill::Suggestion"* nonnull dereferenceable(216) %8) #11
  call void @_ZN8autofill10SuggestionD1Ev(%"struct.autofill::Suggestion"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 216, i8* nonnull %17) #11
  br label %108

20:                                               ; preds = %6
  %21 = icmp slt i64 %3, 1
  br i1 %21, label %22, label %48

22:                                               ; preds = %20
  %23 = icmp eq %"struct.autofill::Suggestion"* %0, %1
  br i1 %23, label %108, label %24

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %0, i64 1
  %26 = icmp eq %"struct.autofill::Suggestion"* %25, %1
  br i1 %26, label %108, label %27

27:                                               ; preds = %24
  %28 = bitcast %"struct.autofill::Suggestion"* %7 to i8*
  %29 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %7, i64 0, i32 9
  br label %30

30:                                               ; preds = %40, %27
  %31 = phi %"struct.autofill::Suggestion"* [ %25, %27 ], [ %43, %40 ]
  call void @llvm.lifetime.start.p0i8(i64 216, i8* nonnull %28) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 216, i1 false) #11
  call void @_ZN8autofill10SuggestionC1EOS0_(%"struct.autofill::Suggestion"* nonnull %7, %"struct.autofill::Suggestion"* dereferenceable(216) %31) #11
  %32 = icmp eq %"struct.autofill::Suggestion"* %31, %0
  br i1 %32, label %40, label %33

33:                                               ; preds = %30, %45
  %34 = phi %"struct.autofill::Suggestion"* [ %35, %45 ], [ %31, %30 ]
  %35 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %34, i64 -1
  %36 = load i32, i32* %29, align 8
  %37 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %34, i64 -1, i32 9
  %38 = load i32, i32* %37, align 8
  %39 = icmp slt i32 %36, %38
  br i1 %39, label %45, label %40

40:                                               ; preds = %45, %33, %30
  %41 = phi %"struct.autofill::Suggestion"* [ %0, %30 ], [ %34, %33 ], [ %0, %45 ]
  %42 = call dereferenceable(216) %"struct.autofill::Suggestion"* @_ZN8autofill10SuggestionaSEOS0_(%"struct.autofill::Suggestion"* %41, %"struct.autofill::Suggestion"* nonnull dereferenceable(216) %7) #11
  call void @_ZN8autofill10SuggestionD1Ev(%"struct.autofill::Suggestion"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 216, i8* nonnull %28) #11
  %43 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %31, i64 1
  %44 = icmp eq %"struct.autofill::Suggestion"* %43, %1
  br i1 %44, label %108, label %30

45:                                               ; preds = %33
  %46 = call dereferenceable(216) %"struct.autofill::Suggestion"* @_ZN8autofill10SuggestionaSEOS0_(%"struct.autofill::Suggestion"* %34, %"struct.autofill::Suggestion"* dereferenceable(216) %35) #11
  %47 = icmp eq %"struct.autofill::Suggestion"* %35, %0
  br i1 %47, label %40, label %33

48:                                               ; preds = %20
  %49 = lshr i64 %3, 1
  %50 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %0, i64 %49
  %51 = icmp sgt i64 %3, %5
  br i1 %51, label %106, label %52

52:                                               ; preds = %48
  tail call fastcc void @"_ZNSt3__118__stable_sort_moveIRZN8autofill20suggestion_selection27GetPrefixMatchedSuggestionsERKNS1_12AutofillTypeERKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEESD_RKNS1_25AutofillProfileComparatorEbRKNS_6vectorIPNS1_15AutofillProfileENS9_ISJ_EEEEPSL_E3$_0NS_11__wrap_iterIPNS1_10SuggestionEEEEEvT0_SV_T_NS_15iterator_traitsISV_E15difference_typeEPNSY_10value_typeE"(%"struct.autofill::Suggestion"* %0, %"struct.autofill::Suggestion"* %50, %class.anon* dereferenceable(1) %2, i64 %49, %"struct.autofill::Suggestion"* %4)
  %53 = sub nsw i64 %3, %49
  %54 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %4, i64 %49
  tail call fastcc void @"_ZNSt3__118__stable_sort_moveIRZN8autofill20suggestion_selection27GetPrefixMatchedSuggestionsERKNS1_12AutofillTypeERKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEESD_RKNS1_25AutofillProfileComparatorEbRKNS_6vectorIPNS1_15AutofillProfileENS9_ISJ_EEEEPSL_E3$_0NS_11__wrap_iterIPNS1_10SuggestionEEEEEvT0_SV_T_NS_15iterator_traitsISV_E15difference_typeEPNSY_10value_typeE"(%"struct.autofill::Suggestion"* %50, %"struct.autofill::Suggestion"* %1, %class.anon* dereferenceable(1) %2, i64 %53, %"struct.autofill::Suggestion"* %54)
  %55 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %4, i64 %3
  br label %58

56:                                               ; preds = %84
  %57 = icmp eq %"struct.autofill::Suggestion"* %85, %55
  br i1 %57, label %96, label %89

58:                                               ; preds = %52, %84
  %59 = phi %"struct.autofill::Suggestion"* [ %86, %84 ], [ %4, %52 ]
  %60 = phi %"struct.autofill::Suggestion"* [ %85, %84 ], [ %54, %52 ]
  %61 = phi %"struct.autofill::Suggestion"* [ %87, %84 ], [ %0, %52 ]
  %62 = icmp eq %"struct.autofill::Suggestion"* %60, %55
  br i1 %62, label %63, label %72

63:                                               ; preds = %58
  %64 = icmp eq %"struct.autofill::Suggestion"* %59, %54
  br i1 %64, label %96, label %65

65:                                               ; preds = %63, %65
  %66 = phi %"struct.autofill::Suggestion"* [ %69, %65 ], [ %59, %63 ]
  %67 = phi %"struct.autofill::Suggestion"* [ %70, %65 ], [ %61, %63 ]
  %68 = tail call dereferenceable(216) %"struct.autofill::Suggestion"* @_ZN8autofill10SuggestionaSEOS0_(%"struct.autofill::Suggestion"* %67, %"struct.autofill::Suggestion"* dereferenceable(216) %66) #11
  %69 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %66, i64 1
  %70 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %67, i64 1
  %71 = icmp eq %"struct.autofill::Suggestion"* %69, %54
  br i1 %71, label %96, label %65

72:                                               ; preds = %58
  %73 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %60, i64 0, i32 9
  %74 = load i32, i32* %73, align 8
  %75 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %59, i64 0, i32 9
  %76 = load i32, i32* %75, align 8
  %77 = icmp slt i32 %74, %76
  br i1 %77, label %78, label %81

78:                                               ; preds = %72
  %79 = tail call dereferenceable(216) %"struct.autofill::Suggestion"* @_ZN8autofill10SuggestionaSEOS0_(%"struct.autofill::Suggestion"* %61, %"struct.autofill::Suggestion"* dereferenceable(216) %60) #11
  %80 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %60, i64 1
  br label %84

81:                                               ; preds = %72
  %82 = tail call dereferenceable(216) %"struct.autofill::Suggestion"* @_ZN8autofill10SuggestionaSEOS0_(%"struct.autofill::Suggestion"* %61, %"struct.autofill::Suggestion"* dereferenceable(216) %59) #11
  %83 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %59, i64 1
  br label %84

84:                                               ; preds = %81, %78
  %85 = phi %"struct.autofill::Suggestion"* [ %80, %78 ], [ %60, %81 ]
  %86 = phi %"struct.autofill::Suggestion"* [ %59, %78 ], [ %83, %81 ]
  %87 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %61, i64 1
  %88 = icmp eq %"struct.autofill::Suggestion"* %86, %54
  br i1 %88, label %56, label %58

89:                                               ; preds = %56, %89
  %90 = phi %"struct.autofill::Suggestion"* [ %93, %89 ], [ %85, %56 ]
  %91 = phi %"struct.autofill::Suggestion"* [ %94, %89 ], [ %87, %56 ]
  %92 = tail call dereferenceable(216) %"struct.autofill::Suggestion"* @_ZN8autofill10SuggestionaSEOS0_(%"struct.autofill::Suggestion"* %91, %"struct.autofill::Suggestion"* dereferenceable(216) %90) #11
  %93 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %90, i64 1
  %94 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %91, i64 1
  %95 = icmp eq %"struct.autofill::Suggestion"* %93, %55
  br i1 %95, label %96, label %89

96:                                               ; preds = %89, %65, %56, %63
  %97 = icmp eq %"struct.autofill::Suggestion"* %4, null
  %98 = icmp eq i64 %3, 0
  %99 = or i1 %98, %97
  br i1 %99, label %108, label %100

100:                                              ; preds = %96, %100
  %101 = phi i64 [ %103, %100 ], [ 0, %96 ]
  %102 = phi %"struct.autofill::Suggestion"* [ %104, %100 ], [ %4, %96 ]
  tail call void @_ZN8autofill10SuggestionD1Ev(%"struct.autofill::Suggestion"* %102) #11
  %103 = add nuw i64 %101, 1
  %104 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %102, i64 1
  %105 = icmp eq i64 %103, %3
  br i1 %105, label %108, label %100

106:                                              ; preds = %48
  tail call fastcc void @"_ZNSt3__113__stable_sortIRZN8autofill20suggestion_selection27GetPrefixMatchedSuggestionsERKNS1_12AutofillTypeERKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEESD_RKNS1_25AutofillProfileComparatorEbRKNS_6vectorIPNS1_15AutofillProfileENS9_ISJ_EEEEPSL_E3$_0NS_11__wrap_iterIPNS1_10SuggestionEEEEEvT0_SV_T_NS_15iterator_traitsISV_E15difference_typeEPNSY_10value_typeEl"(%"struct.autofill::Suggestion"* %0, %"struct.autofill::Suggestion"* %50, %class.anon* dereferenceable(1) %2, i64 %49, %"struct.autofill::Suggestion"* %4, i64 %5)
  %107 = sub nsw i64 %3, %49
  tail call fastcc void @"_ZNSt3__113__stable_sortIRZN8autofill20suggestion_selection27GetPrefixMatchedSuggestionsERKNS1_12AutofillTypeERKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEESD_RKNS1_25AutofillProfileComparatorEbRKNS_6vectorIPNS1_15AutofillProfileENS9_ISJ_EEEEPSL_E3$_0NS_11__wrap_iterIPNS1_10SuggestionEEEEEvT0_SV_T_NS_15iterator_traitsISV_E15difference_typeEPNSY_10value_typeEl"(%"struct.autofill::Suggestion"* %50, %"struct.autofill::Suggestion"* %1, %class.anon* dereferenceable(1) %2, i64 %107, %"struct.autofill::Suggestion"* %4, i64 %5)
  tail call fastcc void @"_ZNSt3__115__inplace_mergeIRZN8autofill20suggestion_selection27GetPrefixMatchedSuggestionsERKNS1_12AutofillTypeERKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEESD_RKNS1_25AutofillProfileComparatorEbRKNS_6vectorIPNS1_15AutofillProfileENS9_ISJ_EEEEPSL_E3$_0NS_11__wrap_iterIPNS1_10SuggestionEEEEEvT0_SV_SV_T_NS_15iterator_traitsISV_E15difference_typeESZ_PNSY_10value_typeEl"(%"struct.autofill::Suggestion"* %0, %"struct.autofill::Suggestion"* %50, %"struct.autofill::Suggestion"* %1, %class.anon* dereferenceable(1) %2, i64 %49, i64 %107, %"struct.autofill::Suggestion"* %4, i64 %5)
  br label %108

108:                                              ; preds = %100, %40, %96, %24, %22, %106, %9, %16, %6, %6
  ret void
}

; Function Attrs: nobuiltin nofree nounwind
declare noalias i8* @_ZnwmRKSt9nothrow_t(i64, %"struct.std::nothrow_t"* dereferenceable(1)) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @"_ZNSt3__118__stable_sort_moveIRZN8autofill20suggestion_selection27GetPrefixMatchedSuggestionsERKNS1_12AutofillTypeERKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEESD_RKNS1_25AutofillProfileComparatorEbRKNS_6vectorIPNS1_15AutofillProfileENS9_ISJ_EEEEPSL_E3$_0NS_11__wrap_iterIPNS1_10SuggestionEEEEEvT0_SV_T_NS_15iterator_traitsISV_E15difference_typeEPNSY_10value_typeE"(%"struct.autofill::Suggestion"*, %"struct.autofill::Suggestion"*, %class.anon* dereferenceable(1), i64, %"struct.autofill::Suggestion"*) unnamed_addr #0 {
  switch i64 %3, label %18 [
    i64 0, label %98
    i64 1, label %6
    i64 2, label %7
  ]

6:                                                ; preds = %5
  tail call void @_ZN8autofill10SuggestionC1EOS0_(%"struct.autofill::Suggestion"* %4, %"struct.autofill::Suggestion"* dereferenceable(216) %0) #11
  br label %98

7:                                                ; preds = %5
  %8 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %1, i64 -1
  %9 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %1, i64 -1, i32 9
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %0, i64 0, i32 9
  %12 = load i32, i32* %11, align 8
  %13 = icmp slt i32 %10, %12
  br i1 %13, label %14, label %16

14:                                               ; preds = %7
  tail call void @_ZN8autofill10SuggestionC1EOS0_(%"struct.autofill::Suggestion"* %4, %"struct.autofill::Suggestion"* dereferenceable(216) %8) #11
  %15 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %4, i64 1
  tail call void @_ZN8autofill10SuggestionC1EOS0_(%"struct.autofill::Suggestion"* %15, %"struct.autofill::Suggestion"* dereferenceable(216) %0) #11
  br label %98

16:                                               ; preds = %7
  tail call void @_ZN8autofill10SuggestionC1EOS0_(%"struct.autofill::Suggestion"* %4, %"struct.autofill::Suggestion"* dereferenceable(216) %0) #11
  %17 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %4, i64 1
  tail call void @_ZN8autofill10SuggestionC1EOS0_(%"struct.autofill::Suggestion"* %17, %"struct.autofill::Suggestion"* dereferenceable(216) %8) #11
  br label %98

18:                                               ; preds = %5
  %19 = icmp slt i64 %3, 9
  br i1 %19, label %20, label %54

20:                                               ; preds = %18
  %21 = icmp eq %"struct.autofill::Suggestion"* %0, %1
  br i1 %21, label %98, label %22

22:                                               ; preds = %20
  tail call void @_ZN8autofill10SuggestionC1EOS0_(%"struct.autofill::Suggestion"* %4, %"struct.autofill::Suggestion"* dereferenceable(216) %0) #11
  %23 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %0, i64 1
  %24 = icmp eq %"struct.autofill::Suggestion"* %23, %1
  br i1 %24, label %98, label %25

25:                                               ; preds = %22, %51
  %26 = phi %"struct.autofill::Suggestion"* [ %52, %51 ], [ %23, %22 ]
  %27 = phi %"struct.autofill::Suggestion"* [ %29, %51 ], [ %4, %22 ]
  %28 = phi %"struct.autofill::Suggestion"* [ %26, %51 ], [ %0, %22 ]
  %29 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %27, i64 1
  %30 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %28, i64 1, i32 9
  %31 = load i32, i32* %30, align 8
  %32 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %27, i64 0, i32 9
  %33 = load i32, i32* %32, align 8
  %34 = icmp slt i32 %31, %33
  br i1 %34, label %35, label %50

35:                                               ; preds = %25
  tail call void @_ZN8autofill10SuggestionC1EOS0_(%"struct.autofill::Suggestion"* %29, %"struct.autofill::Suggestion"* dereferenceable(216) %27) #11
  %36 = icmp eq %"struct.autofill::Suggestion"* %27, %4
  br i1 %36, label %47, label %37

37:                                               ; preds = %35, %44
  %38 = phi %"struct.autofill::Suggestion"* [ %39, %44 ], [ %27, %35 ]
  %39 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %38, i64 -1
  %40 = load i32, i32* %30, align 8
  %41 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %38, i64 -1, i32 9
  %42 = load i32, i32* %41, align 8
  %43 = icmp slt i32 %40, %42
  br i1 %43, label %44, label %47

44:                                               ; preds = %37
  %45 = tail call dereferenceable(216) %"struct.autofill::Suggestion"* @_ZN8autofill10SuggestionaSEOS0_(%"struct.autofill::Suggestion"* %38, %"struct.autofill::Suggestion"* dereferenceable(216) %39) #11
  %46 = icmp eq %"struct.autofill::Suggestion"* %39, %4
  br i1 %46, label %47, label %37

47:                                               ; preds = %44, %37, %35
  %48 = phi %"struct.autofill::Suggestion"* [ %4, %35 ], [ %38, %37 ], [ %4, %44 ]
  %49 = tail call dereferenceable(216) %"struct.autofill::Suggestion"* @_ZN8autofill10SuggestionaSEOS0_(%"struct.autofill::Suggestion"* %48, %"struct.autofill::Suggestion"* dereferenceable(216) %26) #11
  br label %51

50:                                               ; preds = %25
  tail call void @_ZN8autofill10SuggestionC1EOS0_(%"struct.autofill::Suggestion"* %29, %"struct.autofill::Suggestion"* dereferenceable(216) %26) #11
  br label %51

51:                                               ; preds = %50, %47
  %52 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %26, i64 1
  %53 = icmp eq %"struct.autofill::Suggestion"* %52, %1
  br i1 %53, label %98, label %25

54:                                               ; preds = %18
  %55 = lshr i64 %3, 1
  %56 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %0, i64 %55
  tail call fastcc void @"_ZNSt3__113__stable_sortIRZN8autofill20suggestion_selection27GetPrefixMatchedSuggestionsERKNS1_12AutofillTypeERKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEESD_RKNS1_25AutofillProfileComparatorEbRKNS_6vectorIPNS1_15AutofillProfileENS9_ISJ_EEEEPSL_E3$_0NS_11__wrap_iterIPNS1_10SuggestionEEEEEvT0_SV_T_NS_15iterator_traitsISV_E15difference_typeEPNSY_10value_typeEl"(%"struct.autofill::Suggestion"* %0, %"struct.autofill::Suggestion"* %56, %class.anon* dereferenceable(1) %2, i64 %55, %"struct.autofill::Suggestion"* %4, i64 %55)
  %57 = sub nsw i64 %3, %55
  %58 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %4, i64 %55
  tail call fastcc void @"_ZNSt3__113__stable_sortIRZN8autofill20suggestion_selection27GetPrefixMatchedSuggestionsERKNS1_12AutofillTypeERKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEESD_RKNS1_25AutofillProfileComparatorEbRKNS_6vectorIPNS1_15AutofillProfileENS9_ISJ_EEEEPSL_E3$_0NS_11__wrap_iterIPNS1_10SuggestionEEEEEvT0_SV_T_NS_15iterator_traitsISV_E15difference_typeEPNSY_10value_typeEl"(%"struct.autofill::Suggestion"* %56, %"struct.autofill::Suggestion"* %1, %class.anon* dereferenceable(1) %2, i64 %57, %"struct.autofill::Suggestion"* %58, i64 %57)
  %59 = icmp eq i64 %55, 0
  br i1 %59, label %60, label %70

60:                                               ; preds = %93, %54
  %61 = phi %"struct.autofill::Suggestion"* [ %56, %54 ], [ %94, %93 ]
  %62 = phi %"struct.autofill::Suggestion"* [ %4, %54 ], [ %96, %93 ]
  %63 = icmp eq %"struct.autofill::Suggestion"* %61, %1
  br i1 %63, label %98, label %64

64:                                               ; preds = %60, %64
  %65 = phi %"struct.autofill::Suggestion"* [ %68, %64 ], [ %62, %60 ]
  %66 = phi %"struct.autofill::Suggestion"* [ %67, %64 ], [ %61, %60 ]
  tail call void @_ZN8autofill10SuggestionC1EOS0_(%"struct.autofill::Suggestion"* %65, %"struct.autofill::Suggestion"* dereferenceable(216) %66) #11
  %67 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %66, i64 1
  %68 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %65, i64 1
  %69 = icmp eq %"struct.autofill::Suggestion"* %67, %1
  br i1 %69, label %98, label %64

70:                                               ; preds = %54, %93
  %71 = phi %"struct.autofill::Suggestion"* [ %96, %93 ], [ %4, %54 ]
  %72 = phi %"struct.autofill::Suggestion"* [ %95, %93 ], [ %0, %54 ]
  %73 = phi %"struct.autofill::Suggestion"* [ %94, %93 ], [ %56, %54 ]
  %74 = icmp eq %"struct.autofill::Suggestion"* %73, %1
  br i1 %74, label %75, label %83

75:                                               ; preds = %70
  %76 = icmp eq %"struct.autofill::Suggestion"* %72, %56
  br i1 %76, label %98, label %77

77:                                               ; preds = %75, %77
  %78 = phi %"struct.autofill::Suggestion"* [ %81, %77 ], [ %71, %75 ]
  %79 = phi %"struct.autofill::Suggestion"* [ %80, %77 ], [ %72, %75 ]
  tail call void @_ZN8autofill10SuggestionC1EOS0_(%"struct.autofill::Suggestion"* %78, %"struct.autofill::Suggestion"* dereferenceable(216) %79) #11
  %80 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %79, i64 1
  %81 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %78, i64 1
  %82 = icmp eq %"struct.autofill::Suggestion"* %80, %56
  br i1 %82, label %98, label %77

83:                                               ; preds = %70
  %84 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %73, i64 0, i32 9
  %85 = load i32, i32* %84, align 8
  %86 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %72, i64 0, i32 9
  %87 = load i32, i32* %86, align 8
  %88 = icmp slt i32 %85, %87
  br i1 %88, label %89, label %91

89:                                               ; preds = %83
  tail call void @_ZN8autofill10SuggestionC1EOS0_(%"struct.autofill::Suggestion"* %71, %"struct.autofill::Suggestion"* dereferenceable(216) %73) #11
  %90 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %73, i64 1
  br label %93

91:                                               ; preds = %83
  tail call void @_ZN8autofill10SuggestionC1EOS0_(%"struct.autofill::Suggestion"* %71, %"struct.autofill::Suggestion"* dereferenceable(216) %72) #11
  %92 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %72, i64 1
  br label %93

93:                                               ; preds = %91, %89
  %94 = phi %"struct.autofill::Suggestion"* [ %90, %89 ], [ %73, %91 ]
  %95 = phi %"struct.autofill::Suggestion"* [ %72, %89 ], [ %92, %91 ]
  %96 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %71, i64 1
  %97 = icmp eq %"struct.autofill::Suggestion"* %95, %56
  br i1 %97, label %60, label %70

98:                                               ; preds = %77, %64, %51, %75, %60, %22, %20, %16, %14, %5, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @"_ZNSt3__115__inplace_mergeIRZN8autofill20suggestion_selection27GetPrefixMatchedSuggestionsERKNS1_12AutofillTypeERKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEESD_RKNS1_25AutofillProfileComparatorEbRKNS_6vectorIPNS1_15AutofillProfileENS9_ISJ_EEEEPSL_E3$_0NS_11__wrap_iterIPNS1_10SuggestionEEEEEvT0_SV_SV_T_NS_15iterator_traitsISV_E15difference_typeESZ_PNSY_10value_typeEl"(%"struct.autofill::Suggestion"*, %"struct.autofill::Suggestion"*, %"struct.autofill::Suggestion"*, %class.anon* readnone dereferenceable(1), i64, i64, %"struct.autofill::Suggestion"*, i64) unnamed_addr #0 {
  %9 = alloca %"struct.autofill::Suggestion", align 8
  %10 = icmp eq i64 %5, 0
  br i1 %10, label %234, label %11

11:                                               ; preds = %8
  %12 = ptrtoint %"struct.autofill::Suggestion"* %1 to i64
  %13 = ptrtoint %"struct.autofill::Suggestion"* %0 to i64
  br label %14

14:                                               ; preds = %11, %227
  %15 = phi %"struct.autofill::Suggestion"* [ %232, %227 ], [ %2, %11 ]
  %16 = phi i64 [ %231, %227 ], [ %4, %11 ]
  %17 = phi i64 [ %230, %227 ], [ %5, %11 ]
  %18 = phi i64 [ %229, %227 ], [ %12, %11 ]
  %19 = phi i64 [ %228, %227 ], [ %13, %11 ]
  %20 = icmp sgt i64 %16, %7
  %21 = icmp sgt i64 %17, %7
  %22 = and i1 %21, %20
  br i1 %22, label %23, label %29

23:                                               ; preds = %14
  %24 = icmp eq i64 %16, 0
  br i1 %24, label %234, label %25

25:                                               ; preds = %23
  %26 = inttoptr i64 %18 to %"struct.autofill::Suggestion"*
  %27 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %26, i64 0, i32 9
  %28 = load i32, i32* %27, align 8
  br label %123

29:                                               ; preds = %14
  %30 = inttoptr i64 %19 to %"struct.autofill::Suggestion"*
  %31 = inttoptr i64 %18 to %"struct.autofill::Suggestion"*
  %32 = icmp sgt i64 %16, %17
  br i1 %32, label %35, label %33

33:                                               ; preds = %29
  %34 = icmp eq %"struct.autofill::Suggestion"* %30, %31
  br i1 %34, label %234, label %68

35:                                               ; preds = %29
  %36 = icmp eq %"struct.autofill::Suggestion"* %15, %31
  br i1 %36, label %234, label %104

37:                                               ; preds = %68
  %38 = icmp eq %"struct.autofill::Suggestion"* %74, %6
  br i1 %38, label %112, label %39

39:                                               ; preds = %37, %63
  %40 = phi %"struct.autofill::Suggestion"* [ %65, %63 ], [ %6, %37 ]
  %41 = phi %"struct.autofill::Suggestion"* [ %66, %63 ], [ %30, %37 ]
  %42 = phi %"struct.autofill::Suggestion"* [ %64, %63 ], [ %31, %37 ]
  %43 = icmp eq %"struct.autofill::Suggestion"* %42, %15
  br i1 %43, label %44, label %51

44:                                               ; preds = %39, %44
  %45 = phi %"struct.autofill::Suggestion"* [ %49, %44 ], [ %41, %39 ]
  %46 = phi %"struct.autofill::Suggestion"* [ %48, %44 ], [ %40, %39 ]
  %47 = tail call dereferenceable(216) %"struct.autofill::Suggestion"* @_ZN8autofill10SuggestionaSEOS0_(%"struct.autofill::Suggestion"* %45, %"struct.autofill::Suggestion"* dereferenceable(216) %46) #11
  %48 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %46, i64 1
  %49 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %45, i64 1
  %50 = icmp eq %"struct.autofill::Suggestion"* %46, %69
  br i1 %50, label %112, label %44

51:                                               ; preds = %39
  %52 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %42, i64 0, i32 9
  %53 = load i32, i32* %52, align 8
  %54 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %40, i64 0, i32 9
  %55 = load i32, i32* %54, align 8
  %56 = icmp slt i32 %53, %55
  br i1 %56, label %57, label %60

57:                                               ; preds = %51
  %58 = tail call dereferenceable(216) %"struct.autofill::Suggestion"* @_ZN8autofill10SuggestionaSEOS0_(%"struct.autofill::Suggestion"* %41, %"struct.autofill::Suggestion"* dereferenceable(216) %42) #11
  %59 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %42, i64 1
  br label %63

60:                                               ; preds = %51
  %61 = tail call dereferenceable(216) %"struct.autofill::Suggestion"* @_ZN8autofill10SuggestionaSEOS0_(%"struct.autofill::Suggestion"* %41, %"struct.autofill::Suggestion"* dereferenceable(216) %40) #11
  %62 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %40, i64 1
  br label %63

63:                                               ; preds = %60, %57
  %64 = phi %"struct.autofill::Suggestion"* [ %59, %57 ], [ %42, %60 ]
  %65 = phi %"struct.autofill::Suggestion"* [ %40, %57 ], [ %62, %60 ]
  %66 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %41, i64 1
  %67 = icmp eq %"struct.autofill::Suggestion"* %65, %74
  br i1 %67, label %112, label %39

68:                                               ; preds = %33, %68
  %69 = phi %"struct.autofill::Suggestion"* [ %74, %68 ], [ %6, %33 ]
  %70 = phi %"struct.autofill::Suggestion"* [ %73, %68 ], [ %30, %33 ]
  %71 = phi i64 [ %72, %68 ], [ 0, %33 ]
  tail call void @_ZN8autofill10SuggestionC1EOS0_(%"struct.autofill::Suggestion"* %69, %"struct.autofill::Suggestion"* dereferenceable(216) %70) #11
  %72 = add i64 %71, 1
  %73 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %70, i64 1
  %74 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %69, i64 1
  %75 = icmp eq %"struct.autofill::Suggestion"* %73, %31
  br i1 %75, label %37, label %68

76:                                               ; preds = %104
  %77 = icmp eq %"struct.autofill::Suggestion"* %110, %6
  br i1 %77, label %112, label %78

78:                                               ; preds = %76, %90
  %79 = phi %"struct.autofill::Suggestion"* [ %98, %90 ], [ %15, %76 ]
  %80 = phi %"struct.autofill::Suggestion"* [ %101, %90 ], [ %110, %76 ]
  %81 = phi %"struct.autofill::Suggestion"* [ %100, %90 ], [ %31, %76 ]
  %82 = icmp eq %"struct.autofill::Suggestion"* %81, %30
  br i1 %82, label %83, label %90

83:                                               ; preds = %78, %83
  %84 = phi %"struct.autofill::Suggestion"* [ %86, %83 ], [ %80, %78 ]
  %85 = phi %"struct.autofill::Suggestion"* [ %87, %83 ], [ %79, %78 ]
  %86 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %84, i64 -1
  %87 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %85, i64 -1
  %88 = tail call dereferenceable(216) %"struct.autofill::Suggestion"* @_ZN8autofill10SuggestionaSEOS0_(%"struct.autofill::Suggestion"* %87, %"struct.autofill::Suggestion"* dereferenceable(216) %86) #11
  %89 = icmp eq %"struct.autofill::Suggestion"* %86, %6
  br i1 %89, label %112, label %83

90:                                               ; preds = %78
  %91 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %81, i64 -1
  %92 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %80, i64 -1
  %93 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %80, i64 -1, i32 9
  %94 = load i32, i32* %93, align 8
  %95 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %81, i64 -1, i32 9
  %96 = load i32, i32* %95, align 8
  %97 = icmp slt i32 %94, %96
  %98 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %79, i64 -1
  %99 = select i1 %97, %"struct.autofill::Suggestion"* %91, %"struct.autofill::Suggestion"* %92
  %100 = select i1 %97, %"struct.autofill::Suggestion"* %91, %"struct.autofill::Suggestion"* %81
  %101 = select i1 %97, %"struct.autofill::Suggestion"* %80, %"struct.autofill::Suggestion"* %92
  %102 = tail call dereferenceable(216) %"struct.autofill::Suggestion"* @_ZN8autofill10SuggestionaSEOS0_(%"struct.autofill::Suggestion"* %98, %"struct.autofill::Suggestion"* dereferenceable(216) %99) #11
  %103 = icmp eq %"struct.autofill::Suggestion"* %101, %6
  br i1 %103, label %112, label %78

104:                                              ; preds = %35, %104
  %105 = phi %"struct.autofill::Suggestion"* [ %110, %104 ], [ %6, %35 ]
  %106 = phi %"struct.autofill::Suggestion"* [ %109, %104 ], [ %31, %35 ]
  %107 = phi i64 [ %108, %104 ], [ 0, %35 ]
  tail call void @_ZN8autofill10SuggestionC1EOS0_(%"struct.autofill::Suggestion"* %105, %"struct.autofill::Suggestion"* dereferenceable(216) %106) #11
  %108 = add i64 %107, 1
  %109 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %106, i64 1
  %110 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %105, i64 1
  %111 = icmp eq %"struct.autofill::Suggestion"* %109, %15
  br i1 %111, label %76, label %104

112:                                              ; preds = %63, %44, %90, %83, %76, %37
  %113 = phi i64 [ %72, %37 ], [ %108, %76 ], [ %108, %83 ], [ %108, %90 ], [ %72, %44 ], [ %72, %63 ]
  %114 = icmp eq %"struct.autofill::Suggestion"* %6, null
  %115 = icmp eq i64 %113, 0
  %116 = or i1 %114, %115
  br i1 %116, label %234, label %117

117:                                              ; preds = %112, %117
  %118 = phi i64 [ %120, %117 ], [ 0, %112 ]
  %119 = phi %"struct.autofill::Suggestion"* [ %121, %117 ], [ %6, %112 ]
  tail call void @_ZN8autofill10SuggestionD1Ev(%"struct.autofill::Suggestion"* %119) #11
  %120 = add nuw i64 %118, 1
  %121 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %119, i64 1
  %122 = icmp eq i64 %120, %113
  br i1 %122, label %234, label %117

123:                                              ; preds = %25, %130
  %124 = phi i64 [ %16, %25 ], [ %133, %130 ]
  %125 = phi i64 [ %19, %25 ], [ %132, %130 ]
  %126 = inttoptr i64 %125 to %"struct.autofill::Suggestion"*
  %127 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %126, i64 0, i32 9
  %128 = load i32, i32* %127, align 8
  %129 = icmp slt i32 %28, %128
  br i1 %129, label %135, label %130

130:                                              ; preds = %123
  %131 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %126, i64 1
  %132 = ptrtoint %"struct.autofill::Suggestion"* %131 to i64
  %133 = add nsw i64 %124, -1
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %234, label %123

135:                                              ; preds = %123
  %136 = inttoptr i64 %125 to %"struct.autofill::Suggestion"*
  %137 = icmp slt i64 %124, %17
  br i1 %137, label %138, label %167

138:                                              ; preds = %135
  %139 = sdiv i64 %17, 2
  %140 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %26, i64 %139
  %141 = ptrtoint %"struct.autofill::Suggestion"* %140 to i64
  %142 = sub i64 %18, %125
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %162, label %144

144:                                              ; preds = %138
  %145 = sdiv exact i64 %142, 216
  %146 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %26, i64 %139, i32 9
  %147 = load i32, i32* %146, align 8
  br label %148

148:                                              ; preds = %148, %144
  %149 = phi %"struct.autofill::Suggestion"* [ %136, %144 ], [ %160, %148 ]
  %150 = phi i64 [ %145, %144 ], [ %159, %148 ]
  %151 = lshr i64 %150, 1
  %152 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %149, i64 1
  %153 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %149, i64 %151, i32 9
  %154 = load i32, i32* %153, align 8
  %155 = icmp slt i32 %147, %154
  %156 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %152, i64 %151
  %157 = xor i64 %151, -1
  %158 = add i64 %150, %157
  %159 = select i1 %155, i64 %151, i64 %158
  %160 = select i1 %155, %"struct.autofill::Suggestion"* %149, %"struct.autofill::Suggestion"* %156
  %161 = icmp eq i64 %159, 0
  br i1 %161, label %162, label %148

162:                                              ; preds = %148, %138
  %163 = phi %"struct.autofill::Suggestion"* [ %136, %138 ], [ %160, %148 ]
  %164 = ptrtoint %"struct.autofill::Suggestion"* %163 to i64
  %165 = sub i64 %164, %125
  %166 = sdiv exact i64 %165, 216
  br label %205

167:                                              ; preds = %135
  %168 = icmp eq i64 %124, 1
  br i1 %168, label %169, label %175

169:                                              ; preds = %167
  %170 = inttoptr i64 %18 to %"struct.autofill::Suggestion"*
  %171 = inttoptr i64 %125 to %"struct.autofill::Suggestion"*
  %172 = bitcast %"struct.autofill::Suggestion"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 216, i8* nonnull %172) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %172, i8 -86, i64 216, i1 false) #11
  call void @_ZN8autofill10SuggestionC1EOS0_(%"struct.autofill::Suggestion"* nonnull %9, %"struct.autofill::Suggestion"* dereferenceable(216) %171) #11
  %173 = call dereferenceable(216) %"struct.autofill::Suggestion"* @_ZN8autofill10SuggestionaSEOS0_(%"struct.autofill::Suggestion"* %171, %"struct.autofill::Suggestion"* dereferenceable(216) %170) #11
  %174 = call dereferenceable(216) %"struct.autofill::Suggestion"* @_ZN8autofill10SuggestionaSEOS0_(%"struct.autofill::Suggestion"* %170, %"struct.autofill::Suggestion"* nonnull dereferenceable(216) %9) #11
  call void @_ZN8autofill10SuggestionD1Ev(%"struct.autofill::Suggestion"* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 216, i8* nonnull %172) #11
  br label %234

175:                                              ; preds = %167
  %176 = sdiv i64 %124, 2
  %177 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %136, i64 %176
  %178 = ptrtoint %"struct.autofill::Suggestion"* %177 to i64
  %179 = ptrtoint %"struct.autofill::Suggestion"* %15 to i64
  %180 = sub i64 %179, %18
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %200, label %182

182:                                              ; preds = %175
  %183 = sdiv exact i64 %180, 216
  %184 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %136, i64 %176, i32 9
  %185 = load i32, i32* %184, align 8
  br label %186

186:                                              ; preds = %186, %182
  %187 = phi %"struct.autofill::Suggestion"* [ %26, %182 ], [ %198, %186 ]
  %188 = phi i64 [ %183, %182 ], [ %197, %186 ]
  %189 = lshr i64 %188, 1
  %190 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %187, i64 1
  %191 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %187, i64 %189, i32 9
  %192 = load i32, i32* %191, align 8
  %193 = icmp slt i32 %192, %185
  %194 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %190, i64 %189
  %195 = xor i64 %189, -1
  %196 = add i64 %188, %195
  %197 = select i1 %193, i64 %196, i64 %189
  %198 = select i1 %193, %"struct.autofill::Suggestion"* %194, %"struct.autofill::Suggestion"* %187
  %199 = icmp eq i64 %197, 0
  br i1 %199, label %200, label %186

200:                                              ; preds = %186, %175
  %201 = phi %"struct.autofill::Suggestion"* [ %26, %175 ], [ %198, %186 ]
  %202 = ptrtoint %"struct.autofill::Suggestion"* %201 to i64
  %203 = sub i64 %202, %18
  %204 = sdiv exact i64 %203, 216
  br label %205

205:                                              ; preds = %200, %162
  %206 = phi i64 [ %164, %162 ], [ %178, %200 ]
  %207 = phi i64 [ %141, %162 ], [ %202, %200 ]
  %208 = phi i64 [ %139, %162 ], [ %204, %200 ]
  %209 = phi i64 [ %166, %162 ], [ %176, %200 ]
  %210 = sub nsw i64 %124, %209
  %211 = sub nsw i64 %17, %208
  %212 = inttoptr i64 %206 to %"struct.autofill::Suggestion"*
  %213 = inttoptr i64 %207 to %"struct.autofill::Suggestion"*
  %214 = icmp eq %"struct.autofill::Suggestion"* %212, %26
  br i1 %214, label %219, label %215

215:                                              ; preds = %205
  %216 = icmp eq %"struct.autofill::Suggestion"* %26, %213
  br i1 %216, label %219, label %217

217:                                              ; preds = %215
  %218 = tail call %"struct.autofill::Suggestion"* @_ZNSt3__116__rotate_forwardINS_11__wrap_iterIPN8autofill10SuggestionEEEEET_S6_S6_S6_(%"struct.autofill::Suggestion"* %212, %"struct.autofill::Suggestion"* %26, %"struct.autofill::Suggestion"* %213) #11
  br label %219

219:                                              ; preds = %205, %215, %217
  %220 = phi %"struct.autofill::Suggestion"* [ %218, %217 ], [ %212, %215 ], [ %213, %205 ]
  %221 = add nsw i64 %209, %208
  %222 = add nsw i64 %210, %211
  %223 = icmp slt i64 %221, %222
  br i1 %223, label %224, label %226

224:                                              ; preds = %219
  %225 = ptrtoint %"struct.autofill::Suggestion"* %220 to i64
  tail call fastcc void @"_ZNSt3__115__inplace_mergeIRZN8autofill20suggestion_selection27GetPrefixMatchedSuggestionsERKNS1_12AutofillTypeERKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEESD_RKNS1_25AutofillProfileComparatorEbRKNS_6vectorIPNS1_15AutofillProfileENS9_ISJ_EEEEPSL_E3$_0NS_11__wrap_iterIPNS1_10SuggestionEEEEEvT0_SV_SV_T_NS_15iterator_traitsISV_E15difference_typeESZ_PNSY_10value_typeEl"(%"struct.autofill::Suggestion"* %136, %"struct.autofill::Suggestion"* %212, %"struct.autofill::Suggestion"* %220, %class.anon* dereferenceable(1) %3, i64 %209, i64 %208, %"struct.autofill::Suggestion"* %6, i64 %7)
  br label %227

226:                                              ; preds = %219
  tail call fastcc void @"_ZNSt3__115__inplace_mergeIRZN8autofill20suggestion_selection27GetPrefixMatchedSuggestionsERKNS1_12AutofillTypeERKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEESD_RKNS1_25AutofillProfileComparatorEbRKNS_6vectorIPNS1_15AutofillProfileENS9_ISJ_EEEEPSL_E3$_0NS_11__wrap_iterIPNS1_10SuggestionEEEEEvT0_SV_SV_T_NS_15iterator_traitsISV_E15difference_typeESZ_PNSY_10value_typeEl"(%"struct.autofill::Suggestion"* %220, %"struct.autofill::Suggestion"* %213, %"struct.autofill::Suggestion"* %15, %class.anon* dereferenceable(1) %3, i64 %210, i64 %211, %"struct.autofill::Suggestion"* %6, i64 %7)
  br label %227

227:                                              ; preds = %224, %226
  %228 = phi i64 [ %225, %224 ], [ %125, %226 ]
  %229 = phi i64 [ %207, %224 ], [ %206, %226 ]
  %230 = phi i64 [ %211, %224 ], [ %208, %226 ]
  %231 = phi i64 [ %210, %224 ], [ %209, %226 ]
  %232 = phi %"struct.autofill::Suggestion"* [ %15, %224 ], [ %220, %226 ]
  %233 = icmp eq i64 %230, 0
  br i1 %233, label %234, label %14

234:                                              ; preds = %227, %23, %130, %117, %8, %169, %112, %35, %33
  ret void
}

declare dereferenceable(216) %"struct.autofill::Suggestion"* @_ZN8autofill10SuggestionaSEOS0_(%"struct.autofill::Suggestion"*, %"struct.autofill::Suggestion"* dereferenceable(216)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.autofill::Suggestion"* @_ZNSt3__116__rotate_forwardINS_11__wrap_iterIPN8autofill10SuggestionEEEEET_S6_S6_S6_(%"struct.autofill::Suggestion"*, %"struct.autofill::Suggestion"*, %"struct.autofill::Suggestion"*) local_unnamed_addr #0 comdat {
  %4 = alloca %"struct.autofill::Suggestion", align 8
  %5 = alloca %"struct.autofill::Suggestion", align 8
  %6 = ptrtoint %"struct.autofill::Suggestion"* %1 to i64
  %7 = bitcast %"struct.autofill::Suggestion"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 216, i8* nonnull %7) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 216, i1 false) #11
  call void @_ZN8autofill10SuggestionC1EOS0_(%"struct.autofill::Suggestion"* nonnull %4, %"struct.autofill::Suggestion"* dereferenceable(216) %0) #11
  %8 = call dereferenceable(216) %"struct.autofill::Suggestion"* @_ZN8autofill10SuggestionaSEOS0_(%"struct.autofill::Suggestion"* %0, %"struct.autofill::Suggestion"* dereferenceable(216) %1) #11
  %9 = call dereferenceable(216) %"struct.autofill::Suggestion"* @_ZN8autofill10SuggestionaSEOS0_(%"struct.autofill::Suggestion"* %1, %"struct.autofill::Suggestion"* nonnull dereferenceable(216) %4) #11
  call void @_ZN8autofill10SuggestionD1Ev(%"struct.autofill::Suggestion"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 216, i8* nonnull %7) #11
  %10 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %0, i64 1
  %11 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %1, i64 1
  %12 = icmp eq %"struct.autofill::Suggestion"* %11, %2
  br i1 %12, label %29, label %13

13:                                               ; preds = %3, %13
  %14 = phi %"struct.autofill::Suggestion"* [ %26, %13 ], [ %1, %3 ]
  %15 = phi %"struct.autofill::Suggestion"* [ %24, %13 ], [ %11, %3 ]
  %16 = phi %"struct.autofill::Suggestion"* [ %23, %13 ], [ %10, %3 ]
  %17 = phi i64 [ %20, %13 ], [ %6, %3 ]
  %18 = ptrtoint %"struct.autofill::Suggestion"* %15 to i64
  %19 = icmp eq %"struct.autofill::Suggestion"* %16, %14
  %20 = select i1 %19, i64 %18, i64 %17
  call void @llvm.lifetime.start.p0i8(i64 216, i8* nonnull %7) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 216, i1 false) #11
  call void @_ZN8autofill10SuggestionC1EOS0_(%"struct.autofill::Suggestion"* nonnull %4, %"struct.autofill::Suggestion"* dereferenceable(216) %16) #11
  %21 = call dereferenceable(216) %"struct.autofill::Suggestion"* @_ZN8autofill10SuggestionaSEOS0_(%"struct.autofill::Suggestion"* %16, %"struct.autofill::Suggestion"* dereferenceable(216) %15) #11
  %22 = call dereferenceable(216) %"struct.autofill::Suggestion"* @_ZN8autofill10SuggestionaSEOS0_(%"struct.autofill::Suggestion"* %15, %"struct.autofill::Suggestion"* nonnull dereferenceable(216) %4) #11
  call void @_ZN8autofill10SuggestionD1Ev(%"struct.autofill::Suggestion"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 216, i8* nonnull %7) #11
  %23 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %16, i64 1
  %24 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %15, i64 1
  %25 = icmp eq %"struct.autofill::Suggestion"* %24, %2
  %26 = inttoptr i64 %20 to %"struct.autofill::Suggestion"*
  br i1 %25, label %27, label %13

27:                                               ; preds = %13
  %28 = inttoptr i64 %20 to %"struct.autofill::Suggestion"*
  br label %29

29:                                               ; preds = %27, %3
  %30 = phi i64 [ %6, %3 ], [ %20, %27 ]
  %31 = phi %"struct.autofill::Suggestion"* [ %10, %3 ], [ %23, %27 ]
  %32 = phi %"struct.autofill::Suggestion"* [ %1, %3 ], [ %28, %27 ]
  %33 = icmp eq %"struct.autofill::Suggestion"* %31, %32
  br i1 %33, label %55, label %34

34:                                               ; preds = %29
  %35 = inttoptr i64 %30 to %"struct.autofill::Suggestion"*
  %36 = bitcast %"struct.autofill::Suggestion"* %5 to i8*
  br label %37

37:                                               ; preds = %52, %34
  %38 = phi i64 [ %54, %52 ], [ %30, %34 ]
  %39 = phi %"struct.autofill::Suggestion"* [ %47, %52 ], [ %31, %34 ]
  %40 = phi %"struct.autofill::Suggestion"* [ %48, %52 ], [ %35, %34 ]
  %41 = inttoptr i64 %38 to %"struct.autofill::Suggestion"*
  br label %42

42:                                               ; preds = %37, %51
  %43 = phi %"struct.autofill::Suggestion"* [ %47, %51 ], [ %39, %37 ]
  %44 = phi %"struct.autofill::Suggestion"* [ %41, %51 ], [ %40, %37 ]
  call void @llvm.lifetime.start.p0i8(i64 216, i8* nonnull %36) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 216, i1 false) #11
  call void @_ZN8autofill10SuggestionC1EOS0_(%"struct.autofill::Suggestion"* nonnull %5, %"struct.autofill::Suggestion"* dereferenceable(216) %43) #11
  %45 = call dereferenceable(216) %"struct.autofill::Suggestion"* @_ZN8autofill10SuggestionaSEOS0_(%"struct.autofill::Suggestion"* %43, %"struct.autofill::Suggestion"* dereferenceable(216) %44) #11
  %46 = call dereferenceable(216) %"struct.autofill::Suggestion"* @_ZN8autofill10SuggestionaSEOS0_(%"struct.autofill::Suggestion"* %44, %"struct.autofill::Suggestion"* nonnull dereferenceable(216) %5) #11
  call void @_ZN8autofill10SuggestionD1Ev(%"struct.autofill::Suggestion"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 216, i8* nonnull %36) #11
  %47 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %43, i64 1
  %48 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %44, i64 1
  %49 = icmp eq %"struct.autofill::Suggestion"* %48, %2
  %50 = icmp eq %"struct.autofill::Suggestion"* %47, %41
  br i1 %49, label %51, label %52

51:                                               ; preds = %42
  br i1 %50, label %55, label %42

52:                                               ; preds = %42
  %53 = ptrtoint %"struct.autofill::Suggestion"* %48 to i64
  %54 = select i1 %50, i64 %53, i64 %38
  br label %37

55:                                               ; preds = %51, %29
  ret %"struct.autofill::Suggestion"* %31
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN8autofill10SuggestionENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.71"*, %"struct.autofill::Suggestion"* dereferenceable(216)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.71", %"class.std::__1::vector.71"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.autofill::Suggestion"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.71"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 216
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 85401592933840516
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.71"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.71", %"class.std::__1::vector.71"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.autofill::Suggestion"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 216
  %20 = icmp ult i64 %19, 42700796466920258
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 85401592933840516, %14 ]
  %28 = mul i64 %27, 216
  %29 = tail call i8* @_Znwm(i64 %28) #12
  %30 = bitcast i8* %29 to %"struct.autofill::Suggestion"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.autofill::Suggestion"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %33, i64 %32
  %36 = ptrtoint %"struct.autofill::Suggestion"* %35 to i64
  tail call void @_ZN8autofill10SuggestionC1ERKS0_(%"struct.autofill::Suggestion"* %34, %"struct.autofill::Suggestion"* dereferenceable(216) %1) #11
  %37 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %34, i64 1
  %38 = ptrtoint %"struct.autofill::Suggestion"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.71", %"class.std::__1::vector.71"* %0, i64 0, i32 0, i32 0
  %40 = load %"struct.autofill::Suggestion"*, %"struct.autofill::Suggestion"** %39, align 8
  %41 = load %"struct.autofill::Suggestion"*, %"struct.autofill::Suggestion"** %3, align 8
  %42 = icmp eq %"struct.autofill::Suggestion"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"struct.autofill::Suggestion"* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %"struct.autofill::Suggestion"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"struct.autofill::Suggestion"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %46, i64 -1
  %49 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %47, i64 -1
  tail call void @_ZN8autofill10SuggestionC1EOS0_(%"struct.autofill::Suggestion"* %48, %"struct.autofill::Suggestion"* dereferenceable(216) %49) #11
  %50 = icmp eq %"struct.autofill::Suggestion"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %"struct.autofill::Suggestion"*, %"struct.autofill::Suggestion"** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %"struct.autofill::Suggestion"* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %"struct.autofill::Suggestion"* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %"struct.autofill::Suggestion"* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %"struct.autofill::Suggestion"*
  %60 = icmp eq %"struct.autofill::Suggestion"* %55, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %54, %61
  %62 = phi %"struct.autofill::Suggestion"* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %"struct.autofill::Suggestion", %"struct.autofill::Suggestion"* %62, i64 -1
  tail call void @_ZN8autofill10SuggestionD1Ev(%"struct.autofill::Suggestion"* %63) #11
  %64 = icmp eq %"struct.autofill::Suggestion"* %63, %59
  br i1 %64, label %65, label %61

65:                                               ; preds = %61, %54
  %66 = icmp eq i64 %57, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %68) #12
  br label %69

69:                                               ; preds = %65, %67
  ret void
}

declare void @_ZN8autofill10SuggestionC1ERKS0_(%"struct.autofill::Suggestion"*, %"struct.autofill::Suggestion"* dereferenceable(216)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.autofill::AutofillProfile"** @"_ZNSt3__118__stable_partitionIRZN8autofill20suggestion_selection35RemoveProfilesNotUsedSinceTimestampEN4base4TimeEPNS_6vectorIPNS1_15AutofillProfileENS_9allocatorIS7_EEEEE3$_1NS_11__wrap_iterIPS7_EElNS_4pairISF_lEEEET0_SJ_SJ_T_T1_T2_NS_26bidirectional_iterator_tagE"(%"class.autofill::AutofillProfile"**, %"class.autofill::AutofillProfile"**, %class.anon.90* dereferenceable(8), i64, %"class.autofill::AutofillProfile"**, i64) unnamed_addr #0 {
  %7 = ptrtoint %"class.autofill::AutofillProfile"** %0 to i64
  %8 = ptrtoint %"class.autofill::AutofillProfile"** %4 to i64
  switch i64 %3, label %37 [
    i64 2, label %9
    i64 3, label %14
  ]

9:                                                ; preds = %6
  %10 = bitcast %"class.autofill::AutofillProfile"** %0 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.autofill::AutofillProfile"** %1 to i64*
  %13 = load i64, i64* %12, align 8
  store i64 %13, i64* %10, align 8
  store i64 %11, i64* %12, align 8
  br label %564

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %0, i64 1
  %16 = bitcast %"class.autofill::AutofillProfile"** %15 to %"class.autofill::AutofillDataModel"**
  %17 = load %"class.autofill::AutofillDataModel"*, %"class.autofill::AutofillDataModel"** %16, align 8
  %18 = getelementptr inbounds %class.anon.90, %class.anon.90* %2, i64 0, i32 0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.autofill::AutofillDataModel", %"class.autofill::AutofillDataModel"* %17, i64 0, i32 4, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = icmp sgt i64 %21, %19
  %23 = ptrtoint %"class.autofill::AutofillDataModel"* %17 to i64
  br i1 %22, label %24, label %30

24:                                               ; preds = %14
  %25 = bitcast %"class.autofill::AutofillProfile"** %0 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.autofill::AutofillProfile"** %15 to i64*
  store i64 %23, i64* %25, align 8
  store i64 %26, i64* %27, align 8
  %28 = bitcast %"class.autofill::AutofillProfile"** %1 to i64*
  %29 = load i64, i64* %28, align 8
  store i64 %29, i64* %27, align 8
  store i64 %26, i64* %28, align 8
  br label %564

30:                                               ; preds = %14
  %31 = bitcast %"class.autofill::AutofillProfile"** %15 to i64*
  %32 = bitcast %"class.autofill::AutofillProfile"** %1 to i64*
  %33 = load i64, i64* %32, align 8
  store i64 %33, i64* %31, align 8
  store i64 %23, i64* %32, align 8
  %34 = bitcast %"class.autofill::AutofillProfile"** %0 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = load i64, i64* %31, align 8
  store i64 %36, i64* %34, align 8
  store i64 %35, i64* %31, align 8
  br label %564

37:                                               ; preds = %6
  %38 = icmp sgt i64 %3, %5
  br i1 %38, label %242, label %39

39:                                               ; preds = %37
  %40 = bitcast %"class.autofill::AutofillProfile"** %0 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.autofill::AutofillProfile"** %4 to i64*
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %4, i64 1
  %44 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %0, i64 1
  %45 = icmp eq %"class.autofill::AutofillProfile"** %44, %1
  br i1 %45, label %46, label %51

46:                                               ; preds = %39
  %47 = bitcast %"class.autofill::AutofillProfile"** %1 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.autofill::AutofillProfile"** %0 to i64*
  store i64 %48, i64* %49, align 8
  %50 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %0, i64 1
  br label %123

51:                                               ; preds = %39
  %52 = getelementptr inbounds %class.anon.90, %class.anon.90* %2, i64 0, i32 0, i32 0, i32 0
  %53 = getelementptr %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %1, i64 -2
  %54 = ptrtoint %"class.autofill::AutofillProfile"** %53 to i64
  %55 = sub i64 %54, %7
  %56 = and i64 %55, 8
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %58, label %77

58:                                               ; preds = %51
  %59 = bitcast %"class.autofill::AutofillProfile"** %44 to %"class.autofill::AutofillDataModel"**
  %60 = load %"class.autofill::AutofillDataModel"*, %"class.autofill::AutofillDataModel"** %59, align 8
  %61 = load i64, i64* %52, align 8
  %62 = getelementptr inbounds %"class.autofill::AutofillDataModel", %"class.autofill::AutofillDataModel"* %60, i64 0, i32 4, i32 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = icmp sgt i64 %63, %61
  %65 = ptrtoint %"class.autofill::AutofillDataModel"* %60 to i64
  br i1 %64, label %69, label %66

66:                                               ; preds = %58
  %67 = bitcast %"class.autofill::AutofillProfile"** %43 to i64*
  store i64 %65, i64* %67, align 8
  %68 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %4, i64 2
  br label %73

69:                                               ; preds = %58
  %70 = bitcast %"class.autofill::AutofillProfile"** %0 to i64*
  store i64 %65, i64* %70, align 8
  %71 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %0, i64 1
  %72 = ptrtoint %"class.autofill::AutofillProfile"** %71 to i64
  br label %73

73:                                               ; preds = %69, %66
  %74 = phi i64 [ %72, %69 ], [ %7, %66 ]
  %75 = phi %"class.autofill::AutofillProfile"** [ %43, %69 ], [ %68, %66 ]
  %76 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %0, i64 2
  br label %77

77:                                               ; preds = %73, %51
  %78 = phi i64 [ undef, %51 ], [ %74, %73 ]
  %79 = phi %"class.autofill::AutofillProfile"** [ undef, %51 ], [ %75, %73 ]
  %80 = phi %"class.autofill::AutofillProfile"** [ %44, %51 ], [ %76, %73 ]
  %81 = phi %"class.autofill::AutofillProfile"** [ %43, %51 ], [ %75, %73 ]
  %82 = phi i64 [ %7, %51 ], [ %74, %73 ]
  %83 = icmp ult i64 %55, 8
  br i1 %83, label %114, label %84

84:                                               ; preds = %77, %592
  %85 = phi %"class.autofill::AutofillProfile"** [ %595, %592 ], [ %80, %77 ]
  %86 = phi %"class.autofill::AutofillProfile"** [ %594, %592 ], [ %81, %77 ]
  %87 = phi i64 [ %593, %592 ], [ %82, %77 ]
  %88 = bitcast %"class.autofill::AutofillProfile"** %85 to %"class.autofill::AutofillDataModel"**
  %89 = load %"class.autofill::AutofillDataModel"*, %"class.autofill::AutofillDataModel"** %88, align 8
  %90 = load i64, i64* %52, align 8
  %91 = getelementptr inbounds %"class.autofill::AutofillDataModel", %"class.autofill::AutofillDataModel"* %89, i64 0, i32 4, i32 0, i32 0
  %92 = load i64, i64* %91, align 8
  %93 = icmp sgt i64 %92, %90
  %94 = ptrtoint %"class.autofill::AutofillDataModel"* %89 to i64
  br i1 %93, label %95, label %100

95:                                               ; preds = %84
  %96 = inttoptr i64 %87 to %"class.autofill::AutofillProfile"**
  %97 = inttoptr i64 %87 to i64*
  store i64 %94, i64* %97, align 8
  %98 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %96, i64 1
  %99 = ptrtoint %"class.autofill::AutofillProfile"** %98 to i64
  br label %103

100:                                              ; preds = %84
  %101 = bitcast %"class.autofill::AutofillProfile"** %86 to i64*
  store i64 %94, i64* %101, align 8
  %102 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %86, i64 1
  br label %103

103:                                              ; preds = %100, %95
  %104 = phi i64 [ %99, %95 ], [ %87, %100 ]
  %105 = phi %"class.autofill::AutofillProfile"** [ %86, %95 ], [ %102, %100 ]
  %106 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %85, i64 1
  %107 = bitcast %"class.autofill::AutofillProfile"** %106 to %"class.autofill::AutofillDataModel"**
  %108 = load %"class.autofill::AutofillDataModel"*, %"class.autofill::AutofillDataModel"** %107, align 8
  %109 = load i64, i64* %52, align 8
  %110 = getelementptr inbounds %"class.autofill::AutofillDataModel", %"class.autofill::AutofillDataModel"* %108, i64 0, i32 4, i32 0, i32 0
  %111 = load i64, i64* %110, align 8
  %112 = icmp sgt i64 %111, %109
  %113 = ptrtoint %"class.autofill::AutofillDataModel"* %108 to i64
  br i1 %112, label %587, label %584

114:                                              ; preds = %592, %77
  %115 = phi i64 [ %78, %77 ], [ %593, %592 ]
  %116 = phi %"class.autofill::AutofillProfile"** [ %79, %77 ], [ %594, %592 ]
  %117 = bitcast %"class.autofill::AutofillProfile"** %1 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = inttoptr i64 %115 to %"class.autofill::AutofillProfile"**
  %120 = inttoptr i64 %115 to i64*
  store i64 %118, i64* %120, align 8
  %121 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %119, i64 1
  %122 = icmp ugt %"class.autofill::AutofillProfile"** %116, %4
  br i1 %122, label %123, label %564

123:                                              ; preds = %46, %114
  %124 = phi %"class.autofill::AutofillProfile"** [ %50, %46 ], [ %121, %114 ]
  %125 = phi %"class.autofill::AutofillProfile"** [ %43, %46 ], [ %116, %114 ]
  %126 = icmp ugt %"class.autofill::AutofillProfile"** %125, %43
  %127 = select i1 %126, %"class.autofill::AutofillProfile"** %125, %"class.autofill::AutofillProfile"** %43
  %128 = bitcast %"class.autofill::AutofillProfile"** %127 to i8*
  %129 = xor i64 %8, -1
  %130 = getelementptr i8, i8* %128, i64 %129
  %131 = ptrtoint i8* %130 to i64
  %132 = lshr i64 %131, 3
  %133 = add nuw nsw i64 %132, 1
  %134 = icmp ult i64 %133, 4
  br i1 %134, label %230, label %135

135:                                              ; preds = %123
  %136 = icmp ugt %"class.autofill::AutofillProfile"** %125, %43
  %137 = select i1 %136, %"class.autofill::AutofillProfile"** %125, %"class.autofill::AutofillProfile"** %43
  %138 = bitcast %"class.autofill::AutofillProfile"** %137 to i8*
  %139 = xor i64 %8, -1
  %140 = getelementptr i8, i8* %138, i64 %139
  %141 = ptrtoint i8* %140 to i64
  %142 = lshr i64 %141, 3
  %143 = add nuw nsw i64 %142, 1
  %144 = getelementptr %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %124, i64 %143
  %145 = getelementptr %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %4, i64 %143
  %146 = icmp ult %"class.autofill::AutofillProfile"** %124, %145
  %147 = icmp ugt %"class.autofill::AutofillProfile"** %144, %4
  %148 = and i1 %146, %147
  br i1 %148, label %230, label %149

149:                                              ; preds = %135
  %150 = and i64 %133, 4611686018427387900
  %151 = getelementptr %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %4, i64 %150
  %152 = getelementptr %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %124, i64 %150
  %153 = add nsw i64 %150, -4
  %154 = lshr exact i64 %153, 2
  %155 = add nuw nsw i64 %154, 1
  %156 = and i64 %155, 3
  %157 = icmp ult i64 %153, 12
  br i1 %157, label %209, label %158

158:                                              ; preds = %149
  %159 = sub nsw i64 %155, %156
  br label %160

160:                                              ; preds = %160, %158
  %161 = phi i64 [ 0, %158 ], [ %206, %160 ]
  %162 = phi i64 [ %159, %158 ], [ %207, %160 ]
  %163 = getelementptr %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %4, i64 %161
  %164 = getelementptr %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %124, i64 %161
  %165 = bitcast %"class.autofill::AutofillProfile"** %163 to <2 x i64>*
  %166 = load <2 x i64>, <2 x i64>* %165, align 8, !alias.scope !101
  %167 = getelementptr %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %163, i64 2
  %168 = bitcast %"class.autofill::AutofillProfile"** %167 to <2 x i64>*
  %169 = load <2 x i64>, <2 x i64>* %168, align 8, !alias.scope !101
  %170 = bitcast %"class.autofill::AutofillProfile"** %164 to <2 x i64>*
  store <2 x i64> %166, <2 x i64>* %170, align 8, !alias.scope !104, !noalias !101
  %171 = getelementptr %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %164, i64 2
  %172 = bitcast %"class.autofill::AutofillProfile"** %171 to <2 x i64>*
  store <2 x i64> %169, <2 x i64>* %172, align 8, !alias.scope !104, !noalias !101
  %173 = or i64 %161, 4
  %174 = getelementptr %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %4, i64 %173
  %175 = getelementptr %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %124, i64 %173
  %176 = bitcast %"class.autofill::AutofillProfile"** %174 to <2 x i64>*
  %177 = load <2 x i64>, <2 x i64>* %176, align 8, !alias.scope !101
  %178 = getelementptr %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %174, i64 2
  %179 = bitcast %"class.autofill::AutofillProfile"** %178 to <2 x i64>*
  %180 = load <2 x i64>, <2 x i64>* %179, align 8, !alias.scope !101
  %181 = bitcast %"class.autofill::AutofillProfile"** %175 to <2 x i64>*
  store <2 x i64> %177, <2 x i64>* %181, align 8, !alias.scope !104, !noalias !101
  %182 = getelementptr %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %175, i64 2
  %183 = bitcast %"class.autofill::AutofillProfile"** %182 to <2 x i64>*
  store <2 x i64> %180, <2 x i64>* %183, align 8, !alias.scope !104, !noalias !101
  %184 = or i64 %161, 8
  %185 = getelementptr %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %4, i64 %184
  %186 = getelementptr %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %124, i64 %184
  %187 = bitcast %"class.autofill::AutofillProfile"** %185 to <2 x i64>*
  %188 = load <2 x i64>, <2 x i64>* %187, align 8, !alias.scope !101
  %189 = getelementptr %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %185, i64 2
  %190 = bitcast %"class.autofill::AutofillProfile"** %189 to <2 x i64>*
  %191 = load <2 x i64>, <2 x i64>* %190, align 8, !alias.scope !101
  %192 = bitcast %"class.autofill::AutofillProfile"** %186 to <2 x i64>*
  store <2 x i64> %188, <2 x i64>* %192, align 8, !alias.scope !104, !noalias !101
  %193 = getelementptr %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %186, i64 2
  %194 = bitcast %"class.autofill::AutofillProfile"** %193 to <2 x i64>*
  store <2 x i64> %191, <2 x i64>* %194, align 8, !alias.scope !104, !noalias !101
  %195 = or i64 %161, 12
  %196 = getelementptr %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %4, i64 %195
  %197 = getelementptr %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %124, i64 %195
  %198 = bitcast %"class.autofill::AutofillProfile"** %196 to <2 x i64>*
  %199 = load <2 x i64>, <2 x i64>* %198, align 8, !alias.scope !101
  %200 = getelementptr %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %196, i64 2
  %201 = bitcast %"class.autofill::AutofillProfile"** %200 to <2 x i64>*
  %202 = load <2 x i64>, <2 x i64>* %201, align 8, !alias.scope !101
  %203 = bitcast %"class.autofill::AutofillProfile"** %197 to <2 x i64>*
  store <2 x i64> %199, <2 x i64>* %203, align 8, !alias.scope !104, !noalias !101
  %204 = getelementptr %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %197, i64 2
  %205 = bitcast %"class.autofill::AutofillProfile"** %204 to <2 x i64>*
  store <2 x i64> %202, <2 x i64>* %205, align 8, !alias.scope !104, !noalias !101
  %206 = add i64 %161, 16
  %207 = add i64 %162, -4
  %208 = icmp eq i64 %207, 0
  br i1 %208, label %209, label %160, !llvm.loop !106

209:                                              ; preds = %160, %149
  %210 = phi i64 [ 0, %149 ], [ %206, %160 ]
  %211 = icmp eq i64 %156, 0
  br i1 %211, label %228, label %212

212:                                              ; preds = %209, %212
  %213 = phi i64 [ %225, %212 ], [ %210, %209 ]
  %214 = phi i64 [ %226, %212 ], [ %156, %209 ]
  %215 = getelementptr %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %4, i64 %213
  %216 = getelementptr %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %124, i64 %213
  %217 = bitcast %"class.autofill::AutofillProfile"** %215 to <2 x i64>*
  %218 = load <2 x i64>, <2 x i64>* %217, align 8, !alias.scope !101
  %219 = getelementptr %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %215, i64 2
  %220 = bitcast %"class.autofill::AutofillProfile"** %219 to <2 x i64>*
  %221 = load <2 x i64>, <2 x i64>* %220, align 8, !alias.scope !101
  %222 = bitcast %"class.autofill::AutofillProfile"** %216 to <2 x i64>*
  store <2 x i64> %218, <2 x i64>* %222, align 8, !alias.scope !104, !noalias !101
  %223 = getelementptr %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %216, i64 2
  %224 = bitcast %"class.autofill::AutofillProfile"** %223 to <2 x i64>*
  store <2 x i64> %221, <2 x i64>* %224, align 8, !alias.scope !104, !noalias !101
  %225 = add i64 %213, 4
  %226 = add i64 %214, -1
  %227 = icmp eq i64 %226, 0
  br i1 %227, label %228, label %212, !llvm.loop !107

228:                                              ; preds = %212, %209
  %229 = icmp eq i64 %133, %150
  br i1 %229, label %564, label %230

230:                                              ; preds = %228, %135, %123
  %231 = phi %"class.autofill::AutofillProfile"** [ %4, %135 ], [ %4, %123 ], [ %151, %228 ]
  %232 = phi %"class.autofill::AutofillProfile"** [ %124, %135 ], [ %124, %123 ], [ %152, %228 ]
  br label %233

233:                                              ; preds = %230, %233
  %234 = phi %"class.autofill::AutofillProfile"** [ %239, %233 ], [ %231, %230 ]
  %235 = phi %"class.autofill::AutofillProfile"** [ %240, %233 ], [ %232, %230 ]
  %236 = bitcast %"class.autofill::AutofillProfile"** %234 to i64*
  %237 = load i64, i64* %236, align 8
  %238 = bitcast %"class.autofill::AutofillProfile"** %235 to i64*
  store i64 %237, i64* %238, align 8
  %239 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %234, i64 1
  %240 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %235, i64 1
  %241 = icmp ult %"class.autofill::AutofillProfile"** %239, %125
  br i1 %241, label %233, label %564, !llvm.loop !108

242:                                              ; preds = %37
  %243 = sdiv i64 %3, 2
  %244 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %0, i64 %243
  %245 = bitcast %"class.autofill::AutofillProfile"** %244 to i8*
  %246 = ptrtoint %"class.autofill::AutofillProfile"** %244 to i64
  %247 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %244, i64 -1
  %248 = bitcast %"class.autofill::AutofillProfile"** %247 to %"class.autofill::AutofillDataModel"**
  %249 = load %"class.autofill::AutofillDataModel"*, %"class.autofill::AutofillDataModel"** %248, align 8
  %250 = getelementptr inbounds %class.anon.90, %class.anon.90* %2, i64 0, i32 0, i32 0, i32 0
  %251 = load i64, i64* %250, align 8
  %252 = getelementptr inbounds %"class.autofill::AutofillDataModel", %"class.autofill::AutofillDataModel"* %249, i64 0, i32 4, i32 0, i32 0
  %253 = load i64, i64* %252, align 8
  %254 = icmp sgt i64 %253, %251
  br i1 %254, label %267, label %255

255:                                              ; preds = %242, %259
  %256 = phi %"class.autofill::AutofillProfile"** [ %261, %259 ], [ %247, %242 ]
  %257 = phi i64 [ %260, %259 ], [ %243, %242 ]
  %258 = icmp eq %"class.autofill::AutofillProfile"** %256, %0
  br i1 %258, label %272, label %259

259:                                              ; preds = %255
  %260 = add nsw i64 %257, -1
  %261 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %256, i64 -1
  %262 = bitcast %"class.autofill::AutofillProfile"** %261 to %"class.autofill::AutofillDataModel"**
  %263 = load %"class.autofill::AutofillDataModel"*, %"class.autofill::AutofillDataModel"** %262, align 8
  %264 = getelementptr inbounds %"class.autofill::AutofillDataModel", %"class.autofill::AutofillDataModel"* %263, i64 0, i32 4, i32 0, i32 0
  %265 = load i64, i64* %264, align 8
  %266 = icmp sgt i64 %265, %251
  br i1 %266, label %267, label %255

267:                                              ; preds = %259, %242
  %268 = phi i64 [ %243, %242 ], [ %260, %259 ]
  %269 = phi %"class.autofill::AutofillProfile"** [ %247, %242 ], [ %261, %259 ]
  %270 = tail call fastcc %"class.autofill::AutofillProfile"** @"_ZNSt3__118__stable_partitionIRZN8autofill20suggestion_selection35RemoveProfilesNotUsedSinceTimestampEN4base4TimeEPNS_6vectorIPNS1_15AutofillProfileENS_9allocatorIS7_EEEEE3$_1NS_11__wrap_iterIPS7_EElNS_4pairISF_lEEEET0_SJ_SJ_T_T1_T2_NS_26bidirectional_iterator_tagE"(%"class.autofill::AutofillProfile"** %0, %"class.autofill::AutofillProfile"** %269, %class.anon.90* dereferenceable(8) %2, i64 %268, %"class.autofill::AutofillProfile"** %4, i64 %5)
  %271 = load i64, i64* %250, align 8
  br label %272

272:                                              ; preds = %255, %267
  %273 = phi i64 [ %271, %267 ], [ %251, %255 ]
  %274 = phi %"class.autofill::AutofillProfile"** [ %270, %267 ], [ %0, %255 ]
  %275 = ptrtoint %"class.autofill::AutofillProfile"** %274 to i64
  %276 = bitcast %"class.autofill::AutofillProfile"** %274 to i8*
  %277 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %1, i64 1
  %278 = sub nsw i64 %3, %243
  %279 = bitcast %"class.autofill::AutofillProfile"** %244 to %"class.autofill::AutofillDataModel"**
  %280 = load %"class.autofill::AutofillDataModel"*, %"class.autofill::AutofillDataModel"** %279, align 8
  %281 = getelementptr inbounds %"class.autofill::AutofillDataModel", %"class.autofill::AutofillDataModel"* %280, i64 0, i32 4, i32 0, i32 0
  %282 = load i64, i64* %281, align 8
  %283 = icmp sgt i64 %282, %273
  br i1 %283, label %284, label %296

284:                                              ; preds = %272, %289
  %285 = phi i64 [ %290, %289 ], [ %278, %272 ]
  %286 = phi %"class.autofill::AutofillProfile"** [ %287, %289 ], [ %244, %272 ]
  %287 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %286, i64 1
  %288 = icmp eq %"class.autofill::AutofillProfile"** %287, %1
  br i1 %288, label %300, label %289

289:                                              ; preds = %284
  %290 = add nsw i64 %285, -1
  %291 = bitcast %"class.autofill::AutofillProfile"** %287 to %"class.autofill::AutofillDataModel"**
  %292 = load %"class.autofill::AutofillDataModel"*, %"class.autofill::AutofillDataModel"** %291, align 8
  %293 = getelementptr inbounds %"class.autofill::AutofillDataModel", %"class.autofill::AutofillDataModel"* %292, i64 0, i32 4, i32 0, i32 0
  %294 = load i64, i64* %293, align 8
  %295 = icmp sgt i64 %294, %273
  br i1 %295, label %284, label %296

296:                                              ; preds = %289, %272
  %297 = phi %"class.autofill::AutofillProfile"** [ %244, %272 ], [ %287, %289 ]
  %298 = phi i64 [ %278, %272 ], [ %290, %289 ]
  %299 = tail call fastcc %"class.autofill::AutofillProfile"** @"_ZNSt3__118__stable_partitionIRZN8autofill20suggestion_selection35RemoveProfilesNotUsedSinceTimestampEN4base4TimeEPNS_6vectorIPNS1_15AutofillProfileENS_9allocatorIS7_EEEEE3$_1NS_11__wrap_iterIPS7_EElNS_4pairISF_lEEEET0_SJ_SJ_T_T1_T2_NS_26bidirectional_iterator_tagE"(%"class.autofill::AutofillProfile"** %297, %"class.autofill::AutofillProfile"** %1, %class.anon.90* dereferenceable(8) %2, i64 %298, %"class.autofill::AutofillProfile"** %4, i64 %5)
  br label %300

300:                                              ; preds = %284, %296
  %301 = phi %"class.autofill::AutofillProfile"** [ %299, %296 ], [ %277, %284 ]
  %302 = ptrtoint %"class.autofill::AutofillProfile"** %301 to i64
  %303 = icmp eq %"class.autofill::AutofillProfile"** %274, %244
  br i1 %303, label %564, label %304

304:                                              ; preds = %300
  %305 = icmp eq %"class.autofill::AutofillProfile"** %244, %301
  br i1 %305, label %564, label %306

306:                                              ; preds = %304
  %307 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %274, i64 1
  %308 = icmp eq %"class.autofill::AutofillProfile"** %307, %244
  br i1 %308, label %309, label %319

309:                                              ; preds = %306
  %310 = bitcast %"class.autofill::AutofillProfile"** %274 to i64*
  %311 = load i64, i64* %310, align 8
  %312 = sub i64 %302, %246
  %313 = ashr exact i64 %312, 3
  %314 = icmp eq i64 %312, 0
  br i1 %314, label %316, label %315

315:                                              ; preds = %309
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %276, i8* align 8 %245, i64 %312, i1 false) #11
  br label %316

316:                                              ; preds = %315, %309
  %317 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %274, i64 %313
  %318 = bitcast %"class.autofill::AutofillProfile"** %317 to i64*
  store i64 %311, i64* %318, align 8
  br label %564

319:                                              ; preds = %306
  %320 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %244, i64 1
  %321 = icmp eq %"class.autofill::AutofillProfile"** %320, %301
  br i1 %321, label %322, label %337

322:                                              ; preds = %319
  %323 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %301, i64 -1
  %324 = bitcast %"class.autofill::AutofillProfile"** %323 to i64*
  %325 = load i64, i64* %324, align 8
  %326 = ptrtoint %"class.autofill::AutofillProfile"** %323 to i64
  %327 = sub i64 %326, %275
  %328 = icmp eq i64 %327, 0
  br i1 %328, label %334, label %329

329:                                              ; preds = %322
  %330 = ashr exact i64 %327, 3
  %331 = sub nsw i64 0, %330
  %332 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %301, i64 %331
  %333 = bitcast %"class.autofill::AutofillProfile"** %332 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %333, i8* align 8 %276, i64 %327, i1 false) #11
  br label %334

334:                                              ; preds = %329, %322
  %335 = phi %"class.autofill::AutofillProfile"** [ %332, %329 ], [ %301, %322 ]
  %336 = bitcast %"class.autofill::AutofillProfile"** %274 to i64*
  store i64 %325, i64* %336, align 8
  br label %564

337:                                              ; preds = %319
  %338 = ptrtoint %"class.autofill::AutofillProfile"** %274 to i64
  %339 = sub i64 %246, %338
  %340 = ashr exact i64 %339, 3
  %341 = sub i64 %302, %246
  %342 = ashr exact i64 %341, 3
  %343 = icmp eq i64 %340, %342
  br i1 %343, label %344, label %494

344:                                              ; preds = %337
  %345 = add nsw i64 %243, -1
  %346 = getelementptr %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %0, i64 %345
  %347 = ptrtoint %"class.autofill::AutofillProfile"** %346 to i64
  %348 = sub i64 %347, %275
  %349 = lshr i64 %348, 3
  %350 = add nuw nsw i64 %349, 1
  %351 = icmp ult i64 %350, 4
  br i1 %351, label %438, label %352

352:                                              ; preds = %344
  %353 = add nsw i64 %243, -1
  %354 = getelementptr %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %0, i64 %353
  %355 = ptrtoint %"class.autofill::AutofillProfile"** %354 to i64
  %356 = sub i64 %355, %275
  %357 = lshr i64 %356, 3
  %358 = add nuw nsw i64 %357, 1
  %359 = getelementptr %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %274, i64 %358
  %360 = add nsw i64 %243, %357
  %361 = add i64 %360, 1
  %362 = getelementptr %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %0, i64 %361
  %363 = icmp ult %"class.autofill::AutofillProfile"** %274, %362
  %364 = icmp ult %"class.autofill::AutofillProfile"** %244, %359
  %365 = and i1 %363, %364
  br i1 %365, label %438, label %366

366:                                              ; preds = %352
  %367 = and i64 %350, 4611686018427387900
  %368 = getelementptr %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %244, i64 %367
  %369 = getelementptr %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %274, i64 %367
  %370 = add nsw i64 %367, -4
  %371 = lshr exact i64 %370, 2
  %372 = add nuw nsw i64 %371, 1
  %373 = and i64 %372, 1
  %374 = icmp eq i64 %370, 0
  br i1 %374, label %416, label %375

375:                                              ; preds = %366
  %376 = sub nuw nsw i64 %372, %373
  br label %377

377:                                              ; preds = %377, %375
  %378 = phi i64 [ 0, %375 ], [ %413, %377 ]
  %379 = phi i64 [ %376, %375 ], [ %414, %377 ]
  %380 = getelementptr %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %244, i64 %378
  %381 = getelementptr %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %274, i64 %378
  %382 = bitcast %"class.autofill::AutofillProfile"** %381 to <2 x i64>*
  %383 = load <2 x i64>, <2 x i64>* %382, align 8, !alias.scope !109, !noalias !112
  %384 = getelementptr %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %381, i64 2
  %385 = bitcast %"class.autofill::AutofillProfile"** %384 to <2 x i64>*
  %386 = load <2 x i64>, <2 x i64>* %385, align 8, !alias.scope !109, !noalias !112
  %387 = bitcast %"class.autofill::AutofillProfile"** %380 to <2 x i64>*
  %388 = load <2 x i64>, <2 x i64>* %387, align 8, !alias.scope !112
  %389 = getelementptr %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %380, i64 2
  %390 = bitcast %"class.autofill::AutofillProfile"** %389 to <2 x i64>*
  %391 = load <2 x i64>, <2 x i64>* %390, align 8, !alias.scope !112
  %392 = bitcast %"class.autofill::AutofillProfile"** %381 to <2 x i64>*
  store <2 x i64> %388, <2 x i64>* %392, align 8, !alias.scope !109, !noalias !112
  %393 = bitcast %"class.autofill::AutofillProfile"** %384 to <2 x i64>*
  store <2 x i64> %391, <2 x i64>* %393, align 8, !alias.scope !109, !noalias !112
  %394 = bitcast %"class.autofill::AutofillProfile"** %380 to <2 x i64>*
  store <2 x i64> %383, <2 x i64>* %394, align 8, !alias.scope !112
  %395 = bitcast %"class.autofill::AutofillProfile"** %389 to <2 x i64>*
  store <2 x i64> %386, <2 x i64>* %395, align 8, !alias.scope !112
  %396 = or i64 %378, 4
  %397 = getelementptr %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %244, i64 %396
  %398 = getelementptr %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %274, i64 %396
  %399 = bitcast %"class.autofill::AutofillProfile"** %398 to <2 x i64>*
  %400 = load <2 x i64>, <2 x i64>* %399, align 8, !alias.scope !109, !noalias !112
  %401 = getelementptr %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %398, i64 2
  %402 = bitcast %"class.autofill::AutofillProfile"** %401 to <2 x i64>*
  %403 = load <2 x i64>, <2 x i64>* %402, align 8, !alias.scope !109, !noalias !112
  %404 = bitcast %"class.autofill::AutofillProfile"** %397 to <2 x i64>*
  %405 = load <2 x i64>, <2 x i64>* %404, align 8, !alias.scope !112
  %406 = getelementptr %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %397, i64 2
  %407 = bitcast %"class.autofill::AutofillProfile"** %406 to <2 x i64>*
  %408 = load <2 x i64>, <2 x i64>* %407, align 8, !alias.scope !112
  %409 = bitcast %"class.autofill::AutofillProfile"** %398 to <2 x i64>*
  store <2 x i64> %405, <2 x i64>* %409, align 8, !alias.scope !109, !noalias !112
  %410 = bitcast %"class.autofill::AutofillProfile"** %401 to <2 x i64>*
  store <2 x i64> %408, <2 x i64>* %410, align 8, !alias.scope !109, !noalias !112
  %411 = bitcast %"class.autofill::AutofillProfile"** %397 to <2 x i64>*
  store <2 x i64> %400, <2 x i64>* %411, align 8, !alias.scope !112
  %412 = bitcast %"class.autofill::AutofillProfile"** %406 to <2 x i64>*
  store <2 x i64> %403, <2 x i64>* %412, align 8, !alias.scope !112
  %413 = add i64 %378, 8
  %414 = add i64 %379, -2
  %415 = icmp eq i64 %414, 0
  br i1 %415, label %416, label %377, !llvm.loop !114

416:                                              ; preds = %377, %366
  %417 = phi i64 [ 0, %366 ], [ %413, %377 ]
  %418 = icmp eq i64 %373, 0
  br i1 %418, label %436, label %419

419:                                              ; preds = %416
  %420 = getelementptr %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %244, i64 %417
  %421 = getelementptr %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %274, i64 %417
  %422 = bitcast %"class.autofill::AutofillProfile"** %421 to <2 x i64>*
  %423 = load <2 x i64>, <2 x i64>* %422, align 8, !alias.scope !109, !noalias !112
  %424 = getelementptr %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %421, i64 2
  %425 = bitcast %"class.autofill::AutofillProfile"** %424 to <2 x i64>*
  %426 = load <2 x i64>, <2 x i64>* %425, align 8, !alias.scope !109, !noalias !112
  %427 = bitcast %"class.autofill::AutofillProfile"** %420 to <2 x i64>*
  %428 = load <2 x i64>, <2 x i64>* %427, align 8, !alias.scope !112
  %429 = getelementptr %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %420, i64 2
  %430 = bitcast %"class.autofill::AutofillProfile"** %429 to <2 x i64>*
  %431 = load <2 x i64>, <2 x i64>* %430, align 8, !alias.scope !112
  %432 = bitcast %"class.autofill::AutofillProfile"** %421 to <2 x i64>*
  store <2 x i64> %428, <2 x i64>* %432, align 8, !alias.scope !109, !noalias !112
  %433 = bitcast %"class.autofill::AutofillProfile"** %424 to <2 x i64>*
  store <2 x i64> %431, <2 x i64>* %433, align 8, !alias.scope !109, !noalias !112
  %434 = bitcast %"class.autofill::AutofillProfile"** %420 to <2 x i64>*
  store <2 x i64> %423, <2 x i64>* %434, align 8, !alias.scope !112
  %435 = bitcast %"class.autofill::AutofillProfile"** %429 to <2 x i64>*
  store <2 x i64> %426, <2 x i64>* %435, align 8, !alias.scope !112
  br label %436

436:                                              ; preds = %416, %419
  %437 = icmp eq i64 %350, %367
  br i1 %437, label %564, label %438

438:                                              ; preds = %436, %352, %344
  %439 = phi %"class.autofill::AutofillProfile"** [ %244, %352 ], [ %244, %344 ], [ %368, %436 ]
  %440 = phi %"class.autofill::AutofillProfile"** [ %274, %352 ], [ %274, %344 ], [ %369, %436 ]
  %441 = ptrtoint %"class.autofill::AutofillProfile"** %440 to i64
  %442 = add nsw i64 %243, -1
  %443 = getelementptr %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %0, i64 %442
  %444 = ptrtoint %"class.autofill::AutofillProfile"** %443 to i64
  %445 = sub i64 %444, %441
  %446 = lshr i64 %445, 3
  %447 = add nuw nsw i64 %446, 1
  %448 = and i64 %447, 3
  %449 = icmp eq i64 %448, 0
  br i1 %449, label %462, label %450

450:                                              ; preds = %438, %450
  %451 = phi %"class.autofill::AutofillProfile"** [ %459, %450 ], [ %439, %438 ]
  %452 = phi %"class.autofill::AutofillProfile"** [ %458, %450 ], [ %440, %438 ]
  %453 = phi i64 [ %460, %450 ], [ %448, %438 ]
  %454 = bitcast %"class.autofill::AutofillProfile"** %452 to i64*
  %455 = load i64, i64* %454, align 8
  %456 = bitcast %"class.autofill::AutofillProfile"** %451 to i64*
  %457 = load i64, i64* %456, align 8
  store i64 %457, i64* %454, align 8
  store i64 %455, i64* %456, align 8
  %458 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %452, i64 1
  %459 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %451, i64 1
  %460 = add i64 %453, -1
  %461 = icmp eq i64 %460, 0
  br i1 %461, label %462, label %450, !llvm.loop !115

462:                                              ; preds = %450, %438
  %463 = phi %"class.autofill::AutofillProfile"** [ %439, %438 ], [ %459, %450 ]
  %464 = phi %"class.autofill::AutofillProfile"** [ %440, %438 ], [ %458, %450 ]
  %465 = icmp ult i64 %445, 24
  br i1 %465, label %564, label %466

466:                                              ; preds = %462, %466
  %467 = phi %"class.autofill::AutofillProfile"** [ %492, %466 ], [ %463, %462 ]
  %468 = phi %"class.autofill::AutofillProfile"** [ %491, %466 ], [ %464, %462 ]
  %469 = bitcast %"class.autofill::AutofillProfile"** %468 to i64*
  %470 = load i64, i64* %469, align 8
  %471 = bitcast %"class.autofill::AutofillProfile"** %467 to i64*
  %472 = load i64, i64* %471, align 8
  store i64 %472, i64* %469, align 8
  store i64 %470, i64* %471, align 8
  %473 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %468, i64 1
  %474 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %467, i64 1
  %475 = bitcast %"class.autofill::AutofillProfile"** %473 to i64*
  %476 = load i64, i64* %475, align 8
  %477 = bitcast %"class.autofill::AutofillProfile"** %474 to i64*
  %478 = load i64, i64* %477, align 8
  store i64 %478, i64* %475, align 8
  store i64 %476, i64* %477, align 8
  %479 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %468, i64 2
  %480 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %467, i64 2
  %481 = bitcast %"class.autofill::AutofillProfile"** %479 to i64*
  %482 = load i64, i64* %481, align 8
  %483 = bitcast %"class.autofill::AutofillProfile"** %480 to i64*
  %484 = load i64, i64* %483, align 8
  store i64 %484, i64* %481, align 8
  store i64 %482, i64* %483, align 8
  %485 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %468, i64 3
  %486 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %467, i64 3
  %487 = bitcast %"class.autofill::AutofillProfile"** %485 to i64*
  %488 = load i64, i64* %487, align 8
  %489 = bitcast %"class.autofill::AutofillProfile"** %486 to i64*
  %490 = load i64, i64* %489, align 8
  store i64 %490, i64* %487, align 8
  store i64 %488, i64* %489, align 8
  %491 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %468, i64 4
  %492 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %467, i64 4
  %493 = icmp eq %"class.autofill::AutofillProfile"** %491, %244
  br i1 %493, label %564, label %466, !llvm.loop !116

494:                                              ; preds = %337, %494
  %495 = phi i64 [ %497, %494 ], [ %342, %337 ]
  %496 = phi i64 [ %495, %494 ], [ %340, %337 ]
  %497 = srem i64 %496, %495
  %498 = icmp eq i64 %497, 0
  br i1 %498, label %499, label %494

499:                                              ; preds = %494
  %500 = icmp eq i64 %495, 0
  br i1 %500, label %533, label %501

501:                                              ; preds = %499
  %502 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %274, i64 %495
  %503 = shl nsw i64 %495, 3
  %504 = add i64 %503, -8
  %505 = and i64 %504, 8
  %506 = icmp eq i64 %505, 0
  br i1 %506, label %507, label %530

507:                                              ; preds = %501
  %508 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %502, i64 -1
  %509 = ptrtoint %"class.autofill::AutofillProfile"** %508 to i64
  %510 = bitcast %"class.autofill::AutofillProfile"** %508 to i64*
  %511 = load i64, i64* %510, align 8
  %512 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %508, i64 %340
  br label %513

513:                                              ; preds = %513, %507
  %514 = phi i64 [ %509, %507 ], [ %516, %513 ]
  %515 = phi %"class.autofill::AutofillProfile"** [ %512, %507 ], [ %526, %513 ]
  %516 = ptrtoint %"class.autofill::AutofillProfile"** %515 to i64
  %517 = bitcast %"class.autofill::AutofillProfile"** %515 to i64*
  %518 = load i64, i64* %517, align 8
  %519 = inttoptr i64 %514 to i64*
  store i64 %518, i64* %519, align 8
  %520 = sub i64 %302, %516
  %521 = ashr exact i64 %520, 3
  %522 = icmp slt i64 %340, %521
  %523 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %515, i64 %340
  %524 = sub nsw i64 %340, %521
  %525 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %274, i64 %524
  %526 = select i1 %522, %"class.autofill::AutofillProfile"** %523, %"class.autofill::AutofillProfile"** %525
  %527 = icmp eq %"class.autofill::AutofillProfile"** %526, %508
  br i1 %527, label %528, label %513

528:                                              ; preds = %513
  %529 = bitcast %"class.autofill::AutofillProfile"** %515 to i64*
  store i64 %511, i64* %529, align 8
  br label %530

530:                                              ; preds = %528, %501
  %531 = phi %"class.autofill::AutofillProfile"** [ %502, %501 ], [ %508, %528 ]
  %532 = icmp eq i64 %504, 0
  br i1 %532, label %533, label %535

533:                                              ; preds = %530, %581, %499
  %534 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %274, i64 %342
  br label %564

535:                                              ; preds = %530, %581
  %536 = phi %"class.autofill::AutofillProfile"** [ %559, %581 ], [ %531, %530 ]
  %537 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %536, i64 -1
  %538 = ptrtoint %"class.autofill::AutofillProfile"** %537 to i64
  %539 = bitcast %"class.autofill::AutofillProfile"** %537 to i64*
  %540 = load i64, i64* %539, align 8
  %541 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %537, i64 %340
  br label %542

542:                                              ; preds = %542, %535
  %543 = phi i64 [ %538, %535 ], [ %545, %542 ]
  %544 = phi %"class.autofill::AutofillProfile"** [ %541, %535 ], [ %555, %542 ]
  %545 = ptrtoint %"class.autofill::AutofillProfile"** %544 to i64
  %546 = bitcast %"class.autofill::AutofillProfile"** %544 to i64*
  %547 = load i64, i64* %546, align 8
  %548 = inttoptr i64 %543 to i64*
  store i64 %547, i64* %548, align 8
  %549 = sub i64 %302, %545
  %550 = ashr exact i64 %549, 3
  %551 = icmp slt i64 %340, %550
  %552 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %544, i64 %340
  %553 = sub nsw i64 %340, %550
  %554 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %274, i64 %553
  %555 = select i1 %551, %"class.autofill::AutofillProfile"** %552, %"class.autofill::AutofillProfile"** %554
  %556 = icmp eq %"class.autofill::AutofillProfile"** %555, %537
  br i1 %556, label %557, label %542

557:                                              ; preds = %542
  %558 = bitcast %"class.autofill::AutofillProfile"** %544 to i64*
  store i64 %540, i64* %558, align 8
  %559 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %536, i64 -2
  %560 = ptrtoint %"class.autofill::AutofillProfile"** %559 to i64
  %561 = bitcast %"class.autofill::AutofillProfile"** %559 to i64*
  %562 = load i64, i64* %561, align 8
  %563 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %559, i64 %340
  br label %566

564:                                              ; preds = %233, %462, %466, %228, %436, %114, %533, %334, %316, %304, %300, %24, %30, %9
  %565 = phi %"class.autofill::AutofillProfile"** [ %1, %9 ], [ %1, %24 ], [ %15, %30 ], [ %274, %304 ], [ %301, %300 ], [ %317, %316 ], [ %335, %334 ], [ %534, %533 ], [ %121, %114 ], [ %244, %436 ], [ %124, %228 ], [ %244, %466 ], [ %244, %462 ], [ %124, %233 ]
  ret %"class.autofill::AutofillProfile"** %565

566:                                              ; preds = %566, %557
  %567 = phi i64 [ %560, %557 ], [ %569, %566 ]
  %568 = phi %"class.autofill::AutofillProfile"** [ %563, %557 ], [ %579, %566 ]
  %569 = ptrtoint %"class.autofill::AutofillProfile"** %568 to i64
  %570 = bitcast %"class.autofill::AutofillProfile"** %568 to i64*
  %571 = load i64, i64* %570, align 8
  %572 = inttoptr i64 %567 to i64*
  store i64 %571, i64* %572, align 8
  %573 = sub i64 %302, %569
  %574 = ashr exact i64 %573, 3
  %575 = icmp slt i64 %340, %574
  %576 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %568, i64 %340
  %577 = sub nsw i64 %340, %574
  %578 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %274, i64 %577
  %579 = select i1 %575, %"class.autofill::AutofillProfile"** %576, %"class.autofill::AutofillProfile"** %578
  %580 = icmp eq %"class.autofill::AutofillProfile"** %579, %559
  br i1 %580, label %581, label %566

581:                                              ; preds = %566
  %582 = bitcast %"class.autofill::AutofillProfile"** %568 to i64*
  store i64 %562, i64* %582, align 8
  %583 = icmp eq %"class.autofill::AutofillProfile"** %559, %274
  br i1 %583, label %533, label %535

584:                                              ; preds = %103
  %585 = bitcast %"class.autofill::AutofillProfile"** %105 to i64*
  store i64 %113, i64* %585, align 8
  %586 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %105, i64 1
  br label %592

587:                                              ; preds = %103
  %588 = inttoptr i64 %104 to %"class.autofill::AutofillProfile"**
  %589 = inttoptr i64 %104 to i64*
  store i64 %113, i64* %589, align 8
  %590 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %588, i64 1
  %591 = ptrtoint %"class.autofill::AutofillProfile"** %590 to i64
  br label %592

592:                                              ; preds = %587, %584
  %593 = phi i64 [ %591, %587 ], [ %104, %584 ]
  %594 = phi %"class.autofill::AutofillProfile"** [ %105, %587 ], [ %586, %584 ]
  %595 = getelementptr inbounds %"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"** %85, i64 2
  %596 = icmp eq %"class.autofill::AutofillProfile"** %595, %1
  br i1 %596, label %114, label %84
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #13
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #13
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #12
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !117
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !117
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !120, !noalias !117
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !120, !noalias !117
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !117
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !117
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !120, !noalias !117
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !120, !noalias !117
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !117
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !117
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !120, !noalias !117
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !120, !noalias !117
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !117
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !117
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !120, !noalias !117
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !120, !noalias !117
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !122

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !117
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !117
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !120, !noalias !117
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !120, !noalias !117
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !123

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !124

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !125

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !126

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !127

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !128

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !130
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !130
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !133, !noalias !130
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !133, !noalias !130
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !130
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !130
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !133, !noalias !130
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !133, !noalias !130
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !130
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !130
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !133, !noalias !130
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !133, !noalias !130
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !130
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !130
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !133, !noalias !130
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !133, !noalias !130
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !135

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !130
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !130
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !133, !noalias !130
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !133, !noalias !130
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !136

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !137

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !138

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #12
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JS6_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %5 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %5, i64 0, i32 1, i32 1
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i16*, i16** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %14 = zext i8 %7 to i64
  %15 = select i1 %8, i16* %10, i16* %13
  %16 = select i1 %8, i64 %12, i64 %14
  %17 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #11
  %18 = bitcast i16* %15 to i8*
  %19 = shl nuw i64 %16, 1
  %20 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %4, i8* %18, i64 %19) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #11
  %21 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %105, label %24

24:                                               ; preds = %3
  %25 = call i64 @llvm.ctpop.i64(i64 %22) #11, !range !139
  %26 = icmp ugt i64 %25, 1
  br i1 %26, label %30, label %27

27:                                               ; preds = %24
  %28 = add i64 %22, -1
  %29 = and i64 %28, %20
  br label %34

30:                                               ; preds = %24
  %31 = icmp ult i64 %20, %22
  br i1 %31, label %34, label %32

32:                                               ; preds = %30
  %33 = urem i64 %20, %22
  br label %34

34:                                               ; preds = %27, %30, %32
  %35 = phi i64 [ %29, %27 ], [ %33, %32 ], [ %20, %30 ]
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %36, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, i64 %35
  %39 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base"* %39, null
  br i1 %40, label %105, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %39, i64 0, i32 0
  %43 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %42, align 8
  %44 = icmp eq %"struct.std::__1::__hash_node_base"* %43, null
  br i1 %44, label %105, label %45

45:                                               ; preds = %41
  %46 = add i64 %22, -1
  %47 = load i8, i8* %6, align 1
  %48 = icmp slt i8 %47, 0
  %49 = load i64, i64* %11, align 8
  %50 = zext i8 %47 to i64
  %51 = select i1 %48, i64 %49, i64 %50
  %52 = load i16*, i16** %9, align 8
  %53 = select i1 %48, i16* %52, i16* %13
  %54 = icmp eq i64 %51, 0
  br label %55

55:                                               ; preds = %45, %101
  %56 = phi %"struct.std::__1::__hash_node_base"* [ %43, %45 ], [ %103, %101 ]
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %56, i64 1
  %58 = bitcast %"struct.std::__1::__hash_node_base"* %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = icmp eq i64 %59, %20
  br i1 %60, label %71, label %61

61:                                               ; preds = %55
  br i1 %26, label %64, label %62

62:                                               ; preds = %61
  %63 = and i64 %59, %46
  br label %68

64:                                               ; preds = %61
  %65 = icmp ult i64 %59, %22
  br i1 %65, label %68, label %66

66:                                               ; preds = %64
  %67 = urem i64 %59, %22
  br label %68

68:                                               ; preds = %62, %64, %66
  %69 = phi i64 [ %63, %62 ], [ %67, %66 ], [ %59, %64 ]
  %70 = icmp eq i64 %69, %35
  br i1 %70, label %71, label %105

71:                                               ; preds = %55, %68
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %56, i64 2
  %73 = bitcast %"struct.std::__1::__hash_node_base"* %72 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %73, i64 0, i32 1, i32 1
  %75 = load i8, i8* %74, align 1
  %76 = icmp slt i8 %75, 0
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %56, i64 3
  %78 = bitcast %"struct.std::__1::__hash_node_base"* %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = zext i8 %75 to i64
  %81 = select i1 %76, i64 %79, i64 %80
  %82 = icmp eq i64 %81, %51
  br i1 %82, label %83, label %101

83:                                               ; preds = %71
  br i1 %54, label %191, label %84

84:                                               ; preds = %83
  %85 = bitcast %"struct.std::__1::__hash_node_base"* %72 to i16**
  %86 = load i16*, i16** %85, align 8
  %87 = bitcast %"struct.std::__1::__hash_node_base"* %72 to i16*
  %88 = select i1 %76, i16* %86, i16* %87
  br label %89

89:                                               ; preds = %96, %84
  %90 = phi i64 [ %97, %96 ], [ %51, %84 ]
  %91 = phi i16* [ %99, %96 ], [ %53, %84 ]
  %92 = phi i16* [ %98, %96 ], [ %88, %84 ]
  %93 = load i16, i16* %92, align 2
  %94 = load i16, i16* %91, align 2
  %95 = icmp eq i16 %94, %93
  br i1 %95, label %96, label %101

96:                                               ; preds = %89
  %97 = add i64 %90, -1
  %98 = getelementptr inbounds i16, i16* %92, i64 1
  %99 = getelementptr inbounds i16, i16* %91, i64 1
  %100 = icmp eq i64 %97, 0
  br i1 %100, label %191, label %89

101:                                              ; preds = %89, %71
  %102 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %56, i64 0, i32 0
  %103 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %102, align 8
  %104 = icmp eq %"struct.std::__1::__hash_node_base"* %103, null
  br i1 %104, label %105, label %55

105:                                              ; preds = %68, %101, %41, %34, %3
  %106 = phi i64 [ %35, %34 ], [ -6148914691236517206, %3 ], [ %35, %41 ], [ %35, %101 ], [ %35, %68 ]
  %107 = call i8* @_Znwm(i64 40) #12, !noalias !140
  %108 = getelementptr inbounds i8, i8* %107, i64 16
  %109 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %108, i8* align 8 %109, i64 24, i1 false) #11, !noalias !140
  call void @llvm.memset.p0i8.i64(i8* align 8 %109, i8 0, i64 24, i1 false) #11, !noalias !140
  %110 = getelementptr inbounds i8, i8* %107, i64 8
  %111 = bitcast i8* %110 to i64*
  store i64 %20, i64* %111, align 8, !noalias !140
  %112 = bitcast i8* %107 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %112, align 8, !noalias !140
  %113 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %114 = load i64, i64* %113, align 8
  %115 = add i64 %114, 1
  %116 = uitofp i64 %115 to float
  %117 = uitofp i64 %22 to float
  %118 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %119 = load float, float* %118, align 4
  %120 = fmul float %119, %117
  %121 = fcmp olt float %120, %116
  %122 = or i1 %23, %121
  br i1 %122, label %123, label %146

123:                                              ; preds = %105
  %124 = shl i64 %22, 1
  %125 = icmp ult i64 %22, 3
  %126 = call i64 @llvm.ctpop.i64(i64 %22) #11, !range !139
  %127 = icmp ugt i64 %126, 1
  %128 = or i1 %125, %127
  %129 = zext i1 %128 to i64
  %130 = or i64 %124, %129
  %131 = fdiv float %116, %119
  %132 = call float @llvm.ceil.f32(float %131) #11
  %133 = fptoui float %132 to i64
  %134 = icmp ult i64 %130, %133
  %135 = select i1 %134, i64 %133, i64 %130
  call void @_ZNSt3__112__hash_tableINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %135)
  %136 = load i64, i64* %21, align 8
  %137 = call i64 @llvm.ctpop.i64(i64 %136) #11, !range !139
  %138 = icmp ugt i64 %137, 1
  br i1 %138, label %142, label %139

139:                                              ; preds = %123
  %140 = add i64 %136, -1
  %141 = and i64 %140, %20
  br label %146

142:                                              ; preds = %123
  %143 = icmp ult i64 %20, %136
  br i1 %143, label %146, label %144

144:                                              ; preds = %142
  %145 = urem i64 %20, %136
  br label %146

146:                                              ; preds = %144, %142, %139, %105
  %147 = phi i64 [ %22, %105 ], [ %136, %139 ], [ %136, %142 ], [ %136, %144 ]
  %148 = phi i64 [ %106, %105 ], [ %141, %139 ], [ %20, %142 ], [ %145, %144 ]
  %149 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %150 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %149, align 8
  %151 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %150, i64 %148
  %152 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %151, align 8
  %153 = icmp eq %"struct.std::__1::__hash_node_base"* %152, null
  br i1 %153, label %154, label %180

154:                                              ; preds = %146
  %155 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %156 = bitcast %"struct.std::__1::__hash_node_base"* %155 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = bitcast i8* %107 to i64*
  store i64 %157, i64* %158, align 8
  %159 = bitcast %"struct.std::__1::__hash_node_base"* %155 to i8**
  store i8* %107, i8** %159, align 8
  store %"struct.std::__1::__hash_node_base"* %155, %"struct.std::__1::__hash_node_base"** %151, align 8
  %160 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %112, align 8
  %161 = icmp eq %"struct.std::__1::__hash_node_base"* %160, null
  br i1 %161, label %187, label %162

162:                                              ; preds = %154
  %163 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %160, i64 1
  %164 = bitcast %"struct.std::__1::__hash_node_base"* %163 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = call i64 @llvm.ctpop.i64(i64 %147) #11, !range !139
  %167 = icmp ugt i64 %166, 1
  br i1 %167, label %171, label %168

168:                                              ; preds = %162
  %169 = add i64 %147, -1
  %170 = and i64 %165, %169
  br label %175

171:                                              ; preds = %162
  %172 = icmp ult i64 %165, %147
  br i1 %172, label %175, label %173

173:                                              ; preds = %171
  %174 = urem i64 %165, %147
  br label %175

175:                                              ; preds = %168, %171, %173
  %176 = phi i64 [ %170, %168 ], [ %174, %173 ], [ %165, %171 ]
  %177 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %149, align 8
  %178 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %177, i64 %176
  %179 = bitcast %"struct.std::__1::__hash_node_base"** %178 to i8**
  br label %185

180:                                              ; preds = %146
  %181 = bitcast %"struct.std::__1::__hash_node_base"* %152 to i64*
  %182 = load i64, i64* %181, align 8
  %183 = bitcast i8* %107 to i64*
  store i64 %182, i64* %183, align 8
  %184 = bitcast %"struct.std::__1::__hash_node_base"* %152 to i8**
  br label %185

185:                                              ; preds = %175, %180
  %186 = phi i8** [ %184, %180 ], [ %179, %175 ]
  store i8* %107, i8** %186, align 8
  br label %187

187:                                              ; preds = %185, %154
  %188 = bitcast i8* %107 to %"struct.std::__1::__hash_node_base"*
  %189 = load i64, i64* %113, align 8
  %190 = add i64 %189, 1
  store i64 %190, i64* %113, align 8
  br label %191

191:                                              ; preds = %83, %96, %187
  %192 = phi i8 [ 1, %187 ], [ 0, %96 ], [ 0, %83 ]
  %193 = phi %"struct.std::__1::__hash_node_base"* [ %188, %187 ], [ %56, %96 ], [ %56, %83 ]
  %194 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %193, 0
  %195 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %194, i8 %192, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %195
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !139
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !139
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !139
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"*, i8*, i64) local_unnamed_addr #4 comdat align 2 {
  %4 = icmp ult i64 %2, 33
  br i1 %4, label %5, label %50

5:                                                ; preds = %3
  %6 = icmp ult i64 %2, 17
  br i1 %6, label %7, label %9

7:                                                ; preds = %5
  %8 = tail call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8* %1, i64 %2)
  br label %329

9:                                                ; preds = %5
  %10 = bitcast i8* %1 to i64*
  %11 = load i64, i64* %10, align 1
  %12 = mul i64 %11, -5435081209227447693
  %13 = getelementptr inbounds i8, i8* %1, i64 8
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 1
  %16 = getelementptr inbounds i8, i8* %1, i64 %2
  %17 = getelementptr inbounds i8, i8* %16, i64 -8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = mul i64 %19, -7286425919675154353
  %21 = getelementptr inbounds i8, i8* %16, i64 -16
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 1
  %24 = mul i64 %23, -4348849565147123417
  %25 = sub i64 %12, %15
  %26 = lshr i64 %25, 43
  %27 = shl i64 %25, 21
  %28 = or i64 %27, %26
  %29 = lshr i64 %20, 30
  %30 = mul i64 %19, -4737503975807385600
  %31 = or i64 %29, %30
  %32 = add i64 %24, %28
  %33 = add i64 %32, %31
  %34 = xor i64 %15, -3942382747735136937
  %35 = lshr i64 %34, 20
  %36 = shl i64 %34, 44
  %37 = or i64 %36, %35
  %38 = add i64 %12, %2
  %39 = sub i64 %38, %20
  %40 = add i64 %39, %37
  %41 = xor i64 %33, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %329

50:                                               ; preds = %3
  %51 = icmp ult i64 %2, 65
  br i1 %51, label %52, label %132

52:                                               ; preds = %50
  %53 = getelementptr inbounds i8, i8* %1, i64 24
  %54 = bitcast i8* %53 to i64*
  %55 = load i64, i64* %54, align 1
  %56 = bitcast i8* %1 to i64*
  %57 = load i64, i64* %56, align 1
  %58 = getelementptr inbounds i8, i8* %1, i64 %2
  %59 = getelementptr inbounds i8, i8* %58, i64 -16
  %60 = bitcast i8* %59 to i64*
  %61 = load i64, i64* %60, align 1
  %62 = add i64 %61, %2
  %63 = mul i64 %62, -4348849565147123417
  %64 = add i64 %63, %57
  %65 = add i64 %64, %55
  %66 = lshr i64 %65, 52
  %67 = shl i64 %65, 12
  %68 = or i64 %67, %66
  %69 = lshr i64 %64, 37
  %70 = shl i64 %64, 27
  %71 = or i64 %70, %69
  %72 = getelementptr inbounds i8, i8* %1, i64 8
  %73 = bitcast i8* %72 to i64*
  %74 = load i64, i64* %73, align 1
  %75 = add i64 %64, %74
  %76 = lshr i64 %75, 7
  %77 = shl i64 %75, 57
  %78 = or i64 %77, %76
  %79 = getelementptr inbounds i8, i8* %1, i64 16
  %80 = bitcast i8* %79 to i64*
  %81 = load i64, i64* %80, align 1
  %82 = add i64 %75, %81
  %83 = lshr i64 %82, 31
  %84 = shl i64 %82, 33
  %85 = or i64 %84, %83
  %86 = add i64 %78, %71
  %87 = add i64 %86, %68
  %88 = add i64 %87, %85
  %89 = getelementptr inbounds i8, i8* %58, i64 -32
  %90 = bitcast i8* %89 to i64*
  %91 = load i64, i64* %90, align 1
  %92 = add i64 %91, %81
  %93 = getelementptr inbounds i8, i8* %58, i64 -8
  %94 = bitcast i8* %93 to i64*
  %95 = load i64, i64* %94, align 1
  %96 = add i64 %95, %55
  %97 = add i64 %96, %92
  %98 = lshr i64 %97, 52
  %99 = shl i64 %97, 12
  %100 = or i64 %99, %98
  %101 = lshr i64 %92, 37
  %102 = shl i64 %92, 27
  %103 = or i64 %102, %101
  %104 = getelementptr inbounds i8, i8* %58, i64 -24
  %105 = bitcast i8* %104 to i64*
  %106 = load i64, i64* %105, align 1
  %107 = add i64 %106, %92
  %108 = lshr i64 %107, 7
  %109 = shl i64 %107, 57
  %110 = or i64 %109, %108
  %111 = add i64 %107, %61
  %112 = add i64 %111, %96
  %113 = lshr i64 %111, 31
  %114 = shl i64 %111, 33
  %115 = or i64 %114, %113
  %116 = add i64 %82, %55
  %117 = add i64 %116, %103
  %118 = add i64 %117, %110
  %119 = add i64 %118, %100
  %120 = add i64 %119, %115
  %121 = mul i64 %120, -7286425919675154353
  %122 = add i64 %112, %88
  %123 = mul i64 %122, -4348849565147123417
  %124 = add i64 %121, %123
  %125 = lshr i64 %124, 47
  %126 = xor i64 %125, %124
  %127 = mul i64 %126, -4348849565147123417
  %128 = add i64 %127, %88
  %129 = lshr i64 %128, 47
  %130 = xor i64 %129, %128
  %131 = mul i64 %130, -7286425919675154353
  br label %329

132:                                              ; preds = %50
  %133 = getelementptr inbounds i8, i8* %1, i64 %2
  %134 = getelementptr inbounds i8, i8* %133, i64 -40
  %135 = bitcast i8* %134 to i64*
  %136 = load i64, i64* %135, align 1
  %137 = getelementptr inbounds i8, i8* %133, i64 -16
  %138 = bitcast i8* %137 to i64*
  %139 = load i64, i64* %138, align 1
  %140 = getelementptr inbounds i8, i8* %133, i64 -56
  %141 = bitcast i8* %140 to i64*
  %142 = load i64, i64* %141, align 1
  %143 = add i64 %142, %139
  %144 = getelementptr inbounds i8, i8* %133, i64 -48
  %145 = bitcast i8* %144 to i64*
  %146 = load i64, i64* %145, align 1
  %147 = add i64 %146, %2
  %148 = getelementptr inbounds i8, i8* %133, i64 -24
  %149 = bitcast i8* %148 to i64*
  %150 = load i64, i64* %149, align 1
  %151 = xor i64 %150, %147
  %152 = mul i64 %151, -7070675565921424023
  %153 = lshr i64 %152, 47
  %154 = xor i64 %152, %150
  %155 = xor i64 %154, %153
  %156 = mul i64 %155, -7070675565921424023
  %157 = lshr i64 %156, 47
  %158 = xor i64 %157, %156
  %159 = mul i64 %158, -7070675565921424023
  %160 = getelementptr inbounds i8, i8* %133, i64 -64
  %161 = bitcast i8* %160 to i64*
  %162 = load i64, i64* %161, align 1
  %163 = add i64 %162, %2
  %164 = add i64 %136, %163
  %165 = add i64 %164, %159
  %166 = lshr i64 %165, 21
  %167 = shl i64 %165, 43
  %168 = or i64 %167, %166
  %169 = add i64 %163, %142
  %170 = add i64 %169, %146
  %171 = lshr i64 %170, 44
  %172 = shl i64 %170, 20
  %173 = or i64 %172, %171
  %174 = add i64 %170, %136
  %175 = add i64 %173, %163
  %176 = add i64 %175, %168
  %177 = getelementptr inbounds i8, i8* %133, i64 -32
  %178 = add i64 %143, -5435081209227447693
  %179 = bitcast i8* %177 to i64*
  %180 = load i64, i64* %179, align 1
  %181 = getelementptr inbounds i8, i8* %177, i64 24
  %182 = bitcast i8* %181 to i64*
  %183 = load i64, i64* %182, align 1
  %184 = add i64 %178, %180
  %185 = add i64 %184, %136
  %186 = add i64 %185, %183
  %187 = lshr i64 %186, 21
  %188 = shl i64 %186, 43
  %189 = or i64 %188, %187
  %190 = add i64 %184, %150
  %191 = add i64 %190, %139
  %192 = lshr i64 %191, 44
  %193 = shl i64 %191, 20
  %194 = or i64 %193, %192
  %195 = add i64 %191, %183
  %196 = add i64 %194, %184
  %197 = add i64 %196, %189
  %198 = mul i64 %136, -5435081209227447693
  %199 = bitcast i8* %1 to i64*
  %200 = load i64, i64* %199, align 1
  %201 = add i64 %200, %198
  %202 = add i64 %2, -1
  %203 = and i64 %202, -64
  br label %204

204:                                              ; preds = %292, %132
  %205 = phi i64 [ %200, %132 ], [ %294, %292 ]
  %206 = phi i64 [ %197, %132 ], [ %288, %292 ]
  %207 = phi i64 [ %195, %132 ], [ %286, %292 ]
  %208 = phi i64 [ %174, %132 ], [ %264, %292 ]
  %209 = phi i64 [ %176, %132 ], [ %266, %292 ]
  %210 = phi i64 [ %159, %132 ], [ %234, %292 ]
  %211 = phi i64 [ %201, %132 ], [ %244, %292 ]
  %212 = phi i64 [ %203, %132 ], [ %290, %292 ]
  %213 = phi i8* [ %1, %132 ], [ %289, %292 ]
  %214 = phi i64 [ %143, %132 ], [ %239, %292 ]
  %215 = getelementptr inbounds i8, i8* %213, i64 8
  %216 = bitcast i8* %215 to i64*
  %217 = load i64, i64* %216, align 1
  %218 = add i64 %211, %208
  %219 = add i64 %218, %214
  %220 = add i64 %219, %217
  %221 = lshr i64 %220, 37
  %222 = shl i64 %220, 27
  %223 = or i64 %222, %221
  %224 = mul i64 %223, -5435081209227447693
  %225 = add i64 %214, %209
  %226 = getelementptr inbounds i8, i8* %213, i64 48
  %227 = bitcast i8* %226 to i64*
  %228 = load i64, i64* %227, align 1
  %229 = add i64 %225, %228
  %230 = lshr i64 %229, 42
  %231 = shl i64 %229, 22
  %232 = or i64 %231, %230
  %233 = mul i64 %232, -5435081209227447693
  %234 = xor i64 %224, %206
  %235 = getelementptr inbounds i8, i8* %213, i64 40
  %236 = bitcast i8* %235 to i64*
  %237 = load i64, i64* %236, align 1
  %238 = add i64 %237, %208
  %239 = add i64 %238, %233
  %240 = add i64 %210, %207
  %241 = lshr i64 %240, 33
  %242 = shl i64 %240, 31
  %243 = or i64 %242, %241
  %244 = mul i64 %243, -5435081209227447693
  %245 = mul i64 %209, -5435081209227447693
  %246 = getelementptr inbounds i8, i8* %213, i64 16
  %247 = bitcast i8* %246 to i64*
  %248 = load i64, i64* %247, align 1
  %249 = getelementptr inbounds i8, i8* %213, i64 24
  %250 = bitcast i8* %249 to i64*
  %251 = load i64, i64* %250, align 1
  %252 = add i64 %205, %245
  %253 = add i64 %252, %207
  %254 = add i64 %253, %251
  %255 = add i64 %254, %234
  %256 = lshr i64 %255, 21
  %257 = shl i64 %255, 43
  %258 = or i64 %257, %256
  %259 = add i64 %252, %217
  %260 = add i64 %259, %248
  %261 = lshr i64 %260, 44
  %262 = shl i64 %260, 20
  %263 = or i64 %262, %261
  %264 = add i64 %260, %251
  %265 = add i64 %263, %252
  %266 = add i64 %265, %258
  %267 = getelementptr inbounds i8, i8* %213, i64 32
  %268 = add i64 %244, %206
  %269 = add i64 %239, %248
  %270 = bitcast i8* %267 to i64*
  %271 = load i64, i64* %270, align 1
  %272 = getelementptr inbounds i8, i8* %213, i64 56
  %273 = bitcast i8* %272 to i64*
  %274 = load i64, i64* %273, align 1
  %275 = add i64 %268, %271
  %276 = add i64 %269, %275
  %277 = add i64 %276, %274
  %278 = lshr i64 %277, 21
  %279 = shl i64 %277, 43
  %280 = or i64 %279, %278
  %281 = add i64 %275, %237
  %282 = add i64 %281, %228
  %283 = lshr i64 %282, 44
  %284 = shl i64 %282, 20
  %285 = or i64 %284, %283
  %286 = add i64 %282, %274
  %287 = add i64 %285, %275
  %288 = add i64 %287, %280
  %289 = getelementptr inbounds i8, i8* %213, i64 64
  %290 = add i64 %212, -64
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %295, label %292

292:                                              ; preds = %204
  %293 = bitcast i8* %289 to i64*
  %294 = load i64, i64* %293, align 1
  br label %204

295:                                              ; preds = %204
  %296 = xor i64 %286, %264
  %297 = mul i64 %296, -7070675565921424023
  %298 = lshr i64 %297, 47
  %299 = xor i64 %297, %286
  %300 = xor i64 %299, %298
  %301 = mul i64 %300, -7070675565921424023
  %302 = lshr i64 %301, 47
  %303 = xor i64 %302, %301
  %304 = mul i64 %303, -7070675565921424023
  %305 = lshr i64 %239, 47
  %306 = xor i64 %305, %239
  %307 = mul i64 %306, -5435081209227447693
  %308 = add i64 %307, %234
  %309 = add i64 %308, %304
  %310 = xor i64 %288, %266
  %311 = mul i64 %310, -7070675565921424023
  %312 = lshr i64 %311, 47
  %313 = xor i64 %311, %288
  %314 = xor i64 %313, %312
  %315 = mul i64 %314, -7070675565921424023
  %316 = lshr i64 %315, 47
  %317 = xor i64 %316, %315
  %318 = mul i64 %317, -7070675565921424023
  %319 = add i64 %318, %244
  %320 = xor i64 %319, %309
  %321 = mul i64 %320, -7070675565921424023
  %322 = lshr i64 %321, 47
  %323 = xor i64 %321, %319
  %324 = xor i64 %323, %322
  %325 = mul i64 %324, -7070675565921424023
  %326 = lshr i64 %325, 47
  %327 = xor i64 %326, %325
  %328 = mul i64 %327, -7070675565921424023
  br label %329

329:                                              ; preds = %295, %52, %9, %7
  %330 = phi i64 [ %8, %7 ], [ %49, %9 ], [ %131, %52 ], [ %328, %295 ]
  ret i64 %330
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 8
  br i1 %3, label %4, label %28

4:                                                ; preds = %2
  %5 = bitcast i8* %0 to i64*
  %6 = load i64, i64* %5, align 1
  %7 = getelementptr inbounds i8, i8* %0, i64 %1
  %8 = getelementptr inbounds i8, i8* %7, i64 -8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = add i64 %10, %1
  %12 = and i64 %1, 4294967295
  %13 = lshr i64 %11, %12
  %14 = sub i64 64, %1
  %15 = and i64 %14, 4294967295
  %16 = shl i64 %11, %15
  %17 = or i64 %16, %13
  %18 = xor i64 %17, %6
  %19 = mul i64 %18, -7070675565921424023
  %20 = lshr i64 %19, 47
  %21 = xor i64 %19, %17
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, -7070675565921424023
  %24 = lshr i64 %23, 47
  %25 = xor i64 %24, %23
  %26 = mul i64 %25, -7070675565921424023
  %27 = xor i64 %26, %10
  br label %74

28:                                               ; preds = %2
  %29 = icmp ugt i64 %1, 3
  br i1 %29, label %30, label %50

30:                                               ; preds = %28
  %31 = bitcast i8* %0 to i32*
  %32 = load i32, i32* %31, align 1
  %33 = getelementptr inbounds i8, i8* %0, i64 %1
  %34 = getelementptr inbounds i8, i8* %33, i64 -4
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 1
  %37 = shl i32 %32, 3
  %38 = zext i32 %37 to i64
  %39 = add nuw nsw i64 %38, %1
  %40 = zext i32 %36 to i64
  %41 = xor i64 %39, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %74

50:                                               ; preds = %28
  %51 = icmp eq i64 %1, 0
  br i1 %51, label %74, label %52

52:                                               ; preds = %50
  %53 = load i8, i8* %0, align 1
  %54 = lshr i64 %1, 1
  %55 = getelementptr inbounds i8, i8* %0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = add nsw i64 %1, -1
  %58 = getelementptr inbounds i8, i8* %0, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %53 to i64
  %61 = zext i8 %56 to i64
  %62 = shl nuw nsw i64 %61, 8
  %63 = or i64 %62, %60
  %64 = zext i8 %59 to i64
  %65 = shl nuw nsw i64 %64, 2
  %66 = add nuw nsw i64 %65, %1
  %67 = mul i64 %63, -7286425919675154353
  %68 = and i64 %66, 4294967295
  %69 = mul i64 %68, -3942382747735136937
  %70 = xor i64 %69, %67
  %71 = lshr i64 %70, 47
  %72 = xor i64 %71, %70
  %73 = mul i64 %72, -7286425919675154353
  br label %74

74:                                               ; preds = %50, %52, %30, %4
  %75 = phi i64 [ %27, %4 ], [ %49, %30 ], [ %73, %52 ], [ -7286425919675154353, %50 ]
  ret i64 %75
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %177, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #13
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #12
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !143

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %185, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !139
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %185, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %171
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %175, %171 ]
  %81 = phi i64 [ %71, %77 ], [ %173, %171 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %172, %171 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %171, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %118, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 0, i32 0
  %102 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %101, align 8
  %103 = icmp eq %"struct.std::__1::__hash_node_base"* %102, null
  br i1 %103, label %157, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %106 = bitcast %"struct.std::__1::__hash_node_base"* %105 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %107 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %106, i64 0, i32 1, i32 1
  %108 = load i8, i8* %107, align 1
  %109 = icmp slt i8 %108, 0
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 3
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = zext i8 %108 to i64
  %114 = select i1 %109, i64 %112, i64 %113
  %115 = icmp eq i64 %114, 0
  %116 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i16**
  %117 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i16*
  br label %119

118:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %171

119:                                              ; preds = %104, %153
  %120 = phi %"struct.std::__1::__hash_node_base"* [ %102, %104 ], [ %155, %153 ]
  %121 = phi %"struct.std::__1::__hash_node_base"* [ %80, %104 ], [ %120, %153 ]
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %120, i64 2
  %123 = bitcast %"struct.std::__1::__hash_node_base"* %122 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %124 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %123, i64 0, i32 1, i32 1
  %125 = load i8, i8* %124, align 1
  %126 = icmp slt i8 %125, 0
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %120, i64 3
  %128 = bitcast %"struct.std::__1::__hash_node_base"* %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = zext i8 %125 to i64
  %131 = select i1 %126, i64 %129, i64 %130
  %132 = icmp eq i64 %114, %131
  br i1 %132, label %133, label %157

133:                                              ; preds = %119
  br i1 %115, label %153, label %134

134:                                              ; preds = %133
  %135 = bitcast %"struct.std::__1::__hash_node_base"* %122 to i16**
  %136 = load i16*, i16** %135, align 8
  %137 = bitcast %"struct.std::__1::__hash_node_base"* %122 to i16*
  %138 = select i1 %126, i16* %136, i16* %137
  %139 = load i16*, i16** %116, align 8
  %140 = select i1 %109, i16* %139, i16* %117
  br label %141

141:                                              ; preds = %148, %134
  %142 = phi i64 [ %149, %148 ], [ %114, %134 ]
  %143 = phi i16* [ %151, %148 ], [ %138, %134 ]
  %144 = phi i16* [ %150, %148 ], [ %140, %134 ]
  %145 = load i16, i16* %144, align 2
  %146 = load i16, i16* %143, align 2
  %147 = icmp eq i16 %146, %145
  br i1 %147, label %148, label %157

148:                                              ; preds = %141
  %149 = add i64 %142, -1
  %150 = getelementptr inbounds i16, i16* %144, i64 1
  %151 = getelementptr inbounds i16, i16* %143, i64 1
  %152 = icmp eq i64 %149, 0
  br i1 %152, label %153, label %141

153:                                              ; preds = %148, %133
  %154 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %120, i64 0, i32 0
  %155 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %154, align 8
  %156 = icmp eq %"struct.std::__1::__hash_node_base"* %155, null
  br i1 %156, label %157, label %119

157:                                              ; preds = %153, %119, %141, %100
  %158 = phi %"struct.std::__1::__hash_node_base"* [ %80, %100 ], [ %121, %141 ], [ %120, %153 ], [ %121, %119 ]
  %159 = bitcast %"struct.std::__1::__hash_node_base"* %158 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %160, i64* %161, align 8
  %162 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %163 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %162, i64 %93
  %164 = bitcast %"struct.std::__1::__hash_node_base"** %163 to i64**
  %165 = load i64*, i64** %164, align 8
  %166 = load i64, i64* %165, align 8
  store i64 %166, i64* %159, align 8
  %167 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %168 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %167, i64 %93
  %169 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %168, align 8
  %170 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %169, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %170, align 8
  br label %171

171:                                              ; preds = %92, %157, %118
  %172 = phi %"struct.std::__1::__hash_node_base"* [ %80, %118 ], [ %82, %157 ], [ %80, %92 ]
  %173 = phi i64 [ %93, %118 ], [ %81, %157 ], [ %81, %92 ]
  %174 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %172, i64 0, i32 0
  %175 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %174, align 8
  %176 = icmp eq %"struct.std::__1::__hash_node_base"* %175, null
  br i1 %176, label %185, label %79

177:                                              ; preds = %2
  %178 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %179 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %178, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %178, align 8
  %180 = icmp eq %"struct.std::__1::__hash_node_base"** %179, null
  br i1 %180, label %183, label %181

181:                                              ; preds = %177
  %182 = bitcast %"struct.std::__1::__hash_node_base"** %179 to i8*
  tail call void @_ZdlPv(i8* %182) #12
  br label %183

183:                                              ; preds = %177, %181
  %184 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %184, align 8
  br label %185

185:                                              ; preds = %171, %70, %35, %183
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #10

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #10

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK8autofill25AutofillProfileComparator10app_localeEv: argument 0"}
!4 = distinct !{!4, !"_ZNK8autofill25AutofillProfileComparator10app_localeEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN8autofill20suggestion_selection12_GLOBAL__N_116GetInfoInOneLineEPKNS_15AutofillProfileERKNS_12AutofillTypeERKNSt3__112basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEE: argument 0"}
!7 = distinct !{!7, !"_ZN8autofill20suggestion_selection12_GLOBAL__N_116GetInfoInOneLineEPKNS_15AutofillProfileERKNS_12AutofillTypeERKNSt3__112basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEE"}
!8 = !{!9}
!9 = distinct !{!9, !10}
!10 = distinct !{!10, !"LVerDomain"}
!11 = !{!12}
!12 = distinct !{!12, !10}
!13 = distinct !{!13, !14}
!14 = !{!"llvm.loop.isvectorized", i32 1}
!15 = distinct !{!15, !16}
!16 = !{!"llvm.loop.unroll.disable"}
!17 = distinct !{!17, !16}
!18 = distinct !{!18, !14}
!19 = !{!20}
!20 = distinct !{!20, !21}
!21 = distinct !{!21, !"LVerDomain"}
!22 = !{!23}
!23 = distinct !{!23, !21}
!24 = distinct !{!24, !14}
!25 = distinct !{!25, !16}
!26 = distinct !{!26, !16}
!27 = distinct !{!27, !14}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZNK8autofill25AutofillProfileComparator10app_localeEv: argument 0"}
!30 = distinct !{!30, !"_ZNK8autofill25AutofillProfileComparator10app_localeEv"}
!31 = !{!32}
!32 = distinct !{!32, !33}
!33 = distinct !{!33, !"LVerDomain"}
!34 = !{!35}
!35 = distinct !{!35, !33}
!36 = distinct !{!36, !14}
!37 = distinct !{!37, !16}
!38 = distinct !{!38, !16}
!39 = distinct !{!39, !14}
!40 = !{!41}
!41 = distinct !{!41, !42, !"_ZNK8autofill17AutofillDataModel4guidEv: argument 0"}
!42 = distinct !{!42, !"_ZNK8autofill17AutofillDataModel4guidEv"}
!43 = !{i8 0, i8 2}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZN8autofill8DenseSetINS_15ServerFieldTypeELS1_118EE6insertES1_: argument 0"}
!46 = distinct !{!46, !"_ZN8autofill8DenseSetINS_15ServerFieldTypeELS1_118EE6insertES1_"}
!47 = !{!48}
!48 = distinct !{!48, !49}
!49 = distinct !{!49, !"LVerDomain"}
!50 = !{!51}
!51 = distinct !{!51, !49}
!52 = distinct !{!52, !14}
!53 = distinct !{!53, !16}
!54 = distinct !{!54, !16}
!55 = distinct !{!55, !14}
!56 = !{!57}
!57 = distinct !{!57, !58}
!58 = distinct !{!58, !"LVerDomain"}
!59 = !{!60}
!60 = distinct !{!60, !58}
!61 = distinct !{!61, !14}
!62 = distinct !{!62, !16}
!63 = distinct !{!63, !16}
!64 = distinct !{!64, !14}
!65 = !{!66}
!66 = distinct !{!66, !67}
!67 = distinct !{!67, !"LVerDomain"}
!68 = !{!69}
!69 = distinct !{!69, !67}
!70 = distinct !{!70, !14}
!71 = distinct !{!71, !16}
!72 = distinct !{!72, !16}
!73 = distinct !{!73, !14}
!74 = !{!75}
!75 = distinct !{!75, !76}
!76 = distinct !{!76, !"LVerDomain"}
!77 = !{!78}
!78 = distinct !{!78, !76}
!79 = distinct !{!79, !14}
!80 = distinct !{!80, !16}
!81 = distinct !{!81, !16}
!82 = distinct !{!82, !14}
!83 = !{!84}
!84 = distinct !{!84, !85}
!85 = distinct !{!85, !"LVerDomain"}
!86 = !{!87}
!87 = distinct !{!87, !85}
!88 = distinct !{!88, !14}
!89 = distinct !{!89, !16}
!90 = distinct !{!90, !16}
!91 = distinct !{!91, !14}
!92 = !{!93}
!93 = distinct !{!93, !94}
!94 = distinct !{!94, !"LVerDomain"}
!95 = !{!96}
!96 = distinct !{!96, !94}
!97 = distinct !{!97, !14}
!98 = distinct !{!98, !16}
!99 = distinct !{!99, !16}
!100 = distinct !{!100, !14}
!101 = !{!102}
!102 = distinct !{!102, !103}
!103 = distinct !{!103, !"LVerDomain"}
!104 = !{!105}
!105 = distinct !{!105, !103}
!106 = distinct !{!106, !14}
!107 = distinct !{!107, !16}
!108 = distinct !{!108, !14}
!109 = !{!110}
!110 = distinct !{!110, !111}
!111 = distinct !{!111, !"LVerDomain"}
!112 = !{!113}
!113 = distinct !{!113, !111}
!114 = distinct !{!114, !14}
!115 = distinct !{!115, !16}
!116 = distinct !{!116, !14}
!117 = !{!118}
!118 = distinct !{!118, !119}
!119 = distinct !{!119, !"LVerDomain"}
!120 = !{!121}
!121 = distinct !{!121, !119}
!122 = distinct !{!122, !14}
!123 = distinct !{!123, !16}
!124 = distinct !{!124, !16}
!125 = distinct !{!125, !14}
!126 = distinct !{!126, !14}
!127 = distinct !{!127, !16}
!128 = distinct !{!128, !129, !14}
!129 = !{!"llvm.loop.unroll.runtime.disable"}
!130 = !{!131}
!131 = distinct !{!131, !132}
!132 = distinct !{!132, !"LVerDomain"}
!133 = !{!134}
!134 = distinct !{!134, !132}
!135 = distinct !{!135, !14}
!136 = distinct !{!136, !16}
!137 = distinct !{!137, !16}
!138 = distinct !{!138, !14}
!139 = !{i64 0, i64 65}
!140 = !{!141}
!141 = distinct !{!141, !142, !"_ZNSt3__112__hash_tableINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE21__construct_node_hashIS6_JEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINS4_ISH_EEEEEEmOT_DpOT0_: argument 0"}
!142 = distinct !{!142, !"_ZNSt3__112__hash_tableINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE21__construct_node_hashIS6_JEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINS4_ISH_EEEEEEmOT_DpOT0_"}
!143 = distinct !{!143, !16}
