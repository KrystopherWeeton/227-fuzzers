; ModuleID = '../../third_party/blink/renderer/platform/graphics/gpu/shared_context_rate_limiter.cc'
source_filename = "../../third_party/blink/renderer/platform/graphics/gpu/shared_context_rate_limiter.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::SharedContextRateLimiter" = type <{ %"class.std::__1::unique_ptr", %"class.WTF::Deque", i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::WebGraphicsContext3DProvider"* }
%"class.blink::WebGraphicsContext3DProvider" = type { i32 (...)** }
%"class.WTF::Deque" = type { %"class.WTF::Deque<unsigned int, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<unsigned int, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i32*, i32, i32 }
%"class.blink::Platform" = type { i32 (...)** }
%"class.gpu::raster::RasterInterface" = type { %"class.gpu::InterfaceBase" }
%"class.gpu::InterfaceBase" = type { i32 (...)** }
%"struct.gpu::Capabilities" = type { %"struct.gpu::Capabilities::PerStagePrecisions", %"struct.gpu::Capabilities::PerStagePrecisions", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i64, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i64, float, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i8, %"struct.gpu::GpuMemoryBufferFormatSet", %"class.std::__1::vector" }
%"struct.gpu::Capabilities::PerStagePrecisions" = type { %"struct.gpu::Capabilities::ShaderPrecision", %"struct.gpu::Capabilities::ShaderPrecision", %"struct.gpu::Capabilities::ShaderPrecision", %"struct.gpu::Capabilities::ShaderPrecision", %"struct.gpu::Capabilities::ShaderPrecision", %"struct.gpu::Capabilities::ShaderPrecision" }
%"struct.gpu::Capabilities::ShaderPrecision" = type { i32, i32, i32 }
%"struct.gpu::GpuMemoryBufferFormatSet" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.gfx::BufferUsageAndFormat"*, %"struct.gfx::BufferUsageAndFormat"*, %"class.std::__1::__compressed_pair.1" }
%"struct.gfx::BufferUsageAndFormat" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.gfx::BufferUsageAndFormat"* }
%"class.WTF::DequeIterator" = type { %"class.WTF::DequeIteratorBase.base", [4 x i8] }
%"class.WTF::DequeIteratorBase.base" = type <{ %"class.WTF::Deque"*, i32 }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN3WTF5DequeIjLj0ENS_18PartitionAllocatorEE14ExpandCapacityEv = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm = comdat any

$_ZNK3WTF13DequeIteratorIjLj0ENS_18PartitionAllocatorEEdeEv = comdat any

@.str = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.1 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv = private unnamed_addr constant [60 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned int]\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"index_ != deque_->end_\00", align 1
@.str.3 = private unnamed_addr constant [54 x i8] c"../../third_party/blink/renderer/platform/wtf/deque.h\00", align 1

@_ZN5blink24SharedContextRateLimiterC1Ej = hidden unnamed_addr alias void (%"class.blink::SharedContextRateLimiter"*, i32), void (%"class.blink::SharedContextRateLimiter"*, i32)* @_ZN5blink24SharedContextRateLimiterC2Ej

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24SharedContextRateLimiterC2Ej(%"class.blink::SharedContextRateLimiter"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::SharedContextRateLimiter"* %0 to i64*
  %4 = getelementptr inbounds %"class.blink::SharedContextRateLimiter", %"class.blink::SharedContextRateLimiter"* %0, i64 0, i32 2
  %5 = bitcast %"class.blink::SharedContextRateLimiter"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 32, i1 false)
  store i32 %1, i32* %4, align 8
  %6 = getelementptr inbounds %"class.blink::SharedContextRateLimiter", %"class.blink::SharedContextRateLimiter"* %0, i64 0, i32 3
  store i8 0, i8* %6, align 4
  %7 = tail call %"class.blink::Platform"* @_ZN5blink8Platform7CurrentEv() #4
  %8 = bitcast %"class.blink::Platform"* %7 to %"class.blink::WebGraphicsContext3DProvider"* (%"class.blink::Platform"*)***
  %9 = load %"class.blink::WebGraphicsContext3DProvider"* (%"class.blink::Platform"*)**, %"class.blink::WebGraphicsContext3DProvider"* (%"class.blink::Platform"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.blink::WebGraphicsContext3DProvider"* (%"class.blink::Platform"*)*, %"class.blink::WebGraphicsContext3DProvider"* (%"class.blink::Platform"*)** %9, i64 49
  %11 = load %"class.blink::WebGraphicsContext3DProvider"* (%"class.blink::Platform"*)*, %"class.blink::WebGraphicsContext3DProvider"* (%"class.blink::Platform"*)** %10, align 8
  %12 = tail call %"class.blink::WebGraphicsContext3DProvider"* %11(%"class.blink::Platform"* %7) #4
  %13 = ptrtoint %"class.blink::WebGraphicsContext3DProvider"* %12 to i64
  %14 = getelementptr inbounds %"class.blink::SharedContextRateLimiter", %"class.blink::SharedContextRateLimiter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %"class.blink::WebGraphicsContext3DProvider"*, %"class.blink::WebGraphicsContext3DProvider"** %14, align 8
  store i64 %13, i64* %3, align 8
  %16 = icmp eq %"class.blink::WebGraphicsContext3DProvider"* %15, null
  br i1 %16, label %23, label %17

17:                                               ; preds = %2
  %18 = bitcast %"class.blink::WebGraphicsContext3DProvider"* %15 to void (%"class.blink::WebGraphicsContext3DProvider"*)***
  %19 = load void (%"class.blink::WebGraphicsContext3DProvider"*)**, void (%"class.blink::WebGraphicsContext3DProvider"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::WebGraphicsContext3DProvider"*)*, void (%"class.blink::WebGraphicsContext3DProvider"*)** %19, i64 1
  %21 = load void (%"class.blink::WebGraphicsContext3DProvider"*)*, void (%"class.blink::WebGraphicsContext3DProvider"*)** %20, align 8
  tail call void %21(%"class.blink::WebGraphicsContext3DProvider"* nonnull %15) #4
  %22 = load %"class.blink::WebGraphicsContext3DProvider"*, %"class.blink::WebGraphicsContext3DProvider"** %14, align 8
  br label %23

23:                                               ; preds = %17, %2
  %24 = phi %"class.blink::WebGraphicsContext3DProvider"* [ %22, %17 ], [ %12, %2 ]
  %25 = icmp eq %"class.blink::WebGraphicsContext3DProvider"* %24, null
  br i1 %25, label %49, label %26

26:                                               ; preds = %23
  %27 = bitcast %"class.blink::WebGraphicsContext3DProvider"* %24 to %"class.gpu::raster::RasterInterface"* (%"class.blink::WebGraphicsContext3DProvider"*)***
  %28 = load %"class.gpu::raster::RasterInterface"* (%"class.blink::WebGraphicsContext3DProvider"*)**, %"class.gpu::raster::RasterInterface"* (%"class.blink::WebGraphicsContext3DProvider"*)*** %27, align 8
  %29 = getelementptr inbounds %"class.gpu::raster::RasterInterface"* (%"class.blink::WebGraphicsContext3DProvider"*)*, %"class.gpu::raster::RasterInterface"* (%"class.blink::WebGraphicsContext3DProvider"*)** %28, i64 4
  %30 = load %"class.gpu::raster::RasterInterface"* (%"class.blink::WebGraphicsContext3DProvider"*)*, %"class.gpu::raster::RasterInterface"* (%"class.blink::WebGraphicsContext3DProvider"*)** %29, align 8
  %31 = tail call %"class.gpu::raster::RasterInterface"* %30(%"class.blink::WebGraphicsContext3DProvider"* nonnull %24) #4
  %32 = icmp eq %"class.gpu::raster::RasterInterface"* %31, null
  br i1 %32, label %49, label %33

33:                                               ; preds = %26
  %34 = bitcast %"class.gpu::raster::RasterInterface"* %31 to i32 (%"class.gpu::raster::RasterInterface"*)***
  %35 = load i32 (%"class.gpu::raster::RasterInterface"*)**, i32 (%"class.gpu::raster::RasterInterface"*)*** %34, align 8
  %36 = getelementptr inbounds i32 (%"class.gpu::raster::RasterInterface"*)*, i32 (%"class.gpu::raster::RasterInterface"*)** %35, i64 37
  %37 = load i32 (%"class.gpu::raster::RasterInterface"*)*, i32 (%"class.gpu::raster::RasterInterface"*)** %36, align 8
  %38 = tail call i32 %37(%"class.gpu::raster::RasterInterface"* nonnull %31) #4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %49

40:                                               ; preds = %33
  %41 = load %"class.blink::WebGraphicsContext3DProvider"*, %"class.blink::WebGraphicsContext3DProvider"** %14, align 8
  %42 = bitcast %"class.blink::WebGraphicsContext3DProvider"* %41 to %"struct.gpu::Capabilities"* (%"class.blink::WebGraphicsContext3DProvider"*)***
  %43 = load %"struct.gpu::Capabilities"* (%"class.blink::WebGraphicsContext3DProvider"*)**, %"struct.gpu::Capabilities"* (%"class.blink::WebGraphicsContext3DProvider"*)*** %42, align 8
  %44 = getelementptr inbounds %"struct.gpu::Capabilities"* (%"class.blink::WebGraphicsContext3DProvider"*)*, %"struct.gpu::Capabilities"* (%"class.blink::WebGraphicsContext3DProvider"*)** %43, i64 9
  %45 = load %"struct.gpu::Capabilities"* (%"class.blink::WebGraphicsContext3DProvider"*)*, %"struct.gpu::Capabilities"* (%"class.blink::WebGraphicsContext3DProvider"*)** %44, align 8
  %46 = tail call dereferenceable(480) %"struct.gpu::Capabilities"* %45(%"class.blink::WebGraphicsContext3DProvider"* %41) #4
  %47 = getelementptr inbounds %"struct.gpu::Capabilities", %"struct.gpu::Capabilities"* %46, i64 0, i32 70
  %48 = load i8, i8* %47, align 1, !range !2
  store i8 %48, i8* %6, align 4
  br label %49

49:                                               ; preds = %23, %33, %40, %26
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.blink::Platform"* @_ZN5blink8Platform7CurrentEv() local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24SharedContextRateLimiter4TickEv(%"class.blink::SharedContextRateLimiter"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::DequeIterator", align 8
  %3 = alloca %"class.WTF::DequeIterator", align 8
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %"class.blink::SharedContextRateLimiter", %"class.blink::SharedContextRateLimiter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::WebGraphicsContext3DProvider"*, %"class.blink::WebGraphicsContext3DProvider"** %5, align 8
  %7 = icmp eq %"class.blink::WebGraphicsContext3DProvider"* %6, null
  br i1 %7, label %185, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.blink::WebGraphicsContext3DProvider"* %6 to %"class.gpu::raster::RasterInterface"* (%"class.blink::WebGraphicsContext3DProvider"*)***
  %10 = load %"class.gpu::raster::RasterInterface"* (%"class.blink::WebGraphicsContext3DProvider"*)**, %"class.gpu::raster::RasterInterface"* (%"class.blink::WebGraphicsContext3DProvider"*)*** %9, align 8
  %11 = getelementptr inbounds %"class.gpu::raster::RasterInterface"* (%"class.blink::WebGraphicsContext3DProvider"*)*, %"class.gpu::raster::RasterInterface"* (%"class.blink::WebGraphicsContext3DProvider"*)** %10, i64 4
  %12 = load %"class.gpu::raster::RasterInterface"* (%"class.blink::WebGraphicsContext3DProvider"*)*, %"class.gpu::raster::RasterInterface"* (%"class.blink::WebGraphicsContext3DProvider"*)** %11, align 8
  %13 = tail call %"class.gpu::raster::RasterInterface"* %12(%"class.blink::WebGraphicsContext3DProvider"* nonnull %6) #4
  %14 = icmp eq %"class.gpu::raster::RasterInterface"* %13, null
  br i1 %14, label %185, label %15

15:                                               ; preds = %8
  %16 = bitcast %"class.gpu::raster::RasterInterface"* %13 to i32 (%"class.gpu::raster::RasterInterface"*)***
  %17 = load i32 (%"class.gpu::raster::RasterInterface"*)**, i32 (%"class.gpu::raster::RasterInterface"*)*** %16, align 8
  %18 = getelementptr inbounds i32 (%"class.gpu::raster::RasterInterface"*)*, i32 (%"class.gpu::raster::RasterInterface"*)** %17, i64 37
  %19 = load i32 (%"class.gpu::raster::RasterInterface"*)*, i32 (%"class.gpu::raster::RasterInterface"*)** %18, align 8
  %20 = tail call i32 %19(%"class.gpu::raster::RasterInterface"* nonnull %13) #4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %185

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.blink::SharedContextRateLimiter", %"class.blink::SharedContextRateLimiter"* %0, i64 0, i32 1
  %24 = getelementptr inbounds %"class.blink::SharedContextRateLimiter", %"class.blink::SharedContextRateLimiter"* %0, i64 0, i32 1, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.blink::SharedContextRateLimiter", %"class.blink::SharedContextRateLimiter"* %0, i64 0, i32 1, i32 2
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %32, label %29

29:                                               ; preds = %22
  %30 = add i32 %28, 1
  %31 = icmp eq i32 %30, %25
  br i1 %31, label %41, label %43

32:                                               ; preds = %22
  %33 = icmp eq i32 %28, 0
  %34 = getelementptr inbounds %"class.blink::SharedContextRateLimiter", %"class.blink::SharedContextRateLimiter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %35 = load i32, i32* %34, align 8
  br i1 %33, label %39, label %36

36:                                               ; preds = %32
  %37 = add i32 %35, -1
  %38 = icmp eq i32 %28, %37
  br i1 %38, label %41, label %43

39:                                               ; preds = %32
  %40 = icmp eq i32 %35, 0
  br i1 %40, label %41, label %43

41:                                               ; preds = %39, %36, %29
  tail call void @_ZN3WTF5DequeIjLj0ENS_18PartitionAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque"* %23) #4
  %42 = load i32, i32* %27, align 4
  br label %43

43:                                               ; preds = %29, %36, %39, %41
  %44 = phi i32 [ %28, %29 ], [ %28, %36 ], [ 0, %39 ], [ %42, %41 ]
  %45 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i32*, i32** %45, align 8
  %47 = zext i32 %44 to i64
  %48 = getelementptr inbounds i32, i32* %46, i64 %47
  %49 = getelementptr inbounds %"class.blink::SharedContextRateLimiter", %"class.blink::SharedContextRateLimiter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %50 = load i32, i32* %49, align 8
  %51 = add i32 %50, -1
  %52 = icmp eq i32 %44, %51
  %53 = add i32 %44, 1
  %54 = select i1 %52, i32 0, i32 %53
  store i32 %54, i32* %27, align 4
  store i32 0, i32* %48, align 4
  %55 = getelementptr inbounds %"class.blink::SharedContextRateLimiter", %"class.blink::SharedContextRateLimiter"* %0, i64 0, i32 3
  %56 = load i8, i8* %55, align 4, !range !2
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %94, label %58

58:                                               ; preds = %43
  %59 = bitcast %"class.WTF::DequeIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %59) #4
  %60 = load i32, i32* %27, align 4, !noalias !3
  %61 = getelementptr inbounds %"class.WTF::DequeIterator", %"class.WTF::DequeIterator"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::Deque"* %23, %"class.WTF::Deque"** %61, align 8, !alias.scope !3
  %62 = getelementptr inbounds %"class.WTF::DequeIterator", %"class.WTF::DequeIterator"* %3, i64 0, i32 0, i32 1
  store i32 %60, i32* %62, align 8, !alias.scope !3
  %63 = icmp eq i32 %60, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %58
  %65 = load i32, i32* %49, align 8
  br label %66

66:                                               ; preds = %58, %64
  %67 = phi i32 [ %65, %64 ], [ %60, %58 ]
  %68 = add i32 %67, -1
  store i32 %68, i32* %62, align 8
  %69 = call dereferenceable(4) i32* @_ZNK3WTF13DequeIteratorIjLj0ENS_18PartitionAllocatorEEdeEv(%"class.WTF::DequeIterator"* nonnull %3) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %59) #4
  %70 = bitcast %"class.gpu::raster::RasterInterface"* %13 to void (%"class.gpu::raster::RasterInterface"*, i32, i32*)***
  %71 = load void (%"class.gpu::raster::RasterInterface"*, i32, i32*)**, void (%"class.gpu::raster::RasterInterface"*, i32, i32*)*** %70, align 8
  %72 = getelementptr inbounds void (%"class.gpu::raster::RasterInterface"*, i32, i32*)*, void (%"class.gpu::raster::RasterInterface"*, i32, i32*)** %71, i64 29
  %73 = load void (%"class.gpu::raster::RasterInterface"*, i32, i32*)*, void (%"class.gpu::raster::RasterInterface"*, i32, i32*)** %72, align 8
  call void %73(%"class.gpu::raster::RasterInterface"* nonnull %13, i32 1, i32* %69) #4
  %74 = bitcast %"class.WTF::DequeIterator"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %74) #4
  %75 = load i32, i32* %27, align 4, !noalias !6
  %76 = getelementptr inbounds %"class.WTF::DequeIterator", %"class.WTF::DequeIterator"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::Deque"* %23, %"class.WTF::Deque"** %76, align 8, !alias.scope !6
  %77 = getelementptr inbounds %"class.WTF::DequeIterator", %"class.WTF::DequeIterator"* %2, i64 0, i32 0, i32 1
  store i32 %75, i32* %77, align 8, !alias.scope !6
  %78 = icmp eq i32 %75, 0
  br i1 %78, label %79, label %81

79:                                               ; preds = %66
  %80 = load i32, i32* %49, align 8
  br label %81

81:                                               ; preds = %66, %79
  %82 = phi i32 [ %80, %79 ], [ %75, %66 ]
  %83 = add i32 %82, -1
  store i32 %83, i32* %77, align 8
  %84 = call dereferenceable(4) i32* @_ZNK3WTF13DequeIteratorIjLj0ENS_18PartitionAllocatorEEdeEv(%"class.WTF::DequeIterator"* nonnull %2) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %74) #4
  %85 = load i32, i32* %84, align 4
  %86 = bitcast %"class.gpu::raster::RasterInterface"* %13 to void (%"class.gpu::raster::RasterInterface"*, i32, i32)***
  %87 = load void (%"class.gpu::raster::RasterInterface"*, i32, i32)**, void (%"class.gpu::raster::RasterInterface"*, i32, i32)*** %86, align 8
  %88 = getelementptr inbounds void (%"class.gpu::raster::RasterInterface"*, i32, i32)*, void (%"class.gpu::raster::RasterInterface"*, i32, i32)** %87, i64 32
  %89 = load void (%"class.gpu::raster::RasterInterface"*, i32, i32)*, void (%"class.gpu::raster::RasterInterface"*, i32, i32)** %88, align 8
  call void %89(%"class.gpu::raster::RasterInterface"* nonnull %13, i32 34039, i32 %85) #4
  %90 = bitcast %"class.gpu::raster::RasterInterface"* %13 to void (%"class.gpu::raster::RasterInterface"*, i32)***
  %91 = load void (%"class.gpu::raster::RasterInterface"*, i32)**, void (%"class.gpu::raster::RasterInterface"*, i32)*** %90, align 8
  %92 = getelementptr inbounds void (%"class.gpu::raster::RasterInterface"*, i32)*, void (%"class.gpu::raster::RasterInterface"*, i32)** %91, i64 33
  %93 = load void (%"class.gpu::raster::RasterInterface"*, i32)*, void (%"class.gpu::raster::RasterInterface"*, i32)** %92, align 8
  call void %93(%"class.gpu::raster::RasterInterface"* nonnull %13, i32 34039) #4
  br label %94

94:                                               ; preds = %43, %81
  %95 = load i32, i32* %24, align 8
  %96 = load i32, i32* %27, align 4
  %97 = icmp ult i32 %96, %95
  br i1 %97, label %98, label %101

98:                                               ; preds = %94
  %99 = load i32, i32* %49, align 8
  %100 = add i32 %99, %96
  br label %101

101:                                              ; preds = %94, %98
  %102 = phi i32 [ %100, %98 ], [ %96, %94 ]
  %103 = sub i32 %102, %95
  %104 = getelementptr inbounds %"class.blink::SharedContextRateLimiter", %"class.blink::SharedContextRateLimiter"* %0, i64 0, i32 2
  %105 = load i32, i32* %104, align 8
  %106 = icmp ugt i32 %103, %105
  br i1 %106, label %107, label %185

107:                                              ; preds = %101
  %108 = load i8, i8* %55, align 4, !range !2
  %109 = icmp eq i8 %108, 0
  br i1 %109, label %134, label %110

110:                                              ; preds = %107
  %111 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %111) #4
  store i32 -1431655766, i32* %4, align 4
  %112 = load i32*, i32** %45, align 8
  %113 = zext i32 %95 to i64
  %114 = getelementptr inbounds i32, i32* %112, i64 %113
  %115 = load i32, i32* %114, align 4
  %116 = bitcast %"class.gpu::raster::RasterInterface"* %13 to void (%"class.gpu::raster::RasterInterface"*, i32, i32, i32*)***
  %117 = load void (%"class.gpu::raster::RasterInterface"*, i32, i32, i32*)**, void (%"class.gpu::raster::RasterInterface"*, i32, i32, i32*)*** %116, align 8
  %118 = getelementptr inbounds void (%"class.gpu::raster::RasterInterface"*, i32, i32, i32*)*, void (%"class.gpu::raster::RasterInterface"*, i32, i32, i32*)** %117, i64 34
  %119 = load void (%"class.gpu::raster::RasterInterface"*, i32, i32, i32*)*, void (%"class.gpu::raster::RasterInterface"*, i32, i32, i32*)** %118, align 8
  call void %119(%"class.gpu::raster::RasterInterface"* nonnull %13, i32 %115, i32 34918, i32* nonnull %4) #4
  %120 = load i32*, i32** %45, align 8
  %121 = load i32, i32* %24, align 8
  %122 = zext i32 %121 to i64
  %123 = getelementptr inbounds i32, i32* %120, i64 %122
  %124 = bitcast %"class.gpu::raster::RasterInterface"* %13 to void (%"class.gpu::raster::RasterInterface"*, i32, i32*)***
  %125 = load void (%"class.gpu::raster::RasterInterface"*, i32, i32*)**, void (%"class.gpu::raster::RasterInterface"*, i32, i32*)*** %124, align 8
  %126 = getelementptr inbounds void (%"class.gpu::raster::RasterInterface"*, i32, i32*)*, void (%"class.gpu::raster::RasterInterface"*, i32, i32*)** %125, i64 30
  %127 = load void (%"class.gpu::raster::RasterInterface"*, i32, i32*)*, void (%"class.gpu::raster::RasterInterface"*, i32, i32*)** %126, align 8
  call void %127(%"class.gpu::raster::RasterInterface"* nonnull %13, i32 1, i32* %123) #4
  %128 = load i32, i32* %24, align 8
  %129 = add i32 %128, 1
  %130 = load i32, i32* %49, align 8
  %131 = add i32 %130, -1
  %132 = icmp eq i32 %128, %131
  %133 = select i1 %132, i32 0, i32 %129
  store i32 %133, i32* %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %111) #4
  br label %185

134:                                              ; preds = %107
  %135 = bitcast %"class.gpu::raster::RasterInterface"* %13 to void (%"class.gpu::raster::RasterInterface"*)***
  %136 = load void (%"class.gpu::raster::RasterInterface"*)**, void (%"class.gpu::raster::RasterInterface"*)*** %135, align 8
  %137 = getelementptr inbounds void (%"class.gpu::raster::RasterInterface"*)*, void (%"class.gpu::raster::RasterInterface"*)** %136, i64 25
  %138 = load void (%"class.gpu::raster::RasterInterface"*)*, void (%"class.gpu::raster::RasterInterface"*)** %137, align 8
  call void %138(%"class.gpu::raster::RasterInterface"* nonnull %13) #4
  %139 = load %"class.blink::WebGraphicsContext3DProvider"*, %"class.blink::WebGraphicsContext3DProvider"** %5, align 8
  %140 = icmp eq %"class.blink::WebGraphicsContext3DProvider"* %139, null
  br i1 %140, label %185, label %141

141:                                              ; preds = %134
  %142 = bitcast %"class.blink::WebGraphicsContext3DProvider"* %139 to %"class.gpu::raster::RasterInterface"* (%"class.blink::WebGraphicsContext3DProvider"*)***
  %143 = load %"class.gpu::raster::RasterInterface"* (%"class.blink::WebGraphicsContext3DProvider"*)**, %"class.gpu::raster::RasterInterface"* (%"class.blink::WebGraphicsContext3DProvider"*)*** %142, align 8
  %144 = getelementptr inbounds %"class.gpu::raster::RasterInterface"* (%"class.blink::WebGraphicsContext3DProvider"*)*, %"class.gpu::raster::RasterInterface"* (%"class.blink::WebGraphicsContext3DProvider"*)** %143, i64 4
  %145 = load %"class.gpu::raster::RasterInterface"* (%"class.blink::WebGraphicsContext3DProvider"*)*, %"class.gpu::raster::RasterInterface"* (%"class.blink::WebGraphicsContext3DProvider"*)** %144, align 8
  %146 = call %"class.gpu::raster::RasterInterface"* %145(%"class.blink::WebGraphicsContext3DProvider"* nonnull %139) #4
  %147 = load i8, i8* %55, align 4, !range !2
  %148 = icmp ne i8 %147, 0
  %149 = icmp ne %"class.gpu::raster::RasterInterface"* %146, null
  %150 = and i1 %149, %148
  br i1 %150, label %151, label %181

151:                                              ; preds = %141
  %152 = bitcast %"class.gpu::raster::RasterInterface"* %146 to i32 (%"class.gpu::raster::RasterInterface"*)***
  %153 = load i32 (%"class.gpu::raster::RasterInterface"*)**, i32 (%"class.gpu::raster::RasterInterface"*)*** %152, align 8
  %154 = getelementptr inbounds i32 (%"class.gpu::raster::RasterInterface"*)*, i32 (%"class.gpu::raster::RasterInterface"*)** %153, i64 37
  %155 = load i32 (%"class.gpu::raster::RasterInterface"*)*, i32 (%"class.gpu::raster::RasterInterface"*)** %154, align 8
  %156 = call i32 %155(%"class.gpu::raster::RasterInterface"* nonnull %146) #4
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %158, label %181

158:                                              ; preds = %151
  %159 = load i32, i32* %24, align 8
  %160 = load i32, i32* %27, align 4
  %161 = icmp eq i32 %159, %160
  br i1 %161, label %185, label %162

162:                                              ; preds = %158
  %163 = getelementptr inbounds %"class.blink::SharedContextRateLimiter", %"class.blink::SharedContextRateLimiter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %164 = bitcast %"class.gpu::raster::RasterInterface"* %146 to void (%"class.gpu::raster::RasterInterface"*, i32, i32*)***
  br label %165

165:                                              ; preds = %165, %162
  %166 = phi i32 [ %159, %162 ], [ %178, %165 ]
  %167 = load i32*, i32** %163, align 8
  %168 = zext i32 %166 to i64
  %169 = getelementptr inbounds i32, i32* %167, i64 %168
  %170 = load void (%"class.gpu::raster::RasterInterface"*, i32, i32*)**, void (%"class.gpu::raster::RasterInterface"*, i32, i32*)*** %164, align 8
  %171 = getelementptr inbounds void (%"class.gpu::raster::RasterInterface"*, i32, i32*)*, void (%"class.gpu::raster::RasterInterface"*, i32, i32*)** %170, i64 30
  %172 = load void (%"class.gpu::raster::RasterInterface"*, i32, i32*)*, void (%"class.gpu::raster::RasterInterface"*, i32, i32*)** %171, align 8
  call void %172(%"class.gpu::raster::RasterInterface"* nonnull %146, i32 1, i32* %169) #4
  %173 = load i32, i32* %24, align 8
  %174 = add i32 %173, 1
  %175 = load i32, i32* %49, align 8
  %176 = add i32 %175, -1
  %177 = icmp eq i32 %173, %176
  %178 = select i1 %177, i32 0, i32 %174
  store i32 %178, i32* %24, align 8
  %179 = load i32, i32* %27, align 4
  %180 = icmp eq i32 %178, %179
  br i1 %180, label %185, label %165

181:                                              ; preds = %151, %141
  store i32 0, i32* %24, align 8
  store i32 0, i32* %27, align 4
  %182 = bitcast %"class.WTF::Deque"* %23 to i8**
  %183 = load i8*, i8** %182, align 8
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %183) #4
  %184 = bitcast %"class.WTF::Deque"* %23 to i64*
  store atomic i64 0, i64* %184 monotonic, align 8
  store i32 0, i32* %49, align 8
  br label %185

185:                                              ; preds = %165, %1, %181, %158, %134, %15, %8, %110, %101
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24SharedContextRateLimiter5ResetEv(%"class.blink::SharedContextRateLimiter"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SharedContextRateLimiter", %"class.blink::SharedContextRateLimiter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::WebGraphicsContext3DProvider"*, %"class.blink::WebGraphicsContext3DProvider"** %2, align 8
  %4 = icmp eq %"class.blink::WebGraphicsContext3DProvider"* %3, null
  br i1 %4, label %57, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::WebGraphicsContext3DProvider"* %3 to %"class.gpu::raster::RasterInterface"* (%"class.blink::WebGraphicsContext3DProvider"*)***
  %7 = load %"class.gpu::raster::RasterInterface"* (%"class.blink::WebGraphicsContext3DProvider"*)**, %"class.gpu::raster::RasterInterface"* (%"class.blink::WebGraphicsContext3DProvider"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.gpu::raster::RasterInterface"* (%"class.blink::WebGraphicsContext3DProvider"*)*, %"class.gpu::raster::RasterInterface"* (%"class.blink::WebGraphicsContext3DProvider"*)** %7, i64 4
  %9 = load %"class.gpu::raster::RasterInterface"* (%"class.blink::WebGraphicsContext3DProvider"*)*, %"class.gpu::raster::RasterInterface"* (%"class.blink::WebGraphicsContext3DProvider"*)** %8, align 8
  %10 = tail call %"class.gpu::raster::RasterInterface"* %9(%"class.blink::WebGraphicsContext3DProvider"* nonnull %3) #4
  %11 = getelementptr inbounds %"class.blink::SharedContextRateLimiter", %"class.blink::SharedContextRateLimiter"* %0, i64 0, i32 3
  %12 = load i8, i8* %11, align 4, !range !2
  %13 = icmp ne i8 %12, 0
  %14 = icmp ne %"class.gpu::raster::RasterInterface"* %10, null
  %15 = and i1 %14, %13
  br i1 %15, label %16, label %49

16:                                               ; preds = %5
  %17 = bitcast %"class.gpu::raster::RasterInterface"* %10 to i32 (%"class.gpu::raster::RasterInterface"*)***
  %18 = load i32 (%"class.gpu::raster::RasterInterface"*)**, i32 (%"class.gpu::raster::RasterInterface"*)*** %17, align 8
  %19 = getelementptr inbounds i32 (%"class.gpu::raster::RasterInterface"*)*, i32 (%"class.gpu::raster::RasterInterface"*)** %18, i64 37
  %20 = load i32 (%"class.gpu::raster::RasterInterface"*)*, i32 (%"class.gpu::raster::RasterInterface"*)** %19, align 8
  %21 = tail call i32 %20(%"class.gpu::raster::RasterInterface"* nonnull %10) #4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %49

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.blink::SharedContextRateLimiter", %"class.blink::SharedContextRateLimiter"* %0, i64 0, i32 1, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = getelementptr inbounds %"class.blink::SharedContextRateLimiter", %"class.blink::SharedContextRateLimiter"* %0, i64 0, i32 1, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %25, %27
  br i1 %28, label %57, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.blink::SharedContextRateLimiter", %"class.blink::SharedContextRateLimiter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %31 = bitcast %"class.gpu::raster::RasterInterface"* %10 to void (%"class.gpu::raster::RasterInterface"*, i32, i32*)***
  %32 = getelementptr inbounds %"class.blink::SharedContextRateLimiter", %"class.blink::SharedContextRateLimiter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  br label %33

33:                                               ; preds = %29, %33
  %34 = phi i32 [ %25, %29 ], [ %46, %33 ]
  %35 = load i32*, i32** %30, align 8
  %36 = zext i32 %34 to i64
  %37 = getelementptr inbounds i32, i32* %35, i64 %36
  %38 = load void (%"class.gpu::raster::RasterInterface"*, i32, i32*)**, void (%"class.gpu::raster::RasterInterface"*, i32, i32*)*** %31, align 8
  %39 = getelementptr inbounds void (%"class.gpu::raster::RasterInterface"*, i32, i32*)*, void (%"class.gpu::raster::RasterInterface"*, i32, i32*)** %38, i64 30
  %40 = load void (%"class.gpu::raster::RasterInterface"*, i32, i32*)*, void (%"class.gpu::raster::RasterInterface"*, i32, i32*)** %39, align 8
  tail call void %40(%"class.gpu::raster::RasterInterface"* nonnull %10, i32 1, i32* %37) #4
  %41 = load i32, i32* %24, align 8
  %42 = add i32 %41, 1
  %43 = load i32, i32* %32, align 8
  %44 = add i32 %43, -1
  %45 = icmp eq i32 %41, %44
  %46 = select i1 %45, i32 0, i32 %42
  store i32 %46, i32* %24, align 8
  %47 = load i32, i32* %26, align 4
  %48 = icmp eq i32 %46, %47
  br i1 %48, label %57, label %33

49:                                               ; preds = %16, %5
  %50 = getelementptr inbounds %"class.blink::SharedContextRateLimiter", %"class.blink::SharedContextRateLimiter"* %0, i64 0, i32 1
  %51 = getelementptr inbounds %"class.blink::SharedContextRateLimiter", %"class.blink::SharedContextRateLimiter"* %0, i64 0, i32 1, i32 1
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds %"class.blink::SharedContextRateLimiter", %"class.blink::SharedContextRateLimiter"* %0, i64 0, i32 1, i32 2
  store i32 0, i32* %52, align 4
  %53 = bitcast %"class.WTF::Deque"* %50 to i8**
  %54 = load i8*, i8** %53, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %54) #4
  %55 = bitcast %"class.WTF::Deque"* %50 to i64*
  store atomic i64 0, i64* %55 monotonic, align 8
  %56 = getelementptr inbounds %"class.blink::SharedContextRateLimiter", %"class.blink::SharedContextRateLimiter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  store i32 0, i32* %56, align 8
  br label %57

57:                                               ; preds = %33, %23, %1, %49
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5DequeIjLj0ENS_18PartitionAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i32*, i32** %4, align 8
  %6 = lshr i32 %3, 2
  %7 = add i32 %3, 1
  %8 = add i32 %7, %6
  %9 = icmp ugt i32 %8, 16
  %10 = select i1 %9, i32 %8, i32 16
  %11 = zext i32 %10 to i64
  %12 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm(i64 %11) #4
  %13 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm(i64 %11) #4
  %14 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %13, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv, i64 0, i64 0)) #4
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast %"class.WTF::Deque"* %0 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = lshr i64 %13, 2
  %18 = trunc i64 %17 to i32
  store i32 %18, i32* %2, align 8
  %19 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = icmp ugt i32 %20, %22
  %24 = bitcast i8* %14 to i32*
  br i1 %23, label %40, label %25

25:                                               ; preds = %1
  %26 = zext i32 %20 to i64
  %27 = getelementptr inbounds i32, i32* %5, i64 %26
  %28 = getelementptr inbounds i32, i32* %24, i64 %26
  %29 = icmp ne i32* %28, null
  %30 = icmp ne i32* %27, null
  %31 = and i1 %30, %29
  br i1 %31, label %32, label %73, !prof !9

32:                                               ; preds = %25
  %33 = zext i32 %22 to i64
  %34 = getelementptr inbounds i32, i32* %5, i64 %33
  %35 = bitcast i32* %27 to i8*
  %36 = ptrtoint i32* %34 to i64
  %37 = ptrtoint i32* %27 to i64
  %38 = sub i64 %36, %37
  %39 = bitcast i32* %28 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %39, i8* nonnull align 4 %35, i64 %38, i1 false) #4
  br label %73

40:                                               ; preds = %1
  %41 = icmp ne i8* %14, null
  %42 = icmp ne i32* %5, null
  %43 = and i1 %42, %41
  br i1 %43, label %44, label %51, !prof !9

44:                                               ; preds = %40
  %45 = zext i32 %22 to i64
  %46 = bitcast i32* %5 to i8*
  %47 = shl nuw nsw i64 %45, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %14, i8* nonnull align 4 %46, i64 %47, i1 false) #4
  %48 = load i32, i32* %2, align 8
  %49 = load i32, i32* %19, align 8
  %50 = load i32*, i32** %4, align 8
  br label %51

51:                                               ; preds = %40, %44
  %52 = phi i32* [ %24, %40 ], [ %50, %44 ]
  %53 = phi i32 [ %20, %40 ], [ %49, %44 ]
  %54 = phi i32 [ %18, %40 ], [ %48, %44 ]
  %55 = sub i32 %53, %3
  %56 = add i32 %55, %54
  %57 = zext i32 %53 to i64
  %58 = getelementptr inbounds i32, i32* %5, i64 %57
  %59 = zext i32 %56 to i64
  %60 = getelementptr inbounds i32, i32* %52, i64 %59
  %61 = icmp ne i32* %60, null
  %62 = icmp ne i32* %58, null
  %63 = and i1 %62, %61
  br i1 %63, label %64, label %72, !prof !9

64:                                               ; preds = %51
  %65 = zext i32 %3 to i64
  %66 = getelementptr inbounds i32, i32* %5, i64 %65
  %67 = bitcast i32* %58 to i8*
  %68 = ptrtoint i32* %66 to i64
  %69 = ptrtoint i32* %58 to i64
  %70 = sub i64 %68, %69
  %71 = bitcast i32* %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %71, i8* nonnull align 4 %67, i64 %70, i1 false) #4
  br label %72

72:                                               ; preds = %51, %64
  store i32 %56, i32* %19, align 8
  br label %73

73:                                               ; preds = %32, %25, %72
  %74 = bitcast i32* %5 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %74) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #4
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #4
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #4
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), i8* %11, i8* %12) #4
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #4
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #4
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #4
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #4
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #4
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) i32* @_ZNK3WTF13DequeIteratorIjLj0ENS_18PartitionAllocatorEEdeEv(%"class.WTF::DequeIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #4
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.WTF::DequeIterator", %"class.WTF::DequeIterator"* %0, i64 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"class.WTF::DequeIterator", %"class.WTF::DequeIterator"* %0, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::Deque"*, %"class.WTF::Deque"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %10, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #4
  %14 = icmp eq i32 %8, %12
  br i1 %14, label %16, label %15

15:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #4
  store i8* null, i8** %6, align 8
  br label %25

16:                                               ; preds = %1
  %17 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #4
  %18 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #4
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* %17, i8* %18) #4
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #4
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %16
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #4
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.3, i64 0, i64 0), i32 693, %"class.logging::CheckOpResult"* nonnull %3) #4
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #4
  br label %25

25:                                               ; preds = %15, %16, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #4
  %26 = load %"class.WTF::Deque"*, %"class.WTF::Deque"** %9, align 8
  %27 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i32*, i32** %27, align 8
  %29 = load i32, i32* %7, align 8
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds i32, i32* %28, i64 %30
  ret i32* %31
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN3WTF5DequeIjLj0ENS_18PartitionAllocatorEE3endEv: argument 0"}
!5 = distinct !{!5, !"_ZN3WTF5DequeIjLj0ENS_18PartitionAllocatorEE3endEv"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN3WTF5DequeIjLj0ENS_18PartitionAllocatorEE3endEv: argument 0"}
!8 = distinct !{!8, !"_ZN3WTF5DequeIjLj0ENS_18PartitionAllocatorEE3endEv"}
!9 = !{!"branch_weights", i32 2000, i32 1}
