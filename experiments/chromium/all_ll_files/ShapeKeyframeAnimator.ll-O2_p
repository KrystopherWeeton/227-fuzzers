; ModuleID = '../../third_party/skia/modules/skottie/src/animator/ShapeKeyframeAnimator.cpp'
source_filename = "../../third_party/skia/modules/skottie/src/animator/ShapeKeyframeAnimator.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.2 = type { i8*, i32, i32 }
%class.SkTDArray.3 = type { float*, i32, i32 }
%struct.SkPoint = type { float, float }
%"class.skottie::internal::VectorKeyframeAnimatorBuilder" = type { %"class.skottie::internal::KeyframeAnimatorBuilder", i1 (%"class.skjson::Value"*, i64*)*, i1 (%"class.skjson::Value"*, i64, float*)*, %"class.std::__1::vector", i64, i64, %"class.std::__1::vector"* }
%"class.skottie::internal::KeyframeAnimatorBuilder" = type { i32 (...)**, %"class.std::__1::vector.22", %"class.std::__1::vector.29", %struct.SkPoint, %struct.SkPoint }
%"class.std::__1::vector.22" = type { %"class.std::__1::__vector_base.23" }
%"class.std::__1::__vector_base.23" = type { %"struct.skottie::internal::Keyframe"*, %"struct.skottie::internal::Keyframe"*, %"class.std::__1::__compressed_pair.24" }
%"struct.skottie::internal::Keyframe" = type { float, %"struct.skottie::internal::Keyframe::Value", i32 }
%"struct.skottie::internal::Keyframe::Value" = type { %union.anon }
%union.anon = type { i32 }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.skottie::internal::Keyframe"* }
%"class.std::__1::vector.29" = type { %"class.std::__1::__vector_base.30" }
%"class.std::__1::__vector_base.30" = type { %class.SkCubicMap*, %class.SkCubicMap*, %"class.std::__1::__compressed_pair.31" }
%class.SkCubicMap = type { [3 x %struct.SkPoint], i32 }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %class.SkCubicMap* }
%"class.skjson::Value" = type { [8 x i8] }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { float*, float*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { float* }
%class.SkPath = type <{ %class.sk_sp, i32, %"struct.std::__1::atomic.4", %"struct.std::__1::atomic.4", i8, i8 }>
%class.sk_sp = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.2, %class.SkTDArray.3, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.SkRect = type { float, float, float, float }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.9 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.4" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.9 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.10", [3 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic.10" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl.12" }
%"struct.std::__1::__cxx_atomic_impl.12" = type { %"struct.std::__1::__cxx_atomic_base_impl.13" }
%"struct.std::__1::__cxx_atomic_base_impl.13" = type { i8 }
%"struct.std::__1::atomic.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl.7" }
%"struct.std::__1::__cxx_atomic_impl.7" = type { %"struct.std::__1::__cxx_atomic_base_impl.8" }
%"struct.std::__1::__cxx_atomic_base_impl.8" = type { i8 }
%"class.skottie::ShapeValue" = type { %"class.std::__1::vector" }
%class.SkPathBuilder = type { %class.SkTDArray, %class.SkTDArray.2, %class.SkTDArray.3, i32, i8, i32, %struct.SkPoint, i8, i32, i32, i8, i32 }
%"class.skottie::internal::AnimatablePropertyContainer" = type <{ %"class.skottie::internal::Animator.base", [4 x i8], %"class.std::__1::vector.14", i8, [7 x i8] }>
%"class.skottie::internal::Animator.base" = type { %class.SkRefCnt.base }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %class.sk_sp.16*, %class.sk_sp.16*, %"class.std::__1::__compressed_pair.17" }
%class.sk_sp.16 = type opaque
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %class.sk_sp.16* }
%"class.skottie::internal::AnimationBuilder" = type opaque
%"class.skjson::ObjectValue" = type { %"class.skjson::VectorValue" }
%"class.skjson::VectorValue" = type { %"class.skjson::Value" }
%"class.skjson::ArrayValue" = type { %"class.skjson::VectorValue.36" }
%"class.skjson::VectorValue.36" = type { %"class.skjson::Value" }

@__const._ZNK7skottie10ShapeValuecv6SkPathEv.path = private unnamed_addr constant { %class.SkTDArray, %class.SkTDArray.2, %class.SkTDArray.3, i32, i8, [3 x i8], i32, %struct.SkPoint, i8, [3 x i8], i32, i32, i8, [3 x i8], i32 } { %class.SkTDArray { %struct.SkPoint* inttoptr (i64 -6148914691236517206 to %struct.SkPoint*), i32 -1431655766, i32 -1431655766 }, %class.SkTDArray.2 { i8* inttoptr (i64 -6148914691236517206 to i8*), i32 -1431655766, i32 -1431655766 }, %class.SkTDArray.3 { float* inttoptr (i64 -6148914691236517206 to float*), i32 -1431655766, i32 -1431655766 }, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766 }, align 8
@__const._ZN7skottie8internal27AnimatablePropertyContainer4bindINS_10ShapeValueEEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_.builder = private unnamed_addr constant %"class.skottie::internal::VectorKeyframeAnimatorBuilder" { %"class.skottie::internal::KeyframeAnimatorBuilder" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), %"class.std::__1::vector.22" { %"class.std::__1::__vector_base.23" { %"struct.skottie::internal::Keyframe"* inttoptr (i64 -6148914691236517206 to %"struct.skottie::internal::Keyframe"*), %"struct.skottie::internal::Keyframe"* inttoptr (i64 -6148914691236517206 to %"struct.skottie::internal::Keyframe"*), %"class.std::__1::__compressed_pair.24" { %"struct.std::__1::__compressed_pair_elem.25" { %"struct.skottie::internal::Keyframe"* inttoptr (i64 -6148914691236517206 to %"struct.skottie::internal::Keyframe"*) } } } }, %"class.std::__1::vector.29" { %"class.std::__1::__vector_base.30" { %class.SkCubicMap* inttoptr (i64 -6148914691236517206 to %class.SkCubicMap*), %class.SkCubicMap* inttoptr (i64 -6148914691236517206 to %class.SkCubicMap*), %"class.std::__1::__compressed_pair.31" { %"struct.std::__1::__compressed_pair_elem.32" { %class.SkCubicMap* inttoptr (i64 -6148914691236517206 to %class.SkCubicMap*) } } } }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, i1 (%"class.skjson::Value"*, i64*)* inttoptr (i64 -6148914691236517206 to i1 (%"class.skjson::Value"*, i64*)*), i1 (%"class.skjson::Value"*, i64, float*)* inttoptr (i64 -6148914691236517206 to i1 (%"class.skjson::Value"*, i64, float*)*), %"class.std::__1::vector" { %"class.std::__1::__vector_base" { float* inttoptr (i64 -6148914691236517206 to float*), float* inttoptr (i64 -6148914691236517206 to float*), %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { float* inttoptr (i64 -6148914691236517206 to float*) } } } }, i64 -6148914691236517206, i64 -6148914691236517206, %"class.std::__1::vector"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::vector"*) }, align 8
@.str = private unnamed_addr constant [2 x i8] c"v\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"i\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"o\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@_ZTVN7skottie8internal29VectorKeyframeAnimatorBuilderE = external unnamed_addr constant { [7 x i8*] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7skottie10ShapeValuecv6SkPathEv(%class.SkPath* noalias sret, %"class.skottie::ShapeValue"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.SkPathBuilder, align 8
  %4 = getelementptr inbounds %"class.skottie::ShapeValue", %"class.skottie::ShapeValue"* %1, i64 0, i32 0, i32 0, i32 1
  %5 = bitcast float** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.skottie::ShapeValue"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 2
  %11 = udiv i64 %10, 6
  %12 = bitcast %class.SkPathBuilder* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %12) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 8 bitcast ({ %class.SkTDArray, %class.SkTDArray.2, %class.SkTDArray.3, i32, i8, [3 x i8], i32, %struct.SkPoint, i8, [3 x i8], i32, i32, i8, [3 x i8], i32 }* @__const._ZNK7skottie10ShapeValuecv6SkPathEv.path to i8*), i64 88, i1 false)
  call void @_ZN13SkPathBuilderC1Ev(%class.SkPathBuilder* nonnull %3) #6
  %13 = icmp ugt i64 %10, 5
  br i1 %13, label %14, label %100

14:                                               ; preds = %2
  %15 = trunc i64 %11 to i32
  %16 = mul i32 %15, 3
  %17 = add nsw i32 %16, 1
  call void @_ZN13SkPathBuilder10incReserveEii(%class.SkPathBuilder* nonnull %3, i32 %17, i32 %17) #6
  %18 = bitcast %"class.skottie::ShapeValue"* %1 to <2 x float>**
  %19 = load <2 x float>*, <2 x float>** %18, align 8
  %20 = load <2 x float>, <2 x float>* %19, align 4
  %21 = call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6moveToE7SkPoint(%class.SkPathBuilder* nonnull %3, <2 x float> %20) #6
  %22 = icmp ugt i64 %10, 11
  br i1 %22, label %23, label %62

23:                                               ; preds = %14
  %24 = getelementptr inbounds %"class.skottie::ShapeValue", %"class.skottie::ShapeValue"* %1, i64 0, i32 0, i32 0, i32 0
  br label %26

25:                                               ; preds = %59
  br i1 %13, label %62, label %100

26:                                               ; preds = %23, %59
  %27 = phi i64 [ 1, %23 ], [ %60, %59 ]
  %28 = mul nuw i64 %27, 6
  %29 = add i64 %28, -6
  %30 = load float*, float** %24, align 8
  %31 = getelementptr inbounds float, float* %30, i64 %29
  %32 = bitcast float* %31 to <2 x float>*
  %33 = load <2 x float>, <2 x float>* %32, align 4
  %34 = getelementptr inbounds float, float* %30, i64 %28
  %35 = bitcast float* %34 to <2 x float>*
  %36 = load <2 x float>, <2 x float>* %35, align 4
  %37 = add i64 %28, -2
  %38 = getelementptr inbounds float, float* %30, i64 %37
  %39 = bitcast float* %38 to <2 x float>*
  %40 = load <2 x float>, <2 x float>* %39, align 4
  %41 = fadd <2 x float> %33, %40
  %42 = add nuw i64 %28, 2
  %43 = getelementptr inbounds float, float* %30, i64 %42
  %44 = bitcast float* %43 to <2 x float>*
  %45 = load <2 x float>, <2 x float>* %44, align 4
  %46 = fadd <2 x float> %36, %45
  %47 = shufflevector <2 x float> %41, <2 x float> %46, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %48 = shufflevector <2 x float> %33, <2 x float> %36, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %49 = fcmp oeq <4 x float> %47, %48
  %50 = shufflevector <4 x i1> %49, <4 x i1> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %51 = and <4 x i1> %49, %50
  %52 = shufflevector <4 x i1> %51, <4 x i1> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %53 = and <4 x i1> %51, %52
  %54 = extractelement <4 x i1> %53, i32 0
  br i1 %54, label %55, label %57

55:                                               ; preds = %26
  %56 = call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6lineToE7SkPoint(%class.SkPathBuilder* nonnull %3, <2 x float> %36) #6
  br label %59

57:                                               ; preds = %26
  %58 = call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder7cubicToE7SkPointS0_S0_(%class.SkPathBuilder* nonnull %3, <2 x float> %41, <2 x float> %46, <2 x float> %36) #6
  br label %59

59:                                               ; preds = %55, %57
  %60 = add nuw nsw i64 %27, 1
  %61 = icmp ult i64 %60, %11
  br i1 %61, label %26, label %25

62:                                               ; preds = %14, %25
  %63 = load float*, float** %4, align 8
  %64 = getelementptr inbounds float, float* %63, i64 -1
  %65 = load float, float* %64, align 4
  %66 = fcmp une float %65, 0.000000e+00
  br i1 %66, label %67, label %100

67:                                               ; preds = %62
  %68 = mul i64 %11, 6
  %69 = add i64 %68, -6
  %70 = getelementptr inbounds %"class.skottie::ShapeValue", %"class.skottie::ShapeValue"* %1, i64 0, i32 0, i32 0, i32 0
  %71 = load float*, float** %70, align 8
  %72 = getelementptr inbounds float, float* %71, i64 %69
  %73 = bitcast float* %72 to <2 x float>*
  %74 = load <2 x float>, <2 x float>* %73, align 4
  %75 = bitcast float* %71 to <2 x float>*
  %76 = load <2 x float>, <2 x float>* %75, align 4
  %77 = add i64 %68, -2
  %78 = getelementptr inbounds float, float* %71, i64 %77
  %79 = bitcast float* %78 to <2 x float>*
  %80 = load <2 x float>, <2 x float>* %79, align 4
  %81 = fadd <2 x float> %74, %80
  %82 = getelementptr inbounds float, float* %71, i64 2
  %83 = bitcast float* %82 to <2 x float>*
  %84 = load <2 x float>, <2 x float>* %83, align 4
  %85 = fadd <2 x float> %76, %84
  %86 = shufflevector <2 x float> %81, <2 x float> %85, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %87 = shufflevector <2 x float> %74, <2 x float> %76, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %88 = fcmp oeq <4 x float> %86, %87
  %89 = shufflevector <4 x i1> %88, <4 x i1> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %90 = and <4 x i1> %88, %89
  %91 = shufflevector <4 x i1> %90, <4 x i1> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %92 = and <4 x i1> %90, %91
  %93 = extractelement <4 x i1> %92, i32 0
  br i1 %93, label %94, label %96

94:                                               ; preds = %67
  %95 = call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6lineToE7SkPoint(%class.SkPathBuilder* nonnull %3, <2 x float> %76) #6
  br label %98

96:                                               ; preds = %67
  %97 = call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder7cubicToE7SkPointS0_S0_(%class.SkPathBuilder* nonnull %3, <2 x float> %81, <2 x float> %85, <2 x float> %76) #6
  br label %98

98:                                               ; preds = %94, %96
  %99 = call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder5closeEv(%class.SkPathBuilder* nonnull %3) #6
  br label %100

100:                                              ; preds = %2, %98, %62, %25
  call void @_ZN13SkPathBuilder6detachEv(%class.SkPath* sret %0, %class.SkPathBuilder* nonnull %3) #6
  call void @_ZN13SkPathBuilderD1Ev(%class.SkPathBuilder* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %12) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN13SkPathBuilderC1Ev(%class.SkPathBuilder*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder5closeEv(%class.SkPathBuilder*) local_unnamed_addr #2

declare void @_ZN13SkPathBuilder6detachEv(%class.SkPath* sret, %class.SkPathBuilder*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN13SkPathBuilderD1Ev(%class.SkPathBuilder*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindINS_10ShapeValueEEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"*, %"class.skottie::internal::AnimationBuilder"*, %"class.skjson::ObjectValue"*, %"class.skottie::ShapeValue"*) local_unnamed_addr #4 align 2 {
  %5 = alloca %"class.skottie::internal::VectorKeyframeAnimatorBuilder", align 8
  %6 = bitcast %"class.skottie::internal::VectorKeyframeAnimatorBuilder"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %6) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 8 bitcast (%"class.skottie::internal::VectorKeyframeAnimatorBuilder"* @__const._ZN7skottie8internal27AnimatablePropertyContainer4bindINS_10ShapeValueEEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_.builder to i8*), i64 136, i1 false)
  %7 = getelementptr inbounds %"class.skottie::ShapeValue", %"class.skottie::ShapeValue"* %3, i64 0, i32 0
  call void @_ZN7skottie8internal29VectorKeyframeAnimatorBuilderC1EPNSt3__16vectorIfNS2_9allocatorIfEEEEPFbRKN6skjson5ValueEPmEPFbSB_mPfE(%"class.skottie::internal::VectorKeyframeAnimatorBuilder"* nonnull %5, %"class.std::__1::vector"* %7, i1 (%"class.skjson::Value"*, i64*)* nonnull @_ZN7skottieL18parse_encoding_lenERKN6skjson5ValueEPm, i1 (%"class.skjson::Value"*, i64, float*)* nonnull @_ZN7skottieL19parse_encoding_dataERKN6skjson5ValueEmPf) #6
  %8 = getelementptr inbounds %"class.skottie::internal::VectorKeyframeAnimatorBuilder", %"class.skottie::internal::VectorKeyframeAnimatorBuilder"* %5, i64 0, i32 0
  %9 = call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer8bindImplERKNS0_16AnimationBuilderEPKN6skjson11ObjectValueERNS0_23KeyframeAnimatorBuilderE(%"class.skottie::internal::AnimatablePropertyContainer"* %0, %"class.skottie::internal::AnimationBuilder"* %1, %"class.skjson::ObjectValue"* %2, %"class.skottie::internal::KeyframeAnimatorBuilder"* nonnull dereferenceable(72) %8) #6
  %10 = getelementptr inbounds %"class.skottie::internal::VectorKeyframeAnimatorBuilder", %"class.skottie::internal::VectorKeyframeAnimatorBuilder"* %5, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal29VectorKeyframeAnimatorBuilderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.skottie::internal::VectorKeyframeAnimatorBuilder", %"class.skottie::internal::VectorKeyframeAnimatorBuilder"* %5, i64 0, i32 3, i32 0, i32 0
  %12 = load float*, float** %11, align 8
  %13 = icmp eq float* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %4
  %15 = ptrtoint float* %12 to i64
  %16 = getelementptr inbounds %"class.skottie::internal::VectorKeyframeAnimatorBuilder", %"class.skottie::internal::VectorKeyframeAnimatorBuilder"* %5, i64 0, i32 3, i32 0, i32 1
  %17 = bitcast float** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = bitcast float* %12 to i8*
  call void @_ZdlPv(i8* %18) #7
  br label %19

19:                                               ; preds = %4, %14
  call void @_ZN7skottie8internal23KeyframeAnimatorBuilderD2Ev(%"class.skottie::internal::KeyframeAnimatorBuilder"* nonnull %8) #6
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %6) #6
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN7skottieL18parse_encoding_lenERKN6skjson5ValueEPm(%"class.skjson::Value"* dereferenceable(8), i64* nocapture) #4 {
  %3 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %0, i64 0, i32 0, i64 0
  %4 = load i8, i8* %3, align 8
  %5 = and i8 %4, 7
  %6 = icmp ne i8 %5, 6
  %7 = icmp eq %"class.skjson::Value"* %0, null
  %8 = or i1 %7, %6
  br i1 %8, label %23, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.skjson::Value"* %0 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = and i64 %11, -8
  %13 = inttoptr i64 %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 1
  br i1 %15, label %16, label %45

16:                                               ; preds = %9
  %17 = getelementptr inbounds i64, i64* %13, i64 1
  %18 = bitcast i64* %17 to i8*
  %19 = load i8, i8* %18, align 8
  %20 = and i8 %19, 7
  %21 = icmp eq i8 %20, 7
  %22 = bitcast i64* %17 to %"class.skjson::ObjectValue"*
  br i1 %21, label %26, label %45

23:                                               ; preds = %2
  %24 = icmp eq i8 %5, 7
  %25 = bitcast %"class.skjson::Value"* %0 to %"class.skjson::ObjectValue"*
  br i1 %24, label %26, label %45

26:                                               ; preds = %16, %23
  %27 = phi %"class.skjson::ObjectValue"* [ %25, %23 ], [ %22, %16 ]
  %28 = icmp eq %"class.skjson::ObjectValue"* %27, null
  br i1 %28, label %45, label %29

29:                                               ; preds = %26
  %30 = tail call dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"* nonnull %27, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0)) #6
  %31 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %30, i64 0, i32 0, i64 0
  %32 = load i8, i8* %31, align 8
  %33 = and i8 %32, 7
  %34 = icmp ne i8 %33, 6
  %35 = icmp eq %"class.skjson::Value"* %30, null
  %36 = or i1 %35, %34
  br i1 %36, label %45, label %37

37:                                               ; preds = %29
  %38 = bitcast %"class.skjson::Value"* %30 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = and i64 %39, -8
  %41 = inttoptr i64 %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = mul i64 %42, 6
  %44 = or i64 %43, 1
  store i64 %44, i64* %1, align 8
  br label %45

45:                                               ; preds = %9, %29, %16, %23, %26, %37
  %46 = phi i1 [ true, %37 ], [ false, %26 ], [ false, %23 ], [ false, %16 ], [ false, %29 ], [ false, %9 ]
  ret i1 %46
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN7skottieL19parse_encoding_dataERKN6skjson5ValueEmPf(%"class.skjson::Value"* dereferenceable(8), i64, float*) #4 {
  %4 = alloca i8, align 1
  %5 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %0, i64 0, i32 0, i64 0
  %6 = load i8, i8* %5, align 8
  %7 = and i8 %6, 7
  %8 = icmp ne i8 %7, 6
  %9 = icmp eq %"class.skjson::Value"* %0, null
  %10 = or i1 %9, %8
  br i1 %10, label %25, label %11

11:                                               ; preds = %3
  %12 = bitcast %"class.skjson::Value"* %0 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = and i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = icmp eq i64 %16, 1
  br i1 %17, label %18, label %199

18:                                               ; preds = %11
  %19 = getelementptr inbounds i64, i64* %15, i64 1
  %20 = bitcast i64* %19 to i8*
  %21 = load i8, i8* %20, align 8
  %22 = and i8 %21, 7
  %23 = icmp eq i8 %22, 7
  %24 = bitcast i64* %19 to %"class.skjson::ObjectValue"*
  br i1 %23, label %28, label %199

25:                                               ; preds = %3
  %26 = icmp eq i8 %7, 7
  %27 = bitcast %"class.skjson::Value"* %0 to %"class.skjson::ObjectValue"*
  br i1 %26, label %28, label %199

28:                                               ; preds = %18, %25
  %29 = phi %"class.skjson::ObjectValue"* [ %27, %25 ], [ %24, %18 ]
  %30 = icmp eq %"class.skjson::ObjectValue"* %29, null
  br i1 %30, label %199, label %31

31:                                               ; preds = %28
  %32 = tail call dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"* nonnull %29, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0)) #6
  %33 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %32, i64 0, i32 0, i64 0
  %34 = load i8, i8* %33, align 8
  %35 = and i8 %34, 7
  %36 = icmp ne i8 %35, 6
  %37 = tail call dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"* nonnull %29, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6
  %38 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %37, i64 0, i32 0, i64 0
  %39 = load i8, i8* %38, align 8
  %40 = and i8 %39, 7
  %41 = icmp eq i8 %40, 6
  %42 = bitcast %"class.skjson::Value"* %37 to %"class.skjson::ArrayValue"*
  %43 = select i1 %41, %"class.skjson::ArrayValue"* %42, %"class.skjson::ArrayValue"* null
  %44 = tail call dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"* nonnull %29, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6
  %45 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %44, i64 0, i32 0, i64 0
  %46 = load i8, i8* %45, align 8
  %47 = and i8 %46, 7
  %48 = icmp eq i8 %47, 6
  %49 = bitcast %"class.skjson::Value"* %44 to %"class.skjson::ArrayValue"*
  %50 = select i1 %48, %"class.skjson::ArrayValue"* %49, %"class.skjson::ArrayValue"* null
  %51 = icmp eq %"class.skjson::Value"* %32, null
  %52 = or i1 %51, %36
  br i1 %52, label %199, label %53

53:                                               ; preds = %31
  %54 = bitcast %"class.skjson::Value"* %32 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = and i64 %55, -8
  %57 = inttoptr i64 %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = mul i64 %58, 6
  %60 = or i64 %59, 1
  %61 = icmp eq i64 %60, %1
  br i1 %61, label %62, label %199

62:                                               ; preds = %53
  %63 = icmp eq i64 %58, 0
  br i1 %63, label %187, label %64

64:                                               ; preds = %62
  %65 = icmp eq %"class.skjson::ArrayValue"* %43, null
  %66 = bitcast %"class.skjson::ArrayValue"* %43 to i64*
  %67 = icmp eq %"class.skjson::ArrayValue"* %50, null
  %68 = bitcast %"class.skjson::ArrayValue"* %50 to i64*
  br label %69

69:                                               ; preds = %64, %180
  %70 = phi i64 [ %55, %64 ], [ %182, %180 ]
  %71 = phi i64 [ 0, %64 ], [ %181, %180 ]
  %72 = mul i64 %71, 6
  %73 = getelementptr inbounds float, float* %2, i64 %72
  %74 = getelementptr inbounds float, float* %73, i64 1
  %75 = and i64 %70, -8
  %76 = inttoptr i64 %75 to i64*
  %77 = getelementptr inbounds i64, i64* %76, i64 1
  %78 = getelementptr inbounds i64, i64* %77, i64 %71
  %79 = bitcast i64* %78 to i8*
  %80 = load i8, i8* %79, align 8
  %81 = and i8 %80, 7
  %82 = icmp eq i8 %81, 6
  br i1 %82, label %83, label %199

83:                                               ; preds = %69
  %84 = load i64, i64* %78, align 8
  %85 = and i64 %84, -8
  %86 = inttoptr i64 %85 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = icmp eq i64 %87, 2
  br i1 %88, label %89, label %199

89:                                               ; preds = %83
  %90 = getelementptr inbounds i64, i64* %86, i64 1
  %91 = bitcast i64* %90 to %"class.skjson::Value"*
  %92 = tail call zeroext i1 @_ZN7skottie5ParseIfEEbRKN6skjson5ValueEPT_(%"class.skjson::Value"* dereferenceable(8) %91, float* %73) #6
  br i1 %92, label %93, label %199

93:                                               ; preds = %89
  %94 = load i64, i64* %78, align 8
  %95 = and i64 %94, -8
  %96 = inttoptr i64 %95 to i64*
  %97 = getelementptr inbounds i64, i64* %96, i64 2
  %98 = bitcast i64* %97 to %"class.skjson::Value"*
  %99 = tail call zeroext i1 @_ZN7skottie5ParseIfEEbRKN6skjson5ValueEPT_(%"class.skjson::Value"* dereferenceable(8) %98, float* %74) #6
  br i1 %99, label %100, label %199

100:                                              ; preds = %93
  %101 = getelementptr inbounds float, float* %73, i64 2
  %102 = getelementptr inbounds float, float* %73, i64 3
  br i1 %65, label %109, label %103

103:                                              ; preds = %100
  %104 = load i64, i64* %66, align 8
  %105 = and i64 %104, -8
  %106 = inttoptr i64 %105 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = icmp ugt i64 %107, %71
  br i1 %108, label %110, label %109

109:                                              ; preds = %100, %103
  store float 0.000000e+00, float* %102, align 4
  store float 0.000000e+00, float* %101, align 4
  br label %140

110:                                              ; preds = %103
  %111 = and i64 %104, 7
  %112 = icmp eq i64 %111, 6
  %113 = select i1 %112, i64* %66, i64* null
  %114 = load i64, i64* %113, align 8
  %115 = and i64 %114, -8
  %116 = inttoptr i64 %115 to i64*
  %117 = getelementptr inbounds i64, i64* %116, i64 1
  %118 = getelementptr inbounds i64, i64* %117, i64 %71
  %119 = bitcast i64* %118 to i8*
  %120 = load i8, i8* %119, align 8
  %121 = and i8 %120, 7
  %122 = icmp eq i8 %121, 6
  br i1 %122, label %123, label %199

123:                                              ; preds = %110
  %124 = load i64, i64* %118, align 8
  %125 = and i64 %124, -8
  %126 = inttoptr i64 %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = icmp eq i64 %127, 2
  br i1 %128, label %129, label %199

129:                                              ; preds = %123
  %130 = getelementptr inbounds i64, i64* %126, i64 1
  %131 = bitcast i64* %130 to %"class.skjson::Value"*
  %132 = tail call zeroext i1 @_ZN7skottie5ParseIfEEbRKN6skjson5ValueEPT_(%"class.skjson::Value"* dereferenceable(8) %131, float* %101) #6
  br i1 %132, label %133, label %199

133:                                              ; preds = %129
  %134 = load i64, i64* %118, align 8
  %135 = and i64 %134, -8
  %136 = inttoptr i64 %135 to i64*
  %137 = getelementptr inbounds i64, i64* %136, i64 2
  %138 = bitcast i64* %137 to %"class.skjson::Value"*
  %139 = tail call zeroext i1 @_ZN7skottie5ParseIfEEbRKN6skjson5ValueEPT_(%"class.skjson::Value"* dereferenceable(8) %138, float* %102) #6
  br i1 %139, label %140, label %199

140:                                              ; preds = %109, %133
  %141 = getelementptr inbounds float, float* %73, i64 4
  %142 = getelementptr inbounds float, float* %73, i64 5
  br i1 %67, label %149, label %143

143:                                              ; preds = %140
  %144 = load i64, i64* %68, align 8
  %145 = and i64 %144, -8
  %146 = inttoptr i64 %145 to i64*
  %147 = load i64, i64* %146, align 8
  %148 = icmp ugt i64 %147, %71
  br i1 %148, label %150, label %149

149:                                              ; preds = %140, %143
  store float 0.000000e+00, float* %142, align 4
  store float 0.000000e+00, float* %141, align 4
  br label %180

150:                                              ; preds = %143
  %151 = and i64 %144, 7
  %152 = icmp eq i64 %151, 6
  %153 = select i1 %152, i64* %68, i64* null
  %154 = load i64, i64* %153, align 8
  %155 = and i64 %154, -8
  %156 = inttoptr i64 %155 to i64*
  %157 = getelementptr inbounds i64, i64* %156, i64 1
  %158 = getelementptr inbounds i64, i64* %157, i64 %71
  %159 = bitcast i64* %158 to i8*
  %160 = load i8, i8* %159, align 8
  %161 = and i8 %160, 7
  %162 = icmp eq i8 %161, 6
  br i1 %162, label %163, label %199

163:                                              ; preds = %150
  %164 = load i64, i64* %158, align 8
  %165 = and i64 %164, -8
  %166 = inttoptr i64 %165 to i64*
  %167 = load i64, i64* %166, align 8
  %168 = icmp eq i64 %167, 2
  br i1 %168, label %169, label %199

169:                                              ; preds = %163
  %170 = getelementptr inbounds i64, i64* %166, i64 1
  %171 = bitcast i64* %170 to %"class.skjson::Value"*
  %172 = tail call zeroext i1 @_ZN7skottie5ParseIfEEbRKN6skjson5ValueEPT_(%"class.skjson::Value"* dereferenceable(8) %171, float* %141) #6
  br i1 %172, label %173, label %199

173:                                              ; preds = %169
  %174 = load i64, i64* %158, align 8
  %175 = and i64 %174, -8
  %176 = inttoptr i64 %175 to i64*
  %177 = getelementptr inbounds i64, i64* %176, i64 2
  %178 = bitcast i64* %177 to %"class.skjson::Value"*
  %179 = tail call zeroext i1 @_ZN7skottie5ParseIfEEbRKN6skjson5ValueEPT_(%"class.skjson::Value"* dereferenceable(8) %178, float* %142) #6
  br i1 %179, label %180, label %199

180:                                              ; preds = %149, %173
  %181 = add nuw i64 %71, 1
  %182 = load i64, i64* %54, align 8
  %183 = and i64 %182, -8
  %184 = inttoptr i64 %183 to i64*
  %185 = load i64, i64* %184, align 8
  %186 = icmp ult i64 %181, %185
  br i1 %186, label %69, label %187

187:                                              ; preds = %180, %62
  %188 = tail call dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"* nonnull %29, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #6
  store i8 -86, i8* %4, align 1
  %189 = call zeroext i1 @_ZN7skottie5ParseIbEEbRKN6skjson5ValueEPT_(%"class.skjson::Value"* dereferenceable(8) %188, i8* nonnull %4) #6
  br i1 %189, label %190, label %194

190:                                              ; preds = %187
  %191 = load i8, i8* %4, align 1, !range !2
  %192 = icmp ne i8 %191, 0
  %193 = uitofp i1 %192 to float
  br label %195

194:                                              ; preds = %187
  store i8 0, i8* %4, align 1
  br label %195

195:                                              ; preds = %190, %194
  %196 = phi float [ %193, %190 ], [ 0.000000e+00, %194 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #6
  %197 = add i64 %1, -1
  %198 = getelementptr inbounds float, float* %2, i64 %197
  store float %196, float* %198, align 4
  br label %199

199:                                              ; preds = %69, %169, %150, %163, %129, %110, %123, %89, %83, %133, %93, %173, %11, %18, %25, %195, %53, %31, %28
  %200 = phi i1 [ false, %28 ], [ false, %53 ], [ false, %31 ], [ true, %195 ], [ false, %25 ], [ false, %18 ], [ false, %11 ], [ false, %173 ], [ false, %93 ], [ false, %133 ], [ false, %83 ], [ false, %89 ], [ false, %123 ], [ false, %110 ], [ false, %129 ], [ false, %163 ], [ false, %150 ], [ false, %169 ], [ false, %69 ]
  ret i1 %200
}

declare void @_ZN7skottie8internal29VectorKeyframeAnimatorBuilderC1EPNSt3__16vectorIfNS2_9allocatorIfEEEEPFbRKN6skjson5ValueEPmEPFbSB_mPfE(%"class.skottie::internal::VectorKeyframeAnimatorBuilder"*, %"class.std::__1::vector"*, i1 (%"class.skjson::Value"*, i64*)*, i1 (%"class.skjson::Value"*, i64, float*)*) unnamed_addr #2

declare zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer8bindImplERKNS0_16AnimationBuilderEPKN6skjson11ObjectValueERNS0_23KeyframeAnimatorBuilderE(%"class.skottie::internal::AnimatablePropertyContainer"*, %"class.skottie::internal::AnimationBuilder"*, %"class.skjson::ObjectValue"*, %"class.skottie::internal::KeyframeAnimatorBuilder"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN13SkPathBuilder10incReserveEii(%class.SkPathBuilder*, i32, i32) local_unnamed_addr #2

declare dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6moveToE7SkPoint(%class.SkPathBuilder*, <2 x float>) local_unnamed_addr #2

declare dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6lineToE7SkPoint(%class.SkPathBuilder*, <2 x float>) local_unnamed_addr #2

declare dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder7cubicToE7SkPointS0_S0_(%class.SkPathBuilder*, <2 x float>, <2 x float>, <2 x float>) local_unnamed_addr #2

declare dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"*, i8*) local_unnamed_addr #2

declare zeroext i1 @_ZN7skottie5ParseIfEEbRKN6skjson5ValueEPT_(%"class.skjson::Value"* dereferenceable(8), float*) local_unnamed_addr #2

declare zeroext i1 @_ZN7skottie5ParseIbEEbRKN6skjson5ValueEPT_(%"class.skjson::Value"* dereferenceable(8), i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7skottie8internal23KeyframeAnimatorBuilderD2Ev(%"class.skottie::internal::KeyframeAnimatorBuilder"*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
