; ModuleID = '../../components/variations/service/ui_string_overrider.cc'
source_filename = "../../components/variations/service/ui_string_overrider.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.variations::UIStringOverrider" = type { i32*, i32*, i64 }

@_ZN10variations17UIStringOverriderC1Ev = hidden unnamed_addr alias void (%"class.variations::UIStringOverrider"*), void (%"class.variations::UIStringOverrider"*)* @_ZN10variations17UIStringOverriderC2Ev
@_ZN10variations17UIStringOverriderC1EPKjPKim = hidden unnamed_addr alias void (%"class.variations::UIStringOverrider"*, i32*, i32*, i64), void (%"class.variations::UIStringOverrider"*, i32*, i32*, i64)* @_ZN10variations17UIStringOverriderC2EPKjPKim
@_ZN10variations17UIStringOverriderD1Ev = hidden unnamed_addr alias void (%"class.variations::UIStringOverrider"*), void (%"class.variations::UIStringOverrider"*)* @_ZN10variations17UIStringOverriderD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN10variations17UIStringOverriderC2Ev(%"class.variations::UIStringOverrider"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.variations::UIStringOverrider"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 24, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN10variations17UIStringOverriderC2EPKjPKim(%"class.variations::UIStringOverrider"* nocapture, i32*, i32*, i64) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.variations::UIStringOverrider", %"class.variations::UIStringOverrider"* %0, i64 0, i32 0
  store i32* %1, i32** %5, align 8
  %6 = getelementptr inbounds %"class.variations::UIStringOverrider", %"class.variations::UIStringOverrider"* %0, i64 0, i32 1
  store i32* %2, i32** %6, align 8
  %7 = getelementptr inbounds %"class.variations::UIStringOverrider", %"class.variations::UIStringOverrider"* %0, i64 0, i32 2
  store i64 %3, i64* %7, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN10variations17UIStringOverriderD2Ev(%"class.variations::UIStringOverrider"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN10variations17UIStringOverrider16GetResourceIndexEj(%"class.variations::UIStringOverrider"* nocapture readonly, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.variations::UIStringOverrider", %"class.variations::UIStringOverrider"* %0, i64 0, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %39, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.variations::UIStringOverrider", %"class.variations::UIStringOverrider"* %0, i64 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = shl nuw i64 %4, 2
  %10 = ashr exact i64 %9, 2
  %11 = ptrtoint i32* %8 to i64
  br label %12

12:                                               ; preds = %12, %6
  %13 = phi i64 [ %10, %6 ], [ %23, %12 ]
  %14 = phi i32* [ %8, %6 ], [ %22, %12 ]
  %15 = lshr i64 %13, 1
  %16 = getelementptr inbounds i32, i32* %14, i64 %15
  %17 = load i32, i32* %16, align 4
  %18 = icmp ult i32 %17, %1
  %19 = getelementptr inbounds i32, i32* %16, i64 1
  %20 = xor i64 %15, -1
  %21 = add i64 %13, %20
  %22 = select i1 %18, i32* %19, i32* %14
  %23 = select i1 %18, i64 %21, i64 %15
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %25, label %12

25:                                               ; preds = %12
  %26 = getelementptr inbounds i32, i32* %8, i64 %4
  %27 = icmp eq i32* %22, %26
  br i1 %27, label %39, label %28

28:                                               ; preds = %25
  %29 = load i32, i32* %22, align 4
  %30 = icmp eq i32 %29, %1
  br i1 %30, label %31, label %39

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"class.variations::UIStringOverrider", %"class.variations::UIStringOverrider"* %0, i64 0, i32 1
  %33 = load i32*, i32** %32, align 8
  %34 = ptrtoint i32* %22 to i64
  %35 = sub i64 %34, %11
  %36 = ashr exact i64 %35, 2
  %37 = getelementptr inbounds i32, i32* %33, i64 %36
  %38 = load i32, i32* %37, align 4
  br label %39

39:                                               ; preds = %31, %28, %25, %2
  %40 = phi i32 [ -1, %2 ], [ %38, %31 ], [ -1, %28 ], [ -1, %25 ]
  ret i32 %40
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
