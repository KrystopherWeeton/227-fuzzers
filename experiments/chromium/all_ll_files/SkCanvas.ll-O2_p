; ModuleID = '../../third_party/skia/src/core/SkCanvas.cpp'
source_filename = "../../third_party/skia/src/core/SkCanvas.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.SkRect = type { float, float, float, float }
%"class.skif::Mapping" = type { %class.SkMatrix, %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%"class.skif::LayerSpace" = type { %struct.SkIRect }
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.SkImageFilterCache = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.4" }
%"struct.std::__1::atomic.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl.7" }
%"struct.std::__1::__cxx_atomic_impl.7" = type { %"struct.std::__1::__cxx_atomic_base_impl.8" }
%"struct.std::__1::__cxx_atomic_base_impl.8" = type { i8 }
%"class.skif::FilterResult" = type { %class.sk_sp.74, %"class.skif::LayerSpace.245" }
%class.sk_sp.74 = type { %class.SkSpecialImage* }
%class.SkSpecialImage = type { %class.SkRefCnt.base, %class.SkSurfaceProps, %struct.SkIRect, i32 }
%class.SkSurfaceProps = type { i32, i32 }
%"class.skif::LayerSpace.245" = type { %struct.SkIPoint }
%struct.SkIPoint = type { i32, i32 }
%class.SkGlyphRun = type { %class.SkZip, %class.SkSpan, %class.SkSpan.29, %class.SkSpan.30, %class.SkFont }
%class.SkZip = type { %"class.std::__1::tuple", i64 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.28" }
%"class.std::__1::__tuple_leaf" = type { i16* }
%"class.std::__1::__tuple_leaf.28" = type { %struct.SkPoint* }
%struct.SkPoint = type { float, float }
%class.SkSpan = type { i8*, i64 }
%class.SkSpan.29 = type { i32*, i64 }
%class.SkSpan.30 = type { %struct.SkPoint*, i64 }
%class.SkFont = type <{ %class.sk_sp.31, float, float, float, i8, i8, i8, i8 }>
%class.sk_sp.31 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%class.AutoLayerForImageFilter = type <{ %class.SkPaint, %class.SkCanvas*, i8, [7 x i8] }>
%class.SkPaint = type <{ %class.sk_sp.54, %class.sk_sp.55, %class.sk_sp.56, %class.sk_sp.57, %class.sk_sp.58, %struct.SkRGBA4f, float, float, %union.anon, [4 x i8] }>
%class.sk_sp.54 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.sk_sp.55 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.56 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.57 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.58 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon = type { %struct.anon }
%struct.anon = type { i32 }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp, [384 x i64], %class.sk_sp.2, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.19" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type <{ %"class.std::__1::unique_ptr.59", %class.SkBaseDevice*, %"class.std::__1::unique_ptr.71", %class.SkM44, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"struct.(anonymous namespace)::Layer"* }
%"struct.(anonymous namespace)::Layer" = type { %class.sk_sp.2, %"class.std::__1::unique_ptr.62", %class.SkM44 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %class.SkPaint* }
%class.SkBaseDevice = type { %class.SkRefCnt.base, %class.SkMatrixProvider, %class.SkMarkerStack*, %struct.SkImageInfo, %class.SkSurfaceProps, %class.SkM44, %class.SkM44 }
%class.SkMatrixProvider = type { i32 (...)**, %class.SkM44, %class.SkMatrix }
%class.SkMarkerStack = type { %class.SkRefCnt.base, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.SkMarkerStack::Rec"*, %"struct.SkMarkerStack::Rec"*, %"class.std::__1::__compressed_pair" }
%"struct.SkMarkerStack::Rec" = type <{ i8*, %class.SkM44, %class.SkM44, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.SkMarkerStack::Rec"* }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.3, i32, i32 }
%class.sk_sp.3 = type { %class.SkColorSpace* }
%struct.SkISize = type { i32, i32 }
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"struct.(anonymous namespace)::BackImage"* }
%"struct.(anonymous namespace)::BackImage" = type { %class.sk_sp.74, %struct.SkIPoint }
%class.SkM44 = type { [16 x float] }
%class.sk_sp = type { %class.SkMarkerStack* }
%class.sk_sp.2 = type { %class.SkBaseDevice* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type { %class.SkSurface, %"class.std::__1::unique_ptr.12", %class.sk_sp.18 }
%class.SkSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, i32, i32, i32 }
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %class.SkCanvas* }
%class.sk_sp.18 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type { i32, %class.SkAutoTMalloc, i32, %class.SkAutoTMalloc, %"class.std::__1::vector.26", %class.SkGlyphRunList, %"class.std::__1::vector.44" }
%class.SkAutoTMalloc = type { %"class.std::__1::unique_ptr.22" }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %struct.SkPoint* }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %class.SkGlyphRun*, %class.SkGlyphRun*, %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %class.SkGlyphRun* }
%class.SkGlyphRunList = type { %class.SkSpan.37, %class.SkTextBlob*, %struct.SkRect, %struct.SkPoint }
%class.SkSpan.37 = type { %class.SkGlyphRun*, i64 }
%class.SkTextBlob = type { %class.SkNVRefCnt.38, %struct.SkRect, i32, %"struct.std::__1::atomic.39" }
%class.SkNVRefCnt.38 = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.39" = type { %"struct.std::__1::__atomic_base.40" }
%"struct.std::__1::__atomic_base.40" = type { %"struct.std::__1::__atomic_base.41" }
%"struct.std::__1::__atomic_base.41" = type { %"struct.std::__1::__cxx_atomic_impl.42" }
%"struct.std::__1::__cxx_atomic_impl.42" = type { %"struct.std::__1::__cxx_atomic_base_impl.43" }
%"struct.std::__1::__cxx_atomic_base_impl.43" = type { i32 }
%"class.std::__1::vector.44" = type { %"class.std::__1::__vector_base.45" }
%"class.std::__1::__vector_base.45" = type { i16*, i16*, %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { i16* }
%class.SkBitmap = type { %class.sk_sp.79, %class.SkPixmap, %class.sk_sp.80 }
%class.sk_sp.79 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%class.sk_sp.80 = type { %class.SkMipmap* }
%class.SkMipmap = type <{ %class.SkCachedData.base, [6 x i8], %class.sk_sp.3, %"struct.SkMipmap::Level"*, i32, [4 x i8] }>
%class.SkCachedData.base = type <{ i32 (...)**, %class.SkMutex, %union.anon.81, i8*, i64, i32, i32, i8, i8 }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%union.anon.81 = type { %class.SkDiscardableMemory* }
%class.SkDiscardableMemory = type opaque
%"struct.SkMipmap::Level" = type { %class.SkPixmap, %struct.SkSize }
%struct.SkSize = type { float, float }
%"struct.SkCanvas::ImageSetEntry" = type <{ %class.sk_sp.250, %struct.SkRect, %struct.SkRect, i32, float, i32, i8, [3 x i8] }>
%class.sk_sp.250 = type { %class.SkImage* }
%class.SkNoDrawCanvas = type { %class.SkCanvasVirtualEnforcer }
%class.SkCanvasVirtualEnforcer = type { %class.SkCanvas }
%class.SkNoPixelsDevice = type { %class.SkBaseDevice, %struct.SkIRect, %class.SkSTArray }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [160 x i8] }
%class.SkTArray = type { %"struct.SkNoPixelsDevice::ClipState"*, i64 }
%"struct.SkNoPixelsDevice::ClipState" = type <{ %class.SkConservativeClip, i32, [4 x i8] }>
%class.SkConservativeClip = type { %struct.SkIRect, i8, i8, %struct.SkIRect* }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"struct.std::__1::default_delete.52" = type { i8 }
%class.SkBitmapDevice = type { %class.SkBaseDevice, %class.SkBitmap, i8*, %class.SkRasterClipStack, %"class.std::__1::unique_ptr.82", %class.SkGlyphRunListPainter }
%class.SkRasterClipStack = type { i32, [160 x i8*], %class.SkTStack, %struct.SkIRect }
%class.SkTStack = type { %class.SkDeque, %"struct.SkRasterClipStack::Rec"* }
%"struct.SkRasterClipStack::Rec" = type <{ %class.SkRasterClip, i32, [4 x i8] }>
%class.SkRasterClip = type { %class.SkRegion, %class.SkAAClip, i8, i8, i8, %struct.SkIRect*, %class.sk_sp.55 }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%"struct.SkRegion::RunHead" = type opaque
%class.SkAAClip = type { %struct.SkIRect, %"struct.SkAAClip::RunHead"* }
%"struct.SkAAClip::RunHead" = type opaque
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %class.SkBitmap* }
%class.SkGlyphRunListPainter = type { %class.SkSurfaceProps, %class.SkSurfaceProps, i32, i32, %class.SkStrikeForGPUCacheInterface*, %class.SkDrawableGlyphBuffer, %class.SkSourceGlyphBuffer }
%class.SkStrikeForGPUCacheInterface = type { i32 (...)** }
%class.SkDrawableGlyphBuffer = type { i64, i64, i64, %class.SkAutoTArray, %class.SkAutoTMalloc }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.88" }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %class.SkGlyphVariant* }
%class.SkGlyphVariant = type { %union.anon.91 }
%union.anon.91 = type { %class.SkGlyph* }
%class.SkGlyph = type { i16, i16, i16, i16, i8*, %"struct.SkGlyph::PathData"*, float, float, i8, i8, %struct.SkPackedGlyphID }
%"struct.SkGlyph::PathData" = type <{ %"struct.SkGlyph::Intercept"*, %class.SkPath, i8, [7 x i8] }>
%"struct.SkGlyph::Intercept" = type { %"struct.SkGlyph::Intercept"*, [2 x float], [2 x float] }
%class.SkPath = type <{ %class.sk_sp.92, i32, %"struct.std::__1::atomic.4", %"struct.std::__1::atomic.4", i8, i8 }>
%class.sk_sp.92 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt.93, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.94, %class.SkTDArray.95, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt.93 = type { %"struct.std::__1::atomic" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.94 = type { i8*, i32, i32 }
%class.SkTDArray.95 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.96 }
%class.SkTDArray.96 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.97", [3 x i8] }
%"struct.std::__1::atomic.97" = type { %"struct.std::__1::__atomic_base.98" }
%"struct.std::__1::__atomic_base.98" = type { %"struct.std::__1::__cxx_atomic_impl.99" }
%"struct.std::__1::__cxx_atomic_impl.99" = type { %"struct.std::__1::__cxx_atomic_base_impl.100" }
%"struct.std::__1::__cxx_atomic_base_impl.100" = type { i8 }
%struct.SkPackedGlyphID = type { i32 }
%class.SkSourceGlyphBuffer = type { %class.SkZip, i64, i32, i32, %class.SkZip.104, %class.SkSTArray.109, %class.SkSTArray.112 }
%class.SkZip.104 = type { %"class.std::__1::tuple.105", i64 }
%"class.std::__1::tuple.105" = type { %"struct.std::__1::__tuple_impl.106" }
%"struct.std::__1::__tuple_impl.106" = type { %"class.std::__1::__tuple_leaf.107", %"class.std::__1::__tuple_leaf.108" }
%"class.std::__1::__tuple_leaf.107" = type { i16* }
%"class.std::__1::__tuple_leaf.108" = type { %struct.SkPoint* }
%class.SkSTArray.109 = type { %class.SkAlignedSTStorage.110, %class.SkTArray.111 }
%class.SkAlignedSTStorage.110 = type { [8 x i8] }
%class.SkTArray.111 = type { i16*, i64 }
%class.SkSTArray.112 = type { %class.SkAlignedSTStorage.113, %class.SkTArray.114 }
%class.SkAlignedSTStorage.113 = type { [32 x i8] }
%class.SkTArray.114 = type { %struct.SkPoint*, i64 }
%struct.SkSamplingOptions = type { i8, %struct.SkCubicResampler, i32, i32 }
%struct.SkCubicResampler = type { float, float }
%struct.GrFlushInfo = type { i32, %class.GrBackendSemaphore*, void (i8*)*, i8*, void (i8*, i1)*, i8* }
%class.GrBackendSemaphore = type opaque
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.132", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.151", %"class.std::__1::unique_ptr.157" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.115 }
%class.sk_sp.115 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type <{ %class.SkNVRefCnt.116, i32, %struct.GrContextOptions, i32, [4 x i8], %class.sk_sp.117, %"class.std::__1::unique_ptr.119", %"class.std::__1::unique_ptr.125", %class.sk_sp.131, %"struct.std::__1::atomic.97", [7 x i8] }>
%class.SkNVRefCnt.116 = type { %"struct.std::__1::atomic" }
%struct.GrContextOptions = type { i8, i32, i32, i32, %class.SkExecutor*, i8, i8, i8, i8, i8, i64, float, float, i32, i8, i8, i32, i32, i8, i8, i32, %"class.GrContextOptions::PersistentCache"*, i32, %"class.GrContextOptions::ShaderErrorHandler"*, i32, i32, i8, i8, %class.GrDriverBugWorkarounds }
%class.SkExecutor = type opaque
%"class.GrContextOptions::PersistentCache" = type { i32 (...)** }
%"class.GrContextOptions::ShaderErrorHandler" = type { i32 (...)** }
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.sk_sp.117 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.118, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.118 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %class.GrTextBlobCache* }
%class.GrTextBlobCache = type opaque
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %class.GrThreadSafeCache* }
%class.GrThreadSafeCache = type opaque
%class.sk_sp.131 = type { %class.GrThreadSafePipelineBuilder* }
%class.GrThreadSafePipelineBuilder = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type opaque
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.144" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.147 }
%class.SkFibBlockSizes.147 = type { i32 }
%"class.std::__1::unique_ptr.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %class.GrProxyProvider* }
%class.GrProxyProvider = type opaque
%class.GrDirectContext = type { %class.GrRecordingContext, %"class.GrDirectContext::DirectContextID", %"class.std::__1::unique_ptr.163", %"class.std::__1::unique_ptr.169", %class.sk_sp.175, %"class.std::__1::unique_ptr.176", %"class.std::__1::unique_ptr.214", i8, i8, %"class.GrContextOptions::PersistentCache"*, %"class.GrContextOptions::ShaderErrorHandler"*, %"class.std::__1::unique_ptr.221", %"class.std::__1::unique_ptr.227", %"class.std::__1::unique_ptr.233" }
%"class.GrDirectContext::DirectContextID" = type { i32 }
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %class.SkTaskGroup* }
%class.SkTaskGroup = type opaque
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %class.GrStrikeCache* }
%class.GrStrikeCache = type opaque
%class.sk_sp.175 = type { %class.GrGpu* }
%class.GrGpu = type opaque
%"class.std::__1::unique_ptr.176" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %class.GrResourceCache* }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray.179, %class.SkTMultiMap, %class.SkTDynamicHash.190, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.SkTDPQueue = type { %class.SkTDArray.179 }
%class.SkTDArray.179 = type { %class.GrGpuResource**, i32, i32 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon.180, [4 x i8] }>
%union.anon.180 = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.181, i8* }
%class.sk_sp.181 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.182, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.182 = type { %"struct.std::__1::atomic" }
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray.183 }
%class.SkAutoTArray.183 = type { %"class.std::__1::unique_ptr.184" }
%"class.std::__1::unique_ptr.184" = type { %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.190 = type { %class.SkTHashTable.191 }
%class.SkTHashTable.191 = type { i32, i32, %class.SkAutoTArray.192 }
%class.SkAutoTArray.192 = type { %"class.std::__1::unique_ptr.193" }
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.199, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.199 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.200, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.200 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.201 }
%class.sk_sp.201 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.202, void (i8*)*, i8* }
%class.SkNVRefCnt.202 = type { %"struct.std::__1::atomic" }
%class.SkTHashMap = type { %class.SkTHashTable.203 }
%class.SkTHashTable.203 = type { i32, i32, %class.SkAutoTArray.204 }
%class.SkAutoTArray.204 = type { %"class.std::__1::unique_ptr.205" }
%"class.std::__1::unique_ptr.205" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.std::__1::unique_ptr.214" = type { %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %class.GrResourceProvider* }
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.117, %class.sk_sp.217, %class.sk_sp.217 }
%class.sk_sp.217 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.GrBuffer = type { i32 (...)** }
%"class.std::__1::unique_ptr.221" = type { %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %class.GrClientMappedBufferManager* }
%class.GrClientMappedBufferManager = type opaque
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %class.GrAtlasManager* }
%class.GrAtlasManager = type opaque
%"class.std::__1::unique_ptr.233" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %class.GrSmallPathAtlasMgr* }
%class.GrSmallPathAtlasMgr = type opaque
%class.GrSurfaceDrawContext = type opaque
%"struct.SkCanvas::SaveLayerRec" = type <{ %struct.SkRect*, %class.SkPaint*, %class.SkImageFilter*, i32, [4 x i8] }>
%"class.skia::tracing_internals::ScopedTracer" = type { %"struct.skia::tracing_internals::ScopedTracer::Data"*, %"struct.skia::tracing_internals::ScopedTracer::Data" }
%"struct.skia::tracing_internals::ScopedTracer::Data" = type { i8*, i8*, i64 }
%class.SkEventTracer = type { i32 (...)** }
%class.SkTCopyOnFirstWrite = type { %class.SkPaint*, %class.SkTLazy }
%class.SkTLazy = type { [72 x i8], %class.SkPaint* }
%"struct.SkBaseDevice::CreateInfo" = type { %struct.SkImageInfo, i32, i32, i8, %class.SkRasterHandleAllocator* }
%class.SkImageFilter_Base = type <{ %class.SkImageFilter.base, [4 x i8], %class.SkAutoSTArray, i8, [3 x i8], %"class.SkImageFilter_Base::CropRect", i32, [4 x i8] }>
%class.SkImageFilter.base = type { %class.SkFlattenable.base }
%class.SkAutoSTArray = type { i32, %class.sk_sp.58*, [16 x i8] }
%"class.SkImageFilter_Base::CropRect" = type { %struct.SkRect, i32 }
%class.sk_sp.244 = type { %class.SkSpecialSurface* }
%class.SkSpecialSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, %struct.SkIRect, [4 x i8] }
%"class.skif::Context" = type { %"class.skif::Mapping", %"class.skif::LayerSpace", %class.SkImageFilterCache*, i32, %class.SkColorSpace*, %"class.skif::FilterResult" }
%"class.skif::FilterResult.246" = type { %class.sk_sp.74, %"class.skif::LayerSpace.245" }
%class.sk_sp.247 = type { %class.SkSurface* }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%class.SkShaderBase = type { %class.SkShader.base, %class.SkMatrix, [4 x i8] }
%class.SkShader.base = type { %class.SkFlattenable.base }
%class.sk_sp.248 = type { %class.SkVertices* }
%class.SkVertices = type <{ %class.SkNVRefCnt.249, i32, %struct.SkPoint*, i16*, %struct.SkPoint*, i32*, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkNVRefCnt.249 = type { %"struct.std::__1::atomic" }
%"struct.SkCanvas::Lattice" = type { i32*, i32*, i8*, i32, i32, %struct.SkIRect*, i32* }
%struct.SkRSXform = type { float, float, float, float }
%struct.SkDrawShadowRec = type opaque
%"class.SkDeque::Iter" = type { %"struct.SkDeque::Block"*, i8*, i64 }
%"class.std::__1::tuple.253" = type { %"struct.std::__1::__tuple_impl.254" }
%"struct.std::__1::__tuple_impl.254" = type { %"class.std::__1::__tuple_leaf.255", %"class.std::__1::__tuple_leaf.256" }
%"class.std::__1::__tuple_leaf.255" = type { %class.SkSpan.30 }
%"class.std::__1::__tuple_leaf.256" = type { %class.SkSpan.30 }
%"class.SkTextBlob::Iter" = type { %"class.SkTextBlob::RunRecord"* }
%"class.SkTextBlob::RunRecord" = type { %class.SkFont, i32, %struct.SkPoint, i32 }
%"struct.SkTextBlob::Iter::Run" = type { %class.SkTypeface*, i32, i16*, i32*, i32, i8* }
%class.SkDrawable = type opaque
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.97", [7 x i8] }>
%class.SkAutoCanvasMatrixPaint = type <{ %class.SkCanvas*, i32, [4 x i8] }>
%"class.SkPicture::AbortCallback" = type { i32 (...)** }
%"struct.SkRasterHandleAllocator::Rec" = type { void (i8*, i8*)*, i8*, i8*, i64, i8* }
%class.SkPaintFilterCanvas = type opaque

$_ZN16SkNoPixelsDevice19resetForNextPictureERK7SkIRect = comdat any

$_ZN8SkCanvas5MCRec8newLayerE5sk_spI12SkBaseDeviceEPK7SkPaintRK5SkM44 = comdat any

$_ZN12SkBaseDevice10clipShaderE5sk_spI8SkShaderE8SkClipOp = comdat any

$_ZN8SkCanvas20getSaveLayerStrategyERKNS_12SaveLayerRecE = comdat any

$_ZN8SkCanvas8willSaveEv = comdat any

$_ZN8SkCanvas14onDoSaveBehindEPK6SkRect = comdat any

$_ZN8SkCanvas11willRestoreEv = comdat any

$_ZN8SkCanvas10didRestoreEv = comdat any

$_ZN8SkCanvas9onMarkCTMEPKc = comdat any

$_ZN8SkCanvas11didConcat44ERK5SkM44 = comdat any

$_ZN8SkCanvas9didSetM44ERK5SkM44 = comdat any

$_ZN8SkCanvas12didTranslateEff = comdat any

$_ZN8SkCanvas8didScaleEff = comdat any

$_ZNK8SkCanvas36internal_private_asPaintFilterCanvasEv = comdat any

$_ZN14SkNoDrawCanvasD0Ev = comdat any

$_ZN14SkNoDrawCanvas11onDrawPaintERK7SkPaint = comdat any

$_ZN14SkNoDrawCanvas12onDrawBehindERK7SkPaint = comdat any

$_ZN14SkNoDrawCanvas10onDrawRectERK6SkRectRK7SkPaint = comdat any

$_ZN14SkNoDrawCanvas11onDrawRRectERK7SkRRectRK7SkPaint = comdat any

$_ZN14SkNoDrawCanvas12onDrawDRRectERK7SkRRectS2_RK7SkPaint = comdat any

$_ZN14SkNoDrawCanvas10onDrawOvalERK6SkRectRK7SkPaint = comdat any

$_ZN14SkNoDrawCanvas9onDrawArcERK6SkRectffbRK7SkPaint = comdat any

$_ZN14SkNoDrawCanvas10onDrawPathERK6SkPathRK7SkPaint = comdat any

$_ZN14SkNoDrawCanvas12onDrawRegionERK8SkRegionRK7SkPaint = comdat any

$_ZN14SkNoDrawCanvas14onDrawTextBlobEPK10SkTextBlobffRK7SkPaint = comdat any

$_ZN14SkNoDrawCanvas11onDrawPatchEPK7SkPointPKjS2_11SkBlendModeRK7SkPaint = comdat any

$_ZN14SkNoDrawCanvas12onDrawPointsEN8SkCanvas9PointModeEmPK7SkPointRK7SkPaint = comdat any

$_ZN14SkNoDrawCanvas12onDrawImage2EPK7SkImageffRK17SkSamplingOptionsPK7SkPaint = comdat any

$_ZN14SkNoDrawCanvas16onDrawImageRect2EPK7SkImageRK6SkRectS5_RK17SkSamplingOptionsPK7SkPaintN8SkCanvas17SrcRectConstraintE = comdat any

$_ZN14SkNoDrawCanvas19onDrawImageLattice2EPK7SkImageRKN8SkCanvas7LatticeERK6SkRect12SkFilterModePK7SkPaint = comdat any

$_ZN14SkNoDrawCanvas12onDrawAtlas2EPK7SkImagePK9SkRSXformPK6SkRectPKji11SkBlendModeRK17SkSamplingOptionsS8_PK7SkPaint = comdat any

$_ZN14SkNoDrawCanvas21onDrawEdgeAAImageSet2EPKN8SkCanvas13ImageSetEntryEiPK7SkPointPK8SkMatrixRK17SkSamplingOptionsPK7SkPaintNS0_17SrcRectConstraintE = comdat any

$_ZN14SkNoDrawCanvas20onDrawVerticesObjectEPK10SkVertices11SkBlendModeRK7SkPaint = comdat any

$_ZN14SkNoDrawCanvas16onDrawAnnotationERK6SkRectPKcP6SkData = comdat any

$_ZN14SkNoDrawCanvas15onDrawShadowRecERK6SkPathRK15SkDrawShadowRec = comdat any

$_ZN14SkNoDrawCanvas14onDrawDrawableEP10SkDrawablePK8SkMatrix = comdat any

$_ZN14SkNoDrawCanvas13onDrawPictureEPK9SkPicturePK8SkMatrixPK7SkPaint = comdat any

$_ZN14SkNoDrawCanvas16onDrawEdgeAAQuadERK6SkRectPK7SkPointN8SkCanvas11QuadAAFlagsERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode = comdat any

$_ZN8SkTArrayIN16SkNoPixelsDevice9ClipStateELb0EE12checkReallocEiNS2_11ReallocTypeE = comdat any

$_ZN23SkCanvasVirtualEnforcerI8SkCanvasED0Ev = comdat any

$_ZN23SkCanvasVirtualEnforcerI8SkCanvasE12onDrawBehindERK7SkPaint = comdat any

$_ZN16SkNoPixelsDeviceC2ERK7SkIRectRK14SkSurfaceProps5sk_spI12SkColorSpaceE = comdat any

$_ZN13SkMarkerStackD2Ev = comdat any

$_ZN13SkMarkerStackD0Ev = comdat any

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNKSt3__114default_deleteI17SkGlyphRunBuilderEclEPS1_ = comdat any

$_ZTV23SkCanvasVirtualEnforcerI8SkCanvasE = comdat any

$_ZTV13SkMarkerStack = comdat any

@_ZTV8SkCanvas = hidden unnamed_addr constant { [56 x i8*] } { [56 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkCanvas*)* @_ZN8SkCanvasD2Ev to i8*), i8* bitcast (void (%class.SkCanvas*)* @_ZN8SkCanvasD0Ev to i8*), i8* bitcast (i64 (%class.SkCanvas*)* @_ZNK8SkCanvas16getBaseLayerSizeEv to i8*), i8* bitcast (%class.GrRecordingContext* (%class.SkCanvas*)* @_ZN8SkCanvas16recordingContextEv to i8*), i8* bitcast (i1 (%class.SkCanvas*)* @_ZNK8SkCanvas11isClipEmptyEv to i8*), i8* bitcast (i1 (%class.SkCanvas*)* @_ZNK8SkCanvas10isClipRectEv to i8*), i8* bitcast (void (%class.sk_sp.247*, %class.SkCanvas*, %struct.SkImageInfo*, %class.SkSurfaceProps*)* @_ZN8SkCanvas12onNewSurfaceERK11SkImageInfoRK14SkSurfaceProps to i8*), i8* bitcast (i1 (%class.SkCanvas*, %class.SkPixmap*)* @_ZN8SkCanvas12onPeekPixelsEP8SkPixmap to i8*), i8* bitcast (i1 (%class.SkCanvas*, %class.SkPixmap*)* @_ZN8SkCanvas22onAccessTopLayerPixelsEP8SkPixmap to i8*), i8* bitcast (void (%struct.SkImageInfo*, %class.SkCanvas*)* @_ZNK8SkCanvas11onImageInfoEv to i8*), i8* bitcast (i1 (%class.SkCanvas*, %class.SkSurfaceProps*)* @_ZNK8SkCanvas10onGetPropsEP14SkSurfaceProps to i8*), i8* bitcast (void (%class.SkCanvas*)* @_ZN8SkCanvas7onFlushEv to i8*), i8* bitcast (void (%class.SkCanvas*)* @_ZN8SkCanvas8willSaveEv to i8*), i8* bitcast (i32 (%class.SkCanvas*, %"struct.SkCanvas::SaveLayerRec"*)* @_ZN8SkCanvas20getSaveLayerStrategyERKNS_12SaveLayerRecE to i8*), i8* bitcast (i1 (%class.SkCanvas*, %struct.SkRect*)* @_ZN8SkCanvas14onDoSaveBehindEPK6SkRect to i8*), i8* bitcast (void (%class.SkCanvas*)* @_ZN8SkCanvas11willRestoreEv to i8*), i8* bitcast (void (%class.SkCanvas*)* @_ZN8SkCanvas10didRestoreEv to i8*), i8* bitcast (void (%class.SkCanvas*, i8*)* @_ZN8SkCanvas9onMarkCTMEPKc to i8*), i8* bitcast (void (%class.SkCanvas*, %class.SkM44*)* @_ZN8SkCanvas11didConcat44ERK5SkM44 to i8*), i8* bitcast (void (%class.SkCanvas*, %class.SkM44*)* @_ZN8SkCanvas9didSetM44ERK5SkM44 to i8*), i8* bitcast (void (%class.SkCanvas*, float, float)* @_ZN8SkCanvas12didTranslateEff to i8*), i8* bitcast (void (%class.SkCanvas*, float, float)* @_ZN8SkCanvas8didScaleEff to i8*), i8* bitcast (void (%class.SkCanvas*, %class.SkPaint*)* @_ZN8SkCanvas11onDrawPaintERK7SkPaint to i8*), i8* bitcast (void (%class.SkCanvas*, %class.SkPaint*)* @_ZN8SkCanvas12onDrawBehindERK7SkPaint to i8*), i8* bitcast (void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)* @_ZN8SkCanvas10onDrawRectERK6SkRectRK7SkPaint to i8*), i8* bitcast (void (%class.SkCanvas*, %class.SkRRect*, %class.SkPaint*)* @_ZN8SkCanvas11onDrawRRectERK7SkRRectRK7SkPaint to i8*), i8* bitcast (void (%class.SkCanvas*, %class.SkRRect*, %class.SkRRect*, %class.SkPaint*)* @_ZN8SkCanvas12onDrawDRRectERK7SkRRectS2_RK7SkPaint to i8*), i8* bitcast (void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)* @_ZN8SkCanvas10onDrawOvalERK6SkRectRK7SkPaint to i8*), i8* bitcast (void (%class.SkCanvas*, %struct.SkRect*, float, float, i1, %class.SkPaint*)* @_ZN8SkCanvas9onDrawArcERK6SkRectffbRK7SkPaint to i8*), i8* bitcast (void (%class.SkCanvas*, %class.SkPath*, %class.SkPaint*)* @_ZN8SkCanvas10onDrawPathERK6SkPathRK7SkPaint to i8*), i8* bitcast (void (%class.SkCanvas*, %class.SkRegion*, %class.SkPaint*)* @_ZN8SkCanvas12onDrawRegionERK8SkRegionRK7SkPaint to i8*), i8* bitcast (void (%class.SkCanvas*, %class.SkTextBlob*, float, float, %class.SkPaint*)* @_ZN8SkCanvas14onDrawTextBlobEPK10SkTextBlobffRK7SkPaint to i8*), i8* bitcast (void (%class.SkCanvas*, %class.SkGlyphRunList*, %class.SkPaint*)* @_ZN8SkCanvas18onDrawGlyphRunListERK14SkGlyphRunListRK7SkPaint to i8*), i8* bitcast (void (%class.SkCanvas*, %struct.SkPoint*, i32*, %struct.SkPoint*, i32, %class.SkPaint*)* @_ZN8SkCanvas11onDrawPatchEPK7SkPointPKjS2_11SkBlendModeRK7SkPaint to i8*), i8* bitcast (void (%class.SkCanvas*, i32, i64, %struct.SkPoint*, %class.SkPaint*)* @_ZN8SkCanvas12onDrawPointsENS_9PointModeEmPK7SkPointRK7SkPaint to i8*), i8* bitcast (void (%class.SkCanvas*, %class.SkImage*, float, float, %struct.SkSamplingOptions*, %class.SkPaint*)* @_ZN8SkCanvas12onDrawImage2EPK7SkImageffRK17SkSamplingOptionsPK7SkPaint to i8*), i8* bitcast (void (%class.SkCanvas*, %class.SkImage*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)* @_ZN8SkCanvas16onDrawImageRect2EPK7SkImageRK6SkRectS5_RK17SkSamplingOptionsPK7SkPaintNS_17SrcRectConstraintE to i8*), i8* bitcast (void (%class.SkCanvas*, %class.SkImage*, %"struct.SkCanvas::Lattice"*, %struct.SkRect*, i32, %class.SkPaint*)* @_ZN8SkCanvas19onDrawImageLattice2EPK7SkImageRKNS_7LatticeERK6SkRect12SkFilterModePK7SkPaint to i8*), i8* bitcast (void (%class.SkCanvas*, %class.SkImage*, %struct.SkRSXform*, %struct.SkRect*, i32*, i32, i32, %struct.SkSamplingOptions*, %struct.SkRect*, %class.SkPaint*)* @_ZN8SkCanvas12onDrawAtlas2EPK7SkImagePK9SkRSXformPK6SkRectPKji11SkBlendModeRK17SkSamplingOptionsS8_PK7SkPaint to i8*), i8* bitcast (void (%class.SkCanvas*, %"struct.SkCanvas::ImageSetEntry"*, i32, %struct.SkPoint*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)* @_ZN8SkCanvas21onDrawEdgeAAImageSet2EPKNS_13ImageSetEntryEiPK7SkPointPK8SkMatrixRK17SkSamplingOptionsPK7SkPaintNS_17SrcRectConstraintE to i8*), i8* bitcast (void (%class.SkCanvas*, %class.SkVertices*, i32, %class.SkPaint*)* @_ZN8SkCanvas20onDrawVerticesObjectEPK10SkVertices11SkBlendModeRK7SkPaint to i8*), i8* bitcast (void (%class.SkCanvas*, %struct.SkRect*, i8*, %class.SkData*)* @_ZN8SkCanvas16onDrawAnnotationERK6SkRectPKcP6SkData to i8*), i8* bitcast (void (%class.SkCanvas*, %class.SkPath*, %struct.SkDrawShadowRec*)* @_ZN8SkCanvas15onDrawShadowRecERK6SkPathRK15SkDrawShadowRec to i8*), i8* bitcast (void (%class.SkCanvas*, %class.SkDrawable*, %class.SkMatrix*)* @_ZN8SkCanvas14onDrawDrawableEP10SkDrawablePK8SkMatrix to i8*), i8* bitcast (void (%class.SkCanvas*, %class.SkPicture*, %class.SkMatrix*, %class.SkPaint*)* @_ZN8SkCanvas13onDrawPictureEPK9SkPicturePK8SkMatrixPK7SkPaint to i8*), i8* bitcast (void (%class.SkCanvas*, %struct.SkRect*, %struct.SkPoint*, i32, %struct.SkRGBA4f*, i32)* @_ZN8SkCanvas16onDrawEdgeAAQuadERK6SkRectPK7SkPointNS_11QuadAAFlagsERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode to i8*), i8* bitcast (void (%class.SkCanvas*, %struct.SkRect*, i32, i32)* @_ZN8SkCanvas10onClipRectERK6SkRect8SkClipOpNS_13ClipEdgeStyleE to i8*), i8* bitcast (void (%class.SkCanvas*, %class.SkRRect*, i32, i32)* @_ZN8SkCanvas11onClipRRectERK7SkRRect8SkClipOpNS_13ClipEdgeStyleE to i8*), i8* bitcast (void (%class.SkCanvas*, %class.SkPath*, i32, i32)* @_ZN8SkCanvas10onClipPathERK6SkPath8SkClipOpNS_13ClipEdgeStyleE to i8*), i8* bitcast (void (%class.SkCanvas*, %class.sk_sp.55*, i32)* @_ZN8SkCanvas12onClipShaderE5sk_spI8SkShaderE8SkClipOp to i8*), i8* bitcast (void (%class.SkCanvas*, %class.SkRegion*, i32)* @_ZN8SkCanvas12onClipRegionERK8SkRegion8SkClipOp to i8*), i8* bitcast (void (%class.SkCanvas*)* @_ZN8SkCanvas9onDiscardEv to i8*), i8* bitcast (%class.GrSurfaceDrawContext* (%class.SkCanvas*)* @_ZN8SkCanvas27topDeviceSurfaceDrawContextEv to i8*), i8* bitcast (%class.SkPaintFilterCanvas* (%class.SkCanvas*)* @_ZNK8SkCanvas36internal_private_asPaintFilterCanvasEv to i8*)] }, align 8
@.str = private unnamed_addr constant [25 x i8] c"disabled-by-default-skia\00", align 1
@__PRETTY_FUNCTION__._ZN8SkCanvas9saveLayerERKNS_12SaveLayerRecE = private unnamed_addr constant [56 x i8] c"int SkCanvas::saveLayer(const SkCanvas::SaveLayerRec &)\00", align 1
@.ref.tmp = private constant %struct.SkRect zeroinitializer, align 4
@__const._ZN8SkCanvas20DrawDeviceWithFilterEP12SkBaseDevicePK13SkImageFilterS1_RK8SkIPointRK8SkMatrix.ctx = private unnamed_addr constant { %"class.skif::Mapping", %"class.skif::LayerSpace", %class.SkImageFilterCache*, i32, [4 x i8], %class.SkColorSpace*, %"class.skif::FilterResult" } { %"class.skif::Mapping" { %class.SkMatrix { [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766 }, %class.SkMatrix { [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766 } }, %"class.skif::LayerSpace" { %struct.SkIRect { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766 } }, %class.SkImageFilterCache* inttoptr (i64 -6148914691236517206 to %class.SkImageFilterCache*), i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %class.SkColorSpace* inttoptr (i64 -6148914691236517206 to %class.SkColorSpace*), %"class.skif::FilterResult" { %class.sk_sp.74 { %class.SkSpecialImage* inttoptr (i64 -6148914691236517206 to %class.SkSpecialImage*) }, %"class.skif::LayerSpace.245" { %struct.SkIPoint { i32 -1431655766, i32 -1431655766 } } } }, align 8
@__PRETTY_FUNCTION__._ZN8SkCanvas17internalSaveLayerERKNS_12SaveLayerRecENS_17SaveLayerStrategyE = private unnamed_addr constant [94 x i8] c"void SkCanvas::internalSaveLayer(const SkCanvas::SaveLayerRec &, SkCanvas::SaveLayerStrategy)\00", align 1
@_ZN6SkOpts7hash_fnE = external local_unnamed_addr global i32 (i8*, i64, i32)*, align 8
@.ref.tmp.2 = private constant %struct.SkRect zeroinitializer, align 4
@__PRETTY_FUNCTION__._ZN8SkCanvas10drawDRRectERK7SkRRectS2_RK7SkPaint = private unnamed_addr constant [77 x i8] c"void SkCanvas::drawDRRect(const SkRRect &, const SkRRect &, const SkPaint &)\00", align 1
@__PRETTY_FUNCTION__._ZN8SkCanvas9drawPaintERK7SkPaint = private unnamed_addr constant [42 x i8] c"void SkCanvas::drawPaint(const SkPaint &)\00", align 1
@__PRETTY_FUNCTION__._ZN8SkCanvas8drawRectERK6SkRectRK7SkPaint = private unnamed_addr constant [57 x i8] c"void SkCanvas::drawRect(const SkRect &, const SkPaint &)\00", align 1
@__PRETTY_FUNCTION__._ZN8SkCanvas23drawClippedToSaveBehindERK7SkPaint = private unnamed_addr constant [56 x i8] c"void SkCanvas::drawClippedToSaveBehind(const SkPaint &)\00", align 1
@__PRETTY_FUNCTION__._ZN8SkCanvas10drawRegionERK8SkRegionRK7SkPaint = private unnamed_addr constant [61 x i8] c"void SkCanvas::drawRegion(const SkRegion &, const SkPaint &)\00", align 1
@__PRETTY_FUNCTION__._ZN8SkCanvas8drawOvalERK6SkRectRK7SkPaint = private unnamed_addr constant [57 x i8] c"void SkCanvas::drawOval(const SkRect &, const SkPaint &)\00", align 1
@__PRETTY_FUNCTION__._ZN8SkCanvas9drawRRectERK7SkRRectRK7SkPaint = private unnamed_addr constant [59 x i8] c"void SkCanvas::drawRRect(const SkRRect &, const SkPaint &)\00", align 1
@__PRETTY_FUNCTION__._ZN8SkCanvas10drawPointsENS_9PointModeEmPK7SkPointRK7SkPaint = private unnamed_addr constant [89 x i8] c"void SkCanvas::drawPoints(SkCanvas::PointMode, size_t, const SkPoint *, const SkPaint &)\00", align 1
@__PRETTY_FUNCTION__._ZN8SkCanvas12drawVerticesEPK10SkVertices11SkBlendModeRK7SkPaint = private unnamed_addr constant [78 x i8] c"void SkCanvas::drawVertices(const SkVertices *, SkBlendMode, const SkPaint &)\00", align 1
@__PRETTY_FUNCTION__._ZN8SkCanvas8drawPathERK6SkPathRK7SkPaint = private unnamed_addr constant [57 x i8] c"void SkCanvas::drawPath(const SkPath &, const SkPaint &)\00", align 1
@__PRETTY_FUNCTION__._ZN8SkCanvas16drawImageLatticeEPK7SkImageRKNS_7LatticeERK6SkRect12SkFilterModePK7SkPaint = private unnamed_addr constant [123 x i8] c"void SkCanvas::drawImageLattice(const SkImage *, const SkCanvas::Lattice &, const SkRect &, SkFilterMode, const SkPaint *)\00", align 1
@__PRETTY_FUNCTION__._ZN8SkCanvas9drawAtlasEPK7SkImagePK9SkRSXformPK6SkRectPKji11SkBlendModeRK17SkSamplingOptionsS8_PK7SkPaint = private unnamed_addr constant [172 x i8] c"void SkCanvas::drawAtlas(const SkImage *, const SkRSXform *, const SkRect *, const SkColor *, int, SkBlendMode, const SkSamplingOptions &, const SkRect *, const SkPaint *)\00", align 1
@__PRETTY_FUNCTION__._ZN8SkCanvas14drawAnnotationERK6SkRectPKcP6SkData = private unnamed_addr constant [70 x i8] c"void SkCanvas::drawAnnotation(const SkRect &, const char *, SkData *)\00", align 1
@__PRETTY_FUNCTION__._ZN8SkCanvas23private_draw_shadow_recERK6SkPathRK15SkDrawShadowRec = private unnamed_addr constant [80 x i8] c"void SkCanvas::private_draw_shadow_rec(const SkPath &, const SkDrawShadowRec &)\00", align 1
@__PRETTY_FUNCTION__._ZN8SkCanvas27experimental_DrawEdgeAAQuadERK6SkRectPK7SkPointNS_11QuadAAFlagsERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode = private unnamed_addr constant [131 x i8] c"void SkCanvas::experimental_DrawEdgeAAQuad(const SkRect &, const SkPoint *, SkCanvas::QuadAAFlags, const SkColor4f &, SkBlendMode)\00", align 1
@__PRETTY_FUNCTION__._ZN8SkCanvas31experimental_DrawEdgeAAImageSetEPKNS_13ImageSetEntryEiPK7SkPointPK8SkMatrixRK17SkSamplingOptionsPK7SkPaintNS_17SrcRectConstraintE = private unnamed_addr constant [193 x i8] c"void SkCanvas::experimental_DrawEdgeAAImageSet(const SkCanvas::ImageSetEntry *, int, const SkPoint *, const SkMatrix *, const SkSamplingOptions &, const SkPaint *, SkCanvas::SrcRectConstraint)\00", align 1
@__const._ZN8SkCanvas12onDrawImage2EPK7SkImageffRK17SkSamplingOptionsPK7SkPaint.mapping = private unnamed_addr constant %"class.skif::Mapping" { %class.SkMatrix { [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766 }, %class.SkMatrix { [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766 } }, align 4
@__PRETTY_FUNCTION__._ZN8SkCanvas9drawImageEPK7SkImageffRK17SkSamplingOptionsPK7SkPaint = private unnamed_addr constant [106 x i8] c"void SkCanvas::drawImage(const SkImage *, SkScalar, SkScalar, const SkSamplingOptions &, const SkPaint *)\00", align 1
@__PRETTY_FUNCTION__._ZN8SkCanvas14drawSimpleTextEPKvm14SkTextEncodingffRK6SkFontRK7SkPaint = private unnamed_addr constant [121 x i8] c"void SkCanvas::drawSimpleText(const void *, size_t, SkTextEncoding, SkScalar, SkScalar, const SkFont &, const SkPaint &)\00", align 1
@__const._ZN8SkCanvas10drawGlyphsEiPKtPK9SkRSXform7SkPointRK6SkFontRK7SkPaint.glyphRun = private unnamed_addr constant %class.SkGlyphRun { %class.SkZip { %"class.std::__1::tuple" { %"struct.std::__1::__tuple_impl" { %"class.std::__1::__tuple_leaf" { i16* inttoptr (i64 -6148914691236517206 to i16*) }, %"class.std::__1::__tuple_leaf.28" { %struct.SkPoint* inttoptr (i64 -6148914691236517206 to %struct.SkPoint*) } } }, i64 -6148914691236517206 }, %class.SkSpan { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206 }, %class.SkSpan.29 { i32* inttoptr (i64 -6148914691236517206 to i32*), i64 -6148914691236517206 }, %class.SkSpan.30 { %struct.SkPoint* inttoptr (i64 -6148914691236517206 to %struct.SkPoint*), i64 -6148914691236517206 }, %class.SkFont <{ %class.sk_sp.31 { %class.SkTypeface* inttoptr (i64 -6148914691236517206 to %class.SkTypeface*) }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i8 -86, i8 -86, i8 -86, i8 -86 }> }, align 8
@__PRETTY_FUNCTION__._ZN8SkCanvas12drawTextBlobEPK10SkTextBlobffRK7SkPaint = private unnamed_addr constant [85 x i8] c"void SkCanvas::drawTextBlob(const SkTextBlob *, SkScalar, SkScalar, const SkPaint &)\00", align 1
@__PRETTY_FUNCTION__._ZN8SkCanvas9drawPatchEPK7SkPointPKjS2_11SkBlendModeRK7SkPaint = private unnamed_addr constant [106 x i8] c"void SkCanvas::drawPatch(const SkPoint *, const SkColor *, const SkPoint *, SkBlendMode, const SkPaint &)\00", align 1
@__PRETTY_FUNCTION__._ZN8SkCanvas12drawDrawableEP10SkDrawableff = private unnamed_addr constant [62 x i8] c"void SkCanvas::drawDrawable(SkDrawable *, SkScalar, SkScalar)\00", align 1
@__PRETTY_FUNCTION__._ZN8SkCanvas12drawDrawableEP10SkDrawablePK8SkMatrix = private unnamed_addr constant [60 x i8] c"void SkCanvas::drawDrawable(SkDrawable *, const SkMatrix *)\00", align 1
@__const._ZN8SkCanvas21onDrawEdgeAAImageSet2EPKNS_13ImageSetEntryEiPK7SkPointPK8SkMatrixRK17SkSamplingOptionsPK7SkPaintNS_17SrcRectConstraintE.layer = private unnamed_addr constant %class.AutoLayerForImageFilter <{ %class.SkPaint <{ %class.sk_sp.54 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, %class.sk_sp.55 { %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*) }, %class.sk_sp.56 { %class.SkMaskFilter* inttoptr (i64 -6148914691236517206 to %class.SkMaskFilter*) }, %class.sk_sp.57 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %class.sk_sp.58 { %class.SkImageFilter* inttoptr (i64 -6148914691236517206 to %class.SkImageFilter*) }, %struct.SkRGBA4f { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %union.anon { %struct.anon { i32 -1431655766 } }, [4 x i8] c"\AA\AA\AA\AA" }>, %class.SkCanvas* inttoptr (i64 -6148914691236517206 to %class.SkCanvas*), i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" }>, align 8
@__PRETTY_FUNCTION__._ZN8SkCanvas7drawArcERK6SkRectffbRK7SkPaint = private unnamed_addr constant [82 x i8] c"void SkCanvas::drawArc(const SkRect &, SkScalar, SkScalar, bool, const SkPaint &)\00", align 1
@__PRETTY_FUNCTION__._ZN8SkCanvas11drawPictureEPK9SkPicturePK8SkMatrixPK7SkPaint = private unnamed_addr constant [81 x i8] c"void SkCanvas::drawPicture(const SkPicture *, const SkMatrix *, const SkPaint *)\00", align 1
@_ZTV14SkNoDrawCanvas = hidden unnamed_addr constant { [56 x i8*] } { [56 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkCanvas*)* @_ZN8SkCanvasD2Ev to i8*), i8* bitcast (void (%class.SkNoDrawCanvas*)* @_ZN14SkNoDrawCanvasD0Ev to i8*), i8* bitcast (i64 (%class.SkCanvas*)* @_ZNK8SkCanvas16getBaseLayerSizeEv to i8*), i8* bitcast (%class.GrRecordingContext* (%class.SkCanvas*)* @_ZN8SkCanvas16recordingContextEv to i8*), i8* bitcast (i1 (%class.SkCanvas*)* @_ZNK8SkCanvas11isClipEmptyEv to i8*), i8* bitcast (i1 (%class.SkCanvas*)* @_ZNK8SkCanvas10isClipRectEv to i8*), i8* bitcast (void (%class.sk_sp.247*, %class.SkCanvas*, %struct.SkImageInfo*, %class.SkSurfaceProps*)* @_ZN8SkCanvas12onNewSurfaceERK11SkImageInfoRK14SkSurfaceProps to i8*), i8* bitcast (i1 (%class.SkCanvas*, %class.SkPixmap*)* @_ZN8SkCanvas12onPeekPixelsEP8SkPixmap to i8*), i8* bitcast (i1 (%class.SkCanvas*, %class.SkPixmap*)* @_ZN8SkCanvas22onAccessTopLayerPixelsEP8SkPixmap to i8*), i8* bitcast (void (%struct.SkImageInfo*, %class.SkCanvas*)* @_ZNK8SkCanvas11onImageInfoEv to i8*), i8* bitcast (i1 (%class.SkCanvas*, %class.SkSurfaceProps*)* @_ZNK8SkCanvas10onGetPropsEP14SkSurfaceProps to i8*), i8* bitcast (void (%class.SkCanvas*)* @_ZN8SkCanvas7onFlushEv to i8*), i8* bitcast (void (%class.SkCanvas*)* @_ZN8SkCanvas8willSaveEv to i8*), i8* bitcast (i32 (%class.SkNoDrawCanvas*, %"struct.SkCanvas::SaveLayerRec"*)* @_ZN14SkNoDrawCanvas20getSaveLayerStrategyERKN8SkCanvas12SaveLayerRecE to i8*), i8* bitcast (i1 (%class.SkNoDrawCanvas*, %struct.SkRect*)* @_ZN14SkNoDrawCanvas14onDoSaveBehindEPK6SkRect to i8*), i8* bitcast (void (%class.SkCanvas*)* @_ZN8SkCanvas11willRestoreEv to i8*), i8* bitcast (void (%class.SkCanvas*)* @_ZN8SkCanvas10didRestoreEv to i8*), i8* bitcast (void (%class.SkCanvas*, i8*)* @_ZN8SkCanvas9onMarkCTMEPKc to i8*), i8* bitcast (void (%class.SkCanvas*, %class.SkM44*)* @_ZN8SkCanvas11didConcat44ERK5SkM44 to i8*), i8* bitcast (void (%class.SkCanvas*, %class.SkM44*)* @_ZN8SkCanvas9didSetM44ERK5SkM44 to i8*), i8* bitcast (void (%class.SkCanvas*, float, float)* @_ZN8SkCanvas12didTranslateEff to i8*), i8* bitcast (void (%class.SkCanvas*, float, float)* @_ZN8SkCanvas8didScaleEff to i8*), i8* bitcast (void (%class.SkNoDrawCanvas*, %class.SkPaint*)* @_ZN14SkNoDrawCanvas11onDrawPaintERK7SkPaint to i8*), i8* bitcast (void (%class.SkNoDrawCanvas*, %class.SkPaint*)* @_ZN14SkNoDrawCanvas12onDrawBehindERK7SkPaint to i8*), i8* bitcast (void (%class.SkNoDrawCanvas*, %struct.SkRect*, %class.SkPaint*)* @_ZN14SkNoDrawCanvas10onDrawRectERK6SkRectRK7SkPaint to i8*), i8* bitcast (void (%class.SkNoDrawCanvas*, %class.SkRRect*, %class.SkPaint*)* @_ZN14SkNoDrawCanvas11onDrawRRectERK7SkRRectRK7SkPaint to i8*), i8* bitcast (void (%class.SkNoDrawCanvas*, %class.SkRRect*, %class.SkRRect*, %class.SkPaint*)* @_ZN14SkNoDrawCanvas12onDrawDRRectERK7SkRRectS2_RK7SkPaint to i8*), i8* bitcast (void (%class.SkNoDrawCanvas*, %struct.SkRect*, %class.SkPaint*)* @_ZN14SkNoDrawCanvas10onDrawOvalERK6SkRectRK7SkPaint to i8*), i8* bitcast (void (%class.SkNoDrawCanvas*, %struct.SkRect*, float, float, i1, %class.SkPaint*)* @_ZN14SkNoDrawCanvas9onDrawArcERK6SkRectffbRK7SkPaint to i8*), i8* bitcast (void (%class.SkNoDrawCanvas*, %class.SkPath*, %class.SkPaint*)* @_ZN14SkNoDrawCanvas10onDrawPathERK6SkPathRK7SkPaint to i8*), i8* bitcast (void (%class.SkNoDrawCanvas*, %class.SkRegion*, %class.SkPaint*)* @_ZN14SkNoDrawCanvas12onDrawRegionERK8SkRegionRK7SkPaint to i8*), i8* bitcast (void (%class.SkNoDrawCanvas*, %class.SkTextBlob*, float, float, %class.SkPaint*)* @_ZN14SkNoDrawCanvas14onDrawTextBlobEPK10SkTextBlobffRK7SkPaint to i8*), i8* bitcast (void (%class.SkCanvas*, %class.SkGlyphRunList*, %class.SkPaint*)* @_ZN8SkCanvas18onDrawGlyphRunListERK14SkGlyphRunListRK7SkPaint to i8*), i8* bitcast (void (%class.SkNoDrawCanvas*, %struct.SkPoint*, i32*, %struct.SkPoint*, i32, %class.SkPaint*)* @_ZN14SkNoDrawCanvas11onDrawPatchEPK7SkPointPKjS2_11SkBlendModeRK7SkPaint to i8*), i8* bitcast (void (%class.SkNoDrawCanvas*, i32, i64, %struct.SkPoint*, %class.SkPaint*)* @_ZN14SkNoDrawCanvas12onDrawPointsEN8SkCanvas9PointModeEmPK7SkPointRK7SkPaint to i8*), i8* bitcast (void (%class.SkNoDrawCanvas*, %class.SkImage*, float, float, %struct.SkSamplingOptions*, %class.SkPaint*)* @_ZN14SkNoDrawCanvas12onDrawImage2EPK7SkImageffRK17SkSamplingOptionsPK7SkPaint to i8*), i8* bitcast (void (%class.SkNoDrawCanvas*, %class.SkImage*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)* @_ZN14SkNoDrawCanvas16onDrawImageRect2EPK7SkImageRK6SkRectS5_RK17SkSamplingOptionsPK7SkPaintN8SkCanvas17SrcRectConstraintE to i8*), i8* bitcast (void (%class.SkNoDrawCanvas*, %class.SkImage*, %"struct.SkCanvas::Lattice"*, %struct.SkRect*, i32, %class.SkPaint*)* @_ZN14SkNoDrawCanvas19onDrawImageLattice2EPK7SkImageRKN8SkCanvas7LatticeERK6SkRect12SkFilterModePK7SkPaint to i8*), i8* bitcast (void (%class.SkNoDrawCanvas*, %class.SkImage*, %struct.SkRSXform*, %struct.SkRect*, i32*, i32, i32, %struct.SkSamplingOptions*, %struct.SkRect*, %class.SkPaint*)* @_ZN14SkNoDrawCanvas12onDrawAtlas2EPK7SkImagePK9SkRSXformPK6SkRectPKji11SkBlendModeRK17SkSamplingOptionsS8_PK7SkPaint to i8*), i8* bitcast (void (%class.SkNoDrawCanvas*, %"struct.SkCanvas::ImageSetEntry"*, i32, %struct.SkPoint*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)* @_ZN14SkNoDrawCanvas21onDrawEdgeAAImageSet2EPKN8SkCanvas13ImageSetEntryEiPK7SkPointPK8SkMatrixRK17SkSamplingOptionsPK7SkPaintNS0_17SrcRectConstraintE to i8*), i8* bitcast (void (%class.SkNoDrawCanvas*, %class.SkVertices*, i32, %class.SkPaint*)* @_ZN14SkNoDrawCanvas20onDrawVerticesObjectEPK10SkVertices11SkBlendModeRK7SkPaint to i8*), i8* bitcast (void (%class.SkNoDrawCanvas*, %struct.SkRect*, i8*, %class.SkData*)* @_ZN14SkNoDrawCanvas16onDrawAnnotationERK6SkRectPKcP6SkData to i8*), i8* bitcast (void (%class.SkNoDrawCanvas*, %class.SkPath*, %struct.SkDrawShadowRec*)* @_ZN14SkNoDrawCanvas15onDrawShadowRecERK6SkPathRK15SkDrawShadowRec to i8*), i8* bitcast (void (%class.SkNoDrawCanvas*, %class.SkDrawable*, %class.SkMatrix*)* @_ZN14SkNoDrawCanvas14onDrawDrawableEP10SkDrawablePK8SkMatrix to i8*), i8* bitcast (void (%class.SkNoDrawCanvas*, %class.SkPicture*, %class.SkMatrix*, %class.SkPaint*)* @_ZN14SkNoDrawCanvas13onDrawPictureEPK9SkPicturePK8SkMatrixPK7SkPaint to i8*), i8* bitcast (void (%class.SkNoDrawCanvas*, %struct.SkRect*, %struct.SkPoint*, i32, %struct.SkRGBA4f*, i32)* @_ZN14SkNoDrawCanvas16onDrawEdgeAAQuadERK6SkRectPK7SkPointN8SkCanvas11QuadAAFlagsERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode to i8*), i8* bitcast (void (%class.SkCanvas*, %struct.SkRect*, i32, i32)* @_ZN8SkCanvas10onClipRectERK6SkRect8SkClipOpNS_13ClipEdgeStyleE to i8*), i8* bitcast (void (%class.SkCanvas*, %class.SkRRect*, i32, i32)* @_ZN8SkCanvas11onClipRRectERK7SkRRect8SkClipOpNS_13ClipEdgeStyleE to i8*), i8* bitcast (void (%class.SkCanvas*, %class.SkPath*, i32, i32)* @_ZN8SkCanvas10onClipPathERK6SkPath8SkClipOpNS_13ClipEdgeStyleE to i8*), i8* bitcast (void (%class.SkCanvas*, %class.sk_sp.55*, i32)* @_ZN8SkCanvas12onClipShaderE5sk_spI8SkShaderE8SkClipOp to i8*), i8* bitcast (void (%class.SkCanvas*, %class.SkRegion*, i32)* @_ZN8SkCanvas12onClipRegionERK8SkRegion8SkClipOp to i8*), i8* bitcast (void (%class.SkCanvas*)* @_ZN8SkCanvas9onDiscardEv to i8*), i8* bitcast (%class.GrSurfaceDrawContext* (%class.SkCanvas*)* @_ZN8SkCanvas27topDeviceSurfaceDrawContextEv to i8*), i8* bitcast (%class.SkPaintFilterCanvas* (%class.SkCanvas*)* @_ZNK8SkCanvas36internal_private_asPaintFilterCanvasEv to i8*)] }, align 8
@.ref.tmp.3 = private unnamed_addr constant %class.SkM44 { [16 x float] [float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00] }, align 4
@constinit = private unnamed_addr constant [16 x float] [float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00], align 4
@__const._ZL25clean_paint_for_drawImagePK7SkPaint.cleaned = private unnamed_addr constant %class.SkPaint <{ %class.sk_sp.54 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, %class.sk_sp.55 { %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*) }, %class.sk_sp.56 { %class.SkMaskFilter* inttoptr (i64 -6148914691236517206 to %class.SkMaskFilter*) }, %class.sk_sp.57 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %class.sk_sp.58 { %class.SkImageFilter* inttoptr (i64 -6148914691236517206 to %class.SkImageFilter*) }, %struct.SkRGBA4f { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %union.anon { %struct.anon { i32 -1431655766 } }, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@_ZTV23SkCanvasVirtualEnforcerI8SkCanvasE = linkonce_odr hidden unnamed_addr constant { [56 x i8*] } { [56 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkCanvas*)* @_ZN8SkCanvasD2Ev to i8*), i8* bitcast (void (%class.SkCanvasVirtualEnforcer*)* @_ZN23SkCanvasVirtualEnforcerI8SkCanvasED0Ev to i8*), i8* bitcast (i64 (%class.SkCanvas*)* @_ZNK8SkCanvas16getBaseLayerSizeEv to i8*), i8* bitcast (%class.GrRecordingContext* (%class.SkCanvas*)* @_ZN8SkCanvas16recordingContextEv to i8*), i8* bitcast (i1 (%class.SkCanvas*)* @_ZNK8SkCanvas11isClipEmptyEv to i8*), i8* bitcast (i1 (%class.SkCanvas*)* @_ZNK8SkCanvas10isClipRectEv to i8*), i8* bitcast (void (%class.sk_sp.247*, %class.SkCanvas*, %struct.SkImageInfo*, %class.SkSurfaceProps*)* @_ZN8SkCanvas12onNewSurfaceERK11SkImageInfoRK14SkSurfaceProps to i8*), i8* bitcast (i1 (%class.SkCanvas*, %class.SkPixmap*)* @_ZN8SkCanvas12onPeekPixelsEP8SkPixmap to i8*), i8* bitcast (i1 (%class.SkCanvas*, %class.SkPixmap*)* @_ZN8SkCanvas22onAccessTopLayerPixelsEP8SkPixmap to i8*), i8* bitcast (void (%struct.SkImageInfo*, %class.SkCanvas*)* @_ZNK8SkCanvas11onImageInfoEv to i8*), i8* bitcast (i1 (%class.SkCanvas*, %class.SkSurfaceProps*)* @_ZNK8SkCanvas10onGetPropsEP14SkSurfaceProps to i8*), i8* bitcast (void (%class.SkCanvas*)* @_ZN8SkCanvas7onFlushEv to i8*), i8* bitcast (void (%class.SkCanvas*)* @_ZN8SkCanvas8willSaveEv to i8*), i8* bitcast (i32 (%class.SkCanvas*, %"struct.SkCanvas::SaveLayerRec"*)* @_ZN8SkCanvas20getSaveLayerStrategyERKNS_12SaveLayerRecE to i8*), i8* bitcast (i1 (%class.SkCanvas*, %struct.SkRect*)* @_ZN8SkCanvas14onDoSaveBehindEPK6SkRect to i8*), i8* bitcast (void (%class.SkCanvas*)* @_ZN8SkCanvas11willRestoreEv to i8*), i8* bitcast (void (%class.SkCanvas*)* @_ZN8SkCanvas10didRestoreEv to i8*), i8* bitcast (void (%class.SkCanvas*, i8*)* @_ZN8SkCanvas9onMarkCTMEPKc to i8*), i8* bitcast (void (%class.SkCanvas*, %class.SkM44*)* @_ZN8SkCanvas11didConcat44ERK5SkM44 to i8*), i8* bitcast (void (%class.SkCanvas*, %class.SkM44*)* @_ZN8SkCanvas9didSetM44ERK5SkM44 to i8*), i8* bitcast (void (%class.SkCanvas*, float, float)* @_ZN8SkCanvas12didTranslateEff to i8*), i8* bitcast (void (%class.SkCanvas*, float, float)* @_ZN8SkCanvas8didScaleEff to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.SkCanvasVirtualEnforcer*, %class.SkPaint*)* @_ZN23SkCanvasVirtualEnforcerI8SkCanvasE12onDrawBehindERK7SkPaint to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.SkCanvas*, %class.SkGlyphRunList*, %class.SkPaint*)* @_ZN8SkCanvas18onDrawGlyphRunListERK14SkGlyphRunListRK7SkPaint to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.SkCanvas*, %class.SkImage*, float, float, %struct.SkSamplingOptions*, %class.SkPaint*)* @_ZN8SkCanvas12onDrawImage2EPK7SkImageffRK17SkSamplingOptionsPK7SkPaint to i8*), i8* bitcast (void (%class.SkCanvas*, %class.SkImage*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)* @_ZN8SkCanvas16onDrawImageRect2EPK7SkImageRK6SkRectS5_RK17SkSamplingOptionsPK7SkPaintNS_17SrcRectConstraintE to i8*), i8* bitcast (void (%class.SkCanvas*, %class.SkImage*, %"struct.SkCanvas::Lattice"*, %struct.SkRect*, i32, %class.SkPaint*)* @_ZN8SkCanvas19onDrawImageLattice2EPK7SkImageRKNS_7LatticeERK6SkRect12SkFilterModePK7SkPaint to i8*), i8* bitcast (void (%class.SkCanvas*, %class.SkImage*, %struct.SkRSXform*, %struct.SkRect*, i32*, i32, i32, %struct.SkSamplingOptions*, %struct.SkRect*, %class.SkPaint*)* @_ZN8SkCanvas12onDrawAtlas2EPK7SkImagePK9SkRSXformPK6SkRectPKji11SkBlendModeRK17SkSamplingOptionsS8_PK7SkPaint to i8*), i8* bitcast (void (%class.SkCanvas*, %"struct.SkCanvas::ImageSetEntry"*, i32, %struct.SkPoint*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)* @_ZN8SkCanvas21onDrawEdgeAAImageSet2EPKNS_13ImageSetEntryEiPK7SkPointPK8SkMatrixRK17SkSamplingOptionsPK7SkPaintNS_17SrcRectConstraintE to i8*), i8* bitcast (void (%class.SkCanvas*, %class.SkVertices*, i32, %class.SkPaint*)* @_ZN8SkCanvas20onDrawVerticesObjectEPK10SkVertices11SkBlendModeRK7SkPaint to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.SkCanvas*, %struct.SkRect*, i32, i32)* @_ZN8SkCanvas10onClipRectERK6SkRect8SkClipOpNS_13ClipEdgeStyleE to i8*), i8* bitcast (void (%class.SkCanvas*, %class.SkRRect*, i32, i32)* @_ZN8SkCanvas11onClipRRectERK7SkRRect8SkClipOpNS_13ClipEdgeStyleE to i8*), i8* bitcast (void (%class.SkCanvas*, %class.SkPath*, i32, i32)* @_ZN8SkCanvas10onClipPathERK6SkPath8SkClipOpNS_13ClipEdgeStyleE to i8*), i8* bitcast (void (%class.SkCanvas*, %class.sk_sp.55*, i32)* @_ZN8SkCanvas12onClipShaderE5sk_spI8SkShaderE8SkClipOp to i8*), i8* bitcast (void (%class.SkCanvas*, %class.SkRegion*, i32)* @_ZN8SkCanvas12onClipRegionERK8SkRegion8SkClipOp to i8*), i8* bitcast (void (%class.SkCanvas*)* @_ZN8SkCanvas9onDiscardEv to i8*), i8* bitcast (%class.GrSurfaceDrawContext* (%class.SkCanvas*)* @_ZN8SkCanvas27topDeviceSurfaceDrawContextEv to i8*), i8* bitcast (%class.SkPaintFilterCanvas* (%class.SkCanvas*)* @_ZNK8SkCanvas36internal_private_asPaintFilterCanvasEv to i8*)] }, comdat, align 8
@_ZTV16SkNoPixelsDevice = external unnamed_addr constant { [63 x i8*], [6 x i8*] }, align 8
@_ZTV13SkMarkerStack = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkMarkerStack*)* @_ZN13SkMarkerStackD2Ev to i8*), i8* bitcast (void (%class.SkMarkerStack*)* @_ZN13SkMarkerStackD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*)] }, comdat, align 8
@_ZZN8SkCanvas9saveLayerERKNS_12SaveLayerRecEE28trace_event_unique_atomic750.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN8SkCanvas17internalSaveLayerERKNS_12SaveLayerRecENS_17SaveLayerStrategyEE28trace_event_unique_atomic950.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN8SkCanvas10drawDRRectERK7SkRRectS2_RK7SkPaintE29trace_event_unique_atomic1647.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN8SkCanvas9drawPaintERK7SkPaintE29trace_event_unique_atomic1669.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN8SkCanvas8drawRectERK6SkRectRK7SkPaintE29trace_event_unique_atomic1674.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN8SkCanvas23drawClippedToSaveBehindERK7SkPaintE29trace_event_unique_atomic1681.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN8SkCanvas10drawRegionERK8SkRegionRK7SkPaintE29trace_event_unique_atomic1686.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN8SkCanvas8drawOvalERK6SkRectRK7SkPaintE29trace_event_unique_atomic1699.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN8SkCanvas9drawRRectERK7SkRRectRK7SkPaintE29trace_event_unique_atomic1706.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN8SkCanvas10drawPointsENS_9PointModeEmPK7SkPointRK7SkPaintE29trace_event_unique_atomic1711.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN8SkCanvas12drawVerticesEPK10SkVertices11SkBlendModeRK7SkPaintE29trace_event_unique_atomic1721.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN8SkCanvas8drawPathERK6SkPathRK7SkPaintE29trace_event_unique_atomic1741.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN8SkCanvas16drawImageLatticeEPK7SkImageRKNS_7LatticeERK6SkRect12SkFilterModePK7SkPaintE29trace_event_unique_atomic1781.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN8SkCanvas9drawAtlasEPK7SkImagePK9SkRSXformPK6SkRectPKji11SkBlendModeRK17SkSamplingOptionsS8_PK7SkPaintE29trace_event_unique_atomic1807.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN8SkCanvas14drawAnnotationERK6SkRectPKcP6SkDataE29trace_event_unique_atomic1818.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN8SkCanvas23private_draw_shadow_recERK6SkPathRK15SkDrawShadowRecE29trace_event_unique_atomic1825.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN8SkCanvas27experimental_DrawEdgeAAQuadERK6SkRectPK7SkPointNS_11QuadAAFlagsERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendModeE29trace_event_unique_atomic1839.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN8SkCanvas31experimental_DrawEdgeAAImageSetEPKNS_13ImageSetEntryEiPK7SkPointPK8SkMatrixRK17SkSamplingOptionsPK7SkPaintNS_17SrcRectConstraintEE29trace_event_unique_atomic1850.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN8SkCanvas9drawImageEPK7SkImageffRK17SkSamplingOptionsPK7SkPaintE29trace_event_unique_atomic2160.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN8SkCanvas14drawSimpleTextEPKvm14SkTextEncodingffRK6SkFontRK7SkPaintE29trace_event_unique_atomic2200.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN8SkCanvas12drawTextBlobEPK10SkTextBlobffRK7SkPaintE29trace_event_unique_atomic2278.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN8SkCanvas9drawPatchEPK7SkPointPKjS2_11SkBlendModeRK7SkPaintE29trace_event_unique_atomic2313.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN8SkCanvas12drawDrawableEP10SkDrawableffE29trace_event_unique_atomic2341.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN8SkCanvas12drawDrawableEP10SkDrawablePK8SkMatrixE29trace_event_unique_atomic2354.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN8SkCanvas7drawArcERK6SkRectffbRK7SkPaintE29trace_event_unique_atomic2496.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN8SkCanvas11drawPictureEPK9SkPicturePK8SkMatrixPK7SkPaintE29trace_event_unique_atomic2513.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN8SkCanvasC1Ev = hidden unnamed_addr alias void (%class.SkCanvas*), void (%class.SkCanvas*)* @_ZN8SkCanvasC2Ev
@_ZN8SkCanvasC1EiiPK14SkSurfaceProps = hidden unnamed_addr alias void (%class.SkCanvas*, i32, i32, %class.SkSurfaceProps*), void (%class.SkCanvas*, i32, i32, %class.SkSurfaceProps*)* @_ZN8SkCanvasC2EiiPK14SkSurfaceProps
@_ZN8SkCanvasC1ERK7SkIRect = hidden unnamed_addr alias void (%class.SkCanvas*, %struct.SkIRect*), void (%class.SkCanvas*, %struct.SkIRect*)* @_ZN8SkCanvasC2ERK7SkIRect
@_ZN8SkCanvasC1E5sk_spI12SkBaseDeviceE = hidden unnamed_addr alias void (%class.SkCanvas*, %class.sk_sp.2*), void (%class.SkCanvas*, %class.sk_sp.2*)* @_ZN8SkCanvasC2E5sk_spI12SkBaseDeviceE
@_ZN8SkCanvasC1ERK8SkBitmapRK14SkSurfaceProps = hidden unnamed_addr alias void (%class.SkCanvas*, %class.SkBitmap*, %class.SkSurfaceProps*), void (%class.SkCanvas*, %class.SkBitmap*, %class.SkSurfaceProps*)* @_ZN8SkCanvasC2ERK8SkBitmapRK14SkSurfaceProps
@_ZN8SkCanvasC1ERK8SkBitmapNSt3__110unique_ptrI23SkRasterHandleAllocatorNS3_14default_deleteIS5_EEEEPv = hidden unnamed_addr alias void (%class.SkCanvas*, %class.SkBitmap*, %class.SkRasterHandleAllocator*, i8*), void (%class.SkCanvas*, %class.SkBitmap*, %class.SkRasterHandleAllocator*, i8*)* @_ZN8SkCanvasC2ERK8SkBitmapNSt3__110unique_ptrI23SkRasterHandleAllocatorNS3_14default_deleteIS5_EEEEPv
@_ZN8SkCanvasC1ERK8SkBitmap = hidden unnamed_addr alias void (%class.SkCanvas*, %class.SkBitmap*), void (%class.SkCanvas*, %class.SkBitmap*)* @_ZN8SkCanvasC2ERK8SkBitmap
@_ZN8SkCanvasD1Ev = hidden unnamed_addr alias void (%class.SkCanvas*), void (%class.SkCanvas*)* @_ZN8SkCanvasD2Ev
@_ZN8SkCanvas13ImageSetEntryC1Ev = hidden unnamed_addr alias void (%"struct.SkCanvas::ImageSetEntry"*), void (%"struct.SkCanvas::ImageSetEntry"*)* @_ZN8SkCanvas13ImageSetEntryC2Ev
@_ZN8SkCanvas13ImageSetEntryD1Ev = hidden unnamed_addr alias void (%"struct.SkCanvas::ImageSetEntry"*), void (%"struct.SkCanvas::ImageSetEntry"*)* @_ZN8SkCanvas13ImageSetEntryD2Ev
@_ZN8SkCanvas13ImageSetEntryC1ERKS0_ = hidden unnamed_addr alias void (%"struct.SkCanvas::ImageSetEntry"*, %"struct.SkCanvas::ImageSetEntry"*), void (%"struct.SkCanvas::ImageSetEntry"*, %"struct.SkCanvas::ImageSetEntry"*)* @_ZN8SkCanvas13ImageSetEntryC2ERKS0_
@_ZN8SkCanvas13ImageSetEntryC1E5sk_spIK7SkImageERK6SkRectS7_ifjb = hidden unnamed_addr alias void (%"struct.SkCanvas::ImageSetEntry"*, %class.sk_sp.250*, %struct.SkRect*, %struct.SkRect*, i32, float, i32, i1), void (%"struct.SkCanvas::ImageSetEntry"*, %class.sk_sp.250*, %struct.SkRect*, %struct.SkRect*, i32, float, i32, i1)* @_ZN8SkCanvas13ImageSetEntryC2E5sk_spIK7SkImageERK6SkRectS7_ifjb
@_ZN8SkCanvas13ImageSetEntryC1E5sk_spIK7SkImageERK6SkRectS7_fj = hidden unnamed_addr alias void (%"struct.SkCanvas::ImageSetEntry"*, %class.sk_sp.250*, %struct.SkRect*, %struct.SkRect*, float, i32), void (%"struct.SkCanvas::ImageSetEntry"*, %class.sk_sp.250*, %struct.SkRect*, %struct.SkRect*, float, i32)* @_ZN8SkCanvas13ImageSetEntryC2E5sk_spIK7SkImageERK6SkRectS7_fj
@_ZN14SkNoDrawCanvasC1Eii = hidden unnamed_addr alias void (%class.SkNoDrawCanvas*, i32, i32), void (%class.SkNoDrawCanvas*, i32, i32)* @_ZN14SkNoDrawCanvasC2Eii
@_ZN14SkNoDrawCanvasC1ERK7SkIRect = hidden unnamed_addr alias void (%class.SkNoDrawCanvas*, %struct.SkIRect*), void (%class.SkNoDrawCanvas*, %struct.SkIRect*)* @_ZN14SkNoDrawCanvasC2ERK7SkIRect
@_ZN14SkNoDrawCanvasC1E5sk_spI12SkBaseDeviceE = hidden unnamed_addr alias void (%class.SkNoDrawCanvas*, %class.sk_sp.2*), void (%class.SkNoDrawCanvas*, %class.sk_sp.2*)* @_ZN14SkNoDrawCanvasC2E5sk_spI12SkBaseDeviceE

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8SkCanvas27wouldOverwriteEntireSurfaceEPK6SkRectPK7SkPaintNS_21ShaderOverrideOpacityE(%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.SkMatrix, align 4
  %6 = alloca %struct.SkRect, align 4
  %7 = alloca %class.SkMatrix, align 4
  %8 = bitcast %class.SkCanvas* %0 to i64 (%class.SkCanvas*)***
  %9 = load i64 (%class.SkCanvas*)**, i64 (%class.SkCanvas*)*** %8, align 8
  %10 = getelementptr inbounds i64 (%class.SkCanvas*)*, i64 (%class.SkCanvas*)** %9, i64 2
  %11 = load i64 (%class.SkCanvas*)*, i64 (%class.SkCanvas*)** %10, align 8
  %12 = tail call i64 %11(%class.SkCanvas* %0) #15
  %13 = trunc i64 %12 to i32
  %14 = lshr i64 %12, 32
  %15 = trunc i64 %14 to i32
  %16 = sitofp i32 %13 to float
  %17 = sitofp i32 %15 to float
  %18 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 5, i32 0
  %19 = load %class.SkBaseDevice*, %class.SkBaseDevice** %18, align 8
  %20 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %21 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %20, align 8
  %22 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %21, i64 0, i32 1
  %23 = load %class.SkBaseDevice*, %class.SkBaseDevice** %22, align 8
  %24 = icmp eq %class.SkBaseDevice* %19, %23
  br i1 %24, label %25, label %181

25:                                               ; preds = %4
  %26 = bitcast %class.SkBaseDevice* %19 to i1 (%class.SkBaseDevice*)***
  %27 = load i1 (%class.SkBaseDevice*)**, i1 (%class.SkBaseDevice*)*** %26, align 8
  %28 = getelementptr inbounds i1 (%class.SkBaseDevice*)*, i1 (%class.SkBaseDevice*)** %27, i64 20
  %29 = load i1 (%class.SkBaseDevice*)*, i1 (%class.SkBaseDevice*)** %28, align 8
  %30 = tail call zeroext i1 %29(%class.SkBaseDevice* %19) #15
  br i1 %30, label %31, label %181

31:                                               ; preds = %25
  %32 = icmp eq %struct.SkRect* %1, null
  br i1 %32, label %159, label %33

33:                                               ; preds = %31
  %34 = bitcast %class.SkMatrix* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %34) #15
  %35 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %20, align 8, !noalias !2
  %36 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %35, i64 0, i32 3
  %37 = bitcast %class.SkM44* %36 to i32*
  %38 = load i32, i32* %37, align 4, !noalias !5
  %39 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %35, i64 0, i32 3, i32 0, i64 4
  %40 = bitcast float* %39 to i32*
  %41 = load i32, i32* %40, align 4, !noalias !5
  %42 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %35, i64 0, i32 3, i32 0, i64 12
  %43 = bitcast float* %42 to i32*
  %44 = load i32, i32* %43, align 4, !noalias !5
  %45 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %35, i64 0, i32 3, i32 0, i64 1
  %46 = bitcast float* %45 to i32*
  %47 = load i32, i32* %46, align 4, !noalias !5
  %48 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %35, i64 0, i32 3, i32 0, i64 5
  %49 = bitcast float* %48 to i32*
  %50 = load i32, i32* %49, align 4, !noalias !5
  %51 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %35, i64 0, i32 3, i32 0, i64 13
  %52 = bitcast float* %51 to i32*
  %53 = load i32, i32* %52, align 4, !noalias !5
  %54 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %35, i64 0, i32 3, i32 0, i64 3
  %55 = bitcast float* %54 to i32*
  %56 = load i32, i32* %55, align 4, !noalias !5
  %57 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %35, i64 0, i32 3, i32 0, i64 7
  %58 = bitcast float* %57 to i32*
  %59 = load i32, i32* %58, align 4, !noalias !5
  %60 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %35, i64 0, i32 3, i32 0, i64 15
  %61 = bitcast float* %60 to i32*
  %62 = load i32, i32* %61, align 4, !noalias !5
  %63 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 1
  %64 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 1
  %65 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 2
  %66 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 3
  %67 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 4
  %68 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 5
  %69 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 6
  %70 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 7
  %71 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 8
  %72 = bitcast %class.SkMatrix* %5 to i32*
  store i32 %38, i32* %72, align 4, !alias.scope !8
  %73 = bitcast float* %64 to i32*
  store i32 %41, i32* %73, align 4, !alias.scope !8
  %74 = bitcast float* %65 to i32*
  store i32 %44, i32* %74, align 4, !alias.scope !8
  %75 = bitcast float* %66 to i32*
  store i32 %47, i32* %75, align 4, !alias.scope !8
  %76 = bitcast float* %67 to i32*
  store i32 %50, i32* %76, align 4, !alias.scope !8
  %77 = bitcast float* %68 to i32*
  store i32 %53, i32* %77, align 4, !alias.scope !8
  %78 = bitcast float* %69 to i32*
  store i32 %56, i32* %78, align 4, !alias.scope !8
  %79 = bitcast float* %70 to i32*
  store i32 %59, i32* %79, align 4, !alias.scope !8
  %80 = bitcast float* %71 to i32*
  store i32 %62, i32* %80, align 4, !alias.scope !8
  store i32 128, i32* %63, align 4, !alias.scope !8
  %81 = call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* nonnull %5) #15
  %82 = and i8 %81, 12
  %83 = icmp eq i8 %82, 0
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %34) #15
  br i1 %83, label %84, label %181

84:                                               ; preds = %33
  %85 = bitcast %struct.SkRect* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %85) #15
  %86 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 1
  %87 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 3
  %88 = bitcast %class.SkMatrix* %7 to i8*
  %89 = bitcast %struct.SkRect* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %89, i8 -1, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %88) #15
  %90 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %20, align 8, !noalias !11
  %91 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %90, i64 0, i32 3
  %92 = bitcast %class.SkM44* %91 to i32*
  %93 = load i32, i32* %92, align 4, !noalias !14
  %94 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %90, i64 0, i32 3, i32 0, i64 4
  %95 = bitcast float* %94 to i32*
  %96 = load i32, i32* %95, align 4, !noalias !14
  %97 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %90, i64 0, i32 3, i32 0, i64 12
  %98 = bitcast float* %97 to i32*
  %99 = load i32, i32* %98, align 4, !noalias !14
  %100 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %90, i64 0, i32 3, i32 0, i64 1
  %101 = bitcast float* %100 to i32*
  %102 = load i32, i32* %101, align 4, !noalias !14
  %103 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %90, i64 0, i32 3, i32 0, i64 5
  %104 = bitcast float* %103 to i32*
  %105 = load i32, i32* %104, align 4, !noalias !14
  %106 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %90, i64 0, i32 3, i32 0, i64 13
  %107 = bitcast float* %106 to i32*
  %108 = load i32, i32* %107, align 4, !noalias !14
  %109 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %90, i64 0, i32 3, i32 0, i64 3
  %110 = bitcast float* %109 to i32*
  %111 = load i32, i32* %110, align 4, !noalias !14
  %112 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %90, i64 0, i32 3, i32 0, i64 7
  %113 = bitcast float* %112 to i32*
  %114 = load i32, i32* %113, align 4, !noalias !14
  %115 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %90, i64 0, i32 3, i32 0, i64 15
  %116 = bitcast float* %115 to i32*
  %117 = load i32, i32* %116, align 4, !noalias !14
  %118 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 1
  %119 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 1
  %120 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 2
  %121 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 3
  %122 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 4
  %123 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 5
  %124 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 6
  %125 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 7
  %126 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 8
  %127 = bitcast %class.SkMatrix* %7 to i32*
  store i32 %93, i32* %127, align 4, !alias.scope !17
  %128 = bitcast float* %119 to i32*
  store i32 %96, i32* %128, align 4, !alias.scope !17
  %129 = bitcast float* %120 to i32*
  store i32 %99, i32* %129, align 4, !alias.scope !17
  %130 = bitcast float* %121 to i32*
  store i32 %102, i32* %130, align 4, !alias.scope !17
  %131 = bitcast float* %122 to i32*
  store i32 %105, i32* %131, align 4, !alias.scope !17
  %132 = bitcast float* %123 to i32*
  store i32 %108, i32* %132, align 4, !alias.scope !17
  %133 = bitcast float* %124 to i32*
  store i32 %111, i32* %133, align 4, !alias.scope !17
  %134 = bitcast float* %125 to i32*
  store i32 %114, i32* %134, align 4, !alias.scope !17
  %135 = bitcast float* %126 to i32*
  store i32 %117, i32* %135, align 4, !alias.scope !17
  store i32 128, i32* %118, align 4, !alias.scope !17
  call void @_ZNK8SkMatrix21mapRectScaleTranslateEP6SkRectRKS0_(%class.SkMatrix* nonnull %7, %struct.SkRect* nonnull %6, %struct.SkRect* nonnull dereferenceable(16) %1) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %88) #15
  %136 = icmp slt i32 %13, 1
  %137 = icmp slt i32 %15, 1
  %138 = or i1 %136, %137
  br i1 %138, label %157, label %139

139:                                              ; preds = %84
  %140 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 0
  %141 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 2
  %142 = load float, float* %140, align 4
  %143 = load float, float* %141, align 4
  %144 = fcmp olt float %142, %143
  br i1 %144, label %145, label %157

145:                                              ; preds = %139
  %146 = load float, float* %86, align 4
  %147 = load float, float* %87, align 4
  %148 = fcmp uge float %146, %147
  %149 = fcmp ugt float %142, 0.000000e+00
  %150 = or i1 %149, %148
  br i1 %150, label %157, label %151

151:                                              ; preds = %145
  %152 = fcmp ole float %146, 0.000000e+00
  %153 = fcmp oge float %143, %16
  %154 = fcmp oge float %147, %17
  %155 = and i1 %153, %152
  %156 = and i1 %154, %155
  br i1 %156, label %158, label %157

157:                                              ; preds = %84, %151, %145, %139
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %85) #15
  br label %181

158:                                              ; preds = %151
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %85) #15
  br label %159

159:                                              ; preds = %158, %31
  %160 = icmp eq %class.SkPaint* %2, null
  br i1 %160, label %179, label %161

161:                                              ; preds = %159
  %162 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 8, i32 0, i32 0
  %163 = load i32, i32* %162, align 8
  %164 = lshr i32 %163, 6
  %165 = trunc i32 %164 to i8
  %166 = and i8 %165, 3
  switch i8 %166, label %181 [
    i8 0, label %167
    i8 2, label %167
  ]

167:                                              ; preds = %161, %161
  %168 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 2, i32 0
  %169 = load %class.SkMaskFilter*, %class.SkMaskFilter** %168, align 8
  %170 = icmp eq %class.SkMaskFilter* %169, null
  br i1 %170, label %171, label %181

171:                                              ; preds = %167
  %172 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 0, i32 0
  %173 = load %class.SkPathEffect*, %class.SkPathEffect** %172, align 8
  %174 = icmp eq %class.SkPathEffect* %173, null
  br i1 %174, label %175, label %181

175:                                              ; preds = %171
  %176 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 4, i32 0
  %177 = load %class.SkImageFilter*, %class.SkImageFilter** %176, align 8
  %178 = icmp eq %class.SkImageFilter* %177, null
  br i1 %178, label %179, label %181

179:                                              ; preds = %175, %159
  %180 = call zeroext i1 @_ZN11SkPaintPriv10OverwritesEPK7SkPaintNS_21ShaderOverrideOpacityE(%class.SkPaint* %2, i32 %3) #15
  br label %181

181:                                              ; preds = %157, %4, %161, %175, %171, %167, %33, %25, %179
  %182 = phi i1 [ %180, %179 ], [ false, %25 ], [ false, %33 ], [ false, %167 ], [ false, %171 ], [ false, %175 ], [ false, %161 ], [ false, %4 ], [ false, %157 ]
  ret i1 %182
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %class.SkBaseDevice* @_ZNK8SkCanvas9topDeviceEv(%class.SkCanvas* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %3 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %2, align 8
  %4 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %3, i64 0, i32 1
  %5 = load %class.SkBaseDevice*, %class.SkBaseDevice** %4, align 8
  ret %class.SkBaseDevice* %5
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK8SkCanvas14getTotalMatrixEv(%class.SkMatrix* noalias nocapture sret, %class.SkCanvas* nocapture readonly) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %1, i64 0, i32 2
  %4 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %3, align 8
  %5 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %4, i64 0, i32 3
  %6 = bitcast %class.SkM44* %5 to i32*
  %7 = load i32, i32* %6, align 4, !noalias !20
  %8 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %4, i64 0, i32 3, i32 0, i64 4
  %9 = bitcast float* %8 to i32*
  %10 = load i32, i32* %9, align 4, !noalias !20
  %11 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %4, i64 0, i32 3, i32 0, i64 12
  %12 = bitcast float* %11 to i32*
  %13 = load i32, i32* %12, align 4, !noalias !20
  %14 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %4, i64 0, i32 3, i32 0, i64 1
  %15 = bitcast float* %14 to i32*
  %16 = load i32, i32* %15, align 4, !noalias !20
  %17 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %4, i64 0, i32 3, i32 0, i64 5
  %18 = bitcast float* %17 to i32*
  %19 = load i32, i32* %18, align 4, !noalias !20
  %20 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %4, i64 0, i32 3, i32 0, i64 13
  %21 = bitcast float* %20 to i32*
  %22 = load i32, i32* %21, align 4, !noalias !20
  %23 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %4, i64 0, i32 3, i32 0, i64 3
  %24 = bitcast float* %23 to i32*
  %25 = load i32, i32* %24, align 4, !noalias !20
  %26 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %4, i64 0, i32 3, i32 0, i64 7
  %27 = bitcast float* %26 to i32*
  %28 = load i32, i32* %27, align 4, !noalias !20
  %29 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %4, i64 0, i32 3, i32 0, i64 15
  %30 = bitcast float* %29 to i32*
  %31 = load i32, i32* %30, align 4, !noalias !20
  %32 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %0, i64 0, i32 1
  %33 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %0, i64 0, i32 0, i64 1
  %34 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %0, i64 0, i32 0, i64 2
  %35 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %0, i64 0, i32 0, i64 3
  %36 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %0, i64 0, i32 0, i64 4
  %37 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %0, i64 0, i32 0, i64 5
  %38 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %0, i64 0, i32 0, i64 6
  %39 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %0, i64 0, i32 0, i64 7
  %40 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %0, i64 0, i32 0, i64 8
  %41 = bitcast %class.SkMatrix* %0 to i32*
  store i32 %7, i32* %41, align 4, !alias.scope !23
  %42 = bitcast float* %33 to i32*
  store i32 %10, i32* %42, align 4, !alias.scope !23
  %43 = bitcast float* %34 to i32*
  store i32 %13, i32* %43, align 4, !alias.scope !23
  %44 = bitcast float* %35 to i32*
  store i32 %16, i32* %44, align 4, !alias.scope !23
  %45 = bitcast float* %36 to i32*
  store i32 %19, i32* %45, align 4, !alias.scope !23
  %46 = bitcast float* %37 to i32*
  store i32 %22, i32* %46, align 4, !alias.scope !23
  %47 = bitcast float* %38 to i32*
  store i32 %25, i32* %47, align 4, !alias.scope !23
  %48 = bitcast float* %39 to i32*
  store i32 %28, i32* %48, align 4, !alias.scope !23
  %49 = bitcast float* %40 to i32*
  store i32 %31, i32* %49, align 4, !alias.scope !23
  store i32 128, i32* %32, align 4, !alias.scope !23
  ret void
}

declare void @_ZNK8SkMatrix21mapRectScaleTranslateEP6SkRectRKS0_(%class.SkMatrix*, %struct.SkRect*, %struct.SkRect* dereferenceable(16)) local_unnamed_addr #4

declare zeroext i1 @_ZN11SkPaintPriv10OverwritesEPK7SkPaintNS_21ShaderOverrideOpacityE(%class.SkPaint*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas13predrawNotifyEb(%class.SkCanvas* nocapture readonly, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 9
  %4 = load %class.SkSurface_Base*, %class.SkSurface_Base** %3, align 8
  %5 = icmp eq %class.SkSurface_Base* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = xor i1 %1, true
  %8 = zext i1 %7 to i32
  tail call void @_ZN14SkSurface_Base11aboutToDrawEN9SkSurface17ContentChangeModeE(%class.SkSurface_Base* nonnull %4, i32 %8) #15
  br label %9

9:                                                ; preds = %2, %6
  ret void
}

declare void @_ZN14SkSurface_Base11aboutToDrawEN9SkSurface17ContentChangeModeE(%class.SkSurface_Base*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas13predrawNotifyEPK6SkRectPK7SkPaintNS_21ShaderOverrideOpacityE(%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*, i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 9
  %6 = load %class.SkSurface_Base*, %class.SkSurface_Base** %5, align 8
  %7 = icmp eq %class.SkSurface_Base* %6, null
  br i1 %7, label %17, label %8

8:                                                ; preds = %4
  %9 = tail call zeroext i1 @_ZNK14SkSurface_Base24outstandingImageSnapshotEv(%class.SkSurface_Base* nonnull %6) #15
  br i1 %9, label %10, label %14

10:                                               ; preds = %8
  %11 = tail call zeroext i1 @_ZNK8SkCanvas27wouldOverwriteEntireSurfaceEPK6SkRectPK7SkPaintNS_21ShaderOverrideOpacityE(%class.SkCanvas* %0, %struct.SkRect* %1, %class.SkPaint* %2, i32 %3)
  %12 = xor i1 %11, true
  %13 = zext i1 %12 to i32
  br label %14

14:                                               ; preds = %10, %8
  %15 = phi i32 [ 1, %8 ], [ %13, %10 ]
  %16 = load %class.SkSurface_Base*, %class.SkSurface_Base** %5, align 8
  tail call void @_ZN14SkSurface_Base11aboutToDrawEN9SkSurface17ContentChangeModeE(%class.SkSurface_Base* %16, i32 %15) #15
  br label %17

17:                                               ; preds = %4, %14
  ret void
}

declare zeroext i1 @_ZNK14SkSurface_Base24outstandingImageSnapshotEv(%class.SkSurface_Base*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas19resetForNextPictureERK7SkIRect(%class.SkCanvas*, %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca { <2 x float>, <2 x float> }, align 8
  %4 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 7
  %5 = load i32, i32* %4, align 8
  %6 = add i32 %5, -1
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %38

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %10 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 1, i32 6
  %11 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*)***
  br label %12

12:                                               ; preds = %35, %8
  %13 = phi i32 [ 0, %8 ], [ %36, %35 ]
  %14 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %9, align 8
  %15 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %14, i64 0, i32 4
  %16 = load i32, i32* %15, align 8
  %17 = icmp sgt i32 %16, 0
  br i1 %17, label %18, label %23

18:                                               ; preds = %12
  %19 = load i32, i32* %4, align 8
  %20 = add nsw i32 %19, -1
  store i32 %20, i32* %4, align 8
  %21 = load i32, i32* %15, align 8
  %22 = add nsw i32 %21, -1
  store i32 %22, i32* %15, align 8
  br label %35

23:                                               ; preds = %12
  %24 = load i32, i32* %10, align 8
  %25 = icmp sgt i32 %24, 1
  br i1 %25, label %26, label %35

26:                                               ; preds = %23
  %27 = load void (%class.SkCanvas*)**, void (%class.SkCanvas*)*** %11, align 8
  %28 = getelementptr inbounds void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %27, i64 15
  %29 = load void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %28, align 8
  tail call void %29(%class.SkCanvas* %0) #15
  %30 = load i32, i32* %4, align 8
  %31 = add nsw i32 %30, -1
  store i32 %31, i32* %4, align 8
  tail call void @_ZN8SkCanvas15internalRestoreEv(%class.SkCanvas* %0) #15
  %32 = load void (%class.SkCanvas*)**, void (%class.SkCanvas*)*** %11, align 8
  %33 = getelementptr inbounds void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %32, i64 16
  %34 = load void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %33, align 8
  tail call void %34(%class.SkCanvas* %0) #15
  br label %35

35:                                               ; preds = %26, %23, %18
  %36 = add nuw nsw i32 %13, 1
  %37 = icmp eq i32 %36, %6
  br i1 %37, label %38, label %12

38:                                               ; preds = %35, %2
  %39 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 5, i32 0
  %40 = bitcast %class.SkBaseDevice** %39 to %class.SkNoPixelsDevice**
  %41 = load %class.SkNoPixelsDevice*, %class.SkNoPixelsDevice** %40, align 8
  tail call void @_ZN16SkNoPixelsDevice19resetForNextPictureERK7SkIRect(%class.SkNoPixelsDevice* %41, %struct.SkIRect* dereferenceable(16) %1)
  %42 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %43 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %42, align 8
  %44 = bitcast %class.SkBaseDevice** %39 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %43, i64 0, i32 1
  %47 = bitcast %class.SkBaseDevice** %46 to i64*
  store i64 %45, i64* %47, align 8
  %48 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %43, i64 0, i32 3
  %49 = bitcast %class.SkM44* %48 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %49, i8* align 4 bitcast (%class.SkM44* @.ref.tmp.3 to i8*), i64 64, i1 false) #15
  %50 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %42, align 8
  %51 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %50, i64 0, i32 1
  %52 = load %class.SkBaseDevice*, %class.SkBaseDevice** %51, align 8
  %53 = bitcast %class.SkBaseDevice* %52 to i32 (%class.SkBaseDevice*)***
  %54 = load i32 (%class.SkBaseDevice*)**, i32 (%class.SkBaseDevice*)*** %53, align 8
  %55 = getelementptr inbounds i32 (%class.SkBaseDevice*)*, i32 (%class.SkBaseDevice*)** %54, i64 22
  %56 = load i32 (%class.SkBaseDevice*)*, i32 (%class.SkBaseDevice*)** %55, align 8
  %57 = tail call i32 %56(%class.SkBaseDevice* %52) #15
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %91, label %59

59:                                               ; preds = %38
  %60 = bitcast { <2 x float>, <2 x float> }* %3 to %struct.SkRect*
  %61 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %52, i64 0, i32 5
  %62 = bitcast { <2 x float>, <2 x float> }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %62) #15
  %63 = bitcast %class.SkBaseDevice* %52 to { i64, i64 } (%class.SkBaseDevice*)***
  %64 = load { i64, i64 } (%class.SkBaseDevice*)**, { i64, i64 } (%class.SkBaseDevice*)*** %63, align 8
  %65 = getelementptr inbounds { i64, i64 } (%class.SkBaseDevice*)*, { i64, i64 } (%class.SkBaseDevice*)** %64, i64 23
  %66 = load { i64, i64 } (%class.SkBaseDevice*)*, { i64, i64 } (%class.SkBaseDevice*)** %65, align 8
  %67 = tail call { i64, i64 } %66(%class.SkBaseDevice* %52) #15
  %68 = extractvalue { i64, i64 } %67, 0
  %69 = trunc i64 %68 to i32
  %70 = lshr i64 %68, 32
  %71 = trunc i64 %70 to i32
  %72 = extractvalue { i64, i64 } %67, 1
  %73 = sitofp i32 %69 to float
  %74 = insertelement <2 x float> undef, float %73, i32 0
  %75 = sitofp i32 %71 to float
  %76 = insertelement <2 x float> %74, float %75, i32 1
  %77 = trunc i64 %72 to i32
  %78 = sitofp i32 %77 to float
  %79 = insertelement <2 x float> undef, float %78, i32 0
  %80 = lshr i64 %72, 32
  %81 = trunc i64 %80 to i32
  %82 = sitofp i32 %81 to float
  %83 = insertelement <2 x float> %79, float %82, i32 1
  %84 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 0
  store <2 x float> %76, <2 x float>* %84, align 8
  %85 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 1
  store <2 x float> %83, <2 x float>* %85, align 8
  %86 = call { <2 x float>, <2 x float> } @_ZN12SkMatrixPriv7MapRectERK5SkM44RK6SkRect(%class.SkM44* dereferenceable(64) %61, %struct.SkRect* nonnull dereferenceable(16) %60) #15
  %87 = extractvalue { <2 x float>, <2 x float> } %86, 0
  %88 = extractvalue { <2 x float>, <2 x float> } %86, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %62) #15
  %89 = fadd <2 x float> %87, <float -1.000000e+00, float -1.000000e+00>
  %90 = fadd <2 x float> %88, <float 1.000000e+00, float 1.000000e+00>
  br label %91

91:                                               ; preds = %38, %59
  %92 = phi <2 x float> [ %89, %59 ], [ zeroinitializer, %38 ]
  %93 = phi <2 x float> [ %90, %59 ], [ zeroinitializer, %38 ]
  %94 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 11
  %95 = bitcast %struct.SkRect* %94 to <2 x float>*
  store <2 x float> %92, <2 x float>* %95, align 8
  %96 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 11, i32 2
  %97 = bitcast float* %96 to <2 x float>*
  store <2 x float> %93, <2 x float>* %97, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas14restoreToCountEi(%class.SkCanvas*, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp sgt i32 %1, 1
  %4 = select i1 %3, i32 %1, i32 1
  %5 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 7
  %6 = load i32, i32* %5, align 8
  %7 = sub nsw i32 %6, %4
  %8 = icmp sgt i32 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %11 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 1, i32 6
  %12 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*)***
  br label %14

13:                                               ; preds = %37, %2
  ret void

14:                                               ; preds = %9, %37
  %15 = phi i32 [ 0, %9 ], [ %38, %37 ]
  %16 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %10, align 8
  %17 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %16, i64 0, i32 4
  %18 = load i32, i32* %17, align 8
  %19 = icmp sgt i32 %18, 0
  br i1 %19, label %20, label %25

20:                                               ; preds = %14
  %21 = load i32, i32* %5, align 8
  %22 = add nsw i32 %21, -1
  store i32 %22, i32* %5, align 8
  %23 = load i32, i32* %17, align 8
  %24 = add nsw i32 %23, -1
  store i32 %24, i32* %17, align 8
  br label %37

25:                                               ; preds = %14
  %26 = load i32, i32* %11, align 8
  %27 = icmp sgt i32 %26, 1
  br i1 %27, label %28, label %37

28:                                               ; preds = %25
  %29 = load void (%class.SkCanvas*)**, void (%class.SkCanvas*)*** %12, align 8
  %30 = getelementptr inbounds void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %29, i64 15
  %31 = load void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %30, align 8
  tail call void %31(%class.SkCanvas* %0) #15
  %32 = load i32, i32* %5, align 8
  %33 = add nsw i32 %32, -1
  store i32 %33, i32* %5, align 8
  tail call void @_ZN8SkCanvas15internalRestoreEv(%class.SkCanvas* %0) #15
  %34 = load void (%class.SkCanvas*)**, void (%class.SkCanvas*)*** %12, align 8
  %35 = getelementptr inbounds void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %34, i64 16
  %36 = load void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %35, align 8
  tail call void %36(%class.SkCanvas* %0) #15
  br label %37

37:                                               ; preds = %20, %25, %28
  %38 = add nuw nsw i32 %15, 1
  %39 = icmp slt i32 %38, %7
  br i1 %39, label %14, label %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16SkNoPixelsDevice19resetForNextPictureERK7SkIRect(%class.SkNoPixelsDevice*, %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.SkM44, align 4
  %4 = alloca %class.SkM44, align 4
  %5 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 0
  %6 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = sub i32 %7, %9
  %11 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 3
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = sub i32 %12, %14
  %16 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 0, i32 3
  %17 = zext i32 %15 to i64
  %18 = shl nuw i64 %17, 32
  %19 = zext i32 %10 to i64
  %20 = or i64 %18, %19
  %21 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %16, i64 0, i32 0, i32 0, i32 0
  %22 = load %class.SkColorSpace*, %class.SkColorSpace** %21, align 8
  %23 = icmp eq %class.SkColorSpace* %22, null
  br i1 %23, label %24, label %29

24:                                               ; preds = %2
  %25 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 0, i32 3, i32 0, i32 1
  %26 = bitcast i32* %25 to i64*
  %27 = load i64, i64* %26, align 8, !noalias !26
  %28 = bitcast %struct.SkImageInfo* %16 to i64*
  store i64 0, i64* %28, align 8
  br label %45

29:                                               ; preds = %2
  %30 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw add i32* %30, i32 1 monotonic, !noalias !26
  %32 = load %class.SkColorSpace*, %class.SkColorSpace** %21, align 8
  %33 = ptrtoint %class.SkColorSpace* %22 to i64
  %34 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 0, i32 3, i32 0, i32 1
  %35 = bitcast i32* %34 to i64*
  %36 = load i64, i64* %35, align 8, !noalias !26
  %37 = bitcast %struct.SkImageInfo* %16 to i64*
  store i64 %33, i64* %37, align 8
  %38 = icmp eq %class.SkColorSpace* %32, null
  br i1 %38, label %45, label %39

39:                                               ; preds = %29
  %40 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw add i32* %40, i32 -1 acq_rel
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %43, label %45

43:                                               ; preds = %39
  %44 = bitcast %class.SkColorSpace* %32 to i8*
  tail call void @_ZdlPv(i8* %44) #16
  br label %45

45:                                               ; preds = %24, %29, %39, %43
  %46 = phi i64 [ %27, %24 ], [ %36, %29 ], [ %36, %39 ], [ %36, %43 ]
  %47 = phi i64* [ %26, %24 ], [ %35, %29 ], [ %35, %39 ], [ %35, %43 ]
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 0, i32 3, i32 1
  %49 = bitcast %struct.SkISize* %48 to i64*
  store i64 %20, i64* %49, align 8
  %50 = bitcast %class.SkM44* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %50) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %50, i8* align 4 bitcast ([16 x float]* @constinit to i8*), i64 64, i1 false) #15
  %51 = load i32, i32* %8, align 4
  %52 = load i32, i32* %13, align 4
  %53 = bitcast %class.SkM44* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %53) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %53, i8* align 4 bitcast ([16 x float]* @constinit to i8*), i64 64, i1 false) #15
  call void @_ZN12SkBaseDevice25setDeviceCoordinateSystemERK5SkM44S2_ii(%class.SkBaseDevice* %5, %class.SkM44* nonnull dereferenceable(64) %3, %class.SkM44* nonnull dereferenceable(64) %4, i32 %51, i32 %52) #15
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %53) #15
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %50) #15
  %54 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 2, i32 0, i32 0, i64 160
  %55 = bitcast i8* %54 to %class.SkTArray*
  %56 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 2, i32 0, i32 0, i64 168
  %57 = bitcast i8* %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = and i64 %58, -4294967295
  store i64 %59, i64* %57, align 8
  call void @_ZN8SkTArrayIN16SkNoPixelsDevice9ClipStateELb0EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray* %55, i32 0, i32 2) #15
  %60 = load i64, i64* %57, align 8
  %61 = and i64 %60, -4294967297
  store i64 %61, i64* %57, align 8
  %62 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 1
  %63 = bitcast %struct.SkIRect* %62 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %63, i8 0, i64 16, i1 false) #15
  call void @_ZN8SkTArrayIN16SkNoPixelsDevice9ClipStateELb0EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray* %55, i32 1, i32 1) #15
  %64 = bitcast i8* %54 to %"struct.SkNoPixelsDevice::ClipState"**
  %65 = load %"struct.SkNoPixelsDevice::ClipState"*, %"struct.SkNoPixelsDevice::ClipState"** %64, align 8
  %66 = load i64, i64* %57, align 8
  %67 = lshr i64 %66, 1
  %68 = and i64 %67, 2147483647
  %69 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %65, i64 %68
  %70 = bitcast %"struct.SkNoPixelsDevice::ClipState"* %69 to i8*
  %71 = add i64 %66, 2
  %72 = and i64 %71, 4294967294
  %73 = and i64 %66, -4294967295
  %74 = or i64 %72, %73
  store i64 %74, i64* %57, align 8
  %75 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %65, i64 %68, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 16, i1 false) #15
  store i8 1, i8* %75, align 8
  %76 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %65, i64 %68, i32 0, i32 2
  store i8 0, i8* %76, align 1
  %77 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %65, i64 %68, i32 0, i32 3
  store %struct.SkIRect* null, %struct.SkIRect** %77, align 8
  %78 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %65, i64 %68, i32 1
  store i32 0, i32* %78, align 8
  %79 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 0, i32 3, i32 1, i32 0
  %80 = load i32, i32* %79, align 4
  %81 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 0, i32 3, i32 1, i32 1
  %82 = load i32, i32* %81, align 4
  %83 = zext i32 %82 to i64
  %84 = shl nuw i64 %83, 32
  %85 = zext i32 %80 to i64
  %86 = or i64 %84, %85
  %87 = bitcast %"struct.SkNoPixelsDevice::ClipState"* %69 to i64*
  store i64 0, i64* %87, align 8
  %88 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %65, i64 %68, i32 0, i32 0, i32 2
  %89 = bitcast i32* %88 to i64*
  store i64 %86, i64* %89, align 8
  store i8 1, i8* %75, align 8
  store i8 0, i8* %76, align 1
  store %struct.SkIRect* %62, %struct.SkIRect** %77, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK8SkCanvas23computeDeviceClipBoundsEb(%class.SkCanvas* nocapture readonly, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca { <2 x float>, <2 x float> }, align 8
  %4 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %5 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %4, align 8
  %6 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %5, i64 0, i32 1
  %7 = load %class.SkBaseDevice*, %class.SkBaseDevice** %6, align 8
  %8 = bitcast %class.SkBaseDevice* %7 to i32 (%class.SkBaseDevice*)***
  %9 = load i32 (%class.SkBaseDevice*)**, i32 (%class.SkBaseDevice*)*** %8, align 8
  %10 = getelementptr inbounds i32 (%class.SkBaseDevice*)*, i32 (%class.SkBaseDevice*)** %9, i64 22
  %11 = load i32 (%class.SkBaseDevice*)*, i32 (%class.SkBaseDevice*)** %10, align 8
  %12 = tail call i32 %11(%class.SkBaseDevice* %7) #15
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %47, label %14

14:                                               ; preds = %2
  %15 = bitcast { <2 x float>, <2 x float> }* %3 to %struct.SkRect*
  %16 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %7, i64 0, i32 5
  %17 = bitcast { <2 x float>, <2 x float> }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #15
  %18 = bitcast %class.SkBaseDevice* %7 to { i64, i64 } (%class.SkBaseDevice*)***
  %19 = load { i64, i64 } (%class.SkBaseDevice*)**, { i64, i64 } (%class.SkBaseDevice*)*** %18, align 8
  %20 = getelementptr inbounds { i64, i64 } (%class.SkBaseDevice*)*, { i64, i64 } (%class.SkBaseDevice*)** %19, i64 23
  %21 = load { i64, i64 } (%class.SkBaseDevice*)*, { i64, i64 } (%class.SkBaseDevice*)** %20, align 8
  %22 = tail call { i64, i64 } %21(%class.SkBaseDevice* %7) #15
  %23 = extractvalue { i64, i64 } %22, 0
  %24 = trunc i64 %23 to i32
  %25 = lshr i64 %23, 32
  %26 = trunc i64 %25 to i32
  %27 = extractvalue { i64, i64 } %22, 1
  %28 = sitofp i32 %24 to float
  %29 = insertelement <2 x float> undef, float %28, i32 0
  %30 = sitofp i32 %26 to float
  %31 = insertelement <2 x float> %29, float %30, i32 1
  %32 = trunc i64 %27 to i32
  %33 = sitofp i32 %32 to float
  %34 = insertelement <2 x float> undef, float %33, i32 0
  %35 = lshr i64 %27, 32
  %36 = trunc i64 %35 to i32
  %37 = sitofp i32 %36 to float
  %38 = insertelement <2 x float> %34, float %37, i32 1
  %39 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 0
  store <2 x float> %31, <2 x float>* %39, align 8
  %40 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 1
  store <2 x float> %38, <2 x float>* %40, align 8
  %41 = call { <2 x float>, <2 x float> } @_ZN12SkMatrixPriv7MapRectERK5SkM44RK6SkRect(%class.SkM44* dereferenceable(64) %16, %struct.SkRect* nonnull dereferenceable(16) %15) #15
  %42 = extractvalue { <2 x float>, <2 x float> } %41, 0
  %43 = extractvalue { <2 x float>, <2 x float> } %41, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #15
  br i1 %1, label %44, label %47

44:                                               ; preds = %14
  %45 = fadd <2 x float> %42, <float -1.000000e+00, float -1.000000e+00>
  %46 = fadd <2 x float> %43, <float 1.000000e+00, float 1.000000e+00>
  br label %47

47:                                               ; preds = %2, %14, %44
  %48 = phi <2 x float> [ %45, %44 ], [ %42, %14 ], [ zeroinitializer, %2 ]
  %49 = phi <2 x float> [ %46, %44 ], [ %43, %14 ], [ zeroinitializer, %2 ]
  %50 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %48, 0
  %51 = insertvalue { <2 x float>, <2 x float> } %50, <2 x float> %49, 1
  ret { <2 x float>, <2 x float> } %51
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas4initE5sk_spI12SkBaseDeviceE(%class.SkCanvas*, %class.sk_sp.2* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.sk_sp.3, align 8
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = alloca { i64, i64 }, align 8
  %6 = alloca %"class.std::__1::unique_ptr.19", align 8
  %7 = getelementptr inbounds %class.sk_sp.2, %class.sk_sp.2* %1, i64 0, i32 0
  %8 = load %class.SkBaseDevice*, %class.SkBaseDevice** %7, align 8
  %9 = icmp eq %class.SkBaseDevice* %8, null
  br i1 %9, label %10, label %42

10:                                               ; preds = %2
  %11 = bitcast { i64, i64 }* %5 to %struct.SkIRect*
  %12 = bitcast { i64, i64 }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #15
  %13 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 6
  %14 = bitcast %class.sk_sp.3* %3 to i8*
  %15 = bitcast { i64, i64 }* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14)
  %16 = tail call i8* @_Znwm(i64 488) #16, !noalias !31
  %17 = bitcast i8* %16 to %class.SkNoPixelsDevice*
  %18 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %3, i64 0, i32 0
  store %class.SkColorSpace* null, %class.SkColorSpace** %18, align 8, !noalias !31
  call void @_ZN16SkNoPixelsDeviceC2ERK7SkIRectRK14SkSurfaceProps5sk_spI12SkColorSpaceE(%class.SkNoPixelsDevice* nonnull %17, %struct.SkIRect* nonnull dereferenceable(16) %11, %class.SkSurfaceProps* dereferenceable(8) %13, %class.sk_sp.3* nonnull %3) #15, !noalias !31
  %19 = load %class.SkColorSpace*, %class.SkColorSpace** %18, align 8, !noalias !31
  %20 = icmp eq %class.SkColorSpace* %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %10
  %22 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i32* %22, i32 -1 acq_rel, !noalias !31
  %24 = icmp eq i32 %23, 1
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  %26 = bitcast %class.SkColorSpace* %19 to i8*
  call void @_ZdlPv(i8* %26) #16, !noalias !31
  br label %27

27:                                               ; preds = %10, %21, %25
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14)
  %28 = load %class.SkBaseDevice*, %class.SkBaseDevice** %7, align 8
  %29 = bitcast %class.sk_sp.2* %1 to i8**
  store i8* %16, i8** %29, align 8
  %30 = icmp eq %class.SkBaseDevice* %28, null
  br i1 %30, label %41, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %28, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = atomicrmw add i32* %32, i32 -1 acq_rel
  %34 = icmp eq i32 %33, 1
  br i1 %34, label %35, label %41

35:                                               ; preds = %31
  %36 = bitcast %class.SkBaseDevice* %28 to %class.SkRefCntBase*
  %37 = bitcast %class.SkBaseDevice* %28 to void (%class.SkRefCntBase*)***
  %38 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %37, align 8
  %39 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %38, i64 2
  %40 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, align 8
  call void %40(%class.SkRefCntBase* nonnull %36) #15
  br label %41

41:                                               ; preds = %35, %31, %27
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #15
  br label %42

42:                                               ; preds = %2, %41
  %43 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 7
  store i32 1, i32* %43, align 8
  %44 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 1
  %45 = call i8* @_ZN7SkDeque9push_backEv(%class.SkDeque* %44) #15
  %46 = bitcast %class.sk_sp.2* %1 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast i8* %45 to i64*
  store i64 0, i64* %48, align 8
  %49 = getelementptr inbounds i8, i8* %45, i64 8
  %50 = bitcast i8* %49 to i64*
  store i64 %47, i64* %50, align 8
  %51 = getelementptr inbounds i8, i8* %45, i64 16
  %52 = bitcast i8* %51 to i64*
  store i64 0, i64* %52, align 8
  %53 = getelementptr inbounds i8, i8* %45, i64 24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %53, i8* align 4 bitcast ([16 x float]* @constinit to i8*), i64 64, i1 false) #15
  %54 = getelementptr inbounds i8, i8* %45, i64 88
  %55 = bitcast i8* %54 to i32*
  store i32 0, i32* %55, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %53, i8* align 4 bitcast (%class.SkM44* @.ref.tmp.3 to i8*), i64 64, i1 false) #15
  %56 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %57 = bitcast %"class.SkCanvas::MCRec"** %56 to i8**
  store i8* %45, i8** %57, align 8
  %58 = call i8* @_Znwm(i64 40) #16, !noalias !34
  %59 = getelementptr inbounds i8, i8* %58, i64 8
  %60 = bitcast i8* %59 to i32*
  store i32 1, i32* %60, align 4, !noalias !34
  %61 = bitcast i8* %58 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV13SkMarkerStack, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %61, align 8, !noalias !34
  %62 = getelementptr inbounds i8, i8* %58, i64 16
  call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 24, i1 false) #15, !noalias !34
  %63 = ptrtoint i8* %58 to i64
  %64 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 3
  %65 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %64, i64 0, i32 0
  %66 = load %class.SkMarkerStack*, %class.SkMarkerStack** %65, align 8
  %67 = bitcast %class.sk_sp* %64 to i64*
  store i64 %63, i64* %67, align 8
  %68 = icmp eq %class.SkMarkerStack* %66, null
  br i1 %68, label %79, label %69

69:                                               ; preds = %42
  %70 = getelementptr inbounds %class.SkMarkerStack, %class.SkMarkerStack* %66, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = atomicrmw add i32* %70, i32 -1 acq_rel
  %72 = icmp eq i32 %71, 1
  br i1 %72, label %73, label %79

73:                                               ; preds = %69
  %74 = bitcast %class.SkMarkerStack* %66 to %class.SkRefCntBase*
  %75 = bitcast %class.SkMarkerStack* %66 to void (%class.SkRefCntBase*)***
  %76 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %75, align 8
  %77 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %76, i64 2
  %78 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %77, align 8
  call void %78(%class.SkRefCntBase* nonnull %74) #15
  br label %79

79:                                               ; preds = %73, %69, %42
  %80 = load %class.SkBaseDevice*, %class.SkBaseDevice** %7, align 8
  %81 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 10
  %82 = bitcast %class.SkBaseDevice* %80 to void (%class.SkBaseDevice*, %struct.SkIRect*)***
  %83 = load void (%class.SkBaseDevice*, %struct.SkIRect*)**, void (%class.SkBaseDevice*, %struct.SkIRect*)*** %82, align 8
  %84 = getelementptr inbounds void (%class.SkBaseDevice*, %struct.SkIRect*)*, void (%class.SkBaseDevice*, %struct.SkIRect*)** %83, i64 18
  %85 = load void (%class.SkBaseDevice*, %struct.SkIRect*)*, void (%class.SkBaseDevice*, %struct.SkIRect*)** %84, align 8
  call void %85(%class.SkBaseDevice* %80, %struct.SkIRect* %81) #15
  %86 = load %class.SkBaseDevice*, %class.SkBaseDevice** %7, align 8
  %87 = load i64, i64* %67, align 8
  %88 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %86, i64 0, i32 2
  %89 = bitcast %class.SkMarkerStack** %88 to i64*
  store i64 %87, i64* %89, align 8
  %90 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 9
  store %class.SkSurface_Base* null, %class.SkSurface_Base** %90, align 8
  %91 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 5
  %92 = load i64, i64* %46, align 8
  store %class.SkBaseDevice* null, %class.SkBaseDevice** %7, align 8
  %93 = getelementptr inbounds %class.sk_sp.2, %class.sk_sp.2* %91, i64 0, i32 0
  %94 = load %class.SkBaseDevice*, %class.SkBaseDevice** %93, align 8
  %95 = bitcast %class.sk_sp.2* %91 to i64*
  store i64 %92, i64* %95, align 8
  %96 = icmp eq %class.SkBaseDevice* %94, null
  br i1 %96, label %107, label %97

97:                                               ; preds = %79
  %98 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %94, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = atomicrmw add i32* %98, i32 -1 acq_rel
  %100 = icmp eq i32 %99, 1
  br i1 %100, label %101, label %107

101:                                              ; preds = %97
  %102 = bitcast %class.SkBaseDevice* %94 to %class.SkRefCntBase*
  %103 = bitcast %class.SkBaseDevice* %94 to void (%class.SkRefCntBase*)***
  %104 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %103, align 8
  %105 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %104, i64 2
  %106 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %105, align 8
  call void %106(%class.SkRefCntBase* nonnull %102) #15
  br label %107

107:                                              ; preds = %79, %97, %101
  %108 = bitcast %"class.std::__1::unique_ptr.19"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %108) #15
  %109 = call i8* @_Znwm(i64 128) #16
  %110 = getelementptr inbounds i8, i8* %109, i64 56
  %111 = bitcast i8* %110 to %class.SkGlyphRunList*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %109, i8 0, i64 128, i1 false) #15
  call void @_ZN14SkGlyphRunListC1Ev(%class.SkGlyphRunList* %111) #15
  %112 = getelementptr inbounds i8, i8* %109, i64 104
  call void @llvm.memset.p0i8.i64(i8* align 8 %112, i8 0, i64 24, i1 false) #15
  %113 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %6, i64 0, i32 0, i32 0, i32 0
  %114 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 12
  %115 = ptrtoint i8* %109 to i64
  store %class.SkGlyphRunBuilder* null, %class.SkGlyphRunBuilder** %113, align 8
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %114, i64 0, i32 0, i32 0, i32 0
  %117 = load %class.SkGlyphRunBuilder*, %class.SkGlyphRunBuilder** %116, align 8
  %118 = bitcast %"class.std::__1::unique_ptr.19"* %114 to i64*
  store i64 %115, i64* %118, align 8
  %119 = icmp eq %class.SkGlyphRunBuilder* %117, null
  br i1 %119, label %120, label %121

120:                                              ; preds = %107
  store %class.SkGlyphRunBuilder* null, %class.SkGlyphRunBuilder** %113, align 8
  br label %127

121:                                              ; preds = %107
  %122 = bitcast %"class.std::__1::unique_ptr.19"* %114 to %"struct.std::__1::default_delete.52"*
  call void @_ZNKSt3__114default_deleteI17SkGlyphRunBuilderEclEPS1_(%"struct.std::__1::default_delete.52"* %122, %class.SkGlyphRunBuilder* nonnull %117) #15
  %123 = load %class.SkGlyphRunBuilder*, %class.SkGlyphRunBuilder** %113, align 8
  store %class.SkGlyphRunBuilder* null, %class.SkGlyphRunBuilder** %113, align 8
  %124 = icmp eq %class.SkGlyphRunBuilder* %123, null
  br i1 %124, label %127, label %125

125:                                              ; preds = %121
  %126 = bitcast %"class.std::__1::unique_ptr.19"* %6 to %"struct.std::__1::default_delete.52"*
  call void @_ZNKSt3__114default_deleteI17SkGlyphRunBuilderEclEPS1_(%"struct.std::__1::default_delete.52"* nonnull %126, %class.SkGlyphRunBuilder* nonnull %123) #15
  br label %127

127:                                              ; preds = %120, %121, %125
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %108) #15
  %128 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %56, align 8
  %129 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %128, i64 0, i32 1
  %130 = load %class.SkBaseDevice*, %class.SkBaseDevice** %129, align 8
  %131 = bitcast %class.SkBaseDevice* %130 to i32 (%class.SkBaseDevice*)***
  %132 = load i32 (%class.SkBaseDevice*)**, i32 (%class.SkBaseDevice*)*** %131, align 8
  %133 = getelementptr inbounds i32 (%class.SkBaseDevice*)*, i32 (%class.SkBaseDevice*)** %132, i64 22
  %134 = load i32 (%class.SkBaseDevice*)*, i32 (%class.SkBaseDevice*)** %133, align 8
  %135 = call i32 %134(%class.SkBaseDevice* %130) #15
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %169, label %137

137:                                              ; preds = %127
  %138 = bitcast { <2 x float>, <2 x float> }* %4 to %struct.SkRect*
  %139 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %130, i64 0, i32 5
  %140 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %140) #15
  %141 = bitcast %class.SkBaseDevice* %130 to { i64, i64 } (%class.SkBaseDevice*)***
  %142 = load { i64, i64 } (%class.SkBaseDevice*)**, { i64, i64 } (%class.SkBaseDevice*)*** %141, align 8
  %143 = getelementptr inbounds { i64, i64 } (%class.SkBaseDevice*)*, { i64, i64 } (%class.SkBaseDevice*)** %142, i64 23
  %144 = load { i64, i64 } (%class.SkBaseDevice*)*, { i64, i64 } (%class.SkBaseDevice*)** %143, align 8
  %145 = call { i64, i64 } %144(%class.SkBaseDevice* %130) #15
  %146 = extractvalue { i64, i64 } %145, 0
  %147 = trunc i64 %146 to i32
  %148 = lshr i64 %146, 32
  %149 = trunc i64 %148 to i32
  %150 = extractvalue { i64, i64 } %145, 1
  %151 = sitofp i32 %147 to float
  %152 = insertelement <2 x float> undef, float %151, i32 0
  %153 = sitofp i32 %149 to float
  %154 = insertelement <2 x float> %152, float %153, i32 1
  %155 = trunc i64 %150 to i32
  %156 = sitofp i32 %155 to float
  %157 = insertelement <2 x float> undef, float %156, i32 0
  %158 = lshr i64 %150, 32
  %159 = trunc i64 %158 to i32
  %160 = sitofp i32 %159 to float
  %161 = insertelement <2 x float> %157, float %160, i32 1
  %162 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  store <2 x float> %154, <2 x float>* %162, align 8
  %163 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  store <2 x float> %161, <2 x float>* %163, align 8
  %164 = call { <2 x float>, <2 x float> } @_ZN12SkMatrixPriv7MapRectERK5SkM44RK6SkRect(%class.SkM44* dereferenceable(64) %139, %struct.SkRect* nonnull dereferenceable(16) %138) #15
  %165 = extractvalue { <2 x float>, <2 x float> } %164, 0
  %166 = extractvalue { <2 x float>, <2 x float> } %164, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %140) #15
  %167 = fadd <2 x float> %165, <float -1.000000e+00, float -1.000000e+00>
  %168 = fadd <2 x float> %166, <float 1.000000e+00, float 1.000000e+00>
  br label %169

169:                                              ; preds = %127, %137
  %170 = phi <2 x float> [ %167, %137 ], [ zeroinitializer, %127 ]
  %171 = phi <2 x float> [ %168, %137 ], [ zeroinitializer, %127 ]
  %172 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 11
  %173 = bitcast %struct.SkRect* %172 to <2 x float>*
  store <2 x float> %170, <2 x float>* %173, align 8
  %174 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 11, i32 2
  %175 = bitcast float* %174 to <2 x float>*
  store <2 x float> %171, <2 x float>* %175, align 8
  ret void
}

declare i8* @_ZN7SkDeque9push_backEv(%class.SkDeque*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvasC2Ev(%class.SkCanvas*) unnamed_addr #0 align 2 {
  %2 = alloca %class.sk_sp.2, align 8
  %3 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [56 x i8*] }, { [56 x i8*] }* @_ZTV8SkCanvas, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 1
  %5 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 4, i64 0
  %6 = bitcast i64* %5 to i8*
  tail call void @_ZN7SkDequeC1EmPvmi(%class.SkDeque* %4, i64 96, i8* %6, i64 3072, i32 1) #15
  %7 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 3, i32 0
  store %class.SkMarkerStack* null, %class.SkMarkerStack** %7, align 8
  %8 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 5, i32 0
  store %class.SkBaseDevice* null, %class.SkBaseDevice** %8, align 8
  %9 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 6
  tail call void @_ZN14SkSurfacePropsC1Ev(%class.SkSurfaceProps* %9) #15
  %10 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 8
  %11 = bitcast %"class.std::__1::unique_ptr"* %10 to i64*
  store i64 0, i64* %11, align 8
  %12 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 10
  %13 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 12
  %14 = bitcast %"class.std::__1::unique_ptr.19"* %13 to i64*
  store i64 0, i64* %14, align 8
  %15 = getelementptr inbounds %class.sk_sp.2, %class.sk_sp.2* %2, i64 0, i32 0
  %16 = bitcast %struct.SkIRect* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false)
  store %class.SkBaseDevice* null, %class.SkBaseDevice** %15, align 8
  call void @_ZN8SkCanvas4initE5sk_spI12SkBaseDeviceE(%class.SkCanvas* %0, %class.sk_sp.2* nonnull %2)
  %17 = load %class.SkBaseDevice*, %class.SkBaseDevice** %15, align 8
  %18 = icmp eq %class.SkBaseDevice* %17, null
  br i1 %18, label %29, label %19

19:                                               ; preds = %1
  %20 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %17, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw add i32* %20, i32 -1 acq_rel
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %29

23:                                               ; preds = %19
  %24 = bitcast %class.SkBaseDevice* %17 to %class.SkRefCntBase*
  %25 = bitcast %class.SkBaseDevice* %17 to void (%class.SkRefCntBase*)***
  %26 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %25, align 8
  %27 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %26, i64 2
  %28 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, align 8
  tail call void %28(%class.SkRefCntBase* nonnull %24) #15
  br label %29

29:                                               ; preds = %1, %19, %23
  ret void
}

declare void @_ZN7SkDequeC1EmPvmi(%class.SkDeque*, i64, i8*, i64, i32) unnamed_addr #4

declare void @_ZN14SkSurfacePropsC1Ev(%class.SkSurfaceProps*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvasC2EiiPK14SkSurfaceProps(%class.SkCanvas*, i32, i32, %class.SkSurfaceProps*) unnamed_addr #0 align 2 {
  %5 = alloca %class.sk_sp.3, align 8
  %6 = alloca %class.sk_sp.2, align 8
  %7 = alloca { i64, i64 }, align 8
  %8 = bitcast { i64, i64 }* %7 to %struct.SkIRect*
  %9 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [56 x i8*] }, { [56 x i8*] }* @_ZTV8SkCanvas, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 1
  %11 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 4, i64 0
  %12 = bitcast i64* %11 to i8*
  tail call void @_ZN7SkDequeC1EmPvmi(%class.SkDeque* %10, i64 96, i8* %12, i64 3072, i32 1) #15
  %13 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 3, i32 0
  store %class.SkMarkerStack* null, %class.SkMarkerStack** %13, align 8
  %14 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 5, i32 0
  store %class.SkBaseDevice* null, %class.SkBaseDevice** %14, align 8
  %15 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 6
  %16 = icmp eq %class.SkSurfaceProps* %3, null
  br i1 %16, label %18, label %17

17:                                               ; preds = %4
  tail call void @_ZN14SkSurfacePropsC1ERKS_(%class.SkSurfaceProps* %15, %class.SkSurfaceProps* nonnull dereferenceable(8) %3) #15
  br label %19

18:                                               ; preds = %4
  tail call void @_ZN14SkSurfacePropsC1Ev(%class.SkSurfaceProps* %15) #15
  br label %19

19:                                               ; preds = %17, %18
  %20 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 8
  %21 = bitcast %"class.std::__1::unique_ptr"* %20 to i64*
  store i64 0, i64* %21, align 8
  %22 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 10
  %23 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 12
  %24 = bitcast %"class.std::__1::unique_ptr.19"* %23 to i64*
  store i64 0, i64* %24, align 8
  %25 = bitcast { i64, i64 }* %7 to i8*
  %26 = bitcast %struct.SkIRect* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #15
  %27 = icmp sgt i32 %1, 0
  %28 = select i1 %27, i32 %1, i32 0
  %29 = icmp sgt i32 %2, 0
  %30 = select i1 %29, i32 %2, i32 0
  %31 = zext i32 %30 to i64
  %32 = shl nuw nsw i64 %31, 32
  %33 = zext i32 %28 to i64
  %34 = or i64 %32, %33
  %35 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 0
  store i64 0, i64* %35, align 8
  %36 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 1
  store i64 %34, i64* %36, align 8
  %37 = bitcast %class.sk_sp.3* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = tail call i8* @_Znwm(i64 488) #16, !noalias !37
  %39 = bitcast i8* %38 to %class.SkNoPixelsDevice*
  %40 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %5, i64 0, i32 0
  store %class.SkColorSpace* null, %class.SkColorSpace** %40, align 8, !noalias !37
  call void @_ZN16SkNoPixelsDeviceC2ERK7SkIRectRK14SkSurfaceProps5sk_spI12SkColorSpaceE(%class.SkNoPixelsDevice* nonnull %39, %struct.SkIRect* nonnull dereferenceable(16) %8, %class.SkSurfaceProps* dereferenceable(8) %15, %class.sk_sp.3* nonnull %5) #15, !noalias !37
  %41 = load %class.SkColorSpace*, %class.SkColorSpace** %40, align 8, !noalias !37
  %42 = icmp eq %class.SkColorSpace* %41, null
  br i1 %42, label %49, label %43

43:                                               ; preds = %19
  %44 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw add i32* %44, i32 -1 acq_rel, !noalias !37
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = bitcast %class.SkColorSpace* %41 to i8*
  call void @_ZdlPv(i8* %48) #16, !noalias !37
  br label %49

49:                                               ; preds = %19, %43, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  %50 = getelementptr inbounds %class.sk_sp.2, %class.sk_sp.2* %6, i64 0, i32 0
  %51 = bitcast %class.sk_sp.2* %6 to i8**
  store i8* %38, i8** %51, align 8
  call void @_ZN8SkCanvas4initE5sk_spI12SkBaseDeviceE(%class.SkCanvas* %0, %class.sk_sp.2* nonnull %6)
  %52 = load %class.SkBaseDevice*, %class.SkBaseDevice** %50, align 8
  %53 = icmp eq %class.SkBaseDevice* %52, null
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %52, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = atomicrmw add i32* %55, i32 -1 acq_rel
  %57 = icmp eq i32 %56, 1
  br i1 %57, label %58, label %64

58:                                               ; preds = %54
  %59 = bitcast %class.SkBaseDevice* %52 to %class.SkRefCntBase*
  %60 = bitcast %class.SkBaseDevice* %52 to void (%class.SkRefCntBase*)***
  %61 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %60, align 8
  %62 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %61, i64 2
  %63 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %62, align 8
  call void %63(%class.SkRefCntBase* nonnull %59) #15
  br label %64

64:                                               ; preds = %58, %54, %49
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvasC2ERK7SkIRect(%class.SkCanvas*, %struct.SkIRect* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = alloca %class.sk_sp.3, align 8
  %4 = alloca { i64, i64 }, align 8
  %5 = bitcast { i64, i64 }* %4 to %struct.SkIRect*
  %6 = alloca %class.sk_sp.2, align 8
  %7 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [56 x i8*] }, { [56 x i8*] }* @_ZTV8SkCanvas, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 1
  %9 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 4, i64 0
  %10 = bitcast i64* %9 to i8*
  tail call void @_ZN7SkDequeC1EmPvmi(%class.SkDeque* %8, i64 96, i8* %10, i64 3072, i32 1) #15
  %11 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 3, i32 0
  store %class.SkMarkerStack* null, %class.SkMarkerStack** %11, align 8
  %12 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 5, i32 0
  store %class.SkBaseDevice* null, %class.SkBaseDevice** %12, align 8
  %13 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 6
  tail call void @_ZN14SkSurfacePropsC1Ev(%class.SkSurfaceProps* %13) #15
  %14 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 8
  %15 = bitcast %"class.std::__1::unique_ptr"* %14 to i64*
  store i64 0, i64* %15, align 8
  %16 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 10
  %17 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 12
  %18 = bitcast %"class.std::__1::unique_ptr.19"* %17 to i64*
  store i64 0, i64* %18, align 8
  %19 = bitcast { i64, i64 }* %4 to i8*
  %20 = bitcast %struct.SkIRect* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #15
  %21 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 2
  %22 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 16, i1 false)
  %23 = load i32, i32* %21, align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = sext i32 %26 to i64
  %28 = sub nsw i64 %24, %27
  %29 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 3
  %30 = load i32, i32* %29, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = sext i32 %33 to i64
  %35 = sub nsw i64 %31, %34
  %36 = icmp slt i64 %28, 1
  %37 = icmp slt i64 %35, 1
  %38 = or i1 %36, %37
  br i1 %38, label %43, label %39

39:                                               ; preds = %2
  %40 = or i64 %35, %28
  %41 = add nsw i64 %40, 2147483648
  %42 = icmp ugt i64 %41, 4294967295
  br i1 %42, label %43, label %45

43:                                               ; preds = %2, %39
  %44 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 0, i64 16, i1 false)
  br label %47

45:                                               ; preds = %39
  %46 = bitcast %struct.SkIRect* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %19, i8* align 4 %46, i64 16, i1 false)
  br label %47

47:                                               ; preds = %45, %43
  %48 = bitcast %class.sk_sp.3* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48)
  %49 = tail call i8* @_Znwm(i64 488) #16, !noalias !40
  %50 = bitcast i8* %49 to %class.SkNoPixelsDevice*
  %51 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %3, i64 0, i32 0
  store %class.SkColorSpace* null, %class.SkColorSpace** %51, align 8, !noalias !40
  call void @_ZN16SkNoPixelsDeviceC2ERK7SkIRectRK14SkSurfaceProps5sk_spI12SkColorSpaceE(%class.SkNoPixelsDevice* nonnull %50, %struct.SkIRect* nonnull dereferenceable(16) %5, %class.SkSurfaceProps* dereferenceable(8) %13, %class.sk_sp.3* nonnull %3) #15, !noalias !40
  %52 = load %class.SkColorSpace*, %class.SkColorSpace** %51, align 8, !noalias !40
  %53 = icmp eq %class.SkColorSpace* %52, null
  br i1 %53, label %60, label %54

54:                                               ; preds = %47
  %55 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = atomicrmw add i32* %55, i32 -1 acq_rel, !noalias !40
  %57 = icmp eq i32 %56, 1
  br i1 %57, label %58, label %60

58:                                               ; preds = %54
  %59 = bitcast %class.SkColorSpace* %52 to i8*
  call void @_ZdlPv(i8* %59) #16, !noalias !40
  br label %60

60:                                               ; preds = %47, %54, %58
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48)
  %61 = getelementptr inbounds %class.sk_sp.2, %class.sk_sp.2* %6, i64 0, i32 0
  %62 = bitcast %class.sk_sp.2* %6 to i8**
  store i8* %49, i8** %62, align 8
  call void @_ZN8SkCanvas4initE5sk_spI12SkBaseDeviceE(%class.SkCanvas* %0, %class.sk_sp.2* nonnull %6)
  %63 = load %class.SkBaseDevice*, %class.SkBaseDevice** %61, align 8
  %64 = icmp eq %class.SkBaseDevice* %63, null
  br i1 %64, label %75, label %65

65:                                               ; preds = %60
  %66 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %63, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = atomicrmw add i32* %66, i32 -1 acq_rel
  %68 = icmp eq i32 %67, 1
  br i1 %68, label %69, label %75

69:                                               ; preds = %65
  %70 = bitcast %class.SkBaseDevice* %63 to %class.SkRefCntBase*
  %71 = bitcast %class.SkBaseDevice* %63 to void (%class.SkRefCntBase*)***
  %72 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %71, align 8
  %73 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %72, i64 2
  %74 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %73, align 8
  call void %74(%class.SkRefCntBase* nonnull %70) #15
  br label %75

75:                                               ; preds = %69, %65, %60
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvasC2E5sk_spI12SkBaseDeviceE(%class.SkCanvas*, %class.sk_sp.2* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca %class.sk_sp.2, align 8
  %4 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [56 x i8*] }, { [56 x i8*] }* @_ZTV8SkCanvas, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 1
  %6 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 4, i64 0
  %7 = bitcast i64* %6 to i8*
  tail call void @_ZN7SkDequeC1EmPvmi(%class.SkDeque* %5, i64 96, i8* %7, i64 3072, i32 1) #15
  %8 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 3, i32 0
  store %class.SkMarkerStack* null, %class.SkMarkerStack** %8, align 8
  %9 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 5, i32 0
  store %class.SkBaseDevice* null, %class.SkBaseDevice** %9, align 8
  %10 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 6
  %11 = getelementptr inbounds %class.sk_sp.2, %class.sk_sp.2* %1, i64 0, i32 0
  %12 = load %class.SkBaseDevice*, %class.SkBaseDevice** %11, align 8
  %13 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %12, i64 0, i32 4
  tail call void @_ZN14SkSurfacePropsC1ERKS_(%class.SkSurfaceProps* %10, %class.SkSurfaceProps* dereferenceable(8) %13) #15
  %14 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 8
  %15 = bitcast %"class.std::__1::unique_ptr"* %14 to i64*
  store i64 0, i64* %15, align 8
  %16 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 10
  %17 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 12
  %18 = bitcast %"class.std::__1::unique_ptr.19"* %17 to i64*
  store i64 0, i64* %18, align 8
  %19 = getelementptr inbounds %class.sk_sp.2, %class.sk_sp.2* %3, i64 0, i32 0
  %20 = bitcast %struct.SkIRect* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false)
  %21 = load %class.SkBaseDevice*, %class.SkBaseDevice** %11, align 8
  %22 = icmp eq %class.SkBaseDevice* %21, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %2
  %24 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %21, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw add i32* %24, i32 1 monotonic
  br label %26

26:                                               ; preds = %2, %23
  store %class.SkBaseDevice* %21, %class.SkBaseDevice** %19, align 8
  call void @_ZN8SkCanvas4initE5sk_spI12SkBaseDeviceE(%class.SkCanvas* %0, %class.sk_sp.2* nonnull %3)
  %27 = load %class.SkBaseDevice*, %class.SkBaseDevice** %19, align 8
  %28 = icmp eq %class.SkBaseDevice* %27, null
  br i1 %28, label %39, label %29

29:                                               ; preds = %26
  %30 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %27, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw add i32* %30, i32 -1 acq_rel
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %39

33:                                               ; preds = %29
  %34 = bitcast %class.SkBaseDevice* %27 to %class.SkRefCntBase*
  %35 = bitcast %class.SkBaseDevice* %27 to void (%class.SkRefCntBase*)***
  %36 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %35, align 8
  %37 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %36, i64 2
  %38 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %37, align 8
  tail call void %38(%class.SkRefCntBase* nonnull %34) #15
  br label %39

39:                                               ; preds = %26, %29, %33
  ret void
}

declare void @_ZN14SkSurfacePropsC1ERKS_(%class.SkSurfaceProps*, %class.SkSurfaceProps* dereferenceable(8)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvasC2ERK8SkBitmapRK14SkSurfaceProps(%class.SkCanvas*, %class.SkBitmap* dereferenceable(56), %class.SkSurfaceProps* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = alloca %class.sk_sp.2, align 8
  %5 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [56 x i8*] }, { [56 x i8*] }* @_ZTV8SkCanvas, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 1
  %7 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 4, i64 0
  %8 = bitcast i64* %7 to i8*
  tail call void @_ZN7SkDequeC1EmPvmi(%class.SkDeque* %6, i64 96, i8* %8, i64 3072, i32 1) #15
  %9 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 3, i32 0
  store %class.SkMarkerStack* null, %class.SkMarkerStack** %9, align 8
  %10 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 5, i32 0
  store %class.SkBaseDevice* null, %class.SkBaseDevice** %10, align 8
  %11 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 6
  tail call void @_ZN14SkSurfacePropsC1ERKS_(%class.SkSurfaceProps* %11, %class.SkSurfaceProps* dereferenceable(8) %2) #15
  %12 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 8
  %13 = bitcast %"class.std::__1::unique_ptr"* %12 to i64*
  store i64 0, i64* %13, align 8
  %14 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 10
  %15 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 12
  %16 = bitcast %"class.std::__1::unique_ptr.19"* %15 to i64*
  store i64 0, i64* %16, align 8
  %17 = bitcast %struct.SkIRect* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false)
  %18 = tail call i8* @_Znwm(i64 1944) #16
  %19 = bitcast i8* %18 to %class.SkBitmapDevice*
  tail call void @_ZN14SkBitmapDeviceC1ERK8SkBitmapRK14SkSurfacePropsPvPS1_(%class.SkBitmapDevice* nonnull %19, %class.SkBitmap* dereferenceable(56) %1, %class.SkSurfaceProps* dereferenceable(8) %11, i8* null, %class.SkBitmap* null) #15
  %20 = getelementptr inbounds %class.sk_sp.2, %class.sk_sp.2* %4, i64 0, i32 0
  %21 = getelementptr inbounds i8, i8* %18, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = atomicrmw add i32* %22, i32 1 monotonic
  %24 = bitcast %class.sk_sp.2* %4 to i8**
  store i8* %18, i8** %24, align 8
  call void @_ZN8SkCanvas4initE5sk_spI12SkBaseDeviceE(%class.SkCanvas* %0, %class.sk_sp.2* nonnull %4)
  %25 = load %class.SkBaseDevice*, %class.SkBaseDevice** %20, align 8
  %26 = icmp eq %class.SkBaseDevice* %25, null
  br i1 %26, label %37, label %27

27:                                               ; preds = %3
  %28 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %25, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = atomicrmw add i32* %28, i32 -1 acq_rel
  %30 = icmp eq i32 %29, 1
  br i1 %30, label %31, label %37

31:                                               ; preds = %27
  %32 = bitcast %class.SkBaseDevice* %25 to %class.SkRefCntBase*
  %33 = bitcast %class.SkBaseDevice* %25 to void (%class.SkRefCntBase*)***
  %34 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %33, align 8
  %35 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %34, i64 2
  %36 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %35, align 8
  tail call void %36(%class.SkRefCntBase* nonnull %32) #15
  br label %37

37:                                               ; preds = %31, %27, %3
  %38 = atomicrmw add i32* %22, i32 -1 acq_rel
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %40, label %46

40:                                               ; preds = %37
  %41 = bitcast i8* %18 to %class.SkRefCntBase*
  %42 = bitcast i8* %18 to void (%class.SkRefCntBase*)***
  %43 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %42, align 8
  %44 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %43, i64 2
  %45 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %44, align 8
  tail call void %45(%class.SkRefCntBase* nonnull %41) #15
  br label %46

46:                                               ; preds = %37, %40
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZN14SkBitmapDeviceC1ERK8SkBitmapRK14SkSurfacePropsPvPS1_(%class.SkBitmapDevice*, %class.SkBitmap* dereferenceable(56), %class.SkSurfaceProps* dereferenceable(8), i8*, %class.SkBitmap*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvasC2ERK8SkBitmapNSt3__110unique_ptrI23SkRasterHandleAllocatorNS3_14default_deleteIS5_EEEEPv(%class.SkCanvas*, %class.SkBitmap* dereferenceable(56), %class.SkRasterHandleAllocator*, i8*) unnamed_addr #0 align 2 {
  %5 = alloca %class.sk_sp.2, align 8
  %6 = ptrtoint %class.SkRasterHandleAllocator* %2 to i64
  %7 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [56 x i8*] }, { [56 x i8*] }* @_ZTV8SkCanvas, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 1
  %9 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 4, i64 0
  %10 = bitcast i64* %9 to i8*
  tail call void @_ZN7SkDequeC1EmPvmi(%class.SkDeque* %8, i64 96, i8* %10, i64 3072, i32 1) #15
  %11 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 3, i32 0
  store %class.SkMarkerStack* null, %class.SkMarkerStack** %11, align 8
  %12 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 5, i32 0
  store %class.SkBaseDevice* null, %class.SkBaseDevice** %12, align 8
  %13 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 6
  tail call void @_ZN14SkSurfacePropsC1Ev(%class.SkSurfaceProps* %13) #15
  %14 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 8
  %15 = bitcast %"class.std::__1::unique_ptr"* %14 to i64*
  store i64 %6, i64* %15, align 8
  %16 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 10
  %17 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 12
  %18 = bitcast %"class.std::__1::unique_ptr.19"* %17 to i64*
  store i64 0, i64* %18, align 8
  %19 = bitcast %struct.SkIRect* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false)
  %20 = tail call i8* @_Znwm(i64 1944) #16
  %21 = bitcast i8* %20 to %class.SkBitmapDevice*
  tail call void @_ZN14SkBitmapDeviceC1ERK8SkBitmapRK14SkSurfacePropsPvPS1_(%class.SkBitmapDevice* nonnull %21, %class.SkBitmap* dereferenceable(56) %1, %class.SkSurfaceProps* dereferenceable(8) %13, i8* %3, %class.SkBitmap* null) #15
  %22 = getelementptr inbounds %class.sk_sp.2, %class.sk_sp.2* %5, i64 0, i32 0
  %23 = getelementptr inbounds i8, i8* %20, i64 8
  %24 = bitcast i8* %23 to i32*
  %25 = atomicrmw add i32* %24, i32 1 monotonic
  %26 = bitcast %class.sk_sp.2* %5 to i8**
  store i8* %20, i8** %26, align 8
  call void @_ZN8SkCanvas4initE5sk_spI12SkBaseDeviceE(%class.SkCanvas* %0, %class.sk_sp.2* nonnull %5)
  %27 = load %class.SkBaseDevice*, %class.SkBaseDevice** %22, align 8
  %28 = icmp eq %class.SkBaseDevice* %27, null
  br i1 %28, label %39, label %29

29:                                               ; preds = %4
  %30 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %27, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw add i32* %30, i32 -1 acq_rel
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %39

33:                                               ; preds = %29
  %34 = bitcast %class.SkBaseDevice* %27 to %class.SkRefCntBase*
  %35 = bitcast %class.SkBaseDevice* %27 to void (%class.SkRefCntBase*)***
  %36 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %35, align 8
  %37 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %36, i64 2
  %38 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %37, align 8
  tail call void %38(%class.SkRefCntBase* nonnull %34) #15
  br label %39

39:                                               ; preds = %33, %29, %4
  %40 = atomicrmw add i32* %24, i32 -1 acq_rel
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %42, label %48

42:                                               ; preds = %39
  %43 = bitcast i8* %20 to %class.SkRefCntBase*
  %44 = bitcast i8* %20 to void (%class.SkRefCntBase*)***
  %45 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %44, align 8
  %46 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %45, i64 2
  %47 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %46, align 8
  tail call void %47(%class.SkRefCntBase* nonnull %43) #15
  br label %48

48:                                               ; preds = %42, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvasC2ERK8SkBitmap(%class.SkCanvas*, %class.SkBitmap* dereferenceable(56)) unnamed_addr #0 align 2 {
  tail call void @_ZN8SkCanvasC2ERK8SkBitmapNSt3__110unique_ptrI23SkRasterHandleAllocatorNS3_14default_deleteIS5_EEEEPv(%class.SkCanvas* %0, %class.SkBitmap* dereferenceable(56) %1, %class.SkRasterHandleAllocator* null, i8* null)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas15internalRestoreEv(%class.SkCanvas*) local_unnamed_addr #0 align 2 {
  %2 = alloca { <2 x float>, <2 x float> }, align 8
  %3 = alloca %class.SkPaint, align 8
  %4 = alloca %class.SkMatrix, align 16
  %5 = alloca %struct.SkSamplingOptions, align 4
  %6 = alloca %struct.SkSamplingOptions, align 4
  %7 = alloca [16 x float], align 4
  %8 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %9 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %8, align 8
  %10 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.SkCanvas::MCRec"* %9 to i64*
  %12 = load i64, i64* %11, align 8
  store %"struct.(anonymous namespace)::Layer"* null, %"struct.(anonymous namespace)::Layer"** %10, align 8
  %13 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %8, align 8
  %14 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %13, i64 0, i32 2
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.71", %"class.std::__1::unique_ptr.71"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.71"* %14 to i64*
  %17 = load i64, i64* %16, align 8
  store %"struct.(anonymous namespace)::BackImage"* null, %"struct.(anonymous namespace)::BackImage"** %15, align 8
  %18 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 3, i32 0
  %19 = load %class.SkMarkerStack*, %class.SkMarkerStack** %18, align 8
  %20 = bitcast %"class.SkCanvas::MCRec"** %8 to i8**
  %21 = load i8*, i8** %20, align 8
  tail call void @_ZN13SkMarkerStack7restoreEPv(%class.SkMarkerStack* %19, i8* %21) #15
  %22 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %8, align 8
  %23 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %22, i64 0, i32 2, i32 0, i32 0, i32 0
  %24 = load %"struct.(anonymous namespace)::BackImage"*, %"struct.(anonymous namespace)::BackImage"** %23, align 8
  store %"struct.(anonymous namespace)::BackImage"* null, %"struct.(anonymous namespace)::BackImage"** %23, align 8
  %25 = icmp eq %"struct.(anonymous namespace)::BackImage"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %1
  %27 = getelementptr inbounds %"struct.(anonymous namespace)::BackImage", %"struct.(anonymous namespace)::BackImage"* %24, i64 0, i32 0, i32 0
  %28 = load %class.SkSpecialImage*, %class.SkSpecialImage** %27, align 8
  %29 = icmp eq %class.SkSpecialImage* %28, null
  br i1 %29, label %40, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %28, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw add i32* %31, i32 -1 acq_rel
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %40

34:                                               ; preds = %30
  %35 = bitcast %class.SkSpecialImage* %28 to %class.SkRefCntBase*
  %36 = bitcast %class.SkSpecialImage* %28 to void (%class.SkRefCntBase*)***
  %37 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %36, align 8
  %38 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %37, i64 2
  %39 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %38, align 8
  tail call void %39(%class.SkRefCntBase* nonnull %35) #15
  br label %40

40:                                               ; preds = %34, %30, %26
  %41 = bitcast %"struct.(anonymous namespace)::BackImage"* %24 to i8*
  tail call void @_ZdlPv(i8* %41) #16
  br label %42

42:                                               ; preds = %1, %40
  %43 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %22, i64 0, i32 0, i32 0, i32 0, i32 0
  %44 = load %"struct.(anonymous namespace)::Layer"*, %"struct.(anonymous namespace)::Layer"** %43, align 8
  store %"struct.(anonymous namespace)::Layer"* null, %"struct.(anonymous namespace)::Layer"** %43, align 8
  %45 = icmp eq %"struct.(anonymous namespace)::Layer"* %44, null
  br i1 %45, label %68, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"struct.(anonymous namespace)::Layer", %"struct.(anonymous namespace)::Layer"* %44, i64 0, i32 1, i32 0, i32 0, i32 0
  %48 = load %class.SkPaint*, %class.SkPaint** %47, align 8
  store %class.SkPaint* null, %class.SkPaint** %47, align 8
  %49 = icmp eq %class.SkPaint* %48, null
  br i1 %49, label %52, label %50

50:                                               ; preds = %46
  tail call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %48) #15
  %51 = bitcast %class.SkPaint* %48 to i8*
  tail call void @_ZdlPv(i8* %51) #16
  br label %52

52:                                               ; preds = %50, %46
  %53 = getelementptr inbounds %"struct.(anonymous namespace)::Layer", %"struct.(anonymous namespace)::Layer"* %44, i64 0, i32 0, i32 0
  %54 = load %class.SkBaseDevice*, %class.SkBaseDevice** %53, align 8
  %55 = icmp eq %class.SkBaseDevice* %54, null
  br i1 %55, label %66, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %54, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = atomicrmw add i32* %57, i32 -1 acq_rel
  %59 = icmp eq i32 %58, 1
  br i1 %59, label %60, label %66

60:                                               ; preds = %56
  %61 = bitcast %class.SkBaseDevice* %54 to %class.SkRefCntBase*
  %62 = bitcast %class.SkBaseDevice* %54 to void (%class.SkRefCntBase*)***
  %63 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %62, align 8
  %64 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %63, i64 2
  %65 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %64, align 8
  tail call void %65(%class.SkRefCntBase* nonnull %61) #15
  br label %66

66:                                               ; preds = %60, %56, %52
  %67 = bitcast %"struct.(anonymous namespace)::Layer"* %44 to i8*
  tail call void @_ZdlPv(i8* %67) #16
  br label %68

68:                                               ; preds = %42, %66
  %69 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 1
  tail call void @_ZN7SkDeque8pop_backEv(%class.SkDeque* %69) #15
  %70 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 1, i32 1
  %71 = load i8*, i8** %70, align 8
  store i8* %71, i8** %20, align 8
  %72 = icmp eq i8* %71, null
  br i1 %72, label %192, label %73

73:                                               ; preds = %68
  %74 = getelementptr inbounds i8, i8* %71, i64 8
  %75 = bitcast i8* %74 to %class.SkBaseDevice**
  %76 = load %class.SkBaseDevice*, %class.SkBaseDevice** %75, align 8
  %77 = getelementptr inbounds i8, i8* %71, i64 24
  %78 = bitcast i8* %77 to %class.SkM44*
  %79 = bitcast %class.SkBaseDevice* %76 to void (%class.SkBaseDevice*)***
  %80 = load void (%class.SkBaseDevice*)**, void (%class.SkBaseDevice*)*** %79, align 8
  %81 = getelementptr inbounds void (%class.SkBaseDevice*)*, void (%class.SkBaseDevice*)** %80, i64 11
  %82 = load void (%class.SkBaseDevice*)*, void (%class.SkBaseDevice*)** %81, align 8
  tail call void %82(%class.SkBaseDevice* %76) #15
  tail call void @_ZN12SkBaseDevice12setGlobalCTMERK5SkM44(%class.SkBaseDevice* %76, %class.SkM44* dereferenceable(64) %78) #15
  %83 = inttoptr i64 %17 to %"struct.(anonymous namespace)::BackImage"*
  %84 = icmp eq i64 %17, 0
  br i1 %84, label %116, label %85

85:                                               ; preds = %73
  %86 = bitcast %class.SkPaint* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %86) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %86, i8* align 8 bitcast (%class.SkPaint* @__const._ZL25clean_paint_for_drawImagePK7SkPaint.cleaned to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %3) #15
  %87 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %3, i64 0, i32 8, i32 0, i32 0
  %88 = load i32, i32* %87, align 8
  %89 = and i32 %88, -261121
  %90 = or i32 %89, 4096
  store i32 %90, i32* %87, align 8
  %91 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %8, align 8
  %92 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %91, i64 0, i32 1
  %93 = load %class.SkBaseDevice*, %class.SkBaseDevice** %92, align 8
  %94 = getelementptr inbounds %"struct.(anonymous namespace)::BackImage", %"struct.(anonymous namespace)::BackImage"* %83, i64 0, i32 0, i32 0
  %95 = load %class.SkSpecialImage*, %class.SkSpecialImage** %94, align 8
  %96 = bitcast %class.SkMatrix* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %96) #15
  %97 = getelementptr inbounds %"struct.(anonymous namespace)::BackImage", %"struct.(anonymous namespace)::BackImage"* %83, i64 0, i32 1
  %98 = bitcast %struct.SkIPoint* %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = trunc i64 %99 to i32
  %101 = lshr i64 %99, 32
  %102 = trunc i64 %101 to i32
  %103 = sitofp i32 %100 to float
  %104 = sitofp i32 %102 to float
  %105 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 1
  %106 = bitcast %class.SkMatrix* %4 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %106, align 16, !alias.scope !43
  %107 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 0, i64 4
  %108 = bitcast float* %107 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %108, align 16, !alias.scope !43
  %109 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %109, align 16, !alias.scope !43
  store i32 16, i32* %105, align 4, !alias.scope !43
  %110 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12setTranslateEff(%class.SkMatrix* nonnull %4, float %103, float %104) #15
  %111 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %111) #15
  %112 = bitcast %class.SkBaseDevice* %93 to void (%class.SkBaseDevice*, %class.SkSpecialImage*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*)***
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %111, i8 0, i64 20, i1 false)
  %113 = load void (%class.SkBaseDevice*, %class.SkSpecialImage*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*)**, void (%class.SkBaseDevice*, %class.SkSpecialImage*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*)*** %112, align 8
  %114 = getelementptr inbounds void (%class.SkBaseDevice*, %class.SkSpecialImage*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*)*, void (%class.SkBaseDevice*, %class.SkSpecialImage*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*)** %113, i64 45
  %115 = load void (%class.SkBaseDevice*, %class.SkSpecialImage*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*)*, void (%class.SkBaseDevice*, %class.SkSpecialImage*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*)** %114, align 8
  call void %115(%class.SkBaseDevice* %93, %class.SkSpecialImage* %95, %class.SkMatrix* nonnull dereferenceable(40) %4, %struct.SkSamplingOptions* nonnull dereferenceable(20) %5, %class.SkPaint* nonnull dereferenceable(72) %3) #15
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %111) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %96) #15
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %3) #15
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %86) #15
  br label %116

116:                                              ; preds = %73, %85
  %117 = inttoptr i64 %12 to %"struct.(anonymous namespace)::Layer"*
  %118 = icmp eq i64 %12, 0
  br i1 %118, label %143, label %119

119:                                              ; preds = %116
  %120 = getelementptr inbounds %"struct.(anonymous namespace)::Layer", %"struct.(anonymous namespace)::Layer"* %117, i64 0, i32 0, i32 0
  %121 = load %class.SkBaseDevice*, %class.SkBaseDevice** %120, align 8
  %122 = bitcast %class.SkBaseDevice* %121 to void (%class.SkBaseDevice*)***
  %123 = load void (%class.SkBaseDevice*)**, void (%class.SkBaseDevice*)*** %122, align 8
  %124 = getelementptr inbounds void (%class.SkBaseDevice*)*, void (%class.SkBaseDevice*)** %123, i64 50
  %125 = load void (%class.SkBaseDevice*)*, void (%class.SkBaseDevice*)** %124, align 8
  call void %125(%class.SkBaseDevice* %121) #15
  %126 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %126) #15
  %127 = bitcast %struct.SkSamplingOptions* %6 to i32*
  store i32 -1431655766, i32* %127, align 4
  store i8 0, i8* %126, align 4
  %128 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %6, i64 0, i32 1, i32 0
  %129 = bitcast float* %128 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %129, i8 0, i64 16, i1 false) #15
  %130 = load %class.SkBaseDevice*, %class.SkBaseDevice** %120, align 8
  %131 = getelementptr inbounds %"struct.(anonymous namespace)::Layer", %"struct.(anonymous namespace)::Layer"* %117, i64 0, i32 1, i32 0, i32 0, i32 0
  %132 = load %class.SkPaint*, %class.SkPaint** %131, align 8
  call void @_ZN8SkCanvas18internalDrawDeviceEP12SkBaseDeviceRK17SkSamplingOptionsPK7SkPaint(%class.SkCanvas* %0, %class.SkBaseDevice* %130, %struct.SkSamplingOptions* nonnull dereferenceable(20) %6, %class.SkPaint* %132)
  %133 = bitcast [16 x float]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %133)
  %134 = getelementptr inbounds %"struct.(anonymous namespace)::Layer", %"struct.(anonymous namespace)::Layer"* %117, i64 0, i32 2
  %135 = bitcast %class.SkM44* %134 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %133, i8* align 8 %135, i64 64, i1 false)
  %136 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %8, align 8
  %137 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %136, i64 0, i32 3
  %138 = bitcast %class.SkM44* %137 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %138, i8* nonnull align 4 %133, i64 64, i1 false)
  %139 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %8, align 8
  %140 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %139, i64 0, i32 1
  %141 = load %class.SkBaseDevice*, %class.SkBaseDevice** %140, align 8
  %142 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %139, i64 0, i32 3
  call void @_ZN12SkBaseDevice12setGlobalCTMERK5SkM44(%class.SkBaseDevice* %141, %class.SkM44* dereferenceable(64) %142) #15
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %133)
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %126) #15
  br label %143

143:                                              ; preds = %116, %119
  %144 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %8, align 8
  %145 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %144, i64 0, i32 1
  %146 = load %class.SkBaseDevice*, %class.SkBaseDevice** %145, align 8
  %147 = bitcast %class.SkBaseDevice* %146 to i32 (%class.SkBaseDevice*)***
  %148 = load i32 (%class.SkBaseDevice*)**, i32 (%class.SkBaseDevice*)*** %147, align 8
  %149 = getelementptr inbounds i32 (%class.SkBaseDevice*)*, i32 (%class.SkBaseDevice*)** %148, i64 22
  %150 = load i32 (%class.SkBaseDevice*)*, i32 (%class.SkBaseDevice*)** %149, align 8
  %151 = call i32 %150(%class.SkBaseDevice* %146) #15
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %185, label %153

153:                                              ; preds = %143
  %154 = bitcast { <2 x float>, <2 x float> }* %2 to %struct.SkRect*
  %155 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %146, i64 0, i32 5
  %156 = bitcast { <2 x float>, <2 x float> }* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %156) #15
  %157 = bitcast %class.SkBaseDevice* %146 to { i64, i64 } (%class.SkBaseDevice*)***
  %158 = load { i64, i64 } (%class.SkBaseDevice*)**, { i64, i64 } (%class.SkBaseDevice*)*** %157, align 8
  %159 = getelementptr inbounds { i64, i64 } (%class.SkBaseDevice*)*, { i64, i64 } (%class.SkBaseDevice*)** %158, i64 23
  %160 = load { i64, i64 } (%class.SkBaseDevice*)*, { i64, i64 } (%class.SkBaseDevice*)** %159, align 8
  %161 = call { i64, i64 } %160(%class.SkBaseDevice* %146) #15
  %162 = extractvalue { i64, i64 } %161, 0
  %163 = trunc i64 %162 to i32
  %164 = lshr i64 %162, 32
  %165 = trunc i64 %164 to i32
  %166 = extractvalue { i64, i64 } %161, 1
  %167 = sitofp i32 %163 to float
  %168 = insertelement <2 x float> undef, float %167, i32 0
  %169 = sitofp i32 %165 to float
  %170 = insertelement <2 x float> %168, float %169, i32 1
  %171 = trunc i64 %166 to i32
  %172 = sitofp i32 %171 to float
  %173 = insertelement <2 x float> undef, float %172, i32 0
  %174 = lshr i64 %166, 32
  %175 = trunc i64 %174 to i32
  %176 = sitofp i32 %175 to float
  %177 = insertelement <2 x float> %173, float %176, i32 1
  %178 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %2, i64 0, i32 0
  store <2 x float> %170, <2 x float>* %178, align 8
  %179 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %2, i64 0, i32 1
  store <2 x float> %177, <2 x float>* %179, align 8
  %180 = call { <2 x float>, <2 x float> } @_ZN12SkMatrixPriv7MapRectERK5SkM44RK6SkRect(%class.SkM44* dereferenceable(64) %155, %struct.SkRect* nonnull dereferenceable(16) %154) #15
  %181 = extractvalue { <2 x float>, <2 x float> } %180, 0
  %182 = extractvalue { <2 x float>, <2 x float> } %180, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %156) #15
  %183 = fadd <2 x float> %181, <float -1.000000e+00, float -1.000000e+00>
  %184 = fadd <2 x float> %182, <float 1.000000e+00, float 1.000000e+00>
  br label %185

185:                                              ; preds = %143, %153
  %186 = phi <2 x float> [ %183, %153 ], [ zeroinitializer, %143 ]
  %187 = phi <2 x float> [ %184, %153 ], [ zeroinitializer, %143 ]
  %188 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 11
  %189 = bitcast %struct.SkRect* %188 to <2 x float>*
  store <2 x float> %186, <2 x float>* %189, align 8
  %190 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 11, i32 2
  %191 = bitcast float* %190 to <2 x float>*
  store <2 x float> %187, <2 x float>* %191, align 8
  br label %192

192:                                              ; preds = %68, %185
  %193 = icmp eq i64 %17, 0
  br i1 %193, label %211, label %194

194:                                              ; preds = %192
  %195 = inttoptr i64 %17 to %"struct.(anonymous namespace)::BackImage"*
  %196 = getelementptr inbounds %"struct.(anonymous namespace)::BackImage", %"struct.(anonymous namespace)::BackImage"* %195, i64 0, i32 0, i32 0
  %197 = load %class.SkSpecialImage*, %class.SkSpecialImage** %196, align 8
  %198 = icmp eq %class.SkSpecialImage* %197, null
  br i1 %198, label %209, label %199

199:                                              ; preds = %194
  %200 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %197, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %201 = atomicrmw add i32* %200, i32 -1 acq_rel
  %202 = icmp eq i32 %201, 1
  br i1 %202, label %203, label %209

203:                                              ; preds = %199
  %204 = bitcast %class.SkSpecialImage* %197 to %class.SkRefCntBase*
  %205 = bitcast %class.SkSpecialImage* %197 to void (%class.SkRefCntBase*)***
  %206 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %205, align 8
  %207 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %206, i64 2
  %208 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %207, align 8
  call void %208(%class.SkRefCntBase* nonnull %204) #15
  br label %209

209:                                              ; preds = %203, %199, %194
  %210 = inttoptr i64 %17 to i8*
  call void @_ZdlPv(i8* %210) #16
  br label %211

211:                                              ; preds = %192, %209
  %212 = inttoptr i64 %12 to %"struct.(anonymous namespace)::Layer"*
  %213 = icmp eq i64 %12, 0
  br i1 %213, label %236, label %214

214:                                              ; preds = %211
  %215 = getelementptr inbounds %"struct.(anonymous namespace)::Layer", %"struct.(anonymous namespace)::Layer"* %212, i64 0, i32 1, i32 0, i32 0, i32 0
  %216 = load %class.SkPaint*, %class.SkPaint** %215, align 8
  store %class.SkPaint* null, %class.SkPaint** %215, align 8
  %217 = icmp eq %class.SkPaint* %216, null
  br i1 %217, label %220, label %218

218:                                              ; preds = %214
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %216) #15
  %219 = bitcast %class.SkPaint* %216 to i8*
  call void @_ZdlPv(i8* %219) #16
  br label %220

220:                                              ; preds = %218, %214
  %221 = getelementptr inbounds %"struct.(anonymous namespace)::Layer", %"struct.(anonymous namespace)::Layer"* %212, i64 0, i32 0, i32 0
  %222 = load %class.SkBaseDevice*, %class.SkBaseDevice** %221, align 8
  %223 = icmp eq %class.SkBaseDevice* %222, null
  br i1 %223, label %234, label %224

224:                                              ; preds = %220
  %225 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %222, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %226 = atomicrmw add i32* %225, i32 -1 acq_rel
  %227 = icmp eq i32 %226, 1
  br i1 %227, label %228, label %234

228:                                              ; preds = %224
  %229 = bitcast %class.SkBaseDevice* %222 to %class.SkRefCntBase*
  %230 = bitcast %class.SkBaseDevice* %222 to void (%class.SkRefCntBase*)***
  %231 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %230, align 8
  %232 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %231, i64 2
  %233 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %232, align 8
  call void %233(%class.SkRefCntBase* nonnull %229) #15
  br label %234

234:                                              ; preds = %228, %224, %220
  %235 = inttoptr i64 %12 to i8*
  call void @_ZdlPv(i8* %235) #16
  br label %236

236:                                              ; preds = %211, %234
  ret void
}

; Function Attrs: nounwind
declare void @_ZN7SkDequeD1Ev(%class.SkDeque*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvasD0Ev(%class.SkCanvas*) unnamed_addr #0 align 2 {
  tail call void @_ZN8SkCanvasD2Ev(%class.SkCanvas* %0) #15
  %2 = bitcast %class.SkCanvas* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #16
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas5flushEv(%class.SkCanvas*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*)***
  %3 = load void (%class.SkCanvas*)**, void (%class.SkCanvas*)*** %2, align 8
  %4 = getelementptr inbounds void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %3, i64 11
  %5 = load void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %4, align 8
  tail call void %5(%class.SkCanvas* %0) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas7onFlushEv(%class.SkCanvas*) unnamed_addr #0 align 2 {
  %2 = alloca %struct.GrFlushInfo, align 8
  %3 = bitcast %class.SkCanvas* %0 to %class.GrRecordingContext* (%class.SkCanvas*)***
  %4 = load %class.GrRecordingContext* (%class.SkCanvas*)**, %class.GrRecordingContext* (%class.SkCanvas*)*** %3, align 8
  %5 = getelementptr inbounds %class.GrRecordingContext* (%class.SkCanvas*)*, %class.GrRecordingContext* (%class.SkCanvas*)** %4, i64 3
  %6 = load %class.GrRecordingContext* (%class.SkCanvas*)*, %class.GrRecordingContext* (%class.SkCanvas*)** %5, align 8
  %7 = tail call %class.GrRecordingContext* %6(%class.SkCanvas* %0) #15
  %8 = icmp eq %class.GrRecordingContext* %7, null
  br i1 %8, label %21, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %7, i64 0, i32 0, i32 0
  %11 = bitcast %class.GrRecordingContext* %7 to %class.GrDirectContext* (%class.GrContext_Base*)***
  %12 = load %class.GrDirectContext* (%class.GrContext_Base*)**, %class.GrDirectContext* (%class.GrContext_Base*)*** %11, align 8
  %13 = getelementptr inbounds %class.GrDirectContext* (%class.GrContext_Base*)*, %class.GrDirectContext* (%class.GrContext_Base*)** %12, i64 3
  %14 = load %class.GrDirectContext* (%class.GrContext_Base*)*, %class.GrDirectContext* (%class.GrContext_Base*)** %13, align 8
  %15 = tail call %class.GrDirectContext* %14(%class.GrContext_Base* nonnull %10) #15
  %16 = icmp eq %class.GrDirectContext* %15, null
  br i1 %16, label %21, label %17

17:                                               ; preds = %9
  %18 = bitcast %struct.GrFlushInfo* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %18) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 48, i1 false) #15
  %19 = call zeroext i1 @_ZN15GrDirectContext5flushERK11GrFlushInfo(%class.GrDirectContext* nonnull %15, %struct.GrFlushInfo* nonnull dereferenceable(48) %2) #15
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %18) #15
  %20 = call zeroext i1 @_ZN15GrDirectContext6submitEb(%class.GrDirectContext* nonnull %15, i1 zeroext false) #15
  br label %21

21:                                               ; preds = %1, %9, %17
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %class.SkSurface* @_ZNK8SkCanvas10getSurfaceEv(%class.SkCanvas* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 9
  %3 = bitcast %class.SkSurface_Base** %2 to %class.SkSurface**
  %4 = load %class.SkSurface*, %class.SkSurface** %3, align 8
  ret %class.SkSurface* %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK8SkCanvas16getBaseLayerSizeEv(%class.SkCanvas* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 5, i32 0
  %3 = load %class.SkBaseDevice*, %class.SkBaseDevice** %2, align 8
  %4 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %3, i64 0, i32 3, i32 1
  %5 = bitcast %struct.SkISize* %4 to i64*
  %6 = load i64, i64* %5, align 8
  ret i64 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrSurfaceDrawContext* @_ZN8SkCanvas27topDeviceSurfaceDrawContextEv(%class.SkCanvas* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %3 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %2, align 8
  %4 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %3, i64 0, i32 1
  %5 = load %class.SkBaseDevice*, %class.SkBaseDevice** %4, align 8
  %6 = bitcast %class.SkBaseDevice* %5 to %class.GrSurfaceDrawContext* (%class.SkBaseDevice*)***
  %7 = load %class.GrSurfaceDrawContext* (%class.SkBaseDevice*)**, %class.GrSurfaceDrawContext* (%class.SkBaseDevice*)*** %6, align 8
  %8 = getelementptr inbounds %class.GrSurfaceDrawContext* (%class.SkBaseDevice*)*, %class.GrSurfaceDrawContext* (%class.SkBaseDevice*)** %7, i64 9
  %9 = load %class.GrSurfaceDrawContext* (%class.SkBaseDevice*)*, %class.GrSurfaceDrawContext* (%class.SkBaseDevice*)** %8, align 8
  %10 = tail call %class.GrSurfaceDrawContext* %9(%class.SkBaseDevice* %5) #15
  ret %class.GrSurfaceDrawContext* %10
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8SkCanvas10readPixelsERK8SkPixmapii(%class.SkCanvas* nocapture readonly, %class.SkPixmap* dereferenceable(40), i32, i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 5, i32 0
  %10 = load %class.SkBaseDevice*, %class.SkBaseDevice** %9, align 8
  %11 = tail call zeroext i1 @_ZN12SkBaseDevice10readPixelsERK8SkPixmapii(%class.SkBaseDevice* %10, %class.SkPixmap* dereferenceable(40) %1, i32 %2, i32 %3) #15
  br label %12

12:                                               ; preds = %4, %8
  %13 = phi i1 [ false, %4 ], [ %11, %8 ]
  ret i1 %13
}

declare zeroext i1 @_ZN12SkBaseDevice10readPixelsERK8SkPixmapii(%class.SkBaseDevice*, %class.SkPixmap* dereferenceable(40), i32, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8SkCanvas10readPixelsERK11SkImageInfoPvmii(%class.SkCanvas* nocapture readonly, %struct.SkImageInfo* nocapture readonly dereferenceable(24), i8*, i64, i32, i32) local_unnamed_addr #0 align 2 {
  %7 = alloca %class.SkPixmap, align 8
  %8 = bitcast %class.SkPixmap* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %8) #15
  %9 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %7, i64 0, i32 0
  store i8* %2, i8** %9, align 8
  %10 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %7, i64 0, i32 1
  store i64 %3, i64* %10, align 8
  %11 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %7, i64 0, i32 2, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 0, i32 0
  %13 = load %class.SkColorSpace*, %class.SkColorSpace** %12, align 8
  %14 = icmp eq %class.SkColorSpace* %13, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %6
  %16 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 1 monotonic
  %18 = load i8*, i8** %9, align 8
  br label %19

19:                                               ; preds = %6, %15
  %20 = phi i8* [ %2, %6 ], [ %18, %15 ]
  store %class.SkColorSpace* %13, %class.SkColorSpace** %11, align 8
  %21 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %7, i64 0, i32 2, i32 0, i32 1
  %22 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 1
  %23 = bitcast i32* %22 to <2 x i64>*
  %24 = load <2 x i64>, <2 x i64>* %23, align 8
  %25 = bitcast i32* %21 to <2 x i64>*
  store <2 x i64> %24, <2 x i64>* %25, align 8
  %26 = icmp eq i8* %20, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %19
  %28 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 5, i32 0
  %29 = load %class.SkBaseDevice*, %class.SkBaseDevice** %28, align 8
  %30 = call zeroext i1 @_ZN12SkBaseDevice10readPixelsERK8SkPixmapii(%class.SkBaseDevice* %29, %class.SkPixmap* nonnull dereferenceable(40) %7, i32 %4, i32 %5) #15
  %31 = load %class.SkColorSpace*, %class.SkColorSpace** %11, align 8
  br label %32

32:                                               ; preds = %19, %27
  %33 = phi %class.SkColorSpace* [ %13, %19 ], [ %31, %27 ]
  %34 = phi i1 [ false, %19 ], [ %30, %27 ]
  %35 = icmp eq %class.SkColorSpace* %33, null
  br i1 %35, label %42, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = atomicrmw add i32* %37, i32 -1 acq_rel
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %40, label %42

40:                                               ; preds = %36
  %41 = bitcast %class.SkColorSpace* %33 to i8*
  call void @_ZdlPv(i8* %41) #16
  br label %42

42:                                               ; preds = %32, %36, %40
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %8) #15
  ret i1 %34
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8SkCanvas10readPixelsERK8SkBitmapii(%class.SkCanvas* nocapture readonly, %class.SkBitmap* dereferenceable(56), i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.SkPixmap, align 8
  %6 = bitcast %class.SkPixmap* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 40, i1 false) #15
  %7 = call zeroext i1 @_ZNK8SkBitmap10peekPixelsEP8SkPixmap(%class.SkBitmap* %1, %class.SkPixmap* nonnull %5) #15
  br i1 %7, label %8, label %16

8:                                                ; preds = %4
  %9 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %5, i64 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %16, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 5, i32 0
  %14 = load %class.SkBaseDevice*, %class.SkBaseDevice** %13, align 8
  %15 = call zeroext i1 @_ZN12SkBaseDevice10readPixelsERK8SkPixmapii(%class.SkBaseDevice* %14, %class.SkPixmap* nonnull dereferenceable(40) %5, i32 %2, i32 %3) #15
  br label %16

16:                                               ; preds = %12, %8, %4
  %17 = phi i1 [ false, %4 ], [ false, %8 ], [ %15, %12 ]
  %18 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  %19 = load %class.SkColorSpace*, %class.SkColorSpace** %18, align 8
  %20 = icmp eq %class.SkColorSpace* %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i32* %22, i32 -1 acq_rel
  %24 = icmp eq i32 %23, 1
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  %26 = bitcast %class.SkColorSpace* %19 to i8*
  call void @_ZdlPv(i8* %26) #16
  br label %27

27:                                               ; preds = %16, %21, %25
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #15
  ret i1 %17
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare zeroext i1 @_ZNK8SkBitmap10peekPixelsEP8SkPixmap(%class.SkBitmap*, %class.SkPixmap*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8SkCanvas11writePixelsERK8SkBitmapii(%class.SkCanvas* nocapture readonly, %class.SkBitmap* dereferenceable(56), i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.SkPixmap, align 8
  %6 = bitcast %class.SkPixmap* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 40, i1 false) #15
  %7 = call zeroext i1 @_ZNK8SkBitmap10peekPixelsEP8SkPixmap(%class.SkBitmap* %1, %class.SkPixmap* nonnull %5) #15
  br i1 %7, label %8, label %15

8:                                                ; preds = %4
  %9 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %5, i64 0, i32 2
  %10 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %5, i64 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %5, i64 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = call zeroext i1 @_ZN8SkCanvas11writePixelsERK11SkImageInfoPKvmii(%class.SkCanvas* %0, %struct.SkImageInfo* dereferenceable(24) %9, i8* %11, i64 %13, i32 %2, i32 %3)
  br label %15

15:                                               ; preds = %4, %8
  %16 = phi i1 [ %14, %8 ], [ false, %4 ]
  %17 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  %18 = load %class.SkColorSpace*, %class.SkColorSpace** %17, align 8
  %19 = icmp eq %class.SkColorSpace* %18, null
  br i1 %19, label %26, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %26

24:                                               ; preds = %20
  %25 = bitcast %class.SkColorSpace* %18 to i8*
  call void @_ZdlPv(i8* %25) #16
  br label %26

26:                                               ; preds = %15, %20, %24
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #15
  ret i1 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8SkCanvas11writePixelsERK11SkImageInfoPKvmii(%class.SkCanvas* nocapture readonly, %struct.SkImageInfo* nocapture readonly dereferenceable(24), i8*, i64, i32, i32) local_unnamed_addr #0 align 2 {
  %7 = alloca { i64, i64 }, align 8
  %8 = bitcast { i64, i64 }* %7 to %struct.SkIRect*
  %9 = alloca %struct.SkIRect, align 4
  %10 = alloca %class.SkPixmap, align 8
  %11 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 5, i32 0
  %12 = load %class.SkBaseDevice*, %class.SkBaseDevice** %11, align 8
  %13 = bitcast { i64, i64 }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #15
  %14 = bitcast { i64, i64 }* %7 to i32*
  %15 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %8, i64 0, i32 1
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 1
  %17 = bitcast i64* %16 to i32*
  %18 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %8, i64 0, i32 3
  %19 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = sext i32 %4 to i64
  %24 = sext i32 %20 to i64
  %25 = add nsw i64 %24, %23
  %26 = icmp slt i64 %25, 2147483647
  %27 = select i1 %26, i64 %25, i64 2147483647
  %28 = icmp sgt i64 %27, -2147483647
  %29 = select i1 %28, i64 %27, i64 -2147483647
  %30 = sext i32 %5 to i64
  %31 = sext i32 %22 to i64
  %32 = add nsw i64 %31, %30
  %33 = icmp slt i64 %32, 2147483647
  %34 = select i1 %33, i64 %32, i64 2147483647
  %35 = icmp sgt i64 %34, -2147483647
  %36 = select i1 %35, i64 %34, i64 -2147483647
  %37 = zext i32 %5 to i64
  %38 = shl nuw i64 %37, 32
  %39 = zext i32 %4 to i64
  %40 = or i64 %38, %39
  %41 = shl nsw i64 %36, 32
  %42 = and i64 %29, 4294967295
  %43 = or i64 %41, %42
  %44 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 0
  store i64 %40, i64* %44, align 8
  store i64 %43, i64* %16, align 8
  %45 = bitcast %struct.SkIRect* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %45) #15
  %46 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %9, i64 0, i32 0
  store i32 0, i32* %46, align 4
  %47 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %9, i64 0, i32 1
  store i32 0, i32* %47, align 4
  %48 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %9, i64 0, i32 2
  %49 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %12, i64 0, i32 3, i32 1, i32 0
  %50 = load i32, i32* %49, align 4
  store i32 %50, i32* %48, align 4
  %51 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %9, i64 0, i32 3
  %52 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %12, i64 0, i32 3, i32 1, i32 1
  %53 = load i32, i32* %52, align 4
  store i32 %53, i32* %51, align 4
  %54 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %8, %struct.SkIRect* nonnull dereferenceable(16) %8, %struct.SkIRect* nonnull dereferenceable(16) %9) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %45) #15
  br i1 %54, label %55, label %99

55:                                               ; preds = %6
  %56 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 9
  %57 = load %class.SkSurface_Base*, %class.SkSurface_Base** %56, align 8
  %58 = icmp eq %class.SkSurface_Base* %57, null
  br i1 %58, label %72, label %59

59:                                               ; preds = %55
  %60 = load i32, i32* %17, align 8
  %61 = load i32, i32* %14, align 8
  %62 = sub i32 %60, %61
  %63 = load i32, i32* %49, align 4
  %64 = icmp ne i32 %62, %63
  %65 = load i32, i32* %18, align 4
  %66 = load i32, i32* %15, align 4
  %67 = sub i32 %65, %66
  %68 = load i32, i32* %52, align 4
  %69 = icmp ne i32 %67, %68
  %70 = or i1 %64, %69
  %71 = zext i1 %70 to i32
  call void @_ZN14SkSurface_Base11aboutToDrawEN9SkSurface17ContentChangeModeE(%class.SkSurface_Base* nonnull %57, i32 %71) #15
  br label %72

72:                                               ; preds = %55, %59
  %73 = bitcast %class.SkPixmap* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %73) #15
  %74 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %10, i64 0, i32 0
  store i8* %2, i8** %74, align 8
  %75 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %10, i64 0, i32 1
  store i64 %3, i64* %75, align 8
  %76 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %10, i64 0, i32 2, i32 0, i32 0, i32 0
  %77 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 0, i32 0
  %78 = load %class.SkColorSpace*, %class.SkColorSpace** %77, align 8
  %79 = icmp eq %class.SkColorSpace* %78, null
  br i1 %79, label %83, label %80

80:                                               ; preds = %72
  %81 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = atomicrmw add i32* %81, i32 1 monotonic
  br label %83

83:                                               ; preds = %72, %80
  store %class.SkColorSpace* %78, %class.SkColorSpace** %76, align 8
  %84 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %10, i64 0, i32 2, i32 0, i32 1
  %85 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 1
  %86 = bitcast i32* %85 to <2 x i64>*
  %87 = load <2 x i64>, <2 x i64>* %86, align 8
  %88 = bitcast i32* %84 to <2 x i64>*
  store <2 x i64> %87, <2 x i64>* %88, align 8
  %89 = call zeroext i1 @_ZN12SkBaseDevice11writePixelsERK8SkPixmapii(%class.SkBaseDevice* %12, %class.SkPixmap* nonnull dereferenceable(40) %10, i32 %4, i32 %5) #15
  %90 = load %class.SkColorSpace*, %class.SkColorSpace** %76, align 8
  %91 = icmp eq %class.SkColorSpace* %90, null
  br i1 %91, label %98, label %92

92:                                               ; preds = %83
  %93 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %90, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = atomicrmw add i32* %93, i32 -1 acq_rel
  %95 = icmp eq i32 %94, 1
  br i1 %95, label %96, label %98

96:                                               ; preds = %92
  %97 = bitcast %class.SkColorSpace* %90 to i8*
  call void @_ZdlPv(i8* %97) #16
  br label %98

98:                                               ; preds = %83, %92, %96
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %73) #15
  br label %99

99:                                               ; preds = %6, %98
  %100 = phi i1 [ %89, %98 ], [ false, %6 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #15
  ret i1 %100
}

declare zeroext i1 @_ZN12SkBaseDevice11writePixelsERK8SkPixmapii(%class.SkBaseDevice*, %class.SkPixmap* dereferenceable(40), i32, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas20checkForDeferredSaveEv(%class.SkCanvas*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %3 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %2, align 8
  %4 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %3, i64 0, i32 4
  %5 = load i32, i32* %4, align 8
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %39

7:                                                ; preds = %1
  %8 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*)***
  %9 = load void (%class.SkCanvas*)**, void (%class.SkCanvas*)*** %8, align 8
  %10 = getelementptr inbounds void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %9, i64 12
  %11 = load void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %10, align 8
  tail call void %11(%class.SkCanvas* %0) #15
  %12 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %2, align 8
  %13 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %12, i64 0, i32 4
  %14 = load i32, i32* %13, align 8
  %15 = add nsw i32 %14, -1
  store i32 %15, i32* %13, align 8
  %16 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 1
  %17 = tail call i8* @_ZN7SkDeque9push_backEv(%class.SkDeque* %16) #15
  %18 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %2, align 8
  %19 = bitcast i8* %17 to i64*
  store i64 0, i64* %19, align 8
  %20 = getelementptr inbounds i8, i8* %17, i64 8
  %21 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %18, i64 0, i32 1
  %22 = bitcast %class.SkBaseDevice** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast i8* %20 to i64*
  store i64 %23, i64* %24, align 8
  %25 = getelementptr inbounds i8, i8* %17, i64 16
  %26 = bitcast i8* %25 to i64*
  store i64 0, i64* %26, align 8
  %27 = getelementptr inbounds i8, i8* %17, i64 24
  %28 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %18, i64 0, i32 3
  %29 = bitcast %class.SkM44* %28 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %29, i64 64, i1 false) #15
  %30 = getelementptr inbounds i8, i8* %17, i64 88
  %31 = bitcast i8* %30 to i32*
  store i32 0, i32* %31, align 8
  %32 = bitcast %"class.SkCanvas::MCRec"** %2 to i8**
  store i8* %17, i8** %32, align 8
  %33 = bitcast i8* %20 to %class.SkBaseDevice**
  %34 = load %class.SkBaseDevice*, %class.SkBaseDevice** %33, align 8
  %35 = bitcast %class.SkBaseDevice* %34 to void (%class.SkBaseDevice*)***
  %36 = load void (%class.SkBaseDevice*)**, void (%class.SkBaseDevice*)*** %35, align 8
  %37 = getelementptr inbounds void (%class.SkBaseDevice*)*, void (%class.SkBaseDevice*)** %36, i64 10
  %38 = load void (%class.SkBaseDevice*)*, void (%class.SkBaseDevice*)** %37, align 8
  tail call void %38(%class.SkBaseDevice* %34) #15
  br label %39

39:                                               ; preds = %7, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas6doSaveEv(%class.SkCanvas*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*)***
  %3 = load void (%class.SkCanvas*)**, void (%class.SkCanvas*)*** %2, align 8
  %4 = getelementptr inbounds void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %3, i64 12
  %5 = load void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %4, align 8
  tail call void %5(%class.SkCanvas* %0) #15
  %6 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %7 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %6, align 8
  %8 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %7, i64 0, i32 4
  %9 = load i32, i32* %8, align 8
  %10 = add nsw i32 %9, -1
  store i32 %10, i32* %8, align 8
  %11 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 1
  %12 = tail call i8* @_ZN7SkDeque9push_backEv(%class.SkDeque* %11) #15
  %13 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %6, align 8
  %14 = bitcast i8* %12 to i64*
  store i64 0, i64* %14, align 8
  %15 = getelementptr inbounds i8, i8* %12, i64 8
  %16 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %13, i64 0, i32 1
  %17 = bitcast %class.SkBaseDevice** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast i8* %15 to i64*
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds i8, i8* %12, i64 16
  %21 = bitcast i8* %20 to i64*
  store i64 0, i64* %21, align 8
  %22 = getelementptr inbounds i8, i8* %12, i64 24
  %23 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %13, i64 0, i32 3
  %24 = bitcast %class.SkM44* %23 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %24, i64 64, i1 false) #15
  %25 = getelementptr inbounds i8, i8* %12, i64 88
  %26 = bitcast i8* %25 to i32*
  store i32 0, i32* %26, align 8
  %27 = bitcast %"class.SkCanvas::MCRec"** %6 to i8**
  store i8* %12, i8** %27, align 8
  %28 = bitcast i8* %15 to %class.SkBaseDevice**
  %29 = load %class.SkBaseDevice*, %class.SkBaseDevice** %28, align 8
  %30 = bitcast %class.SkBaseDevice* %29 to void (%class.SkBaseDevice*)***
  %31 = load void (%class.SkBaseDevice*)**, void (%class.SkBaseDevice*)*** %30, align 8
  %32 = getelementptr inbounds void (%class.SkBaseDevice*)*, void (%class.SkBaseDevice*)** %31, i64 10
  %33 = load void (%class.SkBaseDevice*)*, void (%class.SkBaseDevice*)** %32, align 8
  tail call void %33(%class.SkBaseDevice* %29) #15
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK8SkCanvas12getSaveCountEv(%class.SkCanvas* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 7
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN8SkCanvas4saveEv(%class.SkCanvas* nocapture) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 7
  %3 = load i32, i32* %2, align 8
  %4 = add nsw i32 %3, 1
  store i32 %4, i32* %2, align 8
  %5 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %6 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %5, align 8
  %7 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %6, i64 0, i32 4
  %8 = load i32, i32* %7, align 8
  %9 = add nsw i32 %8, 1
  store i32 %9, i32* %7, align 8
  %10 = load i32, i32* %2, align 8
  %11 = add nsw i32 %10, -1
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas12internalSaveEv(%class.SkCanvas*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 1
  %3 = tail call i8* @_ZN7SkDeque9push_backEv(%class.SkDeque* %2) #15
  %4 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %5 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %4, align 8
  %6 = bitcast i8* %3 to i64*
  store i64 0, i64* %6, align 8
  %7 = getelementptr inbounds i8, i8* %3, i64 8
  %8 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %5, i64 0, i32 1
  %9 = bitcast %class.SkBaseDevice** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast i8* %7 to i64*
  store i64 %10, i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %3, i64 16
  %13 = bitcast i8* %12 to i64*
  store i64 0, i64* %13, align 8
  %14 = getelementptr inbounds i8, i8* %3, i64 24
  %15 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %5, i64 0, i32 3
  %16 = bitcast %class.SkM44* %15 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %16, i64 64, i1 false) #15
  %17 = getelementptr inbounds i8, i8* %3, i64 88
  %18 = bitcast i8* %17 to i32*
  store i32 0, i32* %18, align 8
  %19 = bitcast %"class.SkCanvas::MCRec"** %4 to i8**
  store i8* %3, i8** %19, align 8
  %20 = bitcast i8* %7 to %class.SkBaseDevice**
  %21 = load %class.SkBaseDevice*, %class.SkBaseDevice** %20, align 8
  %22 = bitcast %class.SkBaseDevice* %21 to void (%class.SkBaseDevice*)***
  %23 = load void (%class.SkBaseDevice*)**, void (%class.SkBaseDevice*)*** %22, align 8
  %24 = getelementptr inbounds void (%class.SkBaseDevice*)*, void (%class.SkBaseDevice*)** %23, i64 10
  %25 = load void (%class.SkBaseDevice*)*, void (%class.SkBaseDevice*)** %24, align 8
  tail call void %25(%class.SkBaseDevice* %21) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas7restoreEv(%class.SkCanvas*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %3 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %2, align 8
  %4 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %3, i64 0, i32 4
  %5 = load i32, i32* %4, align 8
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %13

7:                                                ; preds = %1
  %8 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 7
  %9 = load i32, i32* %8, align 8
  %10 = add nsw i32 %9, -1
  store i32 %10, i32* %8, align 8
  %11 = load i32, i32* %4, align 8
  %12 = add nsw i32 %11, -1
  store i32 %12, i32* %4, align 8
  br label %28

13:                                               ; preds = %1
  %14 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 1, i32 6
  %15 = load i32, i32* %14, align 8
  %16 = icmp sgt i32 %15, 1
  br i1 %16, label %17, label %28

17:                                               ; preds = %13
  %18 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*)***
  %19 = load void (%class.SkCanvas*)**, void (%class.SkCanvas*)*** %18, align 8
  %20 = getelementptr inbounds void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %19, i64 15
  %21 = load void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %20, align 8
  tail call void %21(%class.SkCanvas* %0) #15
  %22 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 7
  %23 = load i32, i32* %22, align 8
  %24 = add nsw i32 %23, -1
  store i32 %24, i32* %22, align 8
  tail call void @_ZN8SkCanvas15internalRestoreEv(%class.SkCanvas* %0)
  %25 = load void (%class.SkCanvas*)**, void (%class.SkCanvas*)*** %18, align 8
  %26 = getelementptr inbounds void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %25, i64 16
  %27 = load void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %26, align 8
  tail call void %27(%class.SkCanvas* %0) #15
  br label %28

28:                                               ; preds = %13, %17, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8SkCanvas14clipRectBoundsEPK6SkRectP7SkIRectPK13SkImageFilter(%class.SkCanvas* nocapture readonly, %struct.SkRect*, %struct.SkIRect*, %class.SkImageFilter*) local_unnamed_addr #0 align 2 {
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = alloca { i64, i64 }, align 8
  %7 = bitcast { i64, i64 }* %6 to %struct.SkIRect*
  %8 = alloca %class.SkMatrix, align 4
  %9 = alloca <4 x i32>, align 16
  %10 = bitcast <4 x i32>* %9 to %struct.SkIRect*
  %11 = alloca %struct.SkRect, align 4
  %12 = alloca %struct.SkIRect, align 4
  %13 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #15
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  %15 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %16 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 16, i1 false)
  %17 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %15, align 8
  %18 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %17, i64 0, i32 1
  %19 = load %class.SkBaseDevice*, %class.SkBaseDevice** %18, align 8
  %20 = bitcast %class.SkBaseDevice* %19 to i32 (%class.SkBaseDevice*)***
  %21 = load i32 (%class.SkBaseDevice*)**, i32 (%class.SkBaseDevice*)*** %20, align 8
  %22 = getelementptr inbounds i32 (%class.SkBaseDevice*)*, i32 (%class.SkBaseDevice*)** %21, i64 22
  %23 = load i32 (%class.SkBaseDevice*)*, i32 (%class.SkBaseDevice*)** %22, align 8
  %24 = tail call i32 %23(%class.SkBaseDevice* %19) #15
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %56, label %26

26:                                               ; preds = %4
  %27 = bitcast { <2 x float>, <2 x float> }* %5 to %struct.SkRect*
  %28 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %19, i64 0, i32 5
  %29 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #15
  %30 = bitcast %class.SkBaseDevice* %19 to { i64, i64 } (%class.SkBaseDevice*)***
  %31 = load { i64, i64 } (%class.SkBaseDevice*)**, { i64, i64 } (%class.SkBaseDevice*)*** %30, align 8
  %32 = getelementptr inbounds { i64, i64 } (%class.SkBaseDevice*)*, { i64, i64 } (%class.SkBaseDevice*)** %31, i64 23
  %33 = load { i64, i64 } (%class.SkBaseDevice*)*, { i64, i64 } (%class.SkBaseDevice*)** %32, align 8
  %34 = tail call { i64, i64 } %33(%class.SkBaseDevice* %19) #15
  %35 = extractvalue { i64, i64 } %34, 0
  %36 = trunc i64 %35 to i32
  %37 = lshr i64 %35, 32
  %38 = trunc i64 %37 to i32
  %39 = extractvalue { i64, i64 } %34, 1
  %40 = sitofp i32 %36 to float
  %41 = insertelement <2 x float> undef, float %40, i32 0
  %42 = sitofp i32 %38 to float
  %43 = insertelement <2 x float> %41, float %42, i32 1
  %44 = trunc i64 %39 to i32
  %45 = sitofp i32 %44 to float
  %46 = insertelement <2 x float> undef, float %45, i32 0
  %47 = lshr i64 %39, 32
  %48 = trunc i64 %47 to i32
  %49 = sitofp i32 %48 to float
  %50 = insertelement <2 x float> %46, float %49, i32 1
  %51 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  store <2 x float> %43, <2 x float>* %51, align 8
  %52 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  store <2 x float> %50, <2 x float>* %52, align 8
  %53 = call { <2 x float>, <2 x float> } @_ZN12SkMatrixPriv7MapRectERK5SkM44RK6SkRect(%class.SkM44* dereferenceable(64) %28, %struct.SkRect* nonnull dereferenceable(16) %27) #15
  %54 = extractvalue { <2 x float>, <2 x float> } %53, 0
  %55 = extractvalue { <2 x float>, <2 x float> } %53, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #15
  br label %56

56:                                               ; preds = %4, %26
  %57 = phi <2 x float> [ %54, %26 ], [ zeroinitializer, %4 ]
  %58 = phi <2 x float> [ %55, %26 ], [ zeroinitializer, %4 ]
  %59 = extractelement <2 x float> %57, i32 0
  %60 = call float @llvm.floor.f32(float %59) #15
  %61 = fcmp olt float %60, 0x41DFFFFFE0000000
  %62 = select i1 %61, float %60, float 0x41DFFFFFE0000000
  %63 = fcmp ogt float %62, 0xC1DFFFFFE0000000
  %64 = select i1 %63, float %62, float 0xC1DFFFFFE0000000
  %65 = fptosi float %64 to i32
  %66 = extractelement <2 x float> %57, i32 1
  %67 = call float @llvm.floor.f32(float %66) #15
  %68 = fcmp olt float %67, 0x41DFFFFFE0000000
  %69 = select i1 %68, float %67, float 0x41DFFFFFE0000000
  %70 = fcmp ogt float %69, 0xC1DFFFFFE0000000
  %71 = select i1 %70, float %69, float 0xC1DFFFFFE0000000
  %72 = fptosi float %71 to i32
  %73 = extractelement <2 x float> %58, i32 0
  %74 = call float @llvm.ceil.f32(float %73) #15
  %75 = fcmp olt float %74, 0x41DFFFFFE0000000
  %76 = select i1 %75, float %74, float 0x41DFFFFFE0000000
  %77 = fcmp ogt float %76, 0xC1DFFFFFE0000000
  %78 = select i1 %77, float %76, float 0xC1DFFFFFE0000000
  %79 = fptosi float %78 to i32
  %80 = extractelement <2 x float> %58, i32 1
  %81 = call float @llvm.ceil.f32(float %80) #15
  %82 = fcmp olt float %81, 0x41DFFFFFE0000000
  %83 = select i1 %82, float %81, float 0x41DFFFFFE0000000
  %84 = fcmp ogt float %83, 0xC1DFFFFFE0000000
  %85 = select i1 %84, float %83, float 0xC1DFFFFFE0000000
  %86 = fptosi float %85 to i32
  %87 = zext i32 %72 to i64
  %88 = shl nuw i64 %87, 32
  %89 = zext i32 %65 to i64
  %90 = or i64 %88, %89
  %91 = zext i32 %86 to i64
  %92 = shl nuw i64 %91, 32
  %93 = zext i32 %79 to i64
  %94 = or i64 %92, %93
  %95 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  store i64 %90, i64* %95, align 8
  store i64 %94, i64* %14, align 8
  %96 = sext i32 %79 to i64
  %97 = sext i32 %65 to i64
  %98 = sub nsw i64 %96, %97
  %99 = sext i32 %86 to i64
  %100 = sext i32 %72 to i64
  %101 = sub nsw i64 %99, %100
  %102 = icmp slt i64 %98, 1
  %103 = icmp slt i64 %101, 1
  %104 = or i1 %102, %103
  br i1 %104, label %216, label %105

105:                                              ; preds = %56
  %106 = or i64 %101, %98
  %107 = add nsw i64 %106, 2147483648
  %108 = icmp ugt i64 %107, 4294967295
  br i1 %108, label %216, label %109

109:                                              ; preds = %105
  %110 = bitcast %class.SkMatrix* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %110) #15
  %111 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %15, align 8
  %112 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %111, i64 0, i32 3
  %113 = bitcast %class.SkM44* %112 to i32*
  %114 = load i32, i32* %113, align 4, !noalias !48
  %115 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %111, i64 0, i32 3, i32 0, i64 4
  %116 = bitcast float* %115 to i32*
  %117 = load i32, i32* %116, align 4, !noalias !48
  %118 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %111, i64 0, i32 3, i32 0, i64 12
  %119 = bitcast float* %118 to i32*
  %120 = load i32, i32* %119, align 4, !noalias !48
  %121 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %111, i64 0, i32 3, i32 0, i64 1
  %122 = bitcast float* %121 to i32*
  %123 = load i32, i32* %122, align 4, !noalias !48
  %124 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %111, i64 0, i32 3, i32 0, i64 5
  %125 = bitcast float* %124 to i32*
  %126 = load i32, i32* %125, align 4, !noalias !48
  %127 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %111, i64 0, i32 3, i32 0, i64 13
  %128 = bitcast float* %127 to i32*
  %129 = load i32, i32* %128, align 4, !noalias !48
  %130 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %111, i64 0, i32 3, i32 0, i64 3
  %131 = bitcast float* %130 to i32*
  %132 = load i32, i32* %131, align 4, !noalias !48
  %133 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %111, i64 0, i32 3, i32 0, i64 7
  %134 = bitcast float* %133 to i32*
  %135 = load i32, i32* %134, align 4, !noalias !48
  %136 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %111, i64 0, i32 3, i32 0, i64 15
  %137 = bitcast float* %136 to i32*
  %138 = load i32, i32* %137, align 4, !noalias !48
  %139 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 1
  %140 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 0, i64 1
  %141 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 0, i64 2
  %142 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 0, i64 3
  %143 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 0, i64 4
  %144 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 0, i64 5
  %145 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 0, i64 6
  %146 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 0, i64 7
  %147 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 0, i64 8
  %148 = bitcast %class.SkMatrix* %8 to i32*
  store i32 %114, i32* %148, align 4, !alias.scope !51
  %149 = bitcast float* %140 to i32*
  store i32 %117, i32* %149, align 4, !alias.scope !51
  %150 = bitcast float* %141 to i32*
  store i32 %120, i32* %150, align 4, !alias.scope !51
  %151 = bitcast float* %142 to i32*
  store i32 %123, i32* %151, align 4, !alias.scope !51
  %152 = bitcast float* %143 to i32*
  store i32 %126, i32* %152, align 4, !alias.scope !51
  %153 = bitcast float* %144 to i32*
  store i32 %129, i32* %153, align 4, !alias.scope !51
  %154 = bitcast float* %145 to i32*
  store i32 %132, i32* %154, align 4, !alias.scope !51
  %155 = bitcast float* %146 to i32*
  store i32 %135, i32* %155, align 4, !alias.scope !51
  %156 = bitcast float* %147 to i32*
  store i32 %138, i32* %156, align 4, !alias.scope !51
  store i32 128, i32* %139, align 4, !alias.scope !51
  %157 = icmp ne %class.SkImageFilter* %3, null
  %158 = icmp ne %struct.SkRect* %1, null
  %159 = and i1 %158, %157
  br i1 %159, label %160, label %164

160:                                              ; preds = %109
  %161 = call zeroext i1 @_ZNK13SkImageFilter20canComputeFastBoundsEv(%class.SkImageFilter* nonnull %3) #15
  %162 = bitcast <4 x i32>* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %162) #15
  %163 = bitcast <4 x i32>* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %163, i8 -86, i64 16, i1 false)
  br i1 %161, label %168, label %194

164:                                              ; preds = %109
  %165 = bitcast <4 x i32>* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %165) #15
  %166 = icmp eq %struct.SkRect* %1, null
  %167 = bitcast <4 x i32>* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %167, i8 -86, i64 16, i1 false)
  br i1 %166, label %194, label %168

168:                                              ; preds = %164, %160
  %169 = phi i8* [ %165, %164 ], [ %162, %160 ]
  %170 = bitcast %struct.SkRect* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %170) #15
  %171 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %11, i64 0, i32 0
  %172 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %11, i64 0, i32 1
  %173 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %11, i64 0, i32 2
  %174 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %11, i64 0, i32 3
  %175 = bitcast %struct.SkRect* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %175, i8 -1, i64 16, i1 false)
  %176 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* nonnull %8, %struct.SkRect* nonnull %11, %struct.SkRect* nonnull dereferenceable(16) %1, i32 1) #15
  %177 = load float, float* %171, align 4
  %178 = call float @llvm.floor.f32(float %177) #15
  %179 = load float, float* %172, align 4
  %180 = call float @llvm.floor.f32(float %179) #15
  %181 = load float, float* %173, align 4
  %182 = call float @llvm.ceil.f32(float %181) #15
  %183 = load float, float* %174, align 4
  %184 = call float @llvm.ceil.f32(float %183) #15
  %185 = insertelement <4 x float> undef, float %178, i32 0
  %186 = insertelement <4 x float> %185, float %180, i32 1
  %187 = insertelement <4 x float> %186, float %182, i32 2
  %188 = insertelement <4 x float> %187, float %184, i32 3
  %189 = fcmp olt <4 x float> %188, <float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000>
  %190 = select <4 x i1> %189, <4 x float> %188, <4 x float> <float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000>
  %191 = fcmp ogt <4 x float> %190, <float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000>
  %192 = select <4 x i1> %191, <4 x float> %190, <4 x float> <float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000>
  %193 = fptosi <4 x float> %192 to <4 x i32>
  store <4 x i32> %193, <4 x i32>* %9, align 16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %170) #15
  br label %196

194:                                              ; preds = %164, %160
  %195 = phi i8* [ %165, %164 ], [ %162, %160 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %195, i8* nonnull align 8 %13, i64 16, i1 false)
  br label %196

196:                                              ; preds = %194, %168
  %197 = phi i1 [ false, %194 ], [ true, %168 ]
  %198 = phi i8* [ %195, %194 ], [ %169, %168 ]
  br i1 %157, label %199, label %203

199:                                              ; preds = %196
  %200 = call { i64, i64 } @_ZNK13SkImageFilter12filterBoundsERK7SkIRectRK8SkMatrixNS_12MapDirectionEPS1_(%class.SkImageFilter* nonnull %3, %struct.SkIRect* nonnull dereferenceable(16) %7, %class.SkMatrix* nonnull dereferenceable(40) %8, i32 1, %struct.SkIRect* nonnull %10) #15
  %201 = extractvalue { i64, i64 } %200, 0
  %202 = extractvalue { i64, i64 } %200, 1
  store i64 %201, i64* %95, align 8
  store i64 %202, i64* %14, align 8
  br label %203

203:                                              ; preds = %199, %196
  %204 = bitcast %struct.SkIRect* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %204) #15
  %205 = bitcast %struct.SkIRect* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %205, i8 -86, i64 16, i1 false)
  br i1 %197, label %206, label %207

206:                                              ; preds = %203
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %204, i8* nonnull align 4 %198, i64 16, i1 false)
  br label %208

207:                                              ; preds = %203
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %204, i8* nonnull align 8 %13, i64 16, i1 false)
  br label %208

208:                                              ; preds = %207, %206
  %209 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %12, %struct.SkIRect* nonnull dereferenceable(16) %12, %struct.SkIRect* nonnull dereferenceable(16) %7) #15
  br i1 %209, label %210, label %214

210:                                              ; preds = %208
  %211 = icmp eq %struct.SkIRect* %2, null
  br i1 %211, label %214, label %212

212:                                              ; preds = %210
  %213 = bitcast %struct.SkIRect* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %213, i8* nonnull align 4 %204, i64 16, i1 false)
  br label %214

214:                                              ; preds = %212, %210, %208
  %215 = phi i1 [ false, %208 ], [ true, %210 ], [ true, %212 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %204) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %198) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %110) #15
  br label %216

216:                                              ; preds = %56, %105, %214
  %217 = phi i1 [ %215, %214 ], [ false, %105 ], [ false, %56 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #15
  ret i1 %217
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK8SkCanvas19getDeviceClipBoundsEv(%class.SkCanvas* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca { <2 x float>, <2 x float> }, align 8
  %3 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %4 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %3, align 8
  %5 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %4, i64 0, i32 1
  %6 = load %class.SkBaseDevice*, %class.SkBaseDevice** %5, align 8
  %7 = bitcast %class.SkBaseDevice* %6 to i32 (%class.SkBaseDevice*)***
  %8 = load i32 (%class.SkBaseDevice*)**, i32 (%class.SkBaseDevice*)*** %7, align 8
  %9 = getelementptr inbounds i32 (%class.SkBaseDevice*)*, i32 (%class.SkBaseDevice*)** %8, i64 22
  %10 = load i32 (%class.SkBaseDevice*)*, i32 (%class.SkBaseDevice*)** %9, align 8
  %11 = tail call i32 %10(%class.SkBaseDevice* %6) #15
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %43, label %13

13:                                               ; preds = %1
  %14 = bitcast { <2 x float>, <2 x float> }* %2 to %struct.SkRect*
  %15 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %6, i64 0, i32 5
  %16 = bitcast { <2 x float>, <2 x float> }* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #15
  %17 = bitcast %class.SkBaseDevice* %6 to { i64, i64 } (%class.SkBaseDevice*)***
  %18 = load { i64, i64 } (%class.SkBaseDevice*)**, { i64, i64 } (%class.SkBaseDevice*)*** %17, align 8
  %19 = getelementptr inbounds { i64, i64 } (%class.SkBaseDevice*)*, { i64, i64 } (%class.SkBaseDevice*)** %18, i64 23
  %20 = load { i64, i64 } (%class.SkBaseDevice*)*, { i64, i64 } (%class.SkBaseDevice*)** %19, align 8
  %21 = tail call { i64, i64 } %20(%class.SkBaseDevice* %6) #15
  %22 = extractvalue { i64, i64 } %21, 0
  %23 = trunc i64 %22 to i32
  %24 = lshr i64 %22, 32
  %25 = trunc i64 %24 to i32
  %26 = extractvalue { i64, i64 } %21, 1
  %27 = sitofp i32 %23 to float
  %28 = insertelement <2 x float> undef, float %27, i32 0
  %29 = sitofp i32 %25 to float
  %30 = insertelement <2 x float> %28, float %29, i32 1
  %31 = trunc i64 %26 to i32
  %32 = sitofp i32 %31 to float
  %33 = insertelement <2 x float> undef, float %32, i32 0
  %34 = lshr i64 %26, 32
  %35 = trunc i64 %34 to i32
  %36 = sitofp i32 %35 to float
  %37 = insertelement <2 x float> %33, float %36, i32 1
  %38 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %2, i64 0, i32 0
  store <2 x float> %30, <2 x float>* %38, align 8
  %39 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %2, i64 0, i32 1
  store <2 x float> %37, <2 x float>* %39, align 8
  %40 = call { <2 x float>, <2 x float> } @_ZN12SkMatrixPriv7MapRectERK5SkM44RK6SkRect(%class.SkM44* dereferenceable(64) %15, %struct.SkRect* nonnull dereferenceable(16) %14) #15
  %41 = extractvalue { <2 x float>, <2 x float> } %40, 0
  %42 = extractvalue { <2 x float>, <2 x float> } %40, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #15
  br label %43

43:                                               ; preds = %1, %13
  %44 = phi <2 x float> [ %41, %13 ], [ zeroinitializer, %1 ]
  %45 = phi <2 x float> [ %42, %13 ], [ zeroinitializer, %1 ]
  %46 = extractelement <2 x float> %44, i32 0
  %47 = call float @llvm.floor.f32(float %46) #15
  %48 = fcmp olt float %47, 0x41DFFFFFE0000000
  %49 = select i1 %48, float %47, float 0x41DFFFFFE0000000
  %50 = fcmp ogt float %49, 0xC1DFFFFFE0000000
  %51 = select i1 %50, float %49, float 0xC1DFFFFFE0000000
  %52 = fptosi float %51 to i32
  %53 = extractelement <2 x float> %44, i32 1
  %54 = call float @llvm.floor.f32(float %53) #15
  %55 = fcmp olt float %54, 0x41DFFFFFE0000000
  %56 = select i1 %55, float %54, float 0x41DFFFFFE0000000
  %57 = fcmp ogt float %56, 0xC1DFFFFFE0000000
  %58 = select i1 %57, float %56, float 0xC1DFFFFFE0000000
  %59 = fptosi float %58 to i32
  %60 = extractelement <2 x float> %45, i32 0
  %61 = call float @llvm.ceil.f32(float %60) #15
  %62 = fcmp olt float %61, 0x41DFFFFFE0000000
  %63 = select i1 %62, float %61, float 0x41DFFFFFE0000000
  %64 = fcmp ogt float %63, 0xC1DFFFFFE0000000
  %65 = select i1 %64, float %63, float 0xC1DFFFFFE0000000
  %66 = fptosi float %65 to i32
  %67 = extractelement <2 x float> %45, i32 1
  %68 = call float @llvm.ceil.f32(float %67) #15
  %69 = fcmp olt float %68, 0x41DFFFFFE0000000
  %70 = select i1 %69, float %68, float 0x41DFFFFFE0000000
  %71 = fcmp ogt float %70, 0xC1DFFFFFE0000000
  %72 = select i1 %71, float %70, float 0xC1DFFFFFE0000000
  %73 = fptosi float %72 to i32
  %74 = zext i32 %59 to i64
  %75 = shl nuw i64 %74, 32
  %76 = zext i32 %52 to i64
  %77 = or i64 %75, %76
  %78 = insertvalue { i64, i64 } undef, i64 %77, 0
  %79 = zext i32 %73 to i64
  %80 = shl nuw i64 %79, 32
  %81 = zext i32 %66 to i64
  %82 = or i64 %80, %81
  %83 = insertvalue { i64, i64 } %78, i64 %82, 1
  ret { i64, i64 } %83
}

declare zeroext i1 @_ZNK13SkImageFilter20canComputeFastBoundsEv(%class.SkImageFilter*) local_unnamed_addr #4

declare zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix*, %struct.SkRect*, %struct.SkRect* dereferenceable(16), i32) local_unnamed_addr #4

declare { i64, i64 } @_ZNK13SkImageFilter12filterBoundsERK7SkIRectRK8SkMatrixNS_12MapDirectionEPS1_(%class.SkImageFilter*, %struct.SkIRect* dereferenceable(16), %class.SkMatrix* dereferenceable(40), i32, %struct.SkIRect*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8SkCanvas9saveLayerEPK6SkRectPK7SkPaint(%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.SkCanvas::SaveLayerRec", align 8
  %5 = bitcast %"struct.SkCanvas::SaveLayerRec"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"struct.SkCanvas::SaveLayerRec", %"struct.SkCanvas::SaveLayerRec"* %4, i64 0, i32 0
  store %struct.SkRect* %1, %struct.SkRect** %6, align 8
  %7 = getelementptr inbounds %"struct.SkCanvas::SaveLayerRec", %"struct.SkCanvas::SaveLayerRec"* %4, i64 0, i32 1
  store %class.SkPaint* %2, %class.SkPaint** %7, align 8
  %8 = getelementptr inbounds %"struct.SkCanvas::SaveLayerRec", %"struct.SkCanvas::SaveLayerRec"* %4, i64 0, i32 2
  store %class.SkImageFilter* null, %class.SkImageFilter** %8, align 8
  %9 = getelementptr inbounds %"struct.SkCanvas::SaveLayerRec", %"struct.SkCanvas::SaveLayerRec"* %4, i64 0, i32 3
  store i32 0, i32* %9, align 8
  %10 = call i32 @_ZN8SkCanvas9saveLayerERKNS_12SaveLayerRecE(%class.SkCanvas* %0, %"struct.SkCanvas::SaveLayerRec"* nonnull dereferenceable(32) %4)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #15
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8SkCanvas9saveLayerERKNS_12SaveLayerRecE(%class.SkCanvas*, %"struct.SkCanvas::SaveLayerRec"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.skia::tracing_internals::ScopedTracer", align 8
  %4 = load atomic i64, i64* @_ZZN8SkCanvas9saveLayerERKNS_12SaveLayerRecEE28trace_event_unique_atomic750.0.0 monotonic, align 8
  %5 = inttoptr i64 %4 to i8*
  %6 = icmp eq i64 %4, 0
  br i1 %6, label %7, label %15

7:                                                ; preds = %2
  %8 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %9 = bitcast %class.SkEventTracer* %8 to i8* (%class.SkEventTracer*, i8*)***
  %10 = load i8* (%class.SkEventTracer*, i8*)**, i8* (%class.SkEventTracer*, i8*)*** %9, align 8
  %11 = getelementptr inbounds i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %10, i64 2
  %12 = load i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %11, align 8
  %13 = tail call i8* %12(%class.SkEventTracer* %8, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0)) #15
  %14 = ptrtoint i8* %13 to i64
  store atomic i64 %14, i64* @_ZZN8SkCanvas9saveLayerERKNS_12SaveLayerRecEE28trace_event_unique_atomic750.0.0 monotonic, align 8
  br label %15

15:                                               ; preds = %2, %7
  %16 = phi i8* [ %5, %2 ], [ %13, %7 ]
  %17 = bitcast %"class.skia::tracing_internals::ScopedTracer"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #15
  %18 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %3, i64 0, i32 0
  %19 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %3, i64 0, i32 1, i32 0
  %20 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %3, i64 0, i32 1, i32 1
  %21 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %3, i64 0, i32 1, i32 2
  %22 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %3, i64 0, i32 1
  %23 = bitcast %"struct.skia::tracing_internals::ScopedTracer::Data"* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 24, i1 false)
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* null, %"struct.skia::tracing_internals::ScopedTracer::Data"** %18, align 8
  %24 = load i8, i8* %16, align 1
  %25 = and i8 %24, 5
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %36, label %27

27:                                               ; preds = %15
  %28 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %29 = bitcast %class.SkEventTracer* %28 to i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)***
  %30 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)**, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*** %29, align 8
  %31 = getelementptr inbounds i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %30, i64 4
  %32 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %31, align 8
  %33 = tail call i64 %32(%class.SkEventTracer* %28, i8 signext 88, i8* %16, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN8SkCanvas9saveLayerERKNS_12SaveLayerRecE, i64 0, i64 0), i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #15
  %34 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %3, i64 0, i32 1
  %35 = getelementptr inbounds %"struct.skia::tracing_internals::ScopedTracer::Data", %"struct.skia::tracing_internals::ScopedTracer::Data"* %34, i64 0, i32 0
  store i8* %16, i8** %35, align 8
  store i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN8SkCanvas9saveLayerERKNS_12SaveLayerRecE, i64 0, i64 0), i8** %20, align 8
  store i64 %33, i64* %21, align 8
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* %34, %"struct.skia::tracing_internals::ScopedTracer::Data"** %18, align 8
  br label %36

36:                                               ; preds = %15, %27
  %37 = getelementptr inbounds %"struct.SkCanvas::SaveLayerRec", %"struct.SkCanvas::SaveLayerRec"* %1, i64 0, i32 1
  %38 = load %class.SkPaint*, %class.SkPaint** %37, align 8
  %39 = icmp eq %class.SkPaint* %38, null
  br i1 %39, label %51, label %40

40:                                               ; preds = %36
  %41 = call zeroext i1 @_ZNK7SkPaint13nothingToDrawEv(%class.SkPaint* nonnull %38) #15
  br i1 %41, label %42, label %51

42:                                               ; preds = %40
  %43 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 7
  %44 = load i32, i32* %43, align 8
  %45 = add nsw i32 %44, 1
  store i32 %45, i32* %43, align 8
  %46 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %47 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %46, align 8
  %48 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %47, i64 0, i32 4
  %49 = load i32, i32* %48, align 8
  %50 = add nsw i32 %49, 1
  store i32 %50, i32* %48, align 8
  call void @_ZN8SkCanvas8clipRectERK6SkRect8SkClipOpb(%class.SkCanvas* %0, %struct.SkRect* nonnull dereferenceable(16) @.ref.tmp, i32 1, i1 zeroext false) #15
  br label %60

51:                                               ; preds = %36, %40
  %52 = bitcast %class.SkCanvas* %0 to i32 (%class.SkCanvas*, %"struct.SkCanvas::SaveLayerRec"*)***
  %53 = load i32 (%class.SkCanvas*, %"struct.SkCanvas::SaveLayerRec"*)**, i32 (%class.SkCanvas*, %"struct.SkCanvas::SaveLayerRec"*)*** %52, align 8
  %54 = getelementptr inbounds i32 (%class.SkCanvas*, %"struct.SkCanvas::SaveLayerRec"*)*, i32 (%class.SkCanvas*, %"struct.SkCanvas::SaveLayerRec"*)** %53, i64 13
  %55 = load i32 (%class.SkCanvas*, %"struct.SkCanvas::SaveLayerRec"*)*, i32 (%class.SkCanvas*, %"struct.SkCanvas::SaveLayerRec"*)** %54, align 8
  %56 = call i32 %55(%class.SkCanvas* %0, %"struct.SkCanvas::SaveLayerRec"* dereferenceable(32) %1) #15
  %57 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 7
  %58 = load i32, i32* %57, align 8
  %59 = add nsw i32 %58, 1
  store i32 %59, i32* %57, align 8
  call void @_ZN8SkCanvas17internalSaveLayerERKNS_12SaveLayerRecENS_17SaveLayerStrategyE(%class.SkCanvas* %0, %"struct.SkCanvas::SaveLayerRec"* dereferenceable(32) %1, i32 %56)
  br label %60

60:                                               ; preds = %51, %42
  %61 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 7
  %62 = load i32, i32* %61, align 8
  %63 = add nsw i32 %62, -1
  %64 = load %"struct.skia::tracing_internals::ScopedTracer::Data"*, %"struct.skia::tracing_internals::ScopedTracer::Data"** %18, align 8
  %65 = icmp eq %"struct.skia::tracing_internals::ScopedTracer::Data"* %64, null
  br i1 %65, label %79, label %66

66:                                               ; preds = %60
  %67 = load i8*, i8** %19, align 8
  %68 = load i8, i8* %67, align 1
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %79, label %70

70:                                               ; preds = %66
  %71 = call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %72 = load i8*, i8** %19, align 8
  %73 = load i8*, i8** %20, align 8
  %74 = load i64, i64* %21, align 8
  %75 = bitcast %class.SkEventTracer* %71 to void (%class.SkEventTracer*, i8*, i8*, i64)***
  %76 = load void (%class.SkEventTracer*, i8*, i8*, i64)**, void (%class.SkEventTracer*, i8*, i8*, i64)*** %75, align 8
  %77 = getelementptr inbounds void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %76, i64 5
  %78 = load void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %77, align 8
  call void %78(%class.SkEventTracer* %71, i8* %72, i8* %73, i64 %74) #15
  br label %79

79:                                               ; preds = %60, %66, %70
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #15
  ret i32 %63
}

declare %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() local_unnamed_addr #4

declare zeroext i1 @_ZNK7SkPaint13nothingToDrawEv(%class.SkPaint*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas17internalSaveLayerERKNS_12SaveLayerRecENS_17SaveLayerStrategyE(%class.SkCanvas*, %"struct.SkCanvas::SaveLayerRec"* nocapture readonly dereferenceable(32), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.sk_sp.3, align 8
  %5 = alloca %class.SkM44, align 4
  %6 = alloca { <2 x float>, <2 x float> }, align 8
  %7 = alloca %"class.skia::tracing_internals::ScopedTracer", align 8
  %8 = alloca %class.SkTCopyOnFirstWrite, align 8
  %9 = alloca %class.sk_sp.56, align 8
  %10 = alloca %class.SkM44, align 4
  %11 = alloca %class.SkMatrix, align 16
  %12 = alloca %class.sk_sp.58, align 8
  %13 = alloca %class.SkMatrix, align 4
  %14 = alloca %class.sk_sp.58, align 8
  %15 = alloca %struct.SkIRect, align 4
  %16 = alloca %"struct.SkBaseDevice::CreateInfo", align 8
  %17 = alloca { i64, i64 }, align 8
  %18 = bitcast { i64, i64 }* %17 to %struct.SkIRect*
  %19 = alloca %struct.SkImageInfo, align 8
  %20 = alloca %struct.SkIPoint, align 4
  %21 = alloca %class.SkMatrix, align 4
  %22 = alloca %class.sk_sp.2, align 8
  %23 = load atomic i64, i64* @_ZZN8SkCanvas17internalSaveLayerERKNS_12SaveLayerRecENS_17SaveLayerStrategyEE28trace_event_unique_atomic950.0.0 monotonic, align 8
  %24 = inttoptr i64 %23 to i8*
  %25 = icmp eq i64 %23, 0
  br i1 %25, label %26, label %34

26:                                               ; preds = %3
  %27 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %28 = bitcast %class.SkEventTracer* %27 to i8* (%class.SkEventTracer*, i8*)***
  %29 = load i8* (%class.SkEventTracer*, i8*)**, i8* (%class.SkEventTracer*, i8*)*** %28, align 8
  %30 = getelementptr inbounds i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %29, i64 2
  %31 = load i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %30, align 8
  %32 = tail call i8* %31(%class.SkEventTracer* %27, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0)) #15
  %33 = ptrtoint i8* %32 to i64
  store atomic i64 %33, i64* @_ZZN8SkCanvas17internalSaveLayerERKNS_12SaveLayerRecENS_17SaveLayerStrategyEE28trace_event_unique_atomic950.0.0 monotonic, align 8
  br label %34

34:                                               ; preds = %3, %26
  %35 = phi i8* [ %24, %3 ], [ %32, %26 ]
  %36 = bitcast %"class.skia::tracing_internals::ScopedTracer"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %36) #15
  %37 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %7, i64 0, i32 0
  %38 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %7, i64 0, i32 1, i32 0
  %39 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %7, i64 0, i32 1, i32 1
  %40 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %7, i64 0, i32 1, i32 2
  %41 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %7, i64 0, i32 1
  %42 = bitcast %"struct.skia::tracing_internals::ScopedTracer::Data"* %41 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 -86, i64 24, i1 false)
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* null, %"struct.skia::tracing_internals::ScopedTracer::Data"** %37, align 8
  %43 = load i8, i8* %35, align 1
  %44 = and i8 %43, 5
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %55, label %46

46:                                               ; preds = %34
  %47 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %48 = bitcast %class.SkEventTracer* %47 to i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)***
  %49 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)**, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*** %48, align 8
  %50 = getelementptr inbounds i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %49, i64 4
  %51 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %50, align 8
  %52 = tail call i64 %51(%class.SkEventTracer* %47, i8 signext 88, i8* %35, i8* getelementptr inbounds ([94 x i8], [94 x i8]* @__PRETTY_FUNCTION__._ZN8SkCanvas17internalSaveLayerERKNS_12SaveLayerRecENS_17SaveLayerStrategyE, i64 0, i64 0), i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #15
  %53 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %7, i64 0, i32 1
  %54 = getelementptr inbounds %"struct.skia::tracing_internals::ScopedTracer::Data", %"struct.skia::tracing_internals::ScopedTracer::Data"* %53, i64 0, i32 0
  store i8* %35, i8** %54, align 8
  store i8* getelementptr inbounds ([94 x i8], [94 x i8]* @__PRETTY_FUNCTION__._ZN8SkCanvas17internalSaveLayerERKNS_12SaveLayerRecENS_17SaveLayerStrategyE, i64 0, i64 0), i8** %39, align 8
  store i64 %52, i64* %40, align 8
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* %53, %"struct.skia::tracing_internals::ScopedTracer::Data"** %37, align 8
  br label %55

55:                                               ; preds = %34, %46
  %56 = getelementptr inbounds %"struct.SkCanvas::SaveLayerRec", %"struct.SkCanvas::SaveLayerRec"* %1, i64 0, i32 0
  %57 = load %struct.SkRect*, %struct.SkRect** %56, align 8
  %58 = getelementptr inbounds %"struct.SkCanvas::SaveLayerRec", %"struct.SkCanvas::SaveLayerRec"* %1, i64 0, i32 3
  %59 = load i32, i32* %58, align 8
  %60 = bitcast %class.SkTCopyOnFirstWrite* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %60) #15
  %61 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %8, i64 0, i32 1, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %61, i8 -86, i64 72, i1 false)
  %62 = getelementptr inbounds %"struct.SkCanvas::SaveLayerRec", %"struct.SkCanvas::SaveLayerRec"* %1, i64 0, i32 1
  %63 = load %class.SkPaint*, %class.SkPaint** %62, align 8
  %64 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %8, i64 0, i32 0
  store %class.SkPaint* %63, %class.SkPaint** %64, align 8
  %65 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %8, i64 0, i32 1, i32 1
  store %class.SkPaint* null, %class.SkPaint** %65, align 8
  %66 = icmp eq %class.SkPaint* %63, null
  br i1 %66, label %67, label %72

67:                                               ; preds = %55
  %68 = getelementptr inbounds %"struct.SkCanvas::SaveLayerRec", %"struct.SkCanvas::SaveLayerRec"* %1, i64 0, i32 2
  %69 = load %class.SkImageFilter*, %class.SkImageFilter** %68, align 8
  %70 = icmp eq %class.SkImageFilter* %69, null
  %71 = select i1 %70, %struct.SkRect* %57, %struct.SkRect* null
  br label %106

72:                                               ; preds = %55
  %73 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %63, i64 0, i32 2, i32 0
  %74 = load %class.SkMaskFilter*, %class.SkMaskFilter** %73, align 8
  %75 = icmp eq %class.SkMaskFilter* %74, null
  br i1 %75, label %95, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %8, i64 0, i32 1
  %78 = bitcast %class.SkTLazy* %77 to %class.SkPaint*
  call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* %78, %class.SkPaint* nonnull dereferenceable(72) %63) #15
  %79 = bitcast %class.SkPaint** %65 to %class.SkTLazy**
  store %class.SkTLazy* %77, %class.SkTLazy** %79, align 8
  %80 = ptrtoint %class.SkTLazy* %77 to i64
  %81 = bitcast %class.SkTCopyOnFirstWrite* %8 to i64*
  store i64 %80, i64* %81, align 8
  %82 = getelementptr inbounds %class.sk_sp.56, %class.sk_sp.56* %9, i64 0, i32 0
  store %class.SkMaskFilter* null, %class.SkMaskFilter** %82, align 8
  call void @_ZN7SkPaint13setMaskFilterE5sk_spI12SkMaskFilterE(%class.SkPaint* %78, %class.sk_sp.56* nonnull %9) #15
  %83 = load %class.SkMaskFilter*, %class.SkMaskFilter** %82, align 8
  %84 = icmp eq %class.SkMaskFilter* %83, null
  br i1 %84, label %95, label %85

85:                                               ; preds = %76
  %86 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %83, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = atomicrmw add i32* %86, i32 -1 acq_rel
  %88 = icmp eq i32 %87, 1
  br i1 %88, label %89, label %95

89:                                               ; preds = %85
  %90 = bitcast %class.SkMaskFilter* %83 to %class.SkRefCntBase*
  %91 = bitcast %class.SkMaskFilter* %83 to void (%class.SkRefCntBase*)***
  %92 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %91, align 8
  %93 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %92, i64 2
  %94 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %93, align 8
  call void %94(%class.SkRefCntBase* nonnull %90) #15
  br label %95

95:                                               ; preds = %89, %85, %76, %72
  %96 = load %class.SkPaint*, %class.SkPaint** %64, align 8
  %97 = getelementptr inbounds %"struct.SkCanvas::SaveLayerRec", %"struct.SkCanvas::SaveLayerRec"* %1, i64 0, i32 2
  %98 = load %class.SkImageFilter*, %class.SkImageFilter** %97, align 8
  %99 = icmp eq %class.SkImageFilter* %98, null
  %100 = select i1 %99, %struct.SkRect* %57, %struct.SkRect* null
  %101 = icmp eq %class.SkPaint* %96, null
  br i1 %101, label %106, label %102

102:                                              ; preds = %95
  %103 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %96, i64 0, i32 4, i32 0
  %104 = load %class.SkImageFilter*, %class.SkImageFilter** %103, align 8
  %105 = bitcast %class.SkImageFilter* %104 to %class.SkImageFilter_Base*
  br label %106

106:                                              ; preds = %67, %95, %102
  %107 = phi %struct.SkRect* [ %100, %102 ], [ %100, %95 ], [ %71, %67 ]
  %108 = phi %class.SkImageFilter** [ %97, %102 ], [ %97, %95 ], [ %68, %67 ]
  %109 = phi %class.SkImageFilter_Base* [ %105, %102 ], [ null, %95 ], [ null, %67 ]
  %110 = phi %class.SkImageFilter* [ %104, %102 ], [ null, %95 ], [ null, %67 ]
  %111 = bitcast %class.SkM44* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %111) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %111, i8 -1, i64 64, i1 false)
  %112 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %113 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %112, align 8
  %114 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %113, i64 0, i32 3
  %115 = bitcast %class.SkM44* %114 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %111, i8* align 8 %115, i64 64, i1 false)
  %116 = icmp eq %class.SkImageFilter* %110, null
  br i1 %116, label %277, label %117

117:                                              ; preds = %106
  %118 = bitcast %class.SkMatrix* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %118) #15
  %119 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %11, i64 0, i32 1
  %120 = bitcast %class.SkMatrix* %11 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %120, align 16
  %121 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %11, i64 0, i32 0, i64 4
  %122 = bitcast float* %121 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %122, align 16
  %123 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %11, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %123, align 16
  store i32 16, i32* %119, align 4
  %124 = bitcast %class.sk_sp.58* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %124) #15
  %125 = getelementptr inbounds %class.sk_sp.58, %class.sk_sp.58* %12, i64 0, i32 0
  store %class.SkImageFilter* inttoptr (i64 -6148914691236517206 to %class.SkImageFilter*), %class.SkImageFilter** %125, align 8
  %126 = bitcast %class.SkMatrix* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %126) #15
  %127 = bitcast %class.SkM44* %10 to i32*
  %128 = load i32, i32* %127, align 4, !noalias !54
  %129 = getelementptr inbounds %class.SkM44, %class.SkM44* %10, i64 0, i32 0, i64 4
  %130 = bitcast float* %129 to i32*
  %131 = load i32, i32* %130, align 4, !noalias !54
  %132 = getelementptr inbounds %class.SkM44, %class.SkM44* %10, i64 0, i32 0, i64 12
  %133 = bitcast float* %132 to i32*
  %134 = load i32, i32* %133, align 4, !noalias !54
  %135 = getelementptr inbounds %class.SkM44, %class.SkM44* %10, i64 0, i32 0, i64 1
  %136 = bitcast float* %135 to i32*
  %137 = load i32, i32* %136, align 4, !noalias !54
  %138 = getelementptr inbounds %class.SkM44, %class.SkM44* %10, i64 0, i32 0, i64 5
  %139 = bitcast float* %138 to i32*
  %140 = load i32, i32* %139, align 4, !noalias !54
  %141 = getelementptr inbounds %class.SkM44, %class.SkM44* %10, i64 0, i32 0, i64 13
  %142 = bitcast float* %141 to i32*
  %143 = load i32, i32* %142, align 4, !noalias !54
  %144 = getelementptr inbounds %class.SkM44, %class.SkM44* %10, i64 0, i32 0, i64 3
  %145 = bitcast float* %144 to i32*
  %146 = load i32, i32* %145, align 4, !noalias !54
  %147 = getelementptr inbounds %class.SkM44, %class.SkM44* %10, i64 0, i32 0, i64 7
  %148 = bitcast float* %147 to i32*
  %149 = load i32, i32* %148, align 4, !noalias !54
  %150 = getelementptr inbounds %class.SkM44, %class.SkM44* %10, i64 0, i32 0, i64 15
  %151 = bitcast float* %150 to i32*
  %152 = load i32, i32* %151, align 4, !noalias !54
  %153 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %13, i64 0, i32 1
  %154 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %13, i64 0, i32 0, i64 1
  %155 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %13, i64 0, i32 0, i64 2
  %156 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %13, i64 0, i32 0, i64 3
  %157 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %13, i64 0, i32 0, i64 4
  %158 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %13, i64 0, i32 0, i64 5
  %159 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %13, i64 0, i32 0, i64 6
  %160 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %13, i64 0, i32 0, i64 7
  %161 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %13, i64 0, i32 0, i64 8
  %162 = bitcast %class.SkMatrix* %13 to i32*
  store i32 %128, i32* %162, align 4, !alias.scope !57
  %163 = bitcast float* %154 to i32*
  store i32 %131, i32* %163, align 4, !alias.scope !57
  %164 = bitcast float* %155 to i32*
  store i32 %134, i32* %164, align 4, !alias.scope !57
  %165 = bitcast float* %156 to i32*
  store i32 %137, i32* %165, align 4, !alias.scope !57
  %166 = bitcast float* %157 to i32*
  store i32 %140, i32* %166, align 4, !alias.scope !57
  %167 = bitcast float* %158 to i32*
  store i32 %143, i32* %167, align 4, !alias.scope !57
  %168 = bitcast float* %159 to i32*
  store i32 %146, i32* %168, align 4, !alias.scope !57
  %169 = bitcast float* %160 to i32*
  store i32 %149, i32* %169, align 4, !alias.scope !57
  %170 = bitcast float* %161 to i32*
  store i32 %152, i32* %170, align 4, !alias.scope !57
  store i32 128, i32* %153, align 4, !alias.scope !57
  call void @_ZNK18SkImageFilter_Base8applyCTMERK8SkMatrixPS0_(%class.sk_sp.58* nonnull sret %12, %class.SkImageFilter_Base* %109, %class.SkMatrix* nonnull dereferenceable(40) %13, %class.SkMatrix* nonnull %11) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %126) #15
  %171 = bitcast %class.sk_sp.58* %12 to %class.SkImageFilter_Base**
  %172 = load %class.SkImageFilter_Base*, %class.SkImageFilter_Base** %171, align 8
  %173 = getelementptr inbounds %class.SkImageFilter_Base, %class.SkImageFilter_Base* %172, i64 0, i32 6
  %174 = load i32, i32* %173, align 8
  %175 = getelementptr inbounds %class.SkImageFilter_Base, %class.SkImageFilter_Base* %109, i64 0, i32 6
  %176 = load i32, i32* %175, align 8
  %177 = icmp eq i32 %174, %176
  br i1 %177, label %262, label %178

178:                                              ; preds = %117
  %179 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %11, i64 0, i32 0, i64 7
  %180 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %11, i64 0, i32 0, i64 6
  %181 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %11, i64 0, i32 0, i64 5
  %182 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %11, i64 0, i32 0, i64 3
  %183 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %11, i64 0, i32 0, i64 2
  %184 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %11, i64 0, i32 0, i64 1
  %185 = bitcast %class.SkMatrix* %11 to i32*
  %186 = load i32, i32* %185, align 16
  %187 = bitcast float* %184 to i32*
  %188 = load i32, i32* %187, align 4
  %189 = bitcast float* %183 to i32*
  %190 = load i32, i32* %189, align 8
  %191 = bitcast float* %182 to i32*
  %192 = load i32, i32* %191, align 4
  %193 = bitcast float* %121 to i32*
  %194 = load i32, i32* %193, align 16
  %195 = bitcast float* %181 to i32*
  %196 = load i32, i32* %195, align 4
  %197 = bitcast float* %180 to i32*
  %198 = load i32, i32* %197, align 8
  %199 = bitcast float* %179 to i32*
  %200 = load i32, i32* %199, align 4
  %201 = bitcast float* %123 to i32*
  %202 = load i32, i32* %201, align 16
  %203 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %112, align 8
  %204 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %203, i64 0, i32 3
  %205 = bitcast %class.SkM44* %204 to i32*
  store i32 %186, i32* %205, align 8
  %206 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %203, i64 0, i32 3, i32 0, i64 1
  %207 = bitcast float* %206 to i32*
  store i32 %192, i32* %207, align 4
  %208 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %203, i64 0, i32 3, i32 0, i64 2
  store float 0.000000e+00, float* %208, align 8
  %209 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %203, i64 0, i32 3, i32 0, i64 3
  %210 = bitcast float* %209 to i32*
  store i32 %198, i32* %210, align 4
  %211 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %203, i64 0, i32 3, i32 0, i64 4
  %212 = bitcast float* %211 to i32*
  store i32 %188, i32* %212, align 8
  %213 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %203, i64 0, i32 3, i32 0, i64 5
  %214 = bitcast float* %213 to i32*
  store i32 %194, i32* %214, align 4
  %215 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %203, i64 0, i32 3, i32 0, i64 6
  store float 0.000000e+00, float* %215, align 8
  %216 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %203, i64 0, i32 3, i32 0, i64 7
  %217 = bitcast float* %216 to i32*
  store i32 %200, i32* %217, align 4
  %218 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %203, i64 0, i32 3, i32 0, i64 8
  %219 = bitcast float* %218 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00>, <4 x float>* %219, align 8
  %220 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %203, i64 0, i32 3, i32 0, i64 12
  %221 = bitcast float* %220 to i32*
  store i32 %190, i32* %221, align 8
  %222 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %203, i64 0, i32 3, i32 0, i64 13
  %223 = bitcast float* %222 to i32*
  store i32 %196, i32* %223, align 4
  %224 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %203, i64 0, i32 3, i32 0, i64 14
  store float 0.000000e+00, float* %224, align 8
  %225 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %203, i64 0, i32 3, i32 0, i64 15
  %226 = bitcast float* %225 to i32*
  store i32 %202, i32* %226, align 4
  %227 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %112, align 8
  %228 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %227, i64 0, i32 1
  %229 = load %class.SkBaseDevice*, %class.SkBaseDevice** %228, align 8
  %230 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %227, i64 0, i32 3
  call void @_ZN12SkBaseDevice12setGlobalCTMERK5SkM44(%class.SkBaseDevice* %229, %class.SkM44* dereferenceable(64) %230) #15
  %231 = load %class.SkImageFilter*, %class.SkImageFilter** %125, align 8
  %232 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %8, i64 0, i32 1
  %233 = load %class.SkPaint*, %class.SkPaint** %65, align 8
  %234 = icmp eq %class.SkPaint* %233, null
  %235 = load %class.SkPaint*, %class.SkPaint** %64, align 8
  br i1 %234, label %238, label %236

236:                                              ; preds = %178
  %237 = ptrtoint %class.SkImageFilter* %231 to i64
  br label %245

238:                                              ; preds = %178
  %239 = bitcast %class.SkTLazy* %232 to %class.SkPaint*
  call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* %239, %class.SkPaint* dereferenceable(72) %235) #15
  %240 = bitcast %class.SkPaint** %65 to %class.SkTLazy**
  store %class.SkTLazy* %232, %class.SkTLazy** %240, align 8
  %241 = ptrtoint %class.SkTLazy* %232 to i64
  %242 = bitcast %class.SkTCopyOnFirstWrite* %8 to i64*
  store i64 %241, i64* %242, align 8
  %243 = bitcast %class.sk_sp.58* %12 to i64*
  %244 = load i64, i64* %243, align 8
  br label %245

245:                                              ; preds = %236, %238
  %246 = phi i64 [ %244, %238 ], [ %237, %236 ]
  %247 = phi %class.SkPaint* [ %239, %238 ], [ %235, %236 ]
  store %class.SkImageFilter* null, %class.SkImageFilter** %125, align 8
  %248 = bitcast %class.sk_sp.58* %14 to i64*
  store i64 %246, i64* %248, align 8
  call void @_ZN7SkPaint14setImageFilterE5sk_spI13SkImageFilterE(%class.SkPaint* %247, %class.sk_sp.58* nonnull %14) #15
  %249 = getelementptr inbounds %class.sk_sp.58, %class.sk_sp.58* %14, i64 0, i32 0
  %250 = load %class.SkImageFilter*, %class.SkImageFilter** %249, align 8
  %251 = icmp eq %class.SkImageFilter* %250, null
  br i1 %251, label %262, label %252

252:                                              ; preds = %245
  %253 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %250, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %254 = atomicrmw add i32* %253, i32 -1 acq_rel
  %255 = icmp eq i32 %254, 1
  br i1 %255, label %256, label %262

256:                                              ; preds = %252
  %257 = bitcast %class.SkImageFilter* %250 to %class.SkRefCntBase*
  %258 = bitcast %class.SkImageFilter* %250 to void (%class.SkRefCntBase*)***
  %259 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %258, align 8
  %260 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %259, i64 2
  %261 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %260, align 8
  call void %261(%class.SkRefCntBase* nonnull %257) #15
  br label %262

262:                                              ; preds = %256, %252, %245, %117
  %263 = phi %class.SkImageFilter* [ %110, %117 ], [ %231, %245 ], [ %231, %252 ], [ %231, %256 ]
  %264 = load %class.SkImageFilter*, %class.SkImageFilter** %125, align 8
  %265 = icmp eq %class.SkImageFilter* %264, null
  br i1 %265, label %276, label %266

266:                                              ; preds = %262
  %267 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %264, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %268 = atomicrmw add i32* %267, i32 -1 acq_rel
  %269 = icmp eq i32 %268, 1
  br i1 %269, label %270, label %276

270:                                              ; preds = %266
  %271 = bitcast %class.SkImageFilter* %264 to %class.SkRefCntBase*
  %272 = bitcast %class.SkImageFilter* %264 to void (%class.SkRefCntBase*)***
  %273 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %272, align 8
  %274 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %273, i64 2
  %275 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %274, align 8
  call void %275(%class.SkRefCntBase* nonnull %271) #15
  br label %276

276:                                              ; preds = %262, %266, %270
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %124) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %118) #15
  br label %277

277:                                              ; preds = %106, %276
  %278 = phi %class.SkImageFilter* [ %263, %276 ], [ null, %106 ]
  %279 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 1
  %280 = call i8* @_ZN7SkDeque9push_backEv(%class.SkDeque* %279) #15
  %281 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %112, align 8
  %282 = bitcast i8* %280 to i64*
  store i64 0, i64* %282, align 8
  %283 = getelementptr inbounds i8, i8* %280, i64 8
  %284 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %281, i64 0, i32 1
  %285 = bitcast %class.SkBaseDevice** %284 to i64*
  %286 = load i64, i64* %285, align 8
  %287 = bitcast i8* %283 to i64*
  store i64 %286, i64* %287, align 8
  %288 = getelementptr inbounds i8, i8* %280, i64 16
  %289 = bitcast i8* %288 to i64*
  store i64 0, i64* %289, align 8
  %290 = getelementptr inbounds i8, i8* %280, i64 24
  %291 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %281, i64 0, i32 3
  %292 = bitcast %class.SkM44* %291 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %290, i8* align 8 %292, i64 64, i1 false) #15
  %293 = getelementptr inbounds i8, i8* %280, i64 88
  %294 = bitcast i8* %293 to i32*
  store i32 0, i32* %294, align 8
  %295 = bitcast %"class.SkCanvas::MCRec"** %112 to i8**
  store i8* %280, i8** %295, align 8
  %296 = bitcast i8* %283 to %class.SkBaseDevice**
  %297 = load %class.SkBaseDevice*, %class.SkBaseDevice** %296, align 8
  %298 = bitcast %class.SkBaseDevice* %297 to void (%class.SkBaseDevice*)***
  %299 = load void (%class.SkBaseDevice*)**, void (%class.SkBaseDevice*)*** %298, align 8
  %300 = getelementptr inbounds void (%class.SkBaseDevice*)*, void (%class.SkBaseDevice*)** %299, i64 10
  %301 = load void (%class.SkBaseDevice*)*, void (%class.SkBaseDevice*)** %300, align 8
  call void %301(%class.SkBaseDevice* %297) #15
  %302 = bitcast %struct.SkIRect* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %302) #15
  %303 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %15, i64 0, i32 0
  %304 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %15, i64 0, i32 1
  %305 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %15, i64 0, i32 2
  %306 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %15, i64 0, i32 3
  %307 = bitcast %struct.SkIRect* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %307, i8 -86, i64 16, i1 false)
  %308 = call zeroext i1 @_ZN8SkCanvas14clipRectBoundsEPK6SkRectP7SkIRectPK13SkImageFilter(%class.SkCanvas* %0, %struct.SkRect* %107, %struct.SkIRect* nonnull %15, %class.SkImageFilter* %278)
  br i1 %308, label %313, label %309

309:                                              ; preds = %277
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %302, i8 0, i64 16, i1 false) #15
  %310 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %112, align 8
  %311 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %310, i64 0, i32 1
  %312 = load %class.SkBaseDevice*, %class.SkBaseDevice** %311, align 8
  br label %416

313:                                              ; preds = %277
  %314 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %112, align 8
  %315 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %314, i64 0, i32 1
  %316 = load %class.SkBaseDevice*, %class.SkBaseDevice** %315, align 8
  %317 = icmp eq i32 %2, 0
  br i1 %317, label %318, label %416

318:                                              ; preds = %313
  %319 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %316, i64 0, i32 3
  %320 = load i32, i32* %305, align 4
  %321 = load i32, i32* %303, align 4
  %322 = sub i32 %320, %321
  %323 = load i32, i32* %306, align 4
  %324 = load i32, i32* %304, align 4
  %325 = sub i32 %323, %324
  %326 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %316, i64 0, i32 3, i32 0, i32 1
  %327 = load i32, i32* %326, align 8, !noalias !60
  %328 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %319, i64 0, i32 0
  %329 = call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* %328) #15, !noalias !60
  %330 = icmp slt i32 %329, 5
  br i1 %330, label %331, label %337

331:                                              ; preds = %318
  %332 = load i32, i32* %326, align 8, !noalias !60
  %333 = icmp eq i32 %332, 4
  br i1 %333, label %337, label %334

334:                                              ; preds = %331
  %335 = icmp eq i32 %332, 6
  %336 = select i1 %335, i32 %327, i32 6
  br label %337

337:                                              ; preds = %334, %331, %318
  %338 = phi i32 [ %327, %331 ], [ %327, %318 ], [ %336, %334 ]
  %339 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %319, i64 0, i32 0, i32 0, i32 0
  %340 = load %class.SkColorSpace*, %class.SkColorSpace** %339, align 8, !noalias !63
  %341 = icmp eq %class.SkColorSpace* %340, null
  br i1 %341, label %345, label %342

342:                                              ; preds = %337
  %343 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %340, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %344 = atomicrmw add i32* %343, i32 1 monotonic, !noalias !63
  br label %345

345:                                              ; preds = %337, %342
  %346 = zext i32 %325 to i64
  %347 = shl nuw i64 %346, 32
  %348 = zext i32 %322 to i64
  %349 = or i64 %347, %348
  %350 = load i32, i32* %58, align 8
  %351 = and i32 %350, 16
  %352 = icmp eq i32 %351, 0
  %353 = or i1 %341, %352
  %354 = select i1 %352, i32 %338, i32 13
  br i1 %353, label %362, label %355

355:                                              ; preds = %345
  %356 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %340, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %357 = atomicrmw add i32* %356, i32 1 monotonic, !noalias !68
  %358 = atomicrmw add i32* %356, i32 -1 acq_rel
  %359 = icmp eq i32 %358, 1
  br i1 %359, label %360, label %362

360:                                              ; preds = %355
  %361 = bitcast %class.SkColorSpace* %340 to i8*
  call void @_ZdlPv(i8* %361) #16
  br label %362

362:                                              ; preds = %345, %355, %360
  %363 = phi i32 [ %354, %345 ], [ 13, %360 ], [ 13, %355 ]
  %364 = and i32 %59, 2
  %365 = icmp eq i32 %364, 0
  br i1 %365, label %369, label %366

366:                                              ; preds = %362
  %367 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 6, i32 1
  %368 = load i32, i32* %367, align 4
  br label %369

369:                                              ; preds = %362, %366
  %370 = phi i32 [ %368, %366 ], [ 0, %362 ]
  %371 = bitcast %"struct.SkBaseDevice::CreateInfo"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %371) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %371, i8 -86, i64 48, i1 false)
  %372 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %373 = bitcast %class.SkRasterHandleAllocator** %372 to i64*
  %374 = load i64, i64* %373, align 8
  %375 = lshr i32 %59, 3
  %376 = trunc i32 %375 to i8
  %377 = and i8 %376, 1
  %378 = getelementptr inbounds %"struct.SkBaseDevice::CreateInfo", %"struct.SkBaseDevice::CreateInfo"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  br i1 %341, label %382, label %379

379:                                              ; preds = %369
  %380 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %340, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %381 = atomicrmw add i32* %380, i32 1 monotonic
  br label %382

382:                                              ; preds = %379, %369
  store %class.SkColorSpace* %340, %class.SkColorSpace** %378, align 8
  %383 = getelementptr inbounds %"struct.SkBaseDevice::CreateInfo", %"struct.SkBaseDevice::CreateInfo"* %16, i64 0, i32 0, i32 0, i32 1
  %384 = bitcast i32* %383 to i64*
  %385 = zext i32 %363 to i64
  %386 = or i64 %385, 8589934592
  store i64 %386, i64* %384, align 8
  %387 = getelementptr inbounds %"struct.SkBaseDevice::CreateInfo", %"struct.SkBaseDevice::CreateInfo"* %16, i64 0, i32 0, i32 1
  %388 = bitcast %struct.SkISize* %387 to i64*
  store i64 %349, i64* %388, align 8
  %389 = getelementptr inbounds %"struct.SkBaseDevice::CreateInfo", %"struct.SkBaseDevice::CreateInfo"* %16, i64 0, i32 1
  store i32 1, i32* %389, align 8
  %390 = getelementptr inbounds %"struct.SkBaseDevice::CreateInfo", %"struct.SkBaseDevice::CreateInfo"* %16, i64 0, i32 2
  store i32 %370, i32* %390, align 4
  %391 = getelementptr inbounds %"struct.SkBaseDevice::CreateInfo", %"struct.SkBaseDevice::CreateInfo"* %16, i64 0, i32 3
  store i8 %377, i8* %391, align 8
  %392 = getelementptr inbounds %"struct.SkBaseDevice::CreateInfo", %"struct.SkBaseDevice::CreateInfo"* %16, i64 0, i32 4
  %393 = bitcast %class.SkRasterHandleAllocator** %392 to i64*
  store i64 %374, i64* %393, align 8
  %394 = load %class.SkPaint*, %class.SkPaint** %64, align 8
  %395 = bitcast %class.SkBaseDevice* %316 to %class.SkBaseDevice* (%class.SkBaseDevice*, %"struct.SkBaseDevice::CreateInfo"*, %class.SkPaint*)***
  %396 = load %class.SkBaseDevice* (%class.SkBaseDevice*, %"struct.SkBaseDevice::CreateInfo"*, %class.SkPaint*)**, %class.SkBaseDevice* (%class.SkBaseDevice*, %"struct.SkBaseDevice::CreateInfo"*, %class.SkPaint*)*** %395, align 8
  %397 = getelementptr inbounds %class.SkBaseDevice* (%class.SkBaseDevice*, %"struct.SkBaseDevice::CreateInfo"*, %class.SkPaint*)*, %class.SkBaseDevice* (%class.SkBaseDevice*, %"struct.SkBaseDevice::CreateInfo"*, %class.SkPaint*)** %396, i64 56
  %398 = load %class.SkBaseDevice* (%class.SkBaseDevice*, %"struct.SkBaseDevice::CreateInfo"*, %class.SkPaint*)*, %class.SkBaseDevice* (%class.SkBaseDevice*, %"struct.SkBaseDevice::CreateInfo"*, %class.SkPaint*)** %397, align 8
  %399 = call %class.SkBaseDevice* %398(%class.SkBaseDevice* %316, %"struct.SkBaseDevice::CreateInfo"* nonnull dereferenceable(48) %16, %class.SkPaint* %394) #15
  %400 = ptrtoint %class.SkBaseDevice* %399 to i64
  %401 = load %class.SkColorSpace*, %class.SkColorSpace** %378, align 8
  %402 = icmp eq %class.SkColorSpace* %401, null
  br i1 %402, label %409, label %403

403:                                              ; preds = %382
  %404 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %401, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %405 = atomicrmw add i32* %404, i32 -1 acq_rel
  %406 = icmp eq i32 %405, 1
  br i1 %406, label %407, label %409

407:                                              ; preds = %403
  %408 = bitcast %class.SkColorSpace* %401 to i8*
  call void @_ZdlPv(i8* %408) #16
  br label %409

409:                                              ; preds = %382, %403, %407
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %371) #15
  br i1 %341, label %416, label %410

410:                                              ; preds = %409
  %411 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %340, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %412 = atomicrmw add i32* %411, i32 -1 acq_rel
  %413 = icmp eq i32 %412, 1
  br i1 %413, label %414, label %416

414:                                              ; preds = %410
  %415 = bitcast %class.SkColorSpace* %340 to i8*
  call void @_ZdlPv(i8* %415) #16
  br label %416

416:                                              ; preds = %414, %410, %409, %309, %313
  %417 = phi %class.SkBaseDevice* [ %316, %313 ], [ %312, %309 ], [ %316, %409 ], [ %316, %410 ], [ %316, %414 ]
  %418 = phi i64 [ 0, %313 ], [ 0, %309 ], [ %400, %409 ], [ %400, %410 ], [ %400, %414 ]
  %419 = load i32, i32* %58, align 8
  %420 = and i32 %419, 4
  %421 = icmp eq i32 %420, 0
  br i1 %421, label %422, label %425

422:                                              ; preds = %416
  %423 = load %class.SkImageFilter*, %class.SkImageFilter** %108, align 8
  %424 = icmp ne %class.SkImageFilter* %423, null
  br label %425

425:                                              ; preds = %416, %422
  %426 = phi i1 [ true, %416 ], [ %424, %422 ]
  %427 = inttoptr i64 %418 to %class.SkBaseDevice*
  %428 = icmp eq i64 %418, 0
  br i1 %428, label %429, label %487

429:                                              ; preds = %425
  %430 = bitcast { i64, i64 }* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %430) #15
  %431 = load i32, i32* %305, align 4
  %432 = load i32, i32* %303, align 4
  %433 = sub i32 %431, %432
  %434 = load i32, i32* %306, align 4
  %435 = load i32, i32* %304, align 4
  %436 = sub i32 %434, %435
  %437 = zext i32 %436 to i64
  %438 = shl nuw i64 %437, 32
  %439 = zext i32 %433 to i64
  %440 = or i64 %438, %439
  %441 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i64 0, i32 0
  store i64 0, i64* %441, align 8
  %442 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i64 0, i32 1
  store i64 %440, i64* %442, align 8
  %443 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 6
  %444 = bitcast %struct.SkImageInfo* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %444) #15
  %445 = bitcast %class.SkCanvas* %0 to void (%struct.SkImageInfo*, %class.SkCanvas*)***
  %446 = load void (%struct.SkImageInfo*, %class.SkCanvas*)**, void (%struct.SkImageInfo*, %class.SkCanvas*)*** %445, align 8, !noalias !75
  %447 = getelementptr inbounds void (%struct.SkImageInfo*, %class.SkCanvas*)*, void (%struct.SkImageInfo*, %class.SkCanvas*)** %446, i64 9
  %448 = load void (%struct.SkImageInfo*, %class.SkCanvas*)*, void (%struct.SkImageInfo*, %class.SkCanvas*)** %447, align 8, !noalias !75
  call void %448(%struct.SkImageInfo* nonnull sret %19, %class.SkCanvas* %0) #15
  %449 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %19, i64 0, i32 0, i32 0, i32 0
  %450 = load %class.SkColorSpace*, %class.SkColorSpace** %449, align 8, !noalias !78
  %451 = icmp eq %class.SkColorSpace* %450, null
  br i1 %451, label %455, label %452

452:                                              ; preds = %429
  %453 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %450, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %454 = atomicrmw add i32* %453, i32 1 monotonic, !noalias !78
  br label %455

455:                                              ; preds = %429, %452
  %456 = ptrtoint %class.SkColorSpace* %450 to i64
  %457 = bitcast %class.sk_sp.3* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %457)
  %458 = call i8* @_Znwm(i64 488) #16, !noalias !83
  %459 = bitcast i8* %458 to %class.SkNoPixelsDevice*
  %460 = bitcast %class.sk_sp.3* %4 to i64*
  store i64 %456, i64* %460, align 8, !noalias !83
  call void @_ZN16SkNoPixelsDeviceC2ERK7SkIRectRK14SkSurfaceProps5sk_spI12SkColorSpaceE(%class.SkNoPixelsDevice* nonnull %459, %struct.SkIRect* nonnull dereferenceable(16) %18, %class.SkSurfaceProps* dereferenceable(8) %443, %class.sk_sp.3* nonnull %4) #15, !noalias !83
  %461 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %4, i64 0, i32 0
  %462 = load %class.SkColorSpace*, %class.SkColorSpace** %461, align 8, !noalias !83
  %463 = icmp eq %class.SkColorSpace* %462, null
  br i1 %463, label %470, label %464

464:                                              ; preds = %455
  %465 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %462, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %466 = atomicrmw add i32* %465, i32 -1 acq_rel, !noalias !83
  %467 = icmp eq i32 %466, 1
  br i1 %467, label %468, label %470

468:                                              ; preds = %464
  %469 = bitcast %class.SkColorSpace* %462 to i8*
  call void @_ZdlPv(i8* %469) #16, !noalias !83
  br label %470

470:                                              ; preds = %468, %464, %455
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %457)
  %471 = ptrtoint i8* %458 to i64
  %472 = load %class.SkColorSpace*, %class.SkColorSpace** %449, align 8
  %473 = icmp eq %class.SkColorSpace* %472, null
  br i1 %473, label %480, label %474

474:                                              ; preds = %470
  %475 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %472, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %476 = atomicrmw add i32* %475, i32 -1 acq_rel
  %477 = icmp eq i32 %476, 1
  br i1 %477, label %478, label %480

478:                                              ; preds = %474
  %479 = bitcast %class.SkColorSpace* %472 to i8*
  call void @_ZdlPv(i8* %479) #16
  br label %480

480:                                              ; preds = %470, %474, %478
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %444) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %430) #15
  %481 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 3, i32 0
  %482 = bitcast %class.SkMarkerStack** %481 to i64*
  %483 = load i64, i64* %482, align 8
  %484 = getelementptr inbounds i8, i8* %458, i64 128
  %485 = bitcast i8* %484 to i64*
  store i64 %483, i64* %485, align 8
  %486 = bitcast i8* %458 to %class.SkBaseDevice*
  br label %547

487:                                              ; preds = %425
  %488 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 3, i32 0
  %489 = bitcast %class.SkMarkerStack** %488 to i64*
  %490 = load i64, i64* %489, align 8
  %491 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %427, i64 0, i32 2
  %492 = bitcast %class.SkMarkerStack** %491 to i64*
  store i64 %490, i64* %492, align 8
  br i1 %426, label %493, label %547

493:                                              ; preds = %487
  %494 = load %class.SkImageFilter*, %class.SkImageFilter** %108, align 8
  %495 = bitcast %struct.SkIPoint* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %495) #15
  %496 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %20, i64 0, i32 0
  %497 = load i32, i32* %303, align 4
  store i32 %497, i32* %496, align 4
  %498 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %20, i64 0, i32 1
  %499 = load i32, i32* %304, align 4
  store i32 %499, i32* %498, align 4
  %500 = bitcast %class.SkMatrix* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %500) #15
  %501 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %112, align 8
  %502 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %501, i64 0, i32 3
  %503 = bitcast %class.SkM44* %502 to i32*
  %504 = load i32, i32* %503, align 4, !noalias !86
  %505 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %501, i64 0, i32 3, i32 0, i64 4
  %506 = bitcast float* %505 to i32*
  %507 = load i32, i32* %506, align 4, !noalias !86
  %508 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %501, i64 0, i32 3, i32 0, i64 12
  %509 = bitcast float* %508 to i32*
  %510 = load i32, i32* %509, align 4, !noalias !86
  %511 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %501, i64 0, i32 3, i32 0, i64 1
  %512 = bitcast float* %511 to i32*
  %513 = load i32, i32* %512, align 4, !noalias !86
  %514 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %501, i64 0, i32 3, i32 0, i64 5
  %515 = bitcast float* %514 to i32*
  %516 = load i32, i32* %515, align 4, !noalias !86
  %517 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %501, i64 0, i32 3, i32 0, i64 13
  %518 = bitcast float* %517 to i32*
  %519 = load i32, i32* %518, align 4, !noalias !86
  %520 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %501, i64 0, i32 3, i32 0, i64 3
  %521 = bitcast float* %520 to i32*
  %522 = load i32, i32* %521, align 4, !noalias !86
  %523 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %501, i64 0, i32 3, i32 0, i64 7
  %524 = bitcast float* %523 to i32*
  %525 = load i32, i32* %524, align 4, !noalias !86
  %526 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %501, i64 0, i32 3, i32 0, i64 15
  %527 = bitcast float* %526 to i32*
  %528 = load i32, i32* %527, align 4, !noalias !86
  %529 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %21, i64 0, i32 1
  %530 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %21, i64 0, i32 0, i64 1
  %531 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %21, i64 0, i32 0, i64 2
  %532 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %21, i64 0, i32 0, i64 3
  %533 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %21, i64 0, i32 0, i64 4
  %534 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %21, i64 0, i32 0, i64 5
  %535 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %21, i64 0, i32 0, i64 6
  %536 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %21, i64 0, i32 0, i64 7
  %537 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %21, i64 0, i32 0, i64 8
  %538 = bitcast %class.SkMatrix* %21 to i32*
  store i32 %504, i32* %538, align 4, !alias.scope !89
  %539 = bitcast float* %530 to i32*
  store i32 %507, i32* %539, align 4, !alias.scope !89
  %540 = bitcast float* %531 to i32*
  store i32 %510, i32* %540, align 4, !alias.scope !89
  %541 = bitcast float* %532 to i32*
  store i32 %513, i32* %541, align 4, !alias.scope !89
  %542 = bitcast float* %533 to i32*
  store i32 %516, i32* %542, align 4, !alias.scope !89
  %543 = bitcast float* %534 to i32*
  store i32 %519, i32* %543, align 4, !alias.scope !89
  %544 = bitcast float* %535 to i32*
  store i32 %522, i32* %544, align 4, !alias.scope !89
  %545 = bitcast float* %536 to i32*
  store i32 %525, i32* %545, align 4, !alias.scope !89
  %546 = bitcast float* %537 to i32*
  store i32 %528, i32* %546, align 4, !alias.scope !89
  store i32 128, i32* %529, align 4, !alias.scope !89
  call void @_ZN8SkCanvas20DrawDeviceWithFilterEP12SkBaseDevicePK13SkImageFilterS1_RK8SkIPointRK8SkMatrix(%class.SkBaseDevice* %417, %class.SkImageFilter* %494, %class.SkBaseDevice* nonnull %427, %struct.SkIPoint* nonnull dereferenceable(8) %20, %class.SkMatrix* nonnull dereferenceable(40) %21)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %500) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %495) #15
  br label %547

547:                                              ; preds = %480, %493, %487
  %548 = phi %class.SkBaseDevice* [ %486, %480 ], [ %427, %493 ], [ %427, %487 ]
  %549 = phi i64 [ %471, %480 ], [ %418, %493 ], [ %418, %487 ]
  %550 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %112, align 8
  %551 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %550, i64 0, i32 3
  %552 = load i32, i32* %303, align 4
  %553 = load i32, i32* %304, align 4
  %554 = bitcast %class.SkM44* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %554) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %554, i8* align 4 bitcast ([16 x float]* @constinit to i8*), i64 64, i1 false) #15
  call void @_ZN12SkBaseDevice25setDeviceCoordinateSystemERK5SkM44S2_ii(%class.SkBaseDevice* %548, %class.SkM44* nonnull dereferenceable(64) %5, %class.SkM44* dereferenceable(64) %551, i32 %552, i32 %553) #15
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %554) #15
  %555 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 10
  %556 = inttoptr i64 %549 to void (%class.SkBaseDevice*, %struct.SkIRect*)***
  %557 = load void (%class.SkBaseDevice*, %struct.SkIRect*)**, void (%class.SkBaseDevice*, %struct.SkIRect*)*** %556, align 8
  %558 = getelementptr inbounds void (%class.SkBaseDevice*, %struct.SkIRect*)*, void (%class.SkBaseDevice*, %struct.SkIRect*)** %557, i64 18
  %559 = load void (%class.SkBaseDevice*, %struct.SkIRect*)*, void (%class.SkBaseDevice*, %struct.SkIRect*)** %558, align 8
  call void %559(%class.SkBaseDevice* %548, %struct.SkIRect* %555) #15
  %560 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %112, align 8
  %561 = bitcast %class.sk_sp.2* %22 to i64*
  store i64 %549, i64* %561, align 8
  %562 = load %class.SkPaint*, %class.SkPaint** %64, align 8
  call void @_ZN8SkCanvas5MCRec8newLayerE5sk_spI12SkBaseDeviceEPK7SkPaintRK5SkM44(%"class.SkCanvas::MCRec"* %560, %class.sk_sp.2* nonnull %22, %class.SkPaint* %562, %class.SkM44* nonnull dereferenceable(64) %10)
  %563 = getelementptr inbounds %class.sk_sp.2, %class.sk_sp.2* %22, i64 0, i32 0
  %564 = load %class.SkBaseDevice*, %class.SkBaseDevice** %563, align 8
  %565 = icmp eq %class.SkBaseDevice* %564, null
  br i1 %565, label %576, label %566

566:                                              ; preds = %547
  %567 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %564, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %568 = atomicrmw add i32* %567, i32 -1 acq_rel
  %569 = icmp eq i32 %568, 1
  br i1 %569, label %570, label %576

570:                                              ; preds = %566
  %571 = bitcast %class.SkBaseDevice* %564 to %class.SkRefCntBase*
  %572 = bitcast %class.SkBaseDevice* %564 to void (%class.SkRefCntBase*)***
  %573 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %572, align 8
  %574 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %573, i64 2
  %575 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %574, align 8
  call void %575(%class.SkRefCntBase* nonnull %571) #15
  br label %576

576:                                              ; preds = %547, %566, %570
  %577 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %112, align 8
  %578 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %577, i64 0, i32 1
  %579 = load %class.SkBaseDevice*, %class.SkBaseDevice** %578, align 8
  %580 = bitcast %class.SkBaseDevice* %579 to i32 (%class.SkBaseDevice*)***
  %581 = load i32 (%class.SkBaseDevice*)**, i32 (%class.SkBaseDevice*)*** %580, align 8
  %582 = getelementptr inbounds i32 (%class.SkBaseDevice*)*, i32 (%class.SkBaseDevice*)** %581, i64 22
  %583 = load i32 (%class.SkBaseDevice*)*, i32 (%class.SkBaseDevice*)** %582, align 8
  %584 = call i32 %583(%class.SkBaseDevice* %579) #15
  %585 = icmp eq i32 %584, 0
  br i1 %585, label %618, label %586

586:                                              ; preds = %576
  %587 = bitcast { <2 x float>, <2 x float> }* %6 to %struct.SkRect*
  %588 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %579, i64 0, i32 5
  %589 = bitcast { <2 x float>, <2 x float> }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %589) #15
  %590 = bitcast %class.SkBaseDevice* %579 to { i64, i64 } (%class.SkBaseDevice*)***
  %591 = load { i64, i64 } (%class.SkBaseDevice*)**, { i64, i64 } (%class.SkBaseDevice*)*** %590, align 8
  %592 = getelementptr inbounds { i64, i64 } (%class.SkBaseDevice*)*, { i64, i64 } (%class.SkBaseDevice*)** %591, i64 23
  %593 = load { i64, i64 } (%class.SkBaseDevice*)*, { i64, i64 } (%class.SkBaseDevice*)** %592, align 8
  %594 = call { i64, i64 } %593(%class.SkBaseDevice* %579) #15
  %595 = extractvalue { i64, i64 } %594, 0
  %596 = trunc i64 %595 to i32
  %597 = lshr i64 %595, 32
  %598 = trunc i64 %597 to i32
  %599 = extractvalue { i64, i64 } %594, 1
  %600 = sitofp i32 %596 to float
  %601 = insertelement <2 x float> undef, float %600, i32 0
  %602 = sitofp i32 %598 to float
  %603 = insertelement <2 x float> %601, float %602, i32 1
  %604 = trunc i64 %599 to i32
  %605 = sitofp i32 %604 to float
  %606 = insertelement <2 x float> undef, float %605, i32 0
  %607 = lshr i64 %599, 32
  %608 = trunc i64 %607 to i32
  %609 = sitofp i32 %608 to float
  %610 = insertelement <2 x float> %606, float %609, i32 1
  %611 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 0
  store <2 x float> %603, <2 x float>* %611, align 8
  %612 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 1
  store <2 x float> %610, <2 x float>* %612, align 8
  %613 = call { <2 x float>, <2 x float> } @_ZN12SkMatrixPriv7MapRectERK5SkM44RK6SkRect(%class.SkM44* dereferenceable(64) %588, %struct.SkRect* nonnull dereferenceable(16) %587) #15
  %614 = extractvalue { <2 x float>, <2 x float> } %613, 0
  %615 = extractvalue { <2 x float>, <2 x float> } %613, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %589) #15
  %616 = fadd <2 x float> %614, <float -1.000000e+00, float -1.000000e+00>
  %617 = fadd <2 x float> %615, <float 1.000000e+00, float 1.000000e+00>
  br label %618

618:                                              ; preds = %586, %576
  %619 = phi <2 x float> [ %616, %586 ], [ zeroinitializer, %576 ]
  %620 = phi <2 x float> [ %617, %586 ], [ zeroinitializer, %576 ]
  %621 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 11
  %622 = bitcast %struct.SkRect* %621 to <2 x float>*
  store <2 x float> %619, <2 x float>* %622, align 8
  %623 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 11, i32 2
  %624 = bitcast float* %623 to <2 x float>*
  store <2 x float> %620, <2 x float>* %624, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %302) #15
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %111) #15
  %625 = load %class.SkPaint*, %class.SkPaint** %65, align 8
  %626 = icmp eq %class.SkPaint* %625, null
  br i1 %626, label %628, label %627

627:                                              ; preds = %618
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %625) #15
  store %class.SkPaint* null, %class.SkPaint** %65, align 8
  br label %628

628:                                              ; preds = %618, %627
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %60) #15
  %629 = load %"struct.skia::tracing_internals::ScopedTracer::Data"*, %"struct.skia::tracing_internals::ScopedTracer::Data"** %37, align 8
  %630 = icmp eq %"struct.skia::tracing_internals::ScopedTracer::Data"* %629, null
  br i1 %630, label %644, label %631

631:                                              ; preds = %628
  %632 = load i8*, i8** %38, align 8
  %633 = load i8, i8* %632, align 1
  %634 = icmp eq i8 %633, 0
  br i1 %634, label %644, label %635

635:                                              ; preds = %631
  %636 = call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %637 = load i8*, i8** %38, align 8
  %638 = load i8*, i8** %39, align 8
  %639 = load i64, i64* %40, align 8
  %640 = bitcast %class.SkEventTracer* %636 to void (%class.SkEventTracer*, i8*, i8*, i64)***
  %641 = load void (%class.SkEventTracer*, i8*, i8*, i64)**, void (%class.SkEventTracer*, i8*, i8*, i64)*** %640, align 8
  %642 = getelementptr inbounds void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %641, i64 5
  %643 = load void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %642, align 8
  call void %643(%class.SkEventTracer* %636, i8* %637, i8* %638, i64 %639) #15
  br label %644

644:                                              ; preds = %628, %631, %635
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %36) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8SkCanvas28only_axis_aligned_saveBehindEPK6SkRect(%class.SkCanvas*, %struct.SkRect*) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %struct.SkRect* %1, null
  br i1 %3, label %40, label %4

4:                                                ; preds = %2
  %5 = tail call { <2 x float>, <2 x float> } @_ZNK8SkCanvas18getLocalClipBoundsEv(%class.SkCanvas* %0)
  %6 = extractvalue { <2 x float>, <2 x float> } %5, 0
  %7 = extractvalue { <2 x float>, <2 x float> } %5, 1
  %8 = extractelement <2 x float> %6, i32 0
  %9 = extractelement <2 x float> %6, i32 1
  %10 = extractelement <2 x float> %7, i32 0
  %11 = extractelement <2 x float> %7, i32 1
  %12 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 0
  %13 = load float, float* %12, align 4
  %14 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 1
  %15 = load float, float* %14, align 4
  %16 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 2
  %17 = load float, float* %16, align 4
  %18 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 3
  %19 = load float, float* %18, align 4
  %20 = fcmp olt float %8, %13
  %21 = select i1 %20, float %13, float %8
  %22 = fcmp olt float %17, %10
  %23 = select i1 %22, float %17, float %10
  %24 = fcmp olt float %9, %15
  %25 = select i1 %24, float %15, float %9
  %26 = fcmp olt float %19, %11
  %27 = fcmp olt float %21, %23
  %28 = select i1 %26, float %19, float %11
  %29 = fcmp olt float %25, %28
  %30 = and i1 %27, %29
  br i1 %30, label %40, label %31

31:                                               ; preds = %4
  %32 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 7
  %33 = load i32, i32* %32, align 8
  %34 = add nsw i32 %33, 1
  store i32 %34, i32* %32, align 8
  %35 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %36 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %35, align 8
  %37 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %36, i64 0, i32 4
  %38 = load i32, i32* %37, align 8
  %39 = add nsw i32 %38, 1
  store i32 %39, i32* %37, align 8
  br label %74

40:                                               ; preds = %2, %4
  %41 = bitcast %class.SkCanvas* %0 to i1 (%class.SkCanvas*, %struct.SkRect*)***
  %42 = load i1 (%class.SkCanvas*, %struct.SkRect*)**, i1 (%class.SkCanvas*, %struct.SkRect*)*** %41, align 8
  %43 = getelementptr inbounds i1 (%class.SkCanvas*, %struct.SkRect*)*, i1 (%class.SkCanvas*, %struct.SkRect*)** %42, i64 14
  %44 = load i1 (%class.SkCanvas*, %struct.SkRect*)*, i1 (%class.SkCanvas*, %struct.SkRect*)** %43, align 8
  %45 = tail call zeroext i1 %44(%class.SkCanvas* %0, %struct.SkRect* %1) #15
  %46 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 7
  %47 = load i32, i32* %46, align 8
  %48 = add nsw i32 %47, 1
  store i32 %48, i32* %46, align 8
  %49 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 1
  %50 = tail call i8* @_ZN7SkDeque9push_backEv(%class.SkDeque* %49) #15
  %51 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %52 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %51, align 8
  %53 = bitcast i8* %50 to i64*
  store i64 0, i64* %53, align 8
  %54 = getelementptr inbounds i8, i8* %50, i64 8
  %55 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %52, i64 0, i32 1
  %56 = bitcast %class.SkBaseDevice** %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast i8* %54 to i64*
  store i64 %57, i64* %58, align 8
  %59 = getelementptr inbounds i8, i8* %50, i64 16
  %60 = bitcast i8* %59 to i64*
  store i64 0, i64* %60, align 8
  %61 = getelementptr inbounds i8, i8* %50, i64 24
  %62 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %52, i64 0, i32 3
  %63 = bitcast %class.SkM44* %62 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* align 8 %63, i64 64, i1 false) #15
  %64 = getelementptr inbounds i8, i8* %50, i64 88
  %65 = bitcast i8* %64 to i32*
  store i32 0, i32* %65, align 8
  %66 = bitcast %"class.SkCanvas::MCRec"** %51 to i8**
  store i8* %50, i8** %66, align 8
  %67 = bitcast i8* %54 to %class.SkBaseDevice**
  %68 = load %class.SkBaseDevice*, %class.SkBaseDevice** %67, align 8
  %69 = bitcast %class.SkBaseDevice* %68 to void (%class.SkBaseDevice*)***
  %70 = load void (%class.SkBaseDevice*)**, void (%class.SkBaseDevice*)*** %69, align 8
  %71 = getelementptr inbounds void (%class.SkBaseDevice*)*, void (%class.SkBaseDevice*)** %70, i64 10
  %72 = load void (%class.SkBaseDevice*)*, void (%class.SkBaseDevice*)** %71, align 8
  tail call void %72(%class.SkBaseDevice* %68) #15
  br i1 %45, label %73, label %74

73:                                               ; preds = %40
  tail call void @_ZN8SkCanvas18internalSaveBehindEPK6SkRect(%class.SkCanvas* %0, %struct.SkRect* %1)
  br label %74

74:                                               ; preds = %40, %73, %31
  %75 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 7
  %76 = load i32, i32* %75, align 8
  %77 = add nsw i32 %76, -1
  ret i32 %77
}

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK8SkCanvas18getLocalClipBoundsEv(%class.SkCanvas* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca { <2 x float>, <2 x float> }, align 8
  %3 = alloca %class.SkMatrix, align 16
  %4 = alloca %class.SkMatrix, align 4
  %5 = alloca %struct.SkRect, align 8
  %6 = alloca { <2 x float>, <2 x float> }, align 8
  %7 = bitcast { <2 x float>, <2 x float> }* %6 to %struct.SkRect*
  %8 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %9 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %8, align 8
  %10 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %9, i64 0, i32 1
  %11 = load %class.SkBaseDevice*, %class.SkBaseDevice** %10, align 8
  %12 = bitcast %class.SkBaseDevice* %11 to i32 (%class.SkBaseDevice*)***
  %13 = load i32 (%class.SkBaseDevice*)**, i32 (%class.SkBaseDevice*)*** %12, align 8
  %14 = getelementptr inbounds i32 (%class.SkBaseDevice*)*, i32 (%class.SkBaseDevice*)** %13, i64 22
  %15 = load i32 (%class.SkBaseDevice*)*, i32 (%class.SkBaseDevice*)** %14, align 8
  %16 = tail call i32 %15(%class.SkBaseDevice* %11) #15
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %48, label %18

18:                                               ; preds = %1
  %19 = bitcast { <2 x float>, <2 x float> }* %2 to %struct.SkRect*
  %20 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %11, i64 0, i32 5
  %21 = bitcast { <2 x float>, <2 x float> }* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #15
  %22 = bitcast %class.SkBaseDevice* %11 to { i64, i64 } (%class.SkBaseDevice*)***
  %23 = load { i64, i64 } (%class.SkBaseDevice*)**, { i64, i64 } (%class.SkBaseDevice*)*** %22, align 8
  %24 = getelementptr inbounds { i64, i64 } (%class.SkBaseDevice*)*, { i64, i64 } (%class.SkBaseDevice*)** %23, i64 23
  %25 = load { i64, i64 } (%class.SkBaseDevice*)*, { i64, i64 } (%class.SkBaseDevice*)** %24, align 8
  %26 = tail call { i64, i64 } %25(%class.SkBaseDevice* %11) #15
  %27 = extractvalue { i64, i64 } %26, 0
  %28 = trunc i64 %27 to i32
  %29 = lshr i64 %27, 32
  %30 = trunc i64 %29 to i32
  %31 = extractvalue { i64, i64 } %26, 1
  %32 = sitofp i32 %28 to float
  %33 = insertelement <2 x float> undef, float %32, i32 0
  %34 = sitofp i32 %30 to float
  %35 = insertelement <2 x float> %33, float %34, i32 1
  %36 = trunc i64 %31 to i32
  %37 = sitofp i32 %36 to float
  %38 = insertelement <2 x float> undef, float %37, i32 0
  %39 = lshr i64 %31, 32
  %40 = trunc i64 %39 to i32
  %41 = sitofp i32 %40 to float
  %42 = insertelement <2 x float> %38, float %41, i32 1
  %43 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %2, i64 0, i32 0
  store <2 x float> %35, <2 x float>* %43, align 8
  %44 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %2, i64 0, i32 1
  store <2 x float> %42, <2 x float>* %44, align 8
  %45 = call { <2 x float>, <2 x float> } @_ZN12SkMatrixPriv7MapRectERK5SkM44RK6SkRect(%class.SkM44* dereferenceable(64) %20, %struct.SkRect* nonnull dereferenceable(16) %19) #15
  %46 = extractvalue { <2 x float>, <2 x float> } %45, 0
  %47 = extractvalue { <2 x float>, <2 x float> } %45, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #15
  br label %48

48:                                               ; preds = %1, %18
  %49 = phi <2 x float> [ %46, %18 ], [ zeroinitializer, %1 ]
  %50 = phi <2 x float> [ %47, %18 ], [ zeroinitializer, %1 ]
  %51 = extractelement <2 x float> %49, i32 0
  %52 = call float @llvm.floor.f32(float %51) #15
  %53 = fcmp olt float %52, 0x41DFFFFFE0000000
  %54 = select i1 %53, float %52, float 0x41DFFFFFE0000000
  %55 = fcmp ogt float %54, 0xC1DFFFFFE0000000
  %56 = select i1 %55, float %54, float 0xC1DFFFFFE0000000
  %57 = fptosi float %56 to i32
  %58 = extractelement <2 x float> %49, i32 1
  %59 = call float @llvm.floor.f32(float %58) #15
  %60 = fcmp olt float %59, 0x41DFFFFFE0000000
  %61 = select i1 %60, float %59, float 0x41DFFFFFE0000000
  %62 = fcmp ogt float %61, 0xC1DFFFFFE0000000
  %63 = select i1 %62, float %61, float 0xC1DFFFFFE0000000
  %64 = fptosi float %63 to i32
  %65 = extractelement <2 x float> %50, i32 0
  %66 = call float @llvm.ceil.f32(float %65) #15
  %67 = fcmp olt float %66, 0x41DFFFFFE0000000
  %68 = select i1 %67, float %66, float 0x41DFFFFFE0000000
  %69 = fcmp ogt float %68, 0xC1DFFFFFE0000000
  %70 = select i1 %69, float %68, float 0xC1DFFFFFE0000000
  %71 = fptosi float %70 to i32
  %72 = extractelement <2 x float> %50, i32 1
  %73 = call float @llvm.ceil.f32(float %72) #15
  %74 = fcmp olt float %73, 0x41DFFFFFE0000000
  %75 = select i1 %74, float %73, float 0x41DFFFFFE0000000
  %76 = fcmp ogt float %75, 0xC1DFFFFFE0000000
  %77 = select i1 %76, float %75, float 0xC1DFFFFFE0000000
  %78 = fptosi float %77 to i32
  %79 = sext i32 %71 to i64
  %80 = sext i32 %57 to i64
  %81 = sub nsw i64 %79, %80
  %82 = sext i32 %78 to i64
  %83 = sext i32 %64 to i64
  %84 = sub nsw i64 %82, %83
  %85 = icmp slt i64 %81, 1
  %86 = icmp slt i64 %84, 1
  %87 = or i1 %85, %86
  br i1 %87, label %200, label %88

88:                                               ; preds = %48
  %89 = or i64 %84, %81
  %90 = add nsw i64 %89, 2147483648
  %91 = icmp ugt i64 %90, 4294967295
  br i1 %91, label %200, label %92

92:                                               ; preds = %88
  %93 = bitcast %class.SkMatrix* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %93) #15
  %94 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 1
  %95 = bitcast %class.SkMatrix* %3 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %95, align 16
  %96 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 0, i64 4
  %97 = bitcast float* %96 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %97, align 16
  %98 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %98, align 16
  store i32 16, i32* %94, align 4
  %99 = bitcast %class.SkMatrix* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %99) #15
  %100 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %8, align 8
  %101 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %100, i64 0, i32 3
  %102 = bitcast %class.SkM44* %101 to i32*
  %103 = load i32, i32* %102, align 4, !noalias !92
  %104 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %100, i64 0, i32 3, i32 0, i64 4
  %105 = bitcast float* %104 to i32*
  %106 = load i32, i32* %105, align 4, !noalias !92
  %107 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %100, i64 0, i32 3, i32 0, i64 12
  %108 = bitcast float* %107 to i32*
  %109 = load i32, i32* %108, align 4, !noalias !92
  %110 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %100, i64 0, i32 3, i32 0, i64 1
  %111 = bitcast float* %110 to i32*
  %112 = load i32, i32* %111, align 4, !noalias !92
  %113 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %100, i64 0, i32 3, i32 0, i64 5
  %114 = bitcast float* %113 to i32*
  %115 = load i32, i32* %114, align 4, !noalias !92
  %116 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %100, i64 0, i32 3, i32 0, i64 13
  %117 = bitcast float* %116 to i32*
  %118 = load i32, i32* %117, align 4, !noalias !92
  %119 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %100, i64 0, i32 3, i32 0, i64 3
  %120 = bitcast float* %119 to i32*
  %121 = load i32, i32* %120, align 4, !noalias !92
  %122 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %100, i64 0, i32 3, i32 0, i64 7
  %123 = bitcast float* %122 to i32*
  %124 = load i32, i32* %123, align 4, !noalias !92
  %125 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %100, i64 0, i32 3, i32 0, i64 15
  %126 = bitcast float* %125 to i32*
  %127 = load i32, i32* %126, align 4, !noalias !92
  %128 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 1
  %129 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 0, i64 1
  %130 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 0, i64 2
  %131 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 0, i64 3
  %132 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 0, i64 4
  %133 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 0, i64 5
  %134 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 0, i64 6
  %135 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 0, i64 7
  %136 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 0, i64 8
  %137 = bitcast %class.SkMatrix* %4 to i32*
  store i32 %103, i32* %137, align 4, !alias.scope !95
  %138 = bitcast float* %129 to i32*
  store i32 %106, i32* %138, align 4, !alias.scope !95
  %139 = bitcast float* %130 to i32*
  store i32 %109, i32* %139, align 4, !alias.scope !95
  %140 = bitcast float* %131 to i32*
  store i32 %112, i32* %140, align 4, !alias.scope !95
  %141 = bitcast float* %132 to i32*
  store i32 %115, i32* %141, align 4, !alias.scope !95
  %142 = bitcast float* %133 to i32*
  store i32 %118, i32* %142, align 4, !alias.scope !95
  %143 = bitcast float* %134 to i32*
  store i32 %121, i32* %143, align 4, !alias.scope !95
  %144 = bitcast float* %135 to i32*
  store i32 %124, i32* %144, align 4, !alias.scope !95
  %145 = bitcast float* %136 to i32*
  store i32 %127, i32* %145, align 4, !alias.scope !95
  store i32 128, i32* %128, align 4, !alias.scope !95
  %146 = call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* nonnull %4) #15
  %147 = zext i8 %146 to i32
  store i32 %147, i32* %128, align 4
  %148 = and i32 %147, 15
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %152

150:                                              ; preds = %92
  %151 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix* nonnull %3) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %99) #15
  br label %154

152:                                              ; preds = %92
  %153 = call zeroext i1 @_ZNK8SkMatrix17invertNonIdentityEPS_(%class.SkMatrix* nonnull %4, %class.SkMatrix* nonnull %3) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %99) #15
  br i1 %153, label %154, label %197

154:                                              ; preds = %150, %152
  %155 = bitcast %struct.SkRect* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %155) #15
  %156 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %5, i64 0, i32 2
  %157 = bitcast { <2 x float>, <2 x float> }* %6 to i8*
  %158 = bitcast %struct.SkRect* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %158, i8 -1, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %157) #15
  %159 = icmp sgt i32 %57, -2147483646
  %160 = select i1 %159, i32 %57, i32 -2147483646
  %161 = add nsw i32 %160, -1
  %162 = icmp sgt i64 %83, -2147483646
  %163 = select i1 %162, i64 %83, i64 -2147483646
  %164 = icmp slt i64 %79, 2147483646
  %165 = select i1 %164, i64 %79, i64 2147483646
  %166 = icmp sgt i64 %165, -2147483648
  %167 = select i1 %166, i64 %165, i64 -2147483648
  %168 = icmp slt i64 %82, 2147483646
  %169 = select i1 %168, i64 %82, i64 2147483646
  %170 = icmp sgt i64 %169, -2147483648
  %171 = select i1 %170, i64 %169, i64 -2147483648
  %172 = shl nsw i64 %163, 32
  %173 = add i64 %172, -4294967296
  %174 = shl nsw i64 %171, 32
  %175 = add i64 %174, 4294967296
  %176 = lshr exact i64 %173, 32
  %177 = trunc i64 %176 to i32
  %178 = sitofp i32 %161 to float
  %179 = insertelement <2 x float> undef, float %178, i32 0
  %180 = sitofp i32 %177 to float
  %181 = insertelement <2 x float> %179, float %180, i32 1
  %182 = trunc i64 %167 to i32
  %183 = add nsw i32 %182, 1
  %184 = sitofp i32 %183 to float
  %185 = insertelement <2 x float> undef, float %184, i32 0
  %186 = lshr exact i64 %175, 32
  %187 = trunc i64 %186 to i32
  %188 = sitofp i32 %187 to float
  %189 = insertelement <2 x float> %185, float %188, i32 1
  %190 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 0
  store <2 x float> %181, <2 x float>* %190, align 8
  %191 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 1
  store <2 x float> %189, <2 x float>* %191, align 8
  %192 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* nonnull %3, %struct.SkRect* nonnull %5, %struct.SkRect* nonnull dereferenceable(16) %7, i32 1) #15
  %193 = bitcast %struct.SkRect* %5 to <2 x float>*
  %194 = load <2 x float>, <2 x float>* %193, align 8
  %195 = bitcast float* %156 to <2 x float>*
  %196 = load <2 x float>, <2 x float>* %195, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %157) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %155) #15
  br label %197

197:                                              ; preds = %152, %154
  %198 = phi <2 x float> [ %194, %154 ], [ zeroinitializer, %152 ]
  %199 = phi <2 x float> [ %196, %154 ], [ zeroinitializer, %152 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %93) #15
  br label %200

200:                                              ; preds = %48, %88, %197
  %201 = phi <2 x float> [ %198, %197 ], [ zeroinitializer, %88 ], [ zeroinitializer, %48 ]
  %202 = phi <2 x float> [ %199, %197 ], [ zeroinitializer, %88 ], [ zeroinitializer, %48 ]
  %203 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %201, 0
  %204 = insertvalue { <2 x float>, <2 x float> } %203, <2 x float> %202, 1
  ret { <2 x float>, <2 x float> } %204
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas18internalSaveBehindEPK6SkRect(%class.SkCanvas*, %struct.SkRect*) local_unnamed_addr #0 align 2 {
  %3 = alloca %struct.SkIRect, align 8
  %4 = alloca %struct.SkRect, align 4
  %5 = alloca { i64, i64 }, align 8
  %6 = alloca { i64, i64 }, align 8
  %7 = alloca %class.sk_sp.74, align 8
  %8 = alloca %class.SkPaint, align 8
  %9 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %10 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %9, align 8
  %11 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %10, i64 0, i32 1
  %12 = load %class.SkBaseDevice*, %class.SkBaseDevice** %11, align 8
  %13 = bitcast %struct.SkIRect* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #15
  %14 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 0
  %15 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 1
  %16 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 2
  %17 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 3
  %18 = icmp eq %struct.SkRect* %1, null
  %19 = bitcast %struct.SkIRect* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 16, i1 false)
  br i1 %18, label %96, label %20

20:                                               ; preds = %2
  %21 = bitcast { i64, i64 }* %6 to %struct.SkIRect*
  %22 = bitcast { i64, i64 }* %5 to %struct.SkIRect*
  %23 = bitcast %struct.SkRect* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #15
  %24 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %4, i64 0, i32 0
  %25 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %4, i64 0, i32 1
  %26 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %4, i64 0, i32 2
  %27 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %4, i64 0, i32 3
  %28 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %12, i64 0, i32 1, i32 2
  %29 = bitcast %struct.SkRect* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %29, i8 -1, i64 16, i1 false)
  %30 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* %28, %struct.SkRect* nonnull %4, %struct.SkRect* nonnull dereferenceable(16) %1, i32 1) #15
  %31 = bitcast { i64, i64 }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #15
  %32 = load float, float* %24, align 4
  %33 = fadd float %32, 5.000000e-01
  %34 = call float @llvm.floor.f32(float %33) #15
  %35 = fcmp olt float %34, 0x41DFFFFFE0000000
  %36 = select i1 %35, float %34, float 0x41DFFFFFE0000000
  %37 = fcmp ogt float %36, 0xC1DFFFFFE0000000
  %38 = select i1 %37, float %36, float 0xC1DFFFFFE0000000
  %39 = fptosi float %38 to i32
  %40 = load float, float* %25, align 4
  %41 = fadd float %40, 5.000000e-01
  %42 = call float @llvm.floor.f32(float %41) #15
  %43 = fcmp olt float %42, 0x41DFFFFFE0000000
  %44 = select i1 %43, float %42, float 0x41DFFFFFE0000000
  %45 = fcmp ogt float %44, 0xC1DFFFFFE0000000
  %46 = select i1 %45, float %44, float 0xC1DFFFFFE0000000
  %47 = fptosi float %46 to i32
  %48 = load float, float* %26, align 4
  %49 = fadd float %48, 5.000000e-01
  %50 = call float @llvm.floor.f32(float %49) #15
  %51 = fcmp olt float %50, 0x41DFFFFFE0000000
  %52 = select i1 %51, float %50, float 0x41DFFFFFE0000000
  %53 = fcmp ogt float %52, 0xC1DFFFFFE0000000
  %54 = select i1 %53, float %52, float 0xC1DFFFFFE0000000
  %55 = fptosi float %54 to i32
  %56 = load float, float* %27, align 4
  %57 = fadd float %56, 5.000000e-01
  %58 = call float @llvm.floor.f32(float %57) #15
  %59 = fcmp olt float %58, 0x41DFFFFFE0000000
  %60 = select i1 %59, float %58, float 0x41DFFFFFE0000000
  %61 = fcmp ogt float %60, 0xC1DFFFFFE0000000
  %62 = select i1 %61, float %60, float 0xC1DFFFFFE0000000
  %63 = fptosi float %62 to i32
  %64 = zext i32 %47 to i64
  %65 = shl nuw i64 %64, 32
  %66 = zext i32 %39 to i64
  %67 = or i64 %65, %66
  %68 = zext i32 %63 to i64
  %69 = shl nuw i64 %68, 32
  %70 = zext i32 %55 to i64
  %71 = or i64 %69, %70
  %72 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  store i64 %67, i64* %72, align 8
  %73 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  store i64 %71, i64* %73, align 8
  %74 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %74) #15
  %75 = bitcast %class.SkBaseDevice* %12 to { i64, i64 } (%class.SkBaseDevice*)***
  %76 = load { i64, i64 } (%class.SkBaseDevice*)**, { i64, i64 } (%class.SkBaseDevice*)*** %75, align 8
  %77 = getelementptr inbounds { i64, i64 } (%class.SkBaseDevice*)*, { i64, i64 } (%class.SkBaseDevice*)** %76, i64 23
  %78 = load { i64, i64 } (%class.SkBaseDevice*)*, { i64, i64 } (%class.SkBaseDevice*)** %77, align 8
  %79 = call { i64, i64 } %78(%class.SkBaseDevice* %12) #15
  %80 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  %81 = extractvalue { i64, i64 } %79, 0
  store i64 %81, i64* %80, align 8
  %82 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  %83 = extractvalue { i64, i64 } %79, 1
  store i64 %83, i64* %82, align 8
  %84 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %3, %struct.SkIRect* nonnull dereferenceable(16) %22, %struct.SkIRect* nonnull dereferenceable(16) %21) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %74) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #15
  br i1 %84, label %85, label %90

85:                                               ; preds = %20
  %86 = load i32, i32* %16, align 8
  %87 = load i32, i32* %14, align 8
  %88 = load i32, i32* %17, align 4
  %89 = load i32, i32* %15, align 4
  br label %91

90:                                               ; preds = %20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 16, i1 false) #15
  br label %91

91:                                               ; preds = %85, %90
  %92 = phi i32 [ %89, %85 ], [ 0, %90 ]
  %93 = phi i32 [ %88, %85 ], [ 0, %90 ]
  %94 = phi i32 [ %87, %85 ], [ 0, %90 ]
  %95 = phi i32 [ %86, %85 ], [ 0, %90 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #15
  br label %112

96:                                               ; preds = %2
  %97 = bitcast %class.SkBaseDevice* %12 to { i64, i64 } (%class.SkBaseDevice*)***
  %98 = load { i64, i64 } (%class.SkBaseDevice*)**, { i64, i64 } (%class.SkBaseDevice*)*** %97, align 8
  %99 = getelementptr inbounds { i64, i64 } (%class.SkBaseDevice*)*, { i64, i64 } (%class.SkBaseDevice*)** %98, i64 23
  %100 = load { i64, i64 } (%class.SkBaseDevice*)*, { i64, i64 } (%class.SkBaseDevice*)** %99, align 8
  %101 = tail call { i64, i64 } %100(%class.SkBaseDevice* %12) #15
  %102 = extractvalue { i64, i64 } %101, 0
  %103 = extractvalue { i64, i64 } %101, 1
  %104 = bitcast %struct.SkIRect* %3 to i64*
  store i64 %102, i64* %104, align 8
  %105 = bitcast i32* %16 to i64*
  store i64 %103, i64* %105, align 8
  %106 = trunc i64 %103 to i32
  %107 = trunc i64 %102 to i32
  %108 = lshr i64 %103, 32
  %109 = trunc i64 %108 to i32
  %110 = lshr i64 %102, 32
  %111 = trunc i64 %110 to i32
  br label %112

112:                                              ; preds = %96, %91
  %113 = phi i32 [ %111, %96 ], [ %92, %91 ]
  %114 = phi i32 [ %109, %96 ], [ %93, %91 ]
  %115 = phi i32 [ %107, %96 ], [ %94, %91 ]
  %116 = phi i32 [ %106, %96 ], [ %95, %91 ]
  %117 = sext i32 %116 to i64
  %118 = sext i32 %115 to i64
  %119 = sub nsw i64 %117, %118
  %120 = sext i32 %114 to i64
  %121 = sext i32 %113 to i64
  %122 = sub nsw i64 %120, %121
  %123 = icmp slt i64 %119, 1
  %124 = icmp slt i64 %122, 1
  %125 = or i1 %123, %124
  br i1 %125, label %232, label %126

126:                                              ; preds = %112
  %127 = or i64 %122, %119
  %128 = add nsw i64 %127, 2147483648
  %129 = icmp ugt i64 %128, 4294967295
  br i1 %129, label %232, label %130

130:                                              ; preds = %126
  %131 = bitcast %class.sk_sp.74* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %131) #15
  %132 = getelementptr inbounds %class.sk_sp.74, %class.sk_sp.74* %7, i64 0, i32 0
  store %class.SkSpecialImage* inttoptr (i64 -6148914691236517206 to %class.SkSpecialImage*), %class.SkSpecialImage** %132, align 8
  %133 = bitcast %class.SkBaseDevice* %12 to void (%class.sk_sp.74*, %class.SkBaseDevice*, %struct.SkIRect*, i1)***
  %134 = load void (%class.sk_sp.74*, %class.SkBaseDevice*, %struct.SkIRect*, i1)**, void (%class.sk_sp.74*, %class.SkBaseDevice*, %struct.SkIRect*, i1)*** %133, align 8
  %135 = getelementptr inbounds void (%class.sk_sp.74*, %class.SkBaseDevice*, %struct.SkIRect*, i1)*, void (%class.sk_sp.74*, %class.SkBaseDevice*, %struct.SkIRect*, i1)** %134, i64 49
  %136 = load void (%class.sk_sp.74*, %class.SkBaseDevice*, %struct.SkIRect*, i1)*, void (%class.sk_sp.74*, %class.SkBaseDevice*, %struct.SkIRect*, i1)** %135, align 8
  call void %136(%class.sk_sp.74* nonnull sret %7, %class.SkBaseDevice* %12, %struct.SkIRect* nonnull dereferenceable(16) %3, i1 zeroext true) #15
  %137 = load %class.SkSpecialImage*, %class.SkSpecialImage** %132, align 8
  %138 = icmp eq %class.SkSpecialImage* %137, null
  br i1 %138, label %231, label %139

139:                                              ; preds = %130
  %140 = ptrtoint %class.SkSpecialImage* %137 to i64
  %141 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %9, align 8
  %142 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %141, i64 0, i32 4
  %143 = load i32, i32* %142, align 8
  %144 = icmp sgt i32 %143, 0
  br i1 %144, label %145, label %179

145:                                              ; preds = %139
  %146 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*)***
  %147 = load void (%class.SkCanvas*)**, void (%class.SkCanvas*)*** %146, align 8
  %148 = getelementptr inbounds void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %147, i64 12
  %149 = load void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %148, align 8
  call void %149(%class.SkCanvas* %0) #15
  %150 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %9, align 8
  %151 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %150, i64 0, i32 4
  %152 = load i32, i32* %151, align 8
  %153 = add nsw i32 %152, -1
  store i32 %153, i32* %151, align 8
  %154 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 1
  %155 = call i8* @_ZN7SkDeque9push_backEv(%class.SkDeque* %154) #15
  %156 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %9, align 8
  %157 = bitcast i8* %155 to i64*
  store i64 0, i64* %157, align 8
  %158 = getelementptr inbounds i8, i8* %155, i64 8
  %159 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %156, i64 0, i32 1
  %160 = bitcast %class.SkBaseDevice** %159 to i64*
  %161 = load i64, i64* %160, align 8
  %162 = bitcast i8* %158 to i64*
  store i64 %161, i64* %162, align 8
  %163 = getelementptr inbounds i8, i8* %155, i64 16
  %164 = bitcast i8* %163 to i64*
  store i64 0, i64* %164, align 8
  %165 = getelementptr inbounds i8, i8* %155, i64 24
  %166 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %156, i64 0, i32 3
  %167 = bitcast %class.SkM44* %166 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %165, i8* align 8 %167, i64 64, i1 false) #15
  %168 = getelementptr inbounds i8, i8* %155, i64 88
  %169 = bitcast i8* %168 to i32*
  store i32 0, i32* %169, align 8
  %170 = bitcast %"class.SkCanvas::MCRec"** %9 to i8**
  store i8* %155, i8** %170, align 8
  %171 = bitcast i8* %158 to %class.SkBaseDevice**
  %172 = load %class.SkBaseDevice*, %class.SkBaseDevice** %171, align 8
  %173 = bitcast %class.SkBaseDevice* %172 to void (%class.SkBaseDevice*)***
  %174 = load void (%class.SkBaseDevice*)**, void (%class.SkBaseDevice*)*** %173, align 8
  %175 = getelementptr inbounds void (%class.SkBaseDevice*)*, void (%class.SkBaseDevice*)** %174, i64 10
  %176 = load void (%class.SkBaseDevice*)*, void (%class.SkBaseDevice*)** %175, align 8
  call void %176(%class.SkBaseDevice* %172) #15
  %177 = bitcast %class.sk_sp.74* %7 to i64*
  %178 = load i64, i64* %177, align 8
  br label %179

179:                                              ; preds = %139, %145
  %180 = phi i64 [ %178, %145 ], [ %140, %139 ]
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %132, align 8
  %181 = load i32, i32* %14, align 8
  %182 = load i32, i32* %15, align 4
  %183 = zext i32 %182 to i64
  %184 = shl nuw i64 %183, 32
  %185 = zext i32 %181 to i64
  %186 = or i64 %184, %185
  %187 = call i8* @_Znwm(i64 16) #16
  %188 = bitcast i8* %187 to i64*
  store i64 %180, i64* %188, align 8
  %189 = getelementptr inbounds i8, i8* %187, i64 8
  %190 = bitcast i8* %189 to i64*
  store i64 %186, i64* %190, align 8
  %191 = ptrtoint i8* %187 to i64
  %192 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %9, align 8
  %193 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %192, i64 0, i32 2
  %194 = getelementptr inbounds %"class.std::__1::unique_ptr.71", %"class.std::__1::unique_ptr.71"* %193, i64 0, i32 0, i32 0, i32 0
  %195 = load %"struct.(anonymous namespace)::BackImage"*, %"struct.(anonymous namespace)::BackImage"** %194, align 8
  %196 = bitcast %"class.std::__1::unique_ptr.71"* %193 to i64*
  store i64 %191, i64* %196, align 8
  %197 = icmp eq %"struct.(anonymous namespace)::BackImage"* %195, null
  br i1 %197, label %214, label %198

198:                                              ; preds = %179
  %199 = getelementptr inbounds %"struct.(anonymous namespace)::BackImage", %"struct.(anonymous namespace)::BackImage"* %195, i64 0, i32 0, i32 0
  %200 = load %class.SkSpecialImage*, %class.SkSpecialImage** %199, align 8
  %201 = icmp eq %class.SkSpecialImage* %200, null
  br i1 %201, label %212, label %202

202:                                              ; preds = %198
  %203 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %200, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %204 = atomicrmw add i32* %203, i32 -1 acq_rel
  %205 = icmp eq i32 %204, 1
  br i1 %205, label %206, label %212

206:                                              ; preds = %202
  %207 = bitcast %class.SkSpecialImage* %200 to %class.SkRefCntBase*
  %208 = bitcast %class.SkSpecialImage* %200 to void (%class.SkRefCntBase*)***
  %209 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %208, align 8
  %210 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %209, i64 2
  %211 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %210, align 8
  call void %211(%class.SkRefCntBase* nonnull %207) #15
  br label %212

212:                                              ; preds = %206, %202, %198
  %213 = bitcast %"struct.(anonymous namespace)::BackImage"* %195 to i8*
  call void @_ZdlPv(i8* %213) #16
  br label %214

214:                                              ; preds = %212, %179
  %215 = bitcast %class.SkPaint* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %215) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %215, i8* align 8 bitcast (%class.SkPaint* @__const._ZL25clean_paint_for_drawImagePK7SkPaint.cleaned to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %8) #15
  %216 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %8, i64 0, i32 8, i32 0, i32 0
  %217 = load i32, i32* %216, align 8
  %218 = and i32 %217, -261121
  store i32 %218, i32* %216, align 8
  call void @_ZN8SkCanvas23drawClippedToSaveBehindERK7SkPaint(%class.SkCanvas* %0, %class.SkPaint* nonnull dereferenceable(72) %8)
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %8) #15
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %215) #15
  %219 = load %class.SkSpecialImage*, %class.SkSpecialImage** %132, align 8
  %220 = icmp eq %class.SkSpecialImage* %219, null
  br i1 %220, label %231, label %221

221:                                              ; preds = %214
  %222 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %219, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %223 = atomicrmw add i32* %222, i32 -1 acq_rel
  %224 = icmp eq i32 %223, 1
  br i1 %224, label %225, label %231

225:                                              ; preds = %221
  %226 = bitcast %class.SkSpecialImage* %219 to %class.SkRefCntBase*
  %227 = bitcast %class.SkSpecialImage* %219 to void (%class.SkRefCntBase*)***
  %228 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %227, align 8
  %229 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %228, i64 2
  %230 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %229, align 8
  call void %230(%class.SkRefCntBase* nonnull %226) #15
  br label %231

231:                                              ; preds = %130, %214, %221, %225
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %131) #15
  br label %232

232:                                              ; preds = %112, %126, %231
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas20DrawDeviceWithFilterEP12SkBaseDevicePK13SkImageFilterS1_RK8SkIPointRK8SkMatrix(%class.SkBaseDevice*, %class.SkImageFilter*, %class.SkBaseDevice*, %struct.SkIPoint* nocapture readonly dereferenceable(8), %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %6 = alloca { <2 x float>, <2 x float> }, align 8
  %7 = alloca { <2 x float>, <2 x float> }, align 8
  %8 = alloca %class.SkPaint, align 8
  %9 = alloca { <2 x float>, <2 x float> }, align 8
  %10 = alloca %class.SkM44, align 4
  %11 = alloca { i64, i64 }, align 8
  %12 = bitcast { i64, i64 }* %11 to %struct.SkIRect*
  %13 = alloca { i64, i64 }, align 8
  %14 = bitcast { i64, i64 }* %13 to %struct.SkIRect*
  %15 = alloca %class.sk_sp.74, align 8
  %16 = alloca %struct.SkSamplingOptions, align 4
  %17 = alloca %class.SkPaint, align 8
  %18 = alloca %class.SkMatrix, align 16
  %19 = alloca %class.SkMatrix, align 16
  %20 = alloca %struct.SkSize, align 4
  %21 = alloca %class.SkMatrix, align 16
  %22 = alloca %class.SkMatrix, align 16
  %23 = alloca { i64, i64 }, align 8
  %24 = bitcast { i64, i64 }* %23 to %struct.SkIRect*
  %25 = alloca { <2 x float>, <2 x float> }, align 8
  %26 = bitcast { <2 x float>, <2 x float> }* %25 to %struct.SkRect*
  %27 = alloca { i64, i64 }, align 8
  %28 = bitcast { i64, i64 }* %27 to %struct.SkIRect*
  %29 = alloca { <2 x float>, <2 x float> }, align 8
  %30 = bitcast { <2 x float>, <2 x float> }* %29 to %struct.SkRect*
  %31 = alloca %class.sk_sp.74, align 8
  %32 = alloca %class.SkPaint, align 8
  %33 = alloca %struct.SkSamplingOptions, align 4
  %34 = alloca %class.sk_sp.244, align 8
  %35 = alloca i64, align 8
  %36 = bitcast i64* %35 to %struct.SkISize*
  %37 = alloca %class.sk_sp.18, align 8
  %38 = alloca { <2 x float>, <2 x float> }, align 8
  %39 = bitcast { <2 x float>, <2 x float> }* %38 to %struct.SkRect*
  %40 = alloca { <2 x float>, <2 x float> }, align 8
  %41 = bitcast { <2 x float>, <2 x float> }* %40 to %struct.SkRect*
  %42 = alloca %class.sk_sp.74, align 8
  %43 = alloca %class.SkMatrix, align 4
  %44 = alloca %"class.skif::Context", align 8
  %45 = alloca %"class.skif::FilterResult.246", align 8
  %46 = alloca %class.SkMatrix, align 4
  %47 = bitcast { i64, i64 }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %47) #15
  %48 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i64 0, i32 1
  %49 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 3, i32 1, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 3, i32 1, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = zext i32 %52 to i64
  %54 = shl nuw i64 %53, 32
  %55 = zext i32 %50 to i64
  %56 = or i64 %54, %55
  %57 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i64 0, i32 0
  store i64 0, i64* %57, align 8
  store i64 %56, i64* %48, align 8
  %58 = icmp eq %class.SkImageFilter* %1, null
  br i1 %58, label %59, label %131

59:                                               ; preds = %5
  %60 = bitcast { i64, i64 }* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %60) #15
  %61 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i64 0, i32 1
  %62 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %3, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = tail call i64 @_ZNK12SkBaseDevice9getOriginEv(%class.SkBaseDevice* %0) #15
  %65 = trunc i64 %64 to i32
  %66 = sub nsw i32 %63, %65
  %67 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %3, i64 0, i32 1
  %68 = load i32, i32* %67, align 4
  %69 = tail call i64 @_ZNK12SkBaseDevice9getOriginEv(%class.SkBaseDevice* %0) #15
  %70 = lshr i64 %69, 32
  %71 = trunc i64 %70 to i32
  %72 = sub nsw i32 %68, %71
  %73 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %2, i64 0, i32 3, i32 1, i32 0
  %74 = load i32, i32* %73, align 4
  %75 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %2, i64 0, i32 3, i32 1, i32 1
  %76 = load i32, i32* %75, align 4
  %77 = sext i32 %66 to i64
  %78 = sext i32 %74 to i64
  %79 = add nsw i64 %78, %77
  %80 = icmp slt i64 %79, 2147483647
  %81 = select i1 %80, i64 %79, i64 2147483647
  %82 = icmp sgt i64 %81, -2147483647
  %83 = select i1 %82, i64 %81, i64 -2147483647
  %84 = sext i32 %72 to i64
  %85 = sext i32 %76 to i64
  %86 = add nsw i64 %84, %85
  %87 = icmp slt i64 %86, 2147483647
  %88 = select i1 %87, i64 %86, i64 2147483647
  %89 = icmp sgt i64 %88, -2147483647
  %90 = select i1 %89, i64 %88, i64 -2147483647
  %91 = zext i32 %72 to i64
  %92 = shl nuw i64 %91, 32
  %93 = zext i32 %66 to i64
  %94 = or i64 %92, %93
  %95 = shl nsw i64 %90, 32
  %96 = and i64 %83, 4294967295
  %97 = or i64 %95, %96
  %98 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i64 0, i32 0
  store i64 %94, i64* %98, align 8
  store i64 %97, i64* %61, align 8
  %99 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %14, %struct.SkIRect* nonnull dereferenceable(16) %14, %struct.SkIRect* nonnull dereferenceable(16) %12) #15
  br i1 %99, label %100, label %130

100:                                              ; preds = %59
  %101 = bitcast %class.sk_sp.74* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %101) #15
  %102 = getelementptr inbounds %class.sk_sp.74, %class.sk_sp.74* %15, i64 0, i32 0
  store %class.SkSpecialImage* inttoptr (i64 -6148914691236517206 to %class.SkSpecialImage*), %class.SkSpecialImage** %102, align 8
  %103 = bitcast %class.SkBaseDevice* %0 to void (%class.sk_sp.74*, %class.SkBaseDevice*, %struct.SkIRect*, i1)***
  %104 = load void (%class.sk_sp.74*, %class.SkBaseDevice*, %struct.SkIRect*, i1)**, void (%class.sk_sp.74*, %class.SkBaseDevice*, %struct.SkIRect*, i1)*** %103, align 8
  %105 = getelementptr inbounds void (%class.sk_sp.74*, %class.SkBaseDevice*, %struct.SkIRect*, i1)*, void (%class.sk_sp.74*, %class.SkBaseDevice*, %struct.SkIRect*, i1)** %104, i64 49
  %106 = load void (%class.sk_sp.74*, %class.SkBaseDevice*, %struct.SkIRect*, i1)*, void (%class.sk_sp.74*, %class.SkBaseDevice*, %struct.SkIRect*, i1)** %105, align 8
  call void %106(%class.sk_sp.74* nonnull sret %15, %class.SkBaseDevice* %0, %struct.SkIRect* nonnull dereferenceable(16) %14, i1 zeroext false) #15
  %107 = load %class.SkSpecialImage*, %class.SkSpecialImage** %102, align 8
  %108 = icmp eq %class.SkSpecialImage* %107, null
  br i1 %108, label %129, label %109

109:                                              ; preds = %100
  %110 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #15
  %111 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %16, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %111) #15
  %112 = bitcast %class.SkPaint* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %111, i8 0, i64 20, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %112) #15
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %17) #15
  %113 = bitcast %class.SkBaseDevice* %2 to void (%class.SkBaseDevice*, %class.SkSpecialImage*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*)***
  %114 = load void (%class.SkBaseDevice*, %class.SkSpecialImage*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*)**, void (%class.SkBaseDevice*, %class.SkSpecialImage*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*)*** %113, align 8
  %115 = getelementptr inbounds void (%class.SkBaseDevice*, %class.SkSpecialImage*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*)*, void (%class.SkBaseDevice*, %class.SkSpecialImage*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*)** %114, i64 45
  %116 = load void (%class.SkBaseDevice*, %class.SkSpecialImage*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*)*, void (%class.SkBaseDevice*, %class.SkSpecialImage*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*)** %115, align 8
  call void %116(%class.SkBaseDevice* %2, %class.SkSpecialImage* nonnull %107, %class.SkMatrix* dereferenceable(40) %110, %struct.SkSamplingOptions* nonnull dereferenceable(20) %16, %class.SkPaint* nonnull dereferenceable(72) %17) #15
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %17) #15
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %112) #15
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %111) #15
  %117 = load %class.SkSpecialImage*, %class.SkSpecialImage** %102, align 8
  %118 = icmp eq %class.SkSpecialImage* %117, null
  br i1 %118, label %129, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %117, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = atomicrmw add i32* %120, i32 -1 acq_rel
  %122 = icmp eq i32 %121, 1
  br i1 %122, label %123, label %129

123:                                              ; preds = %119
  %124 = bitcast %class.SkSpecialImage* %117 to %class.SkRefCntBase*
  %125 = bitcast %class.SkSpecialImage* %117 to void (%class.SkRefCntBase*)***
  %126 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %125, align 8
  %127 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %126, i64 2
  %128 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %127, align 8
  call void %128(%class.SkRefCntBase* nonnull %124) #15
  br label %129

129:                                              ; preds = %100, %109, %119, %123
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %101) #15
  br label %130

130:                                              ; preds = %59, %129
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %60) #15
  br label %856

131:                                              ; preds = %5
  %132 = bitcast %class.SkMatrix* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %132) #15
  %133 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %18, i64 0, i32 1
  %134 = bitcast %class.SkMatrix* %18 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %134, align 16
  %135 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %18, i64 0, i32 0, i64 4
  %136 = bitcast float* %135 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %136, align 16
  %137 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %18, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %137, align 16
  store i32 16, i32* %133, align 4
  %138 = bitcast %class.SkMatrix* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %138) #15
  %139 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %19, i64 0, i32 1
  %140 = bitcast %class.SkMatrix* %19 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %140, align 16
  %141 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %19, i64 0, i32 0, i64 4
  %142 = bitcast float* %141 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %142, align 16
  %143 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %19, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %143, align 16
  store i32 16, i32* %139, align 4
  %144 = bitcast %struct.SkSize* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %144) #15
  %145 = getelementptr inbounds %struct.SkSize, %struct.SkSize* %20, i64 0, i32 0
  store float 0xFFFFFFFFE0000000, float* %145, align 4
  %146 = getelementptr inbounds %struct.SkSize, %struct.SkSize* %20, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %146, align 4
  %147 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 1
  %148 = load i32, i32* %147, align 4
  %149 = trunc i32 %148 to i8
  %150 = icmp slt i8 %149, 0
  br i1 %150, label %151, label %154

151:                                              ; preds = %131
  %152 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %4) #15
  %153 = zext i8 %152 to i32
  store i32 %153, i32* %147, align 4
  br label %154

154:                                              ; preds = %131, %151
  %155 = phi i32 [ %153, %151 ], [ %148, %131 ]
  %156 = and i32 %155, 12
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %161, label %158

158:                                              ; preds = %154
  %159 = bitcast %class.SkImageFilter* %1 to %class.SkImageFilter_Base*
  %160 = tail call zeroext i1 @_ZNK18SkImageFilter_Base19canHandleComplexCTMEv(%class.SkImageFilter_Base* nonnull %159) #15
  br i1 %160, label %161, label %165

161:                                              ; preds = %158, %154
  %162 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #15
  %163 = bitcast %class.SkMatrix* %162 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %132, i8* align 4 %163, i64 40, i1 false)
  %164 = bitcast %class.SkMatrix* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %138, i8* align 4 %164, i64 40, i1 false)
  br label %181

165:                                              ; preds = %158
  %166 = call zeroext i1 @_ZNK8SkMatrix14decomposeScaleEP6SkSizePS_(%class.SkMatrix* %4, %struct.SkSize* nonnull %20, %class.SkMatrix* nonnull %18) #15
  br i1 %166, label %167, label %177

167:                                              ; preds = %165
  %168 = bitcast %class.SkMatrix* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %168) #15
  %169 = load float, float* %145, align 4
  %170 = load float, float* %146, align 4
  %171 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %21, i64 0, i32 1
  %172 = bitcast %class.SkMatrix* %21 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %172, align 16, !alias.scope !98
  %173 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %21, i64 0, i32 0, i64 4
  %174 = bitcast float* %173 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %174, align 16, !alias.scope !98
  %175 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %21, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %175, align 16, !alias.scope !98
  store i32 16, i32* %171, align 4, !alias.scope !98
  %176 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8setScaleEff(%class.SkMatrix* nonnull %21, float %169, float %170) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %138, i8* nonnull align 16 %168, i64 40, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %168) #15
  br label %181

177:                                              ; preds = %165
  %178 = bitcast %class.SkMatrix* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %132, i8* align 4 %178, i64 40, i1 false)
  %179 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #15
  %180 = bitcast %class.SkMatrix* %179 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %138, i8* align 4 %180, i64 40, i1 false)
  br label %181

181:                                              ; preds = %167, %177, %161
  %182 = bitcast %class.SkMatrix* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %182) #15
  %183 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %22, i64 0, i32 1
  %184 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %22, i64 0, i32 0, i64 1
  %185 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %22, i64 0, i32 0, i64 2
  %186 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %22, i64 0, i32 0, i64 3
  %187 = bitcast %class.SkMatrix* %22 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %187, align 16
  %188 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %22, i64 0, i32 0, i64 4
  %189 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %22, i64 0, i32 0, i64 5
  %190 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %22, i64 0, i32 0, i64 6
  %191 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %22, i64 0, i32 0, i64 7
  %192 = bitcast float* %188 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %192, align 16
  %193 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %22, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %193, align 16
  store i32 16, i32* %183, align 4
  %194 = load i32, i32* %133, align 4
  %195 = trunc i32 %194 to i8
  %196 = icmp slt i8 %195, 0
  br i1 %196, label %197, label %200

197:                                              ; preds = %181
  %198 = call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* nonnull %18) #15
  %199 = zext i8 %198 to i32
  store i32 %199, i32* %133, align 4
  br label %200

200:                                              ; preds = %197, %181
  %201 = phi i32 [ %199, %197 ], [ %194, %181 ]
  %202 = and i32 %201, 15
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %204, label %206

204:                                              ; preds = %200
  %205 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix* nonnull %22) #15
  br label %208

206:                                              ; preds = %200
  %207 = call zeroext i1 @_ZNK8SkMatrix17invertNonIdentityEPS_(%class.SkMatrix* nonnull %18, %class.SkMatrix* nonnull %22) #15
  br i1 %207, label %208, label %855

208:                                              ; preds = %204, %206
  %209 = bitcast { i64, i64 }* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %209) #15
  %210 = bitcast { i64, i64 }* %23 to i32*
  %211 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %24, i64 0, i32 1
  %212 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %23, i64 0, i32 1
  %213 = bitcast i64* %212 to i32*
  %214 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %24, i64 0, i32 3
  %215 = bitcast { <2 x float>, <2 x float> }* %25 to i8*
  %216 = bitcast { i64, i64 }* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %216, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %215) #15
  %217 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %3, i64 0, i32 0
  %218 = load i32, i32* %217, align 4
  %219 = sitofp i32 %218 to float
  %220 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %3, i64 0, i32 1
  %221 = load i32, i32* %220, align 4
  %222 = sitofp i32 %221 to float
  %223 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %2, i64 0, i32 3, i32 1, i32 0
  %224 = load i32, i32* %223, align 4
  %225 = sitofp i32 %224 to float
  %226 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %2, i64 0, i32 3, i32 1, i32 1
  %227 = load i32, i32* %226, align 4
  %228 = sitofp i32 %227 to float
  %229 = insertelement <2 x float> undef, float %219, i32 0
  %230 = insertelement <2 x float> %229, float %222, i32 1
  %231 = fadd float %219, %225
  %232 = insertelement <2 x float> undef, float %231, i32 0
  %233 = fadd float %222, %228
  %234 = insertelement <2 x float> %232, float %233, i32 1
  %235 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %25, i64 0, i32 0
  store <2 x float> %230, <2 x float>* %235, align 8
  %236 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %25, i64 0, i32 1
  store <2 x float> %234, <2 x float>* %236, align 8
  %237 = bitcast { <2 x float>, <2 x float> }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %237)
  %238 = bitcast { <2 x float>, <2 x float> }* %7 to %struct.SkRect*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %237, i8 -1, i64 16, i1 false) #15
  %239 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* nonnull %22, %struct.SkRect* nonnull %238, %struct.SkRect* nonnull dereferenceable(16) %26, i32 1) #15
  %240 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 0
  %241 = load <2 x float>, <2 x float>* %240, align 8
  %242 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 1
  %243 = load <2 x float>, <2 x float>* %242, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %237)
  %244 = extractelement <2 x float> %241, i32 0
  %245 = call float @llvm.floor.f32(float %244) #15
  %246 = fcmp olt float %245, 0x41DFFFFFE0000000
  %247 = select i1 %246, float %245, float 0x41DFFFFFE0000000
  %248 = fcmp ogt float %247, 0xC1DFFFFFE0000000
  %249 = select i1 %248, float %247, float 0xC1DFFFFFE0000000
  %250 = fptosi float %249 to i32
  %251 = extractelement <2 x float> %241, i32 1
  %252 = call float @llvm.floor.f32(float %251) #15
  %253 = fcmp olt float %252, 0x41DFFFFFE0000000
  %254 = select i1 %253, float %252, float 0x41DFFFFFE0000000
  %255 = fcmp ogt float %254, 0xC1DFFFFFE0000000
  %256 = select i1 %255, float %254, float 0xC1DFFFFFE0000000
  %257 = fptosi float %256 to i32
  %258 = extractelement <2 x float> %243, i32 0
  %259 = call float @llvm.ceil.f32(float %258) #15
  %260 = fcmp olt float %259, 0x41DFFFFFE0000000
  %261 = select i1 %260, float %259, float 0x41DFFFFFE0000000
  %262 = fcmp ogt float %261, 0xC1DFFFFFE0000000
  %263 = select i1 %262, float %261, float 0xC1DFFFFFE0000000
  %264 = fptosi float %263 to i32
  %265 = extractelement <2 x float> %243, i32 1
  %266 = call float @llvm.ceil.f32(float %265) #15
  %267 = fcmp olt float %266, 0x41DFFFFFE0000000
  %268 = select i1 %267, float %266, float 0x41DFFFFFE0000000
  %269 = fcmp ogt float %268, 0xC1DFFFFFE0000000
  %270 = select i1 %269, float %268, float 0xC1DFFFFFE0000000
  %271 = fptosi float %270 to i32
  %272 = zext i32 %257 to i64
  %273 = shl nuw i64 %272, 32
  %274 = zext i32 %250 to i64
  %275 = or i64 %273, %274
  %276 = zext i32 %271 to i64
  %277 = shl nuw i64 %276, 32
  %278 = zext i32 %264 to i64
  %279 = or i64 %277, %278
  %280 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %23, i64 0, i32 0
  store i64 %275, i64* %280, align 8
  store i64 %279, i64* %212, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %215) #15
  %281 = call { i64, i64 } @_ZNK13SkImageFilter12filterBoundsERK7SkIRectRK8SkMatrixNS_12MapDirectionEPS1_(%class.SkImageFilter* nonnull %1, %struct.SkIRect* nonnull dereferenceable(16) %24, %class.SkMatrix* nonnull dereferenceable(40) %19, i32 1, %struct.SkIRect* nonnull %24) #15
  %282 = extractvalue { i64, i64 } %281, 0
  %283 = trunc i64 %282 to i32
  %284 = lshr i64 %282, 32
  %285 = trunc i64 %284 to i32
  %286 = extractvalue { i64, i64 } %281, 1
  %287 = bitcast { i64, i64 }* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %287) #15
  %288 = bitcast { i64, i64 }* %27 to i32*
  %289 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %28, i64 0, i32 1
  %290 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %27, i64 0, i32 1
  %291 = bitcast i64* %290 to i32*
  %292 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %28, i64 0, i32 3
  %293 = bitcast { <2 x float>, <2 x float> }* %29 to i8*
  %294 = bitcast { i64, i64 }* %27 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %294, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %293) #15
  %295 = sitofp i32 %283 to float
  %296 = insertelement <2 x float> undef, float %295, i32 0
  %297 = sitofp i32 %285 to float
  %298 = insertelement <2 x float> %296, float %297, i32 1
  %299 = trunc i64 %286 to i32
  %300 = sitofp i32 %299 to float
  %301 = insertelement <2 x float> undef, float %300, i32 0
  %302 = lshr i64 %286, 32
  %303 = trunc i64 %302 to i32
  %304 = sitofp i32 %303 to float
  %305 = insertelement <2 x float> %301, float %304, i32 1
  %306 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %29, i64 0, i32 0
  store <2 x float> %298, <2 x float>* %306, align 8
  %307 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %29, i64 0, i32 1
  store <2 x float> %305, <2 x float>* %307, align 8
  %308 = bitcast { <2 x float>, <2 x float> }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %308)
  %309 = bitcast { <2 x float>, <2 x float> }* %6 to %struct.SkRect*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %308, i8 -1, i64 16, i1 false) #15
  %310 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* nonnull %18, %struct.SkRect* nonnull %309, %struct.SkRect* nonnull dereferenceable(16) %30, i32 1) #15
  %311 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 0
  %312 = load <2 x float>, <2 x float>* %311, align 8
  %313 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 1
  %314 = load <2 x float>, <2 x float>* %313, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %308)
  %315 = extractelement <2 x float> %312, i32 0
  %316 = call float @llvm.floor.f32(float %315) #15
  %317 = fcmp olt float %316, 0x41DFFFFFE0000000
  %318 = select i1 %317, float %316, float 0x41DFFFFFE0000000
  %319 = fcmp ogt float %318, 0xC1DFFFFFE0000000
  %320 = select i1 %319, float %318, float 0xC1DFFFFFE0000000
  %321 = fptosi float %320 to i32
  %322 = extractelement <2 x float> %312, i32 1
  %323 = call float @llvm.floor.f32(float %322) #15
  %324 = fcmp olt float %323, 0x41DFFFFFE0000000
  %325 = select i1 %324, float %323, float 0x41DFFFFFE0000000
  %326 = fcmp ogt float %325, 0xC1DFFFFFE0000000
  %327 = select i1 %326, float %325, float 0xC1DFFFFFE0000000
  %328 = fptosi float %327 to i32
  %329 = extractelement <2 x float> %314, i32 0
  %330 = call float @llvm.ceil.f32(float %329) #15
  %331 = fcmp olt float %330, 0x41DFFFFFE0000000
  %332 = select i1 %331, float %330, float 0x41DFFFFFE0000000
  %333 = fcmp ogt float %332, 0xC1DFFFFFE0000000
  %334 = select i1 %333, float %332, float 0xC1DFFFFFE0000000
  %335 = fptosi float %334 to i32
  %336 = extractelement <2 x float> %314, i32 1
  %337 = call float @llvm.ceil.f32(float %336) #15
  %338 = fcmp olt float %337, 0x41DFFFFFE0000000
  %339 = select i1 %338, float %337, float 0x41DFFFFFE0000000
  %340 = fcmp ogt float %339, 0xC1DFFFFFE0000000
  %341 = select i1 %340, float %339, float 0xC1DFFFFFE0000000
  %342 = fptosi float %341 to i32
  %343 = zext i32 %328 to i64
  %344 = shl nuw i64 %343, 32
  %345 = zext i32 %321 to i64
  %346 = or i64 %344, %345
  %347 = zext i32 %342 to i64
  %348 = shl nuw i64 %347, 32
  %349 = zext i32 %335 to i64
  %350 = or i64 %348, %349
  %351 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %27, i64 0, i32 0
  store i64 %346, i64* %351, align 8
  store i64 %350, i64* %290, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %293) #15
  %352 = call i64 @_ZNK12SkBaseDevice9getOriginEv(%class.SkBaseDevice* %0) #15
  %353 = call i64 @_ZNK12SkBaseDevice9getOriginEv(%class.SkBaseDevice* %0) #15
  %354 = load i32, i32* %288, align 8
  %355 = sext i32 %354 to i64
  %356 = shl i64 %352, 32
  %357 = sub i64 0, %356
  %358 = ashr exact i64 %357, 32
  %359 = add nsw i64 %358, %355
  %360 = icmp slt i64 %359, 2147483647
  %361 = select i1 %360, i64 %359, i64 2147483647
  %362 = icmp sgt i64 %361, -2147483647
  %363 = select i1 %362, i64 %361, i64 -2147483647
  %364 = trunc i64 %363 to i32
  store i32 %364, i32* %288, align 8
  %365 = load i32, i32* %289, align 4
  %366 = sext i32 %365 to i64
  %367 = and i64 %353, -4294967296
  %368 = sub i64 0, %367
  %369 = ashr exact i64 %368, 32
  %370 = add nsw i64 %369, %366
  %371 = icmp slt i64 %370, 2147483647
  %372 = select i1 %371, i64 %370, i64 2147483647
  %373 = icmp sgt i64 %372, -2147483647
  %374 = select i1 %373, i64 %372, i64 -2147483647
  %375 = trunc i64 %374 to i32
  store i32 %375, i32* %289, align 4
  %376 = load i32, i32* %291, align 8
  %377 = sext i32 %376 to i64
  %378 = add nsw i64 %358, %377
  %379 = icmp slt i64 %378, 2147483647
  %380 = select i1 %379, i64 %378, i64 2147483647
  %381 = icmp sgt i64 %380, -2147483647
  %382 = select i1 %381, i64 %380, i64 -2147483647
  %383 = trunc i64 %382 to i32
  store i32 %383, i32* %291, align 8
  %384 = load i32, i32* %292, align 4
  %385 = sext i32 %384 to i64
  %386 = add nsw i64 %369, %385
  %387 = icmp slt i64 %386, 2147483647
  %388 = select i1 %387, i64 %386, i64 2147483647
  %389 = icmp sgt i64 %388, -2147483647
  %390 = select i1 %389, i64 %388, i64 -2147483647
  %391 = trunc i64 %390 to i32
  store i32 %391, i32* %292, align 4
  %392 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %28, %struct.SkIRect* nonnull dereferenceable(16) %28, %struct.SkIRect* nonnull dereferenceable(16) %12) #15
  br i1 %392, label %393, label %854

393:                                              ; preds = %208
  %394 = bitcast %class.sk_sp.74* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %394) #15
  %395 = getelementptr inbounds %class.sk_sp.74, %class.sk_sp.74* %31, i64 0, i32 0
  store %class.SkSpecialImage* inttoptr (i64 -6148914691236517206 to %class.SkSpecialImage*), %class.SkSpecialImage** %395, align 8
  %396 = bitcast %class.SkBaseDevice* %0 to void (%class.sk_sp.74*, %class.SkBaseDevice*, %struct.SkIRect*, i1)***
  %397 = load void (%class.sk_sp.74*, %class.SkBaseDevice*, %struct.SkIRect*, i1)**, void (%class.sk_sp.74*, %class.SkBaseDevice*, %struct.SkIRect*, i1)*** %396, align 8
  %398 = getelementptr inbounds void (%class.sk_sp.74*, %class.SkBaseDevice*, %struct.SkIRect*, i1)*, void (%class.sk_sp.74*, %class.SkBaseDevice*, %struct.SkIRect*, i1)** %397, i64 49
  %399 = load void (%class.sk_sp.74*, %class.SkBaseDevice*, %struct.SkIRect*, i1)*, void (%class.sk_sp.74*, %class.SkBaseDevice*, %struct.SkIRect*, i1)** %398, align 8
  call void %399(%class.sk_sp.74* nonnull sret %31, %class.SkBaseDevice* %0, %struct.SkIRect* nonnull dereferenceable(16) %28, i1 zeroext false) #15
  %400 = load %class.SkSpecialImage*, %class.SkSpecialImage** %395, align 8
  %401 = icmp eq %class.SkSpecialImage* %400, null
  br i1 %401, label %853, label %402

402:                                              ; preds = %393
  %403 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 3, i32 0, i32 1
  %404 = load i32, i32* %403, align 8
  %405 = icmp eq i32 %404, 0
  %406 = select i1 %405, i32 4, i32 %404
  %407 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %408 = load %class.SkColorSpace*, %class.SkColorSpace** %407, align 8
  %409 = bitcast %class.SkPaint* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %409) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %409, i8* align 8 bitcast (%class.SkPaint* @__const._ZL25clean_paint_for_drawImagePK7SkPaint.cleaned to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %32) #15
  %410 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %33, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %410) #15
  %411 = bitcast %struct.SkSamplingOptions* %33 to i32*
  store i32 -1431655766, i32* %411, align 4
  store i8 0, i8* %410, align 4
  %412 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %33, i64 0, i32 1, i32 0
  %413 = bitcast float* %412 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %413, i8 0, i64 16, i1 false) #15
  %414 = load i32, i32* %133, align 4
  %415 = trunc i32 %414 to i8
  %416 = icmp slt i8 %415, 0
  br i1 %416, label %417, label %420

417:                                              ; preds = %402
  %418 = call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* nonnull %18) #15
  %419 = zext i8 %418 to i32
  store i32 %419, i32* %133, align 4
  br label %420

420:                                              ; preds = %402, %417
  %421 = phi i32 [ %419, %417 ], [ %414, %402 ]
  %422 = and i32 %421, 15
  %423 = icmp eq i32 %422, 0
  br i1 %423, label %654, label %424

424:                                              ; preds = %420
  store i8 1, i8* %410, align 4
  %425 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %33, i64 0, i32 1
  %426 = bitcast %struct.SkCubicResampler* %425 to i64*
  store i64 4515609228859845291, i64* %426, align 4
  %427 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %33, i64 0, i32 2
  store i32 0, i32* %427, align 4
  %428 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %33, i64 0, i32 3
  store i32 0, i32* %428, align 4
  %429 = bitcast %class.sk_sp.244* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %429) #15
  %430 = getelementptr inbounds %class.sk_sp.244, %class.sk_sp.244* %34, i64 0, i32 0
  store %class.SkSpecialSurface* inttoptr (i64 -6148914691236517206 to %class.SkSpecialSurface*), %class.SkSpecialSurface** %430, align 8
  %431 = load %class.SkSpecialImage*, %class.SkSpecialImage** %395, align 8
  %432 = bitcast i64* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %432) #15
  %433 = sub i64 %286, %282
  %434 = sub nsw i64 %302, %284
  %435 = shl i64 %434, 32
  %436 = and i64 %433, 4294967295
  %437 = or i64 %435, %436
  store i64 %437, i64* %35, align 8
  %438 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %2, i64 0, i32 4
  call void @_ZNK14SkSpecialImage11makeSurfaceE11SkColorTypePK12SkColorSpaceRK7SkISize11SkAlphaTypeRK14SkSurfaceProps(%class.sk_sp.244* nonnull sret %34, %class.SkSpecialImage* %431, i32 %406, %class.SkColorSpace* %408, %struct.SkISize* nonnull dereferenceable(8) %36, i32 2, %class.SkSurfaceProps* dereferenceable(8) %438) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %432) #15
  %439 = load %class.SkSpecialSurface*, %class.SkSpecialSurface** %430, align 8
  %440 = icmp eq %class.SkSpecialSurface* %439, null
  br i1 %440, label %653, label %441

441:                                              ; preds = %424
  %442 = call %class.SkCanvas* @_ZN16SkSpecialSurface9getCanvasEv(%class.SkSpecialSurface* nonnull %439) #15
  %443 = bitcast { <2 x float>, <2 x float> }* %9 to %struct.SkRGBA4f*
  %444 = bitcast { <2 x float>, <2 x float> }* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %444) #15
  %445 = call { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32 0) #15
  %446 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 0
  %447 = extractvalue { <2 x float>, <2 x float> } %445, 0
  store <2 x float> %447, <2 x float>* %446, align 8
  %448 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 1
  %449 = extractvalue { <2 x float>, <2 x float> } %445, 1
  store <2 x float> %449, <2 x float>* %448, align 8
  %450 = bitcast %class.SkPaint* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %450) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %450, i8* align 8 bitcast (%class.SkPaint* @__const._ZL25clean_paint_for_drawImagePK7SkPaint.cleaned to i8*), i64 72, i1 false) #15
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %8) #15
  call void @_ZN7SkPaint8setColorERK8SkRGBA4fIL11SkAlphaType3EEP12SkColorSpace(%class.SkPaint* nonnull %8, %struct.SkRGBA4f* nonnull dereferenceable(16) %443, %class.SkColorSpace* null) #15
  %451 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %8, i64 0, i32 8, i32 0, i32 0
  %452 = load i32, i32* %451, align 8
  %453 = and i32 %452, -261121
  %454 = or i32 %453, 1024
  store i32 %454, i32* %451, align 8
  call void @_ZN8SkCanvas9drawPaintERK7SkPaint(%class.SkCanvas* %442, %class.SkPaint* nonnull dereferenceable(72) %8) #15
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %8) #15
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %450) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %444) #15
  %455 = sub nsw i32 0, %283
  %456 = sitofp i32 %455 to float
  %457 = sub nsw i32 0, %285
  %458 = sitofp i32 %457 to float
  call void @_ZN8SkCanvas9translateEff(%class.SkCanvas* %442, float %456, float %458)
  %459 = load i32, i32* %183, align 4
  %460 = trunc i32 %459 to i8
  %461 = icmp slt i8 %460, 0
  br i1 %461, label %462, label %465

462:                                              ; preds = %441
  %463 = call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* nonnull %22) #15
  %464 = zext i8 %463 to i32
  store i32 %464, i32* %183, align 4
  br label %465

465:                                              ; preds = %462, %441
  %466 = phi i32 [ %464, %462 ], [ %459, %441 ]
  %467 = and i32 %466, 15
  %468 = icmp eq i32 %467, 0
  br i1 %468, label %511, label %469

469:                                              ; preds = %465
  %470 = bitcast %class.SkM44* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %470) #15
  %471 = bitcast %class.SkMatrix* %22 to i32*
  %472 = load i32, i32* %471, align 16
  %473 = bitcast float* %184 to i32*
  %474 = load i32, i32* %473, align 4
  %475 = bitcast float* %185 to i32*
  %476 = load i32, i32* %475, align 8
  %477 = bitcast float* %186 to i32*
  %478 = load i32, i32* %477, align 4
  %479 = bitcast float* %188 to i32*
  %480 = load i32, i32* %479, align 16
  %481 = bitcast float* %189 to i32*
  %482 = load i32, i32* %481, align 4
  %483 = bitcast float* %190 to i32*
  %484 = load i32, i32* %483, align 8
  %485 = bitcast float* %191 to i32*
  %486 = load i32, i32* %485, align 4
  %487 = bitcast float* %193 to i32*
  %488 = load i32, i32* %487, align 16
  %489 = bitcast %class.SkM44* %10 to i32*
  store i32 %472, i32* %489, align 4
  %490 = getelementptr inbounds %class.SkM44, %class.SkM44* %10, i64 0, i32 0, i64 1
  %491 = bitcast float* %490 to i32*
  store i32 %478, i32* %491, align 4
  %492 = getelementptr inbounds %class.SkM44, %class.SkM44* %10, i64 0, i32 0, i64 2
  store float 0.000000e+00, float* %492, align 4
  %493 = getelementptr inbounds %class.SkM44, %class.SkM44* %10, i64 0, i32 0, i64 3
  %494 = bitcast float* %493 to i32*
  store i32 %484, i32* %494, align 4
  %495 = getelementptr inbounds %class.SkM44, %class.SkM44* %10, i64 0, i32 0, i64 4
  %496 = bitcast float* %495 to i32*
  store i32 %474, i32* %496, align 4
  %497 = getelementptr inbounds %class.SkM44, %class.SkM44* %10, i64 0, i32 0, i64 5
  %498 = bitcast float* %497 to i32*
  store i32 %480, i32* %498, align 4
  %499 = getelementptr inbounds %class.SkM44, %class.SkM44* %10, i64 0, i32 0, i64 6
  store float 0.000000e+00, float* %499, align 4
  %500 = getelementptr inbounds %class.SkM44, %class.SkM44* %10, i64 0, i32 0, i64 7
  %501 = bitcast float* %500 to i32*
  store i32 %486, i32* %501, align 4
  %502 = getelementptr inbounds %class.SkM44, %class.SkM44* %10, i64 0, i32 0, i64 8
  %503 = bitcast float* %502 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00>, <4 x float>* %503, align 4
  %504 = getelementptr inbounds %class.SkM44, %class.SkM44* %10, i64 0, i32 0, i64 12
  %505 = bitcast float* %504 to i32*
  store i32 %476, i32* %505, align 4
  %506 = getelementptr inbounds %class.SkM44, %class.SkM44* %10, i64 0, i32 0, i64 13
  %507 = bitcast float* %506 to i32*
  store i32 %482, i32* %507, align 4
  %508 = getelementptr inbounds %class.SkM44, %class.SkM44* %10, i64 0, i32 0, i64 14
  store float 0.000000e+00, float* %508, align 4
  %509 = getelementptr inbounds %class.SkM44, %class.SkM44* %10, i64 0, i32 0, i64 15
  %510 = bitcast float* %509 to i32*
  store i32 %488, i32* %510, align 4
  call void @_ZN8SkCanvas6concatERK5SkM44(%class.SkCanvas* %442, %class.SkM44* nonnull dereferenceable(64) %10) #15
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %470) #15
  br label %511

511:                                              ; preds = %465, %469
  %512 = call i64 @_ZNK12SkBaseDevice9getOriginEv(%class.SkBaseDevice* %0) #15
  %513 = trunc i64 %512 to i32
  %514 = sitofp i32 %513 to float
  %515 = call i64 @_ZNK12SkBaseDevice9getOriginEv(%class.SkBaseDevice* %0) #15
  %516 = lshr i64 %515, 32
  %517 = trunc i64 %516 to i32
  %518 = sitofp i32 %517 to float
  call void @_ZN8SkCanvas9translateEff(%class.SkCanvas* %442, float %514, float %518)
  %519 = bitcast %class.sk_sp.18* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %519) #15
  %520 = load %class.SkSpecialImage*, %class.SkSpecialImage** %395, align 8
  call void @_ZNK14SkSpecialImage7asImageEPK7SkIRect(%class.sk_sp.18* nonnull sret %37, %class.SkSpecialImage* %520, %struct.SkIRect* null) #15
  %521 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %37, i64 0, i32 0
  %522 = load %class.SkImage*, %class.SkImage** %521, align 8
  %523 = bitcast { <2 x float>, <2 x float> }* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %523) #15
  %524 = load %class.SkSpecialImage*, %class.SkSpecialImage** %395, align 8
  %525 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %524, i64 0, i32 2, i32 0
  %526 = load i32, i32* %525, align 4
  %527 = sitofp i32 %526 to float
  %528 = insertelement <2 x float> undef, float %527, i32 0
  %529 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %524, i64 0, i32 2, i32 1
  %530 = load i32, i32* %529, align 4
  %531 = sitofp i32 %530 to float
  %532 = insertelement <2 x float> %528, float %531, i32 1
  %533 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %524, i64 0, i32 2, i32 2
  %534 = load i32, i32* %533, align 4
  %535 = sitofp i32 %534 to float
  %536 = insertelement <2 x float> undef, float %535, i32 0
  %537 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %524, i64 0, i32 2, i32 3
  %538 = load i32, i32* %537, align 4
  %539 = sitofp i32 %538 to float
  %540 = insertelement <2 x float> %536, float %539, i32 1
  %541 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %38, i64 0, i32 0
  store <2 x float> %532, <2 x float>* %541, align 8
  %542 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %38, i64 0, i32 1
  store <2 x float> %540, <2 x float>* %542, align 8
  %543 = bitcast { <2 x float>, <2 x float> }* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %543) #15
  %544 = load i32, i32* %288, align 8
  %545 = sitofp i32 %544 to float
  %546 = insertelement <2 x float> undef, float %545, i32 0
  %547 = load i32, i32* %289, align 4
  %548 = sitofp i32 %547 to float
  %549 = insertelement <2 x float> %546, float %548, i32 1
  %550 = load i32, i32* %291, align 8
  %551 = sitofp i32 %550 to float
  %552 = insertelement <2 x float> undef, float %551, i32 0
  %553 = load i32, i32* %292, align 4
  %554 = sitofp i32 %553 to float
  %555 = insertelement <2 x float> %552, float %554, i32 1
  %556 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %40, i64 0, i32 0
  store <2 x float> %549, <2 x float>* %556, align 8
  %557 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %40, i64 0, i32 1
  store <2 x float> %555, <2 x float>* %557, align 8
  %558 = icmp eq %class.SkImage* %522, null
  br i1 %558, label %559, label %560

559:                                              ; preds = %511
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %543) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %523) #15
  br label %607

560:                                              ; preds = %511
  %561 = fsub float %551, %545
  %562 = fsub float %554, %548
  %563 = bitcast float %561 to i32
  %564 = and i32 %563, 2139095040
  %565 = icmp ne i32 %564, 2139095040
  %566 = fcmp ogt float %561, 0.000000e+00
  %567 = and i1 %566, %565
  br i1 %567, label %568, label %588

568:                                              ; preds = %560
  %569 = bitcast float %562 to i32
  %570 = and i32 %569, 2139095040
  %571 = icmp ne i32 %570, 2139095040
  %572 = fcmp ogt float %562, 0.000000e+00
  %573 = and i1 %572, %571
  br i1 %573, label %574, label %588

574:                                              ; preds = %568
  %575 = fsub float %535, %527
  %576 = fsub float %539, %531
  %577 = bitcast float %575 to i32
  %578 = and i32 %577, 2139095040
  %579 = icmp ne i32 %578, 2139095040
  %580 = fcmp ogt float %575, 0.000000e+00
  %581 = and i1 %580, %579
  br i1 %581, label %582, label %588

582:                                              ; preds = %574
  %583 = bitcast float %576 to i32
  %584 = and i32 %583, 2139095040
  %585 = icmp ne i32 %584, 2139095040
  %586 = fcmp ogt float %576, 0.000000e+00
  %587 = and i1 %586, %585
  br i1 %587, label %589, label %588

588:                                              ; preds = %560, %568, %574, %582
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %543) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %523) #15
  br label %596

589:                                              ; preds = %582
  %590 = bitcast %class.SkCanvas* %442 to void (%class.SkCanvas*, %class.SkImage*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)***
  %591 = load void (%class.SkCanvas*, %class.SkImage*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)**, void (%class.SkCanvas*, %class.SkImage*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)*** %590, align 8
  %592 = getelementptr inbounds void (%class.SkCanvas*, %class.SkImage*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)*, void (%class.SkCanvas*, %class.SkImage*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)** %591, i64 36
  %593 = load void (%class.SkCanvas*, %class.SkImage*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)*, void (%class.SkCanvas*, %class.SkImage*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)** %592, align 8
  call void %593(%class.SkCanvas* %442, %class.SkImage* nonnull %522, %struct.SkRect* nonnull dereferenceable(16) %39, %struct.SkRect* nonnull dereferenceable(16) %41, %struct.SkSamplingOptions* nonnull dereferenceable(20) %33, %class.SkPaint* nonnull %32, i32 0) #15
  %594 = load %class.SkImage*, %class.SkImage** %521, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %543) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %523) #15
  %595 = icmp eq %class.SkImage* %594, null
  br i1 %595, label %607, label %596

596:                                              ; preds = %588, %589
  %597 = phi %class.SkImage* [ %522, %588 ], [ %594, %589 ]
  %598 = getelementptr inbounds %class.SkImage, %class.SkImage* %597, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %599 = atomicrmw add i32* %598, i32 -1 acq_rel
  %600 = icmp eq i32 %599, 1
  br i1 %600, label %601, label %607

601:                                              ; preds = %596
  %602 = bitcast %class.SkImage* %597 to %class.SkRefCntBase*
  %603 = bitcast %class.SkImage* %597 to void (%class.SkRefCntBase*)***
  %604 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %603, align 8
  %605 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %604, i64 2
  %606 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %605, align 8
  call void %606(%class.SkRefCntBase* nonnull %602) #15
  br label %607

607:                                              ; preds = %559, %589, %596, %601
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %519) #15
  %608 = bitcast %class.sk_sp.74* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %608) #15
  %609 = load %class.SkSpecialSurface*, %class.SkSpecialSurface** %430, align 8
  call void @_ZN16SkSpecialSurface17makeImageSnapshotEv(%class.sk_sp.74* nonnull sret %42, %class.SkSpecialSurface* %609) #15
  %610 = getelementptr inbounds %class.sk_sp.74, %class.sk_sp.74* %42, i64 0, i32 0
  %611 = bitcast %class.sk_sp.74* %42 to i64*
  %612 = load i64, i64* %611, align 8
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %610, align 8
  %613 = load %class.SkSpecialImage*, %class.SkSpecialImage** %395, align 8
  %614 = bitcast %class.sk_sp.74* %31 to i64*
  store i64 %612, i64* %614, align 8
  %615 = icmp eq %class.SkSpecialImage* %613, null
  br i1 %615, label %639, label %616

616:                                              ; preds = %607
  %617 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %613, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %618 = atomicrmw add i32* %617, i32 -1 acq_rel
  %619 = icmp eq i32 %618, 1
  br i1 %619, label %620, label %626

620:                                              ; preds = %616
  %621 = bitcast %class.SkSpecialImage* %613 to %class.SkRefCntBase*
  %622 = bitcast %class.SkSpecialImage* %613 to void (%class.SkRefCntBase*)***
  %623 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %622, align 8
  %624 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %623, i64 2
  %625 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %624, align 8
  call void %625(%class.SkRefCntBase* nonnull %621) #15
  br label %626

626:                                              ; preds = %616, %620
  %627 = load %class.SkSpecialImage*, %class.SkSpecialImage** %610, align 8
  %628 = icmp eq %class.SkSpecialImage* %627, null
  br i1 %628, label %639, label %629

629:                                              ; preds = %626
  %630 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %627, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %631 = atomicrmw add i32* %630, i32 -1 acq_rel
  %632 = icmp eq i32 %631, 1
  br i1 %632, label %633, label %639

633:                                              ; preds = %629
  %634 = bitcast %class.SkSpecialImage* %627 to %class.SkRefCntBase*
  %635 = bitcast %class.SkSpecialImage* %627 to void (%class.SkRefCntBase*)***
  %636 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %635, align 8
  %637 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %636, i64 2
  %638 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %637, align 8
  call void %638(%class.SkRefCntBase* nonnull %634) #15
  br label %639

639:                                              ; preds = %607, %626, %629, %633
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %608) #15
  %640 = load %class.SkSpecialSurface*, %class.SkSpecialSurface** %430, align 8
  %641 = icmp eq %class.SkSpecialSurface* %640, null
  br i1 %641, label %652, label %642

642:                                              ; preds = %639
  %643 = getelementptr inbounds %class.SkSpecialSurface, %class.SkSpecialSurface* %640, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %644 = atomicrmw add i32* %643, i32 -1 acq_rel
  %645 = icmp eq i32 %644, 1
  br i1 %645, label %646, label %652

646:                                              ; preds = %642
  %647 = bitcast %class.SkSpecialSurface* %640 to %class.SkRefCntBase*
  %648 = bitcast %class.SkSpecialSurface* %640 to void (%class.SkRefCntBase*)***
  %649 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %648, align 8
  %650 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %649, i64 2
  %651 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %650, align 8
  call void %651(%class.SkRefCntBase* nonnull %647) #15
  br label %652

652:                                              ; preds = %639, %642, %646
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %429) #15
  br label %680

653:                                              ; preds = %424
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %429) #15
  br label %840

654:                                              ; preds = %420
  %655 = load i64, i64* %351, align 8
  %656 = call i64 @_ZNK12SkBaseDevice9getOriginEv(%class.SkBaseDevice* %0) #15
  %657 = call i64 @_ZNK12SkBaseDevice9getOriginEv(%class.SkBaseDevice* %0) #15
  %658 = shl i64 %655, 32
  %659 = ashr exact i64 %658, 32
  %660 = shl i64 %656, 32
  %661 = ashr exact i64 %660, 32
  %662 = add nsw i64 %661, %659
  %663 = icmp slt i64 %662, 2147483647
  %664 = select i1 %663, i64 %662, i64 2147483647
  %665 = icmp sgt i64 %664, -2147483647
  %666 = select i1 %665, i64 %664, i64 -2147483647
  %667 = trunc i64 %666 to i32
  %668 = ashr i64 %655, 32
  %669 = ashr i64 %657, 32
  %670 = add nsw i64 %669, %668
  %671 = icmp slt i64 %670, 2147483647
  %672 = select i1 %671, i64 %670, i64 2147483647
  %673 = icmp sgt i64 %672, -2147483647
  %674 = select i1 %673, i64 %672, i64 -2147483647
  %675 = trunc i64 %674 to i32
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %410, i8 0, i64 20, i1 false)
  %676 = sub nsw i32 0, %667
  %677 = sub nsw i32 0, %675
  %678 = sitofp i32 %676 to float
  %679 = sitofp i32 %677 to float
  br label %680

680:                                              ; preds = %652, %654
  %681 = phi float [ %458, %652 ], [ %679, %654 ]
  %682 = phi float [ %456, %652 ], [ %678, %654 ]
  %683 = phi i32 [ %457, %652 ], [ %677, %654 ]
  %684 = phi i32 [ %455, %652 ], [ %676, %654 ]
  %685 = phi i64 [ %282, %652 ], [ %666, %654 ]
  %686 = phi i64 [ %284, %652 ], [ %674, %654 ]
  %687 = load i32, i32* %210, align 8
  %688 = sext i32 %687 to i64
  %689 = sext i32 %684 to i64
  %690 = add nsw i64 %688, %689
  %691 = icmp slt i64 %690, 2147483647
  %692 = select i1 %691, i64 %690, i64 2147483647
  %693 = icmp sgt i64 %692, -2147483647
  %694 = select i1 %693, i64 %692, i64 -2147483647
  %695 = trunc i64 %694 to i32
  store i32 %695, i32* %210, align 8
  %696 = load i32, i32* %211, align 4
  %697 = sext i32 %696 to i64
  %698 = sext i32 %683 to i64
  %699 = add nsw i64 %697, %698
  %700 = icmp slt i64 %699, 2147483647
  %701 = select i1 %700, i64 %699, i64 2147483647
  %702 = icmp sgt i64 %701, -2147483647
  %703 = select i1 %702, i64 %701, i64 -2147483647
  %704 = trunc i64 %703 to i32
  store i32 %704, i32* %211, align 4
  %705 = load i32, i32* %213, align 8
  %706 = sext i32 %705 to i64
  %707 = add nsw i64 %706, %689
  %708 = icmp slt i64 %707, 2147483647
  %709 = select i1 %708, i64 %707, i64 2147483647
  %710 = icmp sgt i64 %709, -2147483647
  %711 = select i1 %710, i64 %709, i64 -2147483647
  %712 = trunc i64 %711 to i32
  store i32 %712, i32* %213, align 8
  %713 = load i32, i32* %214, align 4
  %714 = sext i32 %713 to i64
  %715 = add nsw i64 %714, %698
  %716 = icmp slt i64 %715, 2147483647
  %717 = select i1 %716, i64 %715, i64 2147483647
  %718 = icmp sgt i64 %717, -2147483647
  %719 = select i1 %718, i64 %717, i64 -2147483647
  %720 = trunc i64 %719 to i32
  store i32 %720, i32* %214, align 4
  %721 = bitcast %class.SkMatrix* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %721) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %721, i8* nonnull align 16 %138, i64 40, i1 false)
  %722 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13postTranslateEff(%class.SkMatrix* nonnull %43, float %682, float %681) #15
  %723 = bitcast %"class.skif::Context"* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %723) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %723, i8* align 8 bitcast ({ %"class.skif::Mapping", %"class.skif::LayerSpace", %class.SkImageFilterCache*, i32, [4 x i8], %class.SkColorSpace*, %"class.skif::FilterResult" }* @__const._ZN8SkCanvas20DrawDeviceWithFilterEP12SkBaseDevicePK13SkImageFilterS1_RK8SkIPointRK8SkMatrix.ctx to i8*), i64 136, i1 false)
  %724 = load %class.SkSpecialImage*, %class.SkSpecialImage** %395, align 8
  %725 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #15
  %726 = bitcast %class.SkMatrix* %725 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %723, i8* align 4 %726, i64 40, i1 false) #15
  %727 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %44, i64 0, i32 0, i32 1
  %728 = bitcast %class.SkMatrix* %727 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %728, i8* nonnull align 4 %721, i64 40, i1 false) #15
  %729 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %44, i64 0, i32 1
  %730 = bitcast %"class.skif::LayerSpace"* %729 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %730, i8* nonnull align 8 %209, i64 16, i1 false) #15
  %731 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %44, i64 0, i32 2
  store %class.SkImageFilterCache* null, %class.SkImageFilterCache** %731, align 8
  %732 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %44, i64 0, i32 3
  store i32 %406, i32* %732, align 8
  %733 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %44, i64 0, i32 4
  store %class.SkColorSpace* %408, %class.SkColorSpace** %733, align 8
  %734 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %44, i64 0, i32 5
  %735 = icmp eq %class.SkSpecialImage* %724, null
  br i1 %735, label %739, label %736

736:                                              ; preds = %680
  %737 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %724, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %738 = atomicrmw add i32* %737, i32 1 monotonic, !noalias !101
  br label %739

739:                                              ; preds = %680, %736
  %740 = ptrtoint %class.SkSpecialImage* %724 to i64
  %741 = bitcast %"class.skif::FilterResult"* %734 to i64*
  store i64 %740, i64* %741, align 8
  %742 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %44, i64 0, i32 5, i32 1
  %743 = bitcast %"class.skif::LayerSpace.245"* %742 to i64*
  store i64 0, i64* %743, align 8
  %744 = bitcast %"class.skif::FilterResult.246"* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %744) #15
  %745 = bitcast %class.SkImageFilter* %1 to %class.SkImageFilter_Base*
  call void @_ZNK18SkImageFilter_Base11filterImageERKN4skif7ContextE(%"class.skif::FilterResult.246"* nonnull sret %45, %class.SkImageFilter_Base* nonnull %745, %"class.skif::Context"* nonnull dereferenceable(136) %44) #15
  %746 = getelementptr inbounds %"class.skif::FilterResult.246", %"class.skif::FilterResult.246"* %45, i64 0, i32 0, i32 0
  %747 = load %class.SkSpecialImage*, %class.SkSpecialImage** %746, align 8, !noalias !104
  %748 = icmp eq %class.SkSpecialImage* %747, null
  br i1 %748, label %759, label %749

749:                                              ; preds = %739
  %750 = getelementptr inbounds %"class.skif::FilterResult.246", %"class.skif::FilterResult.246"* %45, i64 0, i32 1, i32 0
  %751 = bitcast %struct.SkIPoint* %750 to i64*
  %752 = load i64, i64* %751, align 8, !noalias !104
  %753 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %747, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %754 = atomicrmw add i32* %753, i32 1 monotonic, !noalias !104
  %755 = ptrtoint %class.SkSpecialImage* %747 to i64
  %756 = shl i64 %752, 32
  %757 = ashr exact i64 %756, 32
  %758 = ashr i64 %752, 32
  br label %759

759:                                              ; preds = %739, %749
  %760 = phi i64 [ %758, %749 ], [ 0, %739 ]
  %761 = phi i64 [ %757, %749 ], [ 0, %739 ]
  %762 = phi i64 [ %755, %749 ], [ 0, %739 ]
  %763 = load %class.SkSpecialImage*, %class.SkSpecialImage** %395, align 8
  %764 = bitcast %class.sk_sp.74* %31 to i64*
  store i64 %762, i64* %764, align 8
  %765 = icmp eq %class.SkSpecialImage* %763, null
  br i1 %765, label %776, label %766

766:                                              ; preds = %759
  %767 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %763, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %768 = atomicrmw add i32* %767, i32 -1 acq_rel
  %769 = icmp eq i32 %768, 1
  br i1 %769, label %770, label %776

770:                                              ; preds = %766
  %771 = bitcast %class.SkSpecialImage* %763 to %class.SkRefCntBase*
  %772 = bitcast %class.SkSpecialImage* %763 to void (%class.SkRefCntBase*)***
  %773 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %772, align 8
  %774 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %773, i64 2
  %775 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %774, align 8
  call void %775(%class.SkRefCntBase* nonnull %771) #15
  br label %776

776:                                              ; preds = %770, %766, %759
  %777 = load %class.SkSpecialImage*, %class.SkSpecialImage** %746, align 8
  %778 = icmp eq %class.SkSpecialImage* %777, null
  br i1 %778, label %789, label %779

779:                                              ; preds = %776
  %780 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %777, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %781 = atomicrmw add i32* %780, i32 -1 acq_rel
  %782 = icmp eq i32 %781, 1
  br i1 %782, label %783, label %789

783:                                              ; preds = %779
  %784 = bitcast %class.SkSpecialImage* %777 to %class.SkRefCntBase*
  %785 = bitcast %class.SkSpecialImage* %777 to void (%class.SkRefCntBase*)***
  %786 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %785, align 8
  %787 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %786, i64 2
  %788 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %787, align 8
  call void %788(%class.SkRefCntBase* nonnull %784) #15
  br label %789

789:                                              ; preds = %776, %779, %783
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %744) #15
  %790 = load %class.SkSpecialImage*, %class.SkSpecialImage** %395, align 8
  %791 = icmp eq %class.SkSpecialImage* %790, null
  br i1 %791, label %825, label %792

792:                                              ; preds = %789
  %793 = shl i64 %685, 32
  %794 = ashr exact i64 %793, 32
  %795 = add nsw i64 %761, %794
  %796 = icmp slt i64 %795, 2147483647
  %797 = select i1 %796, i64 %795, i64 2147483647
  %798 = icmp sgt i64 %797, -2147483647
  %799 = select i1 %798, i64 %797, i64 -2147483647
  %800 = trunc i64 %799 to i32
  %801 = shl i64 %686, 32
  %802 = ashr exact i64 %801, 32
  %803 = add nsw i64 %760, %802
  %804 = icmp slt i64 %803, 2147483647
  %805 = select i1 %804, i64 %803, i64 2147483647
  %806 = icmp sgt i64 %805, -2147483647
  %807 = select i1 %806, i64 %805, i64 -2147483647
  %808 = trunc i64 %807 to i32
  %809 = bitcast %class.SkMatrix* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %809) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %809, i8* nonnull align 16 %132, i64 40, i1 false)
  %810 = load i32, i32* %217, align 4
  %811 = sub nsw i32 0, %810
  %812 = sitofp i32 %811 to float
  %813 = load i32, i32* %220, align 4
  %814 = sub nsw i32 0, %813
  %815 = sitofp i32 %814 to float
  %816 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13postTranslateEff(%class.SkMatrix* nonnull %46, float %812, float %815) #15
  %817 = sitofp i32 %800 to float
  %818 = sitofp i32 %808 to float
  %819 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12preTranslateEff(%class.SkMatrix* nonnull %46, float %817, float %818) #15
  %820 = load %class.SkSpecialImage*, %class.SkSpecialImage** %395, align 8
  %821 = bitcast %class.SkBaseDevice* %2 to void (%class.SkBaseDevice*, %class.SkSpecialImage*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*)***
  %822 = load void (%class.SkBaseDevice*, %class.SkSpecialImage*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*)**, void (%class.SkBaseDevice*, %class.SkSpecialImage*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*)*** %821, align 8
  %823 = getelementptr inbounds void (%class.SkBaseDevice*, %class.SkSpecialImage*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*)*, void (%class.SkBaseDevice*, %class.SkSpecialImage*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*)** %822, i64 45
  %824 = load void (%class.SkBaseDevice*, %class.SkSpecialImage*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*)*, void (%class.SkBaseDevice*, %class.SkSpecialImage*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*)** %823, align 8
  call void %824(%class.SkBaseDevice* %2, %class.SkSpecialImage* %820, %class.SkMatrix* nonnull dereferenceable(40) %46, %struct.SkSamplingOptions* nonnull dereferenceable(20) %33, %class.SkPaint* nonnull dereferenceable(72) %32) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %809) #15
  br label %825

825:                                              ; preds = %789, %792
  %826 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %44, i64 0, i32 5, i32 0, i32 0
  %827 = load %class.SkSpecialImage*, %class.SkSpecialImage** %826, align 8
  %828 = icmp eq %class.SkSpecialImage* %827, null
  br i1 %828, label %839, label %829

829:                                              ; preds = %825
  %830 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %827, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %831 = atomicrmw add i32* %830, i32 -1 acq_rel
  %832 = icmp eq i32 %831, 1
  br i1 %832, label %833, label %839

833:                                              ; preds = %829
  %834 = bitcast %class.SkSpecialImage* %827 to %class.SkRefCntBase*
  %835 = bitcast %class.SkSpecialImage* %827 to void (%class.SkRefCntBase*)***
  %836 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %835, align 8
  %837 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %836, i64 2
  %838 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %837, align 8
  call void %838(%class.SkRefCntBase* nonnull %834) #15
  br label %839

839:                                              ; preds = %825, %829, %833
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %723) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %721) #15
  br label %840

840:                                              ; preds = %839, %653
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %410) #15
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %32) #15
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %409) #15
  %841 = load %class.SkSpecialImage*, %class.SkSpecialImage** %395, align 8
  %842 = icmp eq %class.SkSpecialImage* %841, null
  br i1 %842, label %853, label %843

843:                                              ; preds = %840
  %844 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %841, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %845 = atomicrmw add i32* %844, i32 -1 acq_rel
  %846 = icmp eq i32 %845, 1
  br i1 %846, label %847, label %853

847:                                              ; preds = %843
  %848 = bitcast %class.SkSpecialImage* %841 to %class.SkRefCntBase*
  %849 = bitcast %class.SkSpecialImage* %841 to void (%class.SkRefCntBase*)***
  %850 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %849, align 8
  %851 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %850, i64 2
  %852 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %851, align 8
  call void %852(%class.SkRefCntBase* nonnull %848) #15
  br label %853

853:                                              ; preds = %393, %840, %843, %847
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %394) #15
  br label %854

854:                                              ; preds = %208, %853
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %287) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %209) #15
  br label %855

855:                                              ; preds = %206, %854
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %182) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %144) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %138) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %132) #15
  br label %856

856:                                              ; preds = %855, %130
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %47) #15
  ret void
}

declare i64 @_ZNK12SkBaseDevice9getOriginEv(%class.SkBaseDevice*) local_unnamed_addr #4

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() local_unnamed_addr #4

declare void @_ZN7SkPaintC1Ev(%class.SkPaint*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7SkPaintD1Ev(%class.SkPaint*) unnamed_addr #6

declare zeroext i1 @_ZNK18SkImageFilter_Base19canHandleComplexCTMEv(%class.SkImageFilter_Base*) local_unnamed_addr #4

declare zeroext i1 @_ZNK8SkMatrix14decomposeScaleEP6SkSizePS_(%class.SkMatrix*, %struct.SkSize*, %class.SkMatrix*) local_unnamed_addr #4

declare void @_ZNK14SkSpecialImage11makeSurfaceE11SkColorTypePK12SkColorSpaceRK7SkISize11SkAlphaTypeRK14SkSurfaceProps(%class.sk_sp.244* sret, %class.SkSpecialImage*, i32, %class.SkColorSpace*, %struct.SkISize* dereferenceable(8), i32, %class.SkSurfaceProps* dereferenceable(8)) local_unnamed_addr #4

declare %class.SkCanvas* @_ZN16SkSpecialSurface9getCanvasEv(%class.SkSpecialSurface*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas9translateEff(%class.SkCanvas*, float, float) local_unnamed_addr #0 align 2 {
  %4 = fcmp une float %1, 0.000000e+00
  %5 = fcmp une float %2, 0.000000e+00
  %6 = or i1 %4, %5
  br i1 %6, label %7, label %58

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %9 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %8, align 8
  %10 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %9, i64 0, i32 4
  %11 = load i32, i32* %10, align 8
  %12 = icmp sgt i32 %11, 0
  br i1 %12, label %13, label %46

13:                                               ; preds = %7
  %14 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*)***
  %15 = load void (%class.SkCanvas*)**, void (%class.SkCanvas*)*** %14, align 8
  %16 = getelementptr inbounds void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %15, i64 12
  %17 = load void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %16, align 8
  tail call void %17(%class.SkCanvas* %0) #15
  %18 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %8, align 8
  %19 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %18, i64 0, i32 4
  %20 = load i32, i32* %19, align 8
  %21 = add nsw i32 %20, -1
  store i32 %21, i32* %19, align 8
  %22 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 1
  %23 = tail call i8* @_ZN7SkDeque9push_backEv(%class.SkDeque* %22) #15
  %24 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %8, align 8
  %25 = bitcast i8* %23 to i64*
  store i64 0, i64* %25, align 8
  %26 = getelementptr inbounds i8, i8* %23, i64 8
  %27 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %24, i64 0, i32 1
  %28 = bitcast %class.SkBaseDevice** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast i8* %26 to i64*
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds i8, i8* %23, i64 16
  %32 = bitcast i8* %31 to i64*
  store i64 0, i64* %32, align 8
  %33 = getelementptr inbounds i8, i8* %23, i64 24
  %34 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %24, i64 0, i32 3
  %35 = bitcast %class.SkM44* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %35, i64 64, i1 false) #15
  %36 = getelementptr inbounds i8, i8* %23, i64 88
  %37 = bitcast i8* %36 to i32*
  store i32 0, i32* %37, align 8
  %38 = bitcast %"class.SkCanvas::MCRec"** %8 to i8**
  store i8* %23, i8** %38, align 8
  %39 = bitcast i8* %26 to %class.SkBaseDevice**
  %40 = load %class.SkBaseDevice*, %class.SkBaseDevice** %39, align 8
  %41 = bitcast %class.SkBaseDevice* %40 to void (%class.SkBaseDevice*)***
  %42 = load void (%class.SkBaseDevice*)**, void (%class.SkBaseDevice*)*** %41, align 8
  %43 = getelementptr inbounds void (%class.SkBaseDevice*)*, void (%class.SkBaseDevice*)** %42, i64 10
  %44 = load void (%class.SkBaseDevice*)*, void (%class.SkBaseDevice*)** %43, align 8
  tail call void %44(%class.SkBaseDevice* %40) #15
  %45 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %8, align 8
  br label %46

46:                                               ; preds = %7, %13
  %47 = phi %"class.SkCanvas::MCRec"* [ %9, %7 ], [ %45, %13 ]
  %48 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %47, i64 0, i32 3
  %49 = tail call dereferenceable(64) %class.SkM44* @_ZN5SkM4412preTranslateEfff(%class.SkM44* %48, float %1, float %2, float 0.000000e+00) #15
  %50 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %8, align 8
  %51 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %50, i64 0, i32 1
  %52 = load %class.SkBaseDevice*, %class.SkBaseDevice** %51, align 8
  %53 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %50, i64 0, i32 3
  tail call void @_ZN12SkBaseDevice12setGlobalCTMERK5SkM44(%class.SkBaseDevice* %52, %class.SkM44* dereferenceable(64) %53) #15
  %54 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*, float, float)***
  %55 = load void (%class.SkCanvas*, float, float)**, void (%class.SkCanvas*, float, float)*** %54, align 8
  %56 = getelementptr inbounds void (%class.SkCanvas*, float, float)*, void (%class.SkCanvas*, float, float)** %55, i64 20
  %57 = load void (%class.SkCanvas*, float, float)*, void (%class.SkCanvas*, float, float)** %56, align 8
  tail call void %57(%class.SkCanvas* %0, float %1, float %2) #15
  br label %58

58:                                               ; preds = %3, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas6concatERK8SkMatrix(%class.SkCanvas*, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.SkM44, align 4
  %4 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = trunc i32 %5 to i8
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %2
  %9 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %1) #15
  %10 = zext i8 %9 to i32
  store i32 %10, i32* %4, align 4
  br label %11

11:                                               ; preds = %2, %8
  %12 = phi i32 [ %10, %8 ], [ %5, %2 ]
  %13 = and i32 %12, 15
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %65, label %15

15:                                               ; preds = %11
  %16 = bitcast %class.SkM44* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %16) #15
  %17 = bitcast %class.SkMatrix* %1 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 0, i64 1
  %20 = bitcast float* %19 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 0, i64 2
  %23 = bitcast float* %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 0, i64 3
  %26 = bitcast float* %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 0, i64 4
  %29 = bitcast float* %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 0, i64 5
  %32 = bitcast float* %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 0, i64 6
  %35 = bitcast float* %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 0, i64 7
  %38 = bitcast float* %37 to i32*
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 0, i64 8
  %41 = bitcast float* %40 to i32*
  %42 = load i32, i32* %41, align 4
  %43 = bitcast %class.SkM44* %3 to i32*
  store i32 %18, i32* %43, align 4
  %44 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 1
  %45 = bitcast float* %44 to i32*
  store i32 %27, i32* %45, align 4
  %46 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 2
  store float 0.000000e+00, float* %46, align 4
  %47 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 3
  %48 = bitcast float* %47 to i32*
  store i32 %36, i32* %48, align 4
  %49 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 4
  %50 = bitcast float* %49 to i32*
  store i32 %21, i32* %50, align 4
  %51 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 5
  %52 = bitcast float* %51 to i32*
  store i32 %30, i32* %52, align 4
  %53 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 6
  store float 0.000000e+00, float* %53, align 4
  %54 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 7
  %55 = bitcast float* %54 to i32*
  store i32 %39, i32* %55, align 4
  %56 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 8
  %57 = bitcast float* %56 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00>, <4 x float>* %57, align 4
  %58 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 12
  %59 = bitcast float* %58 to i32*
  store i32 %24, i32* %59, align 4
  %60 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 13
  %61 = bitcast float* %60 to i32*
  store i32 %33, i32* %61, align 4
  %62 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 14
  store float 0.000000e+00, float* %62, align 4
  %63 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 15
  %64 = bitcast float* %63 to i32*
  store i32 %42, i32* %64, align 4
  call void @_ZN8SkCanvas6concatERK5SkM44(%class.SkCanvas* %0, %class.SkM44* nonnull dereferenceable(64) %3)
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %16) #15
  br label %65

65:                                               ; preds = %11, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas13drawImageRectEPK7SkImageRK6SkRectS5_RK17SkSamplingOptionsPK7SkPaintNS_17SrcRectConstraintE(%class.SkCanvas*, %class.SkImage*, %struct.SkRect* dereferenceable(16), %struct.SkRect* dereferenceable(16), %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint*, i32) local_unnamed_addr #0 align 2 {
  %8 = icmp eq %class.SkImage* %1, null
  br i1 %8, label %58, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 0, i32 2
  %11 = load float, float* %10, align 4
  %12 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 0, i32 0
  %13 = load float, float* %12, align 4
  %14 = fsub float %11, %13
  %15 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 0, i32 3
  %16 = load float, float* %15, align 4
  %17 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 0, i32 1
  %18 = load float, float* %17, align 4
  %19 = fsub float %16, %18
  %20 = bitcast float %14 to i32
  %21 = and i32 %20, 2139095040
  %22 = icmp ne i32 %21, 2139095040
  %23 = fcmp ogt float %14, 0.000000e+00
  %24 = and i1 %23, %22
  br i1 %24, label %25, label %58

25:                                               ; preds = %9
  %26 = bitcast float %19 to i32
  %27 = and i32 %26, 2139095040
  %28 = icmp ne i32 %27, 2139095040
  %29 = fcmp ogt float %19, 0.000000e+00
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %58

31:                                               ; preds = %25
  %32 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 2
  %33 = load float, float* %32, align 4
  %34 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 0
  %35 = load float, float* %34, align 4
  %36 = fsub float %33, %35
  %37 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 3
  %38 = load float, float* %37, align 4
  %39 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 1
  %40 = load float, float* %39, align 4
  %41 = fsub float %38, %40
  %42 = bitcast float %36 to i32
  %43 = and i32 %42, 2139095040
  %44 = icmp ne i32 %43, 2139095040
  %45 = fcmp ogt float %36, 0.000000e+00
  %46 = and i1 %45, %44
  br i1 %46, label %47, label %58

47:                                               ; preds = %31
  %48 = bitcast float %41 to i32
  %49 = and i32 %48, 2139095040
  %50 = icmp ne i32 %49, 2139095040
  %51 = fcmp ogt float %41, 0.000000e+00
  %52 = and i1 %51, %50
  br i1 %52, label %53, label %58

53:                                               ; preds = %47
  %54 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*, %class.SkImage*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)***
  %55 = load void (%class.SkCanvas*, %class.SkImage*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)**, void (%class.SkCanvas*, %class.SkImage*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)*** %54, align 8
  %56 = getelementptr inbounds void (%class.SkCanvas*, %class.SkImage*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)*, void (%class.SkCanvas*, %class.SkImage*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)** %55, i64 36
  %57 = load void (%class.SkCanvas*, %class.SkImage*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)*, void (%class.SkCanvas*, %class.SkImage*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)** %56, align 8
  tail call void %57(%class.SkCanvas* %0, %class.SkImage* nonnull %1, %struct.SkRect* dereferenceable(16) %2, %struct.SkRect* dereferenceable(16) %3, %struct.SkSamplingOptions* dereferenceable(20) %4, %class.SkPaint* %5, i32 %6) #15
  br label %58

58:                                               ; preds = %31, %9, %25, %47, %7, %53
  ret void
}

declare void @_ZNK14SkSpecialImage7asImageEPK7SkIRect(%class.sk_sp.18* sret, %class.SkSpecialImage*, %struct.SkIRect*) local_unnamed_addr #4

declare void @_ZN16SkSpecialSurface17makeImageSnapshotEv(%class.sk_sp.74* sret, %class.SkSpecialSurface*) local_unnamed_addr #4

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13postTranslateEff(%class.SkMatrix*, float, float) local_unnamed_addr #4

declare void @_ZNK18SkImageFilter_Base11filterImageERKN4skif7ContextE(%"class.skif::FilterResult.246"* sret, %class.SkImageFilter_Base*, %"class.skif::Context"* dereferenceable(136)) local_unnamed_addr #4

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12preTranslateEff(%class.SkMatrix*, float, float) local_unnamed_addr #4

declare void @_ZN7SkPaint13setMaskFilterE5sk_spI12SkMaskFilterE(%class.SkPaint*, %class.sk_sp.56*) local_unnamed_addr #4

declare void @_ZNK18SkImageFilter_Base8applyCTMERK8SkMatrixPS0_(%class.sk_sp.58* sret, %class.SkImageFilter_Base*, %class.SkMatrix* dereferenceable(40), %class.SkMatrix*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas17internalSetMatrixERK5SkM44(%class.SkCanvas* nocapture readonly, %class.SkM44* nocapture readonly dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %4 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %3, align 8
  %5 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %4, i64 0, i32 3
  %6 = bitcast %class.SkM44* %5 to i8*
  %7 = bitcast %class.SkM44* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 4 %7, i64 64, i1 false)
  %8 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %3, align 8
  %9 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %8, i64 0, i32 1
  %10 = load %class.SkBaseDevice*, %class.SkBaseDevice** %9, align 8
  %11 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %8, i64 0, i32 3
  tail call void @_ZN12SkBaseDevice12setGlobalCTMERK5SkM44(%class.SkBaseDevice* %10, %class.SkM44* dereferenceable(64) %11) #15
  ret void
}

declare void @_ZN7SkPaint14setImageFilterE5sk_spI13SkImageFilterE(%class.SkPaint*, %class.sk_sp.58*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8SkCanvas9imageInfoEv(%struct.SkImageInfo* noalias sret, %class.SkCanvas*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %class.SkCanvas* %1 to void (%struct.SkImageInfo*, %class.SkCanvas*)***
  %4 = load void (%struct.SkImageInfo*, %class.SkCanvas*)**, void (%struct.SkImageInfo*, %class.SkCanvas*)*** %3, align 8
  %5 = getelementptr inbounds void (%struct.SkImageInfo*, %class.SkCanvas*)*, void (%struct.SkImageInfo*, %class.SkCanvas*)** %4, i64 9
  %6 = load void (%struct.SkImageInfo*, %class.SkCanvas*)*, void (%struct.SkImageInfo*, %class.SkCanvas*)** %5, align 8
  tail call void %6(%struct.SkImageInfo* sret %0, %class.SkCanvas* %1) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkCanvas5MCRec8newLayerE5sk_spI12SkBaseDeviceEPK7SkPaintRK5SkM44(%"class.SkCanvas::MCRec"*, %class.sk_sp.2*, %class.SkPaint*, %class.SkM44* dereferenceable(64)) local_unnamed_addr #0 comdat align 2 {
  %5 = tail call i8* @_Znwm(i64 80) #16
  %6 = getelementptr inbounds %class.sk_sp.2, %class.sk_sp.2* %1, i64 0, i32 0
  %7 = bitcast %class.sk_sp.2* %1 to i64*
  %8 = load i64, i64* %7, align 8
  store %class.SkBaseDevice* null, %class.SkBaseDevice** %6, align 8
  %9 = bitcast i8* %5 to i64*
  store i64 %8, i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %5, i64 8
  %11 = icmp eq %class.SkPaint* %2, null
  br i1 %11, label %16, label %12

12:                                               ; preds = %4
  %13 = tail call i8* @_Znwm(i64 72) #16
  %14 = bitcast i8* %13 to %class.SkPaint*
  tail call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* nonnull %14, %class.SkPaint* nonnull dereferenceable(72) %2) #15
  %15 = ptrtoint i8* %13 to i64
  br label %16

16:                                               ; preds = %4, %12
  %17 = phi i64 [ %15, %12 ], [ 0, %4 ]
  %18 = bitcast i8* %10 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds i8, i8* %5, i64 16
  %20 = bitcast %class.SkM44* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 4 %20, i64 64, i1 false) #15
  %21 = ptrtoint i8* %5 to i64
  %22 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.(anonymous namespace)::Layer"*, %"struct.(anonymous namespace)::Layer"** %22, align 8
  %24 = bitcast %"class.SkCanvas::MCRec"* %0 to i64*
  store i64 %21, i64* %24, align 8
  %25 = icmp eq %"struct.(anonymous namespace)::Layer"* %23, null
  br i1 %25, label %26, label %28

26:                                               ; preds = %16
  %27 = bitcast i8* %5 to i64*
  br label %52

28:                                               ; preds = %16
  %29 = getelementptr inbounds %"struct.(anonymous namespace)::Layer", %"struct.(anonymous namespace)::Layer"* %23, i64 0, i32 1, i32 0, i32 0, i32 0
  %30 = load %class.SkPaint*, %class.SkPaint** %29, align 8
  store %class.SkPaint* null, %class.SkPaint** %29, align 8
  %31 = icmp eq %class.SkPaint* %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %28
  tail call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %30) #15
  %33 = bitcast %class.SkPaint* %30 to i8*
  tail call void @_ZdlPv(i8* %33) #16
  br label %34

34:                                               ; preds = %32, %28
  %35 = getelementptr inbounds %"struct.(anonymous namespace)::Layer", %"struct.(anonymous namespace)::Layer"* %23, i64 0, i32 0, i32 0
  %36 = load %class.SkBaseDevice*, %class.SkBaseDevice** %35, align 8
  %37 = icmp eq %class.SkBaseDevice* %36, null
  br i1 %37, label %48, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %36, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = atomicrmw add i32* %39, i32 -1 acq_rel
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %42, label %48

42:                                               ; preds = %38
  %43 = bitcast %class.SkBaseDevice* %36 to %class.SkRefCntBase*
  %44 = bitcast %class.SkBaseDevice* %36 to void (%class.SkRefCntBase*)***
  %45 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %44, align 8
  %46 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %45, i64 2
  %47 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %46, align 8
  tail call void %47(%class.SkRefCntBase* nonnull %43) #15
  br label %48

48:                                               ; preds = %42, %38, %34
  %49 = bitcast %"struct.(anonymous namespace)::Layer"* %23 to i8*
  tail call void @_ZdlPv(i8* %49) #16
  %50 = bitcast %"class.SkCanvas::MCRec"* %0 to i64**
  %51 = load i64*, i64** %50, align 8
  br label %52

52:                                               ; preds = %26, %48
  %53 = phi i64* [ %51, %48 ], [ %27, %26 ]
  %54 = load i64, i64* %53, align 8
  %55 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %0, i64 0, i32 1
  %56 = bitcast %class.SkBaseDevice** %55 to i64*
  store i64 %54, i64* %56, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8SkCanvas14saveLayerAlphaEPK6SkRectj(%class.SkCanvas*, %struct.SkRect*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.SkCanvas::SaveLayerRec", align 8
  %5 = alloca %"struct.SkCanvas::SaveLayerRec", align 8
  %6 = alloca %class.SkPaint, align 8
  %7 = icmp eq i32 %2, 255
  br i1 %7, label %8, label %14

8:                                                ; preds = %3
  %9 = bitcast %"struct.SkCanvas::SaveLayerRec"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #15
  %10 = getelementptr inbounds %"struct.SkCanvas::SaveLayerRec", %"struct.SkCanvas::SaveLayerRec"* %5, i64 0, i32 0
  store %struct.SkRect* %1, %struct.SkRect** %10, align 8
  %11 = getelementptr inbounds %"struct.SkCanvas::SaveLayerRec", %"struct.SkCanvas::SaveLayerRec"* %5, i64 0, i32 1
  %12 = bitcast %class.SkPaint** %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 20, i1 false)
  %13 = call i32 @_ZN8SkCanvas9saveLayerERKNS_12SaveLayerRecE(%class.SkCanvas* %0, %"struct.SkCanvas::SaveLayerRec"* nonnull dereferenceable(32) %5) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #15
  br label %24

14:                                               ; preds = %3
  %15 = bitcast %class.SkPaint* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %15) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %15, i8* align 8 bitcast (%class.SkPaint* @__const._ZL25clean_paint_for_drawImagePK7SkPaint.cleaned to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %6) #15
  %16 = uitofp i32 %2 to float
  %17 = fmul float %16, 0x3F70101020000000
  call void @_ZN7SkPaint9setAlphafEf(%class.SkPaint* nonnull %6, float %17) #15
  %18 = bitcast %"struct.SkCanvas::SaveLayerRec"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %18) #15
  %19 = getelementptr inbounds %"struct.SkCanvas::SaveLayerRec", %"struct.SkCanvas::SaveLayerRec"* %4, i64 0, i32 0
  store %struct.SkRect* %1, %struct.SkRect** %19, align 8
  %20 = getelementptr inbounds %"struct.SkCanvas::SaveLayerRec", %"struct.SkCanvas::SaveLayerRec"* %4, i64 0, i32 1
  store %class.SkPaint* %6, %class.SkPaint** %20, align 8
  %21 = getelementptr inbounds %"struct.SkCanvas::SaveLayerRec", %"struct.SkCanvas::SaveLayerRec"* %4, i64 0, i32 2
  store %class.SkImageFilter* null, %class.SkImageFilter** %21, align 8
  %22 = getelementptr inbounds %"struct.SkCanvas::SaveLayerRec", %"struct.SkCanvas::SaveLayerRec"* %4, i64 0, i32 3
  store i32 0, i32* %22, align 8
  %23 = call i32 @_ZN8SkCanvas9saveLayerERKNS_12SaveLayerRecE(%class.SkCanvas* %0, %"struct.SkCanvas::SaveLayerRec"* nonnull dereferenceable(32) %4) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18) #15
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %15) #15
  br label %24

24:                                               ; preds = %14, %8
  %25 = phi i32 [ %13, %8 ], [ %23, %14 ]
  ret i32 %25
}

declare zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect*, %struct.SkIRect* dereferenceable(16), %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas23drawClippedToSaveBehindERK7SkPaint(%class.SkCanvas*, %class.SkPaint* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.skia::tracing_internals::ScopedTracer", align 8
  %4 = load atomic i64, i64* @_ZZN8SkCanvas23drawClippedToSaveBehindERK7SkPaintE29trace_event_unique_atomic1681.0.0 monotonic, align 8
  %5 = inttoptr i64 %4 to i8*
  %6 = icmp eq i64 %4, 0
  br i1 %6, label %7, label %15

7:                                                ; preds = %2
  %8 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %9 = bitcast %class.SkEventTracer* %8 to i8* (%class.SkEventTracer*, i8*)***
  %10 = load i8* (%class.SkEventTracer*, i8*)**, i8* (%class.SkEventTracer*, i8*)*** %9, align 8
  %11 = getelementptr inbounds i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %10, i64 2
  %12 = load i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %11, align 8
  %13 = tail call i8* %12(%class.SkEventTracer* %8, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0)) #15
  %14 = ptrtoint i8* %13 to i64
  store atomic i64 %14, i64* @_ZZN8SkCanvas23drawClippedToSaveBehindERK7SkPaintE29trace_event_unique_atomic1681.0.0 monotonic, align 8
  br label %15

15:                                               ; preds = %2, %7
  %16 = phi i8* [ %5, %2 ], [ %13, %7 ]
  %17 = bitcast %"class.skia::tracing_internals::ScopedTracer"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #15
  %18 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %3, i64 0, i32 0
  %19 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %3, i64 0, i32 1, i32 0
  %20 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %3, i64 0, i32 1, i32 1
  %21 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %3, i64 0, i32 1, i32 2
  %22 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %3, i64 0, i32 1
  %23 = bitcast %"struct.skia::tracing_internals::ScopedTracer::Data"* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 24, i1 false)
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* null, %"struct.skia::tracing_internals::ScopedTracer::Data"** %18, align 8
  %24 = load i8, i8* %16, align 1
  %25 = and i8 %24, 5
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %36, label %27

27:                                               ; preds = %15
  %28 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %29 = bitcast %class.SkEventTracer* %28 to i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)***
  %30 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)**, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*** %29, align 8
  %31 = getelementptr inbounds i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %30, i64 4
  %32 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %31, align 8
  %33 = tail call i64 %32(%class.SkEventTracer* %28, i8 signext 88, i8* %16, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN8SkCanvas23drawClippedToSaveBehindERK7SkPaint, i64 0, i64 0), i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #15
  %34 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %3, i64 0, i32 1
  %35 = getelementptr inbounds %"struct.skia::tracing_internals::ScopedTracer::Data", %"struct.skia::tracing_internals::ScopedTracer::Data"* %34, i64 0, i32 0
  store i8* %16, i8** %35, align 8
  store i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN8SkCanvas23drawClippedToSaveBehindERK7SkPaint, i64 0, i64 0), i8** %20, align 8
  store i64 %33, i64* %21, align 8
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* %34, %"struct.skia::tracing_internals::ScopedTracer::Data"** %18, align 8
  br label %36

36:                                               ; preds = %15, %27
  %37 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*, %class.SkPaint*)***
  %38 = load void (%class.SkCanvas*, %class.SkPaint*)**, void (%class.SkCanvas*, %class.SkPaint*)*** %37, align 8
  %39 = getelementptr inbounds void (%class.SkCanvas*, %class.SkPaint*)*, void (%class.SkCanvas*, %class.SkPaint*)** %38, i64 23
  %40 = load void (%class.SkCanvas*, %class.SkPaint*)*, void (%class.SkCanvas*, %class.SkPaint*)** %39, align 8
  call void %40(%class.SkCanvas* %0, %class.SkPaint* dereferenceable(72) %1) #15
  %41 = load %"struct.skia::tracing_internals::ScopedTracer::Data"*, %"struct.skia::tracing_internals::ScopedTracer::Data"** %18, align 8
  %42 = icmp eq %"struct.skia::tracing_internals::ScopedTracer::Data"* %41, null
  br i1 %42, label %56, label %43

43:                                               ; preds = %36
  %44 = load i8*, i8** %19, align 8
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %56, label %47

47:                                               ; preds = %43
  %48 = call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %49 = load i8*, i8** %19, align 8
  %50 = load i8*, i8** %20, align 8
  %51 = load i64, i64* %21, align 8
  %52 = bitcast %class.SkEventTracer* %48 to void (%class.SkEventTracer*, i8*, i8*, i64)***
  %53 = load void (%class.SkEventTracer*, i8*, i8*, i64)**, void (%class.SkEventTracer*, i8*, i8*, i64)*** %52, align 8
  %54 = getelementptr inbounds void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %53, i64 5
  %55 = load void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %54, align 8
  call void %55(%class.SkEventTracer* %48, i8* %49, i8* %50, i64 %51) #15
  br label %56

56:                                               ; preds = %36, %43, %47
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #15
  ret void
}

declare void @_ZN13SkMarkerStack7restoreEPv(%class.SkMarkerStack*, i8*) local_unnamed_addr #4

declare void @_ZN7SkDeque8pop_backEv(%class.SkDeque*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas18internalDrawDeviceEP12SkBaseDeviceRK17SkSamplingOptionsPK7SkPaint(%class.SkCanvas* nocapture readonly, %class.SkBaseDevice*, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint*) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.SkPaint, align 8
  %6 = alloca %class.sk_sp.58, align 8
  %7 = alloca %class.sk_sp.58, align 8
  %8 = alloca %class.sk_sp.74, align 8
  %9 = alloca %class.SkMatrix, align 4
  %10 = alloca %class.SkMatrix, align 4
  %11 = alloca %"class.skif::Mapping", align 4
  %12 = alloca %class.SkMatrix, align 16
  %13 = bitcast %class.SkBaseDevice* %1 to i1 (%class.SkBaseDevice*)***
  %14 = load i1 (%class.SkBaseDevice*)**, i1 (%class.SkBaseDevice*)*** %13, align 8
  %15 = getelementptr inbounds i1 (%class.SkBaseDevice*)*, i1 (%class.SkBaseDevice*)** %14, i64 57
  %16 = load i1 (%class.SkBaseDevice*)*, i1 (%class.SkBaseDevice*)** %15, align 8
  %17 = tail call zeroext i1 %16(%class.SkBaseDevice* %1) #15
  br i1 %17, label %113, label %18

18:                                               ; preds = %4
  %19 = bitcast %class.SkPaint* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %19) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %19, i8* align 8 bitcast (%class.SkPaint* @__const._ZL25clean_paint_for_drawImagePK7SkPaint.cleaned to i8*), i64 72, i1 false)
  %20 = icmp eq %class.SkPaint* %3, null
  br i1 %20, label %22, label %21

21:                                               ; preds = %18
  call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* nonnull %5, %class.SkPaint* nonnull dereferenceable(72) %3) #15
  br label %23

22:                                               ; preds = %18
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %5) #15
  br label %23

23:                                               ; preds = %22, %21
  %24 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %5, i64 0, i32 4, i32 0
  %25 = load %class.SkImageFilter*, %class.SkImageFilter** %24, align 8
  %26 = icmp eq %class.SkImageFilter* %25, null
  br i1 %26, label %46, label %27

27:                                               ; preds = %23
  %28 = call fastcc zeroext i1 @_ZL21image_to_color_filterP7SkPaint(%class.SkPaint* nonnull %5)
  br i1 %28, label %46, label %29

29:                                               ; preds = %27
  %30 = bitcast %class.sk_sp.58* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #15
  call void @_ZNK7SkPaint14refImageFilterEv(%class.sk_sp.58* nonnull sret %6, %class.SkPaint* nonnull %5) #15
  %31 = bitcast %class.sk_sp.58* %6 to i64*
  %32 = load i64, i64* %31, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #15
  %33 = getelementptr inbounds %class.sk_sp.58, %class.sk_sp.58* %7, i64 0, i32 0
  store %class.SkImageFilter* null, %class.SkImageFilter** %33, align 8
  call void @_ZN7SkPaint14setImageFilterE5sk_spI13SkImageFilterE(%class.SkPaint* nonnull %5, %class.sk_sp.58* nonnull %7) #15
  %34 = load %class.SkImageFilter*, %class.SkImageFilter** %33, align 8
  %35 = icmp eq %class.SkImageFilter* %34, null
  br i1 %35, label %46, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %34, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = atomicrmw add i32* %37, i32 -1 acq_rel
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %40, label %46

40:                                               ; preds = %36
  %41 = bitcast %class.SkImageFilter* %34 to %class.SkRefCntBase*
  %42 = bitcast %class.SkImageFilter* %34 to void (%class.SkRefCntBase*)***
  %43 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %42, align 8
  %44 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %43, i64 2
  %45 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %44, align 8
  call void %45(%class.SkRefCntBase* nonnull %41) #15
  br label %46

46:                                               ; preds = %40, %36, %29, %23, %27
  %47 = phi i64 [ 0, %23 ], [ 0, %27 ], [ %32, %29 ], [ %32, %36 ], [ %32, %40 ]
  %48 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %49 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %48, align 8
  %50 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %49, i64 0, i32 1
  %51 = load %class.SkBaseDevice*, %class.SkBaseDevice** %50, align 8
  %52 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 9
  %53 = load %class.SkSurface_Base*, %class.SkSurface_Base** %52, align 8
  %54 = icmp eq %class.SkSurface_Base* %53, null
  br i1 %54, label %56, label %55

55:                                               ; preds = %46
  call void @_ZN14SkSurface_Base11aboutToDrawEN9SkSurface17ContentChangeModeE(%class.SkSurface_Base* nonnull %53, i32 1) #15
  br label %56

56:                                               ; preds = %46, %55
  %57 = inttoptr i64 %47 to %class.SkImageFilter*
  %58 = icmp eq i64 %47, 0
  br i1 %58, label %97, label %59

59:                                               ; preds = %56
  %60 = bitcast %class.sk_sp.74* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #15
  %61 = getelementptr inbounds %class.sk_sp.74, %class.sk_sp.74* %8, i64 0, i32 0
  store %class.SkSpecialImage* inttoptr (i64 -6148914691236517206 to %class.SkSpecialImage*), %class.SkSpecialImage** %61, align 8
  call void @_ZN12SkBaseDevice11snapSpecialEv(%class.sk_sp.74* nonnull sret %8, %class.SkBaseDevice* %1) #15
  %62 = load %class.SkSpecialImage*, %class.SkSpecialImage** %61, align 8
  %63 = icmp eq %class.SkSpecialImage* %62, null
  br i1 %63, label %102, label %64

64:                                               ; preds = %59
  %65 = bitcast %class.SkMatrix* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %65) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %65, i8 -1, i64 36, i1 false)
  %66 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %9, i64 0, i32 1
  store i32 -1431655766, i32* %66, align 4
  call void @_ZNK12SkBaseDevice20getRelativeTransformERKS_(%class.SkMatrix* nonnull sret %9, %class.SkBaseDevice* %1, %class.SkBaseDevice* dereferenceable(296) %51) #15
  %67 = bitcast %class.SkMatrix* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %67) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %67, i8 -1, i64 36, i1 false)
  %68 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %10, i64 0, i32 1
  store i32 -1431655766, i32* %68, align 4
  call void @_ZNK12SkBaseDevice20getRelativeTransformERKS_(%class.SkMatrix* nonnull sret %10, %class.SkBaseDevice* %51, %class.SkBaseDevice* dereferenceable(296) %1) #15
  %69 = bitcast %"class.skif::Mapping"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %69) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %69, i8* align 4 bitcast (%"class.skif::Mapping"* @__const._ZN8SkCanvas12onDrawImage2EPK7SkImageffRK17SkSamplingOptionsPK7SkPaint.mapping to i8*), i64 80, i1 false)
  %70 = bitcast %class.SkMatrix* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %70) #15
  %71 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %51, i64 0, i32 1, i32 2
  %72 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %12, i64 0, i32 1
  %73 = bitcast %class.SkMatrix* %12 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %73, align 16, !alias.scope !107
  %74 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %12, i64 0, i32 0, i64 4
  %75 = bitcast float* %74 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %75, align 16, !alias.scope !107
  %76 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %12, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %76, align 16, !alias.scope !107
  store i32 16, i32* %72, align 4, !alias.scope !107
  %77 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9setConcatERKS_S1_(%class.SkMatrix* nonnull %12, %class.SkMatrix* nonnull dereferenceable(40) %10, %class.SkMatrix* dereferenceable(40) %71) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %69, i8* nonnull align 4 %65, i64 40, i1 false) #15
  %78 = getelementptr inbounds %"class.skif::Mapping", %"class.skif::Mapping"* %11, i64 0, i32 1
  %79 = bitcast %class.SkMatrix* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %79, i8* nonnull align 16 %70, i64 40, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %70) #15
  %80 = load %class.SkSpecialImage*, %class.SkSpecialImage** %61, align 8
  %81 = bitcast %class.SkBaseDevice* %51 to void (%class.SkBaseDevice*, %"class.skif::Mapping"*, %class.SkSpecialImage*, %class.SkImageFilter*, %struct.SkSamplingOptions*, %class.SkPaint*)***
  %82 = load void (%class.SkBaseDevice*, %"class.skif::Mapping"*, %class.SkSpecialImage*, %class.SkImageFilter*, %struct.SkSamplingOptions*, %class.SkPaint*)**, void (%class.SkBaseDevice*, %"class.skif::Mapping"*, %class.SkSpecialImage*, %class.SkImageFilter*, %struct.SkSamplingOptions*, %class.SkPaint*)*** %81, align 8
  %83 = getelementptr inbounds void (%class.SkBaseDevice*, %"class.skif::Mapping"*, %class.SkSpecialImage*, %class.SkImageFilter*, %struct.SkSamplingOptions*, %class.SkPaint*)*, void (%class.SkBaseDevice*, %"class.skif::Mapping"*, %class.SkSpecialImage*, %class.SkImageFilter*, %struct.SkSamplingOptions*, %class.SkPaint*)** %82, i64 46
  %84 = load void (%class.SkBaseDevice*, %"class.skif::Mapping"*, %class.SkSpecialImage*, %class.SkImageFilter*, %struct.SkSamplingOptions*, %class.SkPaint*)*, void (%class.SkBaseDevice*, %"class.skif::Mapping"*, %class.SkSpecialImage*, %class.SkImageFilter*, %struct.SkSamplingOptions*, %class.SkPaint*)** %83, align 8
  call void %84(%class.SkBaseDevice* %51, %"class.skif::Mapping"* nonnull dereferenceable(80) %11, %class.SkSpecialImage* %80, %class.SkImageFilter* nonnull %57, %struct.SkSamplingOptions* dereferenceable(20) %2, %class.SkPaint* nonnull dereferenceable(72) %5) #15
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %69) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %67) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %65) #15
  %85 = load %class.SkSpecialImage*, %class.SkSpecialImage** %61, align 8
  %86 = icmp eq %class.SkSpecialImage* %85, null
  br i1 %86, label %102, label %87

87:                                               ; preds = %64
  %88 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %85, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = atomicrmw add i32* %88, i32 -1 acq_rel
  %90 = icmp eq i32 %89, 1
  br i1 %90, label %91, label %102

91:                                               ; preds = %87
  %92 = bitcast %class.SkSpecialImage* %85 to %class.SkRefCntBase*
  %93 = bitcast %class.SkSpecialImage* %85 to void (%class.SkRefCntBase*)***
  %94 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %93, align 8
  %95 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %94, i64 2
  %96 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %95, align 8
  call void %96(%class.SkRefCntBase* nonnull %92) #15
  br label %102

97:                                               ; preds = %56
  %98 = bitcast %class.SkBaseDevice* %51 to void (%class.SkBaseDevice*, %class.SkBaseDevice*, %struct.SkSamplingOptions*, %class.SkPaint*)***
  %99 = load void (%class.SkBaseDevice*, %class.SkBaseDevice*, %struct.SkSamplingOptions*, %class.SkPaint*)**, void (%class.SkBaseDevice*, %class.SkBaseDevice*, %struct.SkSamplingOptions*, %class.SkPaint*)*** %98, align 8
  %100 = getelementptr inbounds void (%class.SkBaseDevice*, %class.SkBaseDevice*, %struct.SkSamplingOptions*, %class.SkPaint*)*, void (%class.SkBaseDevice*, %class.SkBaseDevice*, %struct.SkSamplingOptions*, %class.SkPaint*)** %99, i64 44
  %101 = load void (%class.SkBaseDevice*, %class.SkBaseDevice*, %struct.SkSamplingOptions*, %class.SkPaint*)*, void (%class.SkBaseDevice*, %class.SkBaseDevice*, %struct.SkSamplingOptions*, %class.SkPaint*)** %100, align 8
  call void %101(%class.SkBaseDevice* %51, %class.SkBaseDevice* %1, %struct.SkSamplingOptions* dereferenceable(20) %2, %class.SkPaint* nonnull dereferenceable(72) %5) #15
  br label %112

102:                                              ; preds = %59, %91, %87, %64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #15
  %103 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %57, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = atomicrmw add i32* %103, i32 -1 acq_rel
  %105 = icmp eq i32 %104, 1
  br i1 %105, label %106, label %112

106:                                              ; preds = %102
  %107 = inttoptr i64 %47 to %class.SkRefCntBase*
  %108 = inttoptr i64 %47 to void (%class.SkRefCntBase*)***
  %109 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %108, align 8
  %110 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %109, i64 2
  %111 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %110, align 8
  call void %111(%class.SkRefCntBase* nonnull %107) #15
  br label %112

112:                                              ; preds = %97, %102, %106
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %19) #15
  br label %113

113:                                              ; preds = %4, %112
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZNK8SkCanvas12validateClipEv(%class.SkCanvas* nocapture) local_unnamed_addr #8 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas11makeSurfaceERK11SkImageInfoPK14SkSurfaceProps(%class.sk_sp.247* noalias sret, %class.SkCanvas*, %struct.SkImageInfo* dereferenceable(24), %class.SkSurfaceProps*) local_unnamed_addr #0 align 2 {
  %5 = icmp eq %class.SkSurfaceProps* %3, null
  %6 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %1, i64 0, i32 6
  %7 = select i1 %5, %class.SkSurfaceProps* %6, %class.SkSurfaceProps* %3
  %8 = bitcast %class.SkCanvas* %1 to void (%class.sk_sp.247*, %class.SkCanvas*, %struct.SkImageInfo*, %class.SkSurfaceProps*)***
  %9 = load void (%class.sk_sp.247*, %class.SkCanvas*, %struct.SkImageInfo*, %class.SkSurfaceProps*)**, void (%class.sk_sp.247*, %class.SkCanvas*, %struct.SkImageInfo*, %class.SkSurfaceProps*)*** %8, align 8
  %10 = getelementptr inbounds void (%class.sk_sp.247*, %class.SkCanvas*, %struct.SkImageInfo*, %class.SkSurfaceProps*)*, void (%class.sk_sp.247*, %class.SkCanvas*, %struct.SkImageInfo*, %class.SkSurfaceProps*)** %9, i64 6
  %11 = load void (%class.sk_sp.247*, %class.SkCanvas*, %struct.SkImageInfo*, %class.SkSurfaceProps*)*, void (%class.sk_sp.247*, %class.SkCanvas*, %struct.SkImageInfo*, %class.SkSurfaceProps*)** %10, align 8
  tail call void %11(%class.sk_sp.247* sret %0, %class.SkCanvas* %1, %struct.SkImageInfo* dereferenceable(24) %2, %class.SkSurfaceProps* dereferenceable(8) %7) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas12onNewSurfaceERK11SkImageInfoRK14SkSurfaceProps(%class.sk_sp.247* noalias sret, %class.SkCanvas* nocapture readonly, %struct.SkImageInfo* dereferenceable(24), %class.SkSurfaceProps* dereferenceable(8)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %1, i64 0, i32 5, i32 0
  %6 = load %class.SkBaseDevice*, %class.SkBaseDevice** %5, align 8
  %7 = bitcast %class.SkBaseDevice* %6 to void (%class.sk_sp.247*, %class.SkBaseDevice*, %struct.SkImageInfo*, %class.SkSurfaceProps*)***
  %8 = load void (%class.sk_sp.247*, %class.SkBaseDevice*, %struct.SkImageInfo*, %class.SkSurfaceProps*)**, void (%class.sk_sp.247*, %class.SkBaseDevice*, %struct.SkImageInfo*, %class.SkSurfaceProps*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.sk_sp.247*, %class.SkBaseDevice*, %struct.SkImageInfo*, %class.SkSurfaceProps*)*, void (%class.sk_sp.247*, %class.SkBaseDevice*, %struct.SkImageInfo*, %class.SkSurfaceProps*)** %8, i64 51
  %10 = load void (%class.sk_sp.247*, %class.SkBaseDevice*, %struct.SkImageInfo*, %class.SkSurfaceProps*)*, void (%class.sk_sp.247*, %class.SkBaseDevice*, %struct.SkImageInfo*, %class.SkSurfaceProps*)** %9, align 8
  tail call void %10(%class.sk_sp.247* sret %0, %class.SkBaseDevice* %6, %struct.SkImageInfo* dereferenceable(24) %2, %class.SkSurfaceProps* dereferenceable(8) %3) #15
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK8SkCanvas11onImageInfoEv(%struct.SkImageInfo* noalias nocapture sret, %class.SkCanvas* nocapture readonly) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %1, i64 0, i32 5, i32 0
  %4 = load %class.SkBaseDevice*, %class.SkBaseDevice** %3, align 8
  %5 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %0, i64 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %4, i64 0, i32 3, i32 0, i32 0, i32 0
  %7 = load %class.SkColorSpace*, %class.SkColorSpace** %6, align 8
  %8 = icmp eq %class.SkColorSpace* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw add i32* %10, i32 1 monotonic
  br label %12

12:                                               ; preds = %2, %9
  store %class.SkColorSpace* %7, %class.SkColorSpace** %5, align 8
  %13 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %0, i64 0, i32 0, i32 1
  %14 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %4, i64 0, i32 3, i32 0, i32 1
  %15 = bitcast i32* %14 to <2 x i64>*
  %16 = load <2 x i64>, <2 x i64>* %15, align 8
  %17 = bitcast i32* %13 to <2 x i64>*
  store <2 x i64> %16, <2 x i64>* %17, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8SkCanvas8getPropsEP14SkSurfaceProps(%class.SkCanvas*, %class.SkSurfaceProps*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %class.SkCanvas* %0 to i1 (%class.SkCanvas*, %class.SkSurfaceProps*)***
  %4 = load i1 (%class.SkCanvas*, %class.SkSurfaceProps*)**, i1 (%class.SkCanvas*, %class.SkSurfaceProps*)*** %3, align 8
  %5 = getelementptr inbounds i1 (%class.SkCanvas*, %class.SkSurfaceProps*)*, i1 (%class.SkCanvas*, %class.SkSurfaceProps*)** %4, i64 10
  %6 = load i1 (%class.SkCanvas*, %class.SkSurfaceProps*)*, i1 (%class.SkCanvas*, %class.SkSurfaceProps*)** %5, align 8
  %7 = tail call zeroext i1 %6(%class.SkCanvas* %0, %class.SkSurfaceProps* %1) #15
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8SkCanvas10onGetPropsEP14SkSurfaceProps(%class.SkCanvas*, %class.SkSurfaceProps*) unnamed_addr #0 align 2 {
  %3 = icmp eq %class.SkSurfaceProps* %1, null
  br i1 %3, label %7, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 6
  %6 = tail call dereferenceable(8) %class.SkSurfaceProps* @_ZN14SkSurfacePropsaSERKS_(%class.SkSurfaceProps* nonnull %1, %class.SkSurfaceProps* dereferenceable(8) %5) #15
  br label %7

7:                                                ; preds = %2, %4
  ret i1 true
}

declare dereferenceable(8) %class.SkSurfaceProps* @_ZN14SkSurfacePropsaSERKS_(%class.SkSurfaceProps*, %class.SkSurfaceProps* dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8SkCanvas10peekPixelsEP8SkPixmap(%class.SkCanvas*, %class.SkPixmap*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %class.SkCanvas* %0 to i1 (%class.SkCanvas*, %class.SkPixmap*)***
  %4 = load i1 (%class.SkCanvas*, %class.SkPixmap*)**, i1 (%class.SkCanvas*, %class.SkPixmap*)*** %3, align 8
  %5 = getelementptr inbounds i1 (%class.SkCanvas*, %class.SkPixmap*)*, i1 (%class.SkCanvas*, %class.SkPixmap*)** %4, i64 7
  %6 = load i1 (%class.SkCanvas*, %class.SkPixmap*)*, i1 (%class.SkCanvas*, %class.SkPixmap*)** %5, align 8
  %7 = tail call zeroext i1 %6(%class.SkCanvas* %0, %class.SkPixmap* %1) #15
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8SkCanvas12onPeekPixelsEP8SkPixmap(%class.SkCanvas* nocapture readonly, %class.SkPixmap*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 5, i32 0
  %4 = load %class.SkBaseDevice*, %class.SkBaseDevice** %3, align 8
  %5 = tail call zeroext i1 @_ZN12SkBaseDevice10peekPixelsEP8SkPixmap(%class.SkBaseDevice* %4, %class.SkPixmap* %1) #15
  ret i1 %5
}

declare zeroext i1 @_ZN12SkBaseDevice10peekPixelsEP8SkPixmap(%class.SkBaseDevice*, %class.SkPixmap*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN8SkCanvas20accessTopLayerPixelsEP11SkImageInfoPmP8SkIPoint(%class.SkCanvas*, %struct.SkImageInfo*, i64*, %struct.SkIPoint*) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.SkPixmap, align 8
  %6 = bitcast %class.SkPixmap* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 40, i1 false) #15
  %7 = bitcast %class.SkCanvas* %0 to i1 (%class.SkCanvas*, %class.SkPixmap*)***
  %8 = load i1 (%class.SkCanvas*, %class.SkPixmap*)**, i1 (%class.SkCanvas*, %class.SkPixmap*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%class.SkCanvas*, %class.SkPixmap*)*, i1 (%class.SkCanvas*, %class.SkPixmap*)** %8, i64 8
  %10 = load i1 (%class.SkCanvas*, %class.SkPixmap*)*, i1 (%class.SkCanvas*, %class.SkPixmap*)** %9, align 8
  %11 = call zeroext i1 %10(%class.SkCanvas* %0, %class.SkPixmap* nonnull %5) #15
  br i1 %11, label %12, label %62

12:                                               ; preds = %4
  %13 = icmp eq %struct.SkImageInfo* %1, null
  br i1 %13, label %40, label %14

14:                                               ; preds = %12
  %15 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %5, i64 0, i32 2
  %16 = icmp eq %struct.SkImageInfo* %15, %1
  br i1 %16, label %34, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %15, i64 0, i32 0, i32 0, i32 0
  %19 = load %class.SkColorSpace*, %class.SkColorSpace** %18, align 8
  %20 = icmp eq %class.SkColorSpace* %19, null
  br i1 %20, label %24, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i32* %22, i32 1 monotonic
  br label %24

24:                                               ; preds = %21, %17
  %25 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 0, i32 0
  %26 = load %class.SkColorSpace*, %class.SkColorSpace** %25, align 8
  store %class.SkColorSpace* %19, %class.SkColorSpace** %25, align 8
  %27 = icmp eq %class.SkColorSpace* %26, null
  br i1 %27, label %34, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = atomicrmw add i32* %29, i32 -1 acq_rel
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %32, label %34

32:                                               ; preds = %28
  %33 = bitcast %class.SkColorSpace* %26 to i8*
  call void @_ZdlPv(i8* %33) #16
  br label %34

34:                                               ; preds = %14, %24, %28, %32
  %35 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 1
  %36 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %5, i64 0, i32 2, i32 0, i32 1
  %37 = bitcast i32* %36 to <2 x i64>*
  %38 = load <2 x i64>, <2 x i64>* %37, align 8
  %39 = bitcast i32* %35 to <2 x i64>*
  store <2 x i64> %38, <2 x i64>* %39, align 8
  br label %40

40:                                               ; preds = %12, %34
  %41 = icmp eq i64* %2, null
  br i1 %41, label %45, label %42

42:                                               ; preds = %40
  %43 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %5, i64 0, i32 1
  %44 = load i64, i64* %43, align 8
  store i64 %44, i64* %2, align 8
  br label %45

45:                                               ; preds = %40, %42
  %46 = icmp eq %struct.SkIPoint* %3, null
  br i1 %46, label %59, label %47

47:                                               ; preds = %45
  %48 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %49 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %48, align 8
  %50 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %49, i64 0, i32 1
  %51 = load %class.SkBaseDevice*, %class.SkBaseDevice** %50, align 8
  %52 = call zeroext i1 @_ZNK12SkBaseDevice22isPixelAlignedToGlobalEv(%class.SkBaseDevice* %51) #15
  br i1 %52, label %53, label %62

53:                                               ; preds = %47
  %54 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %48, align 8
  %55 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %54, i64 0, i32 1
  %56 = load %class.SkBaseDevice*, %class.SkBaseDevice** %55, align 8
  %57 = call i64 @_ZNK12SkBaseDevice9getOriginEv(%class.SkBaseDevice* %56) #15
  %58 = bitcast %struct.SkIPoint* %3 to i64*
  store i64 %57, i64* %58, align 4
  br label %59

59:                                               ; preds = %45, %53
  %60 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %5, i64 0, i32 0
  %61 = load i8*, i8** %60, align 8
  br label %62

62:                                               ; preds = %47, %4, %59
  %63 = phi i8* [ %61, %59 ], [ null, %4 ], [ null, %47 ]
  %64 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  %65 = load %class.SkColorSpace*, %class.SkColorSpace** %64, align 8
  %66 = icmp eq %class.SkColorSpace* %65, null
  br i1 %66, label %73, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %65, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = atomicrmw add i32* %68, i32 -1 acq_rel
  %70 = icmp eq i32 %69, 1
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = bitcast %class.SkColorSpace* %65 to i8*
  call void @_ZdlPv(i8* %72) #16
  br label %73

73:                                               ; preds = %62, %67, %71
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #15
  ret i8* %63
}

declare zeroext i1 @_ZNK12SkBaseDevice22isPixelAlignedToGlobalEv(%class.SkBaseDevice*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8SkCanvas22onAccessTopLayerPixelsEP8SkPixmap(%class.SkCanvas* nocapture readonly, %class.SkPixmap*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %4 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %3, align 8
  %5 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %4, i64 0, i32 1
  %6 = load %class.SkBaseDevice*, %class.SkBaseDevice** %5, align 8
  %7 = tail call zeroext i1 @_ZN12SkBaseDevice12accessPixelsEP8SkPixmap(%class.SkBaseDevice* %6, %class.SkPixmap* %1) #15
  ret i1 %7
}

declare zeroext i1 @_ZN12SkBaseDevice12accessPixelsEP8SkPixmap(%class.SkBaseDevice*, %class.SkPixmap*) local_unnamed_addr #4

declare void @_ZN7SkPaintC1ERKS_(%class.SkPaint*, %class.SkPaint* dereferenceable(72)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZL21image_to_color_filterP7SkPaint(%class.SkPaint*) unnamed_addr #0 {
  %2 = alloca %class.SkColorFilter*, align 8
  %3 = alloca %class.sk_sp.57, align 8
  %4 = alloca %class.sk_sp.57, align 8
  %5 = alloca %class.sk_sp.57, align 8
  %6 = alloca %class.sk_sp.58, align 8
  %7 = bitcast %class.SkColorFilter** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #15
  store %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*), %class.SkColorFilter** %2, align 8
  %8 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 4, i32 0
  %9 = load %class.SkImageFilter*, %class.SkImageFilter** %8, align 8
  %10 = call zeroext i1 @_ZNK13SkImageFilter14asAColorFilterEPP13SkColorFilter(%class.SkImageFilter* %9, %class.SkColorFilter** nonnull %2) #15
  br i1 %10, label %11, label %93

11:                                               ; preds = %1
  %12 = load %class.SkColorFilter*, %class.SkColorFilter** %2, align 8
  %13 = ptrtoint %class.SkColorFilter* %12 to i64
  %14 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 3, i32 0
  %15 = load %class.SkColorFilter*, %class.SkColorFilter** %14, align 8
  %16 = icmp eq %class.SkColorFilter* %15, null
  br i1 %16, label %63, label %17

17:                                               ; preds = %11
  %18 = bitcast %class.sk_sp.57* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #15
  %19 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %15, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw add i32* %19, i32 1 monotonic, !noalias !110
  %21 = getelementptr inbounds %class.sk_sp.57, %class.sk_sp.57* %4, i64 0, i32 0
  store %class.SkColorFilter* %15, %class.SkColorFilter** %21, align 8, !alias.scope !110
  call void @_ZNK13SkColorFilter12makeComposedE5sk_spIS_E(%class.sk_sp.57* nonnull sret %3, %class.SkColorFilter* %12, %class.sk_sp.57* nonnull %4) #15
  %22 = getelementptr inbounds %class.sk_sp.57, %class.sk_sp.57* %3, i64 0, i32 0
  %23 = bitcast %class.sk_sp.57* %3 to i64*
  %24 = load i64, i64* %23, align 8
  store %class.SkColorFilter* null, %class.SkColorFilter** %22, align 8
  %25 = icmp eq %class.SkColorFilter* %12, null
  br i1 %25, label %49, label %26

26:                                               ; preds = %17
  %27 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %12, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = atomicrmw add i32* %27, i32 -1 acq_rel
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %30, label %36

30:                                               ; preds = %26
  %31 = bitcast %class.SkColorFilter* %12 to %class.SkRefCntBase*
  %32 = bitcast %class.SkColorFilter* %12 to void (%class.SkRefCntBase*)***
  %33 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %32, align 8
  %34 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %33, i64 2
  %35 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %34, align 8
  call void %35(%class.SkRefCntBase* nonnull %31) #15
  br label %36

36:                                               ; preds = %26, %30
  %37 = load %class.SkColorFilter*, %class.SkColorFilter** %22, align 8
  %38 = icmp eq %class.SkColorFilter* %37, null
  br i1 %38, label %49, label %39

39:                                               ; preds = %36
  %40 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %37, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw add i32* %40, i32 -1 acq_rel
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %43, label %49

43:                                               ; preds = %39
  %44 = bitcast %class.SkColorFilter* %37 to %class.SkRefCntBase*
  %45 = bitcast %class.SkColorFilter* %37 to void (%class.SkRefCntBase*)***
  %46 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %45, align 8
  %47 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %46, i64 2
  %48 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %47, align 8
  call void %48(%class.SkRefCntBase* nonnull %44) #15
  br label %49

49:                                               ; preds = %17, %36, %39, %43
  %50 = load %class.SkColorFilter*, %class.SkColorFilter** %21, align 8
  %51 = icmp eq %class.SkColorFilter* %50, null
  br i1 %51, label %62, label %52

52:                                               ; preds = %49
  %53 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %50, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = atomicrmw add i32* %53, i32 -1 acq_rel
  %55 = icmp eq i32 %54, 1
  br i1 %55, label %56, label %62

56:                                               ; preds = %52
  %57 = bitcast %class.SkColorFilter* %50 to %class.SkRefCntBase*
  %58 = bitcast %class.SkColorFilter* %50 to void (%class.SkRefCntBase*)***
  %59 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %58, align 8
  %60 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %59, i64 2
  %61 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %60, align 8
  call void %61(%class.SkRefCntBase* nonnull %57) #15
  br label %62

62:                                               ; preds = %49, %52, %56
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #15
  br label %63

63:                                               ; preds = %11, %62
  %64 = phi i64 [ %13, %11 ], [ %24, %62 ]
  %65 = bitcast %class.sk_sp.57* %5 to i64*
  store i64 %64, i64* %65, align 8
  call void @_ZN7SkPaint14setColorFilterE5sk_spI13SkColorFilterE(%class.SkPaint* %0, %class.sk_sp.57* nonnull %5) #15
  %66 = getelementptr inbounds %class.sk_sp.57, %class.sk_sp.57* %5, i64 0, i32 0
  %67 = load %class.SkColorFilter*, %class.SkColorFilter** %66, align 8
  %68 = icmp eq %class.SkColorFilter* %67, null
  br i1 %68, label %79, label %69

69:                                               ; preds = %63
  %70 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %67, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = atomicrmw add i32* %70, i32 -1 acq_rel
  %72 = icmp eq i32 %71, 1
  br i1 %72, label %73, label %79

73:                                               ; preds = %69
  %74 = bitcast %class.SkColorFilter* %67 to %class.SkRefCntBase*
  %75 = bitcast %class.SkColorFilter* %67 to void (%class.SkRefCntBase*)***
  %76 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %75, align 8
  %77 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %76, i64 2
  %78 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %77, align 8
  call void %78(%class.SkRefCntBase* nonnull %74) #15
  br label %79

79:                                               ; preds = %63, %69, %73
  %80 = getelementptr inbounds %class.sk_sp.58, %class.sk_sp.58* %6, i64 0, i32 0
  store %class.SkImageFilter* null, %class.SkImageFilter** %80, align 8
  call void @_ZN7SkPaint14setImageFilterE5sk_spI13SkImageFilterE(%class.SkPaint* %0, %class.sk_sp.58* nonnull %6) #15
  %81 = load %class.SkImageFilter*, %class.SkImageFilter** %80, align 8
  %82 = icmp eq %class.SkImageFilter* %81, null
  br i1 %82, label %93, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %81, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = atomicrmw add i32* %84, i32 -1 acq_rel
  %86 = icmp eq i32 %85, 1
  br i1 %86, label %87, label %93

87:                                               ; preds = %83
  %88 = bitcast %class.SkImageFilter* %81 to %class.SkRefCntBase*
  %89 = bitcast %class.SkImageFilter* %81 to void (%class.SkRefCntBase*)***
  %90 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %89, align 8
  %91 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %90, i64 2
  %92 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %91, align 8
  call void %92(%class.SkRefCntBase* nonnull %88) #15
  br label %93

93:                                               ; preds = %79, %83, %87, %1
  %94 = phi i1 [ false, %1 ], [ true, %87 ], [ true, %83 ], [ true, %79 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #15
  ret i1 %94
}

declare void @_ZNK7SkPaint14refImageFilterEv(%class.sk_sp.58* sret, %class.SkPaint*) local_unnamed_addr #4

declare void @_ZN12SkBaseDevice11snapSpecialEv(%class.sk_sp.74* sret, %class.SkBaseDevice*) local_unnamed_addr #4

declare void @_ZNK12SkBaseDevice20getRelativeTransformERKS_(%class.SkMatrix* sret, %class.SkBaseDevice*, %class.SkBaseDevice* dereferenceable(296)) local_unnamed_addr #4

declare dereferenceable(64) %class.SkM44* @_ZN5SkM4412preTranslateEfff(%class.SkM44*, float, float, float) local_unnamed_addr #4

declare void @_ZN12SkBaseDevice12setGlobalCTMERK5SkM44(%class.SkBaseDevice*, %class.SkM44* dereferenceable(64)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas5scaleEff(%class.SkCanvas*, float, float) local_unnamed_addr #0 align 2 {
  %4 = fcmp une float %1, 1.000000e+00
  %5 = fcmp une float %2, 1.000000e+00
  %6 = or i1 %4, %5
  br i1 %6, label %7, label %58

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %9 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %8, align 8
  %10 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %9, i64 0, i32 4
  %11 = load i32, i32* %10, align 8
  %12 = icmp sgt i32 %11, 0
  br i1 %12, label %13, label %46

13:                                               ; preds = %7
  %14 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*)***
  %15 = load void (%class.SkCanvas*)**, void (%class.SkCanvas*)*** %14, align 8
  %16 = getelementptr inbounds void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %15, i64 12
  %17 = load void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %16, align 8
  tail call void %17(%class.SkCanvas* %0) #15
  %18 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %8, align 8
  %19 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %18, i64 0, i32 4
  %20 = load i32, i32* %19, align 8
  %21 = add nsw i32 %20, -1
  store i32 %21, i32* %19, align 8
  %22 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 1
  %23 = tail call i8* @_ZN7SkDeque9push_backEv(%class.SkDeque* %22) #15
  %24 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %8, align 8
  %25 = bitcast i8* %23 to i64*
  store i64 0, i64* %25, align 8
  %26 = getelementptr inbounds i8, i8* %23, i64 8
  %27 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %24, i64 0, i32 1
  %28 = bitcast %class.SkBaseDevice** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast i8* %26 to i64*
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds i8, i8* %23, i64 16
  %32 = bitcast i8* %31 to i64*
  store i64 0, i64* %32, align 8
  %33 = getelementptr inbounds i8, i8* %23, i64 24
  %34 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %24, i64 0, i32 3
  %35 = bitcast %class.SkM44* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %35, i64 64, i1 false) #15
  %36 = getelementptr inbounds i8, i8* %23, i64 88
  %37 = bitcast i8* %36 to i32*
  store i32 0, i32* %37, align 8
  %38 = bitcast %"class.SkCanvas::MCRec"** %8 to i8**
  store i8* %23, i8** %38, align 8
  %39 = bitcast i8* %26 to %class.SkBaseDevice**
  %40 = load %class.SkBaseDevice*, %class.SkBaseDevice** %39, align 8
  %41 = bitcast %class.SkBaseDevice* %40 to void (%class.SkBaseDevice*)***
  %42 = load void (%class.SkBaseDevice*)**, void (%class.SkBaseDevice*)*** %41, align 8
  %43 = getelementptr inbounds void (%class.SkBaseDevice*)*, void (%class.SkBaseDevice*)** %42, i64 10
  %44 = load void (%class.SkBaseDevice*)*, void (%class.SkBaseDevice*)** %43, align 8
  tail call void %44(%class.SkBaseDevice* %40) #15
  %45 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %8, align 8
  br label %46

46:                                               ; preds = %7, %13
  %47 = phi %"class.SkCanvas::MCRec"* [ %9, %7 ], [ %45, %13 ]
  %48 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %47, i64 0, i32 3
  %49 = tail call dereferenceable(64) %class.SkM44* @_ZN5SkM448preScaleEff(%class.SkM44* %48, float %1, float %2) #15
  %50 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %8, align 8
  %51 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %50, i64 0, i32 1
  %52 = load %class.SkBaseDevice*, %class.SkBaseDevice** %51, align 8
  %53 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %50, i64 0, i32 3
  tail call void @_ZN12SkBaseDevice12setGlobalCTMERK5SkM44(%class.SkBaseDevice* %52, %class.SkM44* dereferenceable(64) %53) #15
  %54 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*, float, float)***
  %55 = load void (%class.SkCanvas*, float, float)**, void (%class.SkCanvas*, float, float)*** %54, align 8
  %56 = getelementptr inbounds void (%class.SkCanvas*, float, float)*, void (%class.SkCanvas*, float, float)** %55, i64 21
  %57 = load void (%class.SkCanvas*, float, float)*, void (%class.SkCanvas*, float, float)** %56, align 8
  tail call void %57(%class.SkCanvas* %0, float %1, float %2) #15
  br label %58

58:                                               ; preds = %3, %46
  ret void
}

declare dereferenceable(64) %class.SkM44* @_ZN5SkM448preScaleEff(%class.SkM44*, float, float) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas6rotateEf(%class.SkCanvas*, float) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.SkM44, align 4
  %4 = alloca %class.SkMatrix, align 16
  %5 = bitcast %class.SkMatrix* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #15
  %6 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 1
  %7 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 0, i64 1
  %8 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 0, i64 2
  %9 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 0, i64 3
  %10 = bitcast %class.SkMatrix* %4 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %10, align 16
  %11 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 0, i64 4
  %12 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 0, i64 5
  %13 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 0, i64 6
  %14 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 0, i64 7
  %15 = bitcast float* %11 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %15, align 16
  %16 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %16, align 16
  store i32 16, i32* %6, align 4
  %17 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9setRotateEf(%class.SkMatrix* nonnull %4, float %1) #15
  %18 = load i32, i32* %6, align 4
  %19 = trunc i32 %18 to i8
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %2
  %22 = call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* nonnull %4) #15
  %23 = zext i8 %22 to i32
  store i32 %23, i32* %6, align 4
  br label %24

24:                                               ; preds = %21, %2
  %25 = phi i32 [ %23, %21 ], [ %18, %2 ]
  %26 = and i32 %25, 15
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %70, label %28

28:                                               ; preds = %24
  %29 = bitcast %class.SkM44* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %29) #15
  %30 = bitcast %class.SkMatrix* %4 to i32*
  %31 = load i32, i32* %30, align 16
  %32 = bitcast float* %7 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = bitcast float* %8 to i32*
  %35 = load i32, i32* %34, align 8
  %36 = bitcast float* %9 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = bitcast float* %11 to i32*
  %39 = load i32, i32* %38, align 16
  %40 = bitcast float* %12 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = bitcast float* %13 to i32*
  %43 = load i32, i32* %42, align 8
  %44 = bitcast float* %14 to i32*
  %45 = load i32, i32* %44, align 4
  %46 = bitcast float* %16 to i32*
  %47 = load i32, i32* %46, align 16
  %48 = bitcast %class.SkM44* %3 to i32*
  store i32 %31, i32* %48, align 4
  %49 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 1
  %50 = bitcast float* %49 to i32*
  store i32 %37, i32* %50, align 4
  %51 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 2
  store float 0.000000e+00, float* %51, align 4
  %52 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 3
  %53 = bitcast float* %52 to i32*
  store i32 %43, i32* %53, align 4
  %54 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 4
  %55 = bitcast float* %54 to i32*
  store i32 %33, i32* %55, align 4
  %56 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 5
  %57 = bitcast float* %56 to i32*
  store i32 %39, i32* %57, align 4
  %58 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 6
  store float 0.000000e+00, float* %58, align 4
  %59 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 7
  %60 = bitcast float* %59 to i32*
  store i32 %45, i32* %60, align 4
  %61 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 8
  %62 = bitcast float* %61 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00>, <4 x float>* %62, align 4
  %63 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 12
  %64 = bitcast float* %63 to i32*
  store i32 %35, i32* %64, align 4
  %65 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 13
  %66 = bitcast float* %65 to i32*
  store i32 %41, i32* %66, align 4
  %67 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 14
  store float 0.000000e+00, float* %67, align 4
  %68 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 15
  %69 = bitcast float* %68 to i32*
  store i32 %47, i32* %69, align 4
  call void @_ZN8SkCanvas6concatERK5SkM44(%class.SkCanvas* %0, %class.SkM44* nonnull dereferenceable(64) %3) #15
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %29) #15
  br label %70

70:                                               ; preds = %24, %28
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #15
  ret void
}

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9setRotateEf(%class.SkMatrix*, float) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas6rotateEfff(%class.SkCanvas*, float, float, float) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.SkM44, align 4
  %6 = alloca %class.SkMatrix, align 16
  %7 = bitcast %class.SkMatrix* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7) #15
  %8 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 1
  %9 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 1
  %10 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 2
  %11 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 3
  %12 = bitcast %class.SkMatrix* %6 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %12, align 16
  %13 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 4
  %14 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 5
  %15 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 6
  %16 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 7
  %17 = bitcast float* %13 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %17, align 16
  %18 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %18, align 16
  store i32 16, i32* %8, align 4
  %19 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9setRotateEfff(%class.SkMatrix* nonnull %6, float %1, float %2, float %3) #15
  %20 = load i32, i32* %8, align 4
  %21 = trunc i32 %20 to i8
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %4
  %24 = call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* nonnull %6) #15
  %25 = zext i8 %24 to i32
  store i32 %25, i32* %8, align 4
  br label %26

26:                                               ; preds = %23, %4
  %27 = phi i32 [ %25, %23 ], [ %20, %4 ]
  %28 = and i32 %27, 15
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %72, label %30

30:                                               ; preds = %26
  %31 = bitcast %class.SkM44* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %31) #15
  %32 = bitcast %class.SkMatrix* %6 to i32*
  %33 = load i32, i32* %32, align 16
  %34 = bitcast float* %9 to i32*
  %35 = load i32, i32* %34, align 4
  %36 = bitcast float* %10 to i32*
  %37 = load i32, i32* %36, align 8
  %38 = bitcast float* %11 to i32*
  %39 = load i32, i32* %38, align 4
  %40 = bitcast float* %13 to i32*
  %41 = load i32, i32* %40, align 16
  %42 = bitcast float* %14 to i32*
  %43 = load i32, i32* %42, align 4
  %44 = bitcast float* %15 to i32*
  %45 = load i32, i32* %44, align 8
  %46 = bitcast float* %16 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = bitcast float* %18 to i32*
  %49 = load i32, i32* %48, align 16
  %50 = bitcast %class.SkM44* %5 to i32*
  store i32 %33, i32* %50, align 4
  %51 = getelementptr inbounds %class.SkM44, %class.SkM44* %5, i64 0, i32 0, i64 1
  %52 = bitcast float* %51 to i32*
  store i32 %39, i32* %52, align 4
  %53 = getelementptr inbounds %class.SkM44, %class.SkM44* %5, i64 0, i32 0, i64 2
  store float 0.000000e+00, float* %53, align 4
  %54 = getelementptr inbounds %class.SkM44, %class.SkM44* %5, i64 0, i32 0, i64 3
  %55 = bitcast float* %54 to i32*
  store i32 %45, i32* %55, align 4
  %56 = getelementptr inbounds %class.SkM44, %class.SkM44* %5, i64 0, i32 0, i64 4
  %57 = bitcast float* %56 to i32*
  store i32 %35, i32* %57, align 4
  %58 = getelementptr inbounds %class.SkM44, %class.SkM44* %5, i64 0, i32 0, i64 5
  %59 = bitcast float* %58 to i32*
  store i32 %41, i32* %59, align 4
  %60 = getelementptr inbounds %class.SkM44, %class.SkM44* %5, i64 0, i32 0, i64 6
  store float 0.000000e+00, float* %60, align 4
  %61 = getelementptr inbounds %class.SkM44, %class.SkM44* %5, i64 0, i32 0, i64 7
  %62 = bitcast float* %61 to i32*
  store i32 %47, i32* %62, align 4
  %63 = getelementptr inbounds %class.SkM44, %class.SkM44* %5, i64 0, i32 0, i64 8
  %64 = bitcast float* %63 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00>, <4 x float>* %64, align 4
  %65 = getelementptr inbounds %class.SkM44, %class.SkM44* %5, i64 0, i32 0, i64 12
  %66 = bitcast float* %65 to i32*
  store i32 %37, i32* %66, align 4
  %67 = getelementptr inbounds %class.SkM44, %class.SkM44* %5, i64 0, i32 0, i64 13
  %68 = bitcast float* %67 to i32*
  store i32 %43, i32* %68, align 4
  %69 = getelementptr inbounds %class.SkM44, %class.SkM44* %5, i64 0, i32 0, i64 14
  store float 0.000000e+00, float* %69, align 4
  %70 = getelementptr inbounds %class.SkM44, %class.SkM44* %5, i64 0, i32 0, i64 15
  %71 = bitcast float* %70 to i32*
  store i32 %49, i32* %71, align 4
  call void @_ZN8SkCanvas6concatERK5SkM44(%class.SkCanvas* %0, %class.SkM44* nonnull dereferenceable(64) %5) #15
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %31) #15
  br label %72

72:                                               ; preds = %26, %30
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7) #15
  ret void
}

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9setRotateEfff(%class.SkMatrix*, float, float, float) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas4skewEff(%class.SkCanvas*, float, float) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.SkM44, align 4
  %5 = alloca %class.SkMatrix, align 16
  %6 = bitcast %class.SkMatrix* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #15
  %7 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 1
  %8 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 1
  %9 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 2
  %10 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 3
  %11 = bitcast %class.SkMatrix* %5 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %11, align 16
  %12 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 4
  %13 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 5
  %14 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 6
  %15 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 7
  %16 = bitcast float* %12 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %16, align 16
  %17 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %17, align 16
  store i32 16, i32* %7, align 4
  %18 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix7setSkewEff(%class.SkMatrix* nonnull %5, float %1, float %2) #15
  %19 = load i32, i32* %7, align 4
  %20 = trunc i32 %19 to i8
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %3
  %23 = call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* nonnull %5) #15
  %24 = zext i8 %23 to i32
  store i32 %24, i32* %7, align 4
  br label %25

25:                                               ; preds = %22, %3
  %26 = phi i32 [ %24, %22 ], [ %19, %3 ]
  %27 = and i32 %26, 15
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %71, label %29

29:                                               ; preds = %25
  %30 = bitcast %class.SkM44* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %30) #15
  %31 = bitcast %class.SkMatrix* %5 to i32*
  %32 = load i32, i32* %31, align 16
  %33 = bitcast float* %8 to i32*
  %34 = load i32, i32* %33, align 4
  %35 = bitcast float* %9 to i32*
  %36 = load i32, i32* %35, align 8
  %37 = bitcast float* %10 to i32*
  %38 = load i32, i32* %37, align 4
  %39 = bitcast float* %12 to i32*
  %40 = load i32, i32* %39, align 16
  %41 = bitcast float* %13 to i32*
  %42 = load i32, i32* %41, align 4
  %43 = bitcast float* %14 to i32*
  %44 = load i32, i32* %43, align 8
  %45 = bitcast float* %15 to i32*
  %46 = load i32, i32* %45, align 4
  %47 = bitcast float* %17 to i32*
  %48 = load i32, i32* %47, align 16
  %49 = bitcast %class.SkM44* %4 to i32*
  store i32 %32, i32* %49, align 4
  %50 = getelementptr inbounds %class.SkM44, %class.SkM44* %4, i64 0, i32 0, i64 1
  %51 = bitcast float* %50 to i32*
  store i32 %38, i32* %51, align 4
  %52 = getelementptr inbounds %class.SkM44, %class.SkM44* %4, i64 0, i32 0, i64 2
  store float 0.000000e+00, float* %52, align 4
  %53 = getelementptr inbounds %class.SkM44, %class.SkM44* %4, i64 0, i32 0, i64 3
  %54 = bitcast float* %53 to i32*
  store i32 %44, i32* %54, align 4
  %55 = getelementptr inbounds %class.SkM44, %class.SkM44* %4, i64 0, i32 0, i64 4
  %56 = bitcast float* %55 to i32*
  store i32 %34, i32* %56, align 4
  %57 = getelementptr inbounds %class.SkM44, %class.SkM44* %4, i64 0, i32 0, i64 5
  %58 = bitcast float* %57 to i32*
  store i32 %40, i32* %58, align 4
  %59 = getelementptr inbounds %class.SkM44, %class.SkM44* %4, i64 0, i32 0, i64 6
  store float 0.000000e+00, float* %59, align 4
  %60 = getelementptr inbounds %class.SkM44, %class.SkM44* %4, i64 0, i32 0, i64 7
  %61 = bitcast float* %60 to i32*
  store i32 %46, i32* %61, align 4
  %62 = getelementptr inbounds %class.SkM44, %class.SkM44* %4, i64 0, i32 0, i64 8
  %63 = bitcast float* %62 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00>, <4 x float>* %63, align 4
  %64 = getelementptr inbounds %class.SkM44, %class.SkM44* %4, i64 0, i32 0, i64 12
  %65 = bitcast float* %64 to i32*
  store i32 %36, i32* %65, align 4
  %66 = getelementptr inbounds %class.SkM44, %class.SkM44* %4, i64 0, i32 0, i64 13
  %67 = bitcast float* %66 to i32*
  store i32 %42, i32* %67, align 4
  %68 = getelementptr inbounds %class.SkM44, %class.SkM44* %4, i64 0, i32 0, i64 14
  store float 0.000000e+00, float* %68, align 4
  %69 = getelementptr inbounds %class.SkM44, %class.SkM44* %4, i64 0, i32 0, i64 15
  %70 = bitcast float* %69 to i32*
  store i32 %48, i32* %70, align 4
  call void @_ZN8SkCanvas6concatERK5SkM44(%class.SkCanvas* %0, %class.SkM44* nonnull dereferenceable(64) %4) #15
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %30) #15
  br label %71

71:                                               ; preds = %25, %29
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #15
  ret void
}

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix7setSkewEff(%class.SkMatrix*, float, float) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas6concatERK5SkM44(%class.SkCanvas*, %class.SkM44* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %4 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %3, align 8
  %5 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %4, i64 0, i32 4
  %6 = load i32, i32* %5, align 8
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %41

8:                                                ; preds = %2
  %9 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*)***
  %10 = load void (%class.SkCanvas*)**, void (%class.SkCanvas*)*** %9, align 8
  %11 = getelementptr inbounds void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %10, i64 12
  %12 = load void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %11, align 8
  tail call void %12(%class.SkCanvas* %0) #15
  %13 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %3, align 8
  %14 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %13, i64 0, i32 4
  %15 = load i32, i32* %14, align 8
  %16 = add nsw i32 %15, -1
  store i32 %16, i32* %14, align 8
  %17 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 1
  %18 = tail call i8* @_ZN7SkDeque9push_backEv(%class.SkDeque* %17) #15
  %19 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %3, align 8
  %20 = bitcast i8* %18 to i64*
  store i64 0, i64* %20, align 8
  %21 = getelementptr inbounds i8, i8* %18, i64 8
  %22 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %19, i64 0, i32 1
  %23 = bitcast %class.SkBaseDevice** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast i8* %21 to i64*
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds i8, i8* %18, i64 16
  %27 = bitcast i8* %26 to i64*
  store i64 0, i64* %27, align 8
  %28 = getelementptr inbounds i8, i8* %18, i64 24
  %29 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %19, i64 0, i32 3
  %30 = bitcast %class.SkM44* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %30, i64 64, i1 false) #15
  %31 = getelementptr inbounds i8, i8* %18, i64 88
  %32 = bitcast i8* %31 to i32*
  store i32 0, i32* %32, align 8
  %33 = bitcast %"class.SkCanvas::MCRec"** %3 to i8**
  store i8* %18, i8** %33, align 8
  %34 = bitcast i8* %21 to %class.SkBaseDevice**
  %35 = load %class.SkBaseDevice*, %class.SkBaseDevice** %34, align 8
  %36 = bitcast %class.SkBaseDevice* %35 to void (%class.SkBaseDevice*)***
  %37 = load void (%class.SkBaseDevice*)**, void (%class.SkBaseDevice*)*** %36, align 8
  %38 = getelementptr inbounds void (%class.SkBaseDevice*)*, void (%class.SkBaseDevice*)** %37, i64 10
  %39 = load void (%class.SkBaseDevice*)*, void (%class.SkBaseDevice*)** %38, align 8
  tail call void %39(%class.SkBaseDevice* %35) #15
  %40 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %3, align 8
  br label %41

41:                                               ; preds = %2, %8
  %42 = phi %"class.SkCanvas::MCRec"* [ %4, %2 ], [ %40, %8 ]
  %43 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %42, i64 0, i32 3
  %44 = tail call dereferenceable(64) %class.SkM44* @_ZN5SkM449setConcatERKS_S1_(%class.SkM44* %43, %class.SkM44* dereferenceable(64) %43, %class.SkM44* dereferenceable(64) %1) #15
  %45 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %3, align 8
  %46 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %45, i64 0, i32 1
  %47 = load %class.SkBaseDevice*, %class.SkBaseDevice** %46, align 8
  %48 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %45, i64 0, i32 3
  tail call void @_ZN12SkBaseDevice12setGlobalCTMERK5SkM44(%class.SkBaseDevice* %47, %class.SkM44* dereferenceable(64) %48) #15
  %49 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*, %class.SkM44*)***
  %50 = load void (%class.SkCanvas*, %class.SkM44*)**, void (%class.SkCanvas*, %class.SkM44*)*** %49, align 8
  %51 = getelementptr inbounds void (%class.SkCanvas*, %class.SkM44*)*, void (%class.SkCanvas*, %class.SkM44*)** %50, i64 18
  %52 = load void (%class.SkCanvas*, %class.SkM44*)*, void (%class.SkCanvas*, %class.SkM44*)** %51, align 8
  tail call void %52(%class.SkCanvas* %0, %class.SkM44* dereferenceable(64) %1) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas16internalConcat44ERK5SkM44(%class.SkCanvas*, %class.SkM44* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %4 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %3, align 8
  %5 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %4, i64 0, i32 4
  %6 = load i32, i32* %5, align 8
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %41

8:                                                ; preds = %2
  %9 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*)***
  %10 = load void (%class.SkCanvas*)**, void (%class.SkCanvas*)*** %9, align 8
  %11 = getelementptr inbounds void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %10, i64 12
  %12 = load void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %11, align 8
  tail call void %12(%class.SkCanvas* %0) #15
  %13 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %3, align 8
  %14 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %13, i64 0, i32 4
  %15 = load i32, i32* %14, align 8
  %16 = add nsw i32 %15, -1
  store i32 %16, i32* %14, align 8
  %17 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 1
  %18 = tail call i8* @_ZN7SkDeque9push_backEv(%class.SkDeque* %17) #15
  %19 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %3, align 8
  %20 = bitcast i8* %18 to i64*
  store i64 0, i64* %20, align 8
  %21 = getelementptr inbounds i8, i8* %18, i64 8
  %22 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %19, i64 0, i32 1
  %23 = bitcast %class.SkBaseDevice** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast i8* %21 to i64*
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds i8, i8* %18, i64 16
  %27 = bitcast i8* %26 to i64*
  store i64 0, i64* %27, align 8
  %28 = getelementptr inbounds i8, i8* %18, i64 24
  %29 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %19, i64 0, i32 3
  %30 = bitcast %class.SkM44* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %30, i64 64, i1 false) #15
  %31 = getelementptr inbounds i8, i8* %18, i64 88
  %32 = bitcast i8* %31 to i32*
  store i32 0, i32* %32, align 8
  %33 = bitcast %"class.SkCanvas::MCRec"** %3 to i8**
  store i8* %18, i8** %33, align 8
  %34 = bitcast i8* %21 to %class.SkBaseDevice**
  %35 = load %class.SkBaseDevice*, %class.SkBaseDevice** %34, align 8
  %36 = bitcast %class.SkBaseDevice* %35 to void (%class.SkBaseDevice*)***
  %37 = load void (%class.SkBaseDevice*)**, void (%class.SkBaseDevice*)*** %36, align 8
  %38 = getelementptr inbounds void (%class.SkBaseDevice*)*, void (%class.SkBaseDevice*)** %37, i64 10
  %39 = load void (%class.SkBaseDevice*)*, void (%class.SkBaseDevice*)** %38, align 8
  tail call void %39(%class.SkBaseDevice* %35) #15
  %40 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %3, align 8
  br label %41

41:                                               ; preds = %2, %8
  %42 = phi %"class.SkCanvas::MCRec"* [ %4, %2 ], [ %40, %8 ]
  %43 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %42, i64 0, i32 3
  %44 = tail call dereferenceable(64) %class.SkM44* @_ZN5SkM449setConcatERKS_S1_(%class.SkM44* %43, %class.SkM44* dereferenceable(64) %43, %class.SkM44* dereferenceable(64) %1) #15
  %45 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %3, align 8
  %46 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %45, i64 0, i32 1
  %47 = load %class.SkBaseDevice*, %class.SkBaseDevice** %46, align 8
  %48 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %45, i64 0, i32 3
  tail call void @_ZN12SkBaseDevice12setGlobalCTMERK5SkM44(%class.SkBaseDevice* %47, %class.SkM44* dereferenceable(64) %48) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas9setMatrixERK8SkMatrix(%class.SkCanvas*, %class.SkMatrix* nocapture readonly dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.SkM44, align 4
  %4 = bitcast %class.SkM44* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %4) #15
  %5 = bitcast %class.SkMatrix* %1 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 0, i64 1
  %8 = bitcast float* %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 0, i64 2
  %11 = bitcast float* %10 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 0, i64 3
  %14 = bitcast float* %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 0, i64 4
  %17 = bitcast float* %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 0, i64 5
  %20 = bitcast float* %19 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 0, i64 6
  %23 = bitcast float* %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 0, i64 7
  %26 = bitcast float* %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 0, i64 8
  %29 = bitcast float* %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = bitcast %class.SkM44* %3 to i32*
  store i32 %6, i32* %31, align 4
  %32 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 1
  %33 = bitcast float* %32 to i32*
  store i32 %15, i32* %33, align 4
  %34 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 2
  store float 0.000000e+00, float* %34, align 4
  %35 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 3
  %36 = bitcast float* %35 to i32*
  store i32 %24, i32* %36, align 4
  %37 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 4
  %38 = bitcast float* %37 to i32*
  store i32 %9, i32* %38, align 4
  %39 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 5
  %40 = bitcast float* %39 to i32*
  store i32 %18, i32* %40, align 4
  %41 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 6
  store float 0.000000e+00, float* %41, align 4
  %42 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 7
  %43 = bitcast float* %42 to i32*
  store i32 %27, i32* %43, align 4
  %44 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 8
  %45 = bitcast float* %44 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00>, <4 x float>* %45, align 4
  %46 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 12
  %47 = bitcast float* %46 to i32*
  store i32 %12, i32* %47, align 4
  %48 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 13
  %49 = bitcast float* %48 to i32*
  store i32 %21, i32* %49, align 4
  %50 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 14
  store float 0.000000e+00, float* %50, align 4
  %51 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 15
  %52 = bitcast float* %51 to i32*
  store i32 %30, i32* %52, align 4
  %53 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %54 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %53, align 8
  %55 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %54, i64 0, i32 4
  %56 = load i32, i32* %55, align 8
  %57 = icmp sgt i32 %56, 0
  br i1 %57, label %58, label %91

58:                                               ; preds = %2
  %59 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*)***
  %60 = load void (%class.SkCanvas*)**, void (%class.SkCanvas*)*** %59, align 8
  %61 = getelementptr inbounds void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %60, i64 12
  %62 = load void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %61, align 8
  tail call void %62(%class.SkCanvas* %0) #15
  %63 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %53, align 8
  %64 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %63, i64 0, i32 4
  %65 = load i32, i32* %64, align 8
  %66 = add nsw i32 %65, -1
  store i32 %66, i32* %64, align 8
  %67 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 1
  %68 = tail call i8* @_ZN7SkDeque9push_backEv(%class.SkDeque* %67) #15
  %69 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %53, align 8
  %70 = bitcast i8* %68 to i64*
  store i64 0, i64* %70, align 8
  %71 = getelementptr inbounds i8, i8* %68, i64 8
  %72 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %69, i64 0, i32 1
  %73 = bitcast %class.SkBaseDevice** %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = bitcast i8* %71 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds i8, i8* %68, i64 16
  %77 = bitcast i8* %76 to i64*
  store i64 0, i64* %77, align 8
  %78 = getelementptr inbounds i8, i8* %68, i64 24
  %79 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %69, i64 0, i32 3
  %80 = bitcast %class.SkM44* %79 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* align 8 %80, i64 64, i1 false) #15
  %81 = getelementptr inbounds i8, i8* %68, i64 88
  %82 = bitcast i8* %81 to i32*
  store i32 0, i32* %82, align 8
  %83 = bitcast %"class.SkCanvas::MCRec"** %53 to i8**
  store i8* %68, i8** %83, align 8
  %84 = bitcast i8* %71 to %class.SkBaseDevice**
  %85 = load %class.SkBaseDevice*, %class.SkBaseDevice** %84, align 8
  %86 = bitcast %class.SkBaseDevice* %85 to void (%class.SkBaseDevice*)***
  %87 = load void (%class.SkBaseDevice*)**, void (%class.SkBaseDevice*)*** %86, align 8
  %88 = getelementptr inbounds void (%class.SkBaseDevice*)*, void (%class.SkBaseDevice*)** %87, i64 10
  %89 = load void (%class.SkBaseDevice*)*, void (%class.SkBaseDevice*)** %88, align 8
  tail call void %89(%class.SkBaseDevice* %85) #15
  %90 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %53, align 8
  br label %91

91:                                               ; preds = %2, %58
  %92 = phi %"class.SkCanvas::MCRec"* [ %54, %2 ], [ %90, %58 ]
  %93 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %92, i64 0, i32 3
  %94 = bitcast %class.SkM44* %93 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %94, i8* nonnull align 4 %4, i64 64, i1 false) #15
  %95 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %53, align 8
  %96 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %95, i64 0, i32 1
  %97 = load %class.SkBaseDevice*, %class.SkBaseDevice** %96, align 8
  %98 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %95, i64 0, i32 3
  tail call void @_ZN12SkBaseDevice12setGlobalCTMERK5SkM44(%class.SkBaseDevice* %97, %class.SkM44* dereferenceable(64) %98) #15
  %99 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*, %class.SkM44*)***
  %100 = load void (%class.SkCanvas*, %class.SkM44*)**, void (%class.SkCanvas*, %class.SkM44*)*** %99, align 8
  %101 = getelementptr inbounds void (%class.SkCanvas*, %class.SkM44*)*, void (%class.SkCanvas*, %class.SkM44*)** %100, i64 19
  %102 = load void (%class.SkCanvas*, %class.SkM44*)*, void (%class.SkCanvas*, %class.SkM44*)** %101, align 8
  call void %102(%class.SkCanvas* %0, %class.SkM44* nonnull dereferenceable(64) %3) #15
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %4) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas9setMatrixERK5SkM44(%class.SkCanvas*, %class.SkM44* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %4 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %3, align 8
  %5 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %4, i64 0, i32 4
  %6 = load i32, i32* %5, align 8
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %41

8:                                                ; preds = %2
  %9 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*)***
  %10 = load void (%class.SkCanvas*)**, void (%class.SkCanvas*)*** %9, align 8
  %11 = getelementptr inbounds void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %10, i64 12
  %12 = load void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %11, align 8
  tail call void %12(%class.SkCanvas* %0) #15
  %13 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %3, align 8
  %14 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %13, i64 0, i32 4
  %15 = load i32, i32* %14, align 8
  %16 = add nsw i32 %15, -1
  store i32 %16, i32* %14, align 8
  %17 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 1
  %18 = tail call i8* @_ZN7SkDeque9push_backEv(%class.SkDeque* %17) #15
  %19 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %3, align 8
  %20 = bitcast i8* %18 to i64*
  store i64 0, i64* %20, align 8
  %21 = getelementptr inbounds i8, i8* %18, i64 8
  %22 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %19, i64 0, i32 1
  %23 = bitcast %class.SkBaseDevice** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast i8* %21 to i64*
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds i8, i8* %18, i64 16
  %27 = bitcast i8* %26 to i64*
  store i64 0, i64* %27, align 8
  %28 = getelementptr inbounds i8, i8* %18, i64 24
  %29 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %19, i64 0, i32 3
  %30 = bitcast %class.SkM44* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %30, i64 64, i1 false) #15
  %31 = getelementptr inbounds i8, i8* %18, i64 88
  %32 = bitcast i8* %31 to i32*
  store i32 0, i32* %32, align 8
  %33 = bitcast %"class.SkCanvas::MCRec"** %3 to i8**
  store i8* %18, i8** %33, align 8
  %34 = bitcast i8* %21 to %class.SkBaseDevice**
  %35 = load %class.SkBaseDevice*, %class.SkBaseDevice** %34, align 8
  %36 = bitcast %class.SkBaseDevice* %35 to void (%class.SkBaseDevice*)***
  %37 = load void (%class.SkBaseDevice*)**, void (%class.SkBaseDevice*)*** %36, align 8
  %38 = getelementptr inbounds void (%class.SkBaseDevice*)*, void (%class.SkBaseDevice*)** %37, i64 10
  %39 = load void (%class.SkBaseDevice*)*, void (%class.SkBaseDevice*)** %38, align 8
  tail call void %39(%class.SkBaseDevice* %35) #15
  %40 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %3, align 8
  br label %41

41:                                               ; preds = %2, %8
  %42 = phi %"class.SkCanvas::MCRec"* [ %4, %2 ], [ %40, %8 ]
  %43 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %42, i64 0, i32 3
  %44 = bitcast %class.SkM44* %43 to i8*
  %45 = bitcast %class.SkM44* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 4 %45, i64 64, i1 false) #15
  %46 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %3, align 8
  %47 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %46, i64 0, i32 1
  %48 = load %class.SkBaseDevice*, %class.SkBaseDevice** %47, align 8
  %49 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %46, i64 0, i32 3
  tail call void @_ZN12SkBaseDevice12setGlobalCTMERK5SkM44(%class.SkBaseDevice* %48, %class.SkM44* dereferenceable(64) %49) #15
  %50 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*, %class.SkM44*)***
  %51 = load void (%class.SkCanvas*, %class.SkM44*)**, void (%class.SkCanvas*, %class.SkM44*)*** %50, align 8
  %52 = getelementptr inbounds void (%class.SkCanvas*, %class.SkM44*)*, void (%class.SkCanvas*, %class.SkM44*)** %51, i64 19
  %53 = load void (%class.SkCanvas*, %class.SkM44*)*, void (%class.SkCanvas*, %class.SkM44*)** %52, align 8
  tail call void %53(%class.SkCanvas* %0, %class.SkM44* dereferenceable(64) %1) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas11resetMatrixEv(%class.SkCanvas*) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.SkM44, align 4
  %3 = bitcast %class.SkM44* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %3) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %3, i8* align 4 bitcast ([16 x float]* @constinit to i8*), i64 64, i1 false) #15
  %4 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %5 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %4, align 8
  %6 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %5, i64 0, i32 4
  %7 = load i32, i32* %6, align 8
  %8 = icmp sgt i32 %7, 0
  br i1 %8, label %9, label %42

9:                                                ; preds = %1
  %10 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*)***
  %11 = load void (%class.SkCanvas*)**, void (%class.SkCanvas*)*** %10, align 8
  %12 = getelementptr inbounds void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %11, i64 12
  %13 = load void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %12, align 8
  tail call void %13(%class.SkCanvas* %0) #15
  %14 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %4, align 8
  %15 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %14, i64 0, i32 4
  %16 = load i32, i32* %15, align 8
  %17 = add nsw i32 %16, -1
  store i32 %17, i32* %15, align 8
  %18 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 1
  %19 = tail call i8* @_ZN7SkDeque9push_backEv(%class.SkDeque* %18) #15
  %20 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %4, align 8
  %21 = bitcast i8* %19 to i64*
  store i64 0, i64* %21, align 8
  %22 = getelementptr inbounds i8, i8* %19, i64 8
  %23 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %20, i64 0, i32 1
  %24 = bitcast %class.SkBaseDevice** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast i8* %22 to i64*
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds i8, i8* %19, i64 16
  %28 = bitcast i8* %27 to i64*
  store i64 0, i64* %28, align 8
  %29 = getelementptr inbounds i8, i8* %19, i64 24
  %30 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %20, i64 0, i32 3
  %31 = bitcast %class.SkM44* %30 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %31, i64 64, i1 false) #15
  %32 = getelementptr inbounds i8, i8* %19, i64 88
  %33 = bitcast i8* %32 to i32*
  store i32 0, i32* %33, align 8
  %34 = bitcast %"class.SkCanvas::MCRec"** %4 to i8**
  store i8* %19, i8** %34, align 8
  %35 = bitcast i8* %22 to %class.SkBaseDevice**
  %36 = load %class.SkBaseDevice*, %class.SkBaseDevice** %35, align 8
  %37 = bitcast %class.SkBaseDevice* %36 to void (%class.SkBaseDevice*)***
  %38 = load void (%class.SkBaseDevice*)**, void (%class.SkBaseDevice*)*** %37, align 8
  %39 = getelementptr inbounds void (%class.SkBaseDevice*)*, void (%class.SkBaseDevice*)** %38, i64 10
  %40 = load void (%class.SkBaseDevice*)*, void (%class.SkBaseDevice*)** %39, align 8
  tail call void %40(%class.SkBaseDevice* %36) #15
  %41 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %4, align 8
  br label %42

42:                                               ; preds = %1, %9
  %43 = phi %"class.SkCanvas::MCRec"* [ %5, %1 ], [ %41, %9 ]
  %44 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %43, i64 0, i32 3
  %45 = bitcast %class.SkM44* %44 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* nonnull align 4 %3, i64 64, i1 false) #15
  %46 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %4, align 8
  %47 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %46, i64 0, i32 1
  %48 = load %class.SkBaseDevice*, %class.SkBaseDevice** %47, align 8
  %49 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %46, i64 0, i32 3
  tail call void @_ZN12SkBaseDevice12setGlobalCTMERK5SkM44(%class.SkBaseDevice* %48, %class.SkM44* dereferenceable(64) %49) #15
  %50 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*, %class.SkM44*)***
  %51 = load void (%class.SkCanvas*, %class.SkM44*)**, void (%class.SkCanvas*, %class.SkM44*)*** %50, align 8
  %52 = getelementptr inbounds void (%class.SkCanvas*, %class.SkM44*)*, void (%class.SkCanvas*, %class.SkM44*)** %51, i64 19
  %53 = load void (%class.SkCanvas*, %class.SkM44*)*, void (%class.SkCanvas*, %class.SkM44*)** %52, align 8
  call void %53(%class.SkCanvas* %0, %class.SkM44* nonnull dereferenceable(64) %2) #15
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %3) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas7markCTMEPKc(%class.SkCanvas*, i8*) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.SkM44, align 4
  %4 = tail call zeroext i1 @_ZN12SkCanvasPriv14ValidateMarkerEPKc(i8* %1) #15
  br i1 %4, label %5, label %21

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 3, i32 0
  %7 = load %class.SkMarkerStack*, %class.SkMarkerStack** %6, align 8
  %8 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** @_ZN6SkOpts7hash_fnE, align 8
  %9 = tail call i64 @strlen(i8* %1) #17
  %10 = tail call i32 %8(i8* %1, i64 %9, i32 0) #15
  %11 = bitcast %class.SkM44* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %11) #15
  %12 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %13 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %12, align 8
  %14 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %13, i64 0, i32 3
  %15 = bitcast %class.SkM44* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %11, i8* align 8 %15, i64 64, i1 false) #15
  %16 = bitcast %"class.SkCanvas::MCRec"* %13 to i8*
  call void @_ZN13SkMarkerStack9setMarkerEjRK5SkM44Pv(%class.SkMarkerStack* %7, i32 %10, %class.SkM44* nonnull dereferenceable(64) %3, i8* %16) #15
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %11) #15
  %17 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*, i8*)***
  %18 = load void (%class.SkCanvas*, i8*)**, void (%class.SkCanvas*, i8*)*** %17, align 8
  %19 = getelementptr inbounds void (%class.SkCanvas*, i8*)*, void (%class.SkCanvas*, i8*)** %18, i64 17
  %20 = load void (%class.SkCanvas*, i8*)*, void (%class.SkCanvas*, i8*)** %19, align 8
  call void %20(%class.SkCanvas* %0, i8* %1) #15
  br label %21

21:                                               ; preds = %5, %2
  ret void
}

declare zeroext i1 @_ZN12SkCanvasPriv14ValidateMarkerEPKc(i8*) local_unnamed_addr #4

declare void @_ZN13SkMarkerStack9setMarkerEjRK5SkM44Pv(%class.SkMarkerStack*, i32, %class.SkM44* dereferenceable(64), i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8SkCanvas16getLocalToDeviceEv(%class.SkM44* noalias nocapture sret, %class.SkCanvas* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %1, i64 0, i32 2
  %4 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %3, align 8
  %5 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %4, i64 0, i32 3
  %6 = bitcast %class.SkM44* %0 to i8*
  %7 = bitcast %class.SkM44* %5 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 8 %7, i64 64, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8SkCanvas13findMarkedCTMEPKcP5SkM44(%class.SkCanvas* nocapture readonly, i8*, %class.SkM44*) local_unnamed_addr #0 align 2 {
  %4 = tail call zeroext i1 @_ZN12SkCanvasPriv14ValidateMarkerEPKc(i8* %1) #15
  br i1 %4, label %5, label %12

5:                                                ; preds = %3
  %6 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 3, i32 0
  %7 = load %class.SkMarkerStack*, %class.SkMarkerStack** %6, align 8
  %8 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** @_ZN6SkOpts7hash_fnE, align 8
  %9 = tail call i64 @strlen(i8* %1) #17
  %10 = tail call i32 %8(i8* %1, i64 %9, i32 0) #15
  %11 = tail call zeroext i1 @_ZNK13SkMarkerStack10findMarkerEjP5SkM44(%class.SkMarkerStack* %7, i32 %10, %class.SkM44* %2) #15
  br label %12

12:                                               ; preds = %5, %3
  %13 = phi i1 [ false, %3 ], [ %11, %5 ]
  ret i1 %13
}

declare zeroext i1 @_ZNK13SkMarkerStack10findMarkerEjP5SkM44(%class.SkMarkerStack*, i32, %class.SkM44*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas8clipRectERK6SkRect8SkClipOpb(%class.SkCanvas*, %struct.SkRect* nocapture readonly dereferenceable(16), i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 0
  %7 = load float, float* %6, align 4
  %8 = fmul float %7, 0.000000e+00
  %9 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 1
  %10 = load float, float* %9, align 4
  %11 = fmul float %8, %10
  %12 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 2
  %13 = load float, float* %12, align 4
  %14 = fmul float %11, %13
  %15 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 3
  %16 = load float, float* %15, align 4
  %17 = fmul float %14, %16
  %18 = fcmp ord float %17, 0.000000e+00
  br i1 %18, label %19, label %87

19:                                               ; preds = %4
  %20 = bitcast { <2 x float>, <2 x float> }* %5 to %struct.SkRect*
  %21 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %22 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %21, align 8
  %23 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %22, i64 0, i32 4
  %24 = load i32, i32* %23, align 8
  %25 = icmp sgt i32 %24, 0
  br i1 %25, label %26, label %62

26:                                               ; preds = %19
  %27 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*)***
  %28 = load void (%class.SkCanvas*)**, void (%class.SkCanvas*)*** %27, align 8
  %29 = getelementptr inbounds void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %28, i64 12
  %30 = load void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %29, align 8
  tail call void %30(%class.SkCanvas* %0) #15
  %31 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %21, align 8
  %32 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %31, i64 0, i32 4
  %33 = load i32, i32* %32, align 8
  %34 = add nsw i32 %33, -1
  store i32 %34, i32* %32, align 8
  %35 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 1
  %36 = tail call i8* @_ZN7SkDeque9push_backEv(%class.SkDeque* %35) #15
  %37 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %21, align 8
  %38 = bitcast i8* %36 to i64*
  store i64 0, i64* %38, align 8
  %39 = getelementptr inbounds i8, i8* %36, i64 8
  %40 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %37, i64 0, i32 1
  %41 = bitcast %class.SkBaseDevice** %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast i8* %39 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds i8, i8* %36, i64 16
  %45 = bitcast i8* %44 to i64*
  store i64 0, i64* %45, align 8
  %46 = getelementptr inbounds i8, i8* %36, i64 24
  %47 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %37, i64 0, i32 3
  %48 = bitcast %class.SkM44* %47 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %48, i64 64, i1 false) #15
  %49 = getelementptr inbounds i8, i8* %36, i64 88
  %50 = bitcast i8* %49 to i32*
  store i32 0, i32* %50, align 8
  %51 = bitcast %"class.SkCanvas::MCRec"** %21 to i8**
  store i8* %36, i8** %51, align 8
  %52 = bitcast i8* %39 to %class.SkBaseDevice**
  %53 = load %class.SkBaseDevice*, %class.SkBaseDevice** %52, align 8
  %54 = bitcast %class.SkBaseDevice* %53 to void (%class.SkBaseDevice*)***
  %55 = load void (%class.SkBaseDevice*)**, void (%class.SkBaseDevice*)*** %54, align 8
  %56 = getelementptr inbounds void (%class.SkBaseDevice*)*, void (%class.SkBaseDevice*)** %55, i64 10
  %57 = load void (%class.SkBaseDevice*)*, void (%class.SkBaseDevice*)** %56, align 8
  tail call void %57(%class.SkBaseDevice* %53) #15
  %58 = load float, float* %12, align 4
  %59 = load float, float* %6, align 4
  %60 = load float, float* %15, align 4
  %61 = load float, float* %9, align 4
  br label %62

62:                                               ; preds = %19, %26
  %63 = phi float [ %10, %19 ], [ %61, %26 ]
  %64 = phi float [ %16, %19 ], [ %60, %26 ]
  %65 = phi float [ %7, %19 ], [ %59, %26 ]
  %66 = phi float [ %13, %19 ], [ %58, %26 ]
  %67 = zext i1 %3 to i32
  %68 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %68) #15
  %69 = fcmp olt float %66, %65
  %70 = select i1 %69, float %66, float %65
  %71 = fcmp olt float %64, %63
  %72 = select i1 %71, float %64, float %63
  %73 = fcmp olt float %65, %66
  %74 = select i1 %73, float %66, float %65
  %75 = fcmp olt float %63, %64
  %76 = select i1 %75, float %64, float %63
  %77 = insertelement <2 x float> undef, float %70, i32 0
  %78 = insertelement <2 x float> %77, float %72, i32 1
  %79 = insertelement <2 x float> undef, float %74, i32 0
  %80 = insertelement <2 x float> %79, float %76, i32 1
  %81 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  store <2 x float> %78, <2 x float>* %81, align 8
  %82 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  store <2 x float> %80, <2 x float>* %82, align 8
  %83 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*, %struct.SkRect*, i32, i32)***
  %84 = load void (%class.SkCanvas*, %struct.SkRect*, i32, i32)**, void (%class.SkCanvas*, %struct.SkRect*, i32, i32)*** %83, align 8
  %85 = getelementptr inbounds void (%class.SkCanvas*, %struct.SkRect*, i32, i32)*, void (%class.SkCanvas*, %struct.SkRect*, i32, i32)** %84, i64 46
  %86 = load void (%class.SkCanvas*, %struct.SkRect*, i32, i32)*, void (%class.SkCanvas*, %struct.SkRect*, i32, i32)** %85, align 8
  call void %86(%class.SkCanvas* %0, %struct.SkRect* nonnull dereferenceable(16) %20, i32 %2, i32 %67) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %68) #15
  br label %87

87:                                               ; preds = %4, %62
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas10onClipRectERK6SkRect8SkClipOpNS_13ClipEdgeStyleE(%class.SkCanvas*, %struct.SkRect* dereferenceable(16), i32, i32) unnamed_addr #0 align 2 {
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = icmp eq i32 %3, 1
  %7 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %8 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %7, align 8
  %9 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %8, i64 0, i32 1
  %10 = load %class.SkBaseDevice*, %class.SkBaseDevice** %9, align 8
  %11 = bitcast %class.SkBaseDevice* %10 to void (%class.SkBaseDevice*, %struct.SkRect*, i32, i1)***
  %12 = load void (%class.SkBaseDevice*, %struct.SkRect*, i32, i1)**, void (%class.SkBaseDevice*, %struct.SkRect*, i32, i1)*** %11, align 8
  %13 = getelementptr inbounds void (%class.SkBaseDevice*, %struct.SkRect*, i32, i1)*, void (%class.SkBaseDevice*, %struct.SkRect*, i32, i1)** %12, i64 12
  %14 = load void (%class.SkBaseDevice*, %struct.SkRect*, i32, i1)*, void (%class.SkBaseDevice*, %struct.SkRect*, i32, i1)** %13, align 8
  tail call void %14(%class.SkBaseDevice* %10, %struct.SkRect* dereferenceable(16) %1, i32 %2, i1 zeroext %6) #15
  %15 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %7, align 8
  %16 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %15, i64 0, i32 1
  %17 = load %class.SkBaseDevice*, %class.SkBaseDevice** %16, align 8
  %18 = bitcast %class.SkBaseDevice* %17 to i32 (%class.SkBaseDevice*)***
  %19 = load i32 (%class.SkBaseDevice*)**, i32 (%class.SkBaseDevice*)*** %18, align 8
  %20 = getelementptr inbounds i32 (%class.SkBaseDevice*)*, i32 (%class.SkBaseDevice*)** %19, i64 22
  %21 = load i32 (%class.SkBaseDevice*)*, i32 (%class.SkBaseDevice*)** %20, align 8
  %22 = tail call i32 %21(%class.SkBaseDevice* %17) #15
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %56, label %24

24:                                               ; preds = %4
  %25 = bitcast { <2 x float>, <2 x float> }* %5 to %struct.SkRect*
  %26 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %17, i64 0, i32 5
  %27 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #15
  %28 = bitcast %class.SkBaseDevice* %17 to { i64, i64 } (%class.SkBaseDevice*)***
  %29 = load { i64, i64 } (%class.SkBaseDevice*)**, { i64, i64 } (%class.SkBaseDevice*)*** %28, align 8
  %30 = getelementptr inbounds { i64, i64 } (%class.SkBaseDevice*)*, { i64, i64 } (%class.SkBaseDevice*)** %29, i64 23
  %31 = load { i64, i64 } (%class.SkBaseDevice*)*, { i64, i64 } (%class.SkBaseDevice*)** %30, align 8
  %32 = tail call { i64, i64 } %31(%class.SkBaseDevice* %17) #15
  %33 = extractvalue { i64, i64 } %32, 0
  %34 = trunc i64 %33 to i32
  %35 = lshr i64 %33, 32
  %36 = trunc i64 %35 to i32
  %37 = extractvalue { i64, i64 } %32, 1
  %38 = sitofp i32 %34 to float
  %39 = insertelement <2 x float> undef, float %38, i32 0
  %40 = sitofp i32 %36 to float
  %41 = insertelement <2 x float> %39, float %40, i32 1
  %42 = trunc i64 %37 to i32
  %43 = sitofp i32 %42 to float
  %44 = insertelement <2 x float> undef, float %43, i32 0
  %45 = lshr i64 %37, 32
  %46 = trunc i64 %45 to i32
  %47 = sitofp i32 %46 to float
  %48 = insertelement <2 x float> %44, float %47, i32 1
  %49 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  store <2 x float> %41, <2 x float>* %49, align 8
  %50 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  store <2 x float> %48, <2 x float>* %50, align 8
  %51 = call { <2 x float>, <2 x float> } @_ZN12SkMatrixPriv7MapRectERK5SkM44RK6SkRect(%class.SkM44* dereferenceable(64) %26, %struct.SkRect* nonnull dereferenceable(16) %25) #15
  %52 = extractvalue { <2 x float>, <2 x float> } %51, 0
  %53 = extractvalue { <2 x float>, <2 x float> } %51, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #15
  %54 = fadd <2 x float> %52, <float -1.000000e+00, float -1.000000e+00>
  %55 = fadd <2 x float> %53, <float 1.000000e+00, float 1.000000e+00>
  br label %56

56:                                               ; preds = %4, %24
  %57 = phi <2 x float> [ %54, %24 ], [ zeroinitializer, %4 ]
  %58 = phi <2 x float> [ %55, %24 ], [ zeroinitializer, %4 ]
  %59 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 11
  %60 = bitcast %struct.SkRect* %59 to <2 x float>*
  store <2 x float> %57, <2 x float>* %60, align 8
  %61 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 11, i32 2
  %62 = bitcast float* %61 to <2 x float>*
  store <2 x float> %58, <2 x float>* %62, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas41androidFramework_setDeviceClipRestrictionERK7SkIRect(%class.SkCanvas*, %struct.SkIRect* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca { <2 x float>, <2 x float> }, align 8
  %4 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 10
  %5 = bitcast %struct.SkIRect* %4 to i8*
  %6 = bitcast %struct.SkIRect* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 4 %6, i64 16, i1 false)
  %7 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 10, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = sext i32 %11 to i64
  %13 = sub nsw i64 %9, %12
  %14 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 10, i32 3
  %15 = load i32, i32* %14, align 4
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 10, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = sext i32 %18 to i64
  %20 = sub nsw i64 %16, %19
  %21 = icmp slt i64 %13, 1
  %22 = icmp slt i64 %20, 1
  %23 = or i1 %21, %22
  br i1 %23, label %66, label %24

24:                                               ; preds = %2
  %25 = or i64 %20, %13
  %26 = add nsw i64 %25, 2147483648
  %27 = icmp ugt i64 %26, 4294967295
  br i1 %27, label %66, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %30 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %29, align 8
  %31 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %30, i64 0, i32 4
  %32 = load i32, i32* %31, align 8
  %33 = icmp sgt i32 %32, 0
  br i1 %33, label %34, label %66

34:                                               ; preds = %28
  %35 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*)***
  %36 = load void (%class.SkCanvas*)**, void (%class.SkCanvas*)*** %35, align 8
  %37 = getelementptr inbounds void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %36, i64 12
  %38 = load void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %37, align 8
  tail call void %38(%class.SkCanvas* %0) #15
  %39 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %29, align 8
  %40 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %39, i64 0, i32 4
  %41 = load i32, i32* %40, align 8
  %42 = add nsw i32 %41, -1
  store i32 %42, i32* %40, align 8
  %43 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 1
  %44 = tail call i8* @_ZN7SkDeque9push_backEv(%class.SkDeque* %43) #15
  %45 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %29, align 8
  %46 = bitcast i8* %44 to i64*
  store i64 0, i64* %46, align 8
  %47 = getelementptr inbounds i8, i8* %44, i64 8
  %48 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %45, i64 0, i32 1
  %49 = bitcast %class.SkBaseDevice** %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast i8* %47 to i64*
  store i64 %50, i64* %51, align 8
  %52 = getelementptr inbounds i8, i8* %44, i64 16
  %53 = bitcast i8* %52 to i64*
  store i64 0, i64* %53, align 8
  %54 = getelementptr inbounds i8, i8* %44, i64 24
  %55 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %45, i64 0, i32 3
  %56 = bitcast %class.SkM44* %55 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %56, i64 64, i1 false) #15
  %57 = getelementptr inbounds i8, i8* %44, i64 88
  %58 = bitcast i8* %57 to i32*
  store i32 0, i32* %58, align 8
  %59 = bitcast %"class.SkCanvas::MCRec"** %29 to i8**
  store i8* %44, i8** %59, align 8
  %60 = bitcast i8* %47 to %class.SkBaseDevice**
  %61 = load %class.SkBaseDevice*, %class.SkBaseDevice** %60, align 8
  %62 = bitcast %class.SkBaseDevice* %61 to void (%class.SkBaseDevice*)***
  %63 = load void (%class.SkBaseDevice*)**, void (%class.SkBaseDevice*)*** %62, align 8
  %64 = getelementptr inbounds void (%class.SkBaseDevice*)*, void (%class.SkBaseDevice*)** %63, i64 10
  %65 = load void (%class.SkBaseDevice*)*, void (%class.SkBaseDevice*)** %64, align 8
  tail call void %65(%class.SkBaseDevice* %61) #15
  br label %66

66:                                               ; preds = %2, %34, %28, %24
  %67 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %68 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %67, align 8
  %69 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %68, i64 0, i32 1
  %70 = load %class.SkBaseDevice*, %class.SkBaseDevice** %69, align 8
  %71 = bitcast %class.SkBaseDevice* %70 to void (%class.SkBaseDevice*, %struct.SkIRect*)***
  %72 = load void (%class.SkBaseDevice*, %struct.SkIRect*)**, void (%class.SkBaseDevice*, %struct.SkIRect*)*** %71, align 8
  %73 = getelementptr inbounds void (%class.SkBaseDevice*, %struct.SkIRect*)*, void (%class.SkBaseDevice*, %struct.SkIRect*)** %72, i64 18
  %74 = load void (%class.SkBaseDevice*, %struct.SkIRect*)*, void (%class.SkBaseDevice*, %struct.SkIRect*)** %73, align 8
  tail call void %74(%class.SkBaseDevice* %70, %struct.SkIRect* %4) #15
  %75 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %67, align 8
  %76 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %75, i64 0, i32 1
  %77 = load %class.SkBaseDevice*, %class.SkBaseDevice** %76, align 8
  %78 = bitcast %class.SkBaseDevice* %77 to i32 (%class.SkBaseDevice*)***
  %79 = load i32 (%class.SkBaseDevice*)**, i32 (%class.SkBaseDevice*)*** %78, align 8
  %80 = getelementptr inbounds i32 (%class.SkBaseDevice*)*, i32 (%class.SkBaseDevice*)** %79, i64 22
  %81 = load i32 (%class.SkBaseDevice*)*, i32 (%class.SkBaseDevice*)** %80, align 8
  %82 = tail call i32 %81(%class.SkBaseDevice* %77) #15
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %116, label %84

84:                                               ; preds = %66
  %85 = bitcast { <2 x float>, <2 x float> }* %3 to %struct.SkRect*
  %86 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %77, i64 0, i32 5
  %87 = bitcast { <2 x float>, <2 x float> }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %87) #15
  %88 = bitcast %class.SkBaseDevice* %77 to { i64, i64 } (%class.SkBaseDevice*)***
  %89 = load { i64, i64 } (%class.SkBaseDevice*)**, { i64, i64 } (%class.SkBaseDevice*)*** %88, align 8
  %90 = getelementptr inbounds { i64, i64 } (%class.SkBaseDevice*)*, { i64, i64 } (%class.SkBaseDevice*)** %89, i64 23
  %91 = load { i64, i64 } (%class.SkBaseDevice*)*, { i64, i64 } (%class.SkBaseDevice*)** %90, align 8
  %92 = tail call { i64, i64 } %91(%class.SkBaseDevice* %77) #15
  %93 = extractvalue { i64, i64 } %92, 0
  %94 = trunc i64 %93 to i32
  %95 = lshr i64 %93, 32
  %96 = trunc i64 %95 to i32
  %97 = extractvalue { i64, i64 } %92, 1
  %98 = sitofp i32 %94 to float
  %99 = insertelement <2 x float> undef, float %98, i32 0
  %100 = sitofp i32 %96 to float
  %101 = insertelement <2 x float> %99, float %100, i32 1
  %102 = trunc i64 %97 to i32
  %103 = sitofp i32 %102 to float
  %104 = insertelement <2 x float> undef, float %103, i32 0
  %105 = lshr i64 %97, 32
  %106 = trunc i64 %105 to i32
  %107 = sitofp i32 %106 to float
  %108 = insertelement <2 x float> %104, float %107, i32 1
  %109 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 0
  store <2 x float> %101, <2 x float>* %109, align 8
  %110 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 1
  store <2 x float> %108, <2 x float>* %110, align 8
  %111 = call { <2 x float>, <2 x float> } @_ZN12SkMatrixPriv7MapRectERK5SkM44RK6SkRect(%class.SkM44* dereferenceable(64) %86, %struct.SkRect* nonnull dereferenceable(16) %85) #15
  %112 = extractvalue { <2 x float>, <2 x float> } %111, 0
  %113 = extractvalue { <2 x float>, <2 x float> } %111, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %87) #15
  %114 = fadd <2 x float> %112, <float -1.000000e+00, float -1.000000e+00>
  %115 = fadd <2 x float> %113, <float 1.000000e+00, float 1.000000e+00>
  br label %116

116:                                              ; preds = %66, %84
  %117 = phi <2 x float> [ %114, %84 ], [ zeroinitializer, %66 ]
  %118 = phi <2 x float> [ %115, %84 ], [ zeroinitializer, %66 ]
  %119 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 11
  %120 = bitcast %struct.SkRect* %119 to <2 x float>*
  store <2 x float> %117, <2 x float>* %120, align 8
  %121 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 11, i32 2
  %122 = bitcast float* %121 to <2 x float>*
  store <2 x float> %118, <2 x float>* %122, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas28androidFramework_replaceClipERK7SkIRect(%class.SkCanvas*, %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca { <2 x float>, <2 x float> }, align 8
  %4 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %5 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %4, align 8
  %6 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %5, i64 0, i32 4
  %7 = load i32, i32* %6, align 8
  %8 = icmp sgt i32 %7, 0
  br i1 %8, label %9, label %42

9:                                                ; preds = %2
  %10 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*)***
  %11 = load void (%class.SkCanvas*)**, void (%class.SkCanvas*)*** %10, align 8
  %12 = getelementptr inbounds void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %11, i64 12
  %13 = load void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %12, align 8
  tail call void %13(%class.SkCanvas* %0) #15
  %14 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %4, align 8
  %15 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %14, i64 0, i32 4
  %16 = load i32, i32* %15, align 8
  %17 = add nsw i32 %16, -1
  store i32 %17, i32* %15, align 8
  %18 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 1
  %19 = tail call i8* @_ZN7SkDeque9push_backEv(%class.SkDeque* %18) #15
  %20 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %4, align 8
  %21 = bitcast i8* %19 to i64*
  store i64 0, i64* %21, align 8
  %22 = getelementptr inbounds i8, i8* %19, i64 8
  %23 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %20, i64 0, i32 1
  %24 = bitcast %class.SkBaseDevice** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast i8* %22 to i64*
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds i8, i8* %19, i64 16
  %28 = bitcast i8* %27 to i64*
  store i64 0, i64* %28, align 8
  %29 = getelementptr inbounds i8, i8* %19, i64 24
  %30 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %20, i64 0, i32 3
  %31 = bitcast %class.SkM44* %30 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %31, i64 64, i1 false) #15
  %32 = getelementptr inbounds i8, i8* %19, i64 88
  %33 = bitcast i8* %32 to i32*
  store i32 0, i32* %33, align 8
  %34 = bitcast %"class.SkCanvas::MCRec"** %4 to i8**
  store i8* %19, i8** %34, align 8
  %35 = bitcast i8* %22 to %class.SkBaseDevice**
  %36 = load %class.SkBaseDevice*, %class.SkBaseDevice** %35, align 8
  %37 = bitcast %class.SkBaseDevice* %36 to void (%class.SkBaseDevice*)***
  %38 = load void (%class.SkBaseDevice*)**, void (%class.SkBaseDevice*)*** %37, align 8
  %39 = getelementptr inbounds void (%class.SkBaseDevice*)*, void (%class.SkBaseDevice*)** %38, i64 10
  %40 = load void (%class.SkBaseDevice*)*, void (%class.SkBaseDevice*)** %39, align 8
  tail call void %40(%class.SkBaseDevice* %36) #15
  %41 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %4, align 8
  br label %42

42:                                               ; preds = %2, %9
  %43 = phi %"class.SkCanvas::MCRec"* [ %5, %2 ], [ %41, %9 ]
  %44 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %43, i64 0, i32 1
  %45 = load %class.SkBaseDevice*, %class.SkBaseDevice** %44, align 8
  %46 = bitcast %class.SkBaseDevice* %45 to void (%class.SkBaseDevice*, %struct.SkIRect*)***
  %47 = load void (%class.SkBaseDevice*, %struct.SkIRect*)**, void (%class.SkBaseDevice*, %struct.SkIRect*)*** %46, align 8
  %48 = getelementptr inbounds void (%class.SkBaseDevice*, %struct.SkIRect*)*, void (%class.SkBaseDevice*, %struct.SkIRect*)** %47, i64 17
  %49 = load void (%class.SkBaseDevice*, %struct.SkIRect*)*, void (%class.SkBaseDevice*, %struct.SkIRect*)** %48, align 8
  tail call void %49(%class.SkBaseDevice* %45, %struct.SkIRect* dereferenceable(16) %1) #15
  %50 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %4, align 8
  %51 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %50, i64 0, i32 1
  %52 = load %class.SkBaseDevice*, %class.SkBaseDevice** %51, align 8
  %53 = bitcast %class.SkBaseDevice* %52 to i32 (%class.SkBaseDevice*)***
  %54 = load i32 (%class.SkBaseDevice*)**, i32 (%class.SkBaseDevice*)*** %53, align 8
  %55 = getelementptr inbounds i32 (%class.SkBaseDevice*)*, i32 (%class.SkBaseDevice*)** %54, i64 22
  %56 = load i32 (%class.SkBaseDevice*)*, i32 (%class.SkBaseDevice*)** %55, align 8
  %57 = tail call i32 %56(%class.SkBaseDevice* %52) #15
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %91, label %59

59:                                               ; preds = %42
  %60 = bitcast { <2 x float>, <2 x float> }* %3 to %struct.SkRect*
  %61 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %52, i64 0, i32 5
  %62 = bitcast { <2 x float>, <2 x float> }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %62) #15
  %63 = bitcast %class.SkBaseDevice* %52 to { i64, i64 } (%class.SkBaseDevice*)***
  %64 = load { i64, i64 } (%class.SkBaseDevice*)**, { i64, i64 } (%class.SkBaseDevice*)*** %63, align 8
  %65 = getelementptr inbounds { i64, i64 } (%class.SkBaseDevice*)*, { i64, i64 } (%class.SkBaseDevice*)** %64, i64 23
  %66 = load { i64, i64 } (%class.SkBaseDevice*)*, { i64, i64 } (%class.SkBaseDevice*)** %65, align 8
  %67 = tail call { i64, i64 } %66(%class.SkBaseDevice* %52) #15
  %68 = extractvalue { i64, i64 } %67, 0
  %69 = trunc i64 %68 to i32
  %70 = lshr i64 %68, 32
  %71 = trunc i64 %70 to i32
  %72 = extractvalue { i64, i64 } %67, 1
  %73 = sitofp i32 %69 to float
  %74 = insertelement <2 x float> undef, float %73, i32 0
  %75 = sitofp i32 %71 to float
  %76 = insertelement <2 x float> %74, float %75, i32 1
  %77 = trunc i64 %72 to i32
  %78 = sitofp i32 %77 to float
  %79 = insertelement <2 x float> undef, float %78, i32 0
  %80 = lshr i64 %72, 32
  %81 = trunc i64 %80 to i32
  %82 = sitofp i32 %81 to float
  %83 = insertelement <2 x float> %79, float %82, i32 1
  %84 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 0
  store <2 x float> %76, <2 x float>* %84, align 8
  %85 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 1
  store <2 x float> %83, <2 x float>* %85, align 8
  %86 = call { <2 x float>, <2 x float> } @_ZN12SkMatrixPriv7MapRectERK5SkM44RK6SkRect(%class.SkM44* dereferenceable(64) %61, %struct.SkRect* nonnull dereferenceable(16) %60) #15
  %87 = extractvalue { <2 x float>, <2 x float> } %86, 0
  %88 = extractvalue { <2 x float>, <2 x float> } %86, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %62) #15
  %89 = fadd <2 x float> %87, <float -1.000000e+00, float -1.000000e+00>
  %90 = fadd <2 x float> %88, <float 1.000000e+00, float 1.000000e+00>
  br label %91

91:                                               ; preds = %42, %59
  %92 = phi <2 x float> [ %89, %59 ], [ zeroinitializer, %42 ]
  %93 = phi <2 x float> [ %90, %59 ], [ zeroinitializer, %42 ]
  %94 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 11
  %95 = bitcast %struct.SkRect* %94 to <2 x float>*
  store <2 x float> %92, <2 x float>* %95, align 8
  %96 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 11, i32 2
  %97 = bitcast float* %96 to <2 x float>*
  store <2 x float> %93, <2 x float>* %97, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas9clipRRectERK7SkRRect8SkClipOpb(%class.SkCanvas*, %class.SkRRect* dereferenceable(52), i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %6 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %5, align 8
  %7 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %6, i64 0, i32 4
  %8 = load i32, i32* %7, align 8
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %42

10:                                               ; preds = %4
  %11 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*)***
  %12 = load void (%class.SkCanvas*)**, void (%class.SkCanvas*)*** %11, align 8
  %13 = getelementptr inbounds void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %12, i64 12
  %14 = load void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %13, align 8
  tail call void %14(%class.SkCanvas* %0) #15
  %15 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %5, align 8
  %16 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %15, i64 0, i32 4
  %17 = load i32, i32* %16, align 8
  %18 = add nsw i32 %17, -1
  store i32 %18, i32* %16, align 8
  %19 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 1
  %20 = tail call i8* @_ZN7SkDeque9push_backEv(%class.SkDeque* %19) #15
  %21 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %5, align 8
  %22 = bitcast i8* %20 to i64*
  store i64 0, i64* %22, align 8
  %23 = getelementptr inbounds i8, i8* %20, i64 8
  %24 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %21, i64 0, i32 1
  %25 = bitcast %class.SkBaseDevice** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast i8* %23 to i64*
  store i64 %26, i64* %27, align 8
  %28 = getelementptr inbounds i8, i8* %20, i64 16
  %29 = bitcast i8* %28 to i64*
  store i64 0, i64* %29, align 8
  %30 = getelementptr inbounds i8, i8* %20, i64 24
  %31 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %21, i64 0, i32 3
  %32 = bitcast %class.SkM44* %31 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %32, i64 64, i1 false) #15
  %33 = getelementptr inbounds i8, i8* %20, i64 88
  %34 = bitcast i8* %33 to i32*
  store i32 0, i32* %34, align 8
  %35 = bitcast %"class.SkCanvas::MCRec"** %5 to i8**
  store i8* %20, i8** %35, align 8
  %36 = bitcast i8* %23 to %class.SkBaseDevice**
  %37 = load %class.SkBaseDevice*, %class.SkBaseDevice** %36, align 8
  %38 = bitcast %class.SkBaseDevice* %37 to void (%class.SkBaseDevice*)***
  %39 = load void (%class.SkBaseDevice*)**, void (%class.SkBaseDevice*)*** %38, align 8
  %40 = getelementptr inbounds void (%class.SkBaseDevice*)*, void (%class.SkBaseDevice*)** %39, i64 10
  %41 = load void (%class.SkBaseDevice*)*, void (%class.SkBaseDevice*)** %40, align 8
  tail call void %41(%class.SkBaseDevice* %37) #15
  br label %42

42:                                               ; preds = %4, %10
  %43 = zext i1 %3 to i32
  %44 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %53

47:                                               ; preds = %42
  %48 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 0
  %49 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*, %struct.SkRect*, i32, i32)***
  %50 = load void (%class.SkCanvas*, %struct.SkRect*, i32, i32)**, void (%class.SkCanvas*, %struct.SkRect*, i32, i32)*** %49, align 8
  %51 = getelementptr inbounds void (%class.SkCanvas*, %struct.SkRect*, i32, i32)*, void (%class.SkCanvas*, %struct.SkRect*, i32, i32)** %50, i64 46
  %52 = load void (%class.SkCanvas*, %struct.SkRect*, i32, i32)*, void (%class.SkCanvas*, %struct.SkRect*, i32, i32)** %51, align 8
  tail call void %52(%class.SkCanvas* %0, %struct.SkRect* dereferenceable(16) %48, i32 %2, i32 %43) #15
  br label %58

53:                                               ; preds = %42
  %54 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*, %class.SkRRect*, i32, i32)***
  %55 = load void (%class.SkCanvas*, %class.SkRRect*, i32, i32)**, void (%class.SkCanvas*, %class.SkRRect*, i32, i32)*** %54, align 8
  %56 = getelementptr inbounds void (%class.SkCanvas*, %class.SkRRect*, i32, i32)*, void (%class.SkCanvas*, %class.SkRRect*, i32, i32)** %55, i64 47
  %57 = load void (%class.SkCanvas*, %class.SkRRect*, i32, i32)*, void (%class.SkCanvas*, %class.SkRRect*, i32, i32)** %56, align 8
  tail call void %57(%class.SkCanvas* %0, %class.SkRRect* dereferenceable(52) %1, i32 %2, i32 %43) #15
  br label %58

58:                                               ; preds = %53, %47
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas11onClipRRectERK7SkRRect8SkClipOpNS_13ClipEdgeStyleE(%class.SkCanvas*, %class.SkRRect* dereferenceable(52), i32, i32) unnamed_addr #0 align 2 {
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = icmp eq i32 %3, 1
  %7 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %8 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %7, align 8
  %9 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %8, i64 0, i32 1
  %10 = load %class.SkBaseDevice*, %class.SkBaseDevice** %9, align 8
  %11 = bitcast %class.SkBaseDevice* %10 to void (%class.SkBaseDevice*, %class.SkRRect*, i32, i1)***
  %12 = load void (%class.SkBaseDevice*, %class.SkRRect*, i32, i1)**, void (%class.SkBaseDevice*, %class.SkRRect*, i32, i1)*** %11, align 8
  %13 = getelementptr inbounds void (%class.SkBaseDevice*, %class.SkRRect*, i32, i1)*, void (%class.SkBaseDevice*, %class.SkRRect*, i32, i1)** %12, i64 13
  %14 = load void (%class.SkBaseDevice*, %class.SkRRect*, i32, i1)*, void (%class.SkBaseDevice*, %class.SkRRect*, i32, i1)** %13, align 8
  tail call void %14(%class.SkBaseDevice* %10, %class.SkRRect* dereferenceable(52) %1, i32 %2, i1 zeroext %6) #15
  %15 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %7, align 8
  %16 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %15, i64 0, i32 1
  %17 = load %class.SkBaseDevice*, %class.SkBaseDevice** %16, align 8
  %18 = bitcast %class.SkBaseDevice* %17 to i32 (%class.SkBaseDevice*)***
  %19 = load i32 (%class.SkBaseDevice*)**, i32 (%class.SkBaseDevice*)*** %18, align 8
  %20 = getelementptr inbounds i32 (%class.SkBaseDevice*)*, i32 (%class.SkBaseDevice*)** %19, i64 22
  %21 = load i32 (%class.SkBaseDevice*)*, i32 (%class.SkBaseDevice*)** %20, align 8
  %22 = tail call i32 %21(%class.SkBaseDevice* %17) #15
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %56, label %24

24:                                               ; preds = %4
  %25 = bitcast { <2 x float>, <2 x float> }* %5 to %struct.SkRect*
  %26 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %17, i64 0, i32 5
  %27 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #15
  %28 = bitcast %class.SkBaseDevice* %17 to { i64, i64 } (%class.SkBaseDevice*)***
  %29 = load { i64, i64 } (%class.SkBaseDevice*)**, { i64, i64 } (%class.SkBaseDevice*)*** %28, align 8
  %30 = getelementptr inbounds { i64, i64 } (%class.SkBaseDevice*)*, { i64, i64 } (%class.SkBaseDevice*)** %29, i64 23
  %31 = load { i64, i64 } (%class.SkBaseDevice*)*, { i64, i64 } (%class.SkBaseDevice*)** %30, align 8
  %32 = tail call { i64, i64 } %31(%class.SkBaseDevice* %17) #15
  %33 = extractvalue { i64, i64 } %32, 0
  %34 = trunc i64 %33 to i32
  %35 = lshr i64 %33, 32
  %36 = trunc i64 %35 to i32
  %37 = extractvalue { i64, i64 } %32, 1
  %38 = sitofp i32 %34 to float
  %39 = insertelement <2 x float> undef, float %38, i32 0
  %40 = sitofp i32 %36 to float
  %41 = insertelement <2 x float> %39, float %40, i32 1
  %42 = trunc i64 %37 to i32
  %43 = sitofp i32 %42 to float
  %44 = insertelement <2 x float> undef, float %43, i32 0
  %45 = lshr i64 %37, 32
  %46 = trunc i64 %45 to i32
  %47 = sitofp i32 %46 to float
  %48 = insertelement <2 x float> %44, float %47, i32 1
  %49 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  store <2 x float> %41, <2 x float>* %49, align 8
  %50 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  store <2 x float> %48, <2 x float>* %50, align 8
  %51 = call { <2 x float>, <2 x float> } @_ZN12SkMatrixPriv7MapRectERK5SkM44RK6SkRect(%class.SkM44* dereferenceable(64) %26, %struct.SkRect* nonnull dereferenceable(16) %25) #15
  %52 = extractvalue { <2 x float>, <2 x float> } %51, 0
  %53 = extractvalue { <2 x float>, <2 x float> } %51, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #15
  %54 = fadd <2 x float> %52, <float -1.000000e+00, float -1.000000e+00>
  %55 = fadd <2 x float> %53, <float 1.000000e+00, float 1.000000e+00>
  br label %56

56:                                               ; preds = %4, %24
  %57 = phi <2 x float> [ %54, %24 ], [ zeroinitializer, %4 ]
  %58 = phi <2 x float> [ %55, %24 ], [ zeroinitializer, %4 ]
  %59 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 11
  %60 = bitcast %struct.SkRect* %59 to <2 x float>*
  store <2 x float> %57, <2 x float>* %60, align 8
  %61 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 11, i32 2
  %62 = bitcast float* %61 to <2 x float>*
  store <2 x float> %58, <2 x float>* %62, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas8clipPathERK6SkPath8SkClipOpb(%class.SkCanvas*, %class.SkPath* dereferenceable(16), i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.SkMatrix, align 4
  %6 = alloca %struct.SkRect, align 4
  %7 = alloca %class.SkRRect, align 4
  %8 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %9 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %8, align 8
  %10 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %9, i64 0, i32 4
  %11 = load i32, i32* %10, align 8
  %12 = icmp sgt i32 %11, 0
  br i1 %12, label %13, label %45

13:                                               ; preds = %4
  %14 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*)***
  %15 = load void (%class.SkCanvas*)**, void (%class.SkCanvas*)*** %14, align 8
  %16 = getelementptr inbounds void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %15, i64 12
  %17 = load void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %16, align 8
  tail call void %17(%class.SkCanvas* %0) #15
  %18 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %8, align 8
  %19 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %18, i64 0, i32 4
  %20 = load i32, i32* %19, align 8
  %21 = add nsw i32 %20, -1
  store i32 %21, i32* %19, align 8
  %22 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 1
  %23 = tail call i8* @_ZN7SkDeque9push_backEv(%class.SkDeque* %22) #15
  %24 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %8, align 8
  %25 = bitcast i8* %23 to i64*
  store i64 0, i64* %25, align 8
  %26 = getelementptr inbounds i8, i8* %23, i64 8
  %27 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %24, i64 0, i32 1
  %28 = bitcast %class.SkBaseDevice** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast i8* %26 to i64*
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds i8, i8* %23, i64 16
  %32 = bitcast i8* %31 to i64*
  store i64 0, i64* %32, align 8
  %33 = getelementptr inbounds i8, i8* %23, i64 24
  %34 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %24, i64 0, i32 3
  %35 = bitcast %class.SkM44* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %35, i64 64, i1 false) #15
  %36 = getelementptr inbounds i8, i8* %23, i64 88
  %37 = bitcast i8* %36 to i32*
  store i32 0, i32* %37, align 8
  %38 = bitcast %"class.SkCanvas::MCRec"** %8 to i8**
  store i8* %23, i8** %38, align 8
  %39 = bitcast i8* %26 to %class.SkBaseDevice**
  %40 = load %class.SkBaseDevice*, %class.SkBaseDevice** %39, align 8
  %41 = bitcast %class.SkBaseDevice* %40 to void (%class.SkBaseDevice*)***
  %42 = load void (%class.SkBaseDevice*)**, void (%class.SkBaseDevice*)*** %41, align 8
  %43 = getelementptr inbounds void (%class.SkBaseDevice*)*, void (%class.SkBaseDevice*)** %42, i64 10
  %44 = load void (%class.SkBaseDevice*)*, void (%class.SkBaseDevice*)** %43, align 8
  tail call void %44(%class.SkBaseDevice* %40) #15
  br label %45

45:                                               ; preds = %4, %13
  %46 = zext i1 %3 to i32
  %47 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 4
  %48 = load i8, i8* %47, align 2
  %49 = and i8 %48, 2
  %50 = icmp eq i8 %49, 0
  %51 = bitcast %class.SkMatrix* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %51) #15
  br i1 %50, label %52, label %128

52:                                               ; preds = %45
  %53 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %8, align 8
  %54 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %53, i64 0, i32 3
  %55 = bitcast %class.SkM44* %54 to i32*
  %56 = load i32, i32* %55, align 4, !noalias !113
  %57 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %53, i64 0, i32 3, i32 0, i64 4
  %58 = bitcast float* %57 to i32*
  %59 = load i32, i32* %58, align 4, !noalias !113
  %60 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %53, i64 0, i32 3, i32 0, i64 12
  %61 = bitcast float* %60 to i32*
  %62 = load i32, i32* %61, align 4, !noalias !113
  %63 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %53, i64 0, i32 3, i32 0, i64 1
  %64 = bitcast float* %63 to i32*
  %65 = load i32, i32* %64, align 4, !noalias !113
  %66 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %53, i64 0, i32 3, i32 0, i64 5
  %67 = bitcast float* %66 to i32*
  %68 = load i32, i32* %67, align 4, !noalias !113
  %69 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %53, i64 0, i32 3, i32 0, i64 13
  %70 = bitcast float* %69 to i32*
  %71 = load i32, i32* %70, align 4, !noalias !113
  %72 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %53, i64 0, i32 3, i32 0, i64 3
  %73 = bitcast float* %72 to i32*
  %74 = load i32, i32* %73, align 4, !noalias !113
  %75 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %53, i64 0, i32 3, i32 0, i64 7
  %76 = bitcast float* %75 to i32*
  %77 = load i32, i32* %76, align 4, !noalias !113
  %78 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %53, i64 0, i32 3, i32 0, i64 15
  %79 = bitcast float* %78 to i32*
  %80 = load i32, i32* %79, align 4, !noalias !113
  %81 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 1
  %82 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 1
  %83 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 2
  %84 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 3
  %85 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 4
  %86 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 5
  %87 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 6
  %88 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 7
  %89 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 8
  %90 = bitcast %class.SkMatrix* %5 to i32*
  store i32 %56, i32* %90, align 4, !alias.scope !116
  %91 = bitcast float* %82 to i32*
  store i32 %59, i32* %91, align 4, !alias.scope !116
  %92 = bitcast float* %83 to i32*
  store i32 %62, i32* %92, align 4, !alias.scope !116
  %93 = bitcast float* %84 to i32*
  store i32 %65, i32* %93, align 4, !alias.scope !116
  %94 = bitcast float* %85 to i32*
  store i32 %68, i32* %94, align 4, !alias.scope !116
  %95 = bitcast float* %86 to i32*
  store i32 %71, i32* %95, align 4, !alias.scope !116
  %96 = bitcast float* %87 to i32*
  store i32 %74, i32* %96, align 4, !alias.scope !116
  %97 = bitcast float* %88 to i32*
  store i32 %77, i32* %97, align 4, !alias.scope !116
  %98 = bitcast float* %89 to i32*
  store i32 %80, i32* %98, align 4, !alias.scope !116
  store i32 128, i32* %81, align 4, !alias.scope !116
  %99 = call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* nonnull %5) #15
  %100 = and i8 %99, 16
  %101 = icmp eq i8 %100, 0
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %51) #15
  br i1 %101, label %129, label %102

102:                                              ; preds = %52
  %103 = bitcast %struct.SkRect* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %103) #15
  %104 = bitcast %struct.SkRect* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %104, i8 -1, i64 16, i1 false)
  %105 = call zeroext i1 @_ZNK6SkPath6isRectEP6SkRectPbP15SkPathDirection(%class.SkPath* %1, %struct.SkRect* nonnull %6, i8* null, i32* null) #15
  br i1 %105, label %106, label %111

106:                                              ; preds = %102
  %107 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*, %struct.SkRect*, i32, i32)***
  %108 = load void (%class.SkCanvas*, %struct.SkRect*, i32, i32)**, void (%class.SkCanvas*, %struct.SkRect*, i32, i32)*** %107, align 8
  %109 = getelementptr inbounds void (%class.SkCanvas*, %struct.SkRect*, i32, i32)*, void (%class.SkCanvas*, %struct.SkRect*, i32, i32)** %108, i64 46
  %110 = load void (%class.SkCanvas*, %struct.SkRect*, i32, i32)*, void (%class.SkCanvas*, %struct.SkRect*, i32, i32)** %109, align 8
  call void %110(%class.SkCanvas* %0, %struct.SkRect* nonnull dereferenceable(16) %6, i32 %2, i32 %46) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %103) #15
  br label %134

111:                                              ; preds = %102
  %112 = bitcast %class.SkRRect* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %112) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %112, i8 0, i64 52, i1 false) #15
  %113 = call zeroext i1 @_ZNK6SkPath6isOvalEP6SkRect(%class.SkPath* %1, %struct.SkRect* nonnull %6) #15
  br i1 %113, label %114, label %119

114:                                              ; preds = %111
  call void @_ZN7SkRRect7setOvalERK6SkRect(%class.SkRRect* nonnull %7, %struct.SkRect* nonnull dereferenceable(16) %6) #15
  %115 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*, %class.SkRRect*, i32, i32)***
  %116 = load void (%class.SkCanvas*, %class.SkRRect*, i32, i32)**, void (%class.SkCanvas*, %class.SkRRect*, i32, i32)*** %115, align 8
  %117 = getelementptr inbounds void (%class.SkCanvas*, %class.SkRRect*, i32, i32)*, void (%class.SkCanvas*, %class.SkRRect*, i32, i32)** %116, i64 47
  %118 = load void (%class.SkCanvas*, %class.SkRRect*, i32, i32)*, void (%class.SkCanvas*, %class.SkRRect*, i32, i32)** %117, align 8
  call void %118(%class.SkCanvas* %0, %class.SkRRect* nonnull dereferenceable(52) %7, i32 %2, i32 %46) #15
  br label %126

119:                                              ; preds = %111
  %120 = call zeroext i1 @_ZNK6SkPath7isRRectEP7SkRRect(%class.SkPath* %1, %class.SkRRect* nonnull %7) #15
  br i1 %120, label %121, label %127

121:                                              ; preds = %119
  %122 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*, %class.SkRRect*, i32, i32)***
  %123 = load void (%class.SkCanvas*, %class.SkRRect*, i32, i32)**, void (%class.SkCanvas*, %class.SkRRect*, i32, i32)*** %122, align 8
  %124 = getelementptr inbounds void (%class.SkCanvas*, %class.SkRRect*, i32, i32)*, void (%class.SkCanvas*, %class.SkRRect*, i32, i32)** %123, i64 47
  %125 = load void (%class.SkCanvas*, %class.SkRRect*, i32, i32)*, void (%class.SkCanvas*, %class.SkRRect*, i32, i32)** %124, align 8
  call void %125(%class.SkCanvas* %0, %class.SkRRect* nonnull dereferenceable(52) %7, i32 %2, i32 %46) #15
  br label %126

126:                                              ; preds = %114, %121
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %112) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %103) #15
  br label %134

127:                                              ; preds = %119
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %112) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %103) #15
  br label %129

128:                                              ; preds = %45
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %51) #15
  br label %129

129:                                              ; preds = %52, %127, %128
  %130 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*, %class.SkPath*, i32, i32)***
  %131 = load void (%class.SkCanvas*, %class.SkPath*, i32, i32)**, void (%class.SkCanvas*, %class.SkPath*, i32, i32)*** %130, align 8
  %132 = getelementptr inbounds void (%class.SkCanvas*, %class.SkPath*, i32, i32)*, void (%class.SkCanvas*, %class.SkPath*, i32, i32)** %131, i64 48
  %133 = load void (%class.SkCanvas*, %class.SkPath*, i32, i32)*, void (%class.SkCanvas*, %class.SkPath*, i32, i32)** %132, align 8
  call void %133(%class.SkCanvas* %0, %class.SkPath* dereferenceable(16) %1, i32 %2, i32 %46) #15
  br label %134

134:                                              ; preds = %126, %106, %129
  ret void
}

declare zeroext i1 @_ZNK6SkPath6isRectEP6SkRectPbP15SkPathDirection(%class.SkPath*, %struct.SkRect*, i8*, i32*) local_unnamed_addr #4

declare zeroext i1 @_ZNK6SkPath6isOvalEP6SkRect(%class.SkPath*, %struct.SkRect*) local_unnamed_addr #4

declare void @_ZN7SkRRect7setOvalERK6SkRect(%class.SkRRect*, %struct.SkRect* dereferenceable(16)) local_unnamed_addr #4

declare zeroext i1 @_ZNK6SkPath7isRRectEP7SkRRect(%class.SkPath*, %class.SkRRect*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas10onClipPathERK6SkPath8SkClipOpNS_13ClipEdgeStyleE(%class.SkCanvas*, %class.SkPath* dereferenceable(16), i32, i32) unnamed_addr #0 align 2 {
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = icmp eq i32 %3, 1
  %7 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %8 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %7, align 8
  %9 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %8, i64 0, i32 1
  %10 = load %class.SkBaseDevice*, %class.SkBaseDevice** %9, align 8
  %11 = bitcast %class.SkBaseDevice* %10 to void (%class.SkBaseDevice*, %class.SkPath*, i32, i1)***
  %12 = load void (%class.SkBaseDevice*, %class.SkPath*, i32, i1)**, void (%class.SkBaseDevice*, %class.SkPath*, i32, i1)*** %11, align 8
  %13 = getelementptr inbounds void (%class.SkBaseDevice*, %class.SkPath*, i32, i1)*, void (%class.SkBaseDevice*, %class.SkPath*, i32, i1)** %12, i64 14
  %14 = load void (%class.SkBaseDevice*, %class.SkPath*, i32, i1)*, void (%class.SkBaseDevice*, %class.SkPath*, i32, i1)** %13, align 8
  tail call void %14(%class.SkBaseDevice* %10, %class.SkPath* dereferenceable(16) %1, i32 %2, i1 zeroext %6) #15
  %15 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %7, align 8
  %16 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %15, i64 0, i32 1
  %17 = load %class.SkBaseDevice*, %class.SkBaseDevice** %16, align 8
  %18 = bitcast %class.SkBaseDevice* %17 to i32 (%class.SkBaseDevice*)***
  %19 = load i32 (%class.SkBaseDevice*)**, i32 (%class.SkBaseDevice*)*** %18, align 8
  %20 = getelementptr inbounds i32 (%class.SkBaseDevice*)*, i32 (%class.SkBaseDevice*)** %19, i64 22
  %21 = load i32 (%class.SkBaseDevice*)*, i32 (%class.SkBaseDevice*)** %20, align 8
  %22 = tail call i32 %21(%class.SkBaseDevice* %17) #15
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %56, label %24

24:                                               ; preds = %4
  %25 = bitcast { <2 x float>, <2 x float> }* %5 to %struct.SkRect*
  %26 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %17, i64 0, i32 5
  %27 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #15
  %28 = bitcast %class.SkBaseDevice* %17 to { i64, i64 } (%class.SkBaseDevice*)***
  %29 = load { i64, i64 } (%class.SkBaseDevice*)**, { i64, i64 } (%class.SkBaseDevice*)*** %28, align 8
  %30 = getelementptr inbounds { i64, i64 } (%class.SkBaseDevice*)*, { i64, i64 } (%class.SkBaseDevice*)** %29, i64 23
  %31 = load { i64, i64 } (%class.SkBaseDevice*)*, { i64, i64 } (%class.SkBaseDevice*)** %30, align 8
  %32 = tail call { i64, i64 } %31(%class.SkBaseDevice* %17) #15
  %33 = extractvalue { i64, i64 } %32, 0
  %34 = trunc i64 %33 to i32
  %35 = lshr i64 %33, 32
  %36 = trunc i64 %35 to i32
  %37 = extractvalue { i64, i64 } %32, 1
  %38 = sitofp i32 %34 to float
  %39 = insertelement <2 x float> undef, float %38, i32 0
  %40 = sitofp i32 %36 to float
  %41 = insertelement <2 x float> %39, float %40, i32 1
  %42 = trunc i64 %37 to i32
  %43 = sitofp i32 %42 to float
  %44 = insertelement <2 x float> undef, float %43, i32 0
  %45 = lshr i64 %37, 32
  %46 = trunc i64 %45 to i32
  %47 = sitofp i32 %46 to float
  %48 = insertelement <2 x float> %44, float %47, i32 1
  %49 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  store <2 x float> %41, <2 x float>* %49, align 8
  %50 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  store <2 x float> %48, <2 x float>* %50, align 8
  %51 = call { <2 x float>, <2 x float> } @_ZN12SkMatrixPriv7MapRectERK5SkM44RK6SkRect(%class.SkM44* dereferenceable(64) %26, %struct.SkRect* nonnull dereferenceable(16) %25) #15
  %52 = extractvalue { <2 x float>, <2 x float> } %51, 0
  %53 = extractvalue { <2 x float>, <2 x float> } %51, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #15
  %54 = fadd <2 x float> %52, <float -1.000000e+00, float -1.000000e+00>
  %55 = fadd <2 x float> %53, <float 1.000000e+00, float 1.000000e+00>
  br label %56

56:                                               ; preds = %4, %24
  %57 = phi <2 x float> [ %54, %24 ], [ zeroinitializer, %4 ]
  %58 = phi <2 x float> [ %55, %24 ], [ zeroinitializer, %4 ]
  %59 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 11
  %60 = bitcast %struct.SkRect* %59 to <2 x float>*
  store <2 x float> %57, <2 x float>* %60, align 8
  %61 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 11, i32 2
  %62 = bitcast float* %61 to <2 x float>*
  store <2 x float> %58, <2 x float>* %62, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas10clipShaderE5sk_spI8SkShaderE8SkClipOp(%class.SkCanvas*, %class.sk_sp.55* nocapture, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.sk_sp.55, align 8
  %5 = getelementptr inbounds %class.sk_sp.55, %class.sk_sp.55* %1, i64 0, i32 0
  %6 = load %class.SkShader*, %class.SkShader** %5, align 8
  %7 = icmp eq %class.SkShader* %6, null
  br i1 %7, label %76, label %8

8:                                                ; preds = %3
  %9 = bitcast %class.SkShader* %6 to i1 (%class.SkShader*)***
  %10 = load i1 (%class.SkShader*)**, i1 (%class.SkShader*)*** %9, align 8
  %11 = getelementptr inbounds i1 (%class.SkShader*)*, i1 (%class.SkShader*)** %10, i64 7
  %12 = load i1 (%class.SkShader*)*, i1 (%class.SkShader*)** %11, align 8
  %13 = tail call zeroext i1 %12(%class.SkShader* nonnull %6) #15
  br i1 %13, label %14, label %17

14:                                               ; preds = %8
  %15 = icmp eq i32 %2, 1
  br i1 %15, label %76, label %16

16:                                               ; preds = %14
  tail call void @_ZN8SkCanvas8clipRectERK6SkRect8SkClipOpb(%class.SkCanvas* %0, %struct.SkRect* nonnull dereferenceable(16) @.ref.tmp.2, i32 1, i1 zeroext false) #15
  br label %76

17:                                               ; preds = %8
  %18 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %19 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %18, align 8
  %20 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %19, i64 0, i32 4
  %21 = load i32, i32* %20, align 8
  %22 = icmp sgt i32 %21, 0
  br i1 %22, label %23, label %55

23:                                               ; preds = %17
  %24 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*)***
  %25 = load void (%class.SkCanvas*)**, void (%class.SkCanvas*)*** %24, align 8
  %26 = getelementptr inbounds void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %25, i64 12
  %27 = load void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %26, align 8
  tail call void %27(%class.SkCanvas* %0) #15
  %28 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %18, align 8
  %29 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %28, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = add nsw i32 %30, -1
  store i32 %31, i32* %29, align 8
  %32 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 1
  %33 = tail call i8* @_ZN7SkDeque9push_backEv(%class.SkDeque* %32) #15
  %34 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %18, align 8
  %35 = bitcast i8* %33 to i64*
  store i64 0, i64* %35, align 8
  %36 = getelementptr inbounds i8, i8* %33, i64 8
  %37 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %34, i64 0, i32 1
  %38 = bitcast %class.SkBaseDevice** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast i8* %36 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds i8, i8* %33, i64 16
  %42 = bitcast i8* %41 to i64*
  store i64 0, i64* %42, align 8
  %43 = getelementptr inbounds i8, i8* %33, i64 24
  %44 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %34, i64 0, i32 3
  %45 = bitcast %class.SkM44* %44 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %45, i64 64, i1 false) #15
  %46 = getelementptr inbounds i8, i8* %33, i64 88
  %47 = bitcast i8* %46 to i32*
  store i32 0, i32* %47, align 8
  %48 = bitcast %"class.SkCanvas::MCRec"** %18 to i8**
  store i8* %33, i8** %48, align 8
  %49 = bitcast i8* %36 to %class.SkBaseDevice**
  %50 = load %class.SkBaseDevice*, %class.SkBaseDevice** %49, align 8
  %51 = bitcast %class.SkBaseDevice* %50 to void (%class.SkBaseDevice*)***
  %52 = load void (%class.SkBaseDevice*)**, void (%class.SkBaseDevice*)*** %51, align 8
  %53 = getelementptr inbounds void (%class.SkBaseDevice*)*, void (%class.SkBaseDevice*)** %52, i64 10
  %54 = load void (%class.SkBaseDevice*)*, void (%class.SkBaseDevice*)** %53, align 8
  tail call void %54(%class.SkBaseDevice* %50) #15
  br label %55

55:                                               ; preds = %17, %23
  %56 = bitcast %class.sk_sp.55* %1 to i64*
  %57 = load i64, i64* %56, align 8
  store %class.SkShader* null, %class.SkShader** %5, align 8
  %58 = bitcast %class.sk_sp.55* %4 to i64*
  store i64 %57, i64* %58, align 8
  %59 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*, %class.sk_sp.55*, i32)***
  %60 = load void (%class.SkCanvas*, %class.sk_sp.55*, i32)**, void (%class.SkCanvas*, %class.sk_sp.55*, i32)*** %59, align 8
  %61 = getelementptr inbounds void (%class.SkCanvas*, %class.sk_sp.55*, i32)*, void (%class.SkCanvas*, %class.sk_sp.55*, i32)** %60, i64 49
  %62 = load void (%class.SkCanvas*, %class.sk_sp.55*, i32)*, void (%class.SkCanvas*, %class.sk_sp.55*, i32)** %61, align 8
  call void %62(%class.SkCanvas* %0, %class.sk_sp.55* nonnull %4, i32 %2) #15
  %63 = getelementptr inbounds %class.sk_sp.55, %class.sk_sp.55* %4, i64 0, i32 0
  %64 = load %class.SkShader*, %class.SkShader** %63, align 8
  %65 = icmp eq %class.SkShader* %64, null
  br i1 %65, label %76, label %66

66:                                               ; preds = %55
  %67 = getelementptr inbounds %class.SkShader, %class.SkShader* %64, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = atomicrmw add i32* %67, i32 -1 acq_rel
  %69 = icmp eq i32 %68, 1
  br i1 %69, label %70, label %76

70:                                               ; preds = %66
  %71 = bitcast %class.SkShader* %64 to %class.SkRefCntBase*
  %72 = bitcast %class.SkShader* %64 to void (%class.SkRefCntBase*)***
  %73 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %72, align 8
  %74 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %73, i64 2
  %75 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %74, align 8
  call void %75(%class.SkRefCntBase* nonnull %71) #15
  br label %76

76:                                               ; preds = %3, %70, %66, %55, %14, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas12onClipShaderE5sk_spI8SkShaderE8SkClipOp(%class.SkCanvas*, %class.sk_sp.55* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = alloca %class.sk_sp.55, align 8
  %6 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %7 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %6, align 8
  %8 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %7, i64 0, i32 1
  %9 = load %class.SkBaseDevice*, %class.SkBaseDevice** %8, align 8
  %10 = getelementptr inbounds %class.sk_sp.55, %class.sk_sp.55* %5, i64 0, i32 0
  %11 = getelementptr inbounds %class.sk_sp.55, %class.sk_sp.55* %1, i64 0, i32 0
  %12 = load %class.SkShader*, %class.SkShader** %11, align 8
  %13 = icmp eq %class.SkShader* %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %class.SkShader, %class.SkShader* %12, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw add i32* %15, i32 1 monotonic
  br label %17

17:                                               ; preds = %3, %14
  store %class.SkShader* %12, %class.SkShader** %10, align 8
  call void @_ZN12SkBaseDevice10clipShaderE5sk_spI8SkShaderE8SkClipOp(%class.SkBaseDevice* %9, %class.sk_sp.55* nonnull %5, i32 %2)
  %18 = load %class.SkShader*, %class.SkShader** %10, align 8
  %19 = icmp eq %class.SkShader* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %class.SkShader, %class.SkShader* %18, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %class.SkShader* %18 to %class.SkRefCntBase*
  %26 = bitcast %class.SkShader* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  call void %29(%class.SkRefCntBase* nonnull %25) #15
  br label %30

30:                                               ; preds = %17, %20, %24
  %31 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %6, align 8
  %32 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %31, i64 0, i32 1
  %33 = load %class.SkBaseDevice*, %class.SkBaseDevice** %32, align 8
  %34 = bitcast %class.SkBaseDevice* %33 to i32 (%class.SkBaseDevice*)***
  %35 = load i32 (%class.SkBaseDevice*)**, i32 (%class.SkBaseDevice*)*** %34, align 8
  %36 = getelementptr inbounds i32 (%class.SkBaseDevice*)*, i32 (%class.SkBaseDevice*)** %35, i64 22
  %37 = load i32 (%class.SkBaseDevice*)*, i32 (%class.SkBaseDevice*)** %36, align 8
  %38 = call i32 %37(%class.SkBaseDevice* %33) #15
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %72, label %40

40:                                               ; preds = %30
  %41 = bitcast { <2 x float>, <2 x float> }* %4 to %struct.SkRect*
  %42 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %33, i64 0, i32 5
  %43 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #15
  %44 = bitcast %class.SkBaseDevice* %33 to { i64, i64 } (%class.SkBaseDevice*)***
  %45 = load { i64, i64 } (%class.SkBaseDevice*)**, { i64, i64 } (%class.SkBaseDevice*)*** %44, align 8
  %46 = getelementptr inbounds { i64, i64 } (%class.SkBaseDevice*)*, { i64, i64 } (%class.SkBaseDevice*)** %45, i64 23
  %47 = load { i64, i64 } (%class.SkBaseDevice*)*, { i64, i64 } (%class.SkBaseDevice*)** %46, align 8
  %48 = call { i64, i64 } %47(%class.SkBaseDevice* %33) #15
  %49 = extractvalue { i64, i64 } %48, 0
  %50 = trunc i64 %49 to i32
  %51 = lshr i64 %49, 32
  %52 = trunc i64 %51 to i32
  %53 = extractvalue { i64, i64 } %48, 1
  %54 = sitofp i32 %50 to float
  %55 = insertelement <2 x float> undef, float %54, i32 0
  %56 = sitofp i32 %52 to float
  %57 = insertelement <2 x float> %55, float %56, i32 1
  %58 = trunc i64 %53 to i32
  %59 = sitofp i32 %58 to float
  %60 = insertelement <2 x float> undef, float %59, i32 0
  %61 = lshr i64 %53, 32
  %62 = trunc i64 %61 to i32
  %63 = sitofp i32 %62 to float
  %64 = insertelement <2 x float> %60, float %63, i32 1
  %65 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  store <2 x float> %57, <2 x float>* %65, align 8
  %66 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  store <2 x float> %64, <2 x float>* %66, align 8
  %67 = call { <2 x float>, <2 x float> } @_ZN12SkMatrixPriv7MapRectERK5SkM44RK6SkRect(%class.SkM44* dereferenceable(64) %42, %struct.SkRect* nonnull dereferenceable(16) %41) #15
  %68 = extractvalue { <2 x float>, <2 x float> } %67, 0
  %69 = extractvalue { <2 x float>, <2 x float> } %67, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #15
  %70 = fadd <2 x float> %68, <float -1.000000e+00, float -1.000000e+00>
  %71 = fadd <2 x float> %69, <float 1.000000e+00, float 1.000000e+00>
  br label %72

72:                                               ; preds = %30, %40
  %73 = phi <2 x float> [ %70, %40 ], [ zeroinitializer, %30 ]
  %74 = phi <2 x float> [ %71, %40 ], [ zeroinitializer, %30 ]
  %75 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 11
  %76 = bitcast %struct.SkRect* %75 to <2 x float>*
  store <2 x float> %73, <2 x float>* %76, align 8
  %77 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 11, i32 2
  %78 = bitcast float* %77 to <2 x float>*
  store <2 x float> %74, <2 x float>* %78, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkBaseDevice10clipShaderE5sk_spI8SkShaderE8SkClipOp(%class.SkBaseDevice*, %class.sk_sp.55*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %class.sk_sp.55, align 8
  %5 = alloca %class.sk_sp.55, align 8
  %6 = alloca %class.sk_sp.55, align 8
  %7 = bitcast %class.sk_sp.55* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #15
  %8 = bitcast %class.sk_sp.55* %1 to %class.SkShaderBase**
  %9 = load %class.SkShaderBase*, %class.SkShaderBase** %8, align 8
  %10 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 2
  call void @_ZNK12SkShaderBase11makeWithCTMERK8SkMatrix(%class.sk_sp.55* nonnull sret %4, %class.SkShaderBase* %9, %class.SkMatrix* dereferenceable(40) %10) #15
  %11 = getelementptr inbounds %class.sk_sp.55, %class.sk_sp.55* %4, i64 0, i32 0
  %12 = bitcast %class.sk_sp.55* %4 to i64*
  %13 = load i64, i64* %12, align 8
  store %class.SkShader* null, %class.SkShader** %11, align 8
  %14 = getelementptr inbounds %class.sk_sp.55, %class.sk_sp.55* %1, i64 0, i32 0
  %15 = load %class.SkShader*, %class.SkShader** %14, align 8
  %16 = bitcast %class.sk_sp.55* %1 to i64*
  store i64 %13, i64* %16, align 8
  %17 = icmp eq %class.SkShader* %15, null
  br i1 %17, label %28, label %18

18:                                               ; preds = %3
  %19 = getelementptr inbounds %class.SkShader, %class.SkShader* %15, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw add i32* %19, i32 -1 acq_rel
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %28

22:                                               ; preds = %18
  %23 = bitcast %class.SkShader* %15 to %class.SkRefCntBase*
  %24 = bitcast %class.SkShader* %15 to void (%class.SkRefCntBase*)***
  %25 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %24, align 8
  %26 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %25, i64 2
  %27 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %26, align 8
  call void %27(%class.SkRefCntBase* nonnull %23) #15
  br label %28

28:                                               ; preds = %3, %18, %22
  %29 = load %class.SkShader*, %class.SkShader** %11, align 8
  %30 = icmp eq %class.SkShader* %29, null
  br i1 %30, label %41, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %class.SkShader, %class.SkShader* %29, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = atomicrmw add i32* %32, i32 -1 acq_rel
  %34 = icmp eq i32 %33, 1
  br i1 %34, label %35, label %41

35:                                               ; preds = %31
  %36 = bitcast %class.SkShader* %29 to %class.SkRefCntBase*
  %37 = bitcast %class.SkShader* %29 to void (%class.SkRefCntBase*)***
  %38 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %37, align 8
  %39 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %38, i64 2
  %40 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, align 8
  call void %40(%class.SkRefCntBase* nonnull %36) #15
  br label %41

41:                                               ; preds = %28, %31, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #15
  %42 = icmp eq i32 %2, 0
  br i1 %42, label %43, label %75

43:                                               ; preds = %41
  %44 = bitcast %class.sk_sp.55* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #15
  %45 = load %class.SkShaderBase*, %class.SkShaderBase** %8, align 8
  call void @_ZNK12SkShaderBase15makeInvertAlphaEv(%class.sk_sp.55* nonnull sret %5, %class.SkShaderBase* %45) #15
  %46 = getelementptr inbounds %class.sk_sp.55, %class.sk_sp.55* %5, i64 0, i32 0
  %47 = bitcast %class.sk_sp.55* %5 to i64*
  %48 = load i64, i64* %47, align 8
  store %class.SkShader* null, %class.SkShader** %46, align 8
  %49 = load %class.SkShader*, %class.SkShader** %14, align 8
  store i64 %48, i64* %16, align 8
  %50 = icmp eq %class.SkShader* %49, null
  br i1 %50, label %74, label %51

51:                                               ; preds = %43
  %52 = getelementptr inbounds %class.SkShader, %class.SkShader* %49, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = atomicrmw add i32* %52, i32 -1 acq_rel
  %54 = icmp eq i32 %53, 1
  br i1 %54, label %55, label %61

55:                                               ; preds = %51
  %56 = bitcast %class.SkShader* %49 to %class.SkRefCntBase*
  %57 = bitcast %class.SkShader* %49 to void (%class.SkRefCntBase*)***
  %58 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %57, align 8
  %59 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %58, i64 2
  %60 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %59, align 8
  call void %60(%class.SkRefCntBase* nonnull %56) #15
  br label %61

61:                                               ; preds = %51, %55
  %62 = load %class.SkShader*, %class.SkShader** %46, align 8
  %63 = icmp eq %class.SkShader* %62, null
  br i1 %63, label %74, label %64

64:                                               ; preds = %61
  %65 = getelementptr inbounds %class.SkShader, %class.SkShader* %62, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = atomicrmw add i32* %65, i32 -1 acq_rel
  %67 = icmp eq i32 %66, 1
  br i1 %67, label %68, label %74

68:                                               ; preds = %64
  %69 = bitcast %class.SkShader* %62 to %class.SkRefCntBase*
  %70 = bitcast %class.SkShader* %62 to void (%class.SkRefCntBase*)***
  %71 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %70, align 8
  %72 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %71, i64 2
  %73 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %72, align 8
  call void %73(%class.SkRefCntBase* nonnull %69) #15
  br label %74

74:                                               ; preds = %43, %61, %64, %68
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #15
  br label %75

75:                                               ; preds = %74, %41
  %76 = load i64, i64* %16, align 8
  store %class.SkShader* null, %class.SkShader** %14, align 8
  %77 = bitcast %class.sk_sp.55* %6 to i64*
  store i64 %76, i64* %77, align 8
  %78 = bitcast %class.SkBaseDevice* %0 to void (%class.SkBaseDevice*, %class.sk_sp.55*)***
  %79 = load void (%class.SkBaseDevice*, %class.sk_sp.55*)**, void (%class.SkBaseDevice*, %class.sk_sp.55*)*** %78, align 8
  %80 = getelementptr inbounds void (%class.SkBaseDevice*, %class.sk_sp.55*)*, void (%class.SkBaseDevice*, %class.sk_sp.55*)** %79, i64 15
  %81 = load void (%class.SkBaseDevice*, %class.sk_sp.55*)*, void (%class.SkBaseDevice*, %class.sk_sp.55*)** %80, align 8
  call void %81(%class.SkBaseDevice* %0, %class.sk_sp.55* nonnull %6) #15
  %82 = getelementptr inbounds %class.sk_sp.55, %class.sk_sp.55* %6, i64 0, i32 0
  %83 = load %class.SkShader*, %class.SkShader** %82, align 8
  %84 = icmp eq %class.SkShader* %83, null
  br i1 %84, label %95, label %85

85:                                               ; preds = %75
  %86 = getelementptr inbounds %class.SkShader, %class.SkShader* %83, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = atomicrmw add i32* %86, i32 -1 acq_rel
  %88 = icmp eq i32 %87, 1
  br i1 %88, label %89, label %95

89:                                               ; preds = %85
  %90 = bitcast %class.SkShader* %83 to %class.SkRefCntBase*
  %91 = bitcast %class.SkShader* %83 to void (%class.SkRefCntBase*)***
  %92 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %91, align 8
  %93 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %92, i64 2
  %94 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %93, align 8
  call void %94(%class.SkRefCntBase* nonnull %90) #15
  br label %95

95:                                               ; preds = %75, %85, %89
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas10clipRegionERK8SkRegion8SkClipOp(%class.SkCanvas*, %class.SkRegion* dereferenceable(24), i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %5 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %4, align 8
  %6 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %5, i64 0, i32 4
  %7 = load i32, i32* %6, align 8
  %8 = icmp sgt i32 %7, 0
  br i1 %8, label %9, label %41

9:                                                ; preds = %3
  %10 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*)***
  %11 = load void (%class.SkCanvas*)**, void (%class.SkCanvas*)*** %10, align 8
  %12 = getelementptr inbounds void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %11, i64 12
  %13 = load void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %12, align 8
  tail call void %13(%class.SkCanvas* %0) #15
  %14 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %4, align 8
  %15 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %14, i64 0, i32 4
  %16 = load i32, i32* %15, align 8
  %17 = add nsw i32 %16, -1
  store i32 %17, i32* %15, align 8
  %18 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 1
  %19 = tail call i8* @_ZN7SkDeque9push_backEv(%class.SkDeque* %18) #15
  %20 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %4, align 8
  %21 = bitcast i8* %19 to i64*
  store i64 0, i64* %21, align 8
  %22 = getelementptr inbounds i8, i8* %19, i64 8
  %23 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %20, i64 0, i32 1
  %24 = bitcast %class.SkBaseDevice** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast i8* %22 to i64*
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds i8, i8* %19, i64 16
  %28 = bitcast i8* %27 to i64*
  store i64 0, i64* %28, align 8
  %29 = getelementptr inbounds i8, i8* %19, i64 24
  %30 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %20, i64 0, i32 3
  %31 = bitcast %class.SkM44* %30 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %31, i64 64, i1 false) #15
  %32 = getelementptr inbounds i8, i8* %19, i64 88
  %33 = bitcast i8* %32 to i32*
  store i32 0, i32* %33, align 8
  %34 = bitcast %"class.SkCanvas::MCRec"** %4 to i8**
  store i8* %19, i8** %34, align 8
  %35 = bitcast i8* %22 to %class.SkBaseDevice**
  %36 = load %class.SkBaseDevice*, %class.SkBaseDevice** %35, align 8
  %37 = bitcast %class.SkBaseDevice* %36 to void (%class.SkBaseDevice*)***
  %38 = load void (%class.SkBaseDevice*)**, void (%class.SkBaseDevice*)*** %37, align 8
  %39 = getelementptr inbounds void (%class.SkBaseDevice*)*, void (%class.SkBaseDevice*)** %38, i64 10
  %40 = load void (%class.SkBaseDevice*)*, void (%class.SkBaseDevice*)** %39, align 8
  tail call void %40(%class.SkBaseDevice* %36) #15
  br label %41

41:                                               ; preds = %3, %9
  %42 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*, %class.SkRegion*, i32)***
  %43 = load void (%class.SkCanvas*, %class.SkRegion*, i32)**, void (%class.SkCanvas*, %class.SkRegion*, i32)*** %42, align 8
  %44 = getelementptr inbounds void (%class.SkCanvas*, %class.SkRegion*, i32)*, void (%class.SkCanvas*, %class.SkRegion*, i32)** %43, i64 50
  %45 = load void (%class.SkCanvas*, %class.SkRegion*, i32)*, void (%class.SkCanvas*, %class.SkRegion*, i32)** %44, align 8
  tail call void %45(%class.SkCanvas* %0, %class.SkRegion* dereferenceable(24) %1, i32 %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas12onClipRegionERK8SkRegion8SkClipOp(%class.SkCanvas*, %class.SkRegion* dereferenceable(24), i32) unnamed_addr #0 align 2 {
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %6 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %5, align 8
  %7 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %6, i64 0, i32 1
  %8 = load %class.SkBaseDevice*, %class.SkBaseDevice** %7, align 8
  %9 = bitcast %class.SkBaseDevice* %8 to void (%class.SkBaseDevice*, %class.SkRegion*, i32)***
  %10 = load void (%class.SkBaseDevice*, %class.SkRegion*, i32)**, void (%class.SkBaseDevice*, %class.SkRegion*, i32)*** %9, align 8
  %11 = getelementptr inbounds void (%class.SkBaseDevice*, %class.SkRegion*, i32)*, void (%class.SkBaseDevice*, %class.SkRegion*, i32)** %10, i64 16
  %12 = load void (%class.SkBaseDevice*, %class.SkRegion*, i32)*, void (%class.SkBaseDevice*, %class.SkRegion*, i32)** %11, align 8
  tail call void %12(%class.SkBaseDevice* %8, %class.SkRegion* dereferenceable(24) %1, i32 %2) #15
  %13 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %5, align 8
  %14 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %13, i64 0, i32 1
  %15 = load %class.SkBaseDevice*, %class.SkBaseDevice** %14, align 8
  %16 = bitcast %class.SkBaseDevice* %15 to i32 (%class.SkBaseDevice*)***
  %17 = load i32 (%class.SkBaseDevice*)**, i32 (%class.SkBaseDevice*)*** %16, align 8
  %18 = getelementptr inbounds i32 (%class.SkBaseDevice*)*, i32 (%class.SkBaseDevice*)** %17, i64 22
  %19 = load i32 (%class.SkBaseDevice*)*, i32 (%class.SkBaseDevice*)** %18, align 8
  %20 = tail call i32 %19(%class.SkBaseDevice* %15) #15
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %54, label %22

22:                                               ; preds = %3
  %23 = bitcast { <2 x float>, <2 x float> }* %4 to %struct.SkRect*
  %24 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %15, i64 0, i32 5
  %25 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #15
  %26 = bitcast %class.SkBaseDevice* %15 to { i64, i64 } (%class.SkBaseDevice*)***
  %27 = load { i64, i64 } (%class.SkBaseDevice*)**, { i64, i64 } (%class.SkBaseDevice*)*** %26, align 8
  %28 = getelementptr inbounds { i64, i64 } (%class.SkBaseDevice*)*, { i64, i64 } (%class.SkBaseDevice*)** %27, i64 23
  %29 = load { i64, i64 } (%class.SkBaseDevice*)*, { i64, i64 } (%class.SkBaseDevice*)** %28, align 8
  %30 = tail call { i64, i64 } %29(%class.SkBaseDevice* %15) #15
  %31 = extractvalue { i64, i64 } %30, 0
  %32 = trunc i64 %31 to i32
  %33 = lshr i64 %31, 32
  %34 = trunc i64 %33 to i32
  %35 = extractvalue { i64, i64 } %30, 1
  %36 = sitofp i32 %32 to float
  %37 = insertelement <2 x float> undef, float %36, i32 0
  %38 = sitofp i32 %34 to float
  %39 = insertelement <2 x float> %37, float %38, i32 1
  %40 = trunc i64 %35 to i32
  %41 = sitofp i32 %40 to float
  %42 = insertelement <2 x float> undef, float %41, i32 0
  %43 = lshr i64 %35, 32
  %44 = trunc i64 %43 to i32
  %45 = sitofp i32 %44 to float
  %46 = insertelement <2 x float> %42, float %45, i32 1
  %47 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  store <2 x float> %39, <2 x float>* %47, align 8
  %48 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  store <2 x float> %46, <2 x float>* %48, align 8
  %49 = call { <2 x float>, <2 x float> } @_ZN12SkMatrixPriv7MapRectERK5SkM44RK6SkRect(%class.SkM44* dereferenceable(64) %24, %struct.SkRect* nonnull dereferenceable(16) %23) #15
  %50 = extractvalue { <2 x float>, <2 x float> } %49, 0
  %51 = extractvalue { <2 x float>, <2 x float> } %49, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #15
  %52 = fadd <2 x float> %50, <float -1.000000e+00, float -1.000000e+00>
  %53 = fadd <2 x float> %51, <float 1.000000e+00, float 1.000000e+00>
  br label %54

54:                                               ; preds = %3, %22
  %55 = phi <2 x float> [ %52, %22 ], [ zeroinitializer, %3 ]
  %56 = phi <2 x float> [ %53, %22 ], [ zeroinitializer, %3 ]
  %57 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 11
  %58 = bitcast %struct.SkRect* %57 to <2 x float>*
  store <2 x float> %55, <2 x float>* %58, align 8
  %59 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 11, i32 2
  %60 = bitcast float* %59 to <2 x float>*
  store <2 x float> %56, <2 x float>* %60, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8SkCanvas25androidFramework_isClipAAEv(%class.SkCanvas* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %3 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %2, align 8
  %4 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %3, i64 0, i32 1
  %5 = load %class.SkBaseDevice*, %class.SkBaseDevice** %4, align 8
  %6 = bitcast %class.SkBaseDevice* %5 to i1 (%class.SkBaseDevice*)***
  %7 = load i1 (%class.SkBaseDevice*)**, i1 (%class.SkBaseDevice*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%class.SkBaseDevice*)*, i1 (%class.SkBaseDevice*)** %7, i64 19
  %9 = load i1 (%class.SkBaseDevice*)*, i1 (%class.SkBaseDevice*)** %8, align 8
  %10 = tail call zeroext i1 %9(%class.SkBaseDevice* %5) #15
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas29temporary_internal_getRgnClipEP8SkRegion(%class.SkCanvas* nocapture readonly, %class.SkRegion*) local_unnamed_addr #0 align 2 {
  %3 = tail call zeroext i1 @_ZN8SkRegion8setEmptyEv(%class.SkRegion* %1) #15
  %4 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %5 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %4, align 8
  %6 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %5, i64 0, i32 1
  %7 = load %class.SkBaseDevice*, %class.SkBaseDevice** %6, align 8
  %8 = icmp eq %class.SkBaseDevice* %7, null
  br i1 %8, label %24, label %9

9:                                                ; preds = %2
  %10 = tail call zeroext i1 @_ZNK12SkBaseDevice22isPixelAlignedToGlobalEv(%class.SkBaseDevice* nonnull %7) #15
  br i1 %10, label %11, label %24

11:                                               ; preds = %9
  %12 = bitcast %class.SkBaseDevice* %7 to void (%class.SkBaseDevice*, %class.SkRegion*)***
  %13 = load void (%class.SkBaseDevice*, %class.SkRegion*)**, void (%class.SkBaseDevice*, %class.SkRegion*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkBaseDevice*, %class.SkRegion*)*, void (%class.SkBaseDevice*, %class.SkRegion*)** %13, i64 21
  %15 = load void (%class.SkBaseDevice*, %class.SkRegion*)*, void (%class.SkBaseDevice*, %class.SkRegion*)** %14, align 8
  tail call void %15(%class.SkBaseDevice* nonnull %7, %class.SkRegion* %1) #15
  %16 = tail call i64 @_ZNK12SkBaseDevice9getOriginEv(%class.SkBaseDevice* nonnull %7) #15
  %17 = lshr i64 %16, 32
  %18 = or i64 %17, %16
  %19 = trunc i64 %18 to i32
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %24, label %21

21:                                               ; preds = %11
  %22 = trunc i64 %16 to i32
  %23 = trunc i64 %17 to i32
  tail call void @_ZNK8SkRegion9translateEiiPS_(%class.SkRegion* %1, i32 %22, i32 %23, %class.SkRegion* %1) #15
  br label %24

24:                                               ; preds = %21, %11, %2, %9
  ret void
}

declare zeroext i1 @_ZN8SkRegion8setEmptyEv(%class.SkRegion*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8SkCanvas11isClipEmptyEv(%class.SkCanvas* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %3 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %2, align 8
  %4 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %3, i64 0, i32 1
  %5 = load %class.SkBaseDevice*, %class.SkBaseDevice** %4, align 8
  %6 = bitcast %class.SkBaseDevice* %5 to i32 (%class.SkBaseDevice*)***
  %7 = load i32 (%class.SkBaseDevice*)**, i32 (%class.SkBaseDevice*)*** %6, align 8
  %8 = getelementptr inbounds i32 (%class.SkBaseDevice*)*, i32 (%class.SkBaseDevice*)** %7, i64 22
  %9 = load i32 (%class.SkBaseDevice*)*, i32 (%class.SkBaseDevice*)** %8, align 8
  %10 = tail call i32 %9(%class.SkBaseDevice* %5) #15
  %11 = icmp eq i32 %10, 0
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8SkCanvas10isClipRectEv(%class.SkCanvas* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %3 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %2, align 8
  %4 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %3, i64 0, i32 1
  %5 = load %class.SkBaseDevice*, %class.SkBaseDevice** %4, align 8
  %6 = bitcast %class.SkBaseDevice* %5 to i32 (%class.SkBaseDevice*)***
  %7 = load i32 (%class.SkBaseDevice*)**, i32 (%class.SkBaseDevice*)*** %6, align 8
  %8 = getelementptr inbounds i32 (%class.SkBaseDevice*)*, i32 (%class.SkBaseDevice*)** %7, i64 22
  %9 = load i32 (%class.SkBaseDevice*)*, i32 (%class.SkBaseDevice*)** %8, align 8
  %10 = tail call i32 %9(%class.SkBaseDevice* %5) #15
  %11 = icmp eq i32 %10, 1
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8SkCanvas11quickRejectERK6SkRect(%class.SkCanvas* nocapture readonly, %struct.SkRect* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %4 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %3, align 8
  %5 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %4, i64 0, i32 3
  %6 = tail call { <2 x float>, <2 x float> } @_ZN12SkMatrixPriv7MapRectERK5SkM44RK6SkRect(%class.SkM44* dereferenceable(64) %5, %struct.SkRect* dereferenceable(16) %1) #15
  %7 = extractvalue { <2 x float>, <2 x float> } %6, 0
  %8 = extractvalue { <2 x float>, <2 x float> } %6, 1
  %9 = extractelement <2 x float> %7, i32 0
  %10 = fmul float %9, 0.000000e+00
  %11 = extractelement <2 x float> %7, i32 1
  %12 = fmul float %11, %10
  %13 = extractelement <2 x float> %8, i32 0
  %14 = fmul float %13, %12
  %15 = extractelement <2 x float> %8, i32 1
  %16 = fmul float %15, %14
  %17 = fcmp ord float %16, 0.000000e+00
  br i1 %17, label %18, label %38

18:                                               ; preds = %2
  %19 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 11, i32 0
  %20 = load float, float* %19, align 4
  %21 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 11, i32 1
  %22 = load float, float* %21, align 4
  %23 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 11, i32 2
  %24 = load float, float* %23, align 4
  %25 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 11, i32 3
  %26 = load float, float* %25, align 4
  %27 = fcmp olt float %9, %20
  %28 = select i1 %27, float %20, float %9
  %29 = fcmp olt float %24, %13
  %30 = select i1 %29, float %24, float %13
  %31 = fcmp olt float %11, %22
  %32 = select i1 %31, float %22, float %11
  %33 = fcmp olt float %26, %15
  %34 = fcmp uge float %28, %30
  %35 = select i1 %33, float %26, float %15
  %36 = fcmp uge float %32, %35
  %37 = or i1 %34, %36
  br label %38

38:                                               ; preds = %18, %2
  %39 = phi i1 [ true, %2 ], [ %37, %18 ]
  ret i1 %39
}

declare { <2 x float>, <2 x float> } @_ZN12SkMatrixPriv7MapRectERK5SkM44RK6SkRect(%class.SkM44* dereferenceable(64), %struct.SkRect* dereferenceable(16)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8SkCanvas11quickRejectERK6SkPath(%class.SkCanvas* nocapture readonly, %class.SkPath* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 0, i32 0
  %4 = load %class.SkPathRef*, %class.SkPathRef** %3, align 8
  %5 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %4, i64 0, i32 4, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %58, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %4, i64 0, i32 9
  %10 = load i8, i8* %9, align 8
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %21, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %4, i64 0, i32 1
  %14 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %4, i64 0, i32 3, i32 0
  %15 = load %struct.SkPoint*, %struct.SkPoint** %14, align 8
  %16 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %4, i64 0, i32 3, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = tail call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %13, %struct.SkPoint* %15, i32 %17) #15
  %19 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %4, i64 0, i32 10
  %20 = zext i1 %18 to i8
  store i8 %20, i8* %19, align 1
  store i8 0, i8* %9, align 8
  br label %21

21:                                               ; preds = %8, %12
  %22 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %4, i64 0, i32 1
  %23 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %24 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %23, align 8
  %25 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %24, i64 0, i32 3
  %26 = tail call { <2 x float>, <2 x float> } @_ZN12SkMatrixPriv7MapRectERK5SkM44RK6SkRect(%class.SkM44* dereferenceable(64) %25, %struct.SkRect* dereferenceable(16) %22) #15
  %27 = extractvalue { <2 x float>, <2 x float> } %26, 0
  %28 = extractvalue { <2 x float>, <2 x float> } %26, 1
  %29 = extractelement <2 x float> %27, i32 0
  %30 = fmul float %29, 0.000000e+00
  %31 = extractelement <2 x float> %27, i32 1
  %32 = fmul float %31, %30
  %33 = extractelement <2 x float> %28, i32 0
  %34 = fmul float %33, %32
  %35 = extractelement <2 x float> %28, i32 1
  %36 = fmul float %35, %34
  %37 = fcmp ord float %36, 0.000000e+00
  br i1 %37, label %38, label %58

38:                                               ; preds = %21
  %39 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 11, i32 0
  %40 = load float, float* %39, align 4
  %41 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 11, i32 1
  %42 = load float, float* %41, align 4
  %43 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 11, i32 2
  %44 = load float, float* %43, align 4
  %45 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 11, i32 3
  %46 = load float, float* %45, align 4
  %47 = fcmp olt float %29, %40
  %48 = select i1 %47, float %40, float %29
  %49 = fcmp olt float %44, %33
  %50 = select i1 %49, float %44, float %33
  %51 = fcmp olt float %31, %42
  %52 = select i1 %51, float %42, float %31
  %53 = fcmp olt float %46, %35
  %54 = fcmp uge float %48, %50
  %55 = select i1 %53, float %46, float %35
  %56 = fcmp uge float %52, %55
  %57 = or i1 %54, %56
  br label %58

58:                                               ; preds = %38, %21, %2
  %59 = phi i1 [ true, %2 ], [ true, %21 ], [ %57, %38 ]
  ret i1 %59
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8SkCanvas19internalQuickRejectERK6SkRectRK7SkPaintPK8SkMatrix(%class.SkCanvas* nocapture readonly, %struct.SkRect* dereferenceable(16), %class.SkPaint* dereferenceable(72), %class.SkMatrix*) local_unnamed_addr #0 align 2 {
  %5 = alloca <2 x i64>, align 16
  %6 = alloca <2 x i64>, align 16
  %7 = bitcast <2 x i64>* %6 to %struct.SkRect*
  %8 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 0
  %9 = load float, float* %8, align 4
  %10 = fmul float %9, 0.000000e+00
  %11 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 1
  %12 = load float, float* %11, align 4
  %13 = fmul float %10, %12
  %14 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 2
  %15 = load float, float* %14, align 4
  %16 = fmul float %13, %15
  %17 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 3
  %18 = load float, float* %17, align 4
  %19 = fmul float %16, %18
  %20 = fcmp ord float %19, 0.000000e+00
  br i1 %20, label %21, label %96

21:                                               ; preds = %4
  %22 = tail call zeroext i1 @_ZNK7SkPaint13nothingToDrawEv(%class.SkPaint* %2) #15
  br i1 %22, label %96, label %23

23:                                               ; preds = %21
  %24 = tail call zeroext i1 @_ZNK7SkPaint20canComputeFastBoundsEv(%class.SkPaint* %2) #15
  br i1 %24, label %25, label %96

25:                                               ; preds = %23
  %26 = bitcast <2 x i64>* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #15
  %27 = icmp eq %class.SkMatrix* %3, null
  %28 = bitcast <2 x i64>* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %28, i8 -1, i64 16, i1 false)
  br i1 %27, label %34, label %29

29:                                               ; preds = %25
  %30 = bitcast <2 x i64>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30)
  %31 = bitcast <2 x i64>* %5 to %struct.SkRect*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %30, i8 -1, i64 16, i1 false) #15
  %32 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* nonnull %3, %struct.SkRect* nonnull %31, %struct.SkRect* dereferenceable(16) %1, i32 1) #15
  %33 = load <2 x i64>, <2 x i64>* %5, align 16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30)
  store <2 x i64> %33, <2 x i64>* %6, align 16
  br label %36

34:                                               ; preds = %25
  %35 = bitcast %struct.SkRect* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %26, i8* align 4 %35, i64 16, i1 false)
  br label %36

36:                                               ; preds = %34, %29
  %37 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 8, i32 0, i32 0
  %38 = load i32, i32* %37, align 8
  %39 = lshr i32 %38, 6
  %40 = trunc i32 %39 to i8
  %41 = and i8 %40, 3
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %43, label %55

43:                                               ; preds = %36
  %44 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 2, i32 0
  %45 = bitcast %class.SkMaskFilter** %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %class.SkPaint* %2 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = or i64 %48, %46
  %50 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 4, i32 0
  %51 = bitcast %class.SkImageFilter** %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = or i64 %49, %52
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %57, label %55

55:                                               ; preds = %43, %36
  %56 = call dereferenceable(16) %struct.SkRect* @_ZNK7SkPaint19doComputeFastBoundsERK6SkRectPS0_NS_5StyleE(%class.SkPaint* %2, %struct.SkRect* nonnull dereferenceable(16) %7, %struct.SkRect* nonnull %7, i8 zeroext %41) #15
  br label %57

57:                                               ; preds = %43, %55
  %58 = phi %struct.SkRect* [ %56, %55 ], [ %7, %43 ]
  %59 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %60 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %59, align 8
  %61 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %60, i64 0, i32 3
  %62 = call { <2 x float>, <2 x float> } @_ZN12SkMatrixPriv7MapRectERK5SkM44RK6SkRect(%class.SkM44* dereferenceable(64) %61, %struct.SkRect* dereferenceable(16) %58) #15
  %63 = extractvalue { <2 x float>, <2 x float> } %62, 0
  %64 = extractvalue { <2 x float>, <2 x float> } %62, 1
  %65 = extractelement <2 x float> %63, i32 0
  %66 = fmul float %65, 0.000000e+00
  %67 = extractelement <2 x float> %63, i32 1
  %68 = fmul float %67, %66
  %69 = extractelement <2 x float> %64, i32 0
  %70 = fmul float %69, %68
  %71 = extractelement <2 x float> %64, i32 1
  %72 = fmul float %71, %70
  %73 = fcmp ord float %72, 0.000000e+00
  br i1 %73, label %74, label %94

74:                                               ; preds = %57
  %75 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 11, i32 0
  %76 = load float, float* %75, align 4
  %77 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 11, i32 1
  %78 = load float, float* %77, align 4
  %79 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 11, i32 2
  %80 = load float, float* %79, align 4
  %81 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 11, i32 3
  %82 = load float, float* %81, align 4
  %83 = fcmp olt float %65, %76
  %84 = select i1 %83, float %76, float %65
  %85 = fcmp olt float %80, %69
  %86 = select i1 %85, float %80, float %69
  %87 = fcmp olt float %67, %78
  %88 = select i1 %87, float %78, float %67
  %89 = fcmp olt float %82, %71
  %90 = fcmp uge float %84, %86
  %91 = select i1 %89, float %82, float %71
  %92 = fcmp uge float %88, %91
  %93 = or i1 %90, %92
  br label %94

94:                                               ; preds = %57, %74
  %95 = phi i1 [ true, %57 ], [ %93, %74 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #15
  br label %96

96:                                               ; preds = %23, %4, %21, %94
  %97 = phi i1 [ %95, %94 ], [ true, %21 ], [ true, %4 ], [ false, %23 ]
  ret i1 %97
}

declare zeroext i1 @_ZNK7SkPaint20canComputeFastBoundsEv(%class.SkPaint*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrRecordingContext* @_ZN8SkCanvas16recordingContextEv(%class.SkCanvas* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %3 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %2, align 8
  %4 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %3, i64 0, i32 1
  %5 = load %class.SkBaseDevice*, %class.SkBaseDevice** %4, align 8
  %6 = bitcast %class.SkBaseDevice* %5 to %class.GrRecordingContext* (%class.SkBaseDevice*)***
  %7 = load %class.GrRecordingContext* (%class.SkBaseDevice*)**, %class.GrRecordingContext* (%class.SkBaseDevice*)*** %6, align 8
  %8 = getelementptr inbounds %class.GrRecordingContext* (%class.SkBaseDevice*)*, %class.GrRecordingContext* (%class.SkBaseDevice*)** %7, i64 8
  %9 = load %class.GrRecordingContext* (%class.SkBaseDevice*)*, %class.GrRecordingContext* (%class.SkBaseDevice*)** %8, align 8
  %10 = tail call %class.GrRecordingContext* %9(%class.SkBaseDevice* %5) #15
  ret %class.GrRecordingContext* %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas10drawDRRectERK7SkRRectS2_RK7SkPaint(%class.SkCanvas*, %class.SkRRect* dereferenceable(52), %class.SkRRect* dereferenceable(52), %class.SkPaint* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.skia::tracing_internals::ScopedTracer", align 8
  %6 = load atomic i64, i64* @_ZZN8SkCanvas10drawDRRectERK7SkRRectS2_RK7SkPaintE29trace_event_unique_atomic1647.0.0 monotonic, align 8
  %7 = inttoptr i64 %6 to i8*
  %8 = icmp eq i64 %6, 0
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %11 = bitcast %class.SkEventTracer* %10 to i8* (%class.SkEventTracer*, i8*)***
  %12 = load i8* (%class.SkEventTracer*, i8*)**, i8* (%class.SkEventTracer*, i8*)*** %11, align 8
  %13 = getelementptr inbounds i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %12, i64 2
  %14 = load i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %13, align 8
  %15 = tail call i8* %14(%class.SkEventTracer* %10, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0)) #15
  %16 = ptrtoint i8* %15 to i64
  store atomic i64 %16, i64* @_ZZN8SkCanvas10drawDRRectERK7SkRRectS2_RK7SkPaintE29trace_event_unique_atomic1647.0.0 monotonic, align 8
  br label %17

17:                                               ; preds = %4, %9
  %18 = phi i8* [ %7, %4 ], [ %15, %9 ]
  %19 = bitcast %"class.skia::tracing_internals::ScopedTracer"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #15
  %20 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %5, i64 0, i32 0
  %21 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %5, i64 0, i32 1, i32 0
  %22 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %5, i64 0, i32 1, i32 1
  %23 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %5, i64 0, i32 1, i32 2
  %24 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %5, i64 0, i32 1
  %25 = bitcast %"struct.skia::tracing_internals::ScopedTracer::Data"* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 24, i1 false)
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* null, %"struct.skia::tracing_internals::ScopedTracer::Data"** %20, align 8
  %26 = load i8, i8* %18, align 1
  %27 = and i8 %26, 5
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %38, label %29

29:                                               ; preds = %17
  %30 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %31 = bitcast %class.SkEventTracer* %30 to i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)***
  %32 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)**, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*** %31, align 8
  %33 = getelementptr inbounds i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %32, i64 4
  %34 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %33, align 8
  %35 = tail call i64 %34(%class.SkEventTracer* %30, i8 signext 88, i8* %18, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @__PRETTY_FUNCTION__._ZN8SkCanvas10drawDRRectERK7SkRRectS2_RK7SkPaint, i64 0, i64 0), i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #15
  %36 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %5, i64 0, i32 1
  %37 = getelementptr inbounds %"struct.skia::tracing_internals::ScopedTracer::Data", %"struct.skia::tracing_internals::ScopedTracer::Data"* %36, i64 0, i32 0
  store i8* %18, i8** %37, align 8
  store i8* getelementptr inbounds ([77 x i8], [77 x i8]* @__PRETTY_FUNCTION__._ZN8SkCanvas10drawDRRectERK7SkRRectS2_RK7SkPaint, i64 0, i64 0), i8** %22, align 8
  store i64 %35, i64* %23, align 8
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* %36, %"struct.skia::tracing_internals::ScopedTracer::Data"** %20, align 8
  br label %38

38:                                               ; preds = %17, %29
  %39 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 2
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %84, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %2, i64 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %42
  call void @_ZN8SkCanvas9drawRRectERK7SkRRectRK7SkPaint(%class.SkCanvas* %0, %class.SkRRect* dereferenceable(52) %1, %class.SkPaint* dereferenceable(72) %3)
  br label %84

47:                                               ; preds = %42
  %48 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %2, i64 0, i32 0, i32 0
  %49 = load float, float* %48, align 4
  %50 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %2, i64 0, i32 0, i32 2
  %51 = load float, float* %50, align 4
  %52 = fcmp olt float %49, %51
  br i1 %52, label %53, label %84

53:                                               ; preds = %47
  %54 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %2, i64 0, i32 0, i32 1
  %55 = load float, float* %54, align 4
  %56 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %2, i64 0, i32 0, i32 3
  %57 = load float, float* %56, align 4
  %58 = fcmp uge float %55, %57
  br i1 %58, label %84, label %59

59:                                               ; preds = %53
  %60 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 0, i32 0
  %61 = load float, float* %60, align 4
  %62 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 0, i32 2
  %63 = load float, float* %62, align 4
  %64 = fcmp olt float %61, %63
  br i1 %64, label %65, label %84

65:                                               ; preds = %59
  %66 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 0, i32 1
  %67 = load float, float* %66, align 4
  %68 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 0, i32 3
  %69 = load float, float* %68, align 4
  %70 = fcmp uge float %67, %69
  %71 = fcmp ugt float %61, %49
  %72 = or i1 %71, %70
  br i1 %72, label %84, label %73

73:                                               ; preds = %65
  %74 = fcmp ole float %67, %55
  %75 = fcmp oge float %63, %51
  %76 = fcmp oge float %69, %57
  %77 = and i1 %75, %74
  %78 = and i1 %76, %77
  br i1 %78, label %79, label %84

79:                                               ; preds = %73
  %80 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*, %class.SkRRect*, %class.SkRRect*, %class.SkPaint*)***
  %81 = load void (%class.SkCanvas*, %class.SkRRect*, %class.SkRRect*, %class.SkPaint*)**, void (%class.SkCanvas*, %class.SkRRect*, %class.SkRRect*, %class.SkPaint*)*** %80, align 8
  %82 = getelementptr inbounds void (%class.SkCanvas*, %class.SkRRect*, %class.SkRRect*, %class.SkPaint*)*, void (%class.SkCanvas*, %class.SkRRect*, %class.SkRRect*, %class.SkPaint*)** %81, i64 26
  %83 = load void (%class.SkCanvas*, %class.SkRRect*, %class.SkRRect*, %class.SkPaint*)*, void (%class.SkCanvas*, %class.SkRRect*, %class.SkRRect*, %class.SkPaint*)** %82, align 8
  call void %83(%class.SkCanvas* %0, %class.SkRRect* dereferenceable(52) %1, %class.SkRRect* dereferenceable(52) %2, %class.SkPaint* dereferenceable(72) %3) #15
  br label %84

84:                                               ; preds = %47, %53, %59, %65, %73, %38, %79, %46
  %85 = load %"struct.skia::tracing_internals::ScopedTracer::Data"*, %"struct.skia::tracing_internals::ScopedTracer::Data"** %20, align 8
  %86 = icmp eq %"struct.skia::tracing_internals::ScopedTracer::Data"* %85, null
  br i1 %86, label %100, label %87

87:                                               ; preds = %84
  %88 = load i8*, i8** %21, align 8
  %89 = load i8, i8* %88, align 1
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %100, label %91

91:                                               ; preds = %87
  %92 = call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %93 = load i8*, i8** %21, align 8
  %94 = load i8*, i8** %22, align 8
  %95 = load i64, i64* %23, align 8
  %96 = bitcast %class.SkEventTracer* %92 to void (%class.SkEventTracer*, i8*, i8*, i64)***
  %97 = load void (%class.SkEventTracer*, i8*, i8*, i64)**, void (%class.SkEventTracer*, i8*, i8*, i64)*** %96, align 8
  %98 = getelementptr inbounds void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %97, i64 5
  %99 = load void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %98, align 8
  call void %99(%class.SkEventTracer* %92, i8* %93, i8* %94, i64 %95) #15
  br label %100

100:                                              ; preds = %84, %87, %91
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas9drawRRectERK7SkRRectRK7SkPaint(%class.SkCanvas*, %class.SkRRect* dereferenceable(52), %class.SkPaint* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.skia::tracing_internals::ScopedTracer", align 8
  %5 = load atomic i64, i64* @_ZZN8SkCanvas9drawRRectERK7SkRRectRK7SkPaintE29trace_event_unique_atomic1706.0.0 monotonic, align 8
  %6 = inttoptr i64 %5 to i8*
  %7 = icmp eq i64 %5, 0
  br i1 %7, label %8, label %16

8:                                                ; preds = %3
  %9 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %10 = bitcast %class.SkEventTracer* %9 to i8* (%class.SkEventTracer*, i8*)***
  %11 = load i8* (%class.SkEventTracer*, i8*)**, i8* (%class.SkEventTracer*, i8*)*** %10, align 8
  %12 = getelementptr inbounds i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %11, i64 2
  %13 = load i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %12, align 8
  %14 = tail call i8* %13(%class.SkEventTracer* %9, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0)) #15
  %15 = ptrtoint i8* %14 to i64
  store atomic i64 %15, i64* @_ZZN8SkCanvas9drawRRectERK7SkRRectRK7SkPaintE29trace_event_unique_atomic1706.0.0 monotonic, align 8
  br label %16

16:                                               ; preds = %3, %8
  %17 = phi i8* [ %6, %3 ], [ %14, %8 ]
  %18 = bitcast %"class.skia::tracing_internals::ScopedTracer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %18) #15
  %19 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %4, i64 0, i32 0
  %20 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %4, i64 0, i32 1, i32 0
  %21 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %4, i64 0, i32 1, i32 1
  %22 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %4, i64 0, i32 1, i32 2
  %23 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %4, i64 0, i32 1
  %24 = bitcast %"struct.skia::tracing_internals::ScopedTracer::Data"* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 24, i1 false)
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* null, %"struct.skia::tracing_internals::ScopedTracer::Data"** %19, align 8
  %25 = load i8, i8* %17, align 1
  %26 = and i8 %25, 5
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %37, label %28

28:                                               ; preds = %16
  %29 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %30 = bitcast %class.SkEventTracer* %29 to i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)***
  %31 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)**, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*** %30, align 8
  %32 = getelementptr inbounds i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %31, i64 4
  %33 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %32, align 8
  %34 = tail call i64 %33(%class.SkEventTracer* %29, i8 signext 88, i8* %17, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN8SkCanvas9drawRRectERK7SkRRectRK7SkPaint, i64 0, i64 0), i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #15
  %35 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %4, i64 0, i32 1
  %36 = getelementptr inbounds %"struct.skia::tracing_internals::ScopedTracer::Data", %"struct.skia::tracing_internals::ScopedTracer::Data"* %35, i64 0, i32 0
  store i8* %17, i8** %36, align 8
  store i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN8SkCanvas9drawRRectERK7SkRRectRK7SkPaint, i64 0, i64 0), i8** %21, align 8
  store i64 %34, i64* %22, align 8
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* %35, %"struct.skia::tracing_internals::ScopedTracer::Data"** %19, align 8
  br label %37

37:                                               ; preds = %16, %28
  %38 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*, %class.SkRRect*, %class.SkPaint*)***
  %39 = load void (%class.SkCanvas*, %class.SkRRect*, %class.SkPaint*)**, void (%class.SkCanvas*, %class.SkRRect*, %class.SkPaint*)*** %38, align 8
  %40 = getelementptr inbounds void (%class.SkCanvas*, %class.SkRRect*, %class.SkPaint*)*, void (%class.SkCanvas*, %class.SkRRect*, %class.SkPaint*)** %39, i64 25
  %41 = load void (%class.SkCanvas*, %class.SkRRect*, %class.SkPaint*)*, void (%class.SkCanvas*, %class.SkRRect*, %class.SkPaint*)** %40, align 8
  call void %41(%class.SkCanvas* %0, %class.SkRRect* dereferenceable(52) %1, %class.SkPaint* dereferenceable(72) %2) #15
  %42 = load %"struct.skia::tracing_internals::ScopedTracer::Data"*, %"struct.skia::tracing_internals::ScopedTracer::Data"** %19, align 8
  %43 = icmp eq %"struct.skia::tracing_internals::ScopedTracer::Data"* %42, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %37
  %45 = load i8*, i8** %20, align 8
  %46 = load i8, i8* %45, align 1
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %57, label %48

48:                                               ; preds = %44
  %49 = call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %50 = load i8*, i8** %20, align 8
  %51 = load i8*, i8** %21, align 8
  %52 = load i64, i64* %22, align 8
  %53 = bitcast %class.SkEventTracer* %49 to void (%class.SkEventTracer*, i8*, i8*, i64)***
  %54 = load void (%class.SkEventTracer*, i8*, i8*, i64)**, void (%class.SkEventTracer*, i8*, i8*, i64)*** %53, align 8
  %55 = getelementptr inbounds void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %54, i64 5
  %56 = load void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %55, align 8
  call void %56(%class.SkEventTracer* %49, i8* %50, i8* %51, i64 %52) #15
  br label %57

57:                                               ; preds = %37, %44, %48
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas9drawPaintERK7SkPaint(%class.SkCanvas*, %class.SkPaint* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.skia::tracing_internals::ScopedTracer", align 8
  %4 = load atomic i64, i64* @_ZZN8SkCanvas9drawPaintERK7SkPaintE29trace_event_unique_atomic1669.0.0 monotonic, align 8
  %5 = inttoptr i64 %4 to i8*
  %6 = icmp eq i64 %4, 0
  br i1 %6, label %7, label %15

7:                                                ; preds = %2
  %8 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %9 = bitcast %class.SkEventTracer* %8 to i8* (%class.SkEventTracer*, i8*)***
  %10 = load i8* (%class.SkEventTracer*, i8*)**, i8* (%class.SkEventTracer*, i8*)*** %9, align 8
  %11 = getelementptr inbounds i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %10, i64 2
  %12 = load i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %11, align 8
  %13 = tail call i8* %12(%class.SkEventTracer* %8, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0)) #15
  %14 = ptrtoint i8* %13 to i64
  store atomic i64 %14, i64* @_ZZN8SkCanvas9drawPaintERK7SkPaintE29trace_event_unique_atomic1669.0.0 monotonic, align 8
  br label %15

15:                                               ; preds = %2, %7
  %16 = phi i8* [ %5, %2 ], [ %13, %7 ]
  %17 = bitcast %"class.skia::tracing_internals::ScopedTracer"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #15
  %18 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %3, i64 0, i32 0
  %19 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %3, i64 0, i32 1, i32 0
  %20 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %3, i64 0, i32 1, i32 1
  %21 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %3, i64 0, i32 1, i32 2
  %22 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %3, i64 0, i32 1
  %23 = bitcast %"struct.skia::tracing_internals::ScopedTracer::Data"* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 24, i1 false)
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* null, %"struct.skia::tracing_internals::ScopedTracer::Data"** %18, align 8
  %24 = load i8, i8* %16, align 1
  %25 = and i8 %24, 5
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %36, label %27

27:                                               ; preds = %15
  %28 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %29 = bitcast %class.SkEventTracer* %28 to i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)***
  %30 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)**, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*** %29, align 8
  %31 = getelementptr inbounds i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %30, i64 4
  %32 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %31, align 8
  %33 = tail call i64 %32(%class.SkEventTracer* %28, i8 signext 88, i8* %16, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @__PRETTY_FUNCTION__._ZN8SkCanvas9drawPaintERK7SkPaint, i64 0, i64 0), i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #15
  %34 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %3, i64 0, i32 1
  %35 = getelementptr inbounds %"struct.skia::tracing_internals::ScopedTracer::Data", %"struct.skia::tracing_internals::ScopedTracer::Data"* %34, i64 0, i32 0
  store i8* %16, i8** %35, align 8
  store i8* getelementptr inbounds ([42 x i8], [42 x i8]* @__PRETTY_FUNCTION__._ZN8SkCanvas9drawPaintERK7SkPaint, i64 0, i64 0), i8** %20, align 8
  store i64 %33, i64* %21, align 8
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* %34, %"struct.skia::tracing_internals::ScopedTracer::Data"** %18, align 8
  br label %36

36:                                               ; preds = %15, %27
  %37 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*, %class.SkPaint*)***
  %38 = load void (%class.SkCanvas*, %class.SkPaint*)**, void (%class.SkCanvas*, %class.SkPaint*)*** %37, align 8
  %39 = getelementptr inbounds void (%class.SkCanvas*, %class.SkPaint*)*, void (%class.SkCanvas*, %class.SkPaint*)** %38, i64 22
  %40 = load void (%class.SkCanvas*, %class.SkPaint*)*, void (%class.SkCanvas*, %class.SkPaint*)** %39, align 8
  call void %40(%class.SkCanvas* %0, %class.SkPaint* dereferenceable(72) %1) #15
  %41 = load %"struct.skia::tracing_internals::ScopedTracer::Data"*, %"struct.skia::tracing_internals::ScopedTracer::Data"** %18, align 8
  %42 = icmp eq %"struct.skia::tracing_internals::ScopedTracer::Data"* %41, null
  br i1 %42, label %56, label %43

43:                                               ; preds = %36
  %44 = load i8*, i8** %19, align 8
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %56, label %47

47:                                               ; preds = %43
  %48 = call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %49 = load i8*, i8** %19, align 8
  %50 = load i8*, i8** %20, align 8
  %51 = load i64, i64* %21, align 8
  %52 = bitcast %class.SkEventTracer* %48 to void (%class.SkEventTracer*, i8*, i8*, i64)***
  %53 = load void (%class.SkEventTracer*, i8*, i8*, i64)**, void (%class.SkEventTracer*, i8*, i8*, i64)*** %52, align 8
  %54 = getelementptr inbounds void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %53, i64 5
  %55 = load void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %54, align 8
  call void %55(%class.SkEventTracer* %48, i8* %49, i8* %50, i64 %51) #15
  br label %56

56:                                               ; preds = %36, %43, %47
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas8drawRectERK6SkRectRK7SkPaint(%class.SkCanvas*, %struct.SkRect* nocapture readonly dereferenceable(16), %class.SkPaint* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.skia::tracing_internals::ScopedTracer", align 8
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = bitcast { <2 x float>, <2 x float> }* %5 to %struct.SkRect*
  %7 = load atomic i64, i64* @_ZZN8SkCanvas8drawRectERK6SkRectRK7SkPaintE29trace_event_unique_atomic1674.0.0 monotonic, align 8
  %8 = inttoptr i64 %7 to i8*
  %9 = icmp eq i64 %7, 0
  br i1 %9, label %10, label %18

10:                                               ; preds = %3
  %11 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %12 = bitcast %class.SkEventTracer* %11 to i8* (%class.SkEventTracer*, i8*)***
  %13 = load i8* (%class.SkEventTracer*, i8*)**, i8* (%class.SkEventTracer*, i8*)*** %12, align 8
  %14 = getelementptr inbounds i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %13, i64 2
  %15 = load i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %14, align 8
  %16 = tail call i8* %15(%class.SkEventTracer* %11, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0)) #15
  %17 = ptrtoint i8* %16 to i64
  store atomic i64 %17, i64* @_ZZN8SkCanvas8drawRectERK6SkRectRK7SkPaintE29trace_event_unique_atomic1674.0.0 monotonic, align 8
  br label %18

18:                                               ; preds = %3, %10
  %19 = phi i8* [ %8, %3 ], [ %16, %10 ]
  %20 = bitcast %"class.skia::tracing_internals::ScopedTracer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #15
  %21 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %4, i64 0, i32 0
  %22 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %4, i64 0, i32 1, i32 0
  %23 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %4, i64 0, i32 1, i32 1
  %24 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %4, i64 0, i32 1, i32 2
  %25 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %4, i64 0, i32 1
  %26 = bitcast %"struct.skia::tracing_internals::ScopedTracer::Data"* %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 24, i1 false)
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* null, %"struct.skia::tracing_internals::ScopedTracer::Data"** %21, align 8
  %27 = load i8, i8* %19, align 1
  %28 = and i8 %27, 5
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %39, label %30

30:                                               ; preds = %18
  %31 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %32 = bitcast %class.SkEventTracer* %31 to i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)***
  %33 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)**, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*** %32, align 8
  %34 = getelementptr inbounds i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %33, i64 4
  %35 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %34, align 8
  %36 = tail call i64 %35(%class.SkEventTracer* %31, i8 signext 88, i8* %19, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @__PRETTY_FUNCTION__._ZN8SkCanvas8drawRectERK6SkRectRK7SkPaint, i64 0, i64 0), i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #15
  %37 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %4, i64 0, i32 1
  %38 = getelementptr inbounds %"struct.skia::tracing_internals::ScopedTracer::Data", %"struct.skia::tracing_internals::ScopedTracer::Data"* %37, i64 0, i32 0
  store i8* %19, i8** %38, align 8
  store i8* getelementptr inbounds ([57 x i8], [57 x i8]* @__PRETTY_FUNCTION__._ZN8SkCanvas8drawRectERK6SkRectRK7SkPaint, i64 0, i64 0), i8** %23, align 8
  store i64 %36, i64* %24, align 8
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* %37, %"struct.skia::tracing_internals::ScopedTracer::Data"** %21, align 8
  br label %39

39:                                               ; preds = %18, %30
  %40 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #15
  %41 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 0
  %42 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 2
  %43 = load float, float* %42, align 4
  %44 = load float, float* %41, align 4
  %45 = fcmp olt float %43, %44
  %46 = select i1 %45, float %43, float %44
  %47 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 1
  %48 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 3
  %49 = load float, float* %48, align 4
  %50 = load float, float* %47, align 4
  %51 = fcmp olt float %49, %50
  %52 = select i1 %51, float %49, float %50
  %53 = fcmp olt float %44, %43
  %54 = select i1 %53, float %43, float %44
  %55 = fcmp olt float %50, %49
  %56 = select i1 %55, float %49, float %50
  %57 = insertelement <2 x float> undef, float %46, i32 0
  %58 = insertelement <2 x float> %57, float %52, i32 1
  %59 = insertelement <2 x float> undef, float %54, i32 0
  %60 = insertelement <2 x float> %59, float %56, i32 1
  %61 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  store <2 x float> %58, <2 x float>* %61, align 8
  %62 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  store <2 x float> %60, <2 x float>* %62, align 8
  %63 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)***
  %64 = load void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)**, void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)*** %63, align 8
  %65 = getelementptr inbounds void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)*, void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)** %64, i64 24
  %66 = load void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)*, void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)** %65, align 8
  call void %66(%class.SkCanvas* %0, %struct.SkRect* nonnull dereferenceable(16) %6, %class.SkPaint* dereferenceable(72) %2) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #15
  %67 = load %"struct.skia::tracing_internals::ScopedTracer::Data"*, %"struct.skia::tracing_internals::ScopedTracer::Data"** %21, align 8
  %68 = icmp eq %"struct.skia::tracing_internals::ScopedTracer::Data"* %67, null
  br i1 %68, label %82, label %69

69:                                               ; preds = %39
  %70 = load i8*, i8** %22, align 8
  %71 = load i8, i8* %70, align 1
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %82, label %73

73:                                               ; preds = %69
  %74 = call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %75 = load i8*, i8** %22, align 8
  %76 = load i8*, i8** %23, align 8
  %77 = load i64, i64* %24, align 8
  %78 = bitcast %class.SkEventTracer* %74 to void (%class.SkEventTracer*, i8*, i8*, i64)***
  %79 = load void (%class.SkEventTracer*, i8*, i8*, i64)**, void (%class.SkEventTracer*, i8*, i8*, i64)*** %78, align 8
  %80 = getelementptr inbounds void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %79, i64 5
  %81 = load void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %80, align 8
  call void %81(%class.SkEventTracer* %74, i8* %75, i8* %76, i64 %77) #15
  br label %82

82:                                               ; preds = %39, %69, %73
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas10drawRegionERK8SkRegionRK7SkPaint(%class.SkCanvas*, %class.SkRegion* dereferenceable(24), %class.SkPaint* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca <4 x float>, align 16
  %5 = bitcast <4 x float>* %4 to %struct.SkRect*
  %6 = alloca %"class.skia::tracing_internals::ScopedTracer", align 8
  %7 = load atomic i64, i64* @_ZZN8SkCanvas10drawRegionERK8SkRegionRK7SkPaintE29trace_event_unique_atomic1686.0.0 monotonic, align 8
  %8 = inttoptr i64 %7 to i8*
  %9 = icmp eq i64 %7, 0
  br i1 %9, label %10, label %18

10:                                               ; preds = %3
  %11 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %12 = bitcast %class.SkEventTracer* %11 to i8* (%class.SkEventTracer*, i8*)***
  %13 = load i8* (%class.SkEventTracer*, i8*)**, i8* (%class.SkEventTracer*, i8*)*** %12, align 8
  %14 = getelementptr inbounds i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %13, i64 2
  %15 = load i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %14, align 8
  %16 = tail call i8* %15(%class.SkEventTracer* %11, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0)) #15
  %17 = ptrtoint i8* %16 to i64
  store atomic i64 %17, i64* @_ZZN8SkCanvas10drawRegionERK8SkRegionRK7SkPaintE29trace_event_unique_atomic1686.0.0 monotonic, align 8
  br label %18

18:                                               ; preds = %3, %10
  %19 = phi i8* [ %8, %3 ], [ %16, %10 ]
  %20 = bitcast %"class.skia::tracing_internals::ScopedTracer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #15
  %21 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %6, i64 0, i32 0
  %22 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %6, i64 0, i32 1, i32 0
  %23 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %6, i64 0, i32 1, i32 1
  %24 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %6, i64 0, i32 1, i32 2
  %25 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %6, i64 0, i32 1
  %26 = bitcast %"struct.skia::tracing_internals::ScopedTracer::Data"* %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 24, i1 false)
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* null, %"struct.skia::tracing_internals::ScopedTracer::Data"** %21, align 8
  %27 = load i8, i8* %19, align 1
  %28 = and i8 %27, 5
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %39, label %30

30:                                               ; preds = %18
  %31 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %32 = bitcast %class.SkEventTracer* %31 to i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)***
  %33 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)**, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*** %32, align 8
  %34 = getelementptr inbounds i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %33, i64 4
  %35 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %34, align 8
  %36 = tail call i64 %35(%class.SkEventTracer* %31, i8 signext 88, i8* %19, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN8SkCanvas10drawRegionERK8SkRegionRK7SkPaint, i64 0, i64 0), i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #15
  %37 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %6, i64 0, i32 1
  %38 = getelementptr inbounds %"struct.skia::tracing_internals::ScopedTracer::Data", %"struct.skia::tracing_internals::ScopedTracer::Data"* %37, i64 0, i32 0
  store i8* %19, i8** %38, align 8
  store i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN8SkCanvas10drawRegionERK8SkRegionRK7SkPaint, i64 0, i64 0), i8** %23, align 8
  store i64 %36, i64* %24, align 8
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* %37, %"struct.skia::tracing_internals::ScopedTracer::Data"** %21, align 8
  br label %39

39:                                               ; preds = %18, %30
  %40 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %1, i64 0, i32 1
  %41 = bitcast %"struct.SkRegion::RunHead"** %40 to i64*
  %42 = load i64, i64* %41, align 8
  switch i64 %42, label %48 [
    i64 -1, label %53
    i64 0, label %43
  ]

43:                                               ; preds = %39
  %44 = bitcast <4 x float>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #15
  %45 = bitcast %class.SkRegion* %1 to <4 x i32>*
  %46 = load <4 x i32>, <4 x i32>* %45, align 4
  %47 = sitofp <4 x i32> %46 to <4 x float>
  store <4 x float> %47, <4 x float>* %4, align 16
  call void @_ZN8SkCanvas8drawRectERK6SkRectRK7SkPaint(%class.SkCanvas* %0, %struct.SkRect* nonnull dereferenceable(16) %5, %class.SkPaint* dereferenceable(72) %2) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #15
  br label %53

48:                                               ; preds = %39
  %49 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*, %class.SkRegion*, %class.SkPaint*)***
  %50 = load void (%class.SkCanvas*, %class.SkRegion*, %class.SkPaint*)**, void (%class.SkCanvas*, %class.SkRegion*, %class.SkPaint*)*** %49, align 8
  %51 = getelementptr inbounds void (%class.SkCanvas*, %class.SkRegion*, %class.SkPaint*)*, void (%class.SkCanvas*, %class.SkRegion*, %class.SkPaint*)** %50, i64 30
  %52 = load void (%class.SkCanvas*, %class.SkRegion*, %class.SkPaint*)*, void (%class.SkCanvas*, %class.SkRegion*, %class.SkPaint*)** %51, align 8
  call void %52(%class.SkCanvas* %0, %class.SkRegion* dereferenceable(24) %1, %class.SkPaint* dereferenceable(72) %2) #15
  br label %53

53:                                               ; preds = %39, %48, %43
  %54 = load %"struct.skia::tracing_internals::ScopedTracer::Data"*, %"struct.skia::tracing_internals::ScopedTracer::Data"** %21, align 8
  %55 = icmp eq %"struct.skia::tracing_internals::ScopedTracer::Data"* %54, null
  br i1 %55, label %69, label %56

56:                                               ; preds = %53
  %57 = load i8*, i8** %22, align 8
  %58 = load i8, i8* %57, align 1
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %69, label %60

60:                                               ; preds = %56
  %61 = call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %62 = load i8*, i8** %22, align 8
  %63 = load i8*, i8** %23, align 8
  %64 = load i64, i64* %24, align 8
  %65 = bitcast %class.SkEventTracer* %61 to void (%class.SkEventTracer*, i8*, i8*, i64)***
  %66 = load void (%class.SkEventTracer*, i8*, i8*, i64)**, void (%class.SkEventTracer*, i8*, i8*, i64)*** %65, align 8
  %67 = getelementptr inbounds void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %66, i64 5
  %68 = load void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %67, align 8
  call void %68(%class.SkEventTracer* %61, i8* %62, i8* %63, i64 %64) #15
  br label %69

69:                                               ; preds = %53, %56, %60
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas8drawOvalERK6SkRectRK7SkPaint(%class.SkCanvas*, %struct.SkRect* nocapture readonly dereferenceable(16), %class.SkPaint* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.skia::tracing_internals::ScopedTracer", align 8
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = bitcast { <2 x float>, <2 x float> }* %5 to %struct.SkRect*
  %7 = load atomic i64, i64* @_ZZN8SkCanvas8drawOvalERK6SkRectRK7SkPaintE29trace_event_unique_atomic1699.0.0 monotonic, align 8
  %8 = inttoptr i64 %7 to i8*
  %9 = icmp eq i64 %7, 0
  br i1 %9, label %10, label %18

10:                                               ; preds = %3
  %11 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %12 = bitcast %class.SkEventTracer* %11 to i8* (%class.SkEventTracer*, i8*)***
  %13 = load i8* (%class.SkEventTracer*, i8*)**, i8* (%class.SkEventTracer*, i8*)*** %12, align 8
  %14 = getelementptr inbounds i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %13, i64 2
  %15 = load i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %14, align 8
  %16 = tail call i8* %15(%class.SkEventTracer* %11, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0)) #15
  %17 = ptrtoint i8* %16 to i64
  store atomic i64 %17, i64* @_ZZN8SkCanvas8drawOvalERK6SkRectRK7SkPaintE29trace_event_unique_atomic1699.0.0 monotonic, align 8
  br label %18

18:                                               ; preds = %3, %10
  %19 = phi i8* [ %8, %3 ], [ %16, %10 ]
  %20 = bitcast %"class.skia::tracing_internals::ScopedTracer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #15
  %21 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %4, i64 0, i32 0
  %22 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %4, i64 0, i32 1, i32 0
  %23 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %4, i64 0, i32 1, i32 1
  %24 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %4, i64 0, i32 1, i32 2
  %25 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %4, i64 0, i32 1
  %26 = bitcast %"struct.skia::tracing_internals::ScopedTracer::Data"* %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 24, i1 false)
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* null, %"struct.skia::tracing_internals::ScopedTracer::Data"** %21, align 8
  %27 = load i8, i8* %19, align 1
  %28 = and i8 %27, 5
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %39, label %30

30:                                               ; preds = %18
  %31 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %32 = bitcast %class.SkEventTracer* %31 to i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)***
  %33 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)**, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*** %32, align 8
  %34 = getelementptr inbounds i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %33, i64 4
  %35 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %34, align 8
  %36 = tail call i64 %35(%class.SkEventTracer* %31, i8 signext 88, i8* %19, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @__PRETTY_FUNCTION__._ZN8SkCanvas8drawOvalERK6SkRectRK7SkPaint, i64 0, i64 0), i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #15
  %37 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %4, i64 0, i32 1
  %38 = getelementptr inbounds %"struct.skia::tracing_internals::ScopedTracer::Data", %"struct.skia::tracing_internals::ScopedTracer::Data"* %37, i64 0, i32 0
  store i8* %19, i8** %38, align 8
  store i8* getelementptr inbounds ([57 x i8], [57 x i8]* @__PRETTY_FUNCTION__._ZN8SkCanvas8drawOvalERK6SkRectRK7SkPaint, i64 0, i64 0), i8** %23, align 8
  store i64 %36, i64* %24, align 8
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* %37, %"struct.skia::tracing_internals::ScopedTracer::Data"** %21, align 8
  br label %39

39:                                               ; preds = %18, %30
  %40 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #15
  %41 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 0
  %42 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 2
  %43 = load float, float* %42, align 4
  %44 = load float, float* %41, align 4
  %45 = fcmp olt float %43, %44
  %46 = select i1 %45, float %43, float %44
  %47 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 1
  %48 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 3
  %49 = load float, float* %48, align 4
  %50 = load float, float* %47, align 4
  %51 = fcmp olt float %49, %50
  %52 = select i1 %51, float %49, float %50
  %53 = fcmp olt float %44, %43
  %54 = select i1 %53, float %43, float %44
  %55 = fcmp olt float %50, %49
  %56 = select i1 %55, float %49, float %50
  %57 = insertelement <2 x float> undef, float %46, i32 0
  %58 = insertelement <2 x float> %57, float %52, i32 1
  %59 = insertelement <2 x float> undef, float %54, i32 0
  %60 = insertelement <2 x float> %59, float %56, i32 1
  %61 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  store <2 x float> %58, <2 x float>* %61, align 8
  %62 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  store <2 x float> %60, <2 x float>* %62, align 8
  %63 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)***
  %64 = load void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)**, void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)*** %63, align 8
  %65 = getelementptr inbounds void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)*, void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)** %64, i64 27
  %66 = load void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)*, void (%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*)** %65, align 8
  call void %66(%class.SkCanvas* %0, %struct.SkRect* nonnull dereferenceable(16) %6, %class.SkPaint* dereferenceable(72) %2) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #15
  %67 = load %"struct.skia::tracing_internals::ScopedTracer::Data"*, %"struct.skia::tracing_internals::ScopedTracer::Data"** %21, align 8
  %68 = icmp eq %"struct.skia::tracing_internals::ScopedTracer::Data"* %67, null
  br i1 %68, label %82, label %69

69:                                               ; preds = %39
  %70 = load i8*, i8** %22, align 8
  %71 = load i8, i8* %70, align 1
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %82, label %73

73:                                               ; preds = %69
  %74 = call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %75 = load i8*, i8** %22, align 8
  %76 = load i8*, i8** %23, align 8
  %77 = load i64, i64* %24, align 8
  %78 = bitcast %class.SkEventTracer* %74 to void (%class.SkEventTracer*, i8*, i8*, i64)***
  %79 = load void (%class.SkEventTracer*, i8*, i8*, i64)**, void (%class.SkEventTracer*, i8*, i8*, i64)*** %78, align 8
  %80 = getelementptr inbounds void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %79, i64 5
  %81 = load void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %80, align 8
  call void %81(%class.SkEventTracer* %74, i8* %75, i8* %76, i64 %77) #15
  br label %82

82:                                               ; preds = %39, %69, %73
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas10drawPointsENS_9PointModeEmPK7SkPointRK7SkPaint(%class.SkCanvas*, i32, i64, %struct.SkPoint*, %class.SkPaint* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.skia::tracing_internals::ScopedTracer", align 8
  %7 = load atomic i64, i64* @_ZZN8SkCanvas10drawPointsENS_9PointModeEmPK7SkPointRK7SkPaintE29trace_event_unique_atomic1711.0.0 monotonic, align 8
  %8 = inttoptr i64 %7 to i8*
  %9 = icmp eq i64 %7, 0
  br i1 %9, label %10, label %18

10:                                               ; preds = %5
  %11 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %12 = bitcast %class.SkEventTracer* %11 to i8* (%class.SkEventTracer*, i8*)***
  %13 = load i8* (%class.SkEventTracer*, i8*)**, i8* (%class.SkEventTracer*, i8*)*** %12, align 8
  %14 = getelementptr inbounds i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %13, i64 2
  %15 = load i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %14, align 8
  %16 = tail call i8* %15(%class.SkEventTracer* %11, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0)) #15
  %17 = ptrtoint i8* %16 to i64
  store atomic i64 %17, i64* @_ZZN8SkCanvas10drawPointsENS_9PointModeEmPK7SkPointRK7SkPaintE29trace_event_unique_atomic1711.0.0 monotonic, align 8
  br label %18

18:                                               ; preds = %5, %10
  %19 = phi i8* [ %8, %5 ], [ %16, %10 ]
  %20 = bitcast %"class.skia::tracing_internals::ScopedTracer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #15
  %21 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %6, i64 0, i32 0
  %22 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %6, i64 0, i32 1, i32 0
  %23 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %6, i64 0, i32 1, i32 1
  %24 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %6, i64 0, i32 1, i32 2
  %25 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %6, i64 0, i32 1
  %26 = bitcast %"struct.skia::tracing_internals::ScopedTracer::Data"* %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 24, i1 false)
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* null, %"struct.skia::tracing_internals::ScopedTracer::Data"** %21, align 8
  %27 = load i8, i8* %19, align 1
  %28 = and i8 %27, 5
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %39, label %30

30:                                               ; preds = %18
  %31 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %32 = bitcast %class.SkEventTracer* %31 to i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)***
  %33 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)**, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*** %32, align 8
  %34 = getelementptr inbounds i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %33, i64 4
  %35 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %34, align 8
  %36 = tail call i64 %35(%class.SkEventTracer* %31, i8 signext 88, i8* %19, i8* getelementptr inbounds ([89 x i8], [89 x i8]* @__PRETTY_FUNCTION__._ZN8SkCanvas10drawPointsENS_9PointModeEmPK7SkPointRK7SkPaint, i64 0, i64 0), i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #15
  %37 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %6, i64 0, i32 1
  %38 = getelementptr inbounds %"struct.skia::tracing_internals::ScopedTracer::Data", %"struct.skia::tracing_internals::ScopedTracer::Data"* %37, i64 0, i32 0
  store i8* %19, i8** %38, align 8
  store i8* getelementptr inbounds ([89 x i8], [89 x i8]* @__PRETTY_FUNCTION__._ZN8SkCanvas10drawPointsENS_9PointModeEmPK7SkPointRK7SkPaint, i64 0, i64 0), i8** %23, align 8
  store i64 %36, i64* %24, align 8
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* %37, %"struct.skia::tracing_internals::ScopedTracer::Data"** %21, align 8
  br label %39

39:                                               ; preds = %18, %30
  %40 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*, i32, i64, %struct.SkPoint*, %class.SkPaint*)***
  %41 = load void (%class.SkCanvas*, i32, i64, %struct.SkPoint*, %class.SkPaint*)**, void (%class.SkCanvas*, i32, i64, %struct.SkPoint*, %class.SkPaint*)*** %40, align 8
  %42 = getelementptr inbounds void (%class.SkCanvas*, i32, i64, %struct.SkPoint*, %class.SkPaint*)*, void (%class.SkCanvas*, i32, i64, %struct.SkPoint*, %class.SkPaint*)** %41, i64 34
  %43 = load void (%class.SkCanvas*, i32, i64, %struct.SkPoint*, %class.SkPaint*)*, void (%class.SkCanvas*, i32, i64, %struct.SkPoint*, %class.SkPaint*)** %42, align 8
  call void %43(%class.SkCanvas* %0, i32 %1, i64 %2, %struct.SkPoint* %3, %class.SkPaint* dereferenceable(72) %4) #15
  %44 = load %"struct.skia::tracing_internals::ScopedTracer::Data"*, %"struct.skia::tracing_internals::ScopedTracer::Data"** %21, align 8
  %45 = icmp eq %"struct.skia::tracing_internals::ScopedTracer::Data"* %44, null
  br i1 %45, label %59, label %46

46:                                               ; preds = %39
  %47 = load i8*, i8** %22, align 8
  %48 = load i8, i8* %47, align 1
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %59, label %50

50:                                               ; preds = %46
  %51 = call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %52 = load i8*, i8** %22, align 8
  %53 = load i8*, i8** %23, align 8
  %54 = load i64, i64* %24, align 8
  %55 = bitcast %class.SkEventTracer* %51 to void (%class.SkEventTracer*, i8*, i8*, i64)***
  %56 = load void (%class.SkEventTracer*, i8*, i8*, i64)**, void (%class.SkEventTracer*, i8*, i8*, i64)*** %55, align 8
  %57 = getelementptr inbounds void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %56, i64 5
  %58 = load void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %57, align 8
  call void %58(%class.SkEventTracer* %51, i8* %52, i8* %53, i64 %54) #15
  br label %59

59:                                               ; preds = %39, %46, %50
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas12drawVerticesERK5sk_spI10SkVerticesE11SkBlendModeRK7SkPaint(%class.SkCanvas*, %class.sk_sp.248* nocapture readonly dereferenceable(8), i32, %class.SkPaint* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.sk_sp.248, %class.sk_sp.248* %1, i64 0, i32 0
  %6 = load %class.SkVertices*, %class.SkVertices** %5, align 8
  tail call void @_ZN8SkCanvas12drawVerticesEPK10SkVertices11SkBlendModeRK7SkPaint(%class.SkCanvas* %0, %class.SkVertices* %6, i32 %2, %class.SkPaint* dereferenceable(72) %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas12drawVerticesEPK10SkVertices11SkBlendModeRK7SkPaint(%class.SkCanvas*, %class.SkVertices*, i32, %class.SkPaint* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.skia::tracing_internals::ScopedTracer", align 8
  %6 = load atomic i64, i64* @_ZZN8SkCanvas12drawVerticesEPK10SkVertices11SkBlendModeRK7SkPaintE29trace_event_unique_atomic1721.0.0 monotonic, align 8
  %7 = inttoptr i64 %6 to i8*
  %8 = icmp eq i64 %6, 0
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %11 = bitcast %class.SkEventTracer* %10 to i8* (%class.SkEventTracer*, i8*)***
  %12 = load i8* (%class.SkEventTracer*, i8*)**, i8* (%class.SkEventTracer*, i8*)*** %11, align 8
  %13 = getelementptr inbounds i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %12, i64 2
  %14 = load i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %13, align 8
  %15 = tail call i8* %14(%class.SkEventTracer* %10, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0)) #15
  %16 = ptrtoint i8* %15 to i64
  store atomic i64 %16, i64* @_ZZN8SkCanvas12drawVerticesEPK10SkVertices11SkBlendModeRK7SkPaintE29trace_event_unique_atomic1721.0.0 monotonic, align 8
  br label %17

17:                                               ; preds = %4, %9
  %18 = phi i8* [ %7, %4 ], [ %15, %9 ]
  %19 = bitcast %"class.skia::tracing_internals::ScopedTracer"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #15
  %20 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %5, i64 0, i32 0
  %21 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %5, i64 0, i32 1, i32 0
  %22 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %5, i64 0, i32 1, i32 1
  %23 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %5, i64 0, i32 1, i32 2
  %24 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %5, i64 0, i32 1
  %25 = bitcast %"struct.skia::tracing_internals::ScopedTracer::Data"* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 24, i1 false)
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* null, %"struct.skia::tracing_internals::ScopedTracer::Data"** %20, align 8
  %26 = load i8, i8* %18, align 1
  %27 = and i8 %26, 5
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %38, label %29

29:                                               ; preds = %17
  %30 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %31 = bitcast %class.SkEventTracer* %30 to i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)***
  %32 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)**, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*** %31, align 8
  %33 = getelementptr inbounds i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %32, i64 4
  %34 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %33, align 8
  %35 = tail call i64 %34(%class.SkEventTracer* %30, i8 signext 88, i8* %18, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @__PRETTY_FUNCTION__._ZN8SkCanvas12drawVerticesEPK10SkVertices11SkBlendModeRK7SkPaint, i64 0, i64 0), i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #15
  %36 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %5, i64 0, i32 1
  %37 = getelementptr inbounds %"struct.skia::tracing_internals::ScopedTracer::Data", %"struct.skia::tracing_internals::ScopedTracer::Data"* %36, i64 0, i32 0
  store i8* %18, i8** %37, align 8
  store i8* getelementptr inbounds ([78 x i8], [78 x i8]* @__PRETTY_FUNCTION__._ZN8SkCanvas12drawVerticesEPK10SkVertices11SkBlendModeRK7SkPaint, i64 0, i64 0), i8** %22, align 8
  store i64 %35, i64* %23, align 8
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* %36, %"struct.skia::tracing_internals::ScopedTracer::Data"** %20, align 8
  br label %38

38:                                               ; preds = %17, %29
  %39 = phi %"struct.skia::tracing_internals::ScopedTracer::Data"* [ null, %17 ], [ %36, %29 ]
  %40 = icmp eq %class.SkVertices* %1, null
  br i1 %40, label %47, label %41

41:                                               ; preds = %38
  %42 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*, %class.SkVertices*, i32, %class.SkPaint*)***
  %43 = load void (%class.SkCanvas*, %class.SkVertices*, i32, %class.SkPaint*)**, void (%class.SkCanvas*, %class.SkVertices*, i32, %class.SkPaint*)*** %42, align 8
  %44 = getelementptr inbounds void (%class.SkCanvas*, %class.SkVertices*, i32, %class.SkPaint*)*, void (%class.SkCanvas*, %class.SkVertices*, i32, %class.SkPaint*)** %43, i64 40
  %45 = load void (%class.SkCanvas*, %class.SkVertices*, i32, %class.SkPaint*)*, void (%class.SkCanvas*, %class.SkVertices*, i32, %class.SkPaint*)** %44, align 8
  call void %45(%class.SkCanvas* %0, %class.SkVertices* nonnull %1, i32 %2, %class.SkPaint* dereferenceable(72) %3) #15
  %46 = load %"struct.skia::tracing_internals::ScopedTracer::Data"*, %"struct.skia::tracing_internals::ScopedTracer::Data"** %20, align 8
  br label %47

47:                                               ; preds = %38, %41
  %48 = phi %"struct.skia::tracing_internals::ScopedTracer::Data"* [ %39, %38 ], [ %46, %41 ]
  %49 = icmp eq %"struct.skia::tracing_internals::ScopedTracer::Data"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %47
  %51 = load i8*, i8** %21, align 8
  %52 = load i8, i8* %51, align 1
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %63, label %54

54:                                               ; preds = %50
  %55 = call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %56 = load i8*, i8** %21, align 8
  %57 = load i8*, i8** %22, align 8
  %58 = load i64, i64* %23, align 8
  %59 = bitcast %class.SkEventTracer* %55 to void (%class.SkEventTracer*, i8*, i8*, i64)***
  %60 = load void (%class.SkEventTracer*, i8*, i8*, i64)**, void (%class.SkEventTracer*, i8*, i8*, i64)*** %59, align 8
  %61 = getelementptr inbounds void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %60, i64 5
  %62 = load void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %61, align 8
  call void %62(%class.SkEventTracer* %55, i8* %56, i8* %57, i64 %58) #15
  br label %63

63:                                               ; preds = %47, %50, %54
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas8drawPathERK6SkPathRK7SkPaint(%class.SkCanvas*, %class.SkPath* dereferenceable(16), %class.SkPaint* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.skia::tracing_internals::ScopedTracer", align 8
  %5 = load atomic i64, i64* @_ZZN8SkCanvas8drawPathERK6SkPathRK7SkPaintE29trace_event_unique_atomic1741.0.0 monotonic, align 8
  %6 = inttoptr i64 %5 to i8*
  %7 = icmp eq i64 %5, 0
  br i1 %7, label %8, label %16

8:                                                ; preds = %3
  %9 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %10 = bitcast %class.SkEventTracer* %9 to i8* (%class.SkEventTracer*, i8*)***
  %11 = load i8* (%class.SkEventTracer*, i8*)**, i8* (%class.SkEventTracer*, i8*)*** %10, align 8
  %12 = getelementptr inbounds i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %11, i64 2
  %13 = load i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %12, align 8
  %14 = tail call i8* %13(%class.SkEventTracer* %9, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0)) #15
  %15 = ptrtoint i8* %14 to i64
  store atomic i64 %15, i64* @_ZZN8SkCanvas8drawPathERK6SkPathRK7SkPaintE29trace_event_unique_atomic1741.0.0 monotonic, align 8
  br label %16

16:                                               ; preds = %3, %8
  %17 = phi i8* [ %6, %3 ], [ %14, %8 ]
  %18 = bitcast %"class.skia::tracing_internals::ScopedTracer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %18) #15
  %19 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %4, i64 0, i32 0
  %20 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %4, i64 0, i32 1, i32 0
  %21 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %4, i64 0, i32 1, i32 1
  %22 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %4, i64 0, i32 1, i32 2
  %23 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %4, i64 0, i32 1
  %24 = bitcast %"struct.skia::tracing_internals::ScopedTracer::Data"* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 24, i1 false)
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* null, %"struct.skia::tracing_internals::ScopedTracer::Data"** %19, align 8
  %25 = load i8, i8* %17, align 1
  %26 = and i8 %25, 5
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %37, label %28

28:                                               ; preds = %16
  %29 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %30 = bitcast %class.SkEventTracer* %29 to i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)***
  %31 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)**, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*** %30, align 8
  %32 = getelementptr inbounds i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %31, i64 4
  %33 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %32, align 8
  %34 = tail call i64 %33(%class.SkEventTracer* %29, i8 signext 88, i8* %17, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @__PRETTY_FUNCTION__._ZN8SkCanvas8drawPathERK6SkPathRK7SkPaint, i64 0, i64 0), i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #15
  %35 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %4, i64 0, i32 1
  %36 = getelementptr inbounds %"struct.skia::tracing_internals::ScopedTracer::Data", %"struct.skia::tracing_internals::ScopedTracer::Data"* %35, i64 0, i32 0
  store i8* %17, i8** %36, align 8
  store i8* getelementptr inbounds ([57 x i8], [57 x i8]* @__PRETTY_FUNCTION__._ZN8SkCanvas8drawPathERK6SkPathRK7SkPaint, i64 0, i64 0), i8** %21, align 8
  store i64 %34, i64* %22, align 8
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* %35, %"struct.skia::tracing_internals::ScopedTracer::Data"** %19, align 8
  br label %37

37:                                               ; preds = %16, %28
  %38 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*, %class.SkPath*, %class.SkPaint*)***
  %39 = load void (%class.SkCanvas*, %class.SkPath*, %class.SkPaint*)**, void (%class.SkCanvas*, %class.SkPath*, %class.SkPaint*)*** %38, align 8
  %40 = getelementptr inbounds void (%class.SkCanvas*, %class.SkPath*, %class.SkPaint*)*, void (%class.SkCanvas*, %class.SkPath*, %class.SkPaint*)** %39, i64 29
  %41 = load void (%class.SkCanvas*, %class.SkPath*, %class.SkPaint*)*, void (%class.SkCanvas*, %class.SkPath*, %class.SkPaint*)** %40, align 8
  call void %41(%class.SkCanvas* %0, %class.SkPath* dereferenceable(16) %1, %class.SkPaint* dereferenceable(72) %2) #15
  %42 = load %"struct.skia::tracing_internals::ScopedTracer::Data"*, %"struct.skia::tracing_internals::ScopedTracer::Data"** %19, align 8
  %43 = icmp eq %"struct.skia::tracing_internals::ScopedTracer::Data"* %42, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %37
  %45 = load i8*, i8** %20, align 8
  %46 = load i8, i8* %45, align 1
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %57, label %48

48:                                               ; preds = %44
  %49 = call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %50 = load i8*, i8** %20, align 8
  %51 = load i8*, i8** %21, align 8
  %52 = load i64, i64* %22, align 8
  %53 = bitcast %class.SkEventTracer* %49 to void (%class.SkEventTracer*, i8*, i8*, i64)***
  %54 = load void (%class.SkEventTracer*, i8*, i8*, i64)**, void (%class.SkEventTracer*, i8*, i8*, i64)*** %53, align 8
  %55 = getelementptr inbounds void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %54, i64 5
  %56 = load void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %55, align 8
  call void %56(%class.SkEventTracer* %49, i8* %50, i8* %51, i64 %52) #15
  br label %57

57:                                               ; preds = %37, %44, %48
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas13drawImageNineEPK7SkImageRK7SkIRectRK6SkRect12SkFilterModePK7SkPaint(%class.SkCanvas*, %class.SkImage*, %struct.SkIRect* nocapture readonly dereferenceable(16), %struct.SkRect* dereferenceable(16), i32, %class.SkPaint*) local_unnamed_addr #0 align 2 {
  %7 = alloca [2 x i32], align 4
  %8 = alloca [2 x i32], align 4
  %9 = alloca %"struct.SkCanvas::Lattice", align 8
  %10 = icmp eq %class.SkImage* %1, null
  br i1 %10, label %34, label %11

11:                                               ; preds = %6
  %12 = bitcast [2 x i32]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #15
  %13 = getelementptr inbounds [2 x i32], [2 x i32]* %7, i64 0, i64 0
  %14 = getelementptr inbounds [2 x i32], [2 x i32]* %7, i64 0, i64 1
  %15 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  store i32 %16, i32* %13, align 4
  %17 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 2
  %18 = load i32, i32* %17, align 4
  store i32 %18, i32* %14, align 4
  %19 = bitcast [2 x i32]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #15
  %20 = getelementptr inbounds [2 x i32], [2 x i32]* %8, i64 0, i64 0
  %21 = getelementptr inbounds [2 x i32], [2 x i32]* %8, i64 0, i64 1
  %22 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  store i32 %23, i32* %20, align 4
  %24 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 3
  %25 = load i32, i32* %24, align 4
  store i32 %25, i32* %21, align 4
  %26 = bitcast %"struct.SkCanvas::Lattice"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %26) #15
  %27 = getelementptr inbounds %"struct.SkCanvas::Lattice", %"struct.SkCanvas::Lattice"* %9, i64 0, i32 0
  store i32* %13, i32** %27, align 8
  %28 = getelementptr inbounds %"struct.SkCanvas::Lattice", %"struct.SkCanvas::Lattice"* %9, i64 0, i32 1
  store i32* %20, i32** %28, align 8
  %29 = getelementptr inbounds %"struct.SkCanvas::Lattice", %"struct.SkCanvas::Lattice"* %9, i64 0, i32 2
  store i8* null, i8** %29, align 8
  %30 = getelementptr inbounds %"struct.SkCanvas::Lattice", %"struct.SkCanvas::Lattice"* %9, i64 0, i32 4
  store i32 2, i32* %30, align 4
  %31 = getelementptr inbounds %"struct.SkCanvas::Lattice", %"struct.SkCanvas::Lattice"* %9, i64 0, i32 3
  store i32 2, i32* %31, align 8
  %32 = getelementptr inbounds %"struct.SkCanvas::Lattice", %"struct.SkCanvas::Lattice"* %9, i64 0, i32 5
  %33 = bitcast %struct.SkIRect** %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 16, i1 false)
  call void @_ZN8SkCanvas16drawImageLatticeEPK7SkImageRKNS_7LatticeERK6SkRect12SkFilterModePK7SkPaint(%class.SkCanvas* %0, %class.SkImage* nonnull %1, %"struct.SkCanvas::Lattice"* nonnull dereferenceable(48) %9, %struct.SkRect* dereferenceable(16) %3, i32 %4, %class.SkPaint* %5)
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %26) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #15
  br label %34

34:                                               ; preds = %6, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas16drawImageLatticeEPK7SkImageRKNS_7LatticeERK6SkRect12SkFilterModePK7SkPaint(%class.SkCanvas*, %class.SkImage*, %"struct.SkCanvas::Lattice"* nocapture readonly dereferenceable(48), %struct.SkRect* dereferenceable(16), i32, %class.SkPaint*) local_unnamed_addr #0 align 2 {
  %7 = alloca %class.sk_sp.56, align 8
  %8 = alloca %"class.skia::tracing_internals::ScopedTracer", align 8
  %9 = alloca %struct.SkIRect, align 8
  %10 = alloca %"struct.SkCanvas::Lattice", align 8
  %11 = alloca %class.SkPaint, align 8
  %12 = alloca { <2 x float>, <2 x float> }, align 8
  %13 = bitcast { <2 x float>, <2 x float> }* %12 to %struct.SkRect*
  %14 = alloca %struct.SkSamplingOptions, align 4
  %15 = load atomic i64, i64* @_ZZN8SkCanvas16drawImageLatticeEPK7SkImageRKNS_7LatticeERK6SkRect12SkFilterModePK7SkPaintE29trace_event_unique_atomic1781.0.0 monotonic, align 8
  %16 = inttoptr i64 %15 to i8*
  %17 = icmp eq i64 %15, 0
  br i1 %17, label %18, label %26

18:                                               ; preds = %6
  %19 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %20 = bitcast %class.SkEventTracer* %19 to i8* (%class.SkEventTracer*, i8*)***
  %21 = load i8* (%class.SkEventTracer*, i8*)**, i8* (%class.SkEventTracer*, i8*)*** %20, align 8
  %22 = getelementptr inbounds i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %21, i64 2
  %23 = load i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %22, align 8
  %24 = tail call i8* %23(%class.SkEventTracer* %19, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0)) #15
  %25 = ptrtoint i8* %24 to i64
  store atomic i64 %25, i64* @_ZZN8SkCanvas16drawImageLatticeEPK7SkImageRKNS_7LatticeERK6SkRect12SkFilterModePK7SkPaintE29trace_event_unique_atomic1781.0.0 monotonic, align 8
  br label %26

26:                                               ; preds = %6, %18
  %27 = phi i8* [ %16, %6 ], [ %24, %18 ]
  %28 = bitcast %"class.skia::tracing_internals::ScopedTracer"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %28) #15
  %29 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %8, i64 0, i32 0
  %30 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %8, i64 0, i32 1, i32 0
  %31 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %8, i64 0, i32 1, i32 1
  %32 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %8, i64 0, i32 1, i32 2
  %33 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %8, i64 0, i32 1
  %34 = bitcast %"struct.skia::tracing_internals::ScopedTracer::Data"* %33 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* null, %"struct.skia::tracing_internals::ScopedTracer::Data"** %29, align 8
  %35 = load i8, i8* %27, align 1
  %36 = and i8 %35, 5
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %47, label %38

38:                                               ; preds = %26
  %39 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %40 = bitcast %class.SkEventTracer* %39 to i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)***
  %41 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)**, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*** %40, align 8
  %42 = getelementptr inbounds i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %41, i64 4
  %43 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %42, align 8
  %44 = tail call i64 %43(%class.SkEventTracer* %39, i8 signext 88, i8* %27, i8* getelementptr inbounds ([123 x i8], [123 x i8]* @__PRETTY_FUNCTION__._ZN8SkCanvas16drawImageLatticeEPK7SkImageRKNS_7LatticeERK6SkRect12SkFilterModePK7SkPaint, i64 0, i64 0), i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #15
  %45 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %8, i64 0, i32 1
  %46 = getelementptr inbounds %"struct.skia::tracing_internals::ScopedTracer::Data", %"struct.skia::tracing_internals::ScopedTracer::Data"* %45, i64 0, i32 0
  store i8* %27, i8** %46, align 8
  store i8* getelementptr inbounds ([123 x i8], [123 x i8]* @__PRETTY_FUNCTION__._ZN8SkCanvas16drawImageLatticeEPK7SkImageRKNS_7LatticeERK6SkRect12SkFilterModePK7SkPaint, i64 0, i64 0), i8** %31, align 8
  store i64 %44, i64* %32, align 8
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* %45, %"struct.skia::tracing_internals::ScopedTracer::Data"** %29, align 8
  br label %47

47:                                               ; preds = %26, %38
  %48 = phi %"struct.skia::tracing_internals::ScopedTracer::Data"* [ null, %26 ], [ %45, %38 ]
  %49 = icmp eq %class.SkImage* %1, null
  br i1 %49, label %173, label %50

50:                                               ; preds = %47
  %51 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 0, i32 0
  %52 = load float, float* %51, align 4
  %53 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 0, i32 2
  %54 = load float, float* %53, align 4
  %55 = fcmp olt float %52, %54
  br i1 %55, label %56, label %173

56:                                               ; preds = %50
  %57 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 0, i32 1
  %58 = load float, float* %57, align 4
  %59 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 0, i32 3
  %60 = load float, float* %59, align 4
  %61 = fcmp uge float %58, %60
  br i1 %61, label %173, label %62

62:                                               ; preds = %56
  %63 = bitcast %struct.SkIRect* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %63) #15
  %64 = bitcast %"struct.SkCanvas::Lattice"* %10 to i8*
  %65 = bitcast %struct.SkIRect* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %64) #15
  %66 = bitcast %"struct.SkCanvas::Lattice"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %64, i8* align 8 %66, i64 48, i1 false)
  %67 = getelementptr inbounds %"struct.SkCanvas::Lattice", %"struct.SkCanvas::Lattice"* %10, i64 0, i32 5
  %68 = load %struct.SkIRect*, %struct.SkIRect** %67, align 8
  %69 = icmp eq %struct.SkIRect* %68, null
  br i1 %69, label %75, label %70

70:                                               ; preds = %62
  %71 = getelementptr inbounds %class.SkImage, %class.SkImage* %1, i64 0, i32 2, i32 1, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = getelementptr inbounds %class.SkImage, %class.SkImage* %1, i64 0, i32 2, i32 1, i32 1
  %74 = load i32, i32* %73, align 4
  br label %87

75:                                               ; preds = %62
  %76 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %9, i64 0, i32 2
  %77 = getelementptr inbounds %class.SkImage, %class.SkImage* %1, i64 0, i32 2, i32 1, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = getelementptr inbounds %class.SkImage, %class.SkImage* %1, i64 0, i32 2, i32 1, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = zext i32 %80 to i64
  %82 = shl nuw i64 %81, 32
  %83 = zext i32 %78 to i64
  %84 = or i64 %82, %83
  %85 = bitcast %struct.SkIRect* %9 to i64*
  store i64 0, i64* %85, align 8
  %86 = bitcast i32* %76 to i64*
  store i64 %84, i64* %86, align 8
  store %struct.SkIRect* %9, %struct.SkIRect** %67, align 8
  br label %87

87:                                               ; preds = %70, %75
  %88 = phi i32 [ %74, %70 ], [ %80, %75 ]
  %89 = phi i32 [ %72, %70 ], [ %78, %75 ]
  %90 = call zeroext i1 @_ZN13SkLatticeIter5ValidEiiRKN8SkCanvas7LatticeE(i32 %89, i32 %88, %"struct.SkCanvas::Lattice"* nonnull dereferenceable(48) %10) #15
  br i1 %90, label %91, label %119

91:                                               ; preds = %87
  %92 = bitcast %class.SkPaint* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %92) #15
  %93 = bitcast %class.sk_sp.56* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %93)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %92, i8* align 8 bitcast (%class.SkPaint* @__const._ZL25clean_paint_for_drawImagePK7SkPaint.cleaned to i8*), i64 72, i1 false) #15
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %11) #15
  %94 = icmp eq %class.SkPaint* %5, null
  br i1 %94, label %114, label %95

95:                                               ; preds = %91
  %96 = call dereferenceable(72) %class.SkPaint* @_ZN7SkPaintaSERKS_(%class.SkPaint* nonnull %11, %class.SkPaint* nonnull dereferenceable(72) %5) #15
  %97 = getelementptr inbounds %class.sk_sp.56, %class.sk_sp.56* %7, i64 0, i32 0
  store %class.SkMaskFilter* null, %class.SkMaskFilter** %97, align 8, !noalias !119
  call void @_ZN7SkPaint13setMaskFilterE5sk_spI12SkMaskFilterE(%class.SkPaint* nonnull %11, %class.sk_sp.56* nonnull %7) #15
  %98 = load %class.SkMaskFilter*, %class.SkMaskFilter** %97, align 8, !noalias !119
  %99 = icmp eq %class.SkMaskFilter* %98, null
  br i1 %99, label %110, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %98, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = atomicrmw add i32* %101, i32 -1 acq_rel
  %103 = icmp eq i32 %102, 1
  br i1 %103, label %104, label %110

104:                                              ; preds = %100
  %105 = bitcast %class.SkMaskFilter* %98 to %class.SkRefCntBase*
  %106 = bitcast %class.SkMaskFilter* %98 to void (%class.SkRefCntBase*)***
  %107 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %106, align 8
  %108 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %107, i64 2
  %109 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %108, align 8
  call void %109(%class.SkRefCntBase* nonnull %105) #15
  br label %110

110:                                              ; preds = %104, %100, %95
  %111 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %11, i64 0, i32 8, i32 0, i32 0
  %112 = load i32, i32* %111, align 8, !alias.scope !119
  %113 = and i32 %112, -2
  store i32 %113, i32* %111, align 8, !alias.scope !119
  br label %114

114:                                              ; preds = %91, %110
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %93)
  %115 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*, %class.SkImage*, %"struct.SkCanvas::Lattice"*, %struct.SkRect*, i32, %class.SkPaint*)***
  %116 = load void (%class.SkCanvas*, %class.SkImage*, %"struct.SkCanvas::Lattice"*, %struct.SkRect*, i32, %class.SkPaint*)**, void (%class.SkCanvas*, %class.SkImage*, %"struct.SkCanvas::Lattice"*, %struct.SkRect*, i32, %class.SkPaint*)*** %115, align 8
  %117 = getelementptr inbounds void (%class.SkCanvas*, %class.SkImage*, %"struct.SkCanvas::Lattice"*, %struct.SkRect*, i32, %class.SkPaint*)*, void (%class.SkCanvas*, %class.SkImage*, %"struct.SkCanvas::Lattice"*, %struct.SkRect*, i32, %class.SkPaint*)** %116, i64 37
  %118 = load void (%class.SkCanvas*, %class.SkImage*, %"struct.SkCanvas::Lattice"*, %struct.SkRect*, i32, %class.SkPaint*)*, void (%class.SkCanvas*, %class.SkImage*, %"struct.SkCanvas::Lattice"*, %struct.SkRect*, i32, %class.SkPaint*)** %117, align 8
  call void %118(%class.SkCanvas* %0, %class.SkImage* nonnull %1, %"struct.SkCanvas::Lattice"* nonnull dereferenceable(48) %10, %struct.SkRect* dereferenceable(16) %3, i32 %4, %class.SkPaint* nonnull %11) #15
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %11) #15
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %92) #15
  br label %171

119:                                              ; preds = %87
  %120 = getelementptr inbounds %class.SkImage, %class.SkImage* %1, i64 0, i32 2, i32 1, i32 1
  %121 = getelementptr inbounds %class.SkImage, %class.SkImage* %1, i64 0, i32 2, i32 1, i32 0
  %122 = bitcast { <2 x float>, <2 x float> }* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %122) #15
  %123 = load i32, i32* %121, align 4
  %124 = load i32, i32* %120, align 4
  %125 = sitofp i32 %123 to float
  %126 = insertelement <2 x float> undef, float %125, i32 0
  %127 = sitofp i32 %124 to float
  %128 = insertelement <2 x float> %126, float %127, i32 1
  %129 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %12, i64 0, i32 0
  store <2 x float> zeroinitializer, <2 x float>* %129, align 8
  %130 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %12, i64 0, i32 1
  store <2 x float> %128, <2 x float>* %130, align 8
  %131 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %14, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %131) #15
  store i8 0, i8* %131, align 4
  %132 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %14, i64 0, i32 1, i32 0
  store float 0.000000e+00, float* %132, align 4
  %133 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %14, i64 0, i32 1, i32 1
  store float 0.000000e+00, float* %133, align 4
  %134 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %14, i64 0, i32 2
  store i32 %4, i32* %134, align 4
  %135 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %14, i64 0, i32 3
  store i32 0, i32* %135, align 4
  %136 = load float, float* %53, align 4
  %137 = load float, float* %51, align 4
  %138 = fsub float %136, %137
  %139 = load float, float* %59, align 4
  %140 = load float, float* %57, align 4
  %141 = fsub float %139, %140
  %142 = bitcast float %138 to i32
  %143 = and i32 %142, 2139095040
  %144 = icmp ne i32 %143, 2139095040
  %145 = fcmp ogt float %138, 0.000000e+00
  %146 = and i1 %145, %144
  %147 = bitcast float %125 to i32
  %148 = bitcast float %127 to i32
  br i1 %146, label %149, label %170

149:                                              ; preds = %119
  %150 = bitcast float %141 to i32
  %151 = and i32 %150, 2139095040
  %152 = icmp ne i32 %151, 2139095040
  %153 = fcmp ogt float %141, 0.000000e+00
  %154 = and i1 %153, %152
  br i1 %154, label %155, label %170

155:                                              ; preds = %149
  %156 = and i32 %147, 2139095040
  %157 = icmp ne i32 %156, 2139095040
  %158 = icmp sgt i32 %123, 0
  %159 = and i1 %158, %157
  br i1 %159, label %160, label %170

160:                                              ; preds = %155
  %161 = and i32 %148, 2139095040
  %162 = icmp ne i32 %161, 2139095040
  %163 = icmp sgt i32 %124, 0
  %164 = and i1 %163, %162
  br i1 %164, label %165, label %170

165:                                              ; preds = %160
  %166 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*, %class.SkImage*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)***
  %167 = load void (%class.SkCanvas*, %class.SkImage*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)**, void (%class.SkCanvas*, %class.SkImage*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)*** %166, align 8
  %168 = getelementptr inbounds void (%class.SkCanvas*, %class.SkImage*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)*, void (%class.SkCanvas*, %class.SkImage*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)** %167, i64 36
  %169 = load void (%class.SkCanvas*, %class.SkImage*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)*, void (%class.SkCanvas*, %class.SkImage*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)** %168, align 8
  call void %169(%class.SkCanvas* %0, %class.SkImage* nonnull %1, %struct.SkRect* nonnull dereferenceable(16) %13, %struct.SkRect* dereferenceable(16) %3, %struct.SkSamplingOptions* nonnull dereferenceable(20) %14, %class.SkPaint* %5, i32 0) #15
  br label %170

170:                                              ; preds = %119, %149, %155, %160, %165
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %131) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %122) #15
  br label %171

171:                                              ; preds = %170, %114
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %64) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %63) #15
  %172 = load %"struct.skia::tracing_internals::ScopedTracer::Data"*, %"struct.skia::tracing_internals::ScopedTracer::Data"** %29, align 8
  br label %173

173:                                              ; preds = %50, %56, %47, %171
  %174 = phi %"struct.skia::tracing_internals::ScopedTracer::Data"* [ %48, %50 ], [ %48, %56 ], [ %48, %47 ], [ %172, %171 ]
  %175 = icmp eq %"struct.skia::tracing_internals::ScopedTracer::Data"* %174, null
  br i1 %175, label %189, label %176

176:                                              ; preds = %173
  %177 = load i8*, i8** %30, align 8
  %178 = load i8, i8* %177, align 1
  %179 = icmp eq i8 %178, 0
  br i1 %179, label %189, label %180

180:                                              ; preds = %176
  %181 = call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %182 = load i8*, i8** %30, align 8
  %183 = load i8*, i8** %31, align 8
  %184 = load i64, i64* %32, align 8
  %185 = bitcast %class.SkEventTracer* %181 to void (%class.SkEventTracer*, i8*, i8*, i64)***
  %186 = load void (%class.SkEventTracer*, i8*, i8*, i64)**, void (%class.SkEventTracer*, i8*, i8*, i64)*** %185, align 8
  %187 = getelementptr inbounds void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %186, i64 5
  %188 = load void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %187, align 8
  call void %188(%class.SkEventTracer* %181, i8* %182, i8* %183, i64 %184) #15
  br label %189

189:                                              ; preds = %173, %176, %180
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %28) #15
  ret void
}

declare zeroext i1 @_ZN13SkLatticeIter5ValidEiiRKN8SkCanvas7LatticeE(i32, i32, %"struct.SkCanvas::Lattice"* dereferenceable(48)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas9drawAtlasEPK7SkImagePK9SkRSXformPK6SkRectPKji11SkBlendModeRK17SkSamplingOptionsS8_PK7SkPaint(%class.SkCanvas*, %class.SkImage*, %struct.SkRSXform*, %struct.SkRect*, i32*, i32, i32, %struct.SkSamplingOptions* dereferenceable(20), %struct.SkRect*, %class.SkPaint*) local_unnamed_addr #0 align 2 {
  %11 = alloca %"class.skia::tracing_internals::ScopedTracer", align 8
  %12 = load atomic i64, i64* @_ZZN8SkCanvas9drawAtlasEPK7SkImagePK9SkRSXformPK6SkRectPKji11SkBlendModeRK17SkSamplingOptionsS8_PK7SkPaintE29trace_event_unique_atomic1807.0.0 monotonic, align 8
  %13 = inttoptr i64 %12 to i8*
  %14 = icmp eq i64 %12, 0
  br i1 %14, label %15, label %23

15:                                               ; preds = %10
  %16 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %17 = bitcast %class.SkEventTracer* %16 to i8* (%class.SkEventTracer*, i8*)***
  %18 = load i8* (%class.SkEventTracer*, i8*)**, i8* (%class.SkEventTracer*, i8*)*** %17, align 8
  %19 = getelementptr inbounds i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %18, i64 2
  %20 = load i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %19, align 8
  %21 = tail call i8* %20(%class.SkEventTracer* %16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0)) #15
  %22 = ptrtoint i8* %21 to i64
  store atomic i64 %22, i64* @_ZZN8SkCanvas9drawAtlasEPK7SkImagePK9SkRSXformPK6SkRectPKji11SkBlendModeRK17SkSamplingOptionsS8_PK7SkPaintE29trace_event_unique_atomic1807.0.0 monotonic, align 8
  br label %23

23:                                               ; preds = %10, %15
  %24 = phi i8* [ %13, %10 ], [ %21, %15 ]
  %25 = bitcast %"class.skia::tracing_internals::ScopedTracer"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %25) #15
  %26 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %11, i64 0, i32 0
  %27 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %11, i64 0, i32 1, i32 0
  %28 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %11, i64 0, i32 1, i32 1
  %29 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %11, i64 0, i32 1, i32 2
  %30 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %11, i64 0, i32 1
  %31 = bitcast %"struct.skia::tracing_internals::ScopedTracer::Data"* %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 24, i1 false)
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* null, %"struct.skia::tracing_internals::ScopedTracer::Data"** %26, align 8
  %32 = load i8, i8* %24, align 1
  %33 = and i8 %32, 5
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %44, label %35

35:                                               ; preds = %23
  %36 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %37 = bitcast %class.SkEventTracer* %36 to i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)***
  %38 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)**, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*** %37, align 8
  %39 = getelementptr inbounds i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %38, i64 4
  %40 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %39, align 8
  %41 = tail call i64 %40(%class.SkEventTracer* %36, i8 signext 88, i8* %24, i8* getelementptr inbounds ([172 x i8], [172 x i8]* @__PRETTY_FUNCTION__._ZN8SkCanvas9drawAtlasEPK7SkImagePK9SkRSXformPK6SkRectPKji11SkBlendModeRK17SkSamplingOptionsS8_PK7SkPaint, i64 0, i64 0), i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #15
  %42 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %11, i64 0, i32 1
  %43 = getelementptr inbounds %"struct.skia::tracing_internals::ScopedTracer::Data", %"struct.skia::tracing_internals::ScopedTracer::Data"* %42, i64 0, i32 0
  store i8* %24, i8** %43, align 8
  store i8* getelementptr inbounds ([172 x i8], [172 x i8]* @__PRETTY_FUNCTION__._ZN8SkCanvas9drawAtlasEPK7SkImagePK9SkRSXformPK6SkRectPKji11SkBlendModeRK17SkSamplingOptionsS8_PK7SkPaint, i64 0, i64 0), i8** %28, align 8
  store i64 %41, i64* %29, align 8
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* %42, %"struct.skia::tracing_internals::ScopedTracer::Data"** %26, align 8
  br label %44

44:                                               ; preds = %23, %35
  %45 = phi %"struct.skia::tracing_internals::ScopedTracer::Data"* [ null, %23 ], [ %42, %35 ]
  %46 = icmp eq %class.SkImage* %1, null
  %47 = icmp slt i32 %5, 1
  %48 = or i1 %46, %47
  br i1 %48, label %55, label %49

49:                                               ; preds = %44
  %50 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*, %class.SkImage*, %struct.SkRSXform*, %struct.SkRect*, i32*, i32, i32, %struct.SkSamplingOptions*, %struct.SkRect*, %class.SkPaint*)***
  %51 = load void (%class.SkCanvas*, %class.SkImage*, %struct.SkRSXform*, %struct.SkRect*, i32*, i32, i32, %struct.SkSamplingOptions*, %struct.SkRect*, %class.SkPaint*)**, void (%class.SkCanvas*, %class.SkImage*, %struct.SkRSXform*, %struct.SkRect*, i32*, i32, i32, %struct.SkSamplingOptions*, %struct.SkRect*, %class.SkPaint*)*** %50, align 8
  %52 = getelementptr inbounds void (%class.SkCanvas*, %class.SkImage*, %struct.SkRSXform*, %struct.SkRect*, i32*, i32, i32, %struct.SkSamplingOptions*, %struct.SkRect*, %class.SkPaint*)*, void (%class.SkCanvas*, %class.SkImage*, %struct.SkRSXform*, %struct.SkRect*, i32*, i32, i32, %struct.SkSamplingOptions*, %struct.SkRect*, %class.SkPaint*)** %51, i64 38
  %53 = load void (%class.SkCanvas*, %class.SkImage*, %struct.SkRSXform*, %struct.SkRect*, i32*, i32, i32, %struct.SkSamplingOptions*, %struct.SkRect*, %class.SkPaint*)*, void (%class.SkCanvas*, %class.SkImage*, %struct.SkRSXform*, %struct.SkRect*, i32*, i32, i32, %struct.SkSamplingOptions*, %struct.SkRect*, %class.SkPaint*)** %52, align 8
  call void %53(%class.SkCanvas* %0, %class.SkImage* nonnull %1, %struct.SkRSXform* %2, %struct.SkRect* %3, i32* %4, i32 %5, i32 %6, %struct.SkSamplingOptions* dereferenceable(20) %7, %struct.SkRect* %8, %class.SkPaint* %9) #15
  %54 = load %"struct.skia::tracing_internals::ScopedTracer::Data"*, %"struct.skia::tracing_internals::ScopedTracer::Data"** %26, align 8
  br label %55

55:                                               ; preds = %44, %49
  %56 = phi %"struct.skia::tracing_internals::ScopedTracer::Data"* [ %45, %44 ], [ %54, %49 ]
  %57 = icmp eq %"struct.skia::tracing_internals::ScopedTracer::Data"* %56, null
  br i1 %57, label %71, label %58

58:                                               ; preds = %55
  %59 = load i8*, i8** %27, align 8
  %60 = load i8, i8* %59, align 1
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %71, label %62

62:                                               ; preds = %58
  %63 = call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %64 = load i8*, i8** %27, align 8
  %65 = load i8*, i8** %28, align 8
  %66 = load i64, i64* %29, align 8
  %67 = bitcast %class.SkEventTracer* %63 to void (%class.SkEventTracer*, i8*, i8*, i64)***
  %68 = load void (%class.SkEventTracer*, i8*, i8*, i64)**, void (%class.SkEventTracer*, i8*, i8*, i64)*** %67, align 8
  %69 = getelementptr inbounds void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %68, i64 5
  %70 = load void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %69, align 8
  call void %70(%class.SkEventTracer* %63, i8* %64, i8* %65, i64 %66) #15
  br label %71

71:                                               ; preds = %55, %58, %62
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %25) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas14drawAnnotationERK6SkRectPKcP6SkData(%class.SkCanvas*, %struct.SkRect* dereferenceable(16), i8*, %class.SkData*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.skia::tracing_internals::ScopedTracer", align 8
  %6 = load atomic i64, i64* @_ZZN8SkCanvas14drawAnnotationERK6SkRectPKcP6SkDataE29trace_event_unique_atomic1818.0.0 monotonic, align 8
  %7 = inttoptr i64 %6 to i8*
  %8 = icmp eq i64 %6, 0
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %11 = bitcast %class.SkEventTracer* %10 to i8* (%class.SkEventTracer*, i8*)***
  %12 = load i8* (%class.SkEventTracer*, i8*)**, i8* (%class.SkEventTracer*, i8*)*** %11, align 8
  %13 = getelementptr inbounds i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %12, i64 2
  %14 = load i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %13, align 8
  %15 = tail call i8* %14(%class.SkEventTracer* %10, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0)) #15
  %16 = ptrtoint i8* %15 to i64
  store atomic i64 %16, i64* @_ZZN8SkCanvas14drawAnnotationERK6SkRectPKcP6SkDataE29trace_event_unique_atomic1818.0.0 monotonic, align 8
  br label %17

17:                                               ; preds = %4, %9
  %18 = phi i8* [ %7, %4 ], [ %15, %9 ]
  %19 = bitcast %"class.skia::tracing_internals::ScopedTracer"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #15
  %20 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %5, i64 0, i32 0
  %21 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %5, i64 0, i32 1, i32 0
  %22 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %5, i64 0, i32 1, i32 1
  %23 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %5, i64 0, i32 1, i32 2
  %24 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %5, i64 0, i32 1
  %25 = bitcast %"struct.skia::tracing_internals::ScopedTracer::Data"* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 24, i1 false)
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* null, %"struct.skia::tracing_internals::ScopedTracer::Data"** %20, align 8
  %26 = load i8, i8* %18, align 1
  %27 = and i8 %26, 5
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %38, label %29

29:                                               ; preds = %17
  %30 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %31 = bitcast %class.SkEventTracer* %30 to i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)***
  %32 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)**, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*** %31, align 8
  %33 = getelementptr inbounds i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %32, i64 4
  %34 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %33, align 8
  %35 = tail call i64 %34(%class.SkEventTracer* %30, i8 signext 88, i8* %18, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN8SkCanvas14drawAnnotationERK6SkRectPKcP6SkData, i64 0, i64 0), i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #15
  %36 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %5, i64 0, i32 1
  %37 = getelementptr inbounds %"struct.skia::tracing_internals::ScopedTracer::Data", %"struct.skia::tracing_internals::ScopedTracer::Data"* %36, i64 0, i32 0
  store i8* %18, i8** %37, align 8
  store i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN8SkCanvas14drawAnnotationERK6SkRectPKcP6SkData, i64 0, i64 0), i8** %22, align 8
  store i64 %35, i64* %23, align 8
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* %36, %"struct.skia::tracing_internals::ScopedTracer::Data"** %20, align 8
  br label %38

38:                                               ; preds = %17, %29
  %39 = phi %"struct.skia::tracing_internals::ScopedTracer::Data"* [ null, %17 ], [ %36, %29 ]
  %40 = icmp eq i8* %2, null
  br i1 %40, label %47, label %41

41:                                               ; preds = %38
  %42 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*, %struct.SkRect*, i8*, %class.SkData*)***
  %43 = load void (%class.SkCanvas*, %struct.SkRect*, i8*, %class.SkData*)**, void (%class.SkCanvas*, %struct.SkRect*, i8*, %class.SkData*)*** %42, align 8
  %44 = getelementptr inbounds void (%class.SkCanvas*, %struct.SkRect*, i8*, %class.SkData*)*, void (%class.SkCanvas*, %struct.SkRect*, i8*, %class.SkData*)** %43, i64 41
  %45 = load void (%class.SkCanvas*, %struct.SkRect*, i8*, %class.SkData*)*, void (%class.SkCanvas*, %struct.SkRect*, i8*, %class.SkData*)** %44, align 8
  call void %45(%class.SkCanvas* %0, %struct.SkRect* dereferenceable(16) %1, i8* nonnull %2, %class.SkData* %3) #15
  %46 = load %"struct.skia::tracing_internals::ScopedTracer::Data"*, %"struct.skia::tracing_internals::ScopedTracer::Data"** %20, align 8
  br label %47

47:                                               ; preds = %38, %41
  %48 = phi %"struct.skia::tracing_internals::ScopedTracer::Data"* [ %39, %38 ], [ %46, %41 ]
  %49 = icmp eq %"struct.skia::tracing_internals::ScopedTracer::Data"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %47
  %51 = load i8*, i8** %21, align 8
  %52 = load i8, i8* %51, align 1
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %63, label %54

54:                                               ; preds = %50
  %55 = call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %56 = load i8*, i8** %21, align 8
  %57 = load i8*, i8** %22, align 8
  %58 = load i64, i64* %23, align 8
  %59 = bitcast %class.SkEventTracer* %55 to void (%class.SkEventTracer*, i8*, i8*, i64)***
  %60 = load void (%class.SkEventTracer*, i8*, i8*, i64)**, void (%class.SkEventTracer*, i8*, i8*, i64)*** %59, align 8
  %61 = getelementptr inbounds void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %60, i64 5
  %62 = load void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %61, align 8
  call void %62(%class.SkEventTracer* %55, i8* %56, i8* %57, i64 %58) #15
  br label %63

63:                                               ; preds = %47, %50, %54
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas23private_draw_shadow_recERK6SkPathRK15SkDrawShadowRec(%class.SkCanvas*, %class.SkPath* dereferenceable(16), %struct.SkDrawShadowRec*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.skia::tracing_internals::ScopedTracer", align 8
  %5 = load atomic i64, i64* @_ZZN8SkCanvas23private_draw_shadow_recERK6SkPathRK15SkDrawShadowRecE29trace_event_unique_atomic1825.0.0 monotonic, align 8
  %6 = inttoptr i64 %5 to i8*
  %7 = icmp eq i64 %5, 0
  br i1 %7, label %8, label %16

8:                                                ; preds = %3
  %9 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %10 = bitcast %class.SkEventTracer* %9 to i8* (%class.SkEventTracer*, i8*)***
  %11 = load i8* (%class.SkEventTracer*, i8*)**, i8* (%class.SkEventTracer*, i8*)*** %10, align 8
  %12 = getelementptr inbounds i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %11, i64 2
  %13 = load i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %12, align 8
  %14 = tail call i8* %13(%class.SkEventTracer* %9, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0)) #15
  %15 = ptrtoint i8* %14 to i64
  store atomic i64 %15, i64* @_ZZN8SkCanvas23private_draw_shadow_recERK6SkPathRK15SkDrawShadowRecE29trace_event_unique_atomic1825.0.0 monotonic, align 8
  br label %16

16:                                               ; preds = %3, %8
  %17 = phi i8* [ %6, %3 ], [ %14, %8 ]
  %18 = bitcast %"class.skia::tracing_internals::ScopedTracer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %18) #15
  %19 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %4, i64 0, i32 0
  %20 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %4, i64 0, i32 1, i32 0
  %21 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %4, i64 0, i32 1, i32 1
  %22 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %4, i64 0, i32 1, i32 2
  %23 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %4, i64 0, i32 1
  %24 = bitcast %"struct.skia::tracing_internals::ScopedTracer::Data"* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 24, i1 false)
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* null, %"struct.skia::tracing_internals::ScopedTracer::Data"** %19, align 8
  %25 = load i8, i8* %17, align 1
  %26 = and i8 %25, 5
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %37, label %28

28:                                               ; preds = %16
  %29 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %30 = bitcast %class.SkEventTracer* %29 to i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)***
  %31 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)**, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*** %30, align 8
  %32 = getelementptr inbounds i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %31, i64 4
  %33 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %32, align 8
  %34 = tail call i64 %33(%class.SkEventTracer* %29, i8 signext 88, i8* %17, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @__PRETTY_FUNCTION__._ZN8SkCanvas23private_draw_shadow_recERK6SkPathRK15SkDrawShadowRec, i64 0, i64 0), i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #15
  %35 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %4, i64 0, i32 1
  %36 = getelementptr inbounds %"struct.skia::tracing_internals::ScopedTracer::Data", %"struct.skia::tracing_internals::ScopedTracer::Data"* %35, i64 0, i32 0
  store i8* %17, i8** %36, align 8
  store i8* getelementptr inbounds ([80 x i8], [80 x i8]* @__PRETTY_FUNCTION__._ZN8SkCanvas23private_draw_shadow_recERK6SkPathRK15SkDrawShadowRec, i64 0, i64 0), i8** %21, align 8
  store i64 %34, i64* %22, align 8
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* %35, %"struct.skia::tracing_internals::ScopedTracer::Data"** %19, align 8
  br label %37

37:                                               ; preds = %16, %28
  %38 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*, %class.SkPath*, %struct.SkDrawShadowRec*)***
  %39 = load void (%class.SkCanvas*, %class.SkPath*, %struct.SkDrawShadowRec*)**, void (%class.SkCanvas*, %class.SkPath*, %struct.SkDrawShadowRec*)*** %38, align 8
  %40 = getelementptr inbounds void (%class.SkCanvas*, %class.SkPath*, %struct.SkDrawShadowRec*)*, void (%class.SkCanvas*, %class.SkPath*, %struct.SkDrawShadowRec*)** %39, i64 42
  %41 = load void (%class.SkCanvas*, %class.SkPath*, %struct.SkDrawShadowRec*)*, void (%class.SkCanvas*, %class.SkPath*, %struct.SkDrawShadowRec*)** %40, align 8
  call void %41(%class.SkCanvas* %0, %class.SkPath* dereferenceable(16) %1, %struct.SkDrawShadowRec* %2) #15
  %42 = load %"struct.skia::tracing_internals::ScopedTracer::Data"*, %"struct.skia::tracing_internals::ScopedTracer::Data"** %19, align 8
  %43 = icmp eq %"struct.skia::tracing_internals::ScopedTracer::Data"* %42, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %37
  %45 = load i8*, i8** %20, align 8
  %46 = load i8, i8* %45, align 1
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %57, label %48

48:                                               ; preds = %44
  %49 = call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %50 = load i8*, i8** %20, align 8
  %51 = load i8*, i8** %21, align 8
  %52 = load i64, i64* %22, align 8
  %53 = bitcast %class.SkEventTracer* %49 to void (%class.SkEventTracer*, i8*, i8*, i64)***
  %54 = load void (%class.SkEventTracer*, i8*, i8*, i64)**, void (%class.SkEventTracer*, i8*, i8*, i64)*** %53, align 8
  %55 = getelementptr inbounds void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %54, i64 5
  %56 = load void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %55, align 8
  call void %56(%class.SkEventTracer* %49, i8* %50, i8* %51, i64 %52) #15
  br label %57

57:                                               ; preds = %37, %44, %48
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas15onDrawShadowRecERK6SkPathRK15SkDrawShadowRec(%class.SkCanvas* nocapture readonly, %class.SkPath* dereferenceable(16), %struct.SkDrawShadowRec*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 9
  %5 = load %class.SkSurface_Base*, %class.SkSurface_Base** %4, align 8
  %6 = icmp eq %class.SkSurface_Base* %5, null
  br i1 %6, label %8, label %7

7:                                                ; preds = %3
  tail call void @_ZN14SkSurface_Base11aboutToDrawEN9SkSurface17ContentChangeModeE(%class.SkSurface_Base* nonnull %5, i32 1) #15
  br label %8

8:                                                ; preds = %3, %7
  %9 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %10 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %9, align 8
  %11 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %10, i64 0, i32 1
  %12 = load %class.SkBaseDevice*, %class.SkBaseDevice** %11, align 8
  %13 = bitcast %class.SkBaseDevice* %12 to void (%class.SkBaseDevice*, %class.SkPath*, %struct.SkDrawShadowRec*)***
  %14 = load void (%class.SkBaseDevice*, %class.SkPath*, %struct.SkDrawShadowRec*)**, void (%class.SkBaseDevice*, %class.SkPath*, %struct.SkDrawShadowRec*)*** %13, align 8
  %15 = getelementptr inbounds void (%class.SkBaseDevice*, %class.SkPath*, %struct.SkDrawShadowRec*)*, void (%class.SkBaseDevice*, %class.SkPath*, %struct.SkDrawShadowRec*)** %14, i64 36
  %16 = load void (%class.SkBaseDevice*, %class.SkPath*, %struct.SkDrawShadowRec*)*, void (%class.SkBaseDevice*, %class.SkPath*, %struct.SkDrawShadowRec*)** %15, align 8
  tail call void %16(%class.SkBaseDevice* %12, %class.SkPath* dereferenceable(16) %1, %struct.SkDrawShadowRec* %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas27experimental_DrawEdgeAAQuadERK6SkRectPK7SkPointNS_11QuadAAFlagsERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode(%class.SkCanvas*, %struct.SkRect* nocapture readonly dereferenceable(16), %struct.SkPoint*, i32, %struct.SkRGBA4f* dereferenceable(16), i32) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.skia::tracing_internals::ScopedTracer", align 8
  %8 = alloca { <2 x float>, <2 x float> }, align 8
  %9 = bitcast { <2 x float>, <2 x float> }* %8 to %struct.SkRect*
  %10 = load atomic i64, i64* @_ZZN8SkCanvas27experimental_DrawEdgeAAQuadERK6SkRectPK7SkPointNS_11QuadAAFlagsERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendModeE29trace_event_unique_atomic1839.0.0 monotonic, align 8
  %11 = inttoptr i64 %10 to i8*
  %12 = icmp eq i64 %10, 0
  br i1 %12, label %13, label %21

13:                                               ; preds = %6
  %14 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %15 = bitcast %class.SkEventTracer* %14 to i8* (%class.SkEventTracer*, i8*)***
  %16 = load i8* (%class.SkEventTracer*, i8*)**, i8* (%class.SkEventTracer*, i8*)*** %15, align 8
  %17 = getelementptr inbounds i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %16, i64 2
  %18 = load i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %17, align 8
  %19 = tail call i8* %18(%class.SkEventTracer* %14, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0)) #15
  %20 = ptrtoint i8* %19 to i64
  store atomic i64 %20, i64* @_ZZN8SkCanvas27experimental_DrawEdgeAAQuadERK6SkRectPK7SkPointNS_11QuadAAFlagsERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendModeE29trace_event_unique_atomic1839.0.0 monotonic, align 8
  br label %21

21:                                               ; preds = %6, %13
  %22 = phi i8* [ %11, %6 ], [ %19, %13 ]
  %23 = bitcast %"class.skia::tracing_internals::ScopedTracer"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #15
  %24 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %7, i64 0, i32 0
  %25 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %7, i64 0, i32 1, i32 0
  %26 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %7, i64 0, i32 1, i32 1
  %27 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %7, i64 0, i32 1, i32 2
  %28 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %7, i64 0, i32 1
  %29 = bitcast %"struct.skia::tracing_internals::ScopedTracer::Data"* %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 24, i1 false)
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* null, %"struct.skia::tracing_internals::ScopedTracer::Data"** %24, align 8
  %30 = load i8, i8* %22, align 1
  %31 = and i8 %30, 5
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %42, label %33

33:                                               ; preds = %21
  %34 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %35 = bitcast %class.SkEventTracer* %34 to i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)***
  %36 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)**, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*** %35, align 8
  %37 = getelementptr inbounds i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %36, i64 4
  %38 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %37, align 8
  %39 = tail call i64 %38(%class.SkEventTracer* %34, i8 signext 88, i8* %22, i8* getelementptr inbounds ([131 x i8], [131 x i8]* @__PRETTY_FUNCTION__._ZN8SkCanvas27experimental_DrawEdgeAAQuadERK6SkRectPK7SkPointNS_11QuadAAFlagsERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode, i64 0, i64 0), i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #15
  %40 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %7, i64 0, i32 1
  %41 = getelementptr inbounds %"struct.skia::tracing_internals::ScopedTracer::Data", %"struct.skia::tracing_internals::ScopedTracer::Data"* %40, i64 0, i32 0
  store i8* %22, i8** %41, align 8
  store i8* getelementptr inbounds ([131 x i8], [131 x i8]* @__PRETTY_FUNCTION__._ZN8SkCanvas27experimental_DrawEdgeAAQuadERK6SkRectPK7SkPointNS_11QuadAAFlagsERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode, i64 0, i64 0), i8** %26, align 8
  store i64 %39, i64* %27, align 8
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* %40, %"struct.skia::tracing_internals::ScopedTracer::Data"** %24, align 8
  br label %42

42:                                               ; preds = %21, %33
  %43 = bitcast { <2 x float>, <2 x float> }* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #15
  %44 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 0
  %45 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 2
  %46 = load float, float* %45, align 4
  %47 = load float, float* %44, align 4
  %48 = fcmp olt float %46, %47
  %49 = select i1 %48, float %46, float %47
  %50 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 1
  %51 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 3
  %52 = load float, float* %51, align 4
  %53 = load float, float* %50, align 4
  %54 = fcmp olt float %52, %53
  %55 = select i1 %54, float %52, float %53
  %56 = fcmp olt float %47, %46
  %57 = select i1 %56, float %46, float %47
  %58 = fcmp olt float %53, %52
  %59 = select i1 %58, float %52, float %53
  %60 = insertelement <2 x float> undef, float %49, i32 0
  %61 = insertelement <2 x float> %60, float %55, i32 1
  %62 = insertelement <2 x float> undef, float %57, i32 0
  %63 = insertelement <2 x float> %62, float %59, i32 1
  %64 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 0
  store <2 x float> %61, <2 x float>* %64, align 8
  %65 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 1
  store <2 x float> %63, <2 x float>* %65, align 8
  %66 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*, %struct.SkRect*, %struct.SkPoint*, i32, %struct.SkRGBA4f*, i32)***
  %67 = load void (%class.SkCanvas*, %struct.SkRect*, %struct.SkPoint*, i32, %struct.SkRGBA4f*, i32)**, void (%class.SkCanvas*, %struct.SkRect*, %struct.SkPoint*, i32, %struct.SkRGBA4f*, i32)*** %66, align 8
  %68 = getelementptr inbounds void (%class.SkCanvas*, %struct.SkRect*, %struct.SkPoint*, i32, %struct.SkRGBA4f*, i32)*, void (%class.SkCanvas*, %struct.SkRect*, %struct.SkPoint*, i32, %struct.SkRGBA4f*, i32)** %67, i64 45
  %69 = load void (%class.SkCanvas*, %struct.SkRect*, %struct.SkPoint*, i32, %struct.SkRGBA4f*, i32)*, void (%class.SkCanvas*, %struct.SkRect*, %struct.SkPoint*, i32, %struct.SkRGBA4f*, i32)** %68, align 8
  call void %69(%class.SkCanvas* %0, %struct.SkRect* nonnull dereferenceable(16) %9, %struct.SkPoint* %2, i32 %3, %struct.SkRGBA4f* dereferenceable(16) %4, i32 %5) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #15
  %70 = load %"struct.skia::tracing_internals::ScopedTracer::Data"*, %"struct.skia::tracing_internals::ScopedTracer::Data"** %24, align 8
  %71 = icmp eq %"struct.skia::tracing_internals::ScopedTracer::Data"* %70, null
  br i1 %71, label %85, label %72

72:                                               ; preds = %42
  %73 = load i8*, i8** %25, align 8
  %74 = load i8, i8* %73, align 1
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %85, label %76

76:                                               ; preds = %72
  %77 = call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %78 = load i8*, i8** %25, align 8
  %79 = load i8*, i8** %26, align 8
  %80 = load i64, i64* %27, align 8
  %81 = bitcast %class.SkEventTracer* %77 to void (%class.SkEventTracer*, i8*, i8*, i64)***
  %82 = load void (%class.SkEventTracer*, i8*, i8*, i64)**, void (%class.SkEventTracer*, i8*, i8*, i64)*** %81, align 8
  %83 = getelementptr inbounds void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %82, i64 5
  %84 = load void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %83, align 8
  call void %84(%class.SkEventTracer* %77, i8* %78, i8* %79, i64 %80) #15
  br label %85

85:                                               ; preds = %42, %72, %76
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas31experimental_DrawEdgeAAImageSetEPKNS_13ImageSetEntryEiPK7SkPointPK8SkMatrixRK17SkSamplingOptionsPK7SkPaintNS_17SrcRectConstraintE(%class.SkCanvas*, %"struct.SkCanvas::ImageSetEntry"*, i32, %struct.SkPoint*, %class.SkMatrix*, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint*, i32) local_unnamed_addr #0 align 2 {
  %9 = alloca %"class.skia::tracing_internals::ScopedTracer", align 8
  %10 = load atomic i64, i64* @_ZZN8SkCanvas31experimental_DrawEdgeAAImageSetEPKNS_13ImageSetEntryEiPK7SkPointPK8SkMatrixRK17SkSamplingOptionsPK7SkPaintNS_17SrcRectConstraintEE29trace_event_unique_atomic1850.0.0 monotonic, align 8
  %11 = inttoptr i64 %10 to i8*
  %12 = icmp eq i64 %10, 0
  br i1 %12, label %13, label %21

13:                                               ; preds = %8
  %14 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %15 = bitcast %class.SkEventTracer* %14 to i8* (%class.SkEventTracer*, i8*)***
  %16 = load i8* (%class.SkEventTracer*, i8*)**, i8* (%class.SkEventTracer*, i8*)*** %15, align 8
  %17 = getelementptr inbounds i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %16, i64 2
  %18 = load i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %17, align 8
  %19 = tail call i8* %18(%class.SkEventTracer* %14, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0)) #15
  %20 = ptrtoint i8* %19 to i64
  store atomic i64 %20, i64* @_ZZN8SkCanvas31experimental_DrawEdgeAAImageSetEPKNS_13ImageSetEntryEiPK7SkPointPK8SkMatrixRK17SkSamplingOptionsPK7SkPaintNS_17SrcRectConstraintEE29trace_event_unique_atomic1850.0.0 monotonic, align 8
  br label %21

21:                                               ; preds = %8, %13
  %22 = phi i8* [ %11, %8 ], [ %19, %13 ]
  %23 = bitcast %"class.skia::tracing_internals::ScopedTracer"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #15
  %24 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %9, i64 0, i32 0
  %25 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %9, i64 0, i32 1, i32 0
  %26 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %9, i64 0, i32 1, i32 1
  %27 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %9, i64 0, i32 1, i32 2
  %28 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %9, i64 0, i32 1
  %29 = bitcast %"struct.skia::tracing_internals::ScopedTracer::Data"* %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 24, i1 false)
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* null, %"struct.skia::tracing_internals::ScopedTracer::Data"** %24, align 8
  %30 = load i8, i8* %22, align 1
  %31 = and i8 %30, 5
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %42, label %33

33:                                               ; preds = %21
  %34 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %35 = bitcast %class.SkEventTracer* %34 to i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)***
  %36 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)**, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*** %35, align 8
  %37 = getelementptr inbounds i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %36, i64 4
  %38 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %37, align 8
  %39 = tail call i64 %38(%class.SkEventTracer* %34, i8 signext 88, i8* %22, i8* getelementptr inbounds ([193 x i8], [193 x i8]* @__PRETTY_FUNCTION__._ZN8SkCanvas31experimental_DrawEdgeAAImageSetEPKNS_13ImageSetEntryEiPK7SkPointPK8SkMatrixRK17SkSamplingOptionsPK7SkPaintNS_17SrcRectConstraintE, i64 0, i64 0), i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #15
  %40 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %9, i64 0, i32 1
  %41 = getelementptr inbounds %"struct.skia::tracing_internals::ScopedTracer::Data", %"struct.skia::tracing_internals::ScopedTracer::Data"* %40, i64 0, i32 0
  store i8* %22, i8** %41, align 8
  store i8* getelementptr inbounds ([193 x i8], [193 x i8]* @__PRETTY_FUNCTION__._ZN8SkCanvas31experimental_DrawEdgeAAImageSetEPKNS_13ImageSetEntryEiPK7SkPointPK8SkMatrixRK17SkSamplingOptionsPK7SkPaintNS_17SrcRectConstraintE, i64 0, i64 0), i8** %26, align 8
  store i64 %39, i64* %27, align 8
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* %40, %"struct.skia::tracing_internals::ScopedTracer::Data"** %24, align 8
  br label %42

42:                                               ; preds = %21, %33
  %43 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*, %"struct.SkCanvas::ImageSetEntry"*, i32, %struct.SkPoint*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)***
  %44 = load void (%class.SkCanvas*, %"struct.SkCanvas::ImageSetEntry"*, i32, %struct.SkPoint*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)**, void (%class.SkCanvas*, %"struct.SkCanvas::ImageSetEntry"*, i32, %struct.SkPoint*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)*** %43, align 8
  %45 = getelementptr inbounds void (%class.SkCanvas*, %"struct.SkCanvas::ImageSetEntry"*, i32, %struct.SkPoint*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)*, void (%class.SkCanvas*, %"struct.SkCanvas::ImageSetEntry"*, i32, %struct.SkPoint*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)** %44, i64 39
  %46 = load void (%class.SkCanvas*, %"struct.SkCanvas::ImageSetEntry"*, i32, %struct.SkPoint*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)*, void (%class.SkCanvas*, %"struct.SkCanvas::ImageSetEntry"*, i32, %struct.SkPoint*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)** %45, align 8
  call void %46(%class.SkCanvas* %0, %"struct.SkCanvas::ImageSetEntry"* %1, i32 %2, %struct.SkPoint* %3, %class.SkMatrix* %4, %struct.SkSamplingOptions* dereferenceable(20) %5, %class.SkPaint* %6, i32 %7) #15
  %47 = load %"struct.skia::tracing_internals::ScopedTracer::Data"*, %"struct.skia::tracing_internals::ScopedTracer::Data"** %24, align 8
  %48 = icmp eq %"struct.skia::tracing_internals::ScopedTracer::Data"* %47, null
  br i1 %48, label %62, label %49

49:                                               ; preds = %42
  %50 = load i8*, i8** %25, align 8
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %62, label %53

53:                                               ; preds = %49
  %54 = call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %55 = load i8*, i8** %25, align 8
  %56 = load i8*, i8** %26, align 8
  %57 = load i64, i64* %27, align 8
  %58 = bitcast %class.SkEventTracer* %54 to void (%class.SkEventTracer*, i8*, i8*, i64)***
  %59 = load void (%class.SkEventTracer*, i8*, i8*, i64)**, void (%class.SkEventTracer*, i8*, i8*, i64)*** %58, align 8
  %60 = getelementptr inbounds void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %59, i64 5
  %61 = load void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %60, align 8
  call void %61(%class.SkEventTracer* %54, i8* %55, i8* %56, i64 %57) #15
  br label %62

62:                                               ; preds = %42, %49, %53
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas9onDiscardEv(%class.SkCanvas* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 9
  %3 = load %class.SkSurface_Base*, %class.SkSurface_Base** %2, align 8
  %4 = icmp eq %class.SkSurface_Base* %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZN14SkSurface_Base11aboutToDrawEN9SkSurface17ContentChangeModeE(%class.SkSurface_Base* nonnull %3, i32 0) #15
  br label %6

6:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas11onDrawPaintERK7SkPaint(%class.SkCanvas*, %class.SkPaint* dereferenceable(72)) unnamed_addr #0 align 2 {
  %3 = alloca %class.AutoLayerForImageFilter, align 8
  %4 = tail call zeroext i1 @_ZNK7SkPaint13nothingToDrawEv(%class.SkPaint* %1) #15
  br i1 %4, label %29, label %5

5:                                                ; preds = %2
  %6 = bitcast %class.SkCanvas* %0 to i1 (%class.SkCanvas*)***
  %7 = load i1 (%class.SkCanvas*)**, i1 (%class.SkCanvas*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%class.SkCanvas*)*, i1 (%class.SkCanvas*)** %7, i64 4
  %9 = load i1 (%class.SkCanvas*)*, i1 (%class.SkCanvas*)** %8, align 8
  %10 = tail call zeroext i1 %9(%class.SkCanvas* %0) #15
  br i1 %10, label %29, label %11

11:                                               ; preds = %5
  %12 = bitcast %class.AutoLayerForImageFilter* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %12) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 8 bitcast (%class.AutoLayerForImageFilter* @__const._ZN8SkCanvas21onDrawEdgeAAImageSet2EPKNS_13ImageSetEntryEiPK7SkPointPK8SkMatrixRK17SkSamplingOptionsPK7SkPaintNS_17SrcRectConstraintE.layer to i8*), i64 88, i1 false) #15
  call fastcc void @_ZN23AutoLayerForImageFilterC2EP8SkCanvasRK7SkPaintPK6SkRectN12_GLOBAL__N_117CheckForOverwriteENS0_21ShaderOverrideOpacityE(%class.AutoLayerForImageFilter* nonnull %3, %class.SkCanvas* %0, %class.SkPaint* dereferenceable(72) %1, %struct.SkRect* null, i1 zeroext true, i32 0) #15
  %13 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %14 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %13, align 8
  %15 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %14, i64 0, i32 1
  %16 = load %class.SkBaseDevice*, %class.SkBaseDevice** %15, align 8
  %17 = getelementptr inbounds %class.AutoLayerForImageFilter, %class.AutoLayerForImageFilter* %3, i64 0, i32 0
  %18 = bitcast %class.SkBaseDevice* %16 to void (%class.SkBaseDevice*, %class.SkPaint*)***
  %19 = load void (%class.SkBaseDevice*, %class.SkPaint*)**, void (%class.SkBaseDevice*, %class.SkPaint*)*** %18, align 8
  %20 = getelementptr inbounds void (%class.SkBaseDevice*, %class.SkPaint*)*, void (%class.SkBaseDevice*, %class.SkPaint*)** %19, i64 24
  %21 = load void (%class.SkBaseDevice*, %class.SkPaint*)*, void (%class.SkBaseDevice*, %class.SkPaint*)** %20, align 8
  call void %21(%class.SkBaseDevice* %16, %class.SkPaint* nonnull dereferenceable(72) %17) #15
  %22 = getelementptr inbounds %class.AutoLayerForImageFilter, %class.AutoLayerForImageFilter* %3, i64 0, i32 2
  %23 = load i8, i8* %22, align 8, !range !122
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %11
  %26 = getelementptr inbounds %class.AutoLayerForImageFilter, %class.AutoLayerForImageFilter* %3, i64 0, i32 1
  %27 = load %class.SkCanvas*, %class.SkCanvas** %26, align 8
  call void @_ZN8SkCanvas15internalRestoreEv(%class.SkCanvas* %27) #15
  br label %28

28:                                               ; preds = %25, %11
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %17) #15
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %12) #15
  br label %29

29:                                               ; preds = %2, %5, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas17internalDrawPaintERK7SkPaint(%class.SkCanvas*, %class.SkPaint* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.AutoLayerForImageFilter, align 8
  %4 = tail call zeroext i1 @_ZNK7SkPaint13nothingToDrawEv(%class.SkPaint* %1) #15
  br i1 %4, label %29, label %5

5:                                                ; preds = %2
  %6 = bitcast %class.SkCanvas* %0 to i1 (%class.SkCanvas*)***
  %7 = load i1 (%class.SkCanvas*)**, i1 (%class.SkCanvas*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%class.SkCanvas*)*, i1 (%class.SkCanvas*)** %7, i64 4
  %9 = load i1 (%class.SkCanvas*)*, i1 (%class.SkCanvas*)** %8, align 8
  %10 = tail call zeroext i1 %9(%class.SkCanvas* %0) #15
  br i1 %10, label %29, label %11

11:                                               ; preds = %5
  %12 = bitcast %class.AutoLayerForImageFilter* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %12) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 8 bitcast (%class.AutoLayerForImageFilter* @__const._ZN8SkCanvas21onDrawEdgeAAImageSet2EPKNS_13ImageSetEntryEiPK7SkPointPK8SkMatrixRK17SkSamplingOptionsPK7SkPaintNS_17SrcRectConstraintE.layer to i8*), i64 88, i1 false)
  call fastcc void @_ZN23AutoLayerForImageFilterC2EP8SkCanvasRK7SkPaintPK6SkRectN12_GLOBAL__N_117CheckForOverwriteENS0_21ShaderOverrideOpacityE(%class.AutoLayerForImageFilter* nonnull %3, %class.SkCanvas* %0, %class.SkPaint* dereferenceable(72) %1, %struct.SkRect* null, i1 zeroext true, i32 0)
  %13 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %14 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %13, align 8
  %15 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %14, i64 0, i32 1
  %16 = load %class.SkBaseDevice*, %class.SkBaseDevice** %15, align 8
  %17 = getelementptr inbounds %class.AutoLayerForImageFilter, %class.AutoLayerForImageFilter* %3, i64 0, i32 0
  %18 = bitcast %class.SkBaseDevice* %16 to void (%class.SkBaseDevice*, %class.SkPaint*)***
  %19 = load void (%class.SkBaseDevice*, %class.SkPaint*)**, void (%class.SkBaseDevice*, %class.SkPaint*)*** %18, align 8
  %20 = getelementptr inbounds void (%class.SkBaseDevice*, %class.SkPaint*)*, void (%class.SkBaseDevice*, %class.SkPaint*)** %19, i64 24
  %21 = load void (%class.SkBaseDevice*, %class.SkPaint*)*, void (%class.SkBaseDevice*, %class.SkPaint*)** %20, align 8
  call void %21(%class.SkBaseDevice* %16, %class.SkPaint* nonnull dereferenceable(72) %17) #15
  %22 = getelementptr inbounds %class.AutoLayerForImageFilter, %class.AutoLayerForImageFilter* %3, i64 0, i32 2
  %23 = load i8, i8* %22, align 8, !range !122
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %11
  %26 = getelementptr inbounds %class.AutoLayerForImageFilter, %class.AutoLayerForImageFilter* %3, i64 0, i32 1
  %27 = load %class.SkCanvas*, %class.SkCanvas** %26, align 8
  call void @_ZN8SkCanvas15internalRestoreEv(%class.SkCanvas* %27) #15
  br label %28

28:                                               ; preds = %11, %25
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %17) #15
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %12) #15
  br label %29

29:                                               ; preds = %2, %5, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN23AutoLayerForImageFilterC2EP8SkCanvasRK7SkPaintPK6SkRectN12_GLOBAL__N_117CheckForOverwriteENS0_21ShaderOverrideOpacityE(%class.AutoLayerForImageFilter*, %class.SkCanvas*, %class.SkPaint* dereferenceable(72), %struct.SkRect*, i1 zeroext, i32) unnamed_addr #0 align 2 {
  %7 = alloca %class.SkPaint, align 8
  %8 = alloca %class.sk_sp.58, align 8
  %9 = alloca %class.sk_sp.58, align 8
  %10 = alloca %struct.SkRect, align 4
  %11 = alloca %"struct.SkCanvas::SaveLayerRec", align 8
  %12 = getelementptr inbounds %class.AutoLayerForImageFilter, %class.AutoLayerForImageFilter* %0, i64 0, i32 0
  tail call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* %12, %class.SkPaint* dereferenceable(72) %2) #15
  %13 = getelementptr inbounds %class.AutoLayerForImageFilter, %class.AutoLayerForImageFilter* %0, i64 0, i32 1
  store %class.SkCanvas* %1, %class.SkCanvas** %13, align 8
  %14 = getelementptr inbounds %class.AutoLayerForImageFilter, %class.AutoLayerForImageFilter* %0, i64 0, i32 2
  store i8 0, i8* %14, align 8
  %15 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %1, i64 0, i32 9
  %16 = load %class.SkSurface_Base*, %class.SkSurface_Base** %15, align 8
  %17 = icmp eq %class.SkSurface_Base* %16, null
  br i1 %4, label %18, label %28

18:                                               ; preds = %6
  br i1 %17, label %30, label %19

19:                                               ; preds = %18
  %20 = tail call zeroext i1 @_ZNK14SkSurface_Base24outstandingImageSnapshotEv(%class.SkSurface_Base* nonnull %16) #15
  br i1 %20, label %21, label %25

21:                                               ; preds = %19
  %22 = tail call zeroext i1 @_ZNK8SkCanvas27wouldOverwriteEntireSurfaceEPK6SkRectPK7SkPaintNS_21ShaderOverrideOpacityE(%class.SkCanvas* %1, %struct.SkRect* %3, %class.SkPaint* %12, i32 %5) #15
  %23 = xor i1 %22, true
  %24 = zext i1 %23 to i32
  br label %25

25:                                               ; preds = %21, %19
  %26 = phi i32 [ 1, %19 ], [ %24, %21 ]
  %27 = load %class.SkSurface_Base*, %class.SkSurface_Base** %15, align 8
  tail call void @_ZN14SkSurface_Base11aboutToDrawEN9SkSurface17ContentChangeModeE(%class.SkSurface_Base* %27, i32 %26) #15
  br label %30

28:                                               ; preds = %6
  br i1 %17, label %30, label %29

29:                                               ; preds = %28
  tail call void @_ZN14SkSurface_Base11aboutToDrawEN9SkSurface17ContentChangeModeE(%class.SkSurface_Base* nonnull %16, i32 1) #15
  br label %30

30:                                               ; preds = %29, %28, %25, %18
  %31 = getelementptr inbounds %class.AutoLayerForImageFilter, %class.AutoLayerForImageFilter* %0, i64 0, i32 0, i32 4, i32 0
  %32 = load %class.SkImageFilter*, %class.SkImageFilter** %31, align 8
  %33 = icmp eq %class.SkImageFilter* %32, null
  br i1 %33, label %107, label %34

34:                                               ; preds = %30
  %35 = tail call fastcc zeroext i1 @_ZL21image_to_color_filterP7SkPaint(%class.SkPaint* %12)
  br i1 %35, label %107, label %36

36:                                               ; preds = %34
  %37 = bitcast %class.SkPaint* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %37) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %37, i8* align 8 bitcast (%class.SkPaint* @__const._ZL25clean_paint_for_drawImagePK7SkPaint.cleaned to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %7) #15
  call void @_ZNK7SkPaint14refImageFilterEv(%class.sk_sp.58* nonnull sret %8, %class.SkPaint* %12) #15
  call void @_ZN7SkPaint14setImageFilterE5sk_spI13SkImageFilterE(%class.SkPaint* nonnull %7, %class.sk_sp.58* nonnull %8) #15
  %38 = getelementptr inbounds %class.sk_sp.58, %class.sk_sp.58* %8, i64 0, i32 0
  %39 = load %class.SkImageFilter*, %class.SkImageFilter** %38, align 8
  %40 = icmp eq %class.SkImageFilter* %39, null
  br i1 %40, label %51, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %39, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = atomicrmw add i32* %42, i32 -1 acq_rel
  %44 = icmp eq i32 %43, 1
  br i1 %44, label %45, label %51

45:                                               ; preds = %41
  %46 = bitcast %class.SkImageFilter* %39 to %class.SkRefCntBase*
  %47 = bitcast %class.SkImageFilter* %39 to void (%class.SkRefCntBase*)***
  %48 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %47, align 8
  %49 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %48, i64 2
  %50 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %49, align 8
  call void %50(%class.SkRefCntBase* nonnull %46) #15
  br label %51

51:                                               ; preds = %36, %41, %45
  %52 = getelementptr inbounds %class.AutoLayerForImageFilter, %class.AutoLayerForImageFilter* %0, i64 0, i32 0, i32 8, i32 0, i32 0
  %53 = load i32, i32* %52, align 8
  %54 = and i32 %53, 261120
  %55 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %7, i64 0, i32 8, i32 0, i32 0
  %56 = load i32, i32* %55, align 8
  %57 = and i32 %56, -261121
  %58 = or i32 %57, %54
  store i32 %58, i32* %55, align 8
  %59 = getelementptr inbounds %class.sk_sp.58, %class.sk_sp.58* %9, i64 0, i32 0
  store %class.SkImageFilter* null, %class.SkImageFilter** %59, align 8
  call void @_ZN7SkPaint14setImageFilterE5sk_spI13SkImageFilterE(%class.SkPaint* %12, %class.sk_sp.58* nonnull %9) #15
  %60 = load %class.SkImageFilter*, %class.SkImageFilter** %59, align 8
  %61 = icmp eq %class.SkImageFilter* %60, null
  br i1 %61, label %72, label %62

62:                                               ; preds = %51
  %63 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %60, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = atomicrmw add i32* %63, i32 -1 acq_rel
  %65 = icmp eq i32 %64, 1
  br i1 %65, label %66, label %72

66:                                               ; preds = %62
  %67 = bitcast %class.SkImageFilter* %60 to %class.SkRefCntBase*
  %68 = bitcast %class.SkImageFilter* %60 to void (%class.SkRefCntBase*)***
  %69 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %68, align 8
  %70 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %69, i64 2
  %71 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %70, align 8
  call void %71(%class.SkRefCntBase* nonnull %67) #15
  br label %72

72:                                               ; preds = %51, %62, %66
  %73 = load i32, i32* %52, align 8
  %74 = and i32 %73, -261121
  %75 = or i32 %74, 3072
  store i32 %75, i32* %52, align 8
  %76 = bitcast %struct.SkRect* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %76) #15
  %77 = icmp eq %struct.SkRect* %3, null
  %78 = bitcast %struct.SkRect* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %78, i8 -1, i64 16, i1 false)
  br i1 %77, label %100, label %79

79:                                               ; preds = %72
  %80 = call zeroext i1 @_ZNK7SkPaint20canComputeFastBoundsEv(%class.SkPaint* %12) #15
  br i1 %80, label %81, label %100

81:                                               ; preds = %79
  %82 = load i32, i32* %52, align 8
  %83 = lshr i32 %82, 6
  %84 = trunc i32 %83 to i8
  %85 = and i8 %84, 3
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %87, label %98

87:                                               ; preds = %81
  %88 = getelementptr inbounds %class.AutoLayerForImageFilter, %class.AutoLayerForImageFilter* %0, i64 0, i32 0, i32 2, i32 0
  %89 = bitcast %class.SkMaskFilter** %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = bitcast %class.AutoLayerForImageFilter* %0 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = or i64 %92, %90
  %94 = bitcast %class.SkImageFilter** %31 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = or i64 %93, %95
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %100, label %98

98:                                               ; preds = %87, %81
  %99 = call dereferenceable(16) %struct.SkRect* @_ZNK7SkPaint19doComputeFastBoundsERK6SkRectPS0_NS_5StyleE(%class.SkPaint* %12, %struct.SkRect* nonnull dereferenceable(16) %3, %struct.SkRect* nonnull %10, i8 zeroext %85) #15
  br label %100

100:                                              ; preds = %98, %87, %72, %79
  %101 = phi %struct.SkRect* [ %3, %79 ], [ null, %72 ], [ %99, %98 ], [ %3, %87 ]
  %102 = bitcast %"struct.SkCanvas::SaveLayerRec"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %102) #15
  %103 = getelementptr inbounds %"struct.SkCanvas::SaveLayerRec", %"struct.SkCanvas::SaveLayerRec"* %11, i64 0, i32 0
  store %struct.SkRect* %101, %struct.SkRect** %103, align 8
  %104 = getelementptr inbounds %"struct.SkCanvas::SaveLayerRec", %"struct.SkCanvas::SaveLayerRec"* %11, i64 0, i32 1
  store %class.SkPaint* %7, %class.SkPaint** %104, align 8
  %105 = getelementptr inbounds %"struct.SkCanvas::SaveLayerRec", %"struct.SkCanvas::SaveLayerRec"* %11, i64 0, i32 2
  store %class.SkImageFilter* null, %class.SkImageFilter** %105, align 8
  %106 = getelementptr inbounds %"struct.SkCanvas::SaveLayerRec", %"struct.SkCanvas::SaveLayerRec"* %11, i64 0, i32 3
  store i32 0, i32* %106, align 8
  call void @_ZN8SkCanvas17internalSaveLayerERKNS_12SaveLayerRecENS_17SaveLayerStrategyE(%class.SkCanvas* %1, %"struct.SkCanvas::SaveLayerRec"* nonnull dereferenceable(32) %11, i32 0)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %102) #15
  store i8 1, i8* %14, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %76) #15
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %7) #15
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %37) #15
  br label %107

107:                                              ; preds = %30, %100, %34
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas12onDrawPointsENS_9PointModeEmPK7SkPointRK7SkPaint(%class.SkCanvas*, i32, i64, %struct.SkPoint*, %class.SkPaint* dereferenceable(72)) unnamed_addr #0 align 2 {
  %6 = alloca %struct.SkRect, align 4
  %7 = alloca %class.SkPaint, align 8
  %8 = alloca %class.AutoLayerForImageFilter, align 8
  %9 = icmp slt i64 %2, 1
  br i1 %9, label %62, label %10

10:                                               ; preds = %5
  %11 = tail call zeroext i1 @_ZNK7SkPaint13nothingToDrawEv(%class.SkPaint* %4) #15
  br i1 %11, label %62, label %12

12:                                               ; preds = %10
  %13 = bitcast %struct.SkRect* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #15
  %14 = icmp eq i64 %2, 2
  %15 = bitcast %struct.SkRect* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %15, i8 -1, i64 16, i1 false)
  br i1 %14, label %16, label %37

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 0
  %18 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 3
  %19 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 2
  %20 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 1
  %21 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 0, i32 0
  %22 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 1, i32 0
  %23 = load float, float* %22, align 4
  %24 = load float, float* %21, align 4
  %25 = fcmp olt float %23, %24
  %26 = select i1 %25, float %23, float %24
  store float %26, float* %17, align 4
  %27 = fcmp olt float %24, %23
  %28 = select i1 %27, float %23, float %24
  store float %28, float* %19, align 4
  %29 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 0, i32 1
  %30 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 1, i32 1
  %31 = load float, float* %30, align 4
  %32 = load float, float* %29, align 4
  %33 = fcmp olt float %31, %32
  %34 = select i1 %33, float %31, float %32
  store float %34, float* %20, align 4
  %35 = fcmp olt float %32, %31
  %36 = select i1 %35, float %31, float %32
  store float %36, float* %18, align 4
  br label %40

37:                                               ; preds = %12
  %38 = trunc i64 %2 to i32
  %39 = call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* nonnull %6, %struct.SkPoint* %3, i32 %38) #15
  br label %40

40:                                               ; preds = %37, %16
  %41 = bitcast %class.SkPaint* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %41) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %41, i8* align 8 bitcast (%class.SkPaint* @__const._ZL25clean_paint_for_drawImagePK7SkPaint.cleaned to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* nonnull %7, %class.SkPaint* dereferenceable(72) %4) #15
  call void @_ZN7SkPaint8setStyleENS_5StyleE(%class.SkPaint* nonnull %7, i8 zeroext 1) #15
  %42 = call zeroext i1 @_ZN8SkCanvas19internalQuickRejectERK6SkRectRK7SkPaintPK8SkMatrix(%class.SkCanvas* %0, %struct.SkRect* nonnull dereferenceable(16) %6, %class.SkPaint* nonnull dereferenceable(72) %7, %class.SkMatrix* null)
  br i1 %42, label %61, label %43

43:                                               ; preds = %40
  %44 = bitcast %class.AutoLayerForImageFilter* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %44) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %44, i8* align 8 bitcast (%class.AutoLayerForImageFilter* @__const._ZN8SkCanvas21onDrawEdgeAAImageSet2EPKNS_13ImageSetEntryEiPK7SkPointPK8SkMatrixRK17SkSamplingOptionsPK7SkPaintNS_17SrcRectConstraintE.layer to i8*), i64 88, i1 false)
  call fastcc void @_ZN23AutoLayerForImageFilterC2EP8SkCanvasRK7SkPaintPK6SkRectN12_GLOBAL__N_117CheckForOverwriteENS0_21ShaderOverrideOpacityE(%class.AutoLayerForImageFilter* nonnull %8, %class.SkCanvas* %0, %class.SkPaint* nonnull dereferenceable(72) %7, %struct.SkRect* nonnull %6, i1 zeroext false, i32 0)
  %45 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %46 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %45, align 8
  %47 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %46, i64 0, i32 1
  %48 = load %class.SkBaseDevice*, %class.SkBaseDevice** %47, align 8
  %49 = getelementptr inbounds %class.AutoLayerForImageFilter, %class.AutoLayerForImageFilter* %8, i64 0, i32 0
  %50 = bitcast %class.SkBaseDevice* %48 to void (%class.SkBaseDevice*, i32, i64, %struct.SkPoint*, %class.SkPaint*)***
  %51 = load void (%class.SkBaseDevice*, i32, i64, %struct.SkPoint*, %class.SkPaint*)**, void (%class.SkBaseDevice*, i32, i64, %struct.SkPoint*, %class.SkPaint*)*** %50, align 8
  %52 = getelementptr inbounds void (%class.SkBaseDevice*, i32, i64, %struct.SkPoint*, %class.SkPaint*)*, void (%class.SkBaseDevice*, i32, i64, %struct.SkPoint*, %class.SkPaint*)** %51, i64 25
  %53 = load void (%class.SkBaseDevice*, i32, i64, %struct.SkPoint*, %class.SkPaint*)*, void (%class.SkBaseDevice*, i32, i64, %struct.SkPoint*, %class.SkPaint*)** %52, align 8
  call void %53(%class.SkBaseDevice* %48, i32 %1, i64 %2, %struct.SkPoint* %3, %class.SkPaint* nonnull dereferenceable(72) %49) #15
  %54 = getelementptr inbounds %class.AutoLayerForImageFilter, %class.AutoLayerForImageFilter* %8, i64 0, i32 2
  %55 = load i8, i8* %54, align 8, !range !122
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %60, label %57

57:                                               ; preds = %43
  %58 = getelementptr inbounds %class.AutoLayerForImageFilter, %class.AutoLayerForImageFilter* %8, i64 0, i32 1
  %59 = load %class.SkCanvas*, %class.SkCanvas** %58, align 8
  call void @_ZN8SkCanvas15internalRestoreEv(%class.SkCanvas* %59) #15
  br label %60

60:                                               ; preds = %43, %57
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %49) #15
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %44) #15
  br label %61

61:                                               ; preds = %40, %60
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %7) #15
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %41) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #15
  br label %62

62:                                               ; preds = %5, %10, %61
  ret void
}

declare void @_ZN7SkPaint8setStyleENS_5StyleE(%class.SkPaint*, i8 zeroext) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas10onDrawRectERK6SkRectRK7SkPaint(%class.SkCanvas*, %struct.SkRect* dereferenceable(16), %class.SkPaint* dereferenceable(72)) unnamed_addr #0 align 2 {
  %4 = alloca %class.AutoLayerForImageFilter, align 8
  %5 = tail call zeroext i1 @_ZN8SkCanvas19internalQuickRejectERK6SkRectRK7SkPaintPK8SkMatrix(%class.SkCanvas* %0, %struct.SkRect* dereferenceable(16) %1, %class.SkPaint* dereferenceable(72) %2, %class.SkMatrix* null)
  br i1 %5, label %24, label %6

6:                                                ; preds = %3
  %7 = bitcast %class.AutoLayerForImageFilter* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %7) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 bitcast (%class.AutoLayerForImageFilter* @__const._ZN8SkCanvas21onDrawEdgeAAImageSet2EPKNS_13ImageSetEntryEiPK7SkPointPK8SkMatrixRK17SkSamplingOptionsPK7SkPaintNS_17SrcRectConstraintE.layer to i8*), i64 88, i1 false)
  call fastcc void @_ZN23AutoLayerForImageFilterC2EP8SkCanvasRK7SkPaintPK6SkRectN12_GLOBAL__N_117CheckForOverwriteENS0_21ShaderOverrideOpacityE(%class.AutoLayerForImageFilter* nonnull %4, %class.SkCanvas* %0, %class.SkPaint* dereferenceable(72) %2, %struct.SkRect* %1, i1 zeroext true, i32 0)
  %8 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %9 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %8, align 8
  %10 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %9, i64 0, i32 1
  %11 = load %class.SkBaseDevice*, %class.SkBaseDevice** %10, align 8
  %12 = getelementptr inbounds %class.AutoLayerForImageFilter, %class.AutoLayerForImageFilter* %4, i64 0, i32 0
  %13 = bitcast %class.SkBaseDevice* %11 to void (%class.SkBaseDevice*, %struct.SkRect*, %class.SkPaint*)***
  %14 = load void (%class.SkBaseDevice*, %struct.SkRect*, %class.SkPaint*)**, void (%class.SkBaseDevice*, %struct.SkRect*, %class.SkPaint*)*** %13, align 8
  %15 = getelementptr inbounds void (%class.SkBaseDevice*, %struct.SkRect*, %class.SkPaint*)*, void (%class.SkBaseDevice*, %struct.SkRect*, %class.SkPaint*)** %14, i64 26
  %16 = load void (%class.SkBaseDevice*, %struct.SkRect*, %class.SkPaint*)*, void (%class.SkBaseDevice*, %struct.SkRect*, %class.SkPaint*)** %15, align 8
  call void %16(%class.SkBaseDevice* %11, %struct.SkRect* dereferenceable(16) %1, %class.SkPaint* nonnull dereferenceable(72) %12) #15
  %17 = getelementptr inbounds %class.AutoLayerForImageFilter, %class.AutoLayerForImageFilter* %4, i64 0, i32 2
  %18 = load i8, i8* %17, align 8, !range !122
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %6
  %21 = getelementptr inbounds %class.AutoLayerForImageFilter, %class.AutoLayerForImageFilter* %4, i64 0, i32 1
  %22 = load %class.SkCanvas*, %class.SkCanvas** %21, align 8
  call void @_ZN8SkCanvas15internalRestoreEv(%class.SkCanvas* %22) #15
  br label %23

23:                                               ; preds = %6, %20
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %12) #15
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %7) #15
  br label %24

24:                                               ; preds = %3, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas12onDrawRegionERK8SkRegionRK7SkPaint(%class.SkCanvas*, %class.SkRegion* dereferenceable(24), %class.SkPaint* dereferenceable(72)) unnamed_addr #0 align 2 {
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = bitcast { <2 x float>, <2 x float> }* %4 to %struct.SkRect*
  %6 = alloca %class.AutoLayerForImageFilter, align 8
  %7 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #15
  %8 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %1, i64 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = sitofp i32 %9 to float
  %11 = insertelement <2 x float> undef, float %10, i32 0
  %12 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %1, i64 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = sitofp i32 %13 to float
  %15 = insertelement <2 x float> %11, float %14, i32 1
  %16 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %1, i64 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = sitofp i32 %17 to float
  %19 = insertelement <2 x float> undef, float %18, i32 0
  %20 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %1, i64 0, i32 0, i32 3
  %21 = load i32, i32* %20, align 4
  %22 = sitofp i32 %21 to float
  %23 = insertelement <2 x float> %19, float %22, i32 1
  %24 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  store <2 x float> %15, <2 x float>* %24, align 8
  %25 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  store <2 x float> %23, <2 x float>* %25, align 8
  %26 = call zeroext i1 @_ZN8SkCanvas19internalQuickRejectERK6SkRectRK7SkPaintPK8SkMatrix(%class.SkCanvas* %0, %struct.SkRect* nonnull dereferenceable(16) %5, %class.SkPaint* dereferenceable(72) %2, %class.SkMatrix* null)
  br i1 %26, label %45, label %27

27:                                               ; preds = %3
  %28 = bitcast %class.AutoLayerForImageFilter* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %28) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* align 8 bitcast (%class.AutoLayerForImageFilter* @__const._ZN8SkCanvas21onDrawEdgeAAImageSet2EPKNS_13ImageSetEntryEiPK7SkPointPK8SkMatrixRK17SkSamplingOptionsPK7SkPaintNS_17SrcRectConstraintE.layer to i8*), i64 88, i1 false)
  call fastcc void @_ZN23AutoLayerForImageFilterC2EP8SkCanvasRK7SkPaintPK6SkRectN12_GLOBAL__N_117CheckForOverwriteENS0_21ShaderOverrideOpacityE(%class.AutoLayerForImageFilter* nonnull %6, %class.SkCanvas* %0, %class.SkPaint* dereferenceable(72) %2, %struct.SkRect* nonnull %5, i1 zeroext false, i32 0)
  %29 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %30 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %29, align 8
  %31 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %30, i64 0, i32 1
  %32 = load %class.SkBaseDevice*, %class.SkBaseDevice** %31, align 8
  %33 = getelementptr inbounds %class.AutoLayerForImageFilter, %class.AutoLayerForImageFilter* %6, i64 0, i32 0
  %34 = bitcast %class.SkBaseDevice* %32 to void (%class.SkBaseDevice*, %class.SkRegion*, %class.SkPaint*)***
  %35 = load void (%class.SkBaseDevice*, %class.SkRegion*, %class.SkPaint*)**, void (%class.SkBaseDevice*, %class.SkRegion*, %class.SkPaint*)*** %34, align 8
  %36 = getelementptr inbounds void (%class.SkBaseDevice*, %class.SkRegion*, %class.SkPaint*)*, void (%class.SkBaseDevice*, %class.SkRegion*, %class.SkPaint*)** %35, i64 27
  %37 = load void (%class.SkBaseDevice*, %class.SkRegion*, %class.SkPaint*)*, void (%class.SkBaseDevice*, %class.SkRegion*, %class.SkPaint*)** %36, align 8
  call void %37(%class.SkBaseDevice* %32, %class.SkRegion* dereferenceable(24) %1, %class.SkPaint* nonnull dereferenceable(72) %33) #15
  %38 = getelementptr inbounds %class.AutoLayerForImageFilter, %class.AutoLayerForImageFilter* %6, i64 0, i32 2
  %39 = load i8, i8* %38, align 8, !range !122
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %27
  %42 = getelementptr inbounds %class.AutoLayerForImageFilter, %class.AutoLayerForImageFilter* %6, i64 0, i32 1
  %43 = load %class.SkCanvas*, %class.SkCanvas** %42, align 8
  call void @_ZN8SkCanvas15internalRestoreEv(%class.SkCanvas* %43) #15
  br label %44

44:                                               ; preds = %27, %41
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %33) #15
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %28) #15
  br label %45

45:                                               ; preds = %3, %44
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas12onDrawBehindERK7SkPaint(%class.SkCanvas*, %class.SkPaint* dereferenceable(72)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.SkDeque::Iter", align 8
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = bitcast { <2 x float>, <2 x float> }* %4 to %struct.SkRect*
  %6 = alloca %class.AutoLayerForImageFilter, align 8
  %7 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %8 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %7, align 8
  %9 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %8, i64 0, i32 1
  %10 = load %class.SkBaseDevice*, %class.SkBaseDevice** %9, align 8
  %11 = icmp eq %class.SkBaseDevice* %10, null
  br i1 %11, label %165, label %12

12:                                               ; preds = %2
  %13 = bitcast %"class.SkDeque::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #15
  %14 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 1
  %15 = bitcast %"class.SkDeque::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false)
  call void @_ZN7SkDeque4IterC1ERKS_NS0_9IterStartE(%"class.SkDeque::Iter"* nonnull %3, %class.SkDeque* dereferenceable(56) %14, i32 1) #15
  br label %16

16:                                               ; preds = %19, %12
  %17 = call i8* @_ZN7SkDeque4Iter4prevEv(%"class.SkDeque::Iter"* nonnull %3) #15
  %18 = icmp eq i8* %17, null
  br i1 %18, label %164, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %17, i64 16
  %21 = bitcast i8* %20 to %"struct.(anonymous namespace)::BackImage"**
  %22 = load %"struct.(anonymous namespace)::BackImage"*, %"struct.(anonymous namespace)::BackImage"** %21, align 8
  %23 = icmp eq %"struct.(anonymous namespace)::BackImage"* %22, null
  br i1 %23, label %16, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"struct.(anonymous namespace)::BackImage", %"struct.(anonymous namespace)::BackImage"* %22, i64 0, i32 1, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = getelementptr inbounds %"struct.(anonymous namespace)::BackImage", %"struct.(anonymous namespace)::BackImage"* %22, i64 0, i32 1, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"struct.(anonymous namespace)::BackImage", %"struct.(anonymous namespace)::BackImage"* %22, i64 0, i32 0, i32 0
  %30 = load %class.SkSpecialImage*, %class.SkSpecialImage** %29, align 8
  %31 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %30, i64 0, i32 2, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %30, i64 0, i32 2, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = sub i32 %32, %34
  %36 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %30, i64 0, i32 2, i32 3
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %30, i64 0, i32 2, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = sub i32 %37, %39
  %41 = sext i32 %26 to i64
  %42 = sext i32 %35 to i64
  %43 = add nsw i64 %42, %41
  %44 = icmp slt i64 %43, 2147483647
  %45 = select i1 %44, i64 %43, i64 2147483647
  %46 = icmp sgt i64 %45, -2147483647
  %47 = select i1 %46, i64 %45, i64 -2147483647
  %48 = sext i32 %28 to i64
  %49 = sext i32 %40 to i64
  %50 = add nsw i64 %49, %48
  %51 = icmp slt i64 %50, 2147483647
  %52 = select i1 %51, i64 %50, i64 2147483647
  %53 = icmp sgt i64 %52, -2147483647
  %54 = select i1 %53, i64 %52, i64 -2147483647
  %55 = bitcast %class.SkBaseDevice* %10 to void (%class.SkBaseDevice*)***
  %56 = load void (%class.SkBaseDevice*)**, void (%class.SkBaseDevice*)*** %55, align 8
  %57 = getelementptr inbounds void (%class.SkBaseDevice*)*, void (%class.SkBaseDevice*)** %56, i64 10
  %58 = load void (%class.SkBaseDevice*)*, void (%class.SkBaseDevice*)** %57, align 8
  call void %58(%class.SkBaseDevice* %10) #15
  %59 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #15
  %60 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %10, i64 0, i32 1, i32 2
  %61 = bitcast %class.SkMatrix* %60 to <4 x i32>*
  %62 = load <4 x i32>, <4 x i32>* %61, align 4
  %63 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %10, i64 0, i32 1, i32 2, i32 0, i64 4
  %64 = bitcast float* %63 to i32*
  %65 = load i32, i32* %64, align 4
  %66 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %10, i64 0, i32 1, i32 2, i32 0, i64 5
  %67 = bitcast float* %66 to i32*
  %68 = load i32, i32* %67, align 4
  %69 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %10, i64 0, i32 1, i32 2, i32 0, i64 6
  %70 = bitcast float* %69 to i32*
  %71 = load i32, i32* %70, align 4
  %72 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %10, i64 0, i32 1, i32 2, i32 0, i64 7
  %73 = bitcast float* %72 to i32*
  %74 = load i32, i32* %73, align 4
  %75 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %10, i64 0, i32 1, i32 2, i32 0, i64 8
  %76 = bitcast float* %75 to i32*
  %77 = load i32, i32* %76, align 4
  %78 = bitcast %class.SkMatrix* %59 to <4 x i32>*
  %79 = load <4 x i32>, <4 x i32>* %78, align 4
  %80 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %59, i64 0, i32 0, i64 4
  %81 = bitcast float* %80 to <4 x i32>*
  %82 = load <4 x i32>, <4 x i32>* %81, align 4
  %83 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %59, i64 0, i32 0, i64 8
  %84 = bitcast float* %83 to i32*
  %85 = load i32, i32* %84, align 4
  %86 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %10, i64 0, i32 1, i32 1
  %87 = bitcast %class.SkM44* %86 to i32*
  %88 = extractelement <4 x i32> %79, i32 0
  store i32 %88, i32* %87, align 8
  %89 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %10, i64 0, i32 1, i32 1, i32 0, i64 1
  %90 = bitcast float* %89 to i32*
  %91 = extractelement <4 x i32> %79, i32 3
  store i32 %91, i32* %90, align 4
  %92 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %10, i64 0, i32 1, i32 1, i32 0, i64 2
  store float 0.000000e+00, float* %92, align 8
  %93 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %10, i64 0, i32 1, i32 1, i32 0, i64 3
  %94 = bitcast float* %93 to i32*
  %95 = extractelement <4 x i32> %82, i32 2
  store i32 %95, i32* %94, align 4
  %96 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %10, i64 0, i32 1, i32 1, i32 0, i64 4
  %97 = bitcast float* %96 to i32*
  %98 = extractelement <4 x i32> %79, i32 1
  store i32 %98, i32* %97, align 8
  %99 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %10, i64 0, i32 1, i32 1, i32 0, i64 5
  %100 = bitcast float* %99 to i32*
  %101 = extractelement <4 x i32> %82, i32 0
  store i32 %101, i32* %100, align 4
  %102 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %10, i64 0, i32 1, i32 1, i32 0, i64 6
  store float 0.000000e+00, float* %102, align 8
  %103 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %10, i64 0, i32 1, i32 1, i32 0, i64 7
  %104 = bitcast float* %103 to i32*
  %105 = extractelement <4 x i32> %82, i32 3
  store i32 %105, i32* %104, align 4
  %106 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %10, i64 0, i32 1, i32 1, i32 0, i64 8
  %107 = bitcast float* %106 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00>, <4 x float>* %107, align 8
  %108 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %10, i64 0, i32 1, i32 1, i32 0, i64 12
  %109 = bitcast float* %108 to i32*
  %110 = extractelement <4 x i32> %79, i32 2
  store i32 %110, i32* %109, align 8
  %111 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %10, i64 0, i32 1, i32 1, i32 0, i64 13
  %112 = bitcast float* %111 to i32*
  %113 = extractelement <4 x i32> %82, i32 1
  store i32 %113, i32* %112, align 4
  %114 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %10, i64 0, i32 1, i32 1, i32 0, i64 14
  store float 0.000000e+00, float* %114, align 8
  %115 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %10, i64 0, i32 1, i32 1, i32 0, i64 15
  %116 = bitcast float* %115 to i32*
  store i32 %85, i32* %116, align 4
  %117 = bitcast %class.SkMatrix* %60 to <4 x i32>*
  store <4 x i32> %79, <4 x i32>* %117, align 8
  %118 = bitcast float* %63 to <4 x i32>*
  store <4 x i32> %82, <4 x i32>* %118, align 8
  store i32 %85, i32* %76, align 8
  %119 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %10, i64 0, i32 1, i32 2, i32 1
  store i32 128, i32* %119, align 4
  %120 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %120) #15
  %121 = sitofp i32 %26 to float
  %122 = insertelement <2 x float> undef, float %121, i32 0
  %123 = sitofp i32 %28 to float
  %124 = insertelement <2 x float> %122, float %123, i32 1
  %125 = trunc i64 %47 to i32
  %126 = sitofp i32 %125 to float
  %127 = insertelement <2 x float> undef, float %126, i32 0
  %128 = trunc i64 %54 to i32
  %129 = sitofp i32 %128 to float
  %130 = insertelement <2 x float> %127, float %129, i32 1
  %131 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  store <2 x float> %124, <2 x float>* %131, align 8
  %132 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  store <2 x float> %130, <2 x float>* %132, align 8
  %133 = bitcast %class.SkBaseDevice* %10 to void (%class.SkBaseDevice*, %struct.SkRect*, i32, i1)***
  %134 = load void (%class.SkBaseDevice*, %struct.SkRect*, i32, i1)**, void (%class.SkBaseDevice*, %struct.SkRect*, i32, i1)*** %133, align 8
  %135 = getelementptr inbounds void (%class.SkBaseDevice*, %struct.SkRect*, i32, i1)*, void (%class.SkBaseDevice*, %struct.SkRect*, i32, i1)** %134, i64 12
  %136 = load void (%class.SkBaseDevice*, %struct.SkRect*, i32, i1)*, void (%class.SkBaseDevice*, %struct.SkRect*, i32, i1)** %135, align 8
  call void %136(%class.SkBaseDevice* %10, %struct.SkRect* nonnull dereferenceable(16) %5, i32 1, i1 zeroext false) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %120) #15
  %137 = extractelement <4 x i32> %62, i32 0
  store i32 %137, i32* %87, align 8
  %138 = extractelement <4 x i32> %62, i32 3
  store i32 %138, i32* %90, align 4
  store float 0.000000e+00, float* %92, align 8
  store i32 %71, i32* %94, align 4
  %139 = extractelement <4 x i32> %62, i32 1
  store i32 %139, i32* %97, align 8
  store i32 %65, i32* %100, align 4
  store float 0.000000e+00, float* %102, align 8
  store i32 %74, i32* %104, align 4
  %140 = bitcast float* %106 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00>, <4 x float>* %140, align 8
  %141 = extractelement <4 x i32> %62, i32 2
  store i32 %141, i32* %109, align 8
  store i32 %68, i32* %112, align 4
  store float 0.000000e+00, float* %114, align 8
  store i32 %77, i32* %116, align 4
  %142 = bitcast %class.SkMatrix* %60 to <4 x i32>*
  store <4 x i32> %62, <4 x i32>* %142, align 8
  store i32 %65, i32* %64, align 8
  store i32 %68, i32* %67, align 4
  store i32 %71, i32* %70, align 8
  store i32 %74, i32* %73, align 4
  store i32 %77, i32* %76, align 8
  store i32 128, i32* %119, align 4
  %143 = bitcast %class.AutoLayerForImageFilter* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %143) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %143, i8* align 8 bitcast (%class.AutoLayerForImageFilter* @__const._ZN8SkCanvas21onDrawEdgeAAImageSet2EPKNS_13ImageSetEntryEiPK7SkPointPK8SkMatrixRK17SkSamplingOptionsPK7SkPaintNS_17SrcRectConstraintE.layer to i8*), i64 88, i1 false)
  call fastcc void @_ZN23AutoLayerForImageFilterC2EP8SkCanvasRK7SkPaintPK6SkRectN12_GLOBAL__N_117CheckForOverwriteENS0_21ShaderOverrideOpacityE(%class.AutoLayerForImageFilter* nonnull %6, %class.SkCanvas* %0, %class.SkPaint* dereferenceable(72) %1, %struct.SkRect* null, i1 zeroext false, i32 0)
  %144 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %7, align 8
  %145 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %144, i64 0, i32 1
  %146 = load %class.SkBaseDevice*, %class.SkBaseDevice** %145, align 8
  %147 = getelementptr inbounds %class.AutoLayerForImageFilter, %class.AutoLayerForImageFilter* %6, i64 0, i32 0
  %148 = bitcast %class.SkBaseDevice* %146 to void (%class.SkBaseDevice*, %class.SkPaint*)***
  %149 = load void (%class.SkBaseDevice*, %class.SkPaint*)**, void (%class.SkBaseDevice*, %class.SkPaint*)*** %148, align 8
  %150 = getelementptr inbounds void (%class.SkBaseDevice*, %class.SkPaint*)*, void (%class.SkBaseDevice*, %class.SkPaint*)** %149, i64 24
  %151 = load void (%class.SkBaseDevice*, %class.SkPaint*)*, void (%class.SkBaseDevice*, %class.SkPaint*)** %150, align 8
  call void %151(%class.SkBaseDevice* %146, %class.SkPaint* nonnull dereferenceable(72) %147) #15
  %152 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %7, align 8
  %153 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %152, i64 0, i32 3
  %154 = load void (%class.SkBaseDevice*)**, void (%class.SkBaseDevice*)*** %55, align 8
  %155 = getelementptr inbounds void (%class.SkBaseDevice*)*, void (%class.SkBaseDevice*)** %154, i64 11
  %156 = load void (%class.SkBaseDevice*)*, void (%class.SkBaseDevice*)** %155, align 8
  call void %156(%class.SkBaseDevice* %10) #15
  call void @_ZN12SkBaseDevice12setGlobalCTMERK5SkM44(%class.SkBaseDevice* %10, %class.SkM44* dereferenceable(64) %153) #15
  %157 = getelementptr inbounds %class.AutoLayerForImageFilter, %class.AutoLayerForImageFilter* %6, i64 0, i32 2
  %158 = load i8, i8* %157, align 8, !range !122
  %159 = icmp eq i8 %158, 0
  br i1 %159, label %163, label %160

160:                                              ; preds = %24
  %161 = getelementptr inbounds %class.AutoLayerForImageFilter, %class.AutoLayerForImageFilter* %6, i64 0, i32 1
  %162 = load %class.SkCanvas*, %class.SkCanvas** %161, align 8
  call void @_ZN8SkCanvas15internalRestoreEv(%class.SkCanvas* %162) #15
  br label %163

163:                                              ; preds = %24, %160
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %147) #15
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %143) #15
  br label %164

164:                                              ; preds = %16, %163
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #15
  br label %165

165:                                              ; preds = %2, %164
  ret void
}

declare void @_ZN7SkDeque4IterC1ERKS_NS0_9IterStartE(%"class.SkDeque::Iter"*, %class.SkDeque* dereferenceable(56), i32) unnamed_addr #4

declare i8* @_ZN7SkDeque4Iter4prevEv(%"class.SkDeque::Iter"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas10onDrawOvalERK6SkRectRK7SkPaint(%class.SkCanvas*, %struct.SkRect* dereferenceable(16), %class.SkPaint* dereferenceable(72)) unnamed_addr #0 align 2 {
  %4 = alloca %class.AutoLayerForImageFilter, align 8
  %5 = tail call zeroext i1 @_ZN8SkCanvas19internalQuickRejectERK6SkRectRK7SkPaintPK8SkMatrix(%class.SkCanvas* %0, %struct.SkRect* dereferenceable(16) %1, %class.SkPaint* dereferenceable(72) %2, %class.SkMatrix* null)
  br i1 %5, label %24, label %6

6:                                                ; preds = %3
  %7 = bitcast %class.AutoLayerForImageFilter* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %7) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 bitcast (%class.AutoLayerForImageFilter* @__const._ZN8SkCanvas21onDrawEdgeAAImageSet2EPKNS_13ImageSetEntryEiPK7SkPointPK8SkMatrixRK17SkSamplingOptionsPK7SkPaintNS_17SrcRectConstraintE.layer to i8*), i64 88, i1 false)
  call fastcc void @_ZN23AutoLayerForImageFilterC2EP8SkCanvasRK7SkPaintPK6SkRectN12_GLOBAL__N_117CheckForOverwriteENS0_21ShaderOverrideOpacityE(%class.AutoLayerForImageFilter* nonnull %4, %class.SkCanvas* %0, %class.SkPaint* dereferenceable(72) %2, %struct.SkRect* %1, i1 zeroext false, i32 0)
  %8 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %9 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %8, align 8
  %10 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %9, i64 0, i32 1
  %11 = load %class.SkBaseDevice*, %class.SkBaseDevice** %10, align 8
  %12 = getelementptr inbounds %class.AutoLayerForImageFilter, %class.AutoLayerForImageFilter* %4, i64 0, i32 0
  %13 = bitcast %class.SkBaseDevice* %11 to void (%class.SkBaseDevice*, %struct.SkRect*, %class.SkPaint*)***
  %14 = load void (%class.SkBaseDevice*, %struct.SkRect*, %class.SkPaint*)**, void (%class.SkBaseDevice*, %struct.SkRect*, %class.SkPaint*)*** %13, align 8
  %15 = getelementptr inbounds void (%class.SkBaseDevice*, %struct.SkRect*, %class.SkPaint*)*, void (%class.SkBaseDevice*, %struct.SkRect*, %class.SkPaint*)** %14, i64 28
  %16 = load void (%class.SkBaseDevice*, %struct.SkRect*, %class.SkPaint*)*, void (%class.SkBaseDevice*, %struct.SkRect*, %class.SkPaint*)** %15, align 8
  call void %16(%class.SkBaseDevice* %11, %struct.SkRect* dereferenceable(16) %1, %class.SkPaint* nonnull dereferenceable(72) %12) #15
  %17 = getelementptr inbounds %class.AutoLayerForImageFilter, %class.AutoLayerForImageFilter* %4, i64 0, i32 2
  %18 = load i8, i8* %17, align 8, !range !122
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %6
  %21 = getelementptr inbounds %class.AutoLayerForImageFilter, %class.AutoLayerForImageFilter* %4, i64 0, i32 1
  %22 = load %class.SkCanvas*, %class.SkCanvas** %21, align 8
  call void @_ZN8SkCanvas15internalRestoreEv(%class.SkCanvas* %22) #15
  br label %23

23:                                               ; preds = %6, %20
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %12) #15
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %7) #15
  br label %24

24:                                               ; preds = %3, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas9onDrawArcERK6SkRectffbRK7SkPaint(%class.SkCanvas*, %struct.SkRect* dereferenceable(16), float, float, i1 zeroext, %class.SkPaint* dereferenceable(72)) unnamed_addr #0 align 2 {
  %7 = alloca %class.AutoLayerForImageFilter, align 8
  %8 = tail call zeroext i1 @_ZN8SkCanvas19internalQuickRejectERK6SkRectRK7SkPaintPK8SkMatrix(%class.SkCanvas* %0, %struct.SkRect* dereferenceable(16) %1, %class.SkPaint* dereferenceable(72) %5, %class.SkMatrix* null)
  br i1 %8, label %27, label %9

9:                                                ; preds = %6
  %10 = bitcast %class.AutoLayerForImageFilter* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %10) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 8 bitcast (%class.AutoLayerForImageFilter* @__const._ZN8SkCanvas21onDrawEdgeAAImageSet2EPKNS_13ImageSetEntryEiPK7SkPointPK8SkMatrixRK17SkSamplingOptionsPK7SkPaintNS_17SrcRectConstraintE.layer to i8*), i64 88, i1 false)
  call fastcc void @_ZN23AutoLayerForImageFilterC2EP8SkCanvasRK7SkPaintPK6SkRectN12_GLOBAL__N_117CheckForOverwriteENS0_21ShaderOverrideOpacityE(%class.AutoLayerForImageFilter* nonnull %7, %class.SkCanvas* %0, %class.SkPaint* dereferenceable(72) %5, %struct.SkRect* %1, i1 zeroext false, i32 0)
  %11 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %12 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %11, align 8
  %13 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %12, i64 0, i32 1
  %14 = load %class.SkBaseDevice*, %class.SkBaseDevice** %13, align 8
  %15 = getelementptr inbounds %class.AutoLayerForImageFilter, %class.AutoLayerForImageFilter* %7, i64 0, i32 0
  %16 = bitcast %class.SkBaseDevice* %14 to void (%class.SkBaseDevice*, %struct.SkRect*, float, float, i1, %class.SkPaint*)***
  %17 = load void (%class.SkBaseDevice*, %struct.SkRect*, float, float, i1, %class.SkPaint*)**, void (%class.SkBaseDevice*, %struct.SkRect*, float, float, i1, %class.SkPaint*)*** %16, align 8
  %18 = getelementptr inbounds void (%class.SkBaseDevice*, %struct.SkRect*, float, float, i1, %class.SkPaint*)*, void (%class.SkBaseDevice*, %struct.SkRect*, float, float, i1, %class.SkPaint*)** %17, i64 29
  %19 = load void (%class.SkBaseDevice*, %struct.SkRect*, float, float, i1, %class.SkPaint*)*, void (%class.SkBaseDevice*, %struct.SkRect*, float, float, i1, %class.SkPaint*)** %18, align 8
  call void %19(%class.SkBaseDevice* %14, %struct.SkRect* dereferenceable(16) %1, float %2, float %3, i1 zeroext %4, %class.SkPaint* nonnull dereferenceable(72) %15) #15
  %20 = getelementptr inbounds %class.AutoLayerForImageFilter, %class.AutoLayerForImageFilter* %7, i64 0, i32 2
  %21 = load i8, i8* %20, align 8, !range !122
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %9
  %24 = getelementptr inbounds %class.AutoLayerForImageFilter, %class.AutoLayerForImageFilter* %7, i64 0, i32 1
  %25 = load %class.SkCanvas*, %class.SkCanvas** %24, align 8
  call void @_ZN8SkCanvas15internalRestoreEv(%class.SkCanvas* %25) #15
  br label %26

26:                                               ; preds = %9, %23
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %15) #15
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %10) #15
  br label %27

27:                                               ; preds = %6, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas11onDrawRRectERK7SkRRectRK7SkPaint(%class.SkCanvas*, %class.SkRRect* dereferenceable(52), %class.SkPaint* dereferenceable(72)) unnamed_addr #0 align 2 {
  %4 = alloca %class.AutoLayerForImageFilter, align 8
  %5 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 0
  %6 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 2
  %7 = load i32, i32* %6, align 4
  switch i32 %7, label %10 [
    i32 1, label %8
    i32 2, label %9
  ]

8:                                                ; preds = %3
  tail call void @_ZN8SkCanvas8drawRectERK6SkRectRK7SkPaint(%class.SkCanvas* %0, %struct.SkRect* dereferenceable(16) %5, %class.SkPaint* dereferenceable(72) %2)
  br label %30

9:                                                ; preds = %3
  tail call void @_ZN8SkCanvas8drawOvalERK6SkRectRK7SkPaint(%class.SkCanvas* %0, %struct.SkRect* dereferenceable(16) %5, %class.SkPaint* dereferenceable(72) %2)
  br label %30

10:                                               ; preds = %3
  %11 = tail call zeroext i1 @_ZN8SkCanvas19internalQuickRejectERK6SkRectRK7SkPaintPK8SkMatrix(%class.SkCanvas* %0, %struct.SkRect* dereferenceable(16) %5, %class.SkPaint* dereferenceable(72) %2, %class.SkMatrix* null)
  br i1 %11, label %30, label %12

12:                                               ; preds = %10
  %13 = bitcast %class.AutoLayerForImageFilter* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %13) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 8 bitcast (%class.AutoLayerForImageFilter* @__const._ZN8SkCanvas21onDrawEdgeAAImageSet2EPKNS_13ImageSetEntryEiPK7SkPointPK8SkMatrixRK17SkSamplingOptionsPK7SkPaintNS_17SrcRectConstraintE.layer to i8*), i64 88, i1 false)
  call fastcc void @_ZN23AutoLayerForImageFilterC2EP8SkCanvasRK7SkPaintPK6SkRectN12_GLOBAL__N_117CheckForOverwriteENS0_21ShaderOverrideOpacityE(%class.AutoLayerForImageFilter* nonnull %4, %class.SkCanvas* %0, %class.SkPaint* dereferenceable(72) %2, %struct.SkRect* %5, i1 zeroext false, i32 0)
  %14 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %15 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %14, align 8
  %16 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %15, i64 0, i32 1
  %17 = load %class.SkBaseDevice*, %class.SkBaseDevice** %16, align 8
  %18 = getelementptr inbounds %class.AutoLayerForImageFilter, %class.AutoLayerForImageFilter* %4, i64 0, i32 0
  %19 = bitcast %class.SkBaseDevice* %17 to void (%class.SkBaseDevice*, %class.SkRRect*, %class.SkPaint*)***
  %20 = load void (%class.SkBaseDevice*, %class.SkRRect*, %class.SkPaint*)**, void (%class.SkBaseDevice*, %class.SkRRect*, %class.SkPaint*)*** %19, align 8
  %21 = getelementptr inbounds void (%class.SkBaseDevice*, %class.SkRRect*, %class.SkPaint*)*, void (%class.SkBaseDevice*, %class.SkRRect*, %class.SkPaint*)** %20, i64 30
  %22 = load void (%class.SkBaseDevice*, %class.SkRRect*, %class.SkPaint*)*, void (%class.SkBaseDevice*, %class.SkRRect*, %class.SkPaint*)** %21, align 8
  call void %22(%class.SkBaseDevice* %17, %class.SkRRect* dereferenceable(52) %1, %class.SkPaint* nonnull dereferenceable(72) %18) #15
  %23 = getelementptr inbounds %class.AutoLayerForImageFilter, %class.AutoLayerForImageFilter* %4, i64 0, i32 2
  %24 = load i8, i8* %23, align 8, !range !122
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %12
  %27 = getelementptr inbounds %class.AutoLayerForImageFilter, %class.AutoLayerForImageFilter* %4, i64 0, i32 1
  %28 = load %class.SkCanvas*, %class.SkCanvas** %27, align 8
  call void @_ZN8SkCanvas15internalRestoreEv(%class.SkCanvas* %28) #15
  br label %29

29:                                               ; preds = %12, %26
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %18) #15
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %13) #15
  br label %30

30:                                               ; preds = %10, %29, %9, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas12onDrawDRRectERK7SkRRectS2_RK7SkPaint(%class.SkCanvas*, %class.SkRRect* dereferenceable(52), %class.SkRRect* dereferenceable(52), %class.SkPaint* dereferenceable(72)) unnamed_addr #0 align 2 {
  %5 = alloca %class.AutoLayerForImageFilter, align 8
  %6 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 0
  %7 = tail call zeroext i1 @_ZN8SkCanvas19internalQuickRejectERK6SkRectRK7SkPaintPK8SkMatrix(%class.SkCanvas* %0, %struct.SkRect* dereferenceable(16) %6, %class.SkPaint* dereferenceable(72) %3, %class.SkMatrix* null)
  br i1 %7, label %26, label %8

8:                                                ; preds = %4
  %9 = bitcast %class.AutoLayerForImageFilter* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %9) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 8 bitcast (%class.AutoLayerForImageFilter* @__const._ZN8SkCanvas21onDrawEdgeAAImageSet2EPKNS_13ImageSetEntryEiPK7SkPointPK8SkMatrixRK17SkSamplingOptionsPK7SkPaintNS_17SrcRectConstraintE.layer to i8*), i64 88, i1 false)
  call fastcc void @_ZN23AutoLayerForImageFilterC2EP8SkCanvasRK7SkPaintPK6SkRectN12_GLOBAL__N_117CheckForOverwriteENS0_21ShaderOverrideOpacityE(%class.AutoLayerForImageFilter* nonnull %5, %class.SkCanvas* %0, %class.SkPaint* dereferenceable(72) %3, %struct.SkRect* %6, i1 zeroext false, i32 0)
  %10 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %11 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %10, align 8
  %12 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %11, i64 0, i32 1
  %13 = load %class.SkBaseDevice*, %class.SkBaseDevice** %12, align 8
  %14 = getelementptr inbounds %class.AutoLayerForImageFilter, %class.AutoLayerForImageFilter* %5, i64 0, i32 0
  %15 = bitcast %class.SkBaseDevice* %13 to void (%class.SkBaseDevice*, %class.SkRRect*, %class.SkRRect*, %class.SkPaint*)***
  %16 = load void (%class.SkBaseDevice*, %class.SkRRect*, %class.SkRRect*, %class.SkPaint*)**, void (%class.SkBaseDevice*, %class.SkRRect*, %class.SkRRect*, %class.SkPaint*)*** %15, align 8
  %17 = getelementptr inbounds void (%class.SkBaseDevice*, %class.SkRRect*, %class.SkRRect*, %class.SkPaint*)*, void (%class.SkBaseDevice*, %class.SkRRect*, %class.SkRRect*, %class.SkPaint*)** %16, i64 31
  %18 = load void (%class.SkBaseDevice*, %class.SkRRect*, %class.SkRRect*, %class.SkPaint*)*, void (%class.SkBaseDevice*, %class.SkRRect*, %class.SkRRect*, %class.SkPaint*)** %17, align 8
  call void %18(%class.SkBaseDevice* %13, %class.SkRRect* dereferenceable(52) %1, %class.SkRRect* dereferenceable(52) %2, %class.SkPaint* nonnull dereferenceable(72) %14) #15
  %19 = getelementptr inbounds %class.AutoLayerForImageFilter, %class.AutoLayerForImageFilter* %5, i64 0, i32 2
  %20 = load i8, i8* %19, align 8, !range !122
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %8
  %23 = getelementptr inbounds %class.AutoLayerForImageFilter, %class.AutoLayerForImageFilter* %5, i64 0, i32 1
  %24 = load %class.SkCanvas*, %class.SkCanvas** %23, align 8
  call void @_ZN8SkCanvas15internalRestoreEv(%class.SkCanvas* %24) #15
  br label %25

25:                                               ; preds = %8, %22
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %14) #15
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %9) #15
  br label %26

26:                                               ; preds = %4, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas10onDrawPathERK6SkPathRK7SkPaint(%class.SkCanvas*, %class.SkPath* dereferenceable(16), %class.SkPaint* dereferenceable(72)) unnamed_addr #0 align 2 {
  %4 = alloca %class.AutoLayerForImageFilter, align 8
  %5 = alloca %class.AutoLayerForImageFilter, align 8
  %6 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 0, i32 0
  %7 = load %class.SkPathRef*, %class.SkPathRef** %6, align 8
  %8 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %7, i64 0, i32 9
  %9 = load i8, i8* %8, align 8
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %3
  %12 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %7, i64 0, i32 10
  %13 = load i8, i8* %12, align 1, !range !122
  br label %23

14:                                               ; preds = %3
  %15 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %7, i64 0, i32 1
  %16 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %7, i64 0, i32 3, i32 0
  %17 = load %struct.SkPoint*, %struct.SkPoint** %16, align 8
  %18 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %7, i64 0, i32 3, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = tail call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %15, %struct.SkPoint* %17, i32 %19) #15
  %21 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %7, i64 0, i32 10
  %22 = zext i1 %20 to i8
  store i8 %22, i8* %21, align 1
  store i8 0, i8* %8, align 8
  br label %23

23:                                               ; preds = %11, %14
  %24 = phi i8 [ %13, %11 ], [ %22, %14 ]
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %110, label %26

26:                                               ; preds = %23
  %27 = load %class.SkPathRef*, %class.SkPathRef** %6, align 8
  %28 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %27, i64 0, i32 9
  %29 = load i8, i8* %28, align 8
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %40, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %27, i64 0, i32 1
  %33 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %27, i64 0, i32 3, i32 0
  %34 = load %struct.SkPoint*, %struct.SkPoint** %33, align 8
  %35 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %27, i64 0, i32 3, i32 2
  %36 = load i32, i32* %35, align 4
  %37 = tail call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %32, %struct.SkPoint* %34, i32 %36) #15
  %38 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %27, i64 0, i32 10
  %39 = zext i1 %37 to i8
  store i8 %39, i8* %38, align 1
  store i8 0, i8* %28, align 8
  br label %40

40:                                               ; preds = %26, %31
  %41 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %27, i64 0, i32 1
  %42 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 4
  %43 = load i8, i8* %42, align 2
  %44 = and i8 %43, 2
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %52

46:                                               ; preds = %40
  %47 = tail call zeroext i1 @_ZN8SkCanvas19internalQuickRejectERK6SkRectRK7SkPaintPK8SkMatrix(%class.SkCanvas* %0, %struct.SkRect* dereferenceable(16) %41, %class.SkPaint* dereferenceable(72) %2, %class.SkMatrix* null)
  br i1 %47, label %110, label %48

48:                                               ; preds = %46
  %49 = load i8, i8* %42, align 2
  %50 = and i8 %49, 2
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %92, label %52

52:                                               ; preds = %40, %48
  %53 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %27, i64 0, i32 1, i32 2
  %54 = load float, float* %53, align 4
  %55 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %41, i64 0, i32 0
  %56 = load float, float* %55, align 4
  %57 = fsub float %54, %56
  %58 = fcmp ugt float %57, 0.000000e+00
  br i1 %58, label %92, label %59

59:                                               ; preds = %52
  %60 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %27, i64 0, i32 1, i32 3
  %61 = load float, float* %60, align 4
  %62 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %27, i64 0, i32 1, i32 1
  %63 = load float, float* %62, align 4
  %64 = fsub float %61, %63
  %65 = fcmp ugt float %64, 0.000000e+00
  br i1 %65, label %92, label %66

66:                                               ; preds = %59
  %67 = tail call zeroext i1 @_ZNK7SkPaint13nothingToDrawEv(%class.SkPaint* %2) #15
  br i1 %67, label %110, label %68

68:                                               ; preds = %66
  %69 = bitcast %class.SkCanvas* %0 to i1 (%class.SkCanvas*)***
  %70 = load i1 (%class.SkCanvas*)**, i1 (%class.SkCanvas*)*** %69, align 8
  %71 = getelementptr inbounds i1 (%class.SkCanvas*)*, i1 (%class.SkCanvas*)** %70, i64 4
  %72 = load i1 (%class.SkCanvas*)*, i1 (%class.SkCanvas*)** %71, align 8
  %73 = tail call zeroext i1 %72(%class.SkCanvas* %0) #15
  br i1 %73, label %110, label %74

74:                                               ; preds = %68
  %75 = bitcast %class.AutoLayerForImageFilter* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %75) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %75, i8* align 8 bitcast (%class.AutoLayerForImageFilter* @__const._ZN8SkCanvas21onDrawEdgeAAImageSet2EPKNS_13ImageSetEntryEiPK7SkPointPK8SkMatrixRK17SkSamplingOptionsPK7SkPaintNS_17SrcRectConstraintE.layer to i8*), i64 88, i1 false) #15
  call fastcc void @_ZN23AutoLayerForImageFilterC2EP8SkCanvasRK7SkPaintPK6SkRectN12_GLOBAL__N_117CheckForOverwriteENS0_21ShaderOverrideOpacityE(%class.AutoLayerForImageFilter* nonnull %4, %class.SkCanvas* %0, %class.SkPaint* dereferenceable(72) %2, %struct.SkRect* null, i1 zeroext true, i32 0) #15
  %76 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %77 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %76, align 8
  %78 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %77, i64 0, i32 1
  %79 = load %class.SkBaseDevice*, %class.SkBaseDevice** %78, align 8
  %80 = getelementptr inbounds %class.AutoLayerForImageFilter, %class.AutoLayerForImageFilter* %4, i64 0, i32 0
  %81 = bitcast %class.SkBaseDevice* %79 to void (%class.SkBaseDevice*, %class.SkPaint*)***
  %82 = load void (%class.SkBaseDevice*, %class.SkPaint*)**, void (%class.SkBaseDevice*, %class.SkPaint*)*** %81, align 8
  %83 = getelementptr inbounds void (%class.SkBaseDevice*, %class.SkPaint*)*, void (%class.SkBaseDevice*, %class.SkPaint*)** %82, i64 24
  %84 = load void (%class.SkBaseDevice*, %class.SkPaint*)*, void (%class.SkBaseDevice*, %class.SkPaint*)** %83, align 8
  call void %84(%class.SkBaseDevice* %79, %class.SkPaint* nonnull dereferenceable(72) %80) #15
  %85 = getelementptr inbounds %class.AutoLayerForImageFilter, %class.AutoLayerForImageFilter* %4, i64 0, i32 2
  %86 = load i8, i8* %85, align 8, !range !122
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %91, label %88

88:                                               ; preds = %74
  %89 = getelementptr inbounds %class.AutoLayerForImageFilter, %class.AutoLayerForImageFilter* %4, i64 0, i32 1
  %90 = load %class.SkCanvas*, %class.SkCanvas** %89, align 8
  call void @_ZN8SkCanvas15internalRestoreEv(%class.SkCanvas* %90) #15
  br label %91

91:                                               ; preds = %88, %74
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %80) #15
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %75) #15
  br label %110

92:                                               ; preds = %48, %59, %52
  %93 = bitcast %class.AutoLayerForImageFilter* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %93) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %93, i8* align 8 bitcast (%class.AutoLayerForImageFilter* @__const._ZN8SkCanvas21onDrawEdgeAAImageSet2EPKNS_13ImageSetEntryEiPK7SkPointPK8SkMatrixRK17SkSamplingOptionsPK7SkPaintNS_17SrcRectConstraintE.layer to i8*), i64 88, i1 false)
  call fastcc void @_ZN23AutoLayerForImageFilterC2EP8SkCanvasRK7SkPaintPK6SkRectN12_GLOBAL__N_117CheckForOverwriteENS0_21ShaderOverrideOpacityE(%class.AutoLayerForImageFilter* nonnull %5, %class.SkCanvas* %0, %class.SkPaint* dereferenceable(72) %2, %struct.SkRect* %41, i1 zeroext false, i32 0)
  %94 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %95 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %94, align 8
  %96 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %95, i64 0, i32 1
  %97 = load %class.SkBaseDevice*, %class.SkBaseDevice** %96, align 8
  %98 = getelementptr inbounds %class.AutoLayerForImageFilter, %class.AutoLayerForImageFilter* %5, i64 0, i32 0
  %99 = bitcast %class.SkBaseDevice* %97 to void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)***
  %100 = load void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)**, void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)*** %99, align 8
  %101 = getelementptr inbounds void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)*, void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)** %100, i64 32
  %102 = load void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)*, void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)** %101, align 8
  call void %102(%class.SkBaseDevice* %97, %class.SkPath* dereferenceable(16) %1, %class.SkPaint* nonnull dereferenceable(72) %98, i1 zeroext false) #15
  %103 = getelementptr inbounds %class.AutoLayerForImageFilter, %class.AutoLayerForImageFilter* %5, i64 0, i32 2
  %104 = load i8, i8* %103, align 8, !range !122
  %105 = icmp eq i8 %104, 0
  br i1 %105, label %109, label %106

106:                                              ; preds = %92
  %107 = getelementptr inbounds %class.AutoLayerForImageFilter, %class.AutoLayerForImageFilter* %5, i64 0, i32 1
  %108 = load %class.SkCanvas*, %class.SkCanvas** %107, align 8
  call void @_ZN8SkCanvas15internalRestoreEv(%class.SkCanvas* %108) #15
  br label %109

109:                                              ; preds = %92, %106
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %98) #15
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %93) #15
  br label %110

110:                                              ; preds = %23, %91, %68, %66, %109, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8SkCanvas21canDrawBitmapAsSpriteEffiiRK17SkSamplingOptionsRK7SkPaint(%class.SkCanvas* nocapture readonly, float, float, i32, i32, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %8 = alloca %class.SkMatrix, align 4
  %9 = alloca i64, align 8
  %10 = alloca %struct.SkPoint, align 4
  %11 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %6, i64 0, i32 4, i32 0
  %12 = load %class.SkImageFilter*, %class.SkImageFilter** %11, align 8
  %13 = icmp eq %class.SkImageFilter* %12, null
  br i1 %13, label %173, label %14

14:                                               ; preds = %7
  %15 = bitcast i64* %9 to %struct.SkISize*
  %16 = bitcast %class.SkMatrix* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #15
  %17 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %18 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %17, align 8, !noalias !123
  %19 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %18, i64 0, i32 3
  %20 = bitcast %class.SkM44* %19 to i32*
  %21 = load i32, i32* %20, align 4, !noalias !126
  %22 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %18, i64 0, i32 3, i32 0, i64 4
  %23 = bitcast float* %22 to i32*
  %24 = load i32, i32* %23, align 4, !noalias !126
  %25 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %18, i64 0, i32 3, i32 0, i64 12
  %26 = bitcast float* %25 to i32*
  %27 = load i32, i32* %26, align 4, !noalias !126
  %28 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %18, i64 0, i32 3, i32 0, i64 1
  %29 = bitcast float* %28 to i32*
  %30 = load i32, i32* %29, align 4, !noalias !126
  %31 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %18, i64 0, i32 3, i32 0, i64 5
  %32 = bitcast float* %31 to i32*
  %33 = load i32, i32* %32, align 4, !noalias !126
  %34 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %18, i64 0, i32 3, i32 0, i64 13
  %35 = bitcast float* %34 to i32*
  %36 = load i32, i32* %35, align 4, !noalias !126
  %37 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %18, i64 0, i32 3, i32 0, i64 3
  %38 = bitcast float* %37 to i32*
  %39 = load i32, i32* %38, align 4, !noalias !126
  %40 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %18, i64 0, i32 3, i32 0, i64 7
  %41 = bitcast float* %40 to i32*
  %42 = load i32, i32* %41, align 4, !noalias !126
  %43 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %18, i64 0, i32 3, i32 0, i64 15
  %44 = bitcast float* %43 to i32*
  %45 = load i32, i32* %44, align 4, !noalias !126
  %46 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 1
  %47 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 0, i64 1
  %48 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 0, i64 2
  %49 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 0, i64 3
  %50 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 0, i64 4
  %51 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 0, i64 5
  %52 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 0, i64 6
  %53 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 0, i64 7
  %54 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 0, i64 8
  %55 = bitcast %class.SkMatrix* %8 to i32*
  store i32 %21, i32* %55, align 4, !alias.scope !129
  %56 = bitcast float* %47 to i32*
  store i32 %24, i32* %56, align 4, !alias.scope !129
  %57 = bitcast float* %48 to i32*
  store i32 %27, i32* %57, align 4, !alias.scope !129
  %58 = bitcast float* %49 to i32*
  store i32 %30, i32* %58, align 4, !alias.scope !129
  %59 = bitcast float* %50 to i32*
  store i32 %33, i32* %59, align 4, !alias.scope !129
  %60 = bitcast float* %51 to i32*
  store i32 %36, i32* %60, align 4, !alias.scope !129
  %61 = bitcast float* %52 to i32*
  store i32 %39, i32* %61, align 4, !alias.scope !129
  %62 = bitcast float* %53 to i32*
  store i32 %42, i32* %62, align 4, !alias.scope !129
  %63 = bitcast float* %54 to i32*
  store i32 %45, i32* %63, align 4, !alias.scope !129
  store i32 128, i32* %46, align 4, !alias.scope !129
  %64 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #15
  %65 = zext i32 %4 to i64
  %66 = shl nuw i64 %65, 32
  %67 = zext i32 %3 to i64
  %68 = or i64 %66, %67
  store i64 %68, i64* %9, align 8
  %69 = call zeroext i1 @_Z15SkTreatAsSpriteRK8SkMatrixRK7SkISizeRK17SkSamplingOptionsRK7SkPaint(%class.SkMatrix* nonnull dereferenceable(40) %8, %struct.SkISize* nonnull dereferenceable(8) %15, %struct.SkSamplingOptions* dereferenceable(20) %5, %class.SkPaint* dereferenceable(72) %6) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #15
  br i1 %69, label %70, label %171

70:                                               ; preds = %14
  %71 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %6, i64 0, i32 5, i32 3
  %72 = load float, float* %71, align 4
  %73 = fcmp olt float %72, 1.000000e+00
  br i1 %73, label %171, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %6, i64 0, i32 3, i32 0
  %76 = load %class.SkColorFilter*, %class.SkColorFilter** %75, align 8
  %77 = icmp eq %class.SkColorFilter* %76, null
  br i1 %77, label %78, label %171

78:                                               ; preds = %74
  %79 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %6, i64 0, i32 2, i32 0
  %80 = load %class.SkMaskFilter*, %class.SkMaskFilter** %79, align 8
  %81 = icmp eq %class.SkMaskFilter* %80, null
  br i1 %81, label %82, label %171

82:                                               ; preds = %78
  %83 = bitcast %struct.SkPoint* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #15
  %84 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %10, i64 0, i32 0
  store float 0xFFFFFFFFE0000000, float* %84, align 4
  %85 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %10, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %85, align 4
  call void @_ZNK8SkMatrix5mapXYEffP7SkPoint(%class.SkMatrix* nonnull %8, float %1, float %2, %struct.SkPoint* nonnull %10) #15
  %86 = load float, float* %84, align 4
  %87 = fadd float %86, 5.000000e-01
  %88 = call float @llvm.floor.f32(float %87)
  %89 = fcmp olt float %88, 0x41DFFFFFE0000000
  %90 = select i1 %89, float %88, float 0x41DFFFFFE0000000
  %91 = fcmp ogt float %90, 0xC1DFFFFFE0000000
  %92 = select i1 %91, float %90, float 0xC1DFFFFFE0000000
  %93 = fptosi float %92 to i32
  %94 = load float, float* %85, align 4
  %95 = fadd float %94, 5.000000e-01
  %96 = call float @llvm.floor.f32(float %95)
  %97 = fcmp olt float %96, 0x41DFFFFFE0000000
  %98 = select i1 %97, float %96, float 0x41DFFFFFE0000000
  %99 = fcmp ogt float %98, 0xC1DFFFFFE0000000
  %100 = select i1 %99, float %98, float 0xC1DFFFFFE0000000
  %101 = fptosi float %100 to i32
  %102 = sext i32 %93 to i64
  %103 = sext i32 %3 to i64
  %104 = add nsw i64 %102, %103
  %105 = icmp slt i64 %104, 2147483647
  %106 = select i1 %105, i64 %104, i64 2147483647
  %107 = icmp sgt i64 %106, -2147483647
  %108 = select i1 %107, i64 %106, i64 -2147483647
  %109 = sext i32 %101 to i64
  %110 = sext i32 %4 to i64
  %111 = add nsw i64 %109, %110
  %112 = icmp slt i64 %111, 2147483647
  %113 = select i1 %112, i64 %111, i64 2147483647
  %114 = icmp sgt i64 %113, -2147483647
  %115 = select i1 %114, i64 %113, i64 -2147483647
  %116 = icmp sgt i32 %93, -2147483646
  %117 = select i1 %116, i32 %93, i32 -2147483646
  %118 = add nsw i32 %117, -1
  %119 = icmp sgt i32 %101, -2147483646
  %120 = select i1 %119, i32 %101, i32 -2147483646
  %121 = add nsw i32 %120, -1
  %122 = icmp slt i64 %108, 2147483646
  %123 = select i1 %122, i64 %108, i64 2147483646
  %124 = add nsw i64 %123, 1
  %125 = icmp slt i64 %115, 2147483646
  %126 = select i1 %125, i64 %115, i64 2147483646
  %127 = add nsw i64 %126, 1
  %128 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 11, i32 0
  %129 = load float, float* %128, align 4
  %130 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 11, i32 2
  %131 = load float, float* %130, align 4
  %132 = fcmp olt float %129, %131
  br i1 %132, label %133, label %169

133:                                              ; preds = %82
  %134 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 11, i32 1
  %135 = load float, float* %134, align 4
  %136 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 11, i32 3
  %137 = load float, float* %136, align 4
  %138 = fcmp uge float %135, %137
  br i1 %138, label %169, label %139

139:                                              ; preds = %133
  %140 = trunc i64 %124 to i32
  %141 = shl i64 %124, 32
  %142 = ashr exact i64 %141, 32
  %143 = sext i32 %118 to i64
  %144 = sub nsw i64 %142, %143
  %145 = trunc i64 %127 to i32
  %146 = shl i64 %127, 32
  %147 = ashr exact i64 %146, 32
  %148 = sext i32 %121 to i64
  %149 = sub nsw i64 %147, %148
  %150 = icmp slt i64 %144, 1
  %151 = icmp slt i64 %149, 1
  %152 = or i1 %150, %151
  br i1 %152, label %169, label %153

153:                                              ; preds = %139
  %154 = or i64 %149, %144
  %155 = add nsw i64 %154, 2147483648
  %156 = icmp ugt i64 %155, 4294967295
  %157 = sitofp i32 %118 to float
  %158 = fcmp ult float %129, %157
  %159 = or i1 %158, %156
  br i1 %159, label %169, label %160

160:                                              ; preds = %153
  %161 = sitofp i32 %121 to float
  %162 = fcmp ult float %135, %161
  %163 = sitofp i32 %140 to float
  %164 = fcmp ugt float %131, %163
  %165 = or i1 %164, %162
  br i1 %165, label %169, label %166

166:                                              ; preds = %160
  %167 = sitofp i32 %145 to float
  %168 = fcmp ole float %137, %167
  br label %169

169:                                              ; preds = %82, %133, %139, %153, %160, %166
  %170 = phi i1 [ false, %160 ], [ false, %153 ], [ false, %133 ], [ %168, %166 ], [ false, %82 ], [ false, %139 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83) #15
  br label %171

171:                                              ; preds = %70, %74, %78, %14, %169
  %172 = phi i1 [ %170, %169 ], [ false, %14 ], [ false, %78 ], [ false, %74 ], [ false, %70 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #15
  br label %173

173:                                              ; preds = %7, %171
  %174 = phi i1 [ %172, %171 ], [ false, %7 ]
  ret i1 %174
}

declare zeroext i1 @_Z15SkTreatAsSpriteRK8SkMatrixRK7SkISizeRK17SkSamplingOptionsRK7SkPaint(%class.SkMatrix* dereferenceable(40), %struct.SkISize* dereferenceable(8), %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint* dereferenceable(72)) local_unnamed_addr #4

declare void @_ZNK8SkMatrix5mapXYEffP7SkPoint(%class.SkMatrix*, float, float, %struct.SkPoint*) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #10

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas12onDrawImage2EPK7SkImageffRK17SkSamplingOptionsPK7SkPaint(%class.SkCanvas*, %class.SkImage*, float, float, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint*) unnamed_addr #0 align 2 {
  %7 = alloca %class.sk_sp.54, align 8
  %8 = alloca %class.SkPaint, align 8
  %9 = alloca { <2 x float>, <2 x float> }, align 8
  %10 = bitcast { <2 x float>, <2 x float> }* %9 to %struct.SkRect*
  %11 = alloca %class.sk_sp.74, align 8
  %12 = alloca %class.sk_sp.58, align 8
  %13 = alloca %class.sk_sp.58, align 8
  %14 = alloca %class.SkMatrix, align 4
  %15 = alloca %"class.skif::Mapping", align 4
  %16 = alloca %class.SkMatrix, align 16
  %17 = alloca %class.AutoLayerForImageFilter, align 8
  %18 = bitcast %class.SkPaint* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %18) #15
  %19 = bitcast %class.sk_sp.54* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %18, i8* align 8 bitcast (%class.SkPaint* @__const._ZL25clean_paint_for_drawImagePK7SkPaint.cleaned to i8*), i64 72, i1 false) #15
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %8) #15
  %20 = icmp eq %class.SkPaint* %5, null
  br i1 %20, label %36, label %21

21:                                               ; preds = %6
  %22 = call dereferenceable(72) %class.SkPaint* @_ZN7SkPaintaSERKS_(%class.SkPaint* nonnull %8, %class.SkPaint* nonnull dereferenceable(72) %5) #15
  call void @_ZN7SkPaint8setStyleENS_5StyleE(%class.SkPaint* nonnull %8, i8 zeroext 0) #15
  %23 = getelementptr inbounds %class.sk_sp.54, %class.sk_sp.54* %7, i64 0, i32 0
  store %class.SkPathEffect* null, %class.SkPathEffect** %23, align 8, !noalias !132
  call void @_ZN7SkPaint13setPathEffectE5sk_spI12SkPathEffectE(%class.SkPaint* nonnull %8, %class.sk_sp.54* nonnull %7) #15
  %24 = load %class.SkPathEffect*, %class.SkPathEffect** %23, align 8, !noalias !132
  %25 = icmp eq %class.SkPathEffect* %24, null
  br i1 %25, label %36, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %24, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = atomicrmw add i32* %27, i32 -1 acq_rel
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %30, label %36

30:                                               ; preds = %26
  %31 = bitcast %class.SkPathEffect* %24 to %class.SkRefCntBase*
  %32 = bitcast %class.SkPathEffect* %24 to void (%class.SkRefCntBase*)***
  %33 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %32, align 8
  %34 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %33, i64 2
  %35 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %34, align 8
  call void %35(%class.SkRefCntBase* nonnull %31) #15
  br label %36

36:                                               ; preds = %6, %21, %26, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  %37 = bitcast { <2 x float>, <2 x float> }* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #15
  %38 = getelementptr inbounds %class.SkImage, %class.SkImage* %1, i64 0, i32 2, i32 1, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = sitofp i32 %39 to float
  %41 = getelementptr inbounds %class.SkImage, %class.SkImage* %1, i64 0, i32 2, i32 1, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = sitofp i32 %42 to float
  %44 = insertelement <2 x float> undef, float %2, i32 0
  %45 = insertelement <2 x float> %44, float %3, i32 1
  %46 = fadd float %40, %2
  %47 = insertelement <2 x float> undef, float %46, i32 0
  %48 = fadd float %43, %3
  %49 = insertelement <2 x float> %47, float %48, i32 1
  %50 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 0
  store <2 x float> %45, <2 x float>* %50, align 8
  %51 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 1
  store <2 x float> %49, <2 x float>* %51, align 8
  %52 = call zeroext i1 @_ZN8SkCanvas19internalQuickRejectERK6SkRectRK7SkPaintPK8SkMatrix(%class.SkCanvas* %0, %struct.SkRect* nonnull dereferenceable(16) %10, %class.SkPaint* nonnull dereferenceable(72) %8, %class.SkMatrix* null)
  br i1 %52, label %159, label %53

53:                                               ; preds = %36
  %54 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %8, i64 0, i32 4, i32 0
  %55 = load %class.SkImageFilter*, %class.SkImageFilter** %54, align 8
  %56 = icmp eq %class.SkImageFilter* %55, null
  br i1 %56, label %141, label %57

57:                                               ; preds = %53
  %58 = load i32, i32* %38, align 4
  %59 = load i32, i32* %41, align 4
  %60 = call zeroext i1 @_ZN8SkCanvas21canDrawBitmapAsSpriteEffiiRK17SkSamplingOptionsRK7SkPaint(%class.SkCanvas* %0, float %2, float %3, i32 %58, i32 %59, %struct.SkSamplingOptions* dereferenceable(20) %4, %class.SkPaint* nonnull dereferenceable(72) %8)
  br i1 %60, label %61, label %141

61:                                               ; preds = %57
  %62 = call fastcc zeroext i1 @_ZL21image_to_color_filterP7SkPaint(%class.SkPaint* nonnull %8)
  br i1 %62, label %141, label %63

63:                                               ; preds = %61
  %64 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %65 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %64, align 8
  %66 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %65, i64 0, i32 1
  %67 = load %class.SkBaseDevice*, %class.SkBaseDevice** %66, align 8
  %68 = bitcast %class.sk_sp.74* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #15
  %69 = bitcast %class.SkBaseDevice* %67 to void (%class.sk_sp.74*, %class.SkBaseDevice*, %class.SkImage*)***
  %70 = load void (%class.sk_sp.74*, %class.SkBaseDevice*, %class.SkImage*)**, void (%class.sk_sp.74*, %class.SkBaseDevice*, %class.SkImage*)*** %69, align 8
  %71 = getelementptr inbounds void (%class.sk_sp.74*, %class.SkBaseDevice*, %class.SkImage*)*, void (%class.sk_sp.74*, %class.SkBaseDevice*, %class.SkImage*)** %70, i64 48
  %72 = load void (%class.sk_sp.74*, %class.SkBaseDevice*, %class.SkImage*)*, void (%class.sk_sp.74*, %class.SkBaseDevice*, %class.SkImage*)** %71, align 8
  call void %72(%class.sk_sp.74* nonnull sret %11, %class.SkBaseDevice* %67, %class.SkImage* %1) #15
  %73 = getelementptr inbounds %class.sk_sp.74, %class.sk_sp.74* %11, i64 0, i32 0
  %74 = load %class.SkSpecialImage*, %class.SkSpecialImage** %73, align 8
  %75 = icmp eq %class.SkSpecialImage* %74, null
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #15
  br i1 %75, label %141, label %76

76:                                               ; preds = %63
  %77 = bitcast %class.sk_sp.58* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #15
  %78 = getelementptr inbounds %class.sk_sp.58, %class.sk_sp.58* %12, i64 0, i32 0
  store %class.SkImageFilter* inttoptr (i64 -6148914691236517206 to %class.SkImageFilter*), %class.SkImageFilter** %78, align 8
  call void @_ZNK7SkPaint14refImageFilterEv(%class.sk_sp.58* nonnull sret %12, %class.SkPaint* nonnull %8) #15
  %79 = getelementptr inbounds %class.sk_sp.58, %class.sk_sp.58* %13, i64 0, i32 0
  store %class.SkImageFilter* null, %class.SkImageFilter** %79, align 8
  call void @_ZN7SkPaint14setImageFilterE5sk_spI13SkImageFilterE(%class.SkPaint* nonnull %8, %class.sk_sp.58* nonnull %13) #15
  %80 = load %class.SkImageFilter*, %class.SkImageFilter** %79, align 8
  %81 = icmp eq %class.SkImageFilter* %80, null
  br i1 %81, label %92, label %82

82:                                               ; preds = %76
  %83 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %80, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = atomicrmw add i32* %83, i32 -1 acq_rel
  %85 = icmp eq i32 %84, 1
  br i1 %85, label %86, label %92

86:                                               ; preds = %82
  %87 = bitcast %class.SkImageFilter* %80 to %class.SkRefCntBase*
  %88 = bitcast %class.SkImageFilter* %80 to void (%class.SkRefCntBase*)***
  %89 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %88, align 8
  %90 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %89, i64 2
  %91 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %90, align 8
  call void %91(%class.SkRefCntBase* nonnull %87) #15
  br label %92

92:                                               ; preds = %76, %82, %86
  %93 = bitcast %class.SkMatrix* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %93) #15
  %94 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %67, i64 0, i32 1, i32 2
  %95 = bitcast %class.SkMatrix* %94 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %93, i8* align 4 %95, i64 40, i1 false)
  %96 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12preTranslateEff(%class.SkMatrix* nonnull %14, float %2, float %3) #15
  %97 = bitcast %"class.skif::Mapping"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %97) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %97, i8* align 4 bitcast (%"class.skif::Mapping"* @__const._ZN8SkCanvas12onDrawImage2EPK7SkImageffRK17SkSamplingOptionsPK7SkPaint.mapping to i8*), i64 80, i1 false)
  %98 = bitcast %class.SkMatrix* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %98) #15
  %99 = fsub float -0.000000e+00, %2
  %100 = fsub float -0.000000e+00, %3
  %101 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %16, i64 0, i32 1
  %102 = bitcast %class.SkMatrix* %16 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %102, align 16, !alias.scope !135
  %103 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %16, i64 0, i32 0, i64 4
  %104 = bitcast float* %103 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %104, align 16, !alias.scope !135
  %105 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %16, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %105, align 16, !alias.scope !135
  store i32 16, i32* %101, align 4, !alias.scope !135
  %106 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12setTranslateEff(%class.SkMatrix* nonnull %16, float %99, float %100) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %97, i8* nonnull align 4 %93, i64 40, i1 false) #15
  %107 = getelementptr inbounds %"class.skif::Mapping", %"class.skif::Mapping"* %15, i64 0, i32 1
  %108 = bitcast %class.SkMatrix* %107 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %108, i8* nonnull align 16 %98, i64 40, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %98) #15
  %109 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 9
  %110 = load %class.SkSurface_Base*, %class.SkSurface_Base** %109, align 8
  %111 = icmp eq %class.SkSurface_Base* %110, null
  br i1 %111, label %113, label %112

112:                                              ; preds = %92
  call void @_ZN14SkSurface_Base11aboutToDrawEN9SkSurface17ContentChangeModeE(%class.SkSurface_Base* nonnull %110, i32 1) #15
  br label %113

113:                                              ; preds = %92, %112
  %114 = load %class.SkImageFilter*, %class.SkImageFilter** %78, align 8
  %115 = bitcast %class.SkBaseDevice* %67 to void (%class.SkBaseDevice*, %"class.skif::Mapping"*, %class.SkSpecialImage*, %class.SkImageFilter*, %struct.SkSamplingOptions*, %class.SkPaint*)***
  %116 = load void (%class.SkBaseDevice*, %"class.skif::Mapping"*, %class.SkSpecialImage*, %class.SkImageFilter*, %struct.SkSamplingOptions*, %class.SkPaint*)**, void (%class.SkBaseDevice*, %"class.skif::Mapping"*, %class.SkSpecialImage*, %class.SkImageFilter*, %struct.SkSamplingOptions*, %class.SkPaint*)*** %115, align 8
  %117 = getelementptr inbounds void (%class.SkBaseDevice*, %"class.skif::Mapping"*, %class.SkSpecialImage*, %class.SkImageFilter*, %struct.SkSamplingOptions*, %class.SkPaint*)*, void (%class.SkBaseDevice*, %"class.skif::Mapping"*, %class.SkSpecialImage*, %class.SkImageFilter*, %struct.SkSamplingOptions*, %class.SkPaint*)** %116, i64 46
  %118 = load void (%class.SkBaseDevice*, %"class.skif::Mapping"*, %class.SkSpecialImage*, %class.SkImageFilter*, %struct.SkSamplingOptions*, %class.SkPaint*)*, void (%class.SkBaseDevice*, %"class.skif::Mapping"*, %class.SkSpecialImage*, %class.SkImageFilter*, %struct.SkSamplingOptions*, %class.SkPaint*)** %117, align 8
  call void %118(%class.SkBaseDevice* %67, %"class.skif::Mapping"* nonnull dereferenceable(80) %15, %class.SkSpecialImage* nonnull %74, %class.SkImageFilter* %114, %struct.SkSamplingOptions* dereferenceable(20) %4, %class.SkPaint* nonnull dereferenceable(72) %8) #15
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %97) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %93) #15
  %119 = load %class.SkImageFilter*, %class.SkImageFilter** %78, align 8
  %120 = icmp eq %class.SkImageFilter* %119, null
  br i1 %120, label %131, label %121

121:                                              ; preds = %113
  %122 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %119, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = atomicrmw add i32* %122, i32 -1 acq_rel
  %124 = icmp eq i32 %123, 1
  br i1 %124, label %125, label %131

125:                                              ; preds = %121
  %126 = bitcast %class.SkImageFilter* %119 to %class.SkRefCntBase*
  %127 = bitcast %class.SkImageFilter* %119 to void (%class.SkRefCntBase*)***
  %128 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %127, align 8
  %129 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %128, i64 2
  %130 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %129, align 8
  call void %130(%class.SkRefCntBase* nonnull %126) #15
  br label %131

131:                                              ; preds = %125, %121, %113
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #15
  %132 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %74, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = atomicrmw add i32* %132, i32 -1 acq_rel
  %134 = icmp eq i32 %133, 1
  br i1 %134, label %135, label %159

135:                                              ; preds = %131
  %136 = bitcast %class.SkSpecialImage* %74 to %class.SkRefCntBase*
  %137 = bitcast %class.SkSpecialImage* %74 to void (%class.SkRefCntBase*)***
  %138 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %137, align 8
  %139 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %138, i64 2
  %140 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %139, align 8
  call void %140(%class.SkRefCntBase* nonnull %136) #15
  br label %159

141:                                              ; preds = %63, %53, %61, %57
  %142 = bitcast %class.AutoLayerForImageFilter* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %142) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %142, i8* align 8 bitcast (%class.AutoLayerForImageFilter* @__const._ZN8SkCanvas21onDrawEdgeAAImageSet2EPKNS_13ImageSetEntryEiPK7SkPointPK8SkMatrixRK17SkSamplingOptionsPK7SkPaintNS_17SrcRectConstraintE.layer to i8*), i64 88, i1 false)
  call fastcc void @_ZN23AutoLayerForImageFilterC2EP8SkCanvasRK7SkPaintPK6SkRectN12_GLOBAL__N_117CheckForOverwriteENS0_21ShaderOverrideOpacityE(%class.AutoLayerForImageFilter* nonnull %17, %class.SkCanvas* %0, %class.SkPaint* nonnull dereferenceable(72) %8, %struct.SkRect* nonnull %10, i1 zeroext false, i32 0)
  %143 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %144 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %143, align 8
  %145 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %144, i64 0, i32 1
  %146 = load %class.SkBaseDevice*, %class.SkBaseDevice** %145, align 8
  %147 = getelementptr inbounds %class.AutoLayerForImageFilter, %class.AutoLayerForImageFilter* %17, i64 0, i32 0
  %148 = bitcast %class.SkBaseDevice* %146 to void (%class.SkBaseDevice*, %class.SkImage*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)***
  %149 = load void (%class.SkBaseDevice*, %class.SkImage*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)**, void (%class.SkBaseDevice*, %class.SkImage*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)*** %148, align 8
  %150 = getelementptr inbounds void (%class.SkBaseDevice*, %class.SkImage*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)*, void (%class.SkBaseDevice*, %class.SkImage*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)** %149, i64 33
  %151 = load void (%class.SkBaseDevice*, %class.SkImage*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)*, void (%class.SkBaseDevice*, %class.SkImage*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)** %150, align 8
  call void %151(%class.SkBaseDevice* %146, %class.SkImage* %1, %struct.SkRect* null, %struct.SkRect* nonnull dereferenceable(16) %10, %struct.SkSamplingOptions* dereferenceable(20) %4, %class.SkPaint* nonnull dereferenceable(72) %147, i32 0) #15
  %152 = getelementptr inbounds %class.AutoLayerForImageFilter, %class.AutoLayerForImageFilter* %17, i64 0, i32 2
  %153 = load i8, i8* %152, align 8, !range !122
  %154 = icmp eq i8 %153, 0
  br i1 %154, label %158, label %155

155:                                              ; preds = %141
  %156 = getelementptr inbounds %class.AutoLayerForImageFilter, %class.AutoLayerForImageFilter* %17, i64 0, i32 1
  %157 = load %class.SkCanvas*, %class.SkCanvas** %156, align 8
  call void @_ZN8SkCanvas15internalRestoreEv(%class.SkCanvas* %157) #15
  br label %158

158:                                              ; preds = %141, %155
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %147) #15
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %142) #15
  br label %159

159:                                              ; preds = %135, %131, %36, %158
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #15
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %8) #15
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %18) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas16onDrawImageRect2EPK7SkImageRK6SkRectS5_RK17SkSamplingOptionsPK7SkPaintNS_17SrcRectConstraintE(%class.SkCanvas*, %class.SkImage*, %struct.SkRect* dereferenceable(16), %struct.SkRect* dereferenceable(16), %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint*, i32) unnamed_addr #0 align 2 {
  %8 = alloca %class.sk_sp.54, align 8
  %9 = alloca %class.SkPaint, align 8
  %10 = alloca %class.AutoLayerForImageFilter, align 8
  %11 = bitcast %class.SkPaint* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %11) #15
  %12 = bitcast %class.sk_sp.54* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 8 bitcast (%class.SkPaint* @__const._ZL25clean_paint_for_drawImagePK7SkPaint.cleaned to i8*), i64 72, i1 false) #15
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %9) #15
  %13 = icmp eq %class.SkPaint* %5, null
  br i1 %13, label %29, label %14

14:                                               ; preds = %7
  %15 = call dereferenceable(72) %class.SkPaint* @_ZN7SkPaintaSERKS_(%class.SkPaint* nonnull %9, %class.SkPaint* nonnull dereferenceable(72) %5) #15
  call void @_ZN7SkPaint8setStyleENS_5StyleE(%class.SkPaint* nonnull %9, i8 zeroext 0) #15
  %16 = getelementptr inbounds %class.sk_sp.54, %class.sk_sp.54* %8, i64 0, i32 0
  store %class.SkPathEffect* null, %class.SkPathEffect** %16, align 8, !noalias !138
  call void @_ZN7SkPaint13setPathEffectE5sk_spI12SkPathEffectE(%class.SkPaint* nonnull %9, %class.sk_sp.54* nonnull %8) #15
  %17 = load %class.SkPathEffect*, %class.SkPathEffect** %16, align 8, !noalias !138
  %18 = icmp eq %class.SkPathEffect* %17, null
  br i1 %18, label %29, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %17, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw add i32* %20, i32 -1 acq_rel
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %29

23:                                               ; preds = %19
  %24 = bitcast %class.SkPathEffect* %17 to %class.SkRefCntBase*
  %25 = bitcast %class.SkPathEffect* %17 to void (%class.SkRefCntBase*)***
  %26 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %25, align 8
  %27 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %26, i64 2
  %28 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, align 8
  call void %28(%class.SkRefCntBase* nonnull %24) #15
  br label %29

29:                                               ; preds = %7, %14, %19, %23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12)
  %30 = call zeroext i1 @_ZN8SkCanvas19internalQuickRejectERK6SkRectRK7SkPaintPK8SkMatrix(%class.SkCanvas* %0, %struct.SkRect* dereferenceable(16) %3, %class.SkPaint* nonnull dereferenceable(72) %9, %class.SkMatrix* null)
  br i1 %30, label %52, label %31

31:                                               ; preds = %29
  %32 = bitcast %class.AutoLayerForImageFilter* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %32) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* align 8 bitcast (%class.AutoLayerForImageFilter* @__const._ZN8SkCanvas21onDrawEdgeAAImageSet2EPKNS_13ImageSetEntryEiPK7SkPointPK8SkMatrixRK17SkSamplingOptionsPK7SkPaintNS_17SrcRectConstraintE.layer to i8*), i64 88, i1 false)
  %33 = call i32 @_ZNK7SkImage9alphaTypeEv(%class.SkImage* %1) #15
  %34 = icmp eq i32 %33, 1
  %35 = select i1 %34, i32 1, i32 2
  call fastcc void @_ZN23AutoLayerForImageFilterC2EP8SkCanvasRK7SkPaintPK6SkRectN12_GLOBAL__N_117CheckForOverwriteENS0_21ShaderOverrideOpacityE(%class.AutoLayerForImageFilter* nonnull %10, %class.SkCanvas* %0, %class.SkPaint* nonnull dereferenceable(72) %9, %struct.SkRect* %3, i1 zeroext true, i32 %35)
  %36 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %37 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %36, align 8
  %38 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %37, i64 0, i32 1
  %39 = load %class.SkBaseDevice*, %class.SkBaseDevice** %38, align 8
  %40 = getelementptr inbounds %class.AutoLayerForImageFilter, %class.AutoLayerForImageFilter* %10, i64 0, i32 0
  %41 = bitcast %class.SkBaseDevice* %39 to void (%class.SkBaseDevice*, %class.SkImage*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)***
  %42 = load void (%class.SkBaseDevice*, %class.SkImage*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)**, void (%class.SkBaseDevice*, %class.SkImage*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)*** %41, align 8
  %43 = getelementptr inbounds void (%class.SkBaseDevice*, %class.SkImage*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)*, void (%class.SkBaseDevice*, %class.SkImage*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)** %42, i64 33
  %44 = load void (%class.SkBaseDevice*, %class.SkImage*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)*, void (%class.SkBaseDevice*, %class.SkImage*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)** %43, align 8
  call void %44(%class.SkBaseDevice* %39, %class.SkImage* %1, %struct.SkRect* %2, %struct.SkRect* dereferenceable(16) %3, %struct.SkSamplingOptions* dereferenceable(20) %4, %class.SkPaint* nonnull dereferenceable(72) %40, i32 %6) #15
  %45 = getelementptr inbounds %class.AutoLayerForImageFilter, %class.AutoLayerForImageFilter* %10, i64 0, i32 2
  %46 = load i8, i8* %45, align 8, !range !122
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %51, label %48

48:                                               ; preds = %31
  %49 = getelementptr inbounds %class.AutoLayerForImageFilter, %class.AutoLayerForImageFilter* %10, i64 0, i32 1
  %50 = load %class.SkCanvas*, %class.SkCanvas** %49, align 8
  call void @_ZN8SkCanvas15internalRestoreEv(%class.SkCanvas* %50) #15
  br label %51

51:                                               ; preds = %31, %48
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %40) #15
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %32) #15
  br label %52

52:                                               ; preds = %29, %51
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %9) #15
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %11) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas19onDrawImageLattice2EPK7SkImageRKNS_7LatticeERK6SkRect12SkFilterModePK7SkPaint(%class.SkCanvas*, %class.SkImage*, %"struct.SkCanvas::Lattice"* dereferenceable(48), %struct.SkRect* dereferenceable(16), i32, %class.SkPaint*) unnamed_addr #0 align 2 {
  %7 = alloca %class.sk_sp.54, align 8
  %8 = alloca %class.SkPaint, align 8
  %9 = alloca %class.AutoLayerForImageFilter, align 8
  %10 = bitcast %class.SkPaint* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %10) #15
  %11 = bitcast %class.sk_sp.54* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 8 bitcast (%class.SkPaint* @__const._ZL25clean_paint_for_drawImagePK7SkPaint.cleaned to i8*), i64 72, i1 false) #15
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %8) #15
  %12 = icmp eq %class.SkPaint* %5, null
  br i1 %12, label %28, label %13

13:                                               ; preds = %6
  %14 = call dereferenceable(72) %class.SkPaint* @_ZN7SkPaintaSERKS_(%class.SkPaint* nonnull %8, %class.SkPaint* nonnull dereferenceable(72) %5) #15
  call void @_ZN7SkPaint8setStyleENS_5StyleE(%class.SkPaint* nonnull %8, i8 zeroext 0) #15
  %15 = getelementptr inbounds %class.sk_sp.54, %class.sk_sp.54* %7, i64 0, i32 0
  store %class.SkPathEffect* null, %class.SkPathEffect** %15, align 8, !noalias !141
  call void @_ZN7SkPaint13setPathEffectE5sk_spI12SkPathEffectE(%class.SkPaint* nonnull %8, %class.sk_sp.54* nonnull %7) #15
  %16 = load %class.SkPathEffect*, %class.SkPathEffect** %15, align 8, !noalias !141
  %17 = icmp eq %class.SkPathEffect* %16, null
  br i1 %17, label %28, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %16, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw add i32* %19, i32 -1 acq_rel
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %28

22:                                               ; preds = %18
  %23 = bitcast %class.SkPathEffect* %16 to %class.SkRefCntBase*
  %24 = bitcast %class.SkPathEffect* %16 to void (%class.SkRefCntBase*)***
  %25 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %24, align 8
  %26 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %25, i64 2
  %27 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %26, align 8
  call void %27(%class.SkRefCntBase* nonnull %23) #15
  br label %28

28:                                               ; preds = %6, %13, %18, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  %29 = call zeroext i1 @_ZN8SkCanvas19internalQuickRejectERK6SkRectRK7SkPaintPK8SkMatrix(%class.SkCanvas* %0, %struct.SkRect* dereferenceable(16) %3, %class.SkPaint* nonnull dereferenceable(72) %8, %class.SkMatrix* null)
  br i1 %29, label %48, label %30

30:                                               ; preds = %28
  %31 = bitcast %class.AutoLayerForImageFilter* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %31) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %31, i8* align 8 bitcast (%class.AutoLayerForImageFilter* @__const._ZN8SkCanvas21onDrawEdgeAAImageSet2EPKNS_13ImageSetEntryEiPK7SkPointPK8SkMatrixRK17SkSamplingOptionsPK7SkPaintNS_17SrcRectConstraintE.layer to i8*), i64 88, i1 false)
  call fastcc void @_ZN23AutoLayerForImageFilterC2EP8SkCanvasRK7SkPaintPK6SkRectN12_GLOBAL__N_117CheckForOverwriteENS0_21ShaderOverrideOpacityE(%class.AutoLayerForImageFilter* nonnull %9, %class.SkCanvas* %0, %class.SkPaint* nonnull dereferenceable(72) %8, %struct.SkRect* %3, i1 zeroext false, i32 0)
  %32 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %33 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %32, align 8
  %34 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %33, i64 0, i32 1
  %35 = load %class.SkBaseDevice*, %class.SkBaseDevice** %34, align 8
  %36 = getelementptr inbounds %class.AutoLayerForImageFilter, %class.AutoLayerForImageFilter* %9, i64 0, i32 0
  %37 = bitcast %class.SkBaseDevice* %35 to void (%class.SkBaseDevice*, %class.SkImage*, %"struct.SkCanvas::Lattice"*, %struct.SkRect*, i32, %class.SkPaint*)***
  %38 = load void (%class.SkBaseDevice*, %class.SkImage*, %"struct.SkCanvas::Lattice"*, %struct.SkRect*, i32, %class.SkPaint*)**, void (%class.SkBaseDevice*, %class.SkImage*, %"struct.SkCanvas::Lattice"*, %struct.SkRect*, i32, %class.SkPaint*)*** %37, align 8
  %39 = getelementptr inbounds void (%class.SkBaseDevice*, %class.SkImage*, %"struct.SkCanvas::Lattice"*, %struct.SkRect*, i32, %class.SkPaint*)*, void (%class.SkBaseDevice*, %class.SkImage*, %"struct.SkCanvas::Lattice"*, %struct.SkRect*, i32, %class.SkPaint*)** %38, i64 34
  %40 = load void (%class.SkBaseDevice*, %class.SkImage*, %"struct.SkCanvas::Lattice"*, %struct.SkRect*, i32, %class.SkPaint*)*, void (%class.SkBaseDevice*, %class.SkImage*, %"struct.SkCanvas::Lattice"*, %struct.SkRect*, i32, %class.SkPaint*)** %39, align 8
  call void %40(%class.SkBaseDevice* %35, %class.SkImage* %1, %"struct.SkCanvas::Lattice"* dereferenceable(48) %2, %struct.SkRect* dereferenceable(16) %3, i32 %4, %class.SkPaint* nonnull dereferenceable(72) %36) #15
  %41 = getelementptr inbounds %class.AutoLayerForImageFilter, %class.AutoLayerForImageFilter* %9, i64 0, i32 2
  %42 = load i8, i8* %41, align 8, !range !122
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %47, label %44

44:                                               ; preds = %30
  %45 = getelementptr inbounds %class.AutoLayerForImageFilter, %class.AutoLayerForImageFilter* %9, i64 0, i32 1
  %46 = load %class.SkCanvas*, %class.SkCanvas** %45, align 8
  call void @_ZN8SkCanvas15internalRestoreEv(%class.SkCanvas* %46) #15
  br label %47

47:                                               ; preds = %30, %44
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %36) #15
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %31) #15
  br label %48

48:                                               ; preds = %28, %47
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %8) #15
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %10) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas9drawImageEPK7SkImageffRK17SkSamplingOptionsPK7SkPaint(%class.SkCanvas*, %class.SkImage*, float, float, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint*) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.skia::tracing_internals::ScopedTracer", align 8
  %8 = load atomic i64, i64* @_ZZN8SkCanvas9drawImageEPK7SkImageffRK17SkSamplingOptionsPK7SkPaintE29trace_event_unique_atomic2160.0.0 monotonic, align 8
  %9 = inttoptr i64 %8 to i8*
  %10 = icmp eq i64 %8, 0
  br i1 %10, label %11, label %19

11:                                               ; preds = %6
  %12 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %13 = bitcast %class.SkEventTracer* %12 to i8* (%class.SkEventTracer*, i8*)***
  %14 = load i8* (%class.SkEventTracer*, i8*)**, i8* (%class.SkEventTracer*, i8*)*** %13, align 8
  %15 = getelementptr inbounds i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %14, i64 2
  %16 = load i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %15, align 8
  %17 = tail call i8* %16(%class.SkEventTracer* %12, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0)) #15
  %18 = ptrtoint i8* %17 to i64
  store atomic i64 %18, i64* @_ZZN8SkCanvas9drawImageEPK7SkImageffRK17SkSamplingOptionsPK7SkPaintE29trace_event_unique_atomic2160.0.0 monotonic, align 8
  br label %19

19:                                               ; preds = %6, %11
  %20 = phi i8* [ %9, %6 ], [ %17, %11 ]
  %21 = bitcast %"class.skia::tracing_internals::ScopedTracer"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %21) #15
  %22 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %7, i64 0, i32 0
  %23 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %7, i64 0, i32 1, i32 0
  %24 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %7, i64 0, i32 1, i32 1
  %25 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %7, i64 0, i32 1, i32 2
  %26 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %7, i64 0, i32 1
  %27 = bitcast %"struct.skia::tracing_internals::ScopedTracer::Data"* %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false)
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* null, %"struct.skia::tracing_internals::ScopedTracer::Data"** %22, align 8
  %28 = load i8, i8* %20, align 1
  %29 = and i8 %28, 5
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %40, label %31

31:                                               ; preds = %19
  %32 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %33 = bitcast %class.SkEventTracer* %32 to i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)***
  %34 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)**, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*** %33, align 8
  %35 = getelementptr inbounds i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %34, i64 4
  %36 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %35, align 8
  %37 = tail call i64 %36(%class.SkEventTracer* %32, i8 signext 88, i8* %20, i8* getelementptr inbounds ([106 x i8], [106 x i8]* @__PRETTY_FUNCTION__._ZN8SkCanvas9drawImageEPK7SkImageffRK17SkSamplingOptionsPK7SkPaint, i64 0, i64 0), i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #15
  %38 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %7, i64 0, i32 1
  %39 = getelementptr inbounds %"struct.skia::tracing_internals::ScopedTracer::Data", %"struct.skia::tracing_internals::ScopedTracer::Data"* %38, i64 0, i32 0
  store i8* %20, i8** %39, align 8
  store i8* getelementptr inbounds ([106 x i8], [106 x i8]* @__PRETTY_FUNCTION__._ZN8SkCanvas9drawImageEPK7SkImageffRK17SkSamplingOptionsPK7SkPaint, i64 0, i64 0), i8** %24, align 8
  store i64 %37, i64* %25, align 8
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* %38, %"struct.skia::tracing_internals::ScopedTracer::Data"** %22, align 8
  br label %40

40:                                               ; preds = %19, %31
  %41 = phi %"struct.skia::tracing_internals::ScopedTracer::Data"* [ null, %19 ], [ %38, %31 ]
  %42 = icmp eq %class.SkImage* %1, null
  br i1 %42, label %49, label %43

43:                                               ; preds = %40
  %44 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*, %class.SkImage*, float, float, %struct.SkSamplingOptions*, %class.SkPaint*)***
  %45 = load void (%class.SkCanvas*, %class.SkImage*, float, float, %struct.SkSamplingOptions*, %class.SkPaint*)**, void (%class.SkCanvas*, %class.SkImage*, float, float, %struct.SkSamplingOptions*, %class.SkPaint*)*** %44, align 8
  %46 = getelementptr inbounds void (%class.SkCanvas*, %class.SkImage*, float, float, %struct.SkSamplingOptions*, %class.SkPaint*)*, void (%class.SkCanvas*, %class.SkImage*, float, float, %struct.SkSamplingOptions*, %class.SkPaint*)** %45, i64 35
  %47 = load void (%class.SkCanvas*, %class.SkImage*, float, float, %struct.SkSamplingOptions*, %class.SkPaint*)*, void (%class.SkCanvas*, %class.SkImage*, float, float, %struct.SkSamplingOptions*, %class.SkPaint*)** %46, align 8
  call void %47(%class.SkCanvas* %0, %class.SkImage* nonnull %1, float %2, float %3, %struct.SkSamplingOptions* dereferenceable(20) %4, %class.SkPaint* %5) #15
  %48 = load %"struct.skia::tracing_internals::ScopedTracer::Data"*, %"struct.skia::tracing_internals::ScopedTracer::Data"** %22, align 8
  br label %49

49:                                               ; preds = %40, %43
  %50 = phi %"struct.skia::tracing_internals::ScopedTracer::Data"* [ %41, %40 ], [ %48, %43 ]
  %51 = icmp eq %"struct.skia::tracing_internals::ScopedTracer::Data"* %50, null
  br i1 %51, label %65, label %52

52:                                               ; preds = %49
  %53 = load i8*, i8** %23, align 8
  %54 = load i8, i8* %53, align 1
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %65, label %56

56:                                               ; preds = %52
  %57 = call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %58 = load i8*, i8** %23, align 8
  %59 = load i8*, i8** %24, align 8
  %60 = load i64, i64* %25, align 8
  %61 = bitcast %class.SkEventTracer* %57 to void (%class.SkEventTracer*, i8*, i8*, i64)***
  %62 = load void (%class.SkEventTracer*, i8*, i8*, i64)**, void (%class.SkEventTracer*, i8*, i8*, i64)*** %61, align 8
  %63 = getelementptr inbounds void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %62, i64 5
  %64 = load void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %63, align 8
  call void %64(%class.SkEventTracer* %57, i8* %58, i8* %59, i64 %60) #15
  br label %65

65:                                               ; preds = %49, %52, %56
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %21) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas13drawImageRectEPK7SkImageRK6SkRectRK17SkSamplingOptionsPK7SkPaint(%class.SkCanvas*, %class.SkImage*, %struct.SkRect* dereferenceable(16), %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint*) local_unnamed_addr #0 align 2 {
  %6 = alloca { <2 x float>, <2 x float> }, align 8
  %7 = icmp eq %class.SkImage* %1, null
  br i1 %7, label %60, label %8

8:                                                ; preds = %5
  %9 = bitcast { <2 x float>, <2 x float> }* %6 to %struct.SkRect*
  %10 = bitcast { <2 x float>, <2 x float> }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #15
  %11 = getelementptr inbounds %class.SkImage, %class.SkImage* %1, i64 0, i32 2, i32 1, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %class.SkImage, %class.SkImage* %1, i64 0, i32 2, i32 1, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = sitofp i32 %12 to float
  %16 = insertelement <2 x float> undef, float %15, i32 0
  %17 = sitofp i32 %14 to float
  %18 = insertelement <2 x float> %16, float %17, i32 1
  %19 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 0
  store <2 x float> zeroinitializer, <2 x float>* %19, align 8
  %20 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 1
  store <2 x float> %18, <2 x float>* %20, align 8
  %21 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 2
  %22 = load float, float* %21, align 4
  %23 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 0
  %24 = load float, float* %23, align 4
  %25 = fsub float %22, %24
  %26 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 3
  %27 = load float, float* %26, align 4
  %28 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 1
  %29 = load float, float* %28, align 4
  %30 = fsub float %27, %29
  %31 = bitcast float %25 to i32
  %32 = and i32 %31, 2139095040
  %33 = icmp ne i32 %32, 2139095040
  %34 = fcmp ogt float %25, 0.000000e+00
  %35 = and i1 %34, %33
  %36 = bitcast float %15 to i32
  %37 = bitcast float %17 to i32
  br i1 %35, label %38, label %59

38:                                               ; preds = %8
  %39 = bitcast float %30 to i32
  %40 = and i32 %39, 2139095040
  %41 = icmp ne i32 %40, 2139095040
  %42 = fcmp ogt float %30, 0.000000e+00
  %43 = and i1 %42, %41
  br i1 %43, label %44, label %59

44:                                               ; preds = %38
  %45 = and i32 %36, 2139095040
  %46 = icmp ne i32 %45, 2139095040
  %47 = icmp sgt i32 %12, 0
  %48 = and i1 %47, %46
  br i1 %48, label %49, label %59

49:                                               ; preds = %44
  %50 = and i32 %37, 2139095040
  %51 = icmp ne i32 %50, 2139095040
  %52 = icmp sgt i32 %14, 0
  %53 = and i1 %52, %51
  br i1 %53, label %54, label %59

54:                                               ; preds = %49
  %55 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*, %class.SkImage*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)***
  %56 = load void (%class.SkCanvas*, %class.SkImage*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)**, void (%class.SkCanvas*, %class.SkImage*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)*** %55, align 8
  %57 = getelementptr inbounds void (%class.SkCanvas*, %class.SkImage*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)*, void (%class.SkCanvas*, %class.SkImage*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)** %56, i64 36
  %58 = load void (%class.SkCanvas*, %class.SkImage*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)*, void (%class.SkCanvas*, %class.SkImage*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)** %57, align 8
  call void %58(%class.SkCanvas* %0, %class.SkImage* nonnull %1, %struct.SkRect* nonnull dereferenceable(16) %9, %struct.SkRect* dereferenceable(16) %2, %struct.SkSamplingOptions* dereferenceable(20) %3, %class.SkPaint* %4, i32 1) #15
  br label %59

59:                                               ; preds = %8, %38, %44, %49, %54
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #15
  br label %60

60:                                               ; preds = %5, %59
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas14onDrawTextBlobEPK10SkTextBlobffRK7SkPaint(%class.SkCanvas*, %class.SkTextBlob*, float, float, %class.SkPaint* dereferenceable(72)) unnamed_addr #11 align 2 {
  %6 = alloca %class.SkGlyphRunList, align 8
  %7 = bitcast %class.SkGlyphRunList* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %7) #15
  %8 = getelementptr inbounds %class.SkGlyphRunList, %class.SkGlyphRunList* %6, i64 0, i32 2, i32 0
  %9 = bitcast %class.SkGlyphRunList* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false)
  %10 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 12, i32 0, i32 0, i32 0
  %11 = bitcast float* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 -1, i64 24, i1 false)
  %12 = load %class.SkGlyphRunBuilder*, %class.SkGlyphRunBuilder** %10, align 8
  %13 = insertelement <2 x float> undef, float %2, i32 0
  %14 = insertelement <2 x float> %13, float %3, i32 1
  %15 = tail call dereferenceable(48) %class.SkGlyphRunList* @_ZN17SkGlyphRunBuilder18blobToGlyphRunListERK10SkTextBlob7SkPoint(%class.SkGlyphRunBuilder* %12, %class.SkTextBlob* dereferenceable(28) %1, <2 x float> %14) #15
  %16 = bitcast %class.SkGlyphRunList* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 %16, i64 48, i1 false)
  %17 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*, %class.SkGlyphRunList*, %class.SkPaint*)***
  %18 = load void (%class.SkCanvas*, %class.SkGlyphRunList*, %class.SkPaint*)**, void (%class.SkCanvas*, %class.SkGlyphRunList*, %class.SkPaint*)*** %17, align 8
  %19 = getelementptr inbounds void (%class.SkCanvas*, %class.SkGlyphRunList*, %class.SkPaint*)*, void (%class.SkCanvas*, %class.SkGlyphRunList*, %class.SkPaint*)** %18, i64 32
  %20 = load void (%class.SkCanvas*, %class.SkGlyphRunList*, %class.SkPaint*)*, void (%class.SkCanvas*, %class.SkGlyphRunList*, %class.SkPaint*)** %19, align 8
  call void %20(%class.SkCanvas* %0, %class.SkGlyphRunList* nonnull dereferenceable(48) %6, %class.SkPaint* dereferenceable(72) %4) #15
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %7) #15
  ret void
}

declare dereferenceable(48) %class.SkGlyphRunList* @_ZN17SkGlyphRunBuilder18blobToGlyphRunListERK10SkTextBlob7SkPoint(%class.SkGlyphRunBuilder*, %class.SkTextBlob* dereferenceable(28), <2 x float>) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas18onDrawGlyphRunListERK14SkGlyphRunListRK7SkPaint(%class.SkCanvas*, %class.SkGlyphRunList* dereferenceable(48), %class.SkPaint* dereferenceable(72)) unnamed_addr #0 align 2 {
  %4 = alloca <2 x i64>, align 16
  %5 = bitcast <2 x i64>* %4 to %struct.SkRect*
  %6 = alloca %class.AutoLayerForImageFilter, align 8
  %7 = bitcast <2 x i64>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #15
  %8 = getelementptr inbounds %class.SkGlyphRunList, %class.SkGlyphRunList* %1, i64 0, i32 2
  %9 = bitcast %struct.SkRect* %8 to <2 x i64>*
  %10 = load <2 x i64>, <2 x i64>* %9, align 8
  store <2 x i64> %10, <2 x i64>* %4, align 16
  %11 = call zeroext i1 @_ZN8SkCanvas19internalQuickRejectERK6SkRectRK7SkPaintPK8SkMatrix(%class.SkCanvas* %0, %struct.SkRect* nonnull dereferenceable(16) %5, %class.SkPaint* dereferenceable(72) %2, %class.SkMatrix* null)
  br i1 %11, label %26, label %12

12:                                               ; preds = %3
  %13 = bitcast %class.AutoLayerForImageFilter* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %13) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 8 bitcast (%class.AutoLayerForImageFilter* @__const._ZN8SkCanvas21onDrawEdgeAAImageSet2EPKNS_13ImageSetEntryEiPK7SkPointPK8SkMatrixRK17SkSamplingOptionsPK7SkPaintNS_17SrcRectConstraintE.layer to i8*), i64 88, i1 false)
  call fastcc void @_ZN23AutoLayerForImageFilterC2EP8SkCanvasRK7SkPaintPK6SkRectN12_GLOBAL__N_117CheckForOverwriteENS0_21ShaderOverrideOpacityE(%class.AutoLayerForImageFilter* nonnull %6, %class.SkCanvas* %0, %class.SkPaint* dereferenceable(72) %2, %struct.SkRect* nonnull %5, i1 zeroext false, i32 0)
  %14 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %15 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %14, align 8
  %16 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %15, i64 0, i32 1
  %17 = load %class.SkBaseDevice*, %class.SkBaseDevice** %16, align 8
  %18 = getelementptr inbounds %class.AutoLayerForImageFilter, %class.AutoLayerForImageFilter* %6, i64 0, i32 0
  call void @_ZN12SkBaseDevice16drawGlyphRunListERK14SkGlyphRunListRK7SkPaint(%class.SkBaseDevice* %17, %class.SkGlyphRunList* dereferenceable(48) %1, %class.SkPaint* nonnull dereferenceable(72) %18) #15
  %19 = getelementptr inbounds %class.AutoLayerForImageFilter, %class.AutoLayerForImageFilter* %6, i64 0, i32 2
  %20 = load i8, i8* %19, align 8, !range !122
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %12
  %23 = getelementptr inbounds %class.AutoLayerForImageFilter, %class.AutoLayerForImageFilter* %6, i64 0, i32 1
  %24 = load %class.SkCanvas*, %class.SkCanvas** %23, align 8
  call void @_ZN8SkCanvas15internalRestoreEv(%class.SkCanvas* %24) #15
  br label %25

25:                                               ; preds = %12, %22
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %18) #15
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %13) #15
  br label %26

26:                                               ; preds = %3, %25
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #15
  ret void
}

declare void @_ZN12SkBaseDevice16drawGlyphRunListERK14SkGlyphRunListRK7SkPaint(%class.SkBaseDevice*, %class.SkGlyphRunList* dereferenceable(48), %class.SkPaint* dereferenceable(72)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas14drawSimpleTextEPKvm14SkTextEncodingffRK6SkFontRK7SkPaint(%class.SkCanvas*, i8*, i64, i32, float, float, %class.SkFont* dereferenceable(24), %class.SkPaint* dereferenceable(72)) local_unnamed_addr #11 align 2 {
  %9 = alloca %"class.skia::tracing_internals::ScopedTracer", align 8
  %10 = load atomic i64, i64* @_ZZN8SkCanvas14drawSimpleTextEPKvm14SkTextEncodingffRK6SkFontRK7SkPaintE29trace_event_unique_atomic2200.0.0 monotonic, align 8
  %11 = inttoptr i64 %10 to i8*
  %12 = icmp eq i64 %10, 0
  br i1 %12, label %13, label %21

13:                                               ; preds = %8
  %14 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %15 = bitcast %class.SkEventTracer* %14 to i8* (%class.SkEventTracer*, i8*)***
  %16 = load i8* (%class.SkEventTracer*, i8*)**, i8* (%class.SkEventTracer*, i8*)*** %15, align 8
  %17 = getelementptr inbounds i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %16, i64 2
  %18 = load i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %17, align 8
  %19 = tail call i8* %18(%class.SkEventTracer* %14, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0)) #15
  %20 = ptrtoint i8* %19 to i64
  store atomic i64 %20, i64* @_ZZN8SkCanvas14drawSimpleTextEPKvm14SkTextEncodingffRK6SkFontRK7SkPaintE29trace_event_unique_atomic2200.0.0 monotonic, align 8
  br label %21

21:                                               ; preds = %8, %13
  %22 = phi i8* [ %11, %8 ], [ %19, %13 ]
  %23 = bitcast %"class.skia::tracing_internals::ScopedTracer"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #15
  %24 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %9, i64 0, i32 0
  %25 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %9, i64 0, i32 1, i32 0
  %26 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %9, i64 0, i32 1, i32 1
  %27 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %9, i64 0, i32 1, i32 2
  %28 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %9, i64 0, i32 1
  %29 = bitcast %"struct.skia::tracing_internals::ScopedTracer::Data"* %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 24, i1 false)
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* null, %"struct.skia::tracing_internals::ScopedTracer::Data"** %24, align 8
  %30 = load i8, i8* %22, align 1
  %31 = and i8 %30, 5
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %42, label %33

33:                                               ; preds = %21
  %34 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %35 = bitcast %class.SkEventTracer* %34 to i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)***
  %36 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)**, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*** %35, align 8
  %37 = getelementptr inbounds i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %36, i64 4
  %38 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %37, align 8
  %39 = tail call i64 %38(%class.SkEventTracer* %34, i8 signext 88, i8* %22, i8* getelementptr inbounds ([121 x i8], [121 x i8]* @__PRETTY_FUNCTION__._ZN8SkCanvas14drawSimpleTextEPKvm14SkTextEncodingffRK6SkFontRK7SkPaint, i64 0, i64 0), i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #15
  %40 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %9, i64 0, i32 1
  %41 = getelementptr inbounds %"struct.skia::tracing_internals::ScopedTracer::Data", %"struct.skia::tracing_internals::ScopedTracer::Data"* %40, i64 0, i32 0
  store i8* %22, i8** %41, align 8
  store i8* getelementptr inbounds ([121 x i8], [121 x i8]* @__PRETTY_FUNCTION__._ZN8SkCanvas14drawSimpleTextEPKvm14SkTextEncodingffRK6SkFontRK7SkPaint, i64 0, i64 0), i8** %26, align 8
  store i64 %39, i64* %27, align 8
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* %40, %"struct.skia::tracing_internals::ScopedTracer::Data"** %24, align 8
  br label %42

42:                                               ; preds = %21, %33
  %43 = icmp eq i64 %2, 0
  br i1 %43, label %58, label %44

44:                                               ; preds = %42
  %45 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 12, i32 0, i32 0, i32 0
  %46 = load %class.SkGlyphRunBuilder*, %class.SkGlyphRunBuilder** %45, align 8
  %47 = insertelement <2 x float> undef, float %4, i32 0
  %48 = insertelement <2 x float> %47, float %5, i32 1
  %49 = call dereferenceable(48) %class.SkGlyphRunList* @_ZN17SkGlyphRunBuilder18textToGlyphRunListERK6SkFontRK7SkPaintPKvm7SkPoint14SkTextEncoding(%class.SkGlyphRunBuilder* %46, %class.SkFont* dereferenceable(24) %6, %class.SkPaint* dereferenceable(72) %7, i8* %1, i64 %2, <2 x float> %48, i32 %3) #15
  %50 = getelementptr inbounds %class.SkGlyphRunList, %class.SkGlyphRunList* %49, i64 0, i32 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %58, label %53

53:                                               ; preds = %44
  %54 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*, %class.SkGlyphRunList*, %class.SkPaint*)***
  %55 = load void (%class.SkCanvas*, %class.SkGlyphRunList*, %class.SkPaint*)**, void (%class.SkCanvas*, %class.SkGlyphRunList*, %class.SkPaint*)*** %54, align 8
  %56 = getelementptr inbounds void (%class.SkCanvas*, %class.SkGlyphRunList*, %class.SkPaint*)*, void (%class.SkCanvas*, %class.SkGlyphRunList*, %class.SkPaint*)** %55, i64 32
  %57 = load void (%class.SkCanvas*, %class.SkGlyphRunList*, %class.SkPaint*)*, void (%class.SkCanvas*, %class.SkGlyphRunList*, %class.SkPaint*)** %56, align 8
  call void %57(%class.SkCanvas* %0, %class.SkGlyphRunList* dereferenceable(48) %49, %class.SkPaint* dereferenceable(72) %7) #15
  br label %58

58:                                               ; preds = %44, %53, %42
  %59 = load %"struct.skia::tracing_internals::ScopedTracer::Data"*, %"struct.skia::tracing_internals::ScopedTracer::Data"** %24, align 8
  %60 = icmp eq %"struct.skia::tracing_internals::ScopedTracer::Data"* %59, null
  br i1 %60, label %74, label %61

61:                                               ; preds = %58
  %62 = load i8*, i8** %25, align 8
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %74, label %65

65:                                               ; preds = %61
  %66 = call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %67 = load i8*, i8** %25, align 8
  %68 = load i8*, i8** %26, align 8
  %69 = load i64, i64* %27, align 8
  %70 = bitcast %class.SkEventTracer* %66 to void (%class.SkEventTracer*, i8*, i8*, i64)***
  %71 = load void (%class.SkEventTracer*, i8*, i8*, i64)**, void (%class.SkEventTracer*, i8*, i8*, i64)*** %70, align 8
  %72 = getelementptr inbounds void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %71, i64 5
  %73 = load void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %72, align 8
  call void %73(%class.SkEventTracer* %66, i8* %67, i8* %68, i64 %69) #15
  br label %74

74:                                               ; preds = %58, %61, %65
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #15
  ret void
}

declare dereferenceable(48) %class.SkGlyphRunList* @_ZN17SkGlyphRunBuilder18textToGlyphRunListERK6SkFontRK7SkPaintPKvm7SkPoint14SkTextEncoding(%class.SkGlyphRunBuilder*, %class.SkFont* dereferenceable(24), %class.SkPaint* dereferenceable(72), i8*, i64, <2 x float>, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas10drawGlyphsEiPKtPK7SkPointPKjiPKcS2_RK6SkFontRK7SkPaint(%class.SkCanvas*, i32, i16*, %struct.SkPoint*, i32*, i32, i8*, <2 x float>, %class.SkFont* dereferenceable(24), %class.SkPaint* dereferenceable(72)) local_unnamed_addr #11 align 2 {
  %11 = alloca %class.SkGlyphRun, align 8
  %12 = alloca %class.SkSpan, align 8
  %13 = alloca %class.SkSpan.29, align 8
  %14 = alloca %class.SkSpan.30, align 8
  %15 = alloca %class.SkGlyphRunList, align 8
  %16 = alloca { <2 x float>, <2 x float> }, align 8
  %17 = icmp slt i32 %1, 1
  br i1 %17, label %58, label %18

18:                                               ; preds = %10
  %19 = bitcast { <2 x float>, <2 x float> }* %16 to %struct.SkRect*
  %20 = bitcast %class.SkGlyphRun* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %20) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %20, i8* align 8 bitcast (%class.SkGlyphRun* @__const._ZN8SkCanvas10drawGlyphsEiPKtPK9SkRSXform7SkPointRK6SkFontRK7SkPaint.glyphRun to i8*), i64 96, i1 false)
  %21 = sext i32 %1 to i64
  %22 = sext i32 %5 to i64
  %23 = getelementptr inbounds %class.SkSpan, %class.SkSpan* %12, i64 0, i32 0
  store i8* %6, i8** %23, align 8
  %24 = getelementptr inbounds %class.SkSpan, %class.SkSpan* %12, i64 0, i32 1
  store i64 %22, i64* %24, align 8
  %25 = getelementptr inbounds %class.SkSpan.29, %class.SkSpan.29* %13, i64 0, i32 0
  store i32* %4, i32** %25, align 8
  %26 = getelementptr inbounds %class.SkSpan.29, %class.SkSpan.29* %13, i64 0, i32 1
  store i64 %21, i64* %26, align 8
  %27 = bitcast %class.SkSpan.30* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 0, i64 16, i1 false)
  call void @_ZN10SkGlyphRunC1ERK6SkFont6SkSpanIK7SkPointES3_IKtES3_IKcES3_IKjES6_(%class.SkGlyphRun* nonnull %11, %class.SkFont* dereferenceable(24) %8, %struct.SkPoint* %3, i64 %21, i16* %2, i64 %21, %class.SkSpan* nonnull byval(%class.SkSpan) align 8 %12, %class.SkSpan.29* nonnull byval(%class.SkSpan.29) align 8 %13, %class.SkSpan.30* nonnull byval(%class.SkSpan.30) align 8 %14) #15
  %28 = bitcast %class.SkGlyphRunList* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %28) #15
  %29 = getelementptr inbounds %class.SkGlyphRunList, %class.SkGlyphRunList* %15, i64 0, i32 2, i32 0
  %30 = bitcast %class.SkGlyphRunList* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 24, i1 false)
  %31 = bitcast { <2 x float>, <2 x float> }* %16 to i8*
  %32 = bitcast float* %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 -1, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #15
  %33 = call { <2 x float>, <2 x float> } @_ZNK10SkGlyphRun12sourceBoundsERK7SkPaint(%class.SkGlyphRun* nonnull %11, %class.SkPaint* dereferenceable(72) %9) #15
  %34 = extractvalue { <2 x float>, <2 x float> } %33, 0
  %35 = extractvalue { <2 x float>, <2 x float> } %33, 1
  %36 = fadd <2 x float> %34, %7
  %37 = fadd <2 x float> %35, %7
  %38 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %16, i64 0, i32 0
  store <2 x float> %36, <2 x float>* %38, align 8
  %39 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %16, i64 0, i32 1
  store <2 x float> %37, <2 x float>* %39, align 8
  call void @_ZN14SkGlyphRunListC1ERK10SkGlyphRunRK6SkRect7SkPoint(%class.SkGlyphRunList* nonnull %15, %class.SkGlyphRun* nonnull dereferenceable(96) %11, %struct.SkRect* nonnull dereferenceable(16) %19, <2 x float> %7) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #15
  %40 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*, %class.SkGlyphRunList*, %class.SkPaint*)***
  %41 = load void (%class.SkCanvas*, %class.SkGlyphRunList*, %class.SkPaint*)**, void (%class.SkCanvas*, %class.SkGlyphRunList*, %class.SkPaint*)*** %40, align 8
  %42 = getelementptr inbounds void (%class.SkCanvas*, %class.SkGlyphRunList*, %class.SkPaint*)*, void (%class.SkCanvas*, %class.SkGlyphRunList*, %class.SkPaint*)** %41, i64 32
  %43 = load void (%class.SkCanvas*, %class.SkGlyphRunList*, %class.SkPaint*)*, void (%class.SkCanvas*, %class.SkGlyphRunList*, %class.SkPaint*)** %42, align 8
  call void %43(%class.SkCanvas* %0, %class.SkGlyphRunList* nonnull dereferenceable(48) %15, %class.SkPaint* dereferenceable(72) %9) #15
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %28) #15
  %44 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %11, i64 0, i32 4, i32 0, i32 0
  %45 = load %class.SkTypeface*, %class.SkTypeface** %44, align 8
  %46 = icmp eq %class.SkTypeface* %45, null
  br i1 %46, label %57, label %47

47:                                               ; preds = %18
  %48 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %45, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = atomicrmw add i32* %48, i32 -1 acq_rel
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %51, label %57

51:                                               ; preds = %47
  %52 = bitcast %class.SkTypeface* %45 to %class.SkRefCntBase*
  %53 = bitcast %class.SkTypeface* %45 to void (%class.SkRefCntBase*)***
  %54 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %53, align 8
  %55 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %54, i64 2
  %56 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %55, align 8
  call void %56(%class.SkRefCntBase* nonnull %52) #15
  br label %57

57:                                               ; preds = %18, %47, %51
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %20) #15
  br label %58

58:                                               ; preds = %10, %57
  ret void
}

declare void @_ZN10SkGlyphRunC1ERK6SkFont6SkSpanIK7SkPointES3_IKtES3_IKcES3_IKjES6_(%class.SkGlyphRun*, %class.SkFont* dereferenceable(24), %struct.SkPoint*, i64, i16*, i64, %class.SkSpan* byval(%class.SkSpan) align 8, %class.SkSpan.29* byval(%class.SkSpan.29) align 8, %class.SkSpan.30* byval(%class.SkSpan.30) align 8) unnamed_addr #4

declare { <2 x float>, <2 x float> } @_ZNK10SkGlyphRun12sourceBoundsERK7SkPaint(%class.SkGlyphRun*, %class.SkPaint* dereferenceable(72)) local_unnamed_addr #4

declare void @_ZN14SkGlyphRunListC1ERK10SkGlyphRunRK6SkRect7SkPoint(%class.SkGlyphRunList*, %class.SkGlyphRun* dereferenceable(96), %struct.SkRect* dereferenceable(16), <2 x float>) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas10drawGlyphsEiPKtPK7SkPointS2_RK6SkFontRK7SkPaint(%class.SkCanvas*, i32, i16*, %struct.SkPoint*, <2 x float>, %class.SkFont* dereferenceable(24), %class.SkPaint* dereferenceable(72)) local_unnamed_addr #11 align 2 {
  %8 = alloca %class.SkGlyphRun, align 8
  %9 = alloca %class.SkSpan, align 8
  %10 = alloca %class.SkSpan.29, align 8
  %11 = alloca %class.SkSpan.30, align 8
  %12 = alloca %class.SkGlyphRunList, align 8
  %13 = alloca { <2 x float>, <2 x float> }, align 8
  %14 = icmp slt i32 %1, 1
  br i1 %14, label %52, label %15

15:                                               ; preds = %7
  %16 = bitcast { <2 x float>, <2 x float> }* %13 to %struct.SkRect*
  %17 = bitcast %class.SkGlyphRun* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %17) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %17, i8* align 8 bitcast (%class.SkGlyphRun* @__const._ZN8SkCanvas10drawGlyphsEiPKtPK9SkRSXform7SkPointRK6SkFontRK7SkPaint.glyphRun to i8*), i64 96, i1 false)
  %18 = sext i32 %1 to i64
  %19 = bitcast %class.SkSpan* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 16, i1 false) #15
  %20 = bitcast %class.SkSpan.29* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 0, i64 16, i1 false) #15
  %21 = bitcast %class.SkSpan.30* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 0, i64 16, i1 false)
  call void @_ZN10SkGlyphRunC1ERK6SkFont6SkSpanIK7SkPointES3_IKtES3_IKcES3_IKjES6_(%class.SkGlyphRun* nonnull %8, %class.SkFont* dereferenceable(24) %5, %struct.SkPoint* %3, i64 %18, i16* %2, i64 %18, %class.SkSpan* nonnull byval(%class.SkSpan) align 8 %9, %class.SkSpan.29* nonnull byval(%class.SkSpan.29) align 8 %10, %class.SkSpan.30* nonnull byval(%class.SkSpan.30) align 8 %11) #15
  %22 = bitcast %class.SkGlyphRunList* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %22) #15
  %23 = getelementptr inbounds %class.SkGlyphRunList, %class.SkGlyphRunList* %12, i64 0, i32 2, i32 0
  %24 = bitcast %class.SkGlyphRunList* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 24, i1 false)
  %25 = bitcast { <2 x float>, <2 x float> }* %13 to i8*
  %26 = bitcast float* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 -1, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #15
  %27 = call { <2 x float>, <2 x float> } @_ZNK10SkGlyphRun12sourceBoundsERK7SkPaint(%class.SkGlyphRun* nonnull %8, %class.SkPaint* dereferenceable(72) %6) #15
  %28 = extractvalue { <2 x float>, <2 x float> } %27, 0
  %29 = extractvalue { <2 x float>, <2 x float> } %27, 1
  %30 = fadd <2 x float> %28, %4
  %31 = fadd <2 x float> %29, %4
  %32 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %13, i64 0, i32 0
  store <2 x float> %30, <2 x float>* %32, align 8
  %33 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %13, i64 0, i32 1
  store <2 x float> %31, <2 x float>* %33, align 8
  call void @_ZN14SkGlyphRunListC1ERK10SkGlyphRunRK6SkRect7SkPoint(%class.SkGlyphRunList* nonnull %12, %class.SkGlyphRun* nonnull dereferenceable(96) %8, %struct.SkRect* nonnull dereferenceable(16) %16, <2 x float> %4) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #15
  %34 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*, %class.SkGlyphRunList*, %class.SkPaint*)***
  %35 = load void (%class.SkCanvas*, %class.SkGlyphRunList*, %class.SkPaint*)**, void (%class.SkCanvas*, %class.SkGlyphRunList*, %class.SkPaint*)*** %34, align 8
  %36 = getelementptr inbounds void (%class.SkCanvas*, %class.SkGlyphRunList*, %class.SkPaint*)*, void (%class.SkCanvas*, %class.SkGlyphRunList*, %class.SkPaint*)** %35, i64 32
  %37 = load void (%class.SkCanvas*, %class.SkGlyphRunList*, %class.SkPaint*)*, void (%class.SkCanvas*, %class.SkGlyphRunList*, %class.SkPaint*)** %36, align 8
  call void %37(%class.SkCanvas* %0, %class.SkGlyphRunList* nonnull dereferenceable(48) %12, %class.SkPaint* dereferenceable(72) %6) #15
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %22) #15
  %38 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %8, i64 0, i32 4, i32 0, i32 0
  %39 = load %class.SkTypeface*, %class.SkTypeface** %38, align 8
  %40 = icmp eq %class.SkTypeface* %39, null
  br i1 %40, label %51, label %41

41:                                               ; preds = %15
  %42 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %39, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = atomicrmw add i32* %42, i32 -1 acq_rel
  %44 = icmp eq i32 %43, 1
  br i1 %44, label %45, label %51

45:                                               ; preds = %41
  %46 = bitcast %class.SkTypeface* %39 to %class.SkRefCntBase*
  %47 = bitcast %class.SkTypeface* %39 to void (%class.SkRefCntBase*)***
  %48 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %47, align 8
  %49 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %48, i64 2
  %50 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %49, align 8
  call void %50(%class.SkRefCntBase* nonnull %46) #15
  br label %51

51:                                               ; preds = %15, %41, %45
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %17) #15
  br label %52

52:                                               ; preds = %7, %51
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas10drawGlyphsEiPKtPK9SkRSXform7SkPointRK6SkFontRK7SkPaint(%class.SkCanvas*, i32, i16*, %struct.SkRSXform*, <2 x float>, %class.SkFont* dereferenceable(24), %class.SkPaint* dereferenceable(72)) local_unnamed_addr #11 align 2 {
  %8 = alloca %"class.std::__1::tuple.253", align 8
  %9 = alloca %class.SkGlyphRun, align 8
  %10 = alloca %class.SkSpan, align 8
  %11 = alloca %class.SkSpan.29, align 8
  %12 = alloca %class.SkGlyphRunList, align 8
  %13 = alloca { <2 x float>, <2 x float> }, align 8
  %14 = icmp slt i32 %1, 1
  br i1 %14, label %60, label %15

15:                                               ; preds = %7
  %16 = bitcast { <2 x float>, <2 x float> }* %13 to %struct.SkRect*
  %17 = bitcast %"class.std::__1::tuple.253"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #15
  %18 = getelementptr inbounds %"class.std::__1::tuple.253", %"class.std::__1::tuple.253"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.std::__1::tuple.253", %"class.std::__1::tuple.253"* %8, i64 0, i32 0, i32 0, i32 0, i32 1
  %20 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 12, i32 0, i32 0, i32 0
  %21 = bitcast %"class.std::__1::tuple.253"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 32, i1 false)
  %22 = load %class.SkGlyphRunBuilder*, %class.SkGlyphRunBuilder** %20, align 8
  %23 = sext i32 %1 to i64
  call void @_ZN17SkGlyphRunBuilder14convertRSXFormE6SkSpanIK9SkRSXformE(%"class.std::__1::tuple.253"* nonnull sret %8, %class.SkGlyphRunBuilder* %22, %struct.SkRSXform* %3, i64 %23) #15
  %24 = getelementptr inbounds %"class.std::__1::tuple.253", %"class.std::__1::tuple.253"* %8, i64 0, i32 0, i32 1, i32 0
  %25 = bitcast %class.SkGlyphRun* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %25) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %25, i8* align 8 bitcast (%class.SkGlyphRun* @__const._ZN8SkCanvas10drawGlyphsEiPKtPK9SkRSXform7SkPointRK6SkFontRK7SkPaint.glyphRun to i8*), i64 96, i1 false)
  %26 = load %struct.SkPoint*, %struct.SkPoint** %18, align 8
  %27 = load i64, i64* %19, align 8
  %28 = bitcast %class.SkSpan* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 0, i64 16, i1 false) #15
  %29 = bitcast %class.SkSpan.29* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 0, i64 16, i1 false) #15
  call void @_ZN10SkGlyphRunC1ERK6SkFont6SkSpanIK7SkPointES3_IKtES3_IKcES3_IKjES6_(%class.SkGlyphRun* nonnull %9, %class.SkFont* dereferenceable(24) %5, %struct.SkPoint* %26, i64 %27, i16* %2, i64 %23, %class.SkSpan* nonnull byval(%class.SkSpan) align 8 %10, %class.SkSpan.29* nonnull byval(%class.SkSpan.29) align 8 %11, %class.SkSpan.30* nonnull byval(%class.SkSpan.30) align 8 %24) #15
  %30 = bitcast %class.SkGlyphRunList* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %30) #15
  %31 = getelementptr inbounds %class.SkGlyphRunList, %class.SkGlyphRunList* %12, i64 0, i32 2, i32 0
  %32 = bitcast %class.SkGlyphRunList* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 24, i1 false)
  %33 = bitcast { <2 x float>, <2 x float> }* %13 to i8*
  %34 = bitcast float* %31 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 -1, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #15
  %35 = call { <2 x float>, <2 x float> } @_ZNK10SkGlyphRun12sourceBoundsERK7SkPaint(%class.SkGlyphRun* nonnull %9, %class.SkPaint* dereferenceable(72) %6) #15
  %36 = extractvalue { <2 x float>, <2 x float> } %35, 0
  %37 = extractvalue { <2 x float>, <2 x float> } %35, 1
  %38 = fadd <2 x float> %36, %4
  %39 = fadd <2 x float> %37, %4
  %40 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %13, i64 0, i32 0
  store <2 x float> %38, <2 x float>* %40, align 8
  %41 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %13, i64 0, i32 1
  store <2 x float> %39, <2 x float>* %41, align 8
  call void @_ZN14SkGlyphRunListC1ERK10SkGlyphRunRK6SkRect7SkPoint(%class.SkGlyphRunList* nonnull %12, %class.SkGlyphRun* nonnull dereferenceable(96) %9, %struct.SkRect* nonnull dereferenceable(16) %16, <2 x float> %4) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #15
  %42 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*, %class.SkGlyphRunList*, %class.SkPaint*)***
  %43 = load void (%class.SkCanvas*, %class.SkGlyphRunList*, %class.SkPaint*)**, void (%class.SkCanvas*, %class.SkGlyphRunList*, %class.SkPaint*)*** %42, align 8
  %44 = getelementptr inbounds void (%class.SkCanvas*, %class.SkGlyphRunList*, %class.SkPaint*)*, void (%class.SkCanvas*, %class.SkGlyphRunList*, %class.SkPaint*)** %43, i64 32
  %45 = load void (%class.SkCanvas*, %class.SkGlyphRunList*, %class.SkPaint*)*, void (%class.SkCanvas*, %class.SkGlyphRunList*, %class.SkPaint*)** %44, align 8
  call void %45(%class.SkCanvas* %0, %class.SkGlyphRunList* nonnull dereferenceable(48) %12, %class.SkPaint* dereferenceable(72) %6) #15
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %30) #15
  %46 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %9, i64 0, i32 4, i32 0, i32 0
  %47 = load %class.SkTypeface*, %class.SkTypeface** %46, align 8
  %48 = icmp eq %class.SkTypeface* %47, null
  br i1 %48, label %59, label %49

49:                                               ; preds = %15
  %50 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %47, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = atomicrmw add i32* %50, i32 -1 acq_rel
  %52 = icmp eq i32 %51, 1
  br i1 %52, label %53, label %59

53:                                               ; preds = %49
  %54 = bitcast %class.SkTypeface* %47 to %class.SkRefCntBase*
  %55 = bitcast %class.SkTypeface* %47 to void (%class.SkRefCntBase*)***
  %56 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %55, align 8
  %57 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %56, i64 2
  %58 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %57, align 8
  call void %58(%class.SkRefCntBase* nonnull %54) #15
  br label %59

59:                                               ; preds = %15, %49, %53
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %25) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #15
  br label %60

60:                                               ; preds = %7, %59
  ret void
}

declare void @_ZN17SkGlyphRunBuilder14convertRSXFormE6SkSpanIK9SkRSXformE(%"class.std::__1::tuple.253"* sret, %class.SkGlyphRunBuilder*, %struct.SkRSXform*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas12drawTextBlobEPK10SkTextBlobffRK7SkPaint(%class.SkCanvas*, %class.SkTextBlob*, float, float, %class.SkPaint* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.skia::tracing_internals::ScopedTracer", align 8
  %7 = alloca %"class.SkTextBlob::Iter", align 8
  %8 = alloca %"struct.SkTextBlob::Iter::Run", align 8
  %9 = load atomic i64, i64* @_ZZN8SkCanvas12drawTextBlobEPK10SkTextBlobffRK7SkPaintE29trace_event_unique_atomic2278.0.0 monotonic, align 8
  %10 = inttoptr i64 %9 to i8*
  %11 = icmp eq i64 %9, 0
  br i1 %11, label %12, label %20

12:                                               ; preds = %5
  %13 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %14 = bitcast %class.SkEventTracer* %13 to i8* (%class.SkEventTracer*, i8*)***
  %15 = load i8* (%class.SkEventTracer*, i8*)**, i8* (%class.SkEventTracer*, i8*)*** %14, align 8
  %16 = getelementptr inbounds i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %15, i64 2
  %17 = load i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %16, align 8
  %18 = tail call i8* %17(%class.SkEventTracer* %13, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0)) #15
  %19 = ptrtoint i8* %18 to i64
  store atomic i64 %19, i64* @_ZZN8SkCanvas12drawTextBlobEPK10SkTextBlobffRK7SkPaintE29trace_event_unique_atomic2278.0.0 monotonic, align 8
  br label %20

20:                                               ; preds = %5, %12
  %21 = phi i8* [ %10, %5 ], [ %18, %12 ]
  %22 = bitcast %"class.skia::tracing_internals::ScopedTracer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %22) #15
  %23 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %6, i64 0, i32 0
  %24 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %6, i64 0, i32 1, i32 0
  %25 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %6, i64 0, i32 1, i32 1
  %26 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %6, i64 0, i32 1, i32 2
  %27 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %6, i64 0, i32 1
  %28 = bitcast %"struct.skia::tracing_internals::ScopedTracer::Data"* %27 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 24, i1 false)
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* null, %"struct.skia::tracing_internals::ScopedTracer::Data"** %23, align 8
  %29 = load i8, i8* %21, align 1
  %30 = and i8 %29, 5
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %41, label %32

32:                                               ; preds = %20
  %33 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %34 = bitcast %class.SkEventTracer* %33 to i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)***
  %35 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)**, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*** %34, align 8
  %36 = getelementptr inbounds i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %35, i64 4
  %37 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %36, align 8
  %38 = tail call i64 %37(%class.SkEventTracer* %33, i8 signext 88, i8* %21, i8* getelementptr inbounds ([85 x i8], [85 x i8]* @__PRETTY_FUNCTION__._ZN8SkCanvas12drawTextBlobEPK10SkTextBlobffRK7SkPaint, i64 0, i64 0), i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #15
  %39 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %6, i64 0, i32 1
  %40 = getelementptr inbounds %"struct.skia::tracing_internals::ScopedTracer::Data", %"struct.skia::tracing_internals::ScopedTracer::Data"* %39, i64 0, i32 0
  store i8* %21, i8** %40, align 8
  store i8* getelementptr inbounds ([85 x i8], [85 x i8]* @__PRETTY_FUNCTION__._ZN8SkCanvas12drawTextBlobEPK10SkTextBlobffRK7SkPaint, i64 0, i64 0), i8** %25, align 8
  store i64 %38, i64* %26, align 8
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* %39, %"struct.skia::tracing_internals::ScopedTracer::Data"** %23, align 8
  br label %41

41:                                               ; preds = %20, %32
  %42 = phi %"struct.skia::tracing_internals::ScopedTracer::Data"* [ null, %20 ], [ %39, %32 ]
  %43 = icmp eq %class.SkTextBlob* %1, null
  br i1 %43, label %85, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %1, i64 0, i32 1, i32 0
  %46 = bitcast float* %45 to <2 x float>*
  %47 = load <2 x float>, <2 x float>* %46, align 4
  %48 = insertelement <2 x float> undef, float %2, i32 0
  %49 = insertelement <2 x float> %48, float %3, i32 1
  %50 = fadd <2 x float> %47, %49
  %51 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %1, i64 0, i32 1, i32 2
  %52 = bitcast float* %51 to <2 x float>*
  %53 = load <2 x float>, <2 x float>* %52, align 4
  %54 = fadd <2 x float> %53, %49
  %55 = extractelement <2 x float> %50, i32 0
  %56 = fmul float %55, 0.000000e+00
  %57 = extractelement <2 x float> %50, i32 1
  %58 = fmul float %56, %57
  %59 = extractelement <2 x float> %54, i32 0
  %60 = fmul float %58, %59
  %61 = extractelement <2 x float> %54, i32 1
  %62 = fmul float %60, %61
  %63 = fcmp ord float %62, 0.000000e+00
  br i1 %63, label %64, label %85

64:                                               ; preds = %44
  %65 = bitcast %"class.SkTextBlob::Iter"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #15
  %66 = getelementptr inbounds %"class.SkTextBlob::Iter", %"class.SkTextBlob::Iter"* %7, i64 0, i32 0
  store %"class.SkTextBlob::RunRecord"* inttoptr (i64 -6148914691236517206 to %"class.SkTextBlob::RunRecord"*), %"class.SkTextBlob::RunRecord"** %66, align 8
  call void @_ZN10SkTextBlob4IterC1ERKS_(%"class.SkTextBlob::Iter"* nonnull %7, %class.SkTextBlob* nonnull dereferenceable(28) %1) #15
  %67 = bitcast %"struct.SkTextBlob::Iter::Run"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %67) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %67, i8 -86, i64 48, i1 false)
  %68 = getelementptr inbounds %"struct.SkTextBlob::Iter::Run", %"struct.SkTextBlob::Iter::Run"* %8, i64 0, i32 1
  br label %69

69:                                               ; preds = %72, %64
  %70 = phi i32 [ 0, %64 ], [ %77, %72 ]
  %71 = call zeroext i1 @_ZN10SkTextBlob4Iter4nextEPNS0_3RunE(%"class.SkTextBlob::Iter"* nonnull %7, %"struct.SkTextBlob::Iter::Run"* nonnull %8) #15
  br i1 %71, label %72, label %78

72:                                               ; preds = %69
  %73 = sub nsw i32 2097152, %70
  %74 = load i32, i32* %68, align 8
  %75 = icmp sgt i32 %74, %73
  %76 = select i1 %75, i32 0, i32 %74
  %77 = add nsw i32 %76, %70
  br i1 %75, label %83, label %69

78:                                               ; preds = %69
  %79 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*, %class.SkTextBlob*, float, float, %class.SkPaint*)***
  %80 = load void (%class.SkCanvas*, %class.SkTextBlob*, float, float, %class.SkPaint*)**, void (%class.SkCanvas*, %class.SkTextBlob*, float, float, %class.SkPaint*)*** %79, align 8
  %81 = getelementptr inbounds void (%class.SkCanvas*, %class.SkTextBlob*, float, float, %class.SkPaint*)*, void (%class.SkCanvas*, %class.SkTextBlob*, float, float, %class.SkPaint*)** %80, i64 31
  %82 = load void (%class.SkCanvas*, %class.SkTextBlob*, float, float, %class.SkPaint*)*, void (%class.SkCanvas*, %class.SkTextBlob*, float, float, %class.SkPaint*)** %81, align 8
  call void %82(%class.SkCanvas* %0, %class.SkTextBlob* nonnull %1, float %2, float %3, %class.SkPaint* dereferenceable(72) %4) #15
  br label %83

83:                                               ; preds = %72, %78
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %67) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #15
  %84 = load %"struct.skia::tracing_internals::ScopedTracer::Data"*, %"struct.skia::tracing_internals::ScopedTracer::Data"** %23, align 8
  br label %85

85:                                               ; preds = %44, %41, %83
  %86 = phi %"struct.skia::tracing_internals::ScopedTracer::Data"* [ %42, %44 ], [ %42, %41 ], [ %84, %83 ]
  %87 = icmp eq %"struct.skia::tracing_internals::ScopedTracer::Data"* %86, null
  br i1 %87, label %101, label %88

88:                                               ; preds = %85
  %89 = load i8*, i8** %24, align 8
  %90 = load i8, i8* %89, align 1
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %101, label %92

92:                                               ; preds = %88
  %93 = call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %94 = load i8*, i8** %24, align 8
  %95 = load i8*, i8** %25, align 8
  %96 = load i64, i64* %26, align 8
  %97 = bitcast %class.SkEventTracer* %93 to void (%class.SkEventTracer*, i8*, i8*, i64)***
  %98 = load void (%class.SkEventTracer*, i8*, i8*, i64)**, void (%class.SkEventTracer*, i8*, i8*, i64)*** %97, align 8
  %99 = getelementptr inbounds void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %98, i64 5
  %100 = load void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %99, align 8
  call void %100(%class.SkEventTracer* %93, i8* %94, i8* %95, i64 %96) #15
  br label %101

101:                                              ; preds = %85, %88, %92
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %22) #15
  ret void
}

declare void @_ZN10SkTextBlob4IterC1ERKS_(%"class.SkTextBlob::Iter"*, %class.SkTextBlob* dereferenceable(28)) unnamed_addr #4

declare zeroext i1 @_ZN10SkTextBlob4Iter4nextEPNS0_3RunE(%"class.SkTextBlob::Iter"*, %"struct.SkTextBlob::Iter::Run"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas20onDrawVerticesObjectEPK10SkVertices11SkBlendModeRK7SkPaint(%class.SkCanvas*, %class.SkVertices*, i32, %class.SkPaint* dereferenceable(72)) unnamed_addr #0 align 2 {
  %5 = alloca %class.SkPaint, align 8
  %6 = alloca %class.SkPaint, align 8
  %7 = alloca %class.AutoLayerForImageFilter, align 8
  %8 = bitcast %class.SkPaint* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %8) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 bitcast (%class.SkPaint* @__const._ZL25clean_paint_for_drawImagePK7SkPaint.cleaned to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* nonnull %6, %class.SkPaint* dereferenceable(72) %3) #15
  call fastcc void @_ZL28clean_paint_for_drawVertices7SkPaint(%class.SkPaint* nonnull sret %5, %class.SkPaint* nonnull %6)
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %6) #15
  %9 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %1, i64 0, i32 6
  %10 = call zeroext i1 @_ZN8SkCanvas19internalQuickRejectERK6SkRectRK7SkPaintPK8SkMatrix(%class.SkCanvas* %0, %struct.SkRect* dereferenceable(16) %9, %class.SkPaint* nonnull dereferenceable(72) %5, %class.SkMatrix* null)
  br i1 %10, label %29, label %11

11:                                               ; preds = %4
  %12 = bitcast %class.AutoLayerForImageFilter* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %12) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 8 bitcast (%class.AutoLayerForImageFilter* @__const._ZN8SkCanvas21onDrawEdgeAAImageSet2EPKNS_13ImageSetEntryEiPK7SkPointPK8SkMatrixRK17SkSamplingOptionsPK7SkPaintNS_17SrcRectConstraintE.layer to i8*), i64 88, i1 false)
  call fastcc void @_ZN23AutoLayerForImageFilterC2EP8SkCanvasRK7SkPaintPK6SkRectN12_GLOBAL__N_117CheckForOverwriteENS0_21ShaderOverrideOpacityE(%class.AutoLayerForImageFilter* nonnull %7, %class.SkCanvas* %0, %class.SkPaint* nonnull dereferenceable(72) %5, %struct.SkRect* %9, i1 zeroext false, i32 0)
  %13 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %14 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %13, align 8
  %15 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %14, i64 0, i32 1
  %16 = load %class.SkBaseDevice*, %class.SkBaseDevice** %15, align 8
  %17 = getelementptr inbounds %class.AutoLayerForImageFilter, %class.AutoLayerForImageFilter* %7, i64 0, i32 0
  %18 = bitcast %class.SkBaseDevice* %16 to void (%class.SkBaseDevice*, %class.SkVertices*, i32, %class.SkPaint*)***
  %19 = load void (%class.SkBaseDevice*, %class.SkVertices*, i32, %class.SkPaint*)**, void (%class.SkBaseDevice*, %class.SkVertices*, i32, %class.SkPaint*)*** %18, align 8
  %20 = getelementptr inbounds void (%class.SkBaseDevice*, %class.SkVertices*, i32, %class.SkPaint*)*, void (%class.SkBaseDevice*, %class.SkVertices*, i32, %class.SkPaint*)** %19, i64 35
  %21 = load void (%class.SkBaseDevice*, %class.SkVertices*, i32, %class.SkPaint*)*, void (%class.SkBaseDevice*, %class.SkVertices*, i32, %class.SkPaint*)** %20, align 8
  call void %21(%class.SkBaseDevice* %16, %class.SkVertices* %1, i32 %2, %class.SkPaint* nonnull dereferenceable(72) %17) #15
  %22 = getelementptr inbounds %class.AutoLayerForImageFilter, %class.AutoLayerForImageFilter* %7, i64 0, i32 2
  %23 = load i8, i8* %22, align 8, !range !122
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %11
  %26 = getelementptr inbounds %class.AutoLayerForImageFilter, %class.AutoLayerForImageFilter* %7, i64 0, i32 1
  %27 = load %class.SkCanvas*, %class.SkCanvas** %26, align 8
  call void @_ZN8SkCanvas15internalRestoreEv(%class.SkCanvas* %27) #15
  br label %28

28:                                               ; preds = %11, %25
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %17) #15
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %12) #15
  br label %29

29:                                               ; preds = %4, %28
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %8) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZL28clean_paint_for_drawVertices7SkPaint(%class.SkPaint* noalias sret, %class.SkPaint*) unnamed_addr #0 {
  %3 = alloca %class.sk_sp.56, align 8
  %4 = alloca %class.sk_sp.54, align 8
  tail call void @_ZN7SkPaint8setStyleENS_5StyleE(%class.SkPaint* %1, i8 zeroext 0) #15
  %5 = getelementptr inbounds %class.sk_sp.56, %class.sk_sp.56* %3, i64 0, i32 0
  store %class.SkMaskFilter* null, %class.SkMaskFilter** %5, align 8
  call void @_ZN7SkPaint13setMaskFilterE5sk_spI12SkMaskFilterE(%class.SkPaint* %1, %class.sk_sp.56* nonnull %3) #15
  %6 = load %class.SkMaskFilter*, %class.SkMaskFilter** %5, align 8
  %7 = icmp eq %class.SkMaskFilter* %6, null
  br i1 %7, label %18, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw add i32* %9, i32 -1 acq_rel
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %18

12:                                               ; preds = %8
  %13 = bitcast %class.SkMaskFilter* %6 to %class.SkRefCntBase*
  %14 = bitcast %class.SkMaskFilter* %6 to void (%class.SkRefCntBase*)***
  %15 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %14, align 8
  %16 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %15, i64 2
  %17 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %16, align 8
  call void %17(%class.SkRefCntBase* nonnull %13) #15
  br label %18

18:                                               ; preds = %2, %8, %12
  %19 = getelementptr inbounds %class.sk_sp.54, %class.sk_sp.54* %4, i64 0, i32 0
  store %class.SkPathEffect* null, %class.SkPathEffect** %19, align 8
  call void @_ZN7SkPaint13setPathEffectE5sk_spI12SkPathEffectE(%class.SkPaint* %1, %class.sk_sp.54* nonnull %4) #15
  %20 = load %class.SkPathEffect*, %class.SkPathEffect** %19, align 8
  %21 = icmp eq %class.SkPathEffect* %20, null
  br i1 %21, label %32, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %20, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw add i32* %23, i32 -1 acq_rel
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %32

26:                                               ; preds = %22
  %27 = bitcast %class.SkPathEffect* %20 to %class.SkRefCntBase*
  %28 = bitcast %class.SkPathEffect* %20 to void (%class.SkRefCntBase*)***
  %29 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %28, align 8
  %30 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %29, i64 2
  %31 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %30, align 8
  call void %31(%class.SkRefCntBase* nonnull %27) #15
  br label %32

32:                                               ; preds = %18, %22, %26
  call void @_ZN7SkPaintC1EOS_(%class.SkPaint* %0, %class.SkPaint* dereferenceable(72) %1) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas9drawPatchEPK7SkPointPKjS2_11SkBlendModeRK7SkPaint(%class.SkCanvas*, %struct.SkPoint*, i32*, %struct.SkPoint*, i32, %class.SkPaint* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.skia::tracing_internals::ScopedTracer", align 8
  %8 = load atomic i64, i64* @_ZZN8SkCanvas9drawPatchEPK7SkPointPKjS2_11SkBlendModeRK7SkPaintE29trace_event_unique_atomic2313.0.0 monotonic, align 8
  %9 = inttoptr i64 %8 to i8*
  %10 = icmp eq i64 %8, 0
  br i1 %10, label %11, label %19

11:                                               ; preds = %6
  %12 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %13 = bitcast %class.SkEventTracer* %12 to i8* (%class.SkEventTracer*, i8*)***
  %14 = load i8* (%class.SkEventTracer*, i8*)**, i8* (%class.SkEventTracer*, i8*)*** %13, align 8
  %15 = getelementptr inbounds i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %14, i64 2
  %16 = load i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %15, align 8
  %17 = tail call i8* %16(%class.SkEventTracer* %12, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0)) #15
  %18 = ptrtoint i8* %17 to i64
  store atomic i64 %18, i64* @_ZZN8SkCanvas9drawPatchEPK7SkPointPKjS2_11SkBlendModeRK7SkPaintE29trace_event_unique_atomic2313.0.0 monotonic, align 8
  br label %19

19:                                               ; preds = %6, %11
  %20 = phi i8* [ %9, %6 ], [ %17, %11 ]
  %21 = bitcast %"class.skia::tracing_internals::ScopedTracer"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %21) #15
  %22 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %7, i64 0, i32 0
  %23 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %7, i64 0, i32 1, i32 0
  %24 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %7, i64 0, i32 1, i32 1
  %25 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %7, i64 0, i32 1, i32 2
  %26 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %7, i64 0, i32 1
  %27 = bitcast %"struct.skia::tracing_internals::ScopedTracer::Data"* %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false)
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* null, %"struct.skia::tracing_internals::ScopedTracer::Data"** %22, align 8
  %28 = load i8, i8* %20, align 1
  %29 = and i8 %28, 5
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %40, label %31

31:                                               ; preds = %19
  %32 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %33 = bitcast %class.SkEventTracer* %32 to i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)***
  %34 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)**, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*** %33, align 8
  %35 = getelementptr inbounds i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %34, i64 4
  %36 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %35, align 8
  %37 = tail call i64 %36(%class.SkEventTracer* %32, i8 signext 88, i8* %20, i8* getelementptr inbounds ([106 x i8], [106 x i8]* @__PRETTY_FUNCTION__._ZN8SkCanvas9drawPatchEPK7SkPointPKjS2_11SkBlendModeRK7SkPaint, i64 0, i64 0), i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #15
  %38 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %7, i64 0, i32 1
  %39 = getelementptr inbounds %"struct.skia::tracing_internals::ScopedTracer::Data", %"struct.skia::tracing_internals::ScopedTracer::Data"* %38, i64 0, i32 0
  store i8* %20, i8** %39, align 8
  store i8* getelementptr inbounds ([106 x i8], [106 x i8]* @__PRETTY_FUNCTION__._ZN8SkCanvas9drawPatchEPK7SkPointPKjS2_11SkBlendModeRK7SkPaint, i64 0, i64 0), i8** %24, align 8
  store i64 %37, i64* %25, align 8
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* %38, %"struct.skia::tracing_internals::ScopedTracer::Data"** %22, align 8
  br label %40

40:                                               ; preds = %19, %31
  %41 = phi %"struct.skia::tracing_internals::ScopedTracer::Data"* [ null, %19 ], [ %38, %31 ]
  %42 = icmp eq %struct.SkPoint* %1, null
  br i1 %42, label %49, label %43

43:                                               ; preds = %40
  %44 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*, %struct.SkPoint*, i32*, %struct.SkPoint*, i32, %class.SkPaint*)***
  %45 = load void (%class.SkCanvas*, %struct.SkPoint*, i32*, %struct.SkPoint*, i32, %class.SkPaint*)**, void (%class.SkCanvas*, %struct.SkPoint*, i32*, %struct.SkPoint*, i32, %class.SkPaint*)*** %44, align 8
  %46 = getelementptr inbounds void (%class.SkCanvas*, %struct.SkPoint*, i32*, %struct.SkPoint*, i32, %class.SkPaint*)*, void (%class.SkCanvas*, %struct.SkPoint*, i32*, %struct.SkPoint*, i32, %class.SkPaint*)** %45, i64 33
  %47 = load void (%class.SkCanvas*, %struct.SkPoint*, i32*, %struct.SkPoint*, i32, %class.SkPaint*)*, void (%class.SkCanvas*, %struct.SkPoint*, i32*, %struct.SkPoint*, i32, %class.SkPaint*)** %46, align 8
  call void %47(%class.SkCanvas* %0, %struct.SkPoint* nonnull %1, i32* %2, %struct.SkPoint* %3, i32 %4, %class.SkPaint* dereferenceable(72) %5) #15
  %48 = load %"struct.skia::tracing_internals::ScopedTracer::Data"*, %"struct.skia::tracing_internals::ScopedTracer::Data"** %22, align 8
  br label %49

49:                                               ; preds = %40, %43
  %50 = phi %"struct.skia::tracing_internals::ScopedTracer::Data"* [ %41, %40 ], [ %48, %43 ]
  %51 = icmp eq %"struct.skia::tracing_internals::ScopedTracer::Data"* %50, null
  br i1 %51, label %65, label %52

52:                                               ; preds = %49
  %53 = load i8*, i8** %23, align 8
  %54 = load i8, i8* %53, align 1
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %65, label %56

56:                                               ; preds = %52
  %57 = call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %58 = load i8*, i8** %23, align 8
  %59 = load i8*, i8** %24, align 8
  %60 = load i64, i64* %25, align 8
  %61 = bitcast %class.SkEventTracer* %57 to void (%class.SkEventTracer*, i8*, i8*, i64)***
  %62 = load void (%class.SkEventTracer*, i8*, i8*, i64)**, void (%class.SkEventTracer*, i8*, i8*, i64)*** %61, align 8
  %63 = getelementptr inbounds void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %62, i64 5
  %64 = load void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %63, align 8
  call void %64(%class.SkEventTracer* %57, i8* %58, i8* %59, i64 %60) #15
  br label %65

65:                                               ; preds = %49, %52, %56
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %21) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas11onDrawPatchEPK7SkPointPKjS2_11SkBlendModeRK7SkPaint(%class.SkCanvas*, %struct.SkPoint*, i32*, %struct.SkPoint*, i32, %class.SkPaint* dereferenceable(72)) unnamed_addr #0 align 2 {
  %7 = alloca %class.SkPaint, align 8
  %8 = alloca %class.SkPaint, align 8
  %9 = alloca %struct.SkRect, align 4
  %10 = alloca %class.AutoLayerForImageFilter, align 8
  %11 = bitcast %class.SkPaint* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %11) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 8 bitcast (%class.SkPaint* @__const._ZL25clean_paint_for_drawImagePK7SkPaint.cleaned to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* nonnull %8, %class.SkPaint* dereferenceable(72) %5) #15
  call fastcc void @_ZL28clean_paint_for_drawVertices7SkPaint(%class.SkPaint* nonnull sret %7, %class.SkPaint* nonnull %8)
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %8) #15
  %12 = bitcast %struct.SkRect* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #15
  %13 = bitcast %struct.SkRect* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %13, i8 -1, i64 16, i1 false)
  %14 = call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* nonnull %9, %struct.SkPoint* %1, i32 12) #15
  %15 = call zeroext i1 @_ZN8SkCanvas19internalQuickRejectERK6SkRectRK7SkPaintPK8SkMatrix(%class.SkCanvas* %0, %struct.SkRect* nonnull dereferenceable(16) %9, %class.SkPaint* nonnull dereferenceable(72) %7, %class.SkMatrix* null)
  br i1 %15, label %34, label %16

16:                                               ; preds = %6
  %17 = bitcast %class.AutoLayerForImageFilter* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %17) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %17, i8* align 8 bitcast (%class.AutoLayerForImageFilter* @__const._ZN8SkCanvas21onDrawEdgeAAImageSet2EPKNS_13ImageSetEntryEiPK7SkPointPK8SkMatrixRK17SkSamplingOptionsPK7SkPaintNS_17SrcRectConstraintE.layer to i8*), i64 88, i1 false)
  call fastcc void @_ZN23AutoLayerForImageFilterC2EP8SkCanvasRK7SkPaintPK6SkRectN12_GLOBAL__N_117CheckForOverwriteENS0_21ShaderOverrideOpacityE(%class.AutoLayerForImageFilter* nonnull %10, %class.SkCanvas* %0, %class.SkPaint* nonnull dereferenceable(72) %7, %struct.SkRect* nonnull %9, i1 zeroext false, i32 0)
  %18 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %19 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %18, align 8
  %20 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %19, i64 0, i32 1
  %21 = load %class.SkBaseDevice*, %class.SkBaseDevice** %20, align 8
  %22 = getelementptr inbounds %class.AutoLayerForImageFilter, %class.AutoLayerForImageFilter* %10, i64 0, i32 0
  %23 = bitcast %class.SkBaseDevice* %21 to void (%class.SkBaseDevice*, %struct.SkPoint*, i32*, %struct.SkPoint*, i32, %class.SkPaint*)***
  %24 = load void (%class.SkBaseDevice*, %struct.SkPoint*, i32*, %struct.SkPoint*, i32, %class.SkPaint*)**, void (%class.SkBaseDevice*, %struct.SkPoint*, i32*, %struct.SkPoint*, i32, %class.SkPaint*)*** %23, align 8
  %25 = getelementptr inbounds void (%class.SkBaseDevice*, %struct.SkPoint*, i32*, %struct.SkPoint*, i32, %class.SkPaint*)*, void (%class.SkBaseDevice*, %struct.SkPoint*, i32*, %struct.SkPoint*, i32, %class.SkPaint*)** %24, i64 37
  %26 = load void (%class.SkBaseDevice*, %struct.SkPoint*, i32*, %struct.SkPoint*, i32, %class.SkPaint*)*, void (%class.SkBaseDevice*, %struct.SkPoint*, i32*, %struct.SkPoint*, i32, %class.SkPaint*)** %25, align 8
  call void %26(%class.SkBaseDevice* %21, %struct.SkPoint* %1, i32* %2, %struct.SkPoint* %3, i32 %4, %class.SkPaint* nonnull dereferenceable(72) %22) #15
  %27 = getelementptr inbounds %class.AutoLayerForImageFilter, %class.AutoLayerForImageFilter* %10, i64 0, i32 2
  %28 = load i8, i8* %27, align 8, !range !122
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %16
  %31 = getelementptr inbounds %class.AutoLayerForImageFilter, %class.AutoLayerForImageFilter* %10, i64 0, i32 1
  %32 = load %class.SkCanvas*, %class.SkCanvas** %31, align 8
  call void @_ZN8SkCanvas15internalRestoreEv(%class.SkCanvas* %32) #15
  br label %33

33:                                               ; preds = %16, %30
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %22) #15
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %17) #15
  br label %34

34:                                               ; preds = %6, %33
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #15
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %7) #15
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %11) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas12drawDrawableEP10SkDrawableff(%class.SkCanvas*, %class.SkDrawable*, float, float) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.skia::tracing_internals::ScopedTracer", align 8
  %6 = alloca %class.SkMatrix, align 16
  %7 = load atomic i64, i64* @_ZZN8SkCanvas12drawDrawableEP10SkDrawableffE29trace_event_unique_atomic2341.0.0 monotonic, align 8
  %8 = inttoptr i64 %7 to i8*
  %9 = icmp eq i64 %7, 0
  br i1 %9, label %10, label %18

10:                                               ; preds = %4
  %11 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %12 = bitcast %class.SkEventTracer* %11 to i8* (%class.SkEventTracer*, i8*)***
  %13 = load i8* (%class.SkEventTracer*, i8*)**, i8* (%class.SkEventTracer*, i8*)*** %12, align 8
  %14 = getelementptr inbounds i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %13, i64 2
  %15 = load i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %14, align 8
  %16 = tail call i8* %15(%class.SkEventTracer* %11, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0)) #15
  %17 = ptrtoint i8* %16 to i64
  store atomic i64 %17, i64* @_ZZN8SkCanvas12drawDrawableEP10SkDrawableffE29trace_event_unique_atomic2341.0.0 monotonic, align 8
  br label %18

18:                                               ; preds = %4, %10
  %19 = phi i8* [ %8, %4 ], [ %16, %10 ]
  %20 = bitcast %"class.skia::tracing_internals::ScopedTracer"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #15
  %21 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %5, i64 0, i32 0
  %22 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %5, i64 0, i32 1, i32 0
  %23 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %5, i64 0, i32 1, i32 1
  %24 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %5, i64 0, i32 1, i32 2
  %25 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %5, i64 0, i32 1
  %26 = bitcast %"struct.skia::tracing_internals::ScopedTracer::Data"* %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 24, i1 false)
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* null, %"struct.skia::tracing_internals::ScopedTracer::Data"** %21, align 8
  %27 = load i8, i8* %19, align 1
  %28 = and i8 %27, 5
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %39, label %30

30:                                               ; preds = %18
  %31 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %32 = bitcast %class.SkEventTracer* %31 to i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)***
  %33 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)**, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*** %32, align 8
  %34 = getelementptr inbounds i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %33, i64 4
  %35 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %34, align 8
  %36 = tail call i64 %35(%class.SkEventTracer* %31, i8 signext 88, i8* %19, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @__PRETTY_FUNCTION__._ZN8SkCanvas12drawDrawableEP10SkDrawableff, i64 0, i64 0), i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #15
  %37 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %5, i64 0, i32 1
  %38 = getelementptr inbounds %"struct.skia::tracing_internals::ScopedTracer::Data", %"struct.skia::tracing_internals::ScopedTracer::Data"* %37, i64 0, i32 0
  store i8* %19, i8** %38, align 8
  store i8* getelementptr inbounds ([62 x i8], [62 x i8]* @__PRETTY_FUNCTION__._ZN8SkCanvas12drawDrawableEP10SkDrawableff, i64 0, i64 0), i8** %23, align 8
  store i64 %36, i64* %24, align 8
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* %37, %"struct.skia::tracing_internals::ScopedTracer::Data"** %21, align 8
  br label %39

39:                                               ; preds = %18, %30
  %40 = icmp eq %class.SkDrawable* %1, null
  br i1 %40, label %62, label %41

41:                                               ; preds = %39
  %42 = fcmp une float %2, 0.000000e+00
  %43 = fcmp une float %3, 0.000000e+00
  %44 = or i1 %42, %43
  br i1 %44, label %45, label %57

45:                                               ; preds = %41
  %46 = bitcast %class.SkMatrix* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %46) #15
  %47 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 1
  %48 = bitcast %class.SkMatrix* %6 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %48, align 16, !alias.scope !144
  %49 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 4
  %50 = bitcast float* %49 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %50, align 16, !alias.scope !144
  %51 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %51, align 16, !alias.scope !144
  store i32 16, i32* %47, align 4, !alias.scope !144
  %52 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12setTranslateEff(%class.SkMatrix* nonnull %6, float %2, float %3) #15
  %53 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*, %class.SkDrawable*, %class.SkMatrix*)***
  %54 = load void (%class.SkCanvas*, %class.SkDrawable*, %class.SkMatrix*)**, void (%class.SkCanvas*, %class.SkDrawable*, %class.SkMatrix*)*** %53, align 8
  %55 = getelementptr inbounds void (%class.SkCanvas*, %class.SkDrawable*, %class.SkMatrix*)*, void (%class.SkCanvas*, %class.SkDrawable*, %class.SkMatrix*)** %54, i64 43
  %56 = load void (%class.SkCanvas*, %class.SkDrawable*, %class.SkMatrix*)*, void (%class.SkCanvas*, %class.SkDrawable*, %class.SkMatrix*)** %55, align 8
  call void %56(%class.SkCanvas* %0, %class.SkDrawable* nonnull %1, %class.SkMatrix* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %46) #15
  br label %62

57:                                               ; preds = %41
  %58 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*, %class.SkDrawable*, %class.SkMatrix*)***
  %59 = load void (%class.SkCanvas*, %class.SkDrawable*, %class.SkMatrix*)**, void (%class.SkCanvas*, %class.SkDrawable*, %class.SkMatrix*)*** %58, align 8
  %60 = getelementptr inbounds void (%class.SkCanvas*, %class.SkDrawable*, %class.SkMatrix*)*, void (%class.SkCanvas*, %class.SkDrawable*, %class.SkMatrix*)** %59, i64 43
  %61 = load void (%class.SkCanvas*, %class.SkDrawable*, %class.SkMatrix*)*, void (%class.SkCanvas*, %class.SkDrawable*, %class.SkMatrix*)** %60, align 8
  call void %61(%class.SkCanvas* %0, %class.SkDrawable* nonnull %1, %class.SkMatrix* null) #15
  br label %62

62:                                               ; preds = %45, %57, %39
  %63 = load %"struct.skia::tracing_internals::ScopedTracer::Data"*, %"struct.skia::tracing_internals::ScopedTracer::Data"** %21, align 8
  %64 = icmp eq %"struct.skia::tracing_internals::ScopedTracer::Data"* %63, null
  br i1 %64, label %78, label %65

65:                                               ; preds = %62
  %66 = load i8*, i8** %22, align 8
  %67 = load i8, i8* %66, align 1
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %78, label %69

69:                                               ; preds = %65
  %70 = call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %71 = load i8*, i8** %22, align 8
  %72 = load i8*, i8** %23, align 8
  %73 = load i64, i64* %24, align 8
  %74 = bitcast %class.SkEventTracer* %70 to void (%class.SkEventTracer*, i8*, i8*, i64)***
  %75 = load void (%class.SkEventTracer*, i8*, i8*, i64)**, void (%class.SkEventTracer*, i8*, i8*, i64)*** %74, align 8
  %76 = getelementptr inbounds void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %75, i64 5
  %77 = load void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %76, align 8
  call void %77(%class.SkEventTracer* %70, i8* %71, i8* %72, i64 %73) #15
  br label %78

78:                                               ; preds = %62, %65, %69
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas12drawDrawableEP10SkDrawablePK8SkMatrix(%class.SkCanvas*, %class.SkDrawable*, %class.SkMatrix*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.skia::tracing_internals::ScopedTracer", align 8
  %5 = load atomic i64, i64* @_ZZN8SkCanvas12drawDrawableEP10SkDrawablePK8SkMatrixE29trace_event_unique_atomic2354.0.0 monotonic, align 8
  %6 = inttoptr i64 %5 to i8*
  %7 = icmp eq i64 %5, 0
  br i1 %7, label %8, label %16

8:                                                ; preds = %3
  %9 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %10 = bitcast %class.SkEventTracer* %9 to i8* (%class.SkEventTracer*, i8*)***
  %11 = load i8* (%class.SkEventTracer*, i8*)**, i8* (%class.SkEventTracer*, i8*)*** %10, align 8
  %12 = getelementptr inbounds i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %11, i64 2
  %13 = load i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %12, align 8
  %14 = tail call i8* %13(%class.SkEventTracer* %9, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0)) #15
  %15 = ptrtoint i8* %14 to i64
  store atomic i64 %15, i64* @_ZZN8SkCanvas12drawDrawableEP10SkDrawablePK8SkMatrixE29trace_event_unique_atomic2354.0.0 monotonic, align 8
  br label %16

16:                                               ; preds = %3, %8
  %17 = phi i8* [ %6, %3 ], [ %14, %8 ]
  %18 = bitcast %"class.skia::tracing_internals::ScopedTracer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %18) #15
  %19 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %4, i64 0, i32 0
  %20 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %4, i64 0, i32 1, i32 0
  %21 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %4, i64 0, i32 1, i32 1
  %22 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %4, i64 0, i32 1, i32 2
  %23 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %4, i64 0, i32 1
  %24 = bitcast %"struct.skia::tracing_internals::ScopedTracer::Data"* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 24, i1 false)
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* null, %"struct.skia::tracing_internals::ScopedTracer::Data"** %19, align 8
  %25 = load i8, i8* %17, align 1
  %26 = and i8 %25, 5
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %37, label %28

28:                                               ; preds = %16
  %29 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %30 = bitcast %class.SkEventTracer* %29 to i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)***
  %31 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)**, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*** %30, align 8
  %32 = getelementptr inbounds i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %31, i64 4
  %33 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %32, align 8
  %34 = tail call i64 %33(%class.SkEventTracer* %29, i8 signext 88, i8* %17, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN8SkCanvas12drawDrawableEP10SkDrawablePK8SkMatrix, i64 0, i64 0), i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #15
  %35 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %4, i64 0, i32 1
  %36 = getelementptr inbounds %"struct.skia::tracing_internals::ScopedTracer::Data", %"struct.skia::tracing_internals::ScopedTracer::Data"* %35, i64 0, i32 0
  store i8* %17, i8** %36, align 8
  store i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN8SkCanvas12drawDrawableEP10SkDrawablePK8SkMatrix, i64 0, i64 0), i8** %21, align 8
  store i64 %34, i64* %22, align 8
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* %35, %"struct.skia::tracing_internals::ScopedTracer::Data"** %19, align 8
  br label %37

37:                                               ; preds = %16, %28
  %38 = phi %"struct.skia::tracing_internals::ScopedTracer::Data"* [ null, %16 ], [ %35, %28 ]
  %39 = icmp eq %class.SkDrawable* %1, null
  br i1 %39, label %62, label %40

40:                                               ; preds = %37
  %41 = icmp eq %class.SkMatrix* %2, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %40
  %43 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = trunc i32 %44 to i8
  %46 = icmp slt i8 %45, 0
  br i1 %46, label %47, label %50

47:                                               ; preds = %42
  %48 = call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* nonnull %2) #15
  %49 = zext i8 %48 to i32
  store i32 %49, i32* %43, align 4
  br label %50

50:                                               ; preds = %42, %47
  %51 = phi i32 [ %49, %47 ], [ %44, %42 ]
  %52 = and i32 %51, 15
  %53 = icmp eq i32 %52, 0
  %54 = select i1 %53, %class.SkMatrix* null, %class.SkMatrix* %2
  br label %55

55:                                               ; preds = %50, %40
  %56 = phi %class.SkMatrix* [ null, %40 ], [ %54, %50 ]
  %57 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*, %class.SkDrawable*, %class.SkMatrix*)***
  %58 = load void (%class.SkCanvas*, %class.SkDrawable*, %class.SkMatrix*)**, void (%class.SkCanvas*, %class.SkDrawable*, %class.SkMatrix*)*** %57, align 8
  %59 = getelementptr inbounds void (%class.SkCanvas*, %class.SkDrawable*, %class.SkMatrix*)*, void (%class.SkCanvas*, %class.SkDrawable*, %class.SkMatrix*)** %58, i64 43
  %60 = load void (%class.SkCanvas*, %class.SkDrawable*, %class.SkMatrix*)*, void (%class.SkCanvas*, %class.SkDrawable*, %class.SkMatrix*)** %59, align 8
  call void %60(%class.SkCanvas* %0, %class.SkDrawable* nonnull %1, %class.SkMatrix* %56) #15
  %61 = load %"struct.skia::tracing_internals::ScopedTracer::Data"*, %"struct.skia::tracing_internals::ScopedTracer::Data"** %19, align 8
  br label %62

62:                                               ; preds = %37, %55
  %63 = phi %"struct.skia::tracing_internals::ScopedTracer::Data"* [ %38, %37 ], [ %61, %55 ]
  %64 = icmp eq %"struct.skia::tracing_internals::ScopedTracer::Data"* %63, null
  br i1 %64, label %78, label %65

65:                                               ; preds = %62
  %66 = load i8*, i8** %20, align 8
  %67 = load i8, i8* %66, align 1
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %78, label %69

69:                                               ; preds = %65
  %70 = call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %71 = load i8*, i8** %20, align 8
  %72 = load i8*, i8** %21, align 8
  %73 = load i64, i64* %22, align 8
  %74 = bitcast %class.SkEventTracer* %70 to void (%class.SkEventTracer*, i8*, i8*, i64)***
  %75 = load void (%class.SkEventTracer*, i8*, i8*, i64)**, void (%class.SkEventTracer*, i8*, i8*, i64)*** %74, align 8
  %76 = getelementptr inbounds void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %75, i64 5
  %77 = load void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %76, align 8
  call void %77(%class.SkEventTracer* %70, i8* %71, i8* %72, i64 %73) #15
  br label %78

78:                                               ; preds = %62, %65, %69
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas14onDrawDrawableEP10SkDrawablePK8SkMatrix(%class.SkCanvas*, %class.SkDrawable*, %class.SkMatrix*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 9
  %5 = load %class.SkSurface_Base*, %class.SkSurface_Base** %4, align 8
  %6 = icmp eq %class.SkSurface_Base* %5, null
  br i1 %6, label %8, label %7

7:                                                ; preds = %3
  tail call void @_ZN14SkSurface_Base11aboutToDrawEN9SkSurface17ContentChangeModeE(%class.SkSurface_Base* nonnull %5, i32 1) #15
  br label %8

8:                                                ; preds = %3, %7
  %9 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 5, i32 0
  %10 = load %class.SkBaseDevice*, %class.SkBaseDevice** %9, align 8
  %11 = bitcast %class.SkBaseDevice* %10 to void (%class.SkBaseDevice*, %class.SkDrawable*, %class.SkMatrix*, %class.SkCanvas*)***
  %12 = load void (%class.SkBaseDevice*, %class.SkDrawable*, %class.SkMatrix*, %class.SkCanvas*)**, void (%class.SkBaseDevice*, %class.SkDrawable*, %class.SkMatrix*, %class.SkCanvas*)*** %11, align 8
  %13 = getelementptr inbounds void (%class.SkBaseDevice*, %class.SkDrawable*, %class.SkMatrix*, %class.SkCanvas*)*, void (%class.SkBaseDevice*, %class.SkDrawable*, %class.SkMatrix*, %class.SkCanvas*)** %12, i64 42
  %14 = load void (%class.SkBaseDevice*, %class.SkDrawable*, %class.SkMatrix*, %class.SkCanvas*)*, void (%class.SkBaseDevice*, %class.SkDrawable*, %class.SkMatrix*, %class.SkCanvas*)** %13, align 8
  tail call void %14(%class.SkBaseDevice* %10, %class.SkDrawable* %1, %class.SkMatrix* %2, %class.SkCanvas* %0) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas12onDrawAtlas2EPK7SkImagePK9SkRSXformPK6SkRectPKji11SkBlendModeRK17SkSamplingOptionsS8_PK7SkPaint(%class.SkCanvas*, %class.SkImage*, %struct.SkRSXform*, %struct.SkRect*, i32*, i32, i32, %struct.SkSamplingOptions* dereferenceable(20), %struct.SkRect*, %class.SkPaint*) unnamed_addr #0 align 2 {
  %11 = alloca %class.sk_sp.54, align 8
  %12 = alloca %class.SkPaint, align 8
  %13 = alloca %class.SkPaint, align 8
  %14 = alloca %class.AutoLayerForImageFilter, align 8
  %15 = bitcast %class.SkPaint* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %15) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %15, i8* align 8 bitcast (%class.SkPaint* @__const._ZL25clean_paint_for_drawImagePK7SkPaint.cleaned to i8*), i64 72, i1 false)
  %16 = bitcast %class.sk_sp.54* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16)
  %17 = bitcast %class.SkPaint* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %17, i8* align 8 bitcast (%class.SkPaint* @__const._ZL25clean_paint_for_drawImagePK7SkPaint.cleaned to i8*), i64 72, i1 false) #15
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %13) #15
  %18 = icmp eq %class.SkPaint* %9, null
  br i1 %18, label %34, label %19

19:                                               ; preds = %10
  %20 = call dereferenceable(72) %class.SkPaint* @_ZN7SkPaintaSERKS_(%class.SkPaint* nonnull %13, %class.SkPaint* nonnull dereferenceable(72) %9) #15
  call void @_ZN7SkPaint8setStyleENS_5StyleE(%class.SkPaint* nonnull %13, i8 zeroext 0) #15
  %21 = getelementptr inbounds %class.sk_sp.54, %class.sk_sp.54* %11, i64 0, i32 0
  store %class.SkPathEffect* null, %class.SkPathEffect** %21, align 8, !noalias !147
  call void @_ZN7SkPaint13setPathEffectE5sk_spI12SkPathEffectE(%class.SkPaint* nonnull %13, %class.sk_sp.54* nonnull %11) #15
  %22 = load %class.SkPathEffect*, %class.SkPathEffect** %21, align 8, !noalias !147
  %23 = icmp eq %class.SkPathEffect* %22, null
  br i1 %23, label %34, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %22, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw add i32* %25, i32 -1 acq_rel
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %28, label %34

28:                                               ; preds = %24
  %29 = bitcast %class.SkPathEffect* %22 to %class.SkRefCntBase*
  %30 = bitcast %class.SkPathEffect* %22 to void (%class.SkRefCntBase*)***
  %31 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %30, align 8
  %32 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %31, i64 2
  %33 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %32, align 8
  call void %33(%class.SkRefCntBase* nonnull %29) #15
  br label %34

34:                                               ; preds = %10, %19, %24, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16)
  call fastcc void @_ZL28clean_paint_for_drawVertices7SkPaint(%class.SkPaint* nonnull sret %12, %class.SkPaint* nonnull %13)
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %13) #15
  %35 = icmp eq %struct.SkRect* %8, null
  br i1 %35, label %38, label %36

36:                                               ; preds = %34
  %37 = call zeroext i1 @_ZN8SkCanvas19internalQuickRejectERK6SkRectRK7SkPaintPK8SkMatrix(%class.SkCanvas* %0, %struct.SkRect* nonnull dereferenceable(16) %8, %class.SkPaint* nonnull dereferenceable(72) %12, %class.SkMatrix* null)
  br i1 %37, label %56, label %38

38:                                               ; preds = %34, %36
  %39 = bitcast %class.AutoLayerForImageFilter* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %39) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %39, i8* align 8 bitcast (%class.AutoLayerForImageFilter* @__const._ZN8SkCanvas21onDrawEdgeAAImageSet2EPKNS_13ImageSetEntryEiPK7SkPointPK8SkMatrixRK17SkSamplingOptionsPK7SkPaintNS_17SrcRectConstraintE.layer to i8*), i64 88, i1 false)
  call fastcc void @_ZN23AutoLayerForImageFilterC2EP8SkCanvasRK7SkPaintPK6SkRectN12_GLOBAL__N_117CheckForOverwriteENS0_21ShaderOverrideOpacityE(%class.AutoLayerForImageFilter* nonnull %14, %class.SkCanvas* %0, %class.SkPaint* nonnull dereferenceable(72) %12, %struct.SkRect* null, i1 zeroext false, i32 0)
  %40 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %41 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %40, align 8
  %42 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %41, i64 0, i32 1
  %43 = load %class.SkBaseDevice*, %class.SkBaseDevice** %42, align 8
  %44 = getelementptr inbounds %class.AutoLayerForImageFilter, %class.AutoLayerForImageFilter* %14, i64 0, i32 0
  %45 = bitcast %class.SkBaseDevice* %43 to void (%class.SkBaseDevice*, %class.SkImage*, %struct.SkRSXform*, %struct.SkRect*, i32*, i32, i32, %struct.SkSamplingOptions*, %class.SkPaint*)***
  %46 = load void (%class.SkBaseDevice*, %class.SkImage*, %struct.SkRSXform*, %struct.SkRect*, i32*, i32, i32, %struct.SkSamplingOptions*, %class.SkPaint*)**, void (%class.SkBaseDevice*, %class.SkImage*, %struct.SkRSXform*, %struct.SkRect*, i32*, i32, i32, %struct.SkSamplingOptions*, %class.SkPaint*)*** %45, align 8
  %47 = getelementptr inbounds void (%class.SkBaseDevice*, %class.SkImage*, %struct.SkRSXform*, %struct.SkRect*, i32*, i32, i32, %struct.SkSamplingOptions*, %class.SkPaint*)*, void (%class.SkBaseDevice*, %class.SkImage*, %struct.SkRSXform*, %struct.SkRect*, i32*, i32, i32, %struct.SkSamplingOptions*, %class.SkPaint*)** %46, i64 38
  %48 = load void (%class.SkBaseDevice*, %class.SkImage*, %struct.SkRSXform*, %struct.SkRect*, i32*, i32, i32, %struct.SkSamplingOptions*, %class.SkPaint*)*, void (%class.SkBaseDevice*, %class.SkImage*, %struct.SkRSXform*, %struct.SkRect*, i32*, i32, i32, %struct.SkSamplingOptions*, %class.SkPaint*)** %47, align 8
  call void %48(%class.SkBaseDevice* %43, %class.SkImage* %1, %struct.SkRSXform* %2, %struct.SkRect* %3, i32* %4, i32 %5, i32 %6, %struct.SkSamplingOptions* dereferenceable(20) %7, %class.SkPaint* nonnull dereferenceable(72) %44) #15
  %49 = getelementptr inbounds %class.AutoLayerForImageFilter, %class.AutoLayerForImageFilter* %14, i64 0, i32 2
  %50 = load i8, i8* %49, align 8, !range !122
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %38
  %53 = getelementptr inbounds %class.AutoLayerForImageFilter, %class.AutoLayerForImageFilter* %14, i64 0, i32 1
  %54 = load %class.SkCanvas*, %class.SkCanvas** %53, align 8
  call void @_ZN8SkCanvas15internalRestoreEv(%class.SkCanvas* %54) #15
  br label %55

55:                                               ; preds = %38, %52
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %44) #15
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %39) #15
  br label %56

56:                                               ; preds = %36, %55
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %12) #15
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %15) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas16onDrawAnnotationERK6SkRectPKcP6SkData(%class.SkCanvas* nocapture readonly, %struct.SkRect* dereferenceable(16), i8*, %class.SkData*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 9
  %6 = load %class.SkSurface_Base*, %class.SkSurface_Base** %5, align 8
  %7 = icmp eq %class.SkSurface_Base* %6, null
  br i1 %7, label %9, label %8

8:                                                ; preds = %4
  tail call void @_ZN14SkSurface_Base11aboutToDrawEN9SkSurface17ContentChangeModeE(%class.SkSurface_Base* nonnull %6, i32 1) #15
  br label %9

9:                                                ; preds = %4, %8
  %10 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %11 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %10, align 8
  %12 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %11, i64 0, i32 1
  %13 = load %class.SkBaseDevice*, %class.SkBaseDevice** %12, align 8
  %14 = bitcast %class.SkBaseDevice* %13 to void (%class.SkBaseDevice*, %struct.SkRect*, i8*, %class.SkData*)***
  %15 = load void (%class.SkBaseDevice*, %struct.SkRect*, i8*, %class.SkData*)**, void (%class.SkBaseDevice*, %struct.SkRect*, i8*, %class.SkData*)*** %14, align 8
  %16 = getelementptr inbounds void (%class.SkBaseDevice*, %struct.SkRect*, i8*, %class.SkData*)*, void (%class.SkBaseDevice*, %struct.SkRect*, i8*, %class.SkData*)** %15, i64 39
  %17 = load void (%class.SkBaseDevice*, %struct.SkRect*, i8*, %class.SkData*)*, void (%class.SkBaseDevice*, %struct.SkRect*, i8*, %class.SkData*)** %16, align 8
  tail call void %17(%class.SkBaseDevice* %13, %struct.SkRect* dereferenceable(16) %1, i8* %2, %class.SkData* %3) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas16onDrawEdgeAAQuadERK6SkRectPK7SkPointNS_11QuadAAFlagsERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode(%class.SkCanvas* nocapture readonly, %struct.SkRect* dereferenceable(16), %struct.SkPoint*, i32, %struct.SkRGBA4f* dereferenceable(16), i32) unnamed_addr #0 align 2 {
  %7 = alloca %class.SkPaint, align 8
  %8 = bitcast %class.SkPaint* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %8) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 bitcast (%class.SkPaint* @__const._ZL25clean_paint_for_drawImagePK7SkPaint.cleaned to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1ERK8SkRGBA4fIL11SkAlphaType3EEP12SkColorSpace(%class.SkPaint* nonnull %7, %struct.SkRGBA4f* dereferenceable(16) %4, %class.SkColorSpace* null) #15
  %9 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %7, i64 0, i32 8, i32 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = shl i32 %5, 10
  %12 = and i32 %11, 261120
  %13 = and i32 %10, -261121
  %14 = or i32 %13, %12
  store i32 %14, i32* %9, align 8
  %15 = call zeroext i1 @_ZN8SkCanvas19internalQuickRejectERK6SkRectRK7SkPaintPK8SkMatrix(%class.SkCanvas* %0, %struct.SkRect* dereferenceable(16) %1, %class.SkPaint* nonnull dereferenceable(72) %7, %class.SkMatrix* null)
  br i1 %15, label %30, label %16

16:                                               ; preds = %6
  %17 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 9
  %18 = load %class.SkSurface_Base*, %class.SkSurface_Base** %17, align 8
  %19 = icmp eq %class.SkSurface_Base* %18, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %16
  call void @_ZN14SkSurface_Base11aboutToDrawEN9SkSurface17ContentChangeModeE(%class.SkSurface_Base* nonnull %18, i32 1) #15
  br label %21

21:                                               ; preds = %16, %20
  %22 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %23 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %22, align 8
  %24 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %23, i64 0, i32 1
  %25 = load %class.SkBaseDevice*, %class.SkBaseDevice** %24, align 8
  %26 = bitcast %class.SkBaseDevice* %25 to void (%class.SkBaseDevice*, %struct.SkRect*, %struct.SkPoint*, i32, %struct.SkRGBA4f*, i32)***
  %27 = load void (%class.SkBaseDevice*, %struct.SkRect*, %struct.SkPoint*, i32, %struct.SkRGBA4f*, i32)**, void (%class.SkBaseDevice*, %struct.SkRect*, %struct.SkPoint*, i32, %struct.SkRGBA4f*, i32)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkBaseDevice*, %struct.SkRect*, %struct.SkPoint*, i32, %struct.SkRGBA4f*, i32)*, void (%class.SkBaseDevice*, %struct.SkRect*, %struct.SkPoint*, i32, %struct.SkRGBA4f*, i32)** %27, i64 40
  %29 = load void (%class.SkBaseDevice*, %struct.SkRect*, %struct.SkPoint*, i32, %struct.SkRGBA4f*, i32)*, void (%class.SkBaseDevice*, %struct.SkRect*, %struct.SkPoint*, i32, %struct.SkRGBA4f*, i32)** %28, align 8
  call void %29(%class.SkBaseDevice* %25, %struct.SkRect* dereferenceable(16) %1, %struct.SkPoint* %2, i32 %3, %struct.SkRGBA4f* dereferenceable(16) %4, i32 %5) #15
  br label %30

30:                                               ; preds = %6, %21
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %7) #15
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %8) #15
  ret void
}

declare void @_ZN7SkPaintC1ERK8SkRGBA4fIL11SkAlphaType3EEP12SkColorSpace(%class.SkPaint*, %struct.SkRGBA4f* dereferenceable(16), %class.SkColorSpace*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas21onDrawEdgeAAImageSet2EPKNS_13ImageSetEntryEiPK7SkPointPK8SkMatrixRK17SkSamplingOptionsPK7SkPaintNS_17SrcRectConstraintE(%class.SkCanvas*, %"struct.SkCanvas::ImageSetEntry"*, i32, %struct.SkPoint*, %class.SkMatrix*, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint*, i32) unnamed_addr #0 align 2 {
  %9 = alloca float, align 4
  %10 = alloca float, align 4
  %11 = alloca float, align 4
  %12 = alloca float, align 4
  %13 = alloca %class.sk_sp.54, align 8
  %14 = alloca %class.SkPaint, align 8
  %15 = alloca %struct.SkRect, align 4
  %16 = alloca %struct.SkRect, align 4
  %17 = alloca %class.AutoLayerForImageFilter, align 8
  %18 = icmp slt i32 %2, 1
  br i1 %18, label %137, label %19

19:                                               ; preds = %8
  %20 = bitcast %class.SkPaint* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %20) #15
  %21 = bitcast %class.sk_sp.54* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %20, i8* align 8 bitcast (%class.SkPaint* @__const._ZL25clean_paint_for_drawImagePK7SkPaint.cleaned to i8*), i64 72, i1 false) #15
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %14) #15
  %22 = icmp eq %class.SkPaint* %6, null
  br i1 %22, label %38, label %23

23:                                               ; preds = %19
  %24 = call dereferenceable(72) %class.SkPaint* @_ZN7SkPaintaSERKS_(%class.SkPaint* nonnull %14, %class.SkPaint* nonnull dereferenceable(72) %6) #15
  call void @_ZN7SkPaint8setStyleENS_5StyleE(%class.SkPaint* nonnull %14, i8 zeroext 0) #15
  %25 = getelementptr inbounds %class.sk_sp.54, %class.sk_sp.54* %13, i64 0, i32 0
  store %class.SkPathEffect* null, %class.SkPathEffect** %25, align 8, !noalias !150
  call void @_ZN7SkPaint13setPathEffectE5sk_spI12SkPathEffectE(%class.SkPaint* nonnull %14, %class.sk_sp.54* nonnull %13) #15
  %26 = load %class.SkPathEffect*, %class.SkPathEffect** %25, align 8, !noalias !150
  %27 = icmp eq %class.SkPathEffect* %26, null
  br i1 %27, label %38, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %26, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = atomicrmw add i32* %29, i32 -1 acq_rel
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %32, label %38

32:                                               ; preds = %28
  %33 = bitcast %class.SkPathEffect* %26 to %class.SkRefCntBase*
  %34 = bitcast %class.SkPathEffect* %26 to void (%class.SkRefCntBase*)***
  %35 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %34, align 8
  %36 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %35, i64 2
  %37 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %36, align 8
  call void %37(%class.SkRefCntBase* nonnull %33) #15
  br label %38

38:                                               ; preds = %19, %23, %28, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  %39 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %14, i64 0, i32 4, i32 0
  %40 = load %class.SkImageFilter*, %class.SkImageFilter** %39, align 8
  %41 = icmp ne %class.SkImageFilter* %40, null
  %42 = icmp eq i32 %2, 1
  %43 = or i1 %42, %41
  %44 = bitcast %struct.SkRect* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #15
  %45 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %15, i64 0, i32 0
  %46 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %15, i64 0, i32 1
  %47 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %15, i64 0, i32 2
  %48 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %15, i64 0, i32 3
  %49 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %1, i64 0, i32 2
  %50 = bitcast %struct.SkRect* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %44, i8* align 8 %50, i64 16, i1 false)
  %51 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %1, i64 0, i32 3
  %52 = load i32, i32* %51, align 8
  %53 = icmp sgt i32 %52, -1
  br i1 %53, label %54, label %58

54:                                               ; preds = %38
  %55 = sext i32 %52 to i64
  %56 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 %55
  %57 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* %56, %struct.SkRect* nonnull %15, %struct.SkRect* nonnull dereferenceable(16) %15, i32 1) #15
  br label %58

58:                                               ; preds = %54, %38
  %59 = icmp sgt i32 %2, 1
  %60 = and i1 %41, %59
  br i1 %60, label %61, label %114

61:                                               ; preds = %58
  %62 = bitcast %struct.SkRect* %16 to i8*
  %63 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %16, i64 0, i32 0
  %64 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %16, i64 0, i32 1
  %65 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %16, i64 0, i32 2
  %66 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %16, i64 0, i32 3
  %67 = bitcast float* %9 to i8*
  %68 = bitcast %struct.SkRect* %15 to i32*
  %69 = bitcast float* %10 to i8*
  %70 = bitcast float* %46 to i32*
  %71 = bitcast float* %11 to i8*
  %72 = bitcast float* %47 to i32*
  %73 = bitcast float* %12 to i8*
  %74 = bitcast float* %48 to i32*
  %75 = zext i32 %2 to i64
  br label %76

76:                                               ; preds = %87, %61
  %77 = phi i64 [ 1, %61 ], [ %112, %87 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %62) #15
  %78 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %1, i64 %77, i32 2
  %79 = bitcast %struct.SkRect* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %62, i8* align 8 %79, i64 16, i1 false)
  %80 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %1, i64 %77, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = icmp sgt i32 %81, -1
  br i1 %82, label %83, label %87

83:                                               ; preds = %76
  %84 = sext i32 %81 to i64
  %85 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 %84
  %86 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* %85, %struct.SkRect* nonnull %16, %struct.SkRect* nonnull dereferenceable(16) %16, i32 1) #15
  br label %87

87:                                               ; preds = %83, %76
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %67)
  %88 = load float, float* %63, align 4
  store float %88, float* %9, align 4
  %89 = load float, float* %45, align 4
  %90 = fcmp olt float %88, %89
  %91 = select i1 %90, float* %9, float* %45
  %92 = bitcast float* %91 to i32*
  %93 = load i32, i32* %92, align 4
  store i32 %93, i32* %68, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %67)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %69)
  %94 = load float, float* %64, align 4
  store float %94, float* %10, align 4
  %95 = load float, float* %46, align 4
  %96 = fcmp olt float %94, %95
  %97 = select i1 %96, float* %10, float* %46
  %98 = bitcast float* %97 to i32*
  %99 = load i32, i32* %98, align 4
  store i32 %99, i32* %70, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %69)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %71)
  %100 = load float, float* %65, align 4
  store float %100, float* %11, align 4
  %101 = load float, float* %47, align 4
  %102 = fcmp olt float %101, %100
  %103 = select i1 %102, float* %11, float* %47
  %104 = bitcast float* %103 to i32*
  %105 = load i32, i32* %104, align 4
  store i32 %105, i32* %72, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %71)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %73)
  %106 = load float, float* %66, align 4
  store float %106, float* %12, align 4
  %107 = load float, float* %48, align 4
  %108 = fcmp olt float %107, %106
  %109 = select i1 %108, float* %12, float* %48
  %110 = bitcast float* %109 to i32*
  %111 = load i32, i32* %110, align 4
  store i32 %111, i32* %74, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %73)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %62) #15
  %112 = add nuw nsw i64 %77, 1
  %113 = icmp eq i64 %112, %75
  br i1 %113, label %114, label %76

114:                                              ; preds = %87, %58
  br i1 %43, label %115, label %117

115:                                              ; preds = %114
  %116 = call zeroext i1 @_ZN8SkCanvas19internalQuickRejectERK6SkRectRK7SkPaintPK8SkMatrix(%class.SkCanvas* %0, %struct.SkRect* nonnull dereferenceable(16) %15, %class.SkPaint* nonnull dereferenceable(72) %14, %class.SkMatrix* null)
  br i1 %116, label %136, label %117

117:                                              ; preds = %115, %114
  %118 = bitcast %class.AutoLayerForImageFilter* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %118) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %118, i8* align 8 bitcast (%class.AutoLayerForImageFilter* @__const._ZN8SkCanvas21onDrawEdgeAAImageSet2EPKNS_13ImageSetEntryEiPK7SkPointPK8SkMatrixRK17SkSamplingOptionsPK7SkPaintNS_17SrcRectConstraintE.layer to i8*), i64 88, i1 false)
  %119 = select i1 %43, %struct.SkRect* %15, %struct.SkRect* null
  call fastcc void @_ZN23AutoLayerForImageFilterC2EP8SkCanvasRK7SkPaintPK6SkRectN12_GLOBAL__N_117CheckForOverwriteENS0_21ShaderOverrideOpacityE(%class.AutoLayerForImageFilter* nonnull %17, %class.SkCanvas* %0, %class.SkPaint* nonnull dereferenceable(72) %14, %struct.SkRect* %119, i1 zeroext false, i32 0)
  %120 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %121 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %120, align 8
  %122 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %121, i64 0, i32 1
  %123 = load %class.SkBaseDevice*, %class.SkBaseDevice** %122, align 8
  %124 = getelementptr inbounds %class.AutoLayerForImageFilter, %class.AutoLayerForImageFilter* %17, i64 0, i32 0
  %125 = bitcast %class.SkBaseDevice* %123 to void (%class.SkBaseDevice*, %"struct.SkCanvas::ImageSetEntry"*, i32, %struct.SkPoint*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)***
  %126 = load void (%class.SkBaseDevice*, %"struct.SkCanvas::ImageSetEntry"*, i32, %struct.SkPoint*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)**, void (%class.SkBaseDevice*, %"struct.SkCanvas::ImageSetEntry"*, i32, %struct.SkPoint*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)*** %125, align 8
  %127 = getelementptr inbounds void (%class.SkBaseDevice*, %"struct.SkCanvas::ImageSetEntry"*, i32, %struct.SkPoint*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)*, void (%class.SkBaseDevice*, %"struct.SkCanvas::ImageSetEntry"*, i32, %struct.SkPoint*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)** %126, i64 41
  %128 = load void (%class.SkBaseDevice*, %"struct.SkCanvas::ImageSetEntry"*, i32, %struct.SkPoint*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)*, void (%class.SkBaseDevice*, %"struct.SkCanvas::ImageSetEntry"*, i32, %struct.SkPoint*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)** %127, align 8
  call void %128(%class.SkBaseDevice* %123, %"struct.SkCanvas::ImageSetEntry"* %1, i32 %2, %struct.SkPoint* %3, %class.SkMatrix* %4, %struct.SkSamplingOptions* dereferenceable(20) %5, %class.SkPaint* nonnull dereferenceable(72) %124, i32 %7) #15
  %129 = getelementptr inbounds %class.AutoLayerForImageFilter, %class.AutoLayerForImageFilter* %17, i64 0, i32 2
  %130 = load i8, i8* %129, align 8, !range !122
  %131 = icmp eq i8 %130, 0
  br i1 %131, label %135, label %132

132:                                              ; preds = %117
  %133 = getelementptr inbounds %class.AutoLayerForImageFilter, %class.AutoLayerForImageFilter* %17, i64 0, i32 1
  %134 = load %class.SkCanvas*, %class.SkCanvas** %133, align 8
  call void @_ZN8SkCanvas15internalRestoreEv(%class.SkCanvas* %134) #15
  br label %135

135:                                              ; preds = %117, %132
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %124) #15
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %118) #15
  br label %136

136:                                              ; preds = %115, %135
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #15
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %14) #15
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %20) #15
  br label %137

137:                                              ; preds = %8, %136
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas9drawColorERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode(%class.SkCanvas*, %struct.SkRGBA4f* dereferenceable(16), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.SkPaint, align 8
  %5 = bitcast %class.SkPaint* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %5) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 bitcast (%class.SkPaint* @__const._ZL25clean_paint_for_drawImagePK7SkPaint.cleaned to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %4) #15
  call void @_ZN7SkPaint8setColorERK8SkRGBA4fIL11SkAlphaType3EEP12SkColorSpace(%class.SkPaint* nonnull %4, %struct.SkRGBA4f* dereferenceable(16) %1, %class.SkColorSpace* null) #15
  %6 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %4, i64 0, i32 8, i32 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %2, 10
  %9 = and i32 %8, 261120
  %10 = and i32 %7, -261121
  %11 = or i32 %10, %9
  store i32 %11, i32* %6, align 8
  call void @_ZN8SkCanvas9drawPaintERK7SkPaint(%class.SkCanvas* %0, %class.SkPaint* nonnull dereferenceable(72) %4)
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %5) #15
  ret void
}

declare void @_ZN7SkPaint8setColorERK8SkRGBA4fIL11SkAlphaType3EEP12SkColorSpace(%class.SkPaint*, %struct.SkRGBA4f* dereferenceable(16), %class.SkColorSpace*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas9drawPointEffRK7SkPaint(%class.SkCanvas*, float, float, %class.SkPaint* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %struct.SkPoint, align 4
  %6 = bitcast %struct.SkPoint* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #15
  %7 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %5, i64 0, i32 0
  %8 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %5, i64 0, i32 1
  store float %1, float* %7, align 4
  store float %2, float* %8, align 4
  call void @_ZN8SkCanvas10drawPointsENS_9PointModeEmPK7SkPointRK7SkPaint(%class.SkCanvas* %0, i32 0, i64 1, %struct.SkPoint* nonnull %5, %class.SkPaint* dereferenceable(72) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas8drawLineEffffRK7SkPaint(%class.SkCanvas*, float, float, float, float, %class.SkPaint* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %7 = alloca [2 x %struct.SkPoint], align 16
  %8 = bitcast [2 x %struct.SkPoint]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #15
  %9 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %7, i64 0, i64 0
  %10 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %7, i64 0, i64 0, i32 0
  %11 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %7, i64 0, i64 0, i32 1
  %12 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %7, i64 0, i64 1, i32 0
  %13 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %7, i64 0, i64 1, i32 1
  store float %1, float* %10, align 16
  store float %2, float* %11, align 4
  store float %3, float* %12, align 8
  store float %4, float* %13, align 4
  call void @_ZN8SkCanvas10drawPointsENS_9PointModeEmPK7SkPointRK7SkPaint(%class.SkCanvas* %0, i32 1, i64 2, %struct.SkPoint* nonnull %9, %class.SkPaint* dereferenceable(72) %5)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas10drawCircleEfffRK7SkPaint(%class.SkCanvas*, float, float, float, %class.SkPaint* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca <4 x float>, align 16
  %7 = bitcast <4 x float>* %6 to %struct.SkRect*
  %8 = fcmp olt float %3, 0.000000e+00
  %9 = select i1 %8, float 0.000000e+00, float %3
  %10 = bitcast <4 x float>* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #15
  %11 = insertelement <2 x float> undef, float %1, i32 0
  %12 = insertelement <2 x float> %11, float %2, i32 1
  %13 = shufflevector <2 x float> %12, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %14 = insertelement <4 x float> undef, float %9, i32 0
  %15 = shufflevector <4 x float> %14, <4 x float> undef, <4 x i32> zeroinitializer
  %16 = fsub <4 x float> %13, %15
  %17 = fadd <4 x float> %13, %15
  %18 = shufflevector <4 x float> %16, <4 x float> %17, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  store <4 x float> %18, <4 x float>* %6, align 16
  call void @_ZN8SkCanvas8drawOvalERK6SkRectRK7SkPaint(%class.SkCanvas* %0, %struct.SkRect* nonnull dereferenceable(16) %7, %class.SkPaint* dereferenceable(72) %4)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas13drawRoundRectERK6SkRectffRK7SkPaint(%class.SkCanvas*, %struct.SkRect* dereferenceable(16), float, float, %class.SkPaint* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %class.SkRRect, align 4
  %7 = fcmp ogt float %2, 0.000000e+00
  %8 = fcmp ogt float %3, 0.000000e+00
  %9 = and i1 %7, %8
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  %11 = bitcast %class.SkRRect* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %11) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %11, i8 0, i64 52, i1 false) #15
  call void @_ZN7SkRRect9setRectXYERK6SkRectff(%class.SkRRect* nonnull %6, %struct.SkRect* dereferenceable(16) %1, float %2, float %3) #15
  call void @_ZN8SkCanvas9drawRRectERK7SkRRectRK7SkPaint(%class.SkCanvas* %0, %class.SkRRect* nonnull dereferenceable(52) %6, %class.SkPaint* dereferenceable(72) %4)
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %11) #15
  br label %13

12:                                               ; preds = %5
  tail call void @_ZN8SkCanvas8drawRectERK6SkRectRK7SkPaint(%class.SkCanvas* %0, %struct.SkRect* dereferenceable(16) %1, %class.SkPaint* dereferenceable(72) %4)
  br label %13

13:                                               ; preds = %12, %10
  ret void
}

declare void @_ZN7SkRRect9setRectXYERK6SkRectff(%class.SkRRect*, %struct.SkRect* dereferenceable(16), float, float) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas7drawArcERK6SkRectffbRK7SkPaint(%class.SkCanvas*, %struct.SkRect* dereferenceable(16), float, float, i1 zeroext, %class.SkPaint* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.skia::tracing_internals::ScopedTracer", align 8
  %8 = load atomic i64, i64* @_ZZN8SkCanvas7drawArcERK6SkRectffbRK7SkPaintE29trace_event_unique_atomic2496.0.0 monotonic, align 8
  %9 = inttoptr i64 %8 to i8*
  %10 = icmp eq i64 %8, 0
  br i1 %10, label %11, label %19

11:                                               ; preds = %6
  %12 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %13 = bitcast %class.SkEventTracer* %12 to i8* (%class.SkEventTracer*, i8*)***
  %14 = load i8* (%class.SkEventTracer*, i8*)**, i8* (%class.SkEventTracer*, i8*)*** %13, align 8
  %15 = getelementptr inbounds i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %14, i64 2
  %16 = load i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %15, align 8
  %17 = tail call i8* %16(%class.SkEventTracer* %12, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0)) #15
  %18 = ptrtoint i8* %17 to i64
  store atomic i64 %18, i64* @_ZZN8SkCanvas7drawArcERK6SkRectffbRK7SkPaintE29trace_event_unique_atomic2496.0.0 monotonic, align 8
  br label %19

19:                                               ; preds = %6, %11
  %20 = phi i8* [ %9, %6 ], [ %17, %11 ]
  %21 = bitcast %"class.skia::tracing_internals::ScopedTracer"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %21) #15
  %22 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %7, i64 0, i32 0
  %23 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %7, i64 0, i32 1, i32 0
  %24 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %7, i64 0, i32 1, i32 1
  %25 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %7, i64 0, i32 1, i32 2
  %26 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %7, i64 0, i32 1
  %27 = bitcast %"struct.skia::tracing_internals::ScopedTracer::Data"* %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false)
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* null, %"struct.skia::tracing_internals::ScopedTracer::Data"** %22, align 8
  %28 = load i8, i8* %20, align 1
  %29 = and i8 %28, 5
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %40, label %31

31:                                               ; preds = %19
  %32 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %33 = bitcast %class.SkEventTracer* %32 to i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)***
  %34 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)**, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*** %33, align 8
  %35 = getelementptr inbounds i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %34, i64 4
  %36 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %35, align 8
  %37 = tail call i64 %36(%class.SkEventTracer* %32, i8 signext 88, i8* %20, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__._ZN8SkCanvas7drawArcERK6SkRectffbRK7SkPaint, i64 0, i64 0), i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #15
  %38 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %7, i64 0, i32 1
  %39 = getelementptr inbounds %"struct.skia::tracing_internals::ScopedTracer::Data", %"struct.skia::tracing_internals::ScopedTracer::Data"* %38, i64 0, i32 0
  store i8* %20, i8** %39, align 8
  store i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__._ZN8SkCanvas7drawArcERK6SkRectffbRK7SkPaint, i64 0, i64 0), i8** %24, align 8
  store i64 %37, i64* %25, align 8
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* %38, %"struct.skia::tracing_internals::ScopedTracer::Data"** %22, align 8
  br label %40

40:                                               ; preds = %19, %31
  %41 = phi %"struct.skia::tracing_internals::ScopedTracer::Data"* [ null, %19 ], [ %38, %31 ]
  %42 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 0
  %43 = load float, float* %42, align 4
  %44 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 2
  %45 = load float, float* %44, align 4
  %46 = fcmp olt float %43, %45
  br i1 %46, label %47, label %61

47:                                               ; preds = %40
  %48 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 1
  %49 = load float, float* %48, align 4
  %50 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 3
  %51 = load float, float* %50, align 4
  %52 = fcmp olt float %49, %51
  %53 = fcmp une float %3, 0.000000e+00
  %54 = and i1 %53, %52
  br i1 %54, label %55, label %61

55:                                               ; preds = %47
  %56 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*, %struct.SkRect*, float, float, i1, %class.SkPaint*)***
  %57 = load void (%class.SkCanvas*, %struct.SkRect*, float, float, i1, %class.SkPaint*)**, void (%class.SkCanvas*, %struct.SkRect*, float, float, i1, %class.SkPaint*)*** %56, align 8
  %58 = getelementptr inbounds void (%class.SkCanvas*, %struct.SkRect*, float, float, i1, %class.SkPaint*)*, void (%class.SkCanvas*, %struct.SkRect*, float, float, i1, %class.SkPaint*)** %57, i64 28
  %59 = load void (%class.SkCanvas*, %struct.SkRect*, float, float, i1, %class.SkPaint*)*, void (%class.SkCanvas*, %struct.SkRect*, float, float, i1, %class.SkPaint*)** %58, align 8
  call void %59(%class.SkCanvas* %0, %struct.SkRect* dereferenceable(16) %1, float %2, float %3, i1 zeroext %4, %class.SkPaint* dereferenceable(72) %5) #15
  %60 = load %"struct.skia::tracing_internals::ScopedTracer::Data"*, %"struct.skia::tracing_internals::ScopedTracer::Data"** %22, align 8
  br label %61

61:                                               ; preds = %40, %47, %55
  %62 = phi %"struct.skia::tracing_internals::ScopedTracer::Data"* [ %41, %40 ], [ %41, %47 ], [ %60, %55 ]
  %63 = icmp eq %"struct.skia::tracing_internals::ScopedTracer::Data"* %62, null
  br i1 %63, label %77, label %64

64:                                               ; preds = %61
  %65 = load i8*, i8** %23, align 8
  %66 = load i8, i8* %65, align 1
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %77, label %68

68:                                               ; preds = %64
  %69 = call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %70 = load i8*, i8** %23, align 8
  %71 = load i8*, i8** %24, align 8
  %72 = load i64, i64* %25, align 8
  %73 = bitcast %class.SkEventTracer* %69 to void (%class.SkEventTracer*, i8*, i8*, i64)***
  %74 = load void (%class.SkEventTracer*, i8*, i8*, i64)**, void (%class.SkEventTracer*, i8*, i8*, i64)*** %73, align 8
  %75 = getelementptr inbounds void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %74, i64 5
  %76 = load void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %75, align 8
  call void %76(%class.SkEventTracer* %69, i8* %70, i8* %71, i64 %72) #15
  br label %77

77:                                               ; preds = %61, %64, %68
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %21) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas11drawPictureEPK9SkPicturePK8SkMatrixPK7SkPaint(%class.SkCanvas*, %class.SkPicture*, %class.SkMatrix*, %class.SkPaint*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.skia::tracing_internals::ScopedTracer", align 8
  %6 = alloca %class.SkAutoCanvasMatrixPaint, align 8
  %7 = alloca { <2 x float>, <2 x float> }, align 8
  %8 = bitcast { <2 x float>, <2 x float> }* %7 to %struct.SkRect*
  %9 = load atomic i64, i64* @_ZZN8SkCanvas11drawPictureEPK9SkPicturePK8SkMatrixPK7SkPaintE29trace_event_unique_atomic2513.0.0 monotonic, align 8
  %10 = inttoptr i64 %9 to i8*
  %11 = icmp eq i64 %9, 0
  br i1 %11, label %12, label %20

12:                                               ; preds = %4
  %13 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %14 = bitcast %class.SkEventTracer* %13 to i8* (%class.SkEventTracer*, i8*)***
  %15 = load i8* (%class.SkEventTracer*, i8*)**, i8* (%class.SkEventTracer*, i8*)*** %14, align 8
  %16 = getelementptr inbounds i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %15, i64 2
  %17 = load i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %16, align 8
  %18 = tail call i8* %17(%class.SkEventTracer* %13, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0)) #15
  %19 = ptrtoint i8* %18 to i64
  store atomic i64 %19, i64* @_ZZN8SkCanvas11drawPictureEPK9SkPicturePK8SkMatrixPK7SkPaintE29trace_event_unique_atomic2513.0.0 monotonic, align 8
  br label %20

20:                                               ; preds = %4, %12
  %21 = phi i8* [ %10, %4 ], [ %18, %12 ]
  %22 = bitcast %"class.skia::tracing_internals::ScopedTracer"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %22) #15
  %23 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %5, i64 0, i32 0
  %24 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %5, i64 0, i32 1, i32 0
  %25 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %5, i64 0, i32 1, i32 1
  %26 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %5, i64 0, i32 1, i32 2
  %27 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %5, i64 0, i32 1
  %28 = bitcast %"struct.skia::tracing_internals::ScopedTracer::Data"* %27 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 24, i1 false)
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* null, %"struct.skia::tracing_internals::ScopedTracer::Data"** %23, align 8
  %29 = load i8, i8* %21, align 1
  %30 = and i8 %29, 5
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %41, label %32

32:                                               ; preds = %20
  %33 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %34 = bitcast %class.SkEventTracer* %33 to i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)***
  %35 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)**, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*** %34, align 8
  %36 = getelementptr inbounds i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %35, i64 4
  %37 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %36, align 8
  %38 = tail call i64 %37(%class.SkEventTracer* %33, i8 signext 88, i8* %21, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @__PRETTY_FUNCTION__._ZN8SkCanvas11drawPictureEPK9SkPicturePK8SkMatrixPK7SkPaint, i64 0, i64 0), i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #15
  %39 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %5, i64 0, i32 1
  %40 = getelementptr inbounds %"struct.skia::tracing_internals::ScopedTracer::Data", %"struct.skia::tracing_internals::ScopedTracer::Data"* %39, i64 0, i32 0
  store i8* %21, i8** %40, align 8
  store i8* getelementptr inbounds ([81 x i8], [81 x i8]* @__PRETTY_FUNCTION__._ZN8SkCanvas11drawPictureEPK9SkPicturePK8SkMatrixPK7SkPaint, i64 0, i64 0), i8** %25, align 8
  store i64 %38, i64* %26, align 8
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* %39, %"struct.skia::tracing_internals::ScopedTracer::Data"** %23, align 8
  br label %41

41:                                               ; preds = %20, %32
  %42 = icmp eq %class.SkPicture* %1, null
  br i1 %42, label %88, label %43

43:                                               ; preds = %41
  %44 = icmp eq %class.SkMatrix* %2, null
  br i1 %44, label %58, label %45

45:                                               ; preds = %43
  %46 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = trunc i32 %47 to i8
  %49 = icmp slt i8 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %45
  %51 = call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* nonnull %2) #15
  %52 = zext i8 %51 to i32
  store i32 %52, i32* %46, align 4
  br label %53

53:                                               ; preds = %45, %50
  %54 = phi i32 [ %52, %50 ], [ %47, %45 ]
  %55 = and i32 %54, 15
  %56 = icmp eq i32 %55, 0
  %57 = select i1 %56, %class.SkMatrix* null, %class.SkMatrix* %2
  br label %58

58:                                               ; preds = %53, %43
  %59 = phi %class.SkMatrix* [ null, %43 ], [ %57, %53 ]
  %60 = bitcast %class.SkPicture* %1 to i32 (%class.SkPicture*, i1)***
  %61 = load i32 (%class.SkPicture*, i1)**, i32 (%class.SkPicture*, i1)*** %60, align 8
  %62 = getelementptr inbounds i32 (%class.SkPicture*, i1)*, i32 (%class.SkPicture*, i1)** %61, i64 5
  %63 = load i32 (%class.SkPicture*, i1)*, i32 (%class.SkPicture*, i1)** %62, align 8
  %64 = call i32 %63(%class.SkPicture* nonnull %1, i1 zeroext false) #15
  %65 = icmp slt i32 %64, 2
  br i1 %65, label %66, label %83

66:                                               ; preds = %58
  %67 = bitcast %class.SkAutoCanvasMatrixPaint* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %67) #15
  %68 = bitcast { <2 x float>, <2 x float> }* %7 to i8*
  %69 = bitcast %class.SkAutoCanvasMatrixPaint* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %68) #15
  %70 = bitcast %class.SkPicture* %1 to { <2 x float>, <2 x float> } (%class.SkPicture*)***
  %71 = load { <2 x float>, <2 x float> } (%class.SkPicture*)**, { <2 x float>, <2 x float> } (%class.SkPicture*)*** %70, align 8
  %72 = getelementptr inbounds { <2 x float>, <2 x float> } (%class.SkPicture*)*, { <2 x float>, <2 x float> } (%class.SkPicture*)** %71, i64 4
  %73 = load { <2 x float>, <2 x float> } (%class.SkPicture*)*, { <2 x float>, <2 x float> } (%class.SkPicture*)** %72, align 8
  %74 = call { <2 x float>, <2 x float> } %73(%class.SkPicture* nonnull %1) #15
  %75 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 0
  %76 = extractvalue { <2 x float>, <2 x float> } %74, 0
  store <2 x float> %76, <2 x float>* %75, align 8
  %77 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 1
  %78 = extractvalue { <2 x float>, <2 x float> } %74, 1
  store <2 x float> %78, <2 x float>* %77, align 8
  call void @_ZN23SkAutoCanvasMatrixPaintC1EP8SkCanvasPK8SkMatrixPK7SkPaintRK6SkRect(%class.SkAutoCanvasMatrixPaint* nonnull %6, %class.SkCanvas* %0, %class.SkMatrix* %59, %class.SkPaint* %3, %struct.SkRect* nonnull dereferenceable(16) %8) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %68) #15
  %79 = bitcast %class.SkPicture* %1 to void (%class.SkPicture*, %class.SkCanvas*, %"class.SkPicture::AbortCallback"*)***
  %80 = load void (%class.SkPicture*, %class.SkCanvas*, %"class.SkPicture::AbortCallback"*)**, void (%class.SkPicture*, %class.SkCanvas*, %"class.SkPicture::AbortCallback"*)*** %79, align 8
  %81 = getelementptr inbounds void (%class.SkPicture*, %class.SkCanvas*, %"class.SkPicture::AbortCallback"*)*, void (%class.SkPicture*, %class.SkCanvas*, %"class.SkPicture::AbortCallback"*)** %80, i64 3
  %82 = load void (%class.SkPicture*, %class.SkCanvas*, %"class.SkPicture::AbortCallback"*)*, void (%class.SkPicture*, %class.SkCanvas*, %"class.SkPicture::AbortCallback"*)** %81, align 8
  call void %82(%class.SkPicture* nonnull %1, %class.SkCanvas* %0, %"class.SkPicture::AbortCallback"* null) #15
  call void @_ZN23SkAutoCanvasMatrixPaintD1Ev(%class.SkAutoCanvasMatrixPaint* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %67) #15
  br label %88

83:                                               ; preds = %58
  %84 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*, %class.SkPicture*, %class.SkMatrix*, %class.SkPaint*)***
  %85 = load void (%class.SkCanvas*, %class.SkPicture*, %class.SkMatrix*, %class.SkPaint*)**, void (%class.SkCanvas*, %class.SkPicture*, %class.SkMatrix*, %class.SkPaint*)*** %84, align 8
  %86 = getelementptr inbounds void (%class.SkCanvas*, %class.SkPicture*, %class.SkMatrix*, %class.SkPaint*)*, void (%class.SkCanvas*, %class.SkPicture*, %class.SkMatrix*, %class.SkPaint*)** %85, i64 44
  %87 = load void (%class.SkCanvas*, %class.SkPicture*, %class.SkMatrix*, %class.SkPaint*)*, void (%class.SkCanvas*, %class.SkPicture*, %class.SkMatrix*, %class.SkPaint*)** %86, align 8
  call void %87(%class.SkCanvas* %0, %class.SkPicture* nonnull %1, %class.SkMatrix* %59, %class.SkPaint* %3) #15
  br label %88

88:                                               ; preds = %66, %83, %41
  %89 = load %"struct.skia::tracing_internals::ScopedTracer::Data"*, %"struct.skia::tracing_internals::ScopedTracer::Data"** %23, align 8
  %90 = icmp eq %"struct.skia::tracing_internals::ScopedTracer::Data"* %89, null
  br i1 %90, label %104, label %91

91:                                               ; preds = %88
  %92 = load i8*, i8** %24, align 8
  %93 = load i8, i8* %92, align 1
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %104, label %95

95:                                               ; preds = %91
  %96 = call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %97 = load i8*, i8** %24, align 8
  %98 = load i8*, i8** %25, align 8
  %99 = load i64, i64* %26, align 8
  %100 = bitcast %class.SkEventTracer* %96 to void (%class.SkEventTracer*, i8*, i8*, i64)***
  %101 = load void (%class.SkEventTracer*, i8*, i8*, i64)**, void (%class.SkEventTracer*, i8*, i8*, i64)*** %100, align 8
  %102 = getelementptr inbounds void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %101, i64 5
  %103 = load void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %102, align 8
  call void %103(%class.SkEventTracer* %96, i8* %97, i8* %98, i64 %99) #15
  br label %104

104:                                              ; preds = %88, %91, %95
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %22) #15
  ret void
}

declare void @_ZN23SkAutoCanvasMatrixPaintC1EP8SkCanvasPK8SkMatrixPK7SkPaintRK6SkRect(%class.SkAutoCanvasMatrixPaint*, %class.SkCanvas*, %class.SkMatrix*, %class.SkPaint*, %struct.SkRect* dereferenceable(16)) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN23SkAutoCanvasMatrixPaintD1Ev(%class.SkAutoCanvasMatrixPaint*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas13onDrawPictureEPK9SkPicturePK8SkMatrixPK7SkPaint(%class.SkCanvas*, %class.SkPicture*, %class.SkMatrix*, %class.SkPaint*) unnamed_addr #0 align 2 {
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = bitcast { <2 x float>, <2 x float> }* %5 to %struct.SkRect*
  %7 = alloca %class.SkPaint, align 8
  %8 = alloca %class.SkAutoCanvasMatrixPaint, align 8
  %9 = alloca { <2 x float>, <2 x float> }, align 8
  %10 = bitcast { <2 x float>, <2 x float> }* %9 to %struct.SkRect*
  %11 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #15
  %12 = bitcast %class.SkPicture* %1 to { <2 x float>, <2 x float> } (%class.SkPicture*)***
  %13 = load { <2 x float>, <2 x float> } (%class.SkPicture*)**, { <2 x float>, <2 x float> } (%class.SkPicture*)*** %12, align 8
  %14 = getelementptr inbounds { <2 x float>, <2 x float> } (%class.SkPicture*)*, { <2 x float>, <2 x float> } (%class.SkPicture*)** %13, i64 4
  %15 = load { <2 x float>, <2 x float> } (%class.SkPicture*)*, { <2 x float>, <2 x float> } (%class.SkPicture*)** %14, align 8
  %16 = tail call { <2 x float>, <2 x float> } %15(%class.SkPicture* %1) #15
  %17 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  %18 = extractvalue { <2 x float>, <2 x float> } %16, 0
  store <2 x float> %18, <2 x float>* %17, align 8
  %19 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  %20 = extractvalue { <2 x float>, <2 x float> } %16, 1
  store <2 x float> %20, <2 x float>* %19, align 8
  %21 = bitcast %class.SkPaint* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %21) #15
  %22 = icmp eq %class.SkPaint* %3, null
  br i1 %22, label %24, label %23

23:                                               ; preds = %4
  call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* nonnull %7, %class.SkPaint* nonnull dereferenceable(72) %3) #15
  br label %25

24:                                               ; preds = %4
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %7) #15
  br label %25

25:                                               ; preds = %24, %23
  %26 = call zeroext i1 @_ZN8SkCanvas19internalQuickRejectERK6SkRectRK7SkPaintPK8SkMatrix(%class.SkCanvas* %0, %struct.SkRect* nonnull dereferenceable(16) %6, %class.SkPaint* nonnull dereferenceable(72) %7, %class.SkMatrix* %2)
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %7) #15
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %21) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #15
  br i1 %26, label %43, label %27

27:                                               ; preds = %25
  %28 = bitcast %class.SkAutoCanvasMatrixPaint* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #15
  %29 = bitcast { <2 x float>, <2 x float> }* %9 to i8*
  %30 = bitcast %class.SkAutoCanvasMatrixPaint* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #15
  %31 = load { <2 x float>, <2 x float> } (%class.SkPicture*)**, { <2 x float>, <2 x float> } (%class.SkPicture*)*** %12, align 8
  %32 = getelementptr inbounds { <2 x float>, <2 x float> } (%class.SkPicture*)*, { <2 x float>, <2 x float> } (%class.SkPicture*)** %31, i64 4
  %33 = load { <2 x float>, <2 x float> } (%class.SkPicture*)*, { <2 x float>, <2 x float> } (%class.SkPicture*)** %32, align 8
  %34 = call { <2 x float>, <2 x float> } %33(%class.SkPicture* %1) #15
  %35 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 0
  %36 = extractvalue { <2 x float>, <2 x float> } %34, 0
  store <2 x float> %36, <2 x float>* %35, align 8
  %37 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 1
  %38 = extractvalue { <2 x float>, <2 x float> } %34, 1
  store <2 x float> %38, <2 x float>* %37, align 8
  call void @_ZN23SkAutoCanvasMatrixPaintC1EP8SkCanvasPK8SkMatrixPK7SkPaintRK6SkRect(%class.SkAutoCanvasMatrixPaint* nonnull %8, %class.SkCanvas* %0, %class.SkMatrix* %2, %class.SkPaint* %3, %struct.SkRect* nonnull dereferenceable(16) %10) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #15
  %39 = bitcast %class.SkPicture* %1 to void (%class.SkPicture*, %class.SkCanvas*, %"class.SkPicture::AbortCallback"*)***
  %40 = load void (%class.SkPicture*, %class.SkCanvas*, %"class.SkPicture::AbortCallback"*)**, void (%class.SkPicture*, %class.SkCanvas*, %"class.SkPicture::AbortCallback"*)*** %39, align 8
  %41 = getelementptr inbounds void (%class.SkPicture*, %class.SkCanvas*, %"class.SkPicture::AbortCallback"*)*, void (%class.SkPicture*, %class.SkCanvas*, %"class.SkPicture::AbortCallback"*)** %40, i64 3
  %42 = load void (%class.SkPicture*, %class.SkCanvas*, %"class.SkPicture::AbortCallback"*)*, void (%class.SkPicture*, %class.SkCanvas*, %"class.SkPicture::AbortCallback"*)** %41, align 8
  call void %42(%class.SkPicture* %1, %class.SkCanvas* %0, %"class.SkPicture::AbortCallback"* null) #15
  call void @_ZN23SkAutoCanvasMatrixPaintD1Ev(%class.SkAutoCanvasMatrixPaint* nonnull %8) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #15
  br label %43

43:                                               ; preds = %25, %27
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN8SkCanvas13ImageSetEntryC2Ev(%"struct.SkCanvas::ImageSetEntry"* nocapture) unnamed_addr #12 align 2 {
  %2 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %0, i64 0, i32 0, i32 0
  store %class.SkImage* null, %class.SkImage** %2, align 8
  %3 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %0, i64 0, i32 3
  store i32 -1, i32* %3, align 8
  %4 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %0, i64 0, i32 4
  store float 1.000000e+00, float* %4, align 4
  %5 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %0, i64 0, i32 5
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %0, i64 0, i32 6
  store i8 0, i8* %6, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas13ImageSetEntryD2Ev(%"struct.SkCanvas::ImageSetEntry"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %0, i64 0, i32 0, i32 0
  %3 = load %class.SkImage*, %class.SkImage** %2, align 8
  %4 = icmp eq %class.SkImage* %3, null
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.SkImage, %class.SkImage* %3, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw add i32* %6, i32 -1 acq_rel
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %15

9:                                                ; preds = %5
  %10 = bitcast %class.SkImage* %3 to %class.SkRefCntBase*
  %11 = bitcast %class.SkImage* %3 to void (%class.SkRefCntBase*)***
  %12 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %11, align 8
  %13 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %12, i64 2
  %14 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, align 8
  tail call void %14(%class.SkRefCntBase* nonnull %10) #15
  br label %15

15:                                               ; preds = %1, %5, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas13ImageSetEntryC2ERKS0_(%"struct.SkCanvas::ImageSetEntry"* nocapture, %"struct.SkCanvas::ImageSetEntry"* nocapture readonly dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %1, i64 0, i32 0, i32 0
  %5 = load %class.SkImage*, %class.SkImage** %4, align 8
  %6 = icmp eq %class.SkImage* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.SkImage, %class.SkImage* %5, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 1 monotonic
  br label %10

10:                                               ; preds = %2, %7
  store %class.SkImage* %5, %class.SkImage** %3, align 8
  %11 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %1, i64 0, i32 1
  %13 = bitcast %struct.SkRect* %11 to i8*
  %14 = bitcast %struct.SkRect* %12 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 45, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(56) %"struct.SkCanvas::ImageSetEntry"* @_ZN8SkCanvas13ImageSetEntryaSERKS0_(%"struct.SkCanvas::ImageSetEntry"* returned, %"struct.SkCanvas::ImageSetEntry"* readonly dereferenceable(56)) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"struct.SkCanvas::ImageSetEntry"* %0, %1
  br i1 %3, label %25, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %1, i64 0, i32 0, i32 0
  %6 = load %class.SkImage*, %class.SkImage** %5, align 8
  %7 = icmp eq %class.SkImage* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %class.SkImage, %class.SkImage* %6, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw add i32* %9, i32 1 monotonic
  br label %11

11:                                               ; preds = %8, %4
  %12 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %0, i64 0, i32 0, i32 0
  %13 = load %class.SkImage*, %class.SkImage** %12, align 8
  store %class.SkImage* %6, %class.SkImage** %12, align 8
  %14 = icmp eq %class.SkImage* %13, null
  br i1 %14, label %25, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %class.SkImage, %class.SkImage* %13, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 -1 acq_rel
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %25

19:                                               ; preds = %15
  %20 = bitcast %class.SkImage* %13 to %class.SkRefCntBase*
  %21 = bitcast %class.SkImage* %13 to void (%class.SkRefCntBase*)***
  %22 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %22, i64 2
  %24 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %23, align 8
  tail call void %24(%class.SkRefCntBase* nonnull %20) #15
  br label %25

25:                                               ; preds = %2, %11, %15, %19
  %26 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %0, i64 0, i32 1
  %27 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %1, i64 0, i32 1
  %28 = bitcast %struct.SkRect* %26 to i8*
  %29 = bitcast %struct.SkRect* %27 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 45, i1 false)
  ret %"struct.SkCanvas::ImageSetEntry"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas13ImageSetEntryC2E5sk_spIK7SkImageERK6SkRectS7_ifjb(%"struct.SkCanvas::ImageSetEntry"* nocapture, %class.sk_sp.250* nocapture, %struct.SkRect* nocapture readonly dereferenceable(16), %struct.SkRect* nocapture readonly dereferenceable(16), i32, float, i32, i1 zeroext) unnamed_addr #0 align 2 {
  %9 = zext i1 %7 to i8
  %10 = getelementptr inbounds %class.sk_sp.250, %class.sk_sp.250* %1, i64 0, i32 0
  %11 = bitcast %class.sk_sp.250* %1 to i64*
  %12 = load i64, i64* %11, align 8
  store %class.SkImage* null, %class.SkImage** %10, align 8
  %13 = bitcast %"struct.SkCanvas::ImageSetEntry"* %0 to i64*
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %0, i64 0, i32 1
  %15 = bitcast %struct.SkRect* %14 to i8*
  %16 = bitcast %struct.SkRect* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 4 %16, i64 16, i1 false)
  %17 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %0, i64 0, i32 2
  %18 = bitcast %struct.SkRect* %17 to i8*
  %19 = bitcast %struct.SkRect* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 4 %19, i64 16, i1 false)
  %20 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %0, i64 0, i32 3
  store i32 %4, i32* %20, align 8
  %21 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %0, i64 0, i32 4
  store float %5, float* %21, align 4
  %22 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %0, i64 0, i32 5
  store i32 %6, i32* %22, align 8
  %23 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %0, i64 0, i32 6
  store i8 %9, i8* %23, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvas13ImageSetEntryC2E5sk_spIK7SkImageERK6SkRectS7_fj(%"struct.SkCanvas::ImageSetEntry"* nocapture, %class.sk_sp.250* nocapture, %struct.SkRect* nocapture readonly dereferenceable(16), %struct.SkRect* nocapture readonly dereferenceable(16), float, i32) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %class.sk_sp.250, %class.sk_sp.250* %1, i64 0, i32 0
  %8 = bitcast %class.sk_sp.250* %1 to i64*
  %9 = load i64, i64* %8, align 8
  store %class.SkImage* null, %class.SkImage** %7, align 8
  %10 = bitcast %"struct.SkCanvas::ImageSetEntry"* %0 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %0, i64 0, i32 1
  %12 = bitcast %struct.SkRect* %11 to i8*
  %13 = bitcast %struct.SkRect* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 4 %13, i64 16, i1 false)
  %14 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %0, i64 0, i32 2
  %15 = bitcast %struct.SkRect* %14 to i8*
  %16 = bitcast %struct.SkRect* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 4 %16, i64 16, i1 false)
  %17 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %0, i64 0, i32 3
  store i32 -1, i32* %17, align 8
  %18 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %0, i64 0, i32 4
  store float %4, float* %18, align 4
  %19 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %0, i64 0, i32 5
  store i32 %5, i32* %19, align 8
  %20 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %0, i64 0, i32 6
  store i8 0, i8* %20, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkCanvas* @_ZN8SkCanvas16MakeRasterDirectERK11SkImageInfoPvmPK14SkSurfaceProps(%struct.SkImageInfo* dereferenceable(24), i8*, i64, %class.SkSurfaceProps*) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.SkBitmap, align 8
  %6 = tail call zeroext i1 @_Z27SkSurfaceValidateRasterInfoRK11SkImageInfom(%struct.SkImageInfo* dereferenceable(24) %0, i64 %2) #15
  br i1 %6, label %7, label %20

7:                                                ; preds = %4
  %8 = bitcast %class.SkBitmap* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %8) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %5) #15
  %9 = call zeroext i1 @_ZN8SkBitmap13installPixelsERK11SkImageInfoPvmPFvS3_S3_ES3_(%class.SkBitmap* nonnull %5, %struct.SkImageInfo* dereferenceable(24) %0, i8* %1, i64 %2, void (i8*, i8*)* null, i8* null) #15
  br i1 %9, label %10, label %18

10:                                               ; preds = %7
  %11 = icmp eq %class.SkSurfaceProps* %3, null
  %12 = call i8* @_Znwm(i64 3232) #16
  %13 = bitcast i8* %12 to %class.SkCanvas*
  br i1 %11, label %16, label %14

14:                                               ; preds = %10
  call void @_ZN8SkCanvasC2ERK8SkBitmapRK14SkSurfaceProps(%class.SkCanvas* nonnull %13, %class.SkBitmap* nonnull dereferenceable(56) %5, %class.SkSurfaceProps* nonnull dereferenceable(8) %3) #15
  %15 = ptrtoint i8* %12 to i64
  br label %18

16:                                               ; preds = %10
  call void @_ZN8SkCanvasC2ERK8SkBitmapNSt3__110unique_ptrI23SkRasterHandleAllocatorNS3_14default_deleteIS5_EEEEPv(%class.SkCanvas* nonnull %13, %class.SkBitmap* nonnull dereferenceable(56) %5, %class.SkRasterHandleAllocator* null, i8* null) #15
  %17 = ptrtoint i8* %12 to i64
  br label %18

18:                                               ; preds = %7, %14, %16
  %19 = phi i64 [ %17, %16 ], [ %15, %14 ], [ 0, %7 ]
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %8) #15
  br label %20

20:                                               ; preds = %4, %18
  %21 = phi i64 [ %19, %18 ], [ 0, %4 ]
  %22 = inttoptr i64 %21 to %class.SkCanvas*
  ret %class.SkCanvas* %22
}

declare zeroext i1 @_Z27SkSurfaceValidateRasterInfoRK11SkImageInfom(%struct.SkImageInfo* dereferenceable(24), i64) local_unnamed_addr #4

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkNoDrawCanvasC2Eii(%class.SkNoDrawCanvas*, i32, i32) unnamed_addr #0 align 2 {
  %4 = alloca { i64, i64 }, align 8
  %5 = bitcast { i64, i64 }* %4 to %struct.SkIRect*
  %6 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #15
  %7 = zext i32 %2 to i64
  %8 = shl nuw i64 %7, 32
  %9 = zext i32 %1 to i64
  %10 = or i64 %8, %9
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  store i64 0, i64* %11, align 8
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  store i64 %10, i64* %12, align 8
  %13 = getelementptr inbounds %class.SkNoDrawCanvas, %class.SkNoDrawCanvas* %0, i64 0, i32 0, i32 0
  call void @_ZN8SkCanvasC2ERK7SkIRect(%class.SkCanvas* %13, %struct.SkIRect* nonnull dereferenceable(16) %5) #15
  %14 = getelementptr inbounds %class.SkNoDrawCanvas, %class.SkNoDrawCanvas* %0, i64 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #15
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [56 x i8*] }, { [56 x i8*] }* @_ZTV14SkNoDrawCanvas, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkNoDrawCanvasC2ERK7SkIRect(%class.SkNoDrawCanvas*, %struct.SkIRect* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkNoDrawCanvas, %class.SkNoDrawCanvas* %0, i64 0, i32 0, i32 0
  tail call void @_ZN8SkCanvasC2ERK7SkIRect(%class.SkCanvas* %3, %struct.SkIRect* dereferenceable(16) %1) #15
  %4 = getelementptr inbounds %class.SkNoDrawCanvas, %class.SkNoDrawCanvas* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [56 x i8*] }, { [56 x i8*] }* @_ZTV14SkNoDrawCanvas, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkNoDrawCanvasC2E5sk_spI12SkBaseDeviceE(%class.SkNoDrawCanvas*, %class.sk_sp.2* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca %class.sk_sp.2, align 8
  %4 = getelementptr inbounds %class.sk_sp.2, %class.sk_sp.2* %1, i64 0, i32 0
  %5 = load %class.SkBaseDevice*, %class.SkBaseDevice** %4, align 8
  %6 = icmp eq %class.SkBaseDevice* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %5, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 1 monotonic
  br label %10

10:                                               ; preds = %2, %7
  %11 = getelementptr inbounds %class.SkNoDrawCanvas, %class.SkNoDrawCanvas* %0, i64 0, i32 0, i32 0
  %12 = bitcast %class.sk_sp.2* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #15
  %13 = getelementptr inbounds %class.SkNoDrawCanvas, %class.SkNoDrawCanvas* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [56 x i8*] }, { [56 x i8*] }* @_ZTV8SkCanvas, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = getelementptr inbounds %class.SkNoDrawCanvas, %class.SkNoDrawCanvas* %0, i64 0, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %class.SkNoDrawCanvas, %class.SkNoDrawCanvas* %0, i64 0, i32 0, i32 0, i32 4, i64 0
  %16 = bitcast i64* %15 to i8*
  tail call void @_ZN7SkDequeC1EmPvmi(%class.SkDeque* %14, i64 96, i8* %16, i64 3072, i32 1) #15
  %17 = getelementptr inbounds %class.SkNoDrawCanvas, %class.SkNoDrawCanvas* %0, i64 0, i32 0, i32 0, i32 3, i32 0
  store %class.SkMarkerStack* null, %class.SkMarkerStack** %17, align 8
  %18 = getelementptr inbounds %class.SkNoDrawCanvas, %class.SkNoDrawCanvas* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  store %class.SkBaseDevice* null, %class.SkBaseDevice** %18, align 8
  %19 = getelementptr inbounds %class.SkNoDrawCanvas, %class.SkNoDrawCanvas* %0, i64 0, i32 0, i32 0, i32 6
  %20 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %5, i64 0, i32 4
  tail call void @_ZN14SkSurfacePropsC1ERKS_(%class.SkSurfaceProps* %19, %class.SkSurfaceProps* dereferenceable(8) %20) #15
  %21 = getelementptr inbounds %class.SkNoDrawCanvas, %class.SkNoDrawCanvas* %0, i64 0, i32 0, i32 0, i32 8
  %22 = bitcast %"class.std::__1::unique_ptr"* %21 to i64*
  store i64 0, i64* %22, align 8
  %23 = getelementptr inbounds %class.SkNoDrawCanvas, %class.SkNoDrawCanvas* %0, i64 0, i32 0, i32 0, i32 10
  %24 = getelementptr inbounds %class.SkNoDrawCanvas, %class.SkNoDrawCanvas* %0, i64 0, i32 0, i32 0, i32 12
  %25 = bitcast %"class.std::__1::unique_ptr.19"* %24 to i64*
  store i64 0, i64* %25, align 8
  %26 = getelementptr inbounds %class.sk_sp.2, %class.sk_sp.2* %3, i64 0, i32 0
  %27 = bitcast %struct.SkIRect* %23 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 16, i1 false) #15
  br i1 %6, label %31, label %28

28:                                               ; preds = %10
  %29 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %5, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = atomicrmw add i32* %29, i32 1 monotonic
  br label %31

31:                                               ; preds = %28, %10
  store %class.SkBaseDevice* %5, %class.SkBaseDevice** %26, align 8
  call void @_ZN8SkCanvas4initE5sk_spI12SkBaseDeviceE(%class.SkCanvas* %11, %class.sk_sp.2* nonnull %3) #15
  %32 = load %class.SkBaseDevice*, %class.SkBaseDevice** %26, align 8
  %33 = icmp eq %class.SkBaseDevice* %32, null
  br i1 %33, label %44, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %32, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i32* %35, i32 -1 acq_rel
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %44

38:                                               ; preds = %34
  %39 = bitcast %class.SkBaseDevice* %32 to %class.SkRefCntBase*
  %40 = bitcast %class.SkBaseDevice* %32 to void (%class.SkRefCntBase*)***
  %41 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %40, align 8
  %42 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %41, i64 2
  %43 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %42, align 8
  tail call void %43(%class.SkRefCntBase* nonnull %39) #15
  br label %44

44:                                               ; preds = %31, %34, %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #15
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [56 x i8*] }, { [56 x i8*] }* @_ZTV23SkCanvasVirtualEnforcerI8SkCanvasE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  br i1 %6, label %55, label %45

45:                                               ; preds = %44
  %46 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %5, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = atomicrmw add i32* %46, i32 -1 acq_rel
  %48 = icmp eq i32 %47, 1
  br i1 %48, label %49, label %55

49:                                               ; preds = %45
  %50 = bitcast %class.SkBaseDevice* %5 to %class.SkRefCntBase*
  %51 = bitcast %class.SkBaseDevice* %5 to void (%class.SkRefCntBase*)***
  %52 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %51, align 8
  %53 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %52, i64 2
  %54 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %53, align 8
  tail call void %54(%class.SkRefCntBase* nonnull %50) #15
  br label %55

55:                                               ; preds = %44, %45, %49
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [56 x i8*] }, { [56 x i8*] }* @_ZTV14SkNoDrawCanvas, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN14SkNoDrawCanvas20getSaveLayerStrategyERKN8SkCanvas12SaveLayerRecE(%class.SkNoDrawCanvas* nocapture readnone, %"struct.SkCanvas::SaveLayerRec"* nocapture readnone dereferenceable(32)) unnamed_addr #8 align 2 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN8SkCanvas20getSaveLayerStrategyERKNS_12SaveLayerRecE(%class.SkCanvas*, %"struct.SkCanvas::SaveLayerRec"* dereferenceable(32)) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN14SkNoDrawCanvas14onDoSaveBehindEPK6SkRect(%class.SkNoDrawCanvas* nocapture readnone, %struct.SkRect* nocapture readnone) unnamed_addr #8 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZNK8SkCanvas21accessTopRasterHandleEv(%class.SkCanvas* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca { i64, i64 }, align 8
  %3 = bitcast { i64, i64 }* %2 to %struct.SkIRect*
  %4 = alloca %struct.SkIRect, align 4
  %5 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %6 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %5, align 8
  %7 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %6, i64 0, i32 1
  %8 = load %class.SkBaseDevice*, %class.SkBaseDevice** %7, align 8
  %9 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %10 = load %class.SkRasterHandleAllocator*, %class.SkRasterHandleAllocator** %9, align 8
  %11 = icmp eq %class.SkRasterHandleAllocator* %10, null
  br i1 %11, label %47, label %12

12:                                               ; preds = %1
  %13 = bitcast %class.SkBaseDevice* %8 to i8* (%class.SkBaseDevice*)***
  %14 = load i8* (%class.SkBaseDevice*)**, i8* (%class.SkBaseDevice*)*** %13, align 8
  %15 = getelementptr inbounds i8* (%class.SkBaseDevice*)*, i8* (%class.SkBaseDevice*)** %14, i64 3
  %16 = load i8* (%class.SkBaseDevice*)*, i8* (%class.SkBaseDevice*)** %15, align 8
  %17 = tail call i8* %16(%class.SkBaseDevice* %8) #15
  %18 = bitcast { i64, i64 }* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #15
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 1
  %20 = bitcast %class.SkBaseDevice* %8 to { i64, i64 } (%class.SkBaseDevice*)***
  %21 = bitcast { i64, i64 }* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 16, i1 false)
  %22 = load { i64, i64 } (%class.SkBaseDevice*)**, { i64, i64 } (%class.SkBaseDevice*)*** %20, align 8
  %23 = getelementptr inbounds { i64, i64 } (%class.SkBaseDevice*)*, { i64, i64 } (%class.SkBaseDevice*)** %22, i64 23
  %24 = load { i64, i64 } (%class.SkBaseDevice*)*, { i64, i64 } (%class.SkBaseDevice*)** %23, align 8
  %25 = tail call { i64, i64 } %24(%class.SkBaseDevice* %8) #15
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 0
  %27 = extractvalue { i64, i64 } %25, 0
  store i64 %27, i64* %26, align 8
  %28 = extractvalue { i64, i64 } %25, 1
  store i64 %28, i64* %19, align 8
  %29 = bitcast %struct.SkIRect* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #15
  %30 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 0
  store i32 0, i32* %30, align 4
  %31 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 1
  store i32 0, i32* %31, align 4
  %32 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 2
  %33 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %8, i64 0, i32 3, i32 1, i32 0
  %34 = load i32, i32* %33, align 4
  store i32 %34, i32* %32, align 4
  %35 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 3
  %36 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %8, i64 0, i32 3, i32 1, i32 1
  %37 = load i32, i32* %36, align 4
  store i32 %37, i32* %35, align 4
  %38 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %3, %struct.SkIRect* nonnull dereferenceable(16) %3, %struct.SkIRect* nonnull dereferenceable(16) %4) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #15
  br i1 %38, label %40, label %39

39:                                               ; preds = %12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 16, i1 false) #15
  br label %40

40:                                               ; preds = %12, %39
  %41 = load %class.SkRasterHandleAllocator*, %class.SkRasterHandleAllocator** %9, align 8
  %42 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %8, i64 0, i32 1, i32 2
  %43 = bitcast %class.SkRasterHandleAllocator* %41 to void (%class.SkRasterHandleAllocator*, i8*, %class.SkMatrix*, %struct.SkIRect*)***
  %44 = load void (%class.SkRasterHandleAllocator*, i8*, %class.SkMatrix*, %struct.SkIRect*)**, void (%class.SkRasterHandleAllocator*, i8*, %class.SkMatrix*, %struct.SkIRect*)*** %43, align 8
  %45 = getelementptr inbounds void (%class.SkRasterHandleAllocator*, i8*, %class.SkMatrix*, %struct.SkIRect*)*, void (%class.SkRasterHandleAllocator*, i8*, %class.SkMatrix*, %struct.SkIRect*)** %44, i64 3
  %46 = load void (%class.SkRasterHandleAllocator*, i8*, %class.SkMatrix*, %struct.SkIRect*)*, void (%class.SkRasterHandleAllocator*, i8*, %class.SkMatrix*, %struct.SkIRect*)** %45, align 8
  call void %46(%class.SkRasterHandleAllocator* %41, i8* %17, %class.SkMatrix* dereferenceable(40) %42, %struct.SkIRect* nonnull dereferenceable(16) %3) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #15
  br label %47

47:                                               ; preds = %1, %40
  %48 = phi i8* [ %17, %40 ], [ null, %1 ]
  ret i8* %48
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN23SkRasterHandleAllocator11allocBitmapERK11SkImageInfoP8SkBitmap(%class.SkRasterHandleAllocator*, %struct.SkImageInfo* dereferenceable(24), %class.SkBitmap*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.SkRasterHandleAllocator::Rec", align 8
  %5 = bitcast %"struct.SkRasterHandleAllocator::Rec"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #15
  %6 = bitcast %class.SkRasterHandleAllocator* %0 to i1 (%class.SkRasterHandleAllocator*, %struct.SkImageInfo*, %"struct.SkRasterHandleAllocator::Rec"*)***
  %7 = bitcast %"struct.SkRasterHandleAllocator::Rec"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 40, i1 false)
  %8 = load i1 (%class.SkRasterHandleAllocator*, %struct.SkImageInfo*, %"struct.SkRasterHandleAllocator::Rec"*)**, i1 (%class.SkRasterHandleAllocator*, %struct.SkImageInfo*, %"struct.SkRasterHandleAllocator::Rec"*)*** %6, align 8
  %9 = getelementptr inbounds i1 (%class.SkRasterHandleAllocator*, %struct.SkImageInfo*, %"struct.SkRasterHandleAllocator::Rec"*)*, i1 (%class.SkRasterHandleAllocator*, %struct.SkImageInfo*, %"struct.SkRasterHandleAllocator::Rec"*)** %8, i64 2
  %10 = load i1 (%class.SkRasterHandleAllocator*, %struct.SkImageInfo*, %"struct.SkRasterHandleAllocator::Rec"*)*, i1 (%class.SkRasterHandleAllocator*, %struct.SkImageInfo*, %"struct.SkRasterHandleAllocator::Rec"*)** %9, align 8
  %11 = call zeroext i1 %10(%class.SkRasterHandleAllocator* %0, %struct.SkImageInfo* dereferenceable(24) %1, %"struct.SkRasterHandleAllocator::Rec"* nonnull %4) #15
  br i1 %11, label %12, label %25

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"struct.SkRasterHandleAllocator::Rec", %"struct.SkRasterHandleAllocator::Rec"* %4, i64 0, i32 0
  %14 = getelementptr inbounds %"struct.SkRasterHandleAllocator::Rec", %"struct.SkRasterHandleAllocator::Rec"* %4, i64 0, i32 4
  %15 = getelementptr inbounds %"struct.SkRasterHandleAllocator::Rec", %"struct.SkRasterHandleAllocator::Rec"* %4, i64 0, i32 3
  %16 = getelementptr inbounds %"struct.SkRasterHandleAllocator::Rec", %"struct.SkRasterHandleAllocator::Rec"* %4, i64 0, i32 2
  %17 = getelementptr inbounds %"struct.SkRasterHandleAllocator::Rec", %"struct.SkRasterHandleAllocator::Rec"* %4, i64 0, i32 1
  %18 = load i8*, i8** %16, align 8
  %19 = load i64, i64* %15, align 8
  %20 = load void (i8*, i8*)*, void (i8*, i8*)** %13, align 8
  %21 = load i8*, i8** %17, align 8
  %22 = call zeroext i1 @_ZN8SkBitmap13installPixelsERK11SkImageInfoPvmPFvS3_S3_ES3_(%class.SkBitmap* %2, %struct.SkImageInfo* dereferenceable(24) %1, i8* %18, i64 %19, void (i8*, i8*)* %20, i8* %21) #15
  %23 = load i8*, i8** %14, align 8
  %24 = select i1 %22, i8* %23, i8* null
  br label %25

25:                                               ; preds = %12, %3
  %26 = phi i8* [ null, %3 ], [ %24, %12 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #15
  ret i8* %26
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkCanvas* @_ZN23SkRasterHandleAllocator10MakeCanvasENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEERK11SkImageInfoPKNS_3RecE(%class.SkRasterHandleAllocator*, %struct.SkImageInfo* dereferenceable(24), %"struct.SkRasterHandleAllocator::Rec"* readonly) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.SkRasterHandleAllocator::Rec", align 8
  %5 = alloca %class.SkBitmap, align 8
  %6 = ptrtoint %class.SkRasterHandleAllocator* %0 to i64
  %7 = icmp eq %class.SkRasterHandleAllocator* %0, null
  br i1 %7, label %63, label %8

8:                                                ; preds = %3
  %9 = icmp ne %"struct.SkRasterHandleAllocator::Rec"* %2, null
  br i1 %9, label %10, label %13

10:                                               ; preds = %8
  %11 = getelementptr inbounds %"struct.SkRasterHandleAllocator::Rec", %"struct.SkRasterHandleAllocator::Rec"* %2, i64 0, i32 3
  %12 = load i64, i64* %11, align 8
  br label %13

13:                                               ; preds = %8, %10
  %14 = phi i64 [ %12, %10 ], [ -1, %8 ]
  %15 = tail call zeroext i1 @_Z27SkSurfaceValidateRasterInfoRK11SkImageInfom(%struct.SkImageInfo* dereferenceable(24) %1, i64 %14) #15
  br i1 %15, label %16, label %63

16:                                               ; preds = %13
  %17 = bitcast %class.SkBitmap* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %17) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %5) #15
  br i1 %9, label %18, label %31

18:                                               ; preds = %16
  %19 = getelementptr inbounds %"struct.SkRasterHandleAllocator::Rec", %"struct.SkRasterHandleAllocator::Rec"* %2, i64 0, i32 2
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds %"struct.SkRasterHandleAllocator::Rec", %"struct.SkRasterHandleAllocator::Rec"* %2, i64 0, i32 3
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"struct.SkRasterHandleAllocator::Rec", %"struct.SkRasterHandleAllocator::Rec"* %2, i64 0, i32 0
  %24 = load void (i8*, i8*)*, void (i8*, i8*)** %23, align 8
  %25 = getelementptr inbounds %"struct.SkRasterHandleAllocator::Rec", %"struct.SkRasterHandleAllocator::Rec"* %2, i64 0, i32 1
  %26 = load i8*, i8** %25, align 8
  %27 = call zeroext i1 @_ZN8SkBitmap13installPixelsERK11SkImageInfoPvmPFvS3_S3_ES3_(%class.SkBitmap* nonnull %5, %struct.SkImageInfo* dereferenceable(24) %1, i8* %20, i64 %22, void (i8*, i8*)* %24, i8* %26) #15
  br i1 %27, label %28, label %60

28:                                               ; preds = %18
  %29 = getelementptr inbounds %"struct.SkRasterHandleAllocator::Rec", %"struct.SkRasterHandleAllocator::Rec"* %2, i64 0, i32 4
  %30 = load i8*, i8** %29, align 8
  br label %53

31:                                               ; preds = %16
  %32 = bitcast %"struct.SkRasterHandleAllocator::Rec"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %32) #15
  %33 = bitcast %class.SkRasterHandleAllocator* %0 to i1 (%class.SkRasterHandleAllocator*, %struct.SkImageInfo*, %"struct.SkRasterHandleAllocator::Rec"*)***
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 40, i1 false) #15
  %34 = load i1 (%class.SkRasterHandleAllocator*, %struct.SkImageInfo*, %"struct.SkRasterHandleAllocator::Rec"*)**, i1 (%class.SkRasterHandleAllocator*, %struct.SkImageInfo*, %"struct.SkRasterHandleAllocator::Rec"*)*** %33, align 8
  %35 = getelementptr inbounds i1 (%class.SkRasterHandleAllocator*, %struct.SkImageInfo*, %"struct.SkRasterHandleAllocator::Rec"*)*, i1 (%class.SkRasterHandleAllocator*, %struct.SkImageInfo*, %"struct.SkRasterHandleAllocator::Rec"*)** %34, i64 2
  %36 = load i1 (%class.SkRasterHandleAllocator*, %struct.SkImageInfo*, %"struct.SkRasterHandleAllocator::Rec"*)*, i1 (%class.SkRasterHandleAllocator*, %struct.SkImageInfo*, %"struct.SkRasterHandleAllocator::Rec"*)** %35, align 8
  %37 = call zeroext i1 %36(%class.SkRasterHandleAllocator* nonnull %0, %struct.SkImageInfo* dereferenceable(24) %1, %"struct.SkRasterHandleAllocator::Rec"* nonnull %4) #15
  br i1 %37, label %38, label %51

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"struct.SkRasterHandleAllocator::Rec", %"struct.SkRasterHandleAllocator::Rec"* %4, i64 0, i32 0
  %40 = getelementptr inbounds %"struct.SkRasterHandleAllocator::Rec", %"struct.SkRasterHandleAllocator::Rec"* %4, i64 0, i32 4
  %41 = getelementptr inbounds %"struct.SkRasterHandleAllocator::Rec", %"struct.SkRasterHandleAllocator::Rec"* %4, i64 0, i32 3
  %42 = getelementptr inbounds %"struct.SkRasterHandleAllocator::Rec", %"struct.SkRasterHandleAllocator::Rec"* %4, i64 0, i32 2
  %43 = getelementptr inbounds %"struct.SkRasterHandleAllocator::Rec", %"struct.SkRasterHandleAllocator::Rec"* %4, i64 0, i32 1
  %44 = load i8*, i8** %42, align 8
  %45 = load i64, i64* %41, align 8
  %46 = load void (i8*, i8*)*, void (i8*, i8*)** %39, align 8
  %47 = load i8*, i8** %43, align 8
  %48 = call zeroext i1 @_ZN8SkBitmap13installPixelsERK11SkImageInfoPvmPFvS3_S3_ES3_(%class.SkBitmap* nonnull %5, %struct.SkImageInfo* dereferenceable(24) %1, i8* %44, i64 %45, void (i8*, i8*)* %46, i8* %47) #15
  %49 = load i8*, i8** %40, align 8
  %50 = select i1 %48, i8* %49, i8* null
  br label %51

51:                                               ; preds = %31, %38
  %52 = phi i8* [ null, %31 ], [ %50, %38 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %32) #15
  br label %53

53:                                               ; preds = %28, %51
  %54 = phi i8* [ %52, %51 ], [ %30, %28 ]
  %55 = icmp eq i8* %54, null
  br i1 %55, label %60, label %56

56:                                               ; preds = %53
  %57 = call i8* @_Znwm(i64 3232) #16
  %58 = bitcast i8* %57 to %class.SkCanvas*
  call void @_ZN8SkCanvasC2ERK8SkBitmapNSt3__110unique_ptrI23SkRasterHandleAllocatorNS3_14default_deleteIS5_EEEEPv(%class.SkCanvas* nonnull %58, %class.SkBitmap* nonnull dereferenceable(56) %5, %class.SkRasterHandleAllocator* nonnull %0, i8* nonnull %54)
  %59 = ptrtoint i8* %57 to i64
  br label %60

60:                                               ; preds = %18, %53, %56
  %61 = phi i64 [ 0, %56 ], [ %6, %53 ], [ %6, %18 ]
  %62 = phi i64 [ %59, %56 ], [ 0, %53 ], [ 0, %18 ]
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %17) #15
  br label %63

63:                                               ; preds = %3, %13, %60
  %64 = phi i64 [ %61, %60 ], [ %6, %13 ], [ %6, %3 ]
  %65 = phi i64 [ %62, %60 ], [ 0, %13 ], [ 0, %3 ]
  %66 = icmp eq i64 %64, 0
  br i1 %66, label %73, label %67

67:                                               ; preds = %63
  %68 = inttoptr i64 %64 to %class.SkRasterHandleAllocator*
  %69 = inttoptr i64 %64 to void (%class.SkRasterHandleAllocator*)***
  %70 = load void (%class.SkRasterHandleAllocator*)**, void (%class.SkRasterHandleAllocator*)*** %69, align 8
  %71 = getelementptr inbounds void (%class.SkRasterHandleAllocator*)*, void (%class.SkRasterHandleAllocator*)** %70, i64 1
  %72 = load void (%class.SkRasterHandleAllocator*)*, void (%class.SkRasterHandleAllocator*)** %71, align 8
  call void %72(%class.SkRasterHandleAllocator* nonnull %68) #15
  br label %73

73:                                               ; preds = %63, %67
  %74 = inttoptr i64 %65 to %class.SkCanvas*
  ret %class.SkCanvas* %74
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkCanvas8willSaveEv(%class.SkCanvas*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN8SkCanvas14onDoSaveBehindEPK6SkRect(%class.SkCanvas*, %struct.SkRect*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkCanvas11willRestoreEv(%class.SkCanvas*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkCanvas10didRestoreEv(%class.SkCanvas*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkCanvas9onMarkCTMEPKc(%class.SkCanvas*, i8*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkCanvas11didConcat44ERK5SkM44(%class.SkCanvas*, %class.SkM44* dereferenceable(64)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkCanvas9didSetM44ERK5SkM44(%class.SkCanvas*, %class.SkM44* dereferenceable(64)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkCanvas12didTranslateEff(%class.SkCanvas*, float, float) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkCanvas8didScaleEff(%class.SkCanvas*, float, float) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkPaintFilterCanvas* @_ZNK8SkCanvas36internal_private_asPaintFilterCanvasEv(%class.SkCanvas*) unnamed_addr #0 comdat align 2 {
  ret %class.SkPaintFilterCanvas* null
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkCanvasD2Ev(%class.SkCanvas*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [56 x i8*] }, { [56 x i8*] }* @_ZTV8SkCanvas, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 7
  %4 = load i32, i32* %3, align 8
  %5 = add i32 %4, -1
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %37

7:                                                ; preds = %1
  %8 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 2
  %9 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 1, i32 6
  %10 = bitcast %class.SkCanvas* %0 to void (%class.SkCanvas*)***
  br label %11

11:                                               ; preds = %34, %7
  %12 = phi i32 [ 0, %7 ], [ %35, %34 ]
  %13 = load %"class.SkCanvas::MCRec"*, %"class.SkCanvas::MCRec"** %8, align 8
  %14 = getelementptr inbounds %"class.SkCanvas::MCRec", %"class.SkCanvas::MCRec"* %13, i64 0, i32 4
  %15 = load i32, i32* %14, align 8
  %16 = icmp sgt i32 %15, 0
  br i1 %16, label %17, label %22

17:                                               ; preds = %11
  %18 = load i32, i32* %3, align 8
  %19 = add nsw i32 %18, -1
  store i32 %19, i32* %3, align 8
  %20 = load i32, i32* %14, align 8
  %21 = add nsw i32 %20, -1
  store i32 %21, i32* %14, align 8
  br label %34

22:                                               ; preds = %11
  %23 = load i32, i32* %9, align 8
  %24 = icmp sgt i32 %23, 1
  br i1 %24, label %25, label %34

25:                                               ; preds = %22
  %26 = load void (%class.SkCanvas*)**, void (%class.SkCanvas*)*** %10, align 8
  %27 = getelementptr inbounds void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %26, i64 15
  %28 = load void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %27, align 8
  tail call void %28(%class.SkCanvas* %0) #15
  %29 = load i32, i32* %3, align 8
  %30 = add nsw i32 %29, -1
  store i32 %30, i32* %3, align 8
  tail call void @_ZN8SkCanvas15internalRestoreEv(%class.SkCanvas* %0) #15
  %31 = load void (%class.SkCanvas*)**, void (%class.SkCanvas*)*** %10, align 8
  %32 = getelementptr inbounds void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %31, i64 16
  %33 = load void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %32, align 8
  tail call void %33(%class.SkCanvas* %0) #15
  br label %34

34:                                               ; preds = %25, %22, %17
  %35 = add nuw nsw i32 %12, 1
  %36 = icmp eq i32 %35, %5
  br i1 %36, label %37, label %11

37:                                               ; preds = %34, %1
  tail call void @_ZN8SkCanvas15internalRestoreEv(%class.SkCanvas* %0)
  %38 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 12
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %38, i64 0, i32 0, i32 0, i32 0
  %40 = load %class.SkGlyphRunBuilder*, %class.SkGlyphRunBuilder** %39, align 8
  store %class.SkGlyphRunBuilder* null, %class.SkGlyphRunBuilder** %39, align 8
  %41 = icmp eq %class.SkGlyphRunBuilder* %40, null
  br i1 %41, label %44, label %42

42:                                               ; preds = %37
  %43 = bitcast %"class.std::__1::unique_ptr.19"* %38 to %"struct.std::__1::default_delete.52"*
  tail call void @_ZNKSt3__114default_deleteI17SkGlyphRunBuilderEclEPS1_(%"struct.std::__1::default_delete.52"* %43, %class.SkGlyphRunBuilder* nonnull %40) #15
  br label %44

44:                                               ; preds = %37, %42
  %45 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %46 = load %class.SkRasterHandleAllocator*, %class.SkRasterHandleAllocator** %45, align 8
  store %class.SkRasterHandleAllocator* null, %class.SkRasterHandleAllocator** %45, align 8
  %47 = icmp eq %class.SkRasterHandleAllocator* %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %44
  %49 = bitcast %class.SkRasterHandleAllocator* %46 to void (%class.SkRasterHandleAllocator*)***
  %50 = load void (%class.SkRasterHandleAllocator*)**, void (%class.SkRasterHandleAllocator*)*** %49, align 8
  %51 = getelementptr inbounds void (%class.SkRasterHandleAllocator*)*, void (%class.SkRasterHandleAllocator*)** %50, i64 1
  %52 = load void (%class.SkRasterHandleAllocator*)*, void (%class.SkRasterHandleAllocator*)** %51, align 8
  tail call void %52(%class.SkRasterHandleAllocator* nonnull %46) #15
  br label %53

53:                                               ; preds = %44, %48
  %54 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 5, i32 0
  %55 = load %class.SkBaseDevice*, %class.SkBaseDevice** %54, align 8
  %56 = icmp eq %class.SkBaseDevice* %55, null
  br i1 %56, label %67, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %55, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = atomicrmw add i32* %58, i32 -1 acq_rel
  %60 = icmp eq i32 %59, 1
  br i1 %60, label %61, label %67

61:                                               ; preds = %57
  %62 = bitcast %class.SkBaseDevice* %55 to %class.SkRefCntBase*
  %63 = bitcast %class.SkBaseDevice* %55 to void (%class.SkRefCntBase*)***
  %64 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %63, align 8
  %65 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %64, i64 2
  %66 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %65, align 8
  tail call void %66(%class.SkRefCntBase* nonnull %62) #15
  br label %67

67:                                               ; preds = %53, %57, %61
  %68 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 3, i32 0
  %69 = load %class.SkMarkerStack*, %class.SkMarkerStack** %68, align 8
  %70 = icmp eq %class.SkMarkerStack* %69, null
  br i1 %70, label %81, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %class.SkMarkerStack, %class.SkMarkerStack* %69, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = atomicrmw add i32* %72, i32 -1 acq_rel
  %74 = icmp eq i32 %73, 1
  br i1 %74, label %75, label %81

75:                                               ; preds = %71
  %76 = bitcast %class.SkMarkerStack* %69 to %class.SkRefCntBase*
  %77 = bitcast %class.SkMarkerStack* %69 to void (%class.SkRefCntBase*)***
  %78 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %77, align 8
  %79 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %78, i64 2
  %80 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %79, align 8
  tail call void %80(%class.SkRefCntBase* nonnull %76) #15
  br label %81

81:                                               ; preds = %67, %71, %75
  %82 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %0, i64 0, i32 1
  tail call void @_ZN7SkDequeD1Ev(%class.SkDeque* %82) #15
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14SkNoDrawCanvasD0Ev(%class.SkNoDrawCanvas*) unnamed_addr #13 comdat align 2 {
  %2 = getelementptr inbounds %class.SkNoDrawCanvas, %class.SkNoDrawCanvas* %0, i64 0, i32 0, i32 0
  tail call void @_ZN8SkCanvasD2Ev(%class.SkCanvas* %2) #15
  %3 = bitcast %class.SkNoDrawCanvas* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14SkNoDrawCanvas11onDrawPaintERK7SkPaint(%class.SkNoDrawCanvas*, %class.SkPaint* dereferenceable(72)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14SkNoDrawCanvas12onDrawBehindERK7SkPaint(%class.SkNoDrawCanvas*, %class.SkPaint* dereferenceable(72)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14SkNoDrawCanvas10onDrawRectERK6SkRectRK7SkPaint(%class.SkNoDrawCanvas*, %struct.SkRect* dereferenceable(16), %class.SkPaint* dereferenceable(72)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14SkNoDrawCanvas11onDrawRRectERK7SkRRectRK7SkPaint(%class.SkNoDrawCanvas*, %class.SkRRect* dereferenceable(52), %class.SkPaint* dereferenceable(72)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14SkNoDrawCanvas12onDrawDRRectERK7SkRRectS2_RK7SkPaint(%class.SkNoDrawCanvas*, %class.SkRRect* dereferenceable(52), %class.SkRRect* dereferenceable(52), %class.SkPaint* dereferenceable(72)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14SkNoDrawCanvas10onDrawOvalERK6SkRectRK7SkPaint(%class.SkNoDrawCanvas*, %struct.SkRect* dereferenceable(16), %class.SkPaint* dereferenceable(72)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14SkNoDrawCanvas9onDrawArcERK6SkRectffbRK7SkPaint(%class.SkNoDrawCanvas*, %struct.SkRect* dereferenceable(16), float, float, i1 zeroext, %class.SkPaint* dereferenceable(72)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14SkNoDrawCanvas10onDrawPathERK6SkPathRK7SkPaint(%class.SkNoDrawCanvas*, %class.SkPath* dereferenceable(16), %class.SkPaint* dereferenceable(72)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14SkNoDrawCanvas12onDrawRegionERK8SkRegionRK7SkPaint(%class.SkNoDrawCanvas*, %class.SkRegion* dereferenceable(24), %class.SkPaint* dereferenceable(72)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14SkNoDrawCanvas14onDrawTextBlobEPK10SkTextBlobffRK7SkPaint(%class.SkNoDrawCanvas*, %class.SkTextBlob*, float, float, %class.SkPaint* dereferenceable(72)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14SkNoDrawCanvas11onDrawPatchEPK7SkPointPKjS2_11SkBlendModeRK7SkPaint(%class.SkNoDrawCanvas*, %struct.SkPoint*, i32*, %struct.SkPoint*, i32, %class.SkPaint* dereferenceable(72)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14SkNoDrawCanvas12onDrawPointsEN8SkCanvas9PointModeEmPK7SkPointRK7SkPaint(%class.SkNoDrawCanvas*, i32, i64, %struct.SkPoint*, %class.SkPaint* dereferenceable(72)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14SkNoDrawCanvas12onDrawImage2EPK7SkImageffRK17SkSamplingOptionsPK7SkPaint(%class.SkNoDrawCanvas*, %class.SkImage*, float, float, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14SkNoDrawCanvas16onDrawImageRect2EPK7SkImageRK6SkRectS5_RK17SkSamplingOptionsPK7SkPaintN8SkCanvas17SrcRectConstraintE(%class.SkNoDrawCanvas*, %class.SkImage*, %struct.SkRect* dereferenceable(16), %struct.SkRect* dereferenceable(16), %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14SkNoDrawCanvas19onDrawImageLattice2EPK7SkImageRKN8SkCanvas7LatticeERK6SkRect12SkFilterModePK7SkPaint(%class.SkNoDrawCanvas*, %class.SkImage*, %"struct.SkCanvas::Lattice"* dereferenceable(48), %struct.SkRect* dereferenceable(16), i32, %class.SkPaint*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14SkNoDrawCanvas12onDrawAtlas2EPK7SkImagePK9SkRSXformPK6SkRectPKji11SkBlendModeRK17SkSamplingOptionsS8_PK7SkPaint(%class.SkNoDrawCanvas*, %class.SkImage*, %struct.SkRSXform*, %struct.SkRect*, i32*, i32, i32, %struct.SkSamplingOptions* dereferenceable(20), %struct.SkRect*, %class.SkPaint*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14SkNoDrawCanvas21onDrawEdgeAAImageSet2EPKN8SkCanvas13ImageSetEntryEiPK7SkPointPK8SkMatrixRK17SkSamplingOptionsPK7SkPaintNS0_17SrcRectConstraintE(%class.SkNoDrawCanvas*, %"struct.SkCanvas::ImageSetEntry"*, i32, %struct.SkPoint*, %class.SkMatrix*, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14SkNoDrawCanvas20onDrawVerticesObjectEPK10SkVertices11SkBlendModeRK7SkPaint(%class.SkNoDrawCanvas*, %class.SkVertices*, i32, %class.SkPaint* dereferenceable(72)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14SkNoDrawCanvas16onDrawAnnotationERK6SkRectPKcP6SkData(%class.SkNoDrawCanvas*, %struct.SkRect* dereferenceable(16), i8*, %class.SkData*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14SkNoDrawCanvas15onDrawShadowRecERK6SkPathRK15SkDrawShadowRec(%class.SkNoDrawCanvas*, %class.SkPath* dereferenceable(16), %struct.SkDrawShadowRec*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14SkNoDrawCanvas14onDrawDrawableEP10SkDrawablePK8SkMatrix(%class.SkNoDrawCanvas*, %class.SkDrawable*, %class.SkMatrix*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14SkNoDrawCanvas13onDrawPictureEPK9SkPicturePK8SkMatrixPK7SkPaint(%class.SkNoDrawCanvas*, %class.SkPicture*, %class.SkMatrix*, %class.SkPaint*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14SkNoDrawCanvas16onDrawEdgeAAQuadERK6SkRectPK7SkPointN8SkCanvas11QuadAAFlagsERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode(%class.SkNoDrawCanvas*, %struct.SkRect* dereferenceable(16), %struct.SkPoint*, i32, %struct.SkRGBA4f* dereferenceable(16), i32) unnamed_addr #0 comdat align 2 {
  ret void
}

declare zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayIN16SkNoPixelsDevice9ClipStateELb0EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %74

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %74, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 40) #15
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %62, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %57, %50 ]
  %52 = mul nuw nsw i64 %51, 40
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load %"struct.SkNoPixelsDevice::ClipState"*, %"struct.SkNoPixelsDevice::ClipState"** %49, align 8
  %55 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %54, i64 %51
  %56 = bitcast %"struct.SkNoPixelsDevice::ClipState"* %55 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %56, i64 40, i1 false) #15
  %57 = add nuw nsw i64 %51, 1
  %58 = load i64, i64* %4, align 8
  %59 = lshr i64 %58, 1
  %60 = and i64 %59, 2147483647
  %61 = icmp ult i64 %57, %60
  br i1 %61, label %50, label %62

62:                                               ; preds = %50, %35
  %63 = phi i64 [ %45, %35 ], [ %58, %50 ]
  %64 = and i64 %63, 1
  %65 = icmp eq i64 %64, 0
  %66 = bitcast %class.SkTArray* %0 to i8**
  br i1 %65, label %70, label %67

67:                                               ; preds = %62
  %68 = load i8*, i8** %66, align 8
  tail call void @_Z7sk_freePv(i8* %68) #15
  %69 = load i64, i64* %4, align 8
  br label %70

70:                                               ; preds = %62, %67
  %71 = phi i64 [ %69, %67 ], [ %63, %62 ]
  store i8* %44, i8** %66, align 8
  %72 = and i64 %71, -4294967298
  %73 = or i64 %72, 1
  store i64 %73, i64* %4, align 8
  br label %74

74:                                               ; preds = %70, %32, %21
  ret void
}

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #4

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #4

declare zeroext i1 @_ZN15GrDirectContext5flushERK11GrFlushInfo(%class.GrDirectContext*, %struct.GrFlushInfo* dereferenceable(48)) local_unnamed_addr #4

declare zeroext i1 @_ZN15GrDirectContext6submitEb(%class.GrDirectContext*, i1 zeroext) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #10

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8setScaleEff(%class.SkMatrix*, float, float) local_unnamed_addr #4

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix*) local_unnamed_addr #4

declare zeroext i1 @_ZNK8SkMatrix17invertNonIdentityEPS_(%class.SkMatrix*, %class.SkMatrix*) local_unnamed_addr #4

declare { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32) local_unnamed_addr #4

declare i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo*) local_unnamed_addr #4

declare void @_ZN12SkBaseDevice25setDeviceCoordinateSystemERK5SkM44S2_ii(%class.SkBaseDevice*, %class.SkM44* dereferenceable(64), %class.SkM44* dereferenceable(64), i32, i32) local_unnamed_addr #4

declare void @_ZN7SkPaint9setAlphafEf(%class.SkPaint*, float) local_unnamed_addr #4

declare zeroext i1 @_ZNK13SkImageFilter14asAColorFilterEPP13SkColorFilter(%class.SkImageFilter*, %class.SkColorFilter**) local_unnamed_addr #4

declare void @_ZNK13SkColorFilter12makeComposedE5sk_spIS_E(%class.sk_sp.57* sret, %class.SkColorFilter*, %class.sk_sp.57*) local_unnamed_addr #4

declare void @_ZN7SkPaint14setColorFilterE5sk_spI13SkColorFilterE(%class.SkPaint*, %class.sk_sp.57*) local_unnamed_addr #4

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9setConcatERKS_S1_(%class.SkMatrix*, %class.SkMatrix* dereferenceable(40), %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #4

declare dereferenceable(64) %class.SkM44* @_ZN5SkM449setConcatERKS_S1_(%class.SkM44*, %class.SkM44* dereferenceable(64), %class.SkM44* dereferenceable(64)) local_unnamed_addr #4

declare void @_ZNK12SkShaderBase11makeWithCTMERK8SkMatrix(%class.sk_sp.55* sret, %class.SkShaderBase*, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #4

declare void @_ZNK12SkShaderBase15makeInvertAlphaEv(%class.sk_sp.55* sret, %class.SkShaderBase*) local_unnamed_addr #4

declare void @_ZNK8SkRegion9translateEiiPS_(%class.SkRegion*, i32, i32, %class.SkRegion*) local_unnamed_addr #4

declare zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect*, %struct.SkPoint*, i32) local_unnamed_addr #4

declare dereferenceable(16) %struct.SkRect* @_ZNK7SkPaint19doComputeFastBoundsERK6SkRectPS0_NS_5StyleE(%class.SkPaint*, %struct.SkRect* dereferenceable(16), %struct.SkRect*, i8 zeroext) local_unnamed_addr #4

declare dereferenceable(72) %class.SkPaint* @_ZN7SkPaintaSERKS_(%class.SkPaint*, %class.SkPaint* dereferenceable(72)) local_unnamed_addr #4

declare void @_ZN7SkPaint13setPathEffectE5sk_spI12SkPathEffectE(%class.SkPaint*, %class.sk_sp.54*) local_unnamed_addr #4

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12setTranslateEff(%class.SkMatrix*, float, float) local_unnamed_addr #4

declare i32 @_ZNK7SkImage9alphaTypeEv(%class.SkImage*) local_unnamed_addr #4

declare void @_ZN7SkPaintC1EOS_(%class.SkPaint*, %class.SkPaint* dereferenceable(72)) unnamed_addr #4

declare zeroext i1 @_ZN8SkBitmap13installPixelsERK11SkImageInfoPvmPFvS3_S3_ES3_(%class.SkBitmap*, %struct.SkImageInfo* dereferenceable(24), i8*, i64, void (i8*, i8*)*, i8*) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23SkCanvasVirtualEnforcerI8SkCanvasED0Ev(%class.SkCanvasVirtualEnforcer*) unnamed_addr #13 comdat align 2 {
  tail call void @llvm.trap() #18
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23SkCanvasVirtualEnforcerI8SkCanvasE12onDrawBehindERK7SkPaint(%class.SkCanvasVirtualEnforcer*, %class.SkPaint* dereferenceable(72)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #14

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16SkNoPixelsDeviceC2ERK7SkIRectRK14SkSurfaceProps5sk_spI12SkColorSpaceE(%class.SkNoPixelsDevice*, %struct.SkIRect* dereferenceable(16), %class.SkSurfaceProps* dereferenceable(8), %class.sk_sp.3*) unnamed_addr #0 comdat align 2 {
  %5 = alloca %class.SkM44, align 4
  %6 = alloca %struct.SkImageInfo, align 8
  %7 = alloca %class.SkM44, align 4
  %8 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 0
  %9 = bitcast %struct.SkImageInfo* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #15
  %10 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = sub i32 %11, %13
  %15 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 3
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = sub i32 %16, %18
  %20 = zext i32 %19 to i64
  %21 = shl nuw i64 %20, 32
  %22 = zext i32 %14 to i64
  %23 = or i64 %21, %22
  %24 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %3, i64 0, i32 0
  %25 = bitcast %class.sk_sp.3* %3 to i64*
  %26 = load i64, i64* %25, align 8
  store %class.SkColorSpace* null, %class.SkColorSpace** %24, align 8
  %27 = bitcast %struct.SkImageInfo* %6 to i64*
  store i64 %26, i64* %27, align 8, !alias.scope !153
  %28 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %6, i64 0, i32 0, i32 1
  %29 = bitcast i32* %28 to i64*
  store i64 0, i64* %29, align 8, !alias.scope !153
  %30 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %6, i64 0, i32 1
  %31 = bitcast %struct.SkISize* %30 to i64*
  store i64 %23, i64* %31, align 8, !alias.scope !153
  call void @_ZN12SkBaseDeviceC2ERK11SkImageInfoRK14SkSurfaceProps(%class.SkBaseDevice* %8, %struct.SkImageInfo* nonnull dereferenceable(24) %6, %class.SkSurfaceProps* dereferenceable(8) %2) #15
  %32 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %6, i64 0, i32 0, i32 0, i32 0
  %33 = load %class.SkColorSpace*, %class.SkColorSpace** %32, align 8
  %34 = icmp eq %class.SkColorSpace* %33, null
  br i1 %34, label %41, label %35

35:                                               ; preds = %4
  %36 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = atomicrmw add i32* %36, i32 -1 acq_rel
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %39, label %41

39:                                               ; preds = %35
  %40 = bitcast %class.SkColorSpace* %33 to i8*
  call void @_ZdlPv(i8* %40) #16
  br label %41

41:                                               ; preds = %39, %35, %4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #15
  %42 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV16SkNoPixelsDevice, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  %43 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV16SkNoPixelsDevice, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %43, align 8
  %44 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 2, i32 0, i32 0, i64 160
  %45 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 2, i32 0, i32 0, i64 0
  %46 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 2, i32 0, i32 0, i64 168
  %47 = bitcast i8* %46 to i64*
  %48 = bitcast i8* %44 to i8**
  store i8* %45, i8** %48, align 8
  store i64 34359738368, i64* %47, align 8
  %49 = bitcast %class.SkM44* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %49) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %49, i8* align 4 bitcast ([16 x float]* @constinit to i8*), i64 64, i1 false) #15
  %50 = load i32, i32* %12, align 4
  %51 = load i32, i32* %17, align 4
  %52 = bitcast %class.SkM44* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %52) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %52, i8* align 4 bitcast ([16 x float]* @constinit to i8*), i64 64, i1 false) #15
  call void @_ZN12SkBaseDevice25setDeviceCoordinateSystemERK5SkM44S2_ii(%class.SkBaseDevice* %8, %class.SkM44* nonnull dereferenceable(64) %5, %class.SkM44* nonnull dereferenceable(64) %7, i32 %50, i32 %51) #15
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %52) #15
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %49) #15
  %53 = bitcast i8* %44 to %class.SkTArray*
  %54 = load i64, i64* %47, align 8
  %55 = and i64 %54, -4294967295
  store i64 %55, i64* %47, align 8
  call void @_ZN8SkTArrayIN16SkNoPixelsDevice9ClipStateELb0EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray* %53, i32 0, i32 2) #15
  %56 = load i64, i64* %47, align 8
  %57 = and i64 %56, -4294967297
  store i64 %57, i64* %47, align 8
  %58 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 1
  %59 = bitcast %struct.SkIRect* %58 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %59, i8 0, i64 16, i1 false) #15
  call void @_ZN8SkTArrayIN16SkNoPixelsDevice9ClipStateELb0EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray* %53, i32 1, i32 1) #15
  %60 = bitcast i8* %44 to %"struct.SkNoPixelsDevice::ClipState"**
  %61 = load %"struct.SkNoPixelsDevice::ClipState"*, %"struct.SkNoPixelsDevice::ClipState"** %60, align 8
  %62 = load i64, i64* %47, align 8
  %63 = lshr i64 %62, 1
  %64 = and i64 %63, 2147483647
  %65 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %61, i64 %64
  %66 = bitcast %"struct.SkNoPixelsDevice::ClipState"* %65 to i8*
  %67 = add i64 %62, 2
  %68 = and i64 %67, 4294967294
  %69 = and i64 %62, -4294967295
  %70 = or i64 %68, %69
  store i64 %70, i64* %47, align 8
  %71 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %61, i64 %64, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 16, i1 false) #15
  store i8 1, i8* %71, align 8
  %72 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %61, i64 %64, i32 0, i32 2
  store i8 0, i8* %72, align 1
  %73 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %61, i64 %64, i32 0, i32 3
  store %struct.SkIRect* null, %struct.SkIRect** %73, align 8
  %74 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %61, i64 %64, i32 1
  store i32 0, i32* %74, align 8
  %75 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 0, i32 3, i32 1, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 0, i32 3, i32 1, i32 1
  %78 = load i32, i32* %77, align 4
  %79 = zext i32 %78 to i64
  %80 = shl nuw i64 %79, 32
  %81 = zext i32 %76 to i64
  %82 = or i64 %80, %81
  %83 = bitcast %"struct.SkNoPixelsDevice::ClipState"* %65 to i64*
  store i64 0, i64* %83, align 8
  %84 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %61, i64 %64, i32 0, i32 0, i32 2
  %85 = bitcast i32* %84 to i64*
  store i64 %82, i64* %85, align 8
  store i8 1, i8* %71, align 8
  store i8 0, i8* %72, align 1
  store %struct.SkIRect* %58, %struct.SkIRect** %73, align 8
  ret void
}

declare void @_ZN12SkBaseDeviceC2ERK11SkImageInfoRK14SkSurfaceProps(%class.SkBaseDevice*, %struct.SkImageInfo* dereferenceable(24), %class.SkSurfaceProps* dereferenceable(8)) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13SkMarkerStackD2Ev(%class.SkMarkerStack*) unnamed_addr #13 comdat align 2 {
  %2 = getelementptr inbounds %class.SkMarkerStack, %class.SkMarkerStack* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV13SkMarkerStack, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkMarkerStack, %class.SkMarkerStack* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"struct.SkMarkerStack::Rec"*, %"struct.SkMarkerStack::Rec"** %3, align 8
  %5 = icmp eq %"struct.SkMarkerStack::Rec"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.SkMarkerStack::Rec"* %4 to i64
  %8 = getelementptr inbounds %class.SkMarkerStack, %class.SkMarkerStack* %0, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast %"struct.SkMarkerStack::Rec"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.SkMarkerStack::Rec"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #16
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13SkMarkerStackD0Ev(%class.SkMarkerStack*) unnamed_addr #13 comdat align 2 {
  %2 = getelementptr inbounds %class.SkMarkerStack, %class.SkMarkerStack* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV13SkMarkerStack, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkMarkerStack, %class.SkMarkerStack* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"struct.SkMarkerStack::Rec"*, %"struct.SkMarkerStack::Rec"** %3, align 8
  %5 = icmp eq %"struct.SkMarkerStack::Rec"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.SkMarkerStack::Rec"* %4 to i64
  %8 = getelementptr inbounds %class.SkMarkerStack, %class.SkMarkerStack* %0, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast %"struct.SkMarkerStack::Rec"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.SkMarkerStack::Rec"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #16
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %class.SkMarkerStack* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #15
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN14SkGlyphRunListC1Ev(%class.SkGlyphRunList*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteI17SkGlyphRunBuilderEclEPS1_(%"struct.std::__1::default_delete.52"*, %class.SkGlyphRunBuilder*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %class.SkGlyphRunBuilder* %1, null
  br i1 %3, label %64, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %1, i64 0, i32 6, i32 0, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = icmp eq i16* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %4
  %9 = ptrtoint i16* %6 to i64
  %10 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %1, i64 0, i32 6, i32 0, i32 1
  %11 = bitcast i16** %10 to i64*
  store i64 %9, i64* %11, align 8
  %12 = bitcast i16* %6 to i8*
  tail call void @_ZdlPv(i8* %12) #16
  br label %13

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %1, i64 0, i32 4
  %15 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %14, i64 0, i32 0, i32 0
  %16 = load %class.SkGlyphRun*, %class.SkGlyphRun** %15, align 8
  %17 = icmp eq %class.SkGlyphRun* %16, null
  br i1 %17, label %46, label %18

18:                                               ; preds = %13
  %19 = bitcast %class.SkGlyphRun* %16 to i8*
  %20 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %1, i64 0, i32 4, i32 0, i32 1
  %21 = load %class.SkGlyphRun*, %class.SkGlyphRun** %20, align 8
  %22 = icmp eq %class.SkGlyphRun* %21, %16
  br i1 %22, label %44, label %23

23:                                               ; preds = %18, %39
  %24 = phi %class.SkGlyphRun* [ %25, %39 ], [ %21, %18 ]
  %25 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %24, i64 -1
  %26 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %24, i64 -1, i32 4, i32 0, i32 0
  %27 = load %class.SkTypeface*, %class.SkTypeface** %26, align 8
  %28 = icmp eq %class.SkTypeface* %27, null
  br i1 %28, label %39, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %27, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw add i32* %30, i32 -1 acq_rel
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %39

33:                                               ; preds = %29
  %34 = bitcast %class.SkTypeface* %27 to %class.SkRefCntBase*
  %35 = bitcast %class.SkTypeface* %27 to void (%class.SkRefCntBase*)***
  %36 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %35, align 8
  %37 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %36, i64 2
  %38 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %37, align 8
  tail call void %38(%class.SkRefCntBase* nonnull %34) #15
  br label %39

39:                                               ; preds = %33, %29, %23
  %40 = icmp eq %class.SkGlyphRun* %25, %16
  br i1 %40, label %41, label %23

41:                                               ; preds = %39
  %42 = bitcast %"class.std::__1::vector.26"* %14 to i8**
  %43 = load i8*, i8** %42, align 8
  br label %44

44:                                               ; preds = %41, %18
  %45 = phi i8* [ %43, %41 ], [ %19, %18 ]
  store %class.SkGlyphRun* %16, %class.SkGlyphRun** %20, align 8
  tail call void @_ZdlPv(i8* %45) #16
  br label %46

46:                                               ; preds = %44, %13
  %47 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %1, i64 0, i32 3
  %48 = getelementptr inbounds %class.SkAutoTMalloc, %class.SkAutoTMalloc* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  %49 = bitcast %class.SkAutoTMalloc* %47 to i64*
  %50 = load i64, i64* %49, align 8
  store %struct.SkPoint* null, %struct.SkPoint** %48, align 8
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %54, label %52

52:                                               ; preds = %46
  %53 = inttoptr i64 %50 to i8*
  tail call void @_Z7sk_freePv(i8* %53) #15
  br label %54

54:                                               ; preds = %52, %46
  %55 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %1, i64 0, i32 1
  %56 = getelementptr inbounds %class.SkAutoTMalloc, %class.SkAutoTMalloc* %55, i64 0, i32 0, i32 0, i32 0, i32 0
  %57 = bitcast %class.SkAutoTMalloc* %55 to i64*
  %58 = load i64, i64* %57, align 8
  store %struct.SkPoint* null, %struct.SkPoint** %56, align 8
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %62, label %60

60:                                               ; preds = %54
  %61 = inttoptr i64 %58 to i8*
  tail call void @_Z7sk_freePv(i8* %61) #15
  br label %62

62:                                               ; preds = %54, %60
  %63 = bitcast %class.SkGlyphRunBuilder* %1 to i8*
  tail call void @_ZdlPv(i8* %63) #16
  br label %64

64:                                               ; preds = %62, %2
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { cold noreturn nounwind }
attributes #15 = { nounwind }
attributes #16 = { builtin nounwind }
attributes #17 = { nounwind readonly }
attributes #18 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK8SkCanvas14getTotalMatrixEv: argument 0"}
!4 = distinct !{!4, !"_ZNK8SkCanvas14getTotalMatrixEv"}
!5 = !{!6, !3}
!6 = distinct !{!6, !7, !"_ZNK5SkM445asM33Ev: argument 0"}
!7 = distinct !{!7, !"_ZNK5SkM445asM33Ev"}
!8 = !{!9, !6, !3}
!9 = distinct !{!9, !10, !"_ZN8SkMatrix7MakeAllEfffffffff: argument 0"}
!10 = distinct !{!10, !"_ZN8SkMatrix7MakeAllEfffffffff"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNK8SkCanvas14getTotalMatrixEv: argument 0"}
!13 = distinct !{!13, !"_ZNK8SkCanvas14getTotalMatrixEv"}
!14 = !{!15, !12}
!15 = distinct !{!15, !16, !"_ZNK5SkM445asM33Ev: argument 0"}
!16 = distinct !{!16, !"_ZNK5SkM445asM33Ev"}
!17 = !{!18, !15, !12}
!18 = distinct !{!18, !19, !"_ZN8SkMatrix7MakeAllEfffffffff: argument 0"}
!19 = distinct !{!19, !"_ZN8SkMatrix7MakeAllEfffffffff"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZNK5SkM445asM33Ev: argument 0"}
!22 = distinct !{!22, !"_ZNK5SkM445asM33Ev"}
!23 = !{!24, !21}
!24 = distinct !{!24, !25, !"_ZN8SkMatrix7MakeAllEfffffffff: argument 0"}
!25 = distinct !{!25, !"_ZN8SkMatrix7MakeAllEfffffffff"}
!26 = !{!27, !29}
!27 = distinct !{!27, !28, !"_ZN11SkImageInfo4MakeE7SkISizeRK11SkColorInfo: argument 0"}
!28 = distinct !{!28, !"_ZN11SkImageInfo4MakeE7SkISizeRK11SkColorInfo"}
!29 = distinct !{!29, !30, !"_ZNK11SkImageInfo6makeWHEii: argument 0"}
!30 = distinct !{!30, !"_ZNK11SkImageInfo6makeWHEii"}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_Z10sk_make_spI16SkNoPixelsDeviceJ7SkIRectRK14SkSurfacePropsEE5sk_spIT_EDpOT0_: argument 0"}
!33 = distinct !{!33, !"_Z10sk_make_spI16SkNoPixelsDeviceJ7SkIRectRK14SkSurfacePropsEE5sk_spIT_EDpOT0_"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_Z10sk_make_spI13SkMarkerStackJEE5sk_spIT_EDpOT0_: argument 0"}
!36 = distinct !{!36, !"_Z10sk_make_spI13SkMarkerStackJEE5sk_spIT_EDpOT0_"}
!37 = !{!38}
!38 = distinct !{!38, !39, !"_Z10sk_make_spI16SkNoPixelsDeviceJ7SkIRectRK14SkSurfacePropsEE5sk_spIT_EDpOT0_: argument 0"}
!39 = distinct !{!39, !"_Z10sk_make_spI16SkNoPixelsDeviceJ7SkIRectRK14SkSurfacePropsEE5sk_spIT_EDpOT0_"}
!40 = !{!41}
!41 = distinct !{!41, !42, !"_Z10sk_make_spI16SkNoPixelsDeviceJR7SkIRectRK14SkSurfacePropsEE5sk_spIT_EDpOT0_: argument 0"}
!42 = distinct !{!42, !"_Z10sk_make_spI16SkNoPixelsDeviceJR7SkIRectRK14SkSurfacePropsEE5sk_spIT_EDpOT0_"}
!43 = !{!44, !46}
!44 = distinct !{!44, !45, !"_ZN8SkMatrix9TranslateEff: argument 0"}
!45 = distinct !{!45, !"_ZN8SkMatrix9TranslateEff"}
!46 = distinct !{!46, !47, !"_ZN8SkMatrix9TranslateE8SkIPoint: argument 0"}
!47 = distinct !{!47, !"_ZN8SkMatrix9TranslateE8SkIPoint"}
!48 = !{!49}
!49 = distinct !{!49, !50, !"_ZNK5SkM445asM33Ev: argument 0"}
!50 = distinct !{!50, !"_ZNK5SkM445asM33Ev"}
!51 = !{!52, !49}
!52 = distinct !{!52, !53, !"_ZN8SkMatrix7MakeAllEfffffffff: argument 0"}
!53 = distinct !{!53, !"_ZN8SkMatrix7MakeAllEfffffffff"}
!54 = !{!55}
!55 = distinct !{!55, !56, !"_ZNK5SkM445asM33Ev: argument 0"}
!56 = distinct !{!56, !"_ZNK5SkM445asM33Ev"}
!57 = !{!58, !55}
!58 = distinct !{!58, !59, !"_ZN8SkMatrix7MakeAllEfffffffff: argument 0"}
!59 = distinct !{!59, !"_ZN8SkMatrix7MakeAllEfffffffff"}
!60 = !{!61}
!61 = distinct !{!61, !62, !"_ZL15make_layer_infoRK11SkImageInfoiiPK7SkPaint: argument 0"}
!62 = distinct !{!62, !"_ZL15make_layer_infoRK11SkImageInfoiiPK7SkPaint"}
!63 = !{!64, !66, !61}
!64 = distinct !{!64, !65, !"_ZNK11SkColorInfo13refColorSpaceEv: argument 0"}
!65 = distinct !{!65, !"_ZNK11SkColorInfo13refColorSpaceEv"}
!66 = distinct !{!66, !67, !"_ZNK11SkImageInfo13refColorSpaceEv: argument 0"}
!67 = distinct !{!67, !"_ZNK11SkImageInfo13refColorSpaceEv"}
!68 = !{!69, !71, !73}
!69 = distinct !{!69, !70, !"_ZNK11SkColorInfo13refColorSpaceEv: argument 0"}
!70 = distinct !{!70, !"_ZNK11SkColorInfo13refColorSpaceEv"}
!71 = distinct !{!71, !72, !"_ZNK11SkColorInfo13makeColorTypeE11SkColorType: argument 0"}
!72 = distinct !{!72, !"_ZNK11SkColorInfo13makeColorTypeE11SkColorType"}
!73 = distinct !{!73, !74, !"_ZNK11SkImageInfo13makeColorTypeE11SkColorType: argument 0"}
!74 = distinct !{!74, !"_ZNK11SkImageInfo13makeColorTypeE11SkColorType"}
!75 = !{!76}
!76 = distinct !{!76, !77, !"_ZNK8SkCanvas9imageInfoEv: argument 0"}
!77 = distinct !{!77, !"_ZNK8SkCanvas9imageInfoEv"}
!78 = !{!79, !81}
!79 = distinct !{!79, !80, !"_ZNK11SkColorInfo13refColorSpaceEv: argument 0"}
!80 = distinct !{!80, !"_ZNK11SkColorInfo13refColorSpaceEv"}
!81 = distinct !{!81, !82, !"_ZNK11SkImageInfo13refColorSpaceEv: argument 0"}
!82 = distinct !{!82, !"_ZNK11SkImageInfo13refColorSpaceEv"}
!83 = !{!84}
!84 = distinct !{!84, !85, !"_Z10sk_make_spI16SkNoPixelsDeviceJ7SkIRectRK14SkSurfaceProps5sk_spI12SkColorSpaceEEES5_IT_EDpOT0_: argument 0"}
!85 = distinct !{!85, !"_Z10sk_make_spI16SkNoPixelsDeviceJ7SkIRectRK14SkSurfaceProps5sk_spI12SkColorSpaceEEES5_IT_EDpOT0_"}
!86 = !{!87}
!87 = distinct !{!87, !88, !"_ZNK5SkM445asM33Ev: argument 0"}
!88 = distinct !{!88, !"_ZNK5SkM445asM33Ev"}
!89 = !{!90, !87}
!90 = distinct !{!90, !91, !"_ZN8SkMatrix7MakeAllEfffffffff: argument 0"}
!91 = distinct !{!91, !"_ZN8SkMatrix7MakeAllEfffffffff"}
!92 = !{!93}
!93 = distinct !{!93, !94, !"_ZNK5SkM445asM33Ev: argument 0"}
!94 = distinct !{!94, !"_ZNK5SkM445asM33Ev"}
!95 = !{!96, !93}
!96 = distinct !{!96, !97, !"_ZN8SkMatrix7MakeAllEfffffffff: argument 0"}
!97 = distinct !{!97, !"_ZN8SkMatrix7MakeAllEfffffffff"}
!98 = !{!99}
!99 = distinct !{!99, !100, !"_ZN8SkMatrix5ScaleEff: argument 0"}
!100 = distinct !{!100, !"_ZN8SkMatrix5ScaleEff"}
!101 = !{!102}
!102 = distinct !{!102, !103, !"_Z9sk_ref_spI14SkSpecialImageE5sk_spIT_EPKS2_: argument 0"}
!103 = distinct !{!103, !"_Z9sk_ref_spI14SkSpecialImageE5sk_spIT_EPKS2_"}
!104 = !{!105}
!105 = distinct !{!105, !106, !"_ZNK4skif12FilterResultILNS_5UsageE3EE14imageAndOffsetEP8SkIPoint: argument 0"}
!106 = distinct !{!106, !"_ZNK4skif12FilterResultILNS_5UsageE3EE14imageAndOffsetEP8SkIPoint"}
!107 = !{!108}
!108 = distinct !{!108, !109, !"_ZN8SkMatrix6ConcatERKS_S1_: argument 0"}
!109 = distinct !{!109, !"_ZN8SkMatrix6ConcatERKS_S1_"}
!110 = !{!111}
!111 = distinct !{!111, !112, !"_Z9sk_ref_spI13SkColorFilterE5sk_spIT_EPS2_: argument 0"}
!112 = distinct !{!112, !"_Z9sk_ref_spI13SkColorFilterE5sk_spIT_EPS2_"}
!113 = !{!114}
!114 = distinct !{!114, !115, !"_ZNK5SkM445asM33Ev: argument 0"}
!115 = distinct !{!115, !"_ZNK5SkM445asM33Ev"}
!116 = !{!117, !114}
!117 = distinct !{!117, !118, !"_ZN8SkMatrix7MakeAllEfffffffff: argument 0"}
!118 = distinct !{!118, !"_ZN8SkMatrix7MakeAllEfffffffff"}
!119 = !{!120}
!120 = distinct !{!120, !121, !"_ZL23clean_paint_for_latticePK7SkPaint: argument 0"}
!121 = distinct !{!121, !"_ZL23clean_paint_for_latticePK7SkPaint"}
!122 = !{i8 0, i8 2}
!123 = !{!124}
!124 = distinct !{!124, !125, !"_ZNK8SkCanvas14getTotalMatrixEv: argument 0"}
!125 = distinct !{!125, !"_ZNK8SkCanvas14getTotalMatrixEv"}
!126 = !{!127, !124}
!127 = distinct !{!127, !128, !"_ZNK5SkM445asM33Ev: argument 0"}
!128 = distinct !{!128, !"_ZNK5SkM445asM33Ev"}
!129 = !{!130, !127, !124}
!130 = distinct !{!130, !131, !"_ZN8SkMatrix7MakeAllEfffffffff: argument 0"}
!131 = distinct !{!131, !"_ZN8SkMatrix7MakeAllEfffffffff"}
!132 = !{!133}
!133 = distinct !{!133, !134, !"_ZL25clean_paint_for_drawImagePK7SkPaint: argument 0"}
!134 = distinct !{!134, !"_ZL25clean_paint_for_drawImagePK7SkPaint"}
!135 = !{!136}
!136 = distinct !{!136, !137, !"_ZN8SkMatrix9TranslateEff: argument 0"}
!137 = distinct !{!137, !"_ZN8SkMatrix9TranslateEff"}
!138 = !{!139}
!139 = distinct !{!139, !140, !"_ZL25clean_paint_for_drawImagePK7SkPaint: argument 0"}
!140 = distinct !{!140, !"_ZL25clean_paint_for_drawImagePK7SkPaint"}
!141 = !{!142}
!142 = distinct !{!142, !143, !"_ZL25clean_paint_for_drawImagePK7SkPaint: argument 0"}
!143 = distinct !{!143, !"_ZL25clean_paint_for_drawImagePK7SkPaint"}
!144 = !{!145}
!145 = distinct !{!145, !146, !"_ZN8SkMatrix9TranslateEff: argument 0"}
!146 = distinct !{!146, !"_ZN8SkMatrix9TranslateEff"}
!147 = !{!148}
!148 = distinct !{!148, !149, !"_ZL25clean_paint_for_drawImagePK7SkPaint: argument 0"}
!149 = distinct !{!149, !"_ZL25clean_paint_for_drawImagePK7SkPaint"}
!150 = !{!151}
!151 = distinct !{!151, !152, !"_ZL25clean_paint_for_drawImagePK7SkPaint: argument 0"}
!152 = distinct !{!152, !"_ZL25clean_paint_for_drawImagePK7SkPaint"}
!153 = !{!154}
!154 = distinct !{!154, !155, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!155 = distinct !{!155, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
