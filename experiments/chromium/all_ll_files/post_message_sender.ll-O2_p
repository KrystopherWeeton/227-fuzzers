; ModuleID = '../../pdf/post_message_sender.cc'
source_filename = "../../pdf/post_message_sender.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.chrome_pdf::PostMessageSender" = type { %"class.std::__1::unique_ptr", %"class.v8::Isolate"*, %"class.blink::WebPluginContainer"* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.content::V8ValueConverter"* }
%"class.content::V8ValueConverter" = type { %"class.blink::WebV8ValueConverter" }
%"class.blink::WebV8ValueConverter" = type { i32 (...)** }
%"class.v8::Isolate" = type { i8 }
%"class.blink::WebPluginContainer" = type { i32 (...)** }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.1" }
%"union.absl::variant_internal::DestructibleUnionImpl.1" = type { %"union.absl::variant_internal::DestructibleUnionImpl.2" }
%"union.absl::variant_internal::DestructibleUnionImpl.2" = type { %"union.absl::variant_internal::DestructibleUnionImpl.3" }
%"union.absl::variant_internal::DestructibleUnionImpl.3" = type { %"union.absl::variant_internal::DestructibleUnionImpl.4" }
%"union.absl::variant_internal::DestructibleUnionImpl.4" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.v8::HandleScope" = type { %"class.v8::internal::Isolate"*, i64*, i64* }
%"class.v8::internal::Isolate" = type opaque
%"class.blink::WebDocument" = type { %"class.blink::WebNode" }
%"class.blink::WebNode" = type { i32 (...)**, %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.blink::WebDOMMessageEvent" = type { %"class.blink::WebDOMEvent", %"class.absl::optional" }
%"class.blink::WebDOMEvent" = type { %"class.blink::WebPrivatePtr.32" }
%"class.blink::WebPrivatePtr.32" = type { i8* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.33 }
%union.anon.33 = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::WebSerializedScriptValue" = type { %"class.blink::WebPrivatePtr.34" }
%"class.blink::WebPrivatePtr.34" = type { i8* }
%"class.blink::WebString" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type opaque
%"class.blink::WebVector" = type { %"class.std::__1::vector.35" }
%"class.std::__1::vector.35" = type { %"class.std::__1::__vector_base.36" }
%"class.std::__1::__vector_base.36" = type { %"class.blink::MessagePortChannel"*, %"class.blink::MessagePortChannel"*, %"class.std::__1::__compressed_pair.38" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.37 }
%class.scoped_refptr.37 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.blink::MessagePortChannel"* }
%"class.blink::WebLocalFrame" = type { %"class.blink::WebFrame" }
%"class.blink::WebFrame" = type { i32 (...)**, i32, [4 x i8], %"class.blink::MultiToken" }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.v8::Context" = type { i8 }
%"class.v8::Value" = type { i8 }

$_ZN5blink11WebDocumentD0Ev = comdat any

$_ZTVN5blink11WebDocumentE = comdat any

@_ZTVN5blink11WebDocumentE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::WebNode"*)* @_ZN5blink7WebNodeD2Ev to i8*), i8* bitcast (void (%"class.blink::WebDocument"*)* @_ZN5blink11WebDocumentD0Ev to i8*)] }, comdat, align 8

@_ZN10chrome_pdf17PostMessageSenderC1Ev = hidden unnamed_addr alias void (%"class.chrome_pdf::PostMessageSender"*), void (%"class.chrome_pdf::PostMessageSender"*)* @_ZN10chrome_pdf17PostMessageSenderC2Ev
@_ZN10chrome_pdf17PostMessageSenderD1Ev = hidden unnamed_addr alias void (%"class.chrome_pdf::PostMessageSender"*), void (%"class.chrome_pdf::PostMessageSender"*)* @_ZN10chrome_pdf17PostMessageSenderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10chrome_pdf17PostMessageSenderC2Ev(%"class.chrome_pdf::PostMessageSender"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.chrome_pdf::PostMessageSender"* %0 to i64*
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds %"class.chrome_pdf::PostMessageSender", %"class.chrome_pdf::PostMessageSender"* %0, i64 0, i32 1
  %4 = tail call %"class.v8::Isolate"* @_ZN5blink17MainThreadIsolateEv() #6
  store %"class.v8::Isolate"* %4, %"class.v8::Isolate"** %3, align 8
  %5 = getelementptr inbounds %"class.chrome_pdf::PostMessageSender", %"class.chrome_pdf::PostMessageSender"* %0, i64 0, i32 2
  store %"class.blink::WebPluginContainer"* null, %"class.blink::WebPluginContainer"** %5, align 8
  ret void
}

declare %"class.v8::Isolate"* @_ZN5blink17MainThreadIsolateEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10chrome_pdf17PostMessageSenderD2Ev(%"class.chrome_pdf::PostMessageSender"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.chrome_pdf::PostMessageSender", %"class.chrome_pdf::PostMessageSender"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.content::V8ValueConverter"*, %"class.content::V8ValueConverter"** %2, align 8
  store %"class.content::V8ValueConverter"* null, %"class.content::V8ValueConverter"** %2, align 8
  %4 = icmp eq %"class.content::V8ValueConverter"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.content::V8ValueConverter"* %3 to void (%"class.content::V8ValueConverter"*)***
  %7 = load void (%"class.content::V8ValueConverter"*)**, void (%"class.content::V8ValueConverter"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.content::V8ValueConverter"*)*, void (%"class.content::V8ValueConverter"*)** %7, i64 1
  %9 = load void (%"class.content::V8ValueConverter"*)*, void (%"class.content::V8ValueConverter"*)** %8, align 8
  tail call void %9(%"class.content::V8ValueConverter"* nonnull %3) #6
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10chrome_pdf17PostMessageSender4PostEN4base5ValueE(%"class.chrome_pdf::PostMessageSender"* nocapture, %"class.base::Value"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::HandleScope", align 8
  %4 = alloca %"class.blink::WebDocument", align 8
  %5 = alloca %"class.blink::WebDOMMessageEvent", align 8
  %6 = alloca %"class.blink::WebSerializedScriptValue", align 8
  %7 = alloca %"class.blink::WebString", align 8
  %8 = alloca %"class.blink::WebDocument", align 8
  %9 = alloca %"class.blink::WebVector", align 8
  %10 = getelementptr inbounds %"class.chrome_pdf::PostMessageSender", %"class.chrome_pdf::PostMessageSender"* %0, i64 0, i32 2
  %11 = load %"class.blink::WebPluginContainer"*, %"class.blink::WebPluginContainer"** %10, align 8
  %12 = icmp eq %"class.blink::WebPluginContainer"* %11, null
  br i1 %12, label %85, label %13

13:                                               ; preds = %2
  %14 = bitcast %"class.v8::HandleScope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #6
  %15 = getelementptr inbounds %"class.chrome_pdf::PostMessageSender", %"class.chrome_pdf::PostMessageSender"* %0, i64 0, i32 1
  %16 = bitcast %"class.v8::HandleScope"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 24, i1 false)
  %17 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %15, align 8
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %3, %"class.v8::Isolate"* %17) #6
  %18 = bitcast %"class.blink::WebDocument"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #6
  %19 = load %"class.blink::WebPluginContainer"*, %"class.blink::WebPluginContainer"** %10, align 8
  %20 = bitcast %"class.blink::WebPluginContainer"* %19 to void (%"class.blink::WebDocument"*, %"class.blink::WebPluginContainer"*)***
  %21 = load void (%"class.blink::WebDocument"*, %"class.blink::WebPluginContainer"*)**, void (%"class.blink::WebDocument"*, %"class.blink::WebPluginContainer"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::WebDocument"*, %"class.blink::WebPluginContainer"*)*, void (%"class.blink::WebDocument"*, %"class.blink::WebPluginContainer"*)** %21, i64 1
  %23 = load void (%"class.blink::WebDocument"*, %"class.blink::WebPluginContainer"*)*, void (%"class.blink::WebDocument"*, %"class.blink::WebPluginContainer"*)** %22, align 8
  call void %23(%"class.blink::WebDocument"* nonnull sret %4, %"class.blink::WebPluginContainer"* %19) #6
  %24 = call %"class.blink::WebLocalFrame"* @_ZNK5blink11WebDocument8GetFrameEv(%"class.blink::WebDocument"* nonnull %4) #6
  %25 = bitcast %"class.blink::WebLocalFrame"* %24 to %"class.v8::Context"* (%"class.blink::WebLocalFrame"*)***
  %26 = load %"class.v8::Context"* (%"class.blink::WebLocalFrame"*)**, %"class.v8::Context"* (%"class.blink::WebLocalFrame"*)*** %25, align 8
  %27 = getelementptr inbounds %"class.v8::Context"* (%"class.blink::WebLocalFrame"*)*, %"class.v8::Context"* (%"class.blink::WebLocalFrame"*)** %26, i64 47
  %28 = load %"class.v8::Context"* (%"class.blink::WebLocalFrame"*)*, %"class.v8::Context"* (%"class.blink::WebLocalFrame"*)** %27, align 8
  %29 = call %"class.v8::Context"* %28(%"class.blink::WebLocalFrame"* %24) #6
  %30 = getelementptr inbounds %"class.blink::WebDocument", %"class.blink::WebDocument"* %4, i64 0, i32 0
  call void @_ZN5blink7WebNodeD2Ev(%"class.blink::WebNode"* nonnull %30) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #6
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %29) #6
  %31 = getelementptr inbounds %"class.chrome_pdf::PostMessageSender", %"class.chrome_pdf::PostMessageSender"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load %"class.content::V8ValueConverter"*, %"class.content::V8ValueConverter"** %31, align 8
  %33 = icmp eq %"class.content::V8ValueConverter"* %32, null
  br i1 %33, label %34, label %46

34:                                               ; preds = %13
  %35 = call %"class.content::V8ValueConverter"* @_ZN7content16V8ValueConverter6CreateEv() #6
  %36 = ptrtoint %"class.content::V8ValueConverter"* %35 to i64
  %37 = load %"class.content::V8ValueConverter"*, %"class.content::V8ValueConverter"** %31, align 8
  %38 = bitcast %"class.chrome_pdf::PostMessageSender"* %0 to i64*
  store i64 %36, i64* %38, align 8
  %39 = icmp eq %"class.content::V8ValueConverter"* %37, null
  br i1 %39, label %46, label %40

40:                                               ; preds = %34
  %41 = bitcast %"class.content::V8ValueConverter"* %37 to void (%"class.content::V8ValueConverter"*)***
  %42 = load void (%"class.content::V8ValueConverter"*)**, void (%"class.content::V8ValueConverter"*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.content::V8ValueConverter"*)*, void (%"class.content::V8ValueConverter"*)** %42, i64 1
  %44 = load void (%"class.content::V8ValueConverter"*)*, void (%"class.content::V8ValueConverter"*)** %43, align 8
  call void %44(%"class.content::V8ValueConverter"* nonnull %37) #6
  %45 = load %"class.content::V8ValueConverter"*, %"class.content::V8ValueConverter"** %31, align 8
  br label %46

46:                                               ; preds = %13, %34, %40
  %47 = phi %"class.content::V8ValueConverter"* [ %32, %13 ], [ %35, %34 ], [ %45, %40 ]
  %48 = bitcast %"class.content::V8ValueConverter"* %47 to %"class.v8::Value"* (%"class.content::V8ValueConverter"*, %"class.base::Value"*, %"class.v8::Context"*)***
  %49 = load %"class.v8::Value"* (%"class.content::V8ValueConverter"*, %"class.base::Value"*, %"class.v8::Context"*)**, %"class.v8::Value"* (%"class.content::V8ValueConverter"*, %"class.base::Value"*, %"class.v8::Context"*)*** %48, align 8
  %50 = getelementptr inbounds %"class.v8::Value"* (%"class.content::V8ValueConverter"*, %"class.base::Value"*, %"class.v8::Context"*)*, %"class.v8::Value"* (%"class.content::V8ValueConverter"*, %"class.base::Value"*, %"class.v8::Context"*)** %49, i64 4
  %51 = load %"class.v8::Value"* (%"class.content::V8ValueConverter"*, %"class.base::Value"*, %"class.v8::Context"*)*, %"class.v8::Value"* (%"class.content::V8ValueConverter"*, %"class.base::Value"*, %"class.v8::Context"*)** %50, align 8
  %52 = call %"class.v8::Value"* %51(%"class.content::V8ValueConverter"* %47, %"class.base::Value"* %1, %"class.v8::Context"* %29) #6
  %53 = load %"class.blink::WebPluginContainer"*, %"class.blink::WebPluginContainer"** %10, align 8
  %54 = bitcast %"class.blink::WebDOMMessageEvent"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %54) #6
  %55 = bitcast %"class.blink::WebSerializedScriptValue"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #6
  %56 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %15, align 8
  call void @_ZN5blink24WebSerializedScriptValue9SerializeEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.blink::WebSerializedScriptValue"* nonnull sret %6, %"class.v8::Isolate"* %56, %"class.v8::Value"* %52) #6
  %57 = bitcast %"class.blink::WebString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #6
  call void @_ZN5blink9WebStringC1Ev(%"class.blink::WebString"* nonnull %7) #6
  %58 = bitcast %"class.blink::WebDocument"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %58) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %58, i8 0, i64 16, i1 false)
  %59 = getelementptr inbounds %"class.blink::WebDocument", %"class.blink::WebDocument"* %8, i64 0, i32 0
  call void @_ZN5blink7WebNodeC2Ev(%"class.blink::WebNode"* nonnull %59) #6
  %60 = getelementptr inbounds %"class.blink::WebDocument", %"class.blink::WebDocument"* %8, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink11WebDocumentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %60, align 8
  %61 = bitcast %"class.blink::WebVector"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %61, i8 0, i64 24, i1 false)
  call void @_ZN5blink18WebDOMMessageEventC1ERKNS_24WebSerializedScriptValueERKNS_9WebStringEPKNS_8WebFrameERKNS_11WebDocumentENS_9WebVectorINS_18MessagePortChannelEEE(%"class.blink::WebDOMMessageEvent"* nonnull %5, %"class.blink::WebSerializedScriptValue"* nonnull dereferenceable(8) %6, %"class.blink::WebString"* nonnull dereferenceable(8) %7, %"class.blink::WebFrame"* null, %"class.blink::WebDocument"* nonnull dereferenceable(16) %8, %"class.blink::WebVector"* nonnull %9) #6
  %62 = bitcast %"class.blink::WebPluginContainer"* %53 to void (%"class.blink::WebPluginContainer"*, %"class.blink::WebDOMMessageEvent"*)***
  %63 = load void (%"class.blink::WebPluginContainer"*, %"class.blink::WebDOMMessageEvent"*)**, void (%"class.blink::WebPluginContainer"*, %"class.blink::WebDOMMessageEvent"*)*** %62, align 8
  %64 = getelementptr inbounds void (%"class.blink::WebPluginContainer"*, %"class.blink::WebDOMMessageEvent"*)*, void (%"class.blink::WebPluginContainer"*, %"class.blink::WebDOMMessageEvent"*)** %63, i64 3
  %65 = load void (%"class.blink::WebPluginContainer"*, %"class.blink::WebDOMMessageEvent"*)*, void (%"class.blink::WebPluginContainer"*, %"class.blink::WebDOMMessageEvent"*)** %64, align 8
  call void %65(%"class.blink::WebPluginContainer"* %53, %"class.blink::WebDOMMessageEvent"* nonnull dereferenceable(32) %5) #6
  %66 = getelementptr inbounds %"class.blink::WebDOMMessageEvent", %"class.blink::WebDOMMessageEvent"* %5, i64 0, i32 0
  call void @_ZN5blink11WebDOMEvent5ResetEv(%"class.blink::WebDOMEvent"* nonnull %66) #6
  %67 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %9, i64 0, i32 0, i32 0, i32 0
  %68 = load %"class.blink::MessagePortChannel"*, %"class.blink::MessagePortChannel"** %67, align 8
  %69 = icmp eq %"class.blink::MessagePortChannel"* %68, null
  br i1 %69, label %84, label %70

70:                                               ; preds = %46
  %71 = bitcast %"class.blink::MessagePortChannel"* %68 to i8*
  %72 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %9, i64 0, i32 0, i32 0, i32 1
  %73 = load %"class.blink::MessagePortChannel"*, %"class.blink::MessagePortChannel"** %72, align 8
  %74 = icmp eq %"class.blink::MessagePortChannel"* %73, %68
  br i1 %74, label %82, label %75

75:                                               ; preds = %70, %75
  %76 = phi %"class.blink::MessagePortChannel"* [ %77, %75 ], [ %73, %70 ]
  %77 = getelementptr inbounds %"class.blink::MessagePortChannel", %"class.blink::MessagePortChannel"* %76, i64 -1
  call void @_ZN5blink18MessagePortChannelD1Ev(%"class.blink::MessagePortChannel"* %77) #6
  %78 = icmp eq %"class.blink::MessagePortChannel"* %77, %68
  br i1 %78, label %79, label %75

79:                                               ; preds = %75
  %80 = bitcast %"class.blink::WebVector"* %9 to i8**
  %81 = load i8*, i8** %80, align 8
  br label %82

82:                                               ; preds = %79, %70
  %83 = phi i8* [ %81, %79 ], [ %71, %70 ]
  store %"class.blink::MessagePortChannel"* %68, %"class.blink::MessagePortChannel"** %72, align 8
  call void @_ZdlPv(i8* %83) #7
  br label %84

84:                                               ; preds = %46, %82
  call void @_ZN5blink7WebNodeD2Ev(%"class.blink::WebNode"* nonnull %59) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %58) #6
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %7) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #6
  call void @_ZN5blink24WebSerializedScriptValue5ResetEv(%"class.blink::WebSerializedScriptValue"* nonnull %6) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %54) #6
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %29) #6
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #6
  br label %85

85:                                               ; preds = %2, %84
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"*, %"class.v8::Isolate"*) unnamed_addr #1

declare %"class.blink::WebLocalFrame"* @_ZNK5blink11WebDocument8GetFrameEv(%"class.blink::WebDocument"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink7WebNodeD2Ev(%"class.blink::WebNode"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.content::V8ValueConverter"* @_ZN7content16V8ValueConverter6CreateEv() local_unnamed_addr #1

declare void @_ZN5blink24WebSerializedScriptValue9SerializeEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.blink::WebSerializedScriptValue"* sret, %"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #1

declare void @_ZN5blink9WebStringC1Ev(%"class.blink::WebString"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN5blink18WebDOMMessageEventC1ERKNS_24WebSerializedScriptValueERKNS_9WebStringEPKNS_8WebFrameERKNS_11WebDocumentENS_9WebVectorINS_18MessagePortChannelEEE(%"class.blink::WebDOMMessageEvent"*, %"class.blink::WebSerializedScriptValue"* dereferenceable(8), %"class.blink::WebString"* dereferenceable(8), %"class.blink::WebFrame"*, %"class.blink::WebDocument"* dereferenceable(16), %"class.blink::WebVector"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"*) unnamed_addr #3

declare void @_ZN2v87Context5EnterEv(%"class.v8::Context"*) local_unnamed_addr #1

declare void @_ZN5blink7WebNodeC2Ev(%"class.blink::WebNode"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink11WebDocumentD0Ev(%"class.blink::WebDocument"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::WebDocument", %"class.blink::WebDocument"* %0, i64 0, i32 0
  tail call void @_ZN5blink7WebNodeD2Ev(%"class.blink::WebNode"* %2) #6
  %3 = bitcast %"class.blink::WebDocument"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare void @_ZN5blink11WebDOMEvent5ResetEv(%"class.blink::WebDOMEvent"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink18MessagePortChannelD1Ev(%"class.blink::MessagePortChannel"*) unnamed_addr #3

declare void @_ZN5blink24WebSerializedScriptValue5ResetEv(%"class.blink::WebSerializedScriptValue"*) local_unnamed_addr #1

declare void @_ZN2v87Context4ExitEv(%"class.v8::Context"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
