; ModuleID = '../../content/public/browser/security_style_explanations.cc'
source_filename = "../../content/public/browser/security_style_explanations.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.content::SecurityStyleExplanations" = type { i8, %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.content::SecurityStyleExplanation"*, %"struct.content::SecurityStyleExplanation"*, %"class.std::__1::__compressed_pair.19" }
%"struct.content::SecurityStyleExplanation" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %class.scoped_refptr, i32, %"class.std::__1::vector.2" }
%class.scoped_refptr = type { %"class.net::X509Certificate"* }
%"class.net::X509Certificate" = type { %"class.base::RefCountedThreadSafe", %"struct.net::CertPrincipal", %"struct.net::CertPrincipal", %"class.base::Time", %"class.base::Time", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr", %"class.std::__1::vector.12" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.net::CertPrincipal" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.2", %"class.std::__1::vector.2", %"class.std::__1::vector.2", %"class.std::__1::vector.2" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %struct.crypto_buffer_st* }
%struct.crypto_buffer_st = type opaque
%"class.std::__1::vector.12" = type { %"class.std::__1::__vector_base.13" }
%"class.std::__1::__vector_base.13" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::vector.2" = type { %"class.std::__1::__vector_base.3" }
%"class.std::__1::__vector_base.3" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"struct.content::SecurityStyleExplanation"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

@_ZN7content25SecurityStyleExplanationsC1Ev = hidden unnamed_addr alias void (%"struct.content::SecurityStyleExplanations"*), void (%"struct.content::SecurityStyleExplanations"*)* @_ZN7content25SecurityStyleExplanationsC2Ev
@_ZN7content25SecurityStyleExplanationsC1ERKS0_ = hidden unnamed_addr alias void (%"struct.content::SecurityStyleExplanations"*, %"struct.content::SecurityStyleExplanations"*), void (%"struct.content::SecurityStyleExplanations"*, %"struct.content::SecurityStyleExplanations"*)* @_ZN7content25SecurityStyleExplanationsC2ERKS0_
@_ZN7content25SecurityStyleExplanationsD1Ev = hidden unnamed_addr alias void (%"struct.content::SecurityStyleExplanations"*), void (%"struct.content::SecurityStyleExplanations"*)* @_ZN7content25SecurityStyleExplanationsD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content25SecurityStyleExplanationsC2Ev(%"struct.content::SecurityStyleExplanations"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.content::SecurityStyleExplanations", %"struct.content::SecurityStyleExplanations"* %0, i64 0, i32 0
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %"struct.content::SecurityStyleExplanations", %"struct.content::SecurityStyleExplanations"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 120, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content25SecurityStyleExplanationsC2ERKS0_(%"struct.content::SecurityStyleExplanations"*, %"struct.content::SecurityStyleExplanations"* nocapture readonly dereferenceable(128)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.content::SecurityStyleExplanations", %"struct.content::SecurityStyleExplanations"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.content::SecurityStyleExplanations", %"struct.content::SecurityStyleExplanations"* %1, i64 0, i32 0
  %5 = load i8, i8* %4, align 8, !range !2
  store i8 %5, i8* %3, align 8
  %6 = getelementptr inbounds %"struct.content::SecurityStyleExplanations", %"struct.content::SecurityStyleExplanations"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.content::SecurityStyleExplanations", %"struct.content::SecurityStyleExplanations"* %1, i64 0, i32 1
  %8 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %14 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 24, i1 false) #7
  br label %20

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds %"struct.content::SecurityStyleExplanations", %"struct.content::SecurityStyleExplanations"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %6, i8* %17, i64 %19) #7
  br label %20

20:                                               ; preds = %12, %15
  %21 = getelementptr inbounds %"struct.content::SecurityStyleExplanations", %"struct.content::SecurityStyleExplanations"* %0, i64 0, i32 2
  %22 = getelementptr inbounds %"struct.content::SecurityStyleExplanations", %"struct.content::SecurityStyleExplanations"* %1, i64 0, i32 2
  %23 = bitcast %"class.std::__1::vector"* %21 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 24, i1 false) #7
  %24 = getelementptr inbounds %"struct.content::SecurityStyleExplanations", %"struct.content::SecurityStyleExplanations"* %1, i64 0, i32 2, i32 0, i32 1
  %25 = bitcast %"struct.content::SecurityStyleExplanation"** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.std::__1::vector"* %22 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %26, %28
  %30 = sdiv exact i64 %29, 112
  %31 = icmp eq i64 %29, 0
  br i1 %31, label %60, label %32

32:                                               ; preds = %20
  %33 = icmp ugt i64 %30, 164703072086692425
  br i1 %33, label %34, label %36

34:                                               ; preds = %32
  %35 = bitcast %"class.std::__1::vector"* %21 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %35) #8
  unreachable

36:                                               ; preds = %32
  %37 = tail call i8* @_Znwm(i64 %29) #9
  %38 = bitcast i8* %37 to %"struct.content::SecurityStyleExplanation"*
  %39 = getelementptr inbounds %"struct.content::SecurityStyleExplanations", %"struct.content::SecurityStyleExplanations"* %0, i64 0, i32 2, i32 0, i32 1
  %40 = bitcast %"struct.content::SecurityStyleExplanation"** %39 to i8**
  store i8* %37, i8** %40, align 8
  %41 = bitcast %"class.std::__1::vector"* %21 to i8**
  store i8* %37, i8** %41, align 8
  %42 = getelementptr inbounds %"struct.content::SecurityStyleExplanation", %"struct.content::SecurityStyleExplanation"* %38, i64 %30
  %43 = getelementptr inbounds %"struct.content::SecurityStyleExplanations", %"struct.content::SecurityStyleExplanations"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  store %"struct.content::SecurityStyleExplanation"* %42, %"struct.content::SecurityStyleExplanation"** %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %22, i64 0, i32 0, i32 0
  %45 = load %"struct.content::SecurityStyleExplanation"*, %"struct.content::SecurityStyleExplanation"** %44, align 8
  %46 = load %"struct.content::SecurityStyleExplanation"*, %"struct.content::SecurityStyleExplanation"** %24, align 8
  %47 = bitcast %"struct.content::SecurityStyleExplanation"** %39 to i64*
  %48 = ptrtoint i8* %37 to i64
  %49 = icmp eq %"struct.content::SecurityStyleExplanation"* %45, %46
  br i1 %49, label %58, label %50

50:                                               ; preds = %36, %50
  %51 = phi %"struct.content::SecurityStyleExplanation"* [ %54, %50 ], [ %38, %36 ]
  %52 = phi %"struct.content::SecurityStyleExplanation"* [ %53, %50 ], [ %45, %36 ]
  tail call void @_ZN7content24SecurityStyleExplanationC1ERKS0_(%"struct.content::SecurityStyleExplanation"* %51, %"struct.content::SecurityStyleExplanation"* dereferenceable(112) %52) #7
  %53 = getelementptr inbounds %"struct.content::SecurityStyleExplanation", %"struct.content::SecurityStyleExplanation"* %52, i64 1
  %54 = getelementptr inbounds %"struct.content::SecurityStyleExplanation", %"struct.content::SecurityStyleExplanation"* %51, i64 1
  %55 = icmp eq %"struct.content::SecurityStyleExplanation"* %53, %46
  br i1 %55, label %56, label %50

56:                                               ; preds = %50
  %57 = ptrtoint %"struct.content::SecurityStyleExplanation"* %54 to i64
  br label %58

58:                                               ; preds = %56, %36
  %59 = phi i64 [ %48, %36 ], [ %57, %56 ]
  store i64 %59, i64* %47, align 8
  br label %60

60:                                               ; preds = %20, %58
  %61 = getelementptr inbounds %"struct.content::SecurityStyleExplanations", %"struct.content::SecurityStyleExplanations"* %0, i64 0, i32 3
  %62 = getelementptr inbounds %"struct.content::SecurityStyleExplanations", %"struct.content::SecurityStyleExplanations"* %1, i64 0, i32 3
  %63 = bitcast %"class.std::__1::vector"* %61 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 24, i1 false) #7
  %64 = getelementptr inbounds %"struct.content::SecurityStyleExplanations", %"struct.content::SecurityStyleExplanations"* %1, i64 0, i32 3, i32 0, i32 1
  %65 = bitcast %"struct.content::SecurityStyleExplanation"** %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = bitcast %"class.std::__1::vector"* %62 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = sub i64 %66, %68
  %70 = sdiv exact i64 %69, 112
  %71 = icmp eq i64 %69, 0
  br i1 %71, label %100, label %72

72:                                               ; preds = %60
  %73 = icmp ugt i64 %70, 164703072086692425
  br i1 %73, label %74, label %76

74:                                               ; preds = %72
  %75 = bitcast %"class.std::__1::vector"* %61 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %75) #8
  unreachable

76:                                               ; preds = %72
  %77 = tail call i8* @_Znwm(i64 %69) #9
  %78 = bitcast i8* %77 to %"struct.content::SecurityStyleExplanation"*
  %79 = getelementptr inbounds %"struct.content::SecurityStyleExplanations", %"struct.content::SecurityStyleExplanations"* %0, i64 0, i32 3, i32 0, i32 1
  %80 = bitcast %"struct.content::SecurityStyleExplanation"** %79 to i8**
  store i8* %77, i8** %80, align 8
  %81 = bitcast %"class.std::__1::vector"* %61 to i8**
  store i8* %77, i8** %81, align 8
  %82 = getelementptr inbounds %"struct.content::SecurityStyleExplanation", %"struct.content::SecurityStyleExplanation"* %78, i64 %70
  %83 = getelementptr inbounds %"struct.content::SecurityStyleExplanations", %"struct.content::SecurityStyleExplanations"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  store %"struct.content::SecurityStyleExplanation"* %82, %"struct.content::SecurityStyleExplanation"** %83, align 8
  %84 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %62, i64 0, i32 0, i32 0
  %85 = load %"struct.content::SecurityStyleExplanation"*, %"struct.content::SecurityStyleExplanation"** %84, align 8
  %86 = load %"struct.content::SecurityStyleExplanation"*, %"struct.content::SecurityStyleExplanation"** %64, align 8
  %87 = bitcast %"struct.content::SecurityStyleExplanation"** %79 to i64*
  %88 = ptrtoint i8* %77 to i64
  %89 = icmp eq %"struct.content::SecurityStyleExplanation"* %85, %86
  br i1 %89, label %98, label %90

90:                                               ; preds = %76, %90
  %91 = phi %"struct.content::SecurityStyleExplanation"* [ %94, %90 ], [ %78, %76 ]
  %92 = phi %"struct.content::SecurityStyleExplanation"* [ %93, %90 ], [ %85, %76 ]
  tail call void @_ZN7content24SecurityStyleExplanationC1ERKS0_(%"struct.content::SecurityStyleExplanation"* %91, %"struct.content::SecurityStyleExplanation"* dereferenceable(112) %92) #7
  %93 = getelementptr inbounds %"struct.content::SecurityStyleExplanation", %"struct.content::SecurityStyleExplanation"* %92, i64 1
  %94 = getelementptr inbounds %"struct.content::SecurityStyleExplanation", %"struct.content::SecurityStyleExplanation"* %91, i64 1
  %95 = icmp eq %"struct.content::SecurityStyleExplanation"* %93, %86
  br i1 %95, label %96, label %90

96:                                               ; preds = %90
  %97 = ptrtoint %"struct.content::SecurityStyleExplanation"* %94 to i64
  br label %98

98:                                               ; preds = %96, %76
  %99 = phi i64 [ %88, %76 ], [ %97, %96 ]
  store i64 %99, i64* %87, align 8
  br label %100

100:                                              ; preds = %60, %98
  %101 = getelementptr inbounds %"struct.content::SecurityStyleExplanations", %"struct.content::SecurityStyleExplanations"* %0, i64 0, i32 4
  %102 = getelementptr inbounds %"struct.content::SecurityStyleExplanations", %"struct.content::SecurityStyleExplanations"* %1, i64 0, i32 4
  %103 = bitcast %"class.std::__1::vector"* %101 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %103, i8 0, i64 24, i1 false) #7
  %104 = getelementptr inbounds %"struct.content::SecurityStyleExplanations", %"struct.content::SecurityStyleExplanations"* %1, i64 0, i32 4, i32 0, i32 1
  %105 = bitcast %"struct.content::SecurityStyleExplanation"** %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast %"class.std::__1::vector"* %102 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = sub i64 %106, %108
  %110 = sdiv exact i64 %109, 112
  %111 = icmp eq i64 %109, 0
  br i1 %111, label %140, label %112

112:                                              ; preds = %100
  %113 = icmp ugt i64 %110, 164703072086692425
  br i1 %113, label %114, label %116

114:                                              ; preds = %112
  %115 = bitcast %"class.std::__1::vector"* %101 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %115) #8
  unreachable

116:                                              ; preds = %112
  %117 = tail call i8* @_Znwm(i64 %109) #9
  %118 = bitcast i8* %117 to %"struct.content::SecurityStyleExplanation"*
  %119 = getelementptr inbounds %"struct.content::SecurityStyleExplanations", %"struct.content::SecurityStyleExplanations"* %0, i64 0, i32 4, i32 0, i32 1
  %120 = bitcast %"struct.content::SecurityStyleExplanation"** %119 to i8**
  store i8* %117, i8** %120, align 8
  %121 = bitcast %"class.std::__1::vector"* %101 to i8**
  store i8* %117, i8** %121, align 8
  %122 = getelementptr inbounds %"struct.content::SecurityStyleExplanation", %"struct.content::SecurityStyleExplanation"* %118, i64 %110
  %123 = getelementptr inbounds %"struct.content::SecurityStyleExplanations", %"struct.content::SecurityStyleExplanations"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  store %"struct.content::SecurityStyleExplanation"* %122, %"struct.content::SecurityStyleExplanation"** %123, align 8
  %124 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %102, i64 0, i32 0, i32 0
  %125 = load %"struct.content::SecurityStyleExplanation"*, %"struct.content::SecurityStyleExplanation"** %124, align 8
  %126 = load %"struct.content::SecurityStyleExplanation"*, %"struct.content::SecurityStyleExplanation"** %104, align 8
  %127 = bitcast %"struct.content::SecurityStyleExplanation"** %119 to i64*
  %128 = ptrtoint i8* %117 to i64
  %129 = icmp eq %"struct.content::SecurityStyleExplanation"* %125, %126
  br i1 %129, label %138, label %130

130:                                              ; preds = %116, %130
  %131 = phi %"struct.content::SecurityStyleExplanation"* [ %134, %130 ], [ %118, %116 ]
  %132 = phi %"struct.content::SecurityStyleExplanation"* [ %133, %130 ], [ %125, %116 ]
  tail call void @_ZN7content24SecurityStyleExplanationC1ERKS0_(%"struct.content::SecurityStyleExplanation"* %131, %"struct.content::SecurityStyleExplanation"* dereferenceable(112) %132) #7
  %133 = getelementptr inbounds %"struct.content::SecurityStyleExplanation", %"struct.content::SecurityStyleExplanation"* %132, i64 1
  %134 = getelementptr inbounds %"struct.content::SecurityStyleExplanation", %"struct.content::SecurityStyleExplanation"* %131, i64 1
  %135 = icmp eq %"struct.content::SecurityStyleExplanation"* %133, %126
  br i1 %135, label %136, label %130

136:                                              ; preds = %130
  %137 = ptrtoint %"struct.content::SecurityStyleExplanation"* %134 to i64
  br label %138

138:                                              ; preds = %136, %116
  %139 = phi i64 [ %128, %116 ], [ %137, %136 ]
  store i64 %139, i64* %127, align 8
  br label %140

140:                                              ; preds = %100, %138
  %141 = getelementptr inbounds %"struct.content::SecurityStyleExplanations", %"struct.content::SecurityStyleExplanations"* %0, i64 0, i32 5
  %142 = getelementptr inbounds %"struct.content::SecurityStyleExplanations", %"struct.content::SecurityStyleExplanations"* %1, i64 0, i32 5
  %143 = bitcast %"class.std::__1::vector"* %141 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %143, i8 0, i64 24, i1 false) #7
  %144 = getelementptr inbounds %"struct.content::SecurityStyleExplanations", %"struct.content::SecurityStyleExplanations"* %1, i64 0, i32 5, i32 0, i32 1
  %145 = bitcast %"struct.content::SecurityStyleExplanation"** %144 to i64*
  %146 = load i64, i64* %145, align 8
  %147 = bitcast %"class.std::__1::vector"* %142 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = sub i64 %146, %148
  %150 = sdiv exact i64 %149, 112
  %151 = icmp eq i64 %149, 0
  br i1 %151, label %180, label %152

152:                                              ; preds = %140
  %153 = icmp ugt i64 %150, 164703072086692425
  br i1 %153, label %154, label %156

154:                                              ; preds = %152
  %155 = bitcast %"class.std::__1::vector"* %141 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %155) #8
  unreachable

156:                                              ; preds = %152
  %157 = tail call i8* @_Znwm(i64 %149) #9
  %158 = bitcast i8* %157 to %"struct.content::SecurityStyleExplanation"*
  %159 = getelementptr inbounds %"struct.content::SecurityStyleExplanations", %"struct.content::SecurityStyleExplanations"* %0, i64 0, i32 5, i32 0, i32 1
  %160 = bitcast %"struct.content::SecurityStyleExplanation"** %159 to i8**
  store i8* %157, i8** %160, align 8
  %161 = bitcast %"class.std::__1::vector"* %141 to i8**
  store i8* %157, i8** %161, align 8
  %162 = getelementptr inbounds %"struct.content::SecurityStyleExplanation", %"struct.content::SecurityStyleExplanation"* %158, i64 %150
  %163 = getelementptr inbounds %"struct.content::SecurityStyleExplanations", %"struct.content::SecurityStyleExplanations"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  store %"struct.content::SecurityStyleExplanation"* %162, %"struct.content::SecurityStyleExplanation"** %163, align 8
  %164 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %142, i64 0, i32 0, i32 0
  %165 = load %"struct.content::SecurityStyleExplanation"*, %"struct.content::SecurityStyleExplanation"** %164, align 8
  %166 = load %"struct.content::SecurityStyleExplanation"*, %"struct.content::SecurityStyleExplanation"** %144, align 8
  %167 = bitcast %"struct.content::SecurityStyleExplanation"** %159 to i64*
  %168 = ptrtoint i8* %157 to i64
  %169 = icmp eq %"struct.content::SecurityStyleExplanation"* %165, %166
  br i1 %169, label %178, label %170

170:                                              ; preds = %156, %170
  %171 = phi %"struct.content::SecurityStyleExplanation"* [ %174, %170 ], [ %158, %156 ]
  %172 = phi %"struct.content::SecurityStyleExplanation"* [ %173, %170 ], [ %165, %156 ]
  tail call void @_ZN7content24SecurityStyleExplanationC1ERKS0_(%"struct.content::SecurityStyleExplanation"* %171, %"struct.content::SecurityStyleExplanation"* dereferenceable(112) %172) #7
  %173 = getelementptr inbounds %"struct.content::SecurityStyleExplanation", %"struct.content::SecurityStyleExplanation"* %172, i64 1
  %174 = getelementptr inbounds %"struct.content::SecurityStyleExplanation", %"struct.content::SecurityStyleExplanation"* %171, i64 1
  %175 = icmp eq %"struct.content::SecurityStyleExplanation"* %173, %166
  br i1 %175, label %176, label %170

176:                                              ; preds = %170
  %177 = ptrtoint %"struct.content::SecurityStyleExplanation"* %174 to i64
  br label %178

178:                                              ; preds = %176, %156
  %179 = phi i64 [ %168, %156 ], [ %177, %176 ]
  store i64 %179, i64* %167, align 8
  br label %180

180:                                              ; preds = %140, %178
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content25SecurityStyleExplanationsD2Ev(%"struct.content::SecurityStyleExplanations"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.content::SecurityStyleExplanations", %"struct.content::SecurityStyleExplanations"* %0, i64 0, i32 5
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %4 = load %"struct.content::SecurityStyleExplanation"*, %"struct.content::SecurityStyleExplanation"** %3, align 8
  %5 = icmp eq %"struct.content::SecurityStyleExplanation"* %4, null
  br i1 %5, label %20, label %6

6:                                                ; preds = %1
  %7 = bitcast %"struct.content::SecurityStyleExplanation"* %4 to i8*
  %8 = getelementptr inbounds %"struct.content::SecurityStyleExplanations", %"struct.content::SecurityStyleExplanations"* %0, i64 0, i32 5, i32 0, i32 1
  %9 = load %"struct.content::SecurityStyleExplanation"*, %"struct.content::SecurityStyleExplanation"** %8, align 8
  %10 = icmp eq %"struct.content::SecurityStyleExplanation"* %9, %4
  br i1 %10, label %18, label %11

11:                                               ; preds = %6, %11
  %12 = phi %"struct.content::SecurityStyleExplanation"* [ %13, %11 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"struct.content::SecurityStyleExplanation", %"struct.content::SecurityStyleExplanation"* %12, i64 -1
  tail call void @_ZN7content24SecurityStyleExplanationD1Ev(%"struct.content::SecurityStyleExplanation"* %13) #7
  %14 = icmp eq %"struct.content::SecurityStyleExplanation"* %13, %4
  br i1 %14, label %15, label %11

15:                                               ; preds = %11
  %16 = bitcast %"class.std::__1::vector"* %2 to i8**
  %17 = load i8*, i8** %16, align 8
  br label %18

18:                                               ; preds = %15, %6
  %19 = phi i8* [ %17, %15 ], [ %7, %6 ]
  store %"struct.content::SecurityStyleExplanation"* %4, %"struct.content::SecurityStyleExplanation"** %8, align 8
  tail call void @_ZdlPv(i8* %19) #9
  br label %20

20:                                               ; preds = %1, %18
  %21 = getelementptr inbounds %"struct.content::SecurityStyleExplanations", %"struct.content::SecurityStyleExplanations"* %0, i64 0, i32 4
  %22 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %21, i64 0, i32 0, i32 0
  %23 = load %"struct.content::SecurityStyleExplanation"*, %"struct.content::SecurityStyleExplanation"** %22, align 8
  %24 = icmp eq %"struct.content::SecurityStyleExplanation"* %23, null
  br i1 %24, label %39, label %25

25:                                               ; preds = %20
  %26 = bitcast %"struct.content::SecurityStyleExplanation"* %23 to i8*
  %27 = getelementptr inbounds %"struct.content::SecurityStyleExplanations", %"struct.content::SecurityStyleExplanations"* %0, i64 0, i32 4, i32 0, i32 1
  %28 = load %"struct.content::SecurityStyleExplanation"*, %"struct.content::SecurityStyleExplanation"** %27, align 8
  %29 = icmp eq %"struct.content::SecurityStyleExplanation"* %28, %23
  br i1 %29, label %37, label %30

30:                                               ; preds = %25, %30
  %31 = phi %"struct.content::SecurityStyleExplanation"* [ %32, %30 ], [ %28, %25 ]
  %32 = getelementptr inbounds %"struct.content::SecurityStyleExplanation", %"struct.content::SecurityStyleExplanation"* %31, i64 -1
  tail call void @_ZN7content24SecurityStyleExplanationD1Ev(%"struct.content::SecurityStyleExplanation"* %32) #7
  %33 = icmp eq %"struct.content::SecurityStyleExplanation"* %32, %23
  br i1 %33, label %34, label %30

34:                                               ; preds = %30
  %35 = bitcast %"class.std::__1::vector"* %21 to i8**
  %36 = load i8*, i8** %35, align 8
  br label %37

37:                                               ; preds = %34, %25
  %38 = phi i8* [ %36, %34 ], [ %26, %25 ]
  store %"struct.content::SecurityStyleExplanation"* %23, %"struct.content::SecurityStyleExplanation"** %27, align 8
  tail call void @_ZdlPv(i8* %38) #9
  br label %39

39:                                               ; preds = %20, %37
  %40 = getelementptr inbounds %"struct.content::SecurityStyleExplanations", %"struct.content::SecurityStyleExplanations"* %0, i64 0, i32 3
  %41 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %40, i64 0, i32 0, i32 0
  %42 = load %"struct.content::SecurityStyleExplanation"*, %"struct.content::SecurityStyleExplanation"** %41, align 8
  %43 = icmp eq %"struct.content::SecurityStyleExplanation"* %42, null
  br i1 %43, label %58, label %44

44:                                               ; preds = %39
  %45 = bitcast %"struct.content::SecurityStyleExplanation"* %42 to i8*
  %46 = getelementptr inbounds %"struct.content::SecurityStyleExplanations", %"struct.content::SecurityStyleExplanations"* %0, i64 0, i32 3, i32 0, i32 1
  %47 = load %"struct.content::SecurityStyleExplanation"*, %"struct.content::SecurityStyleExplanation"** %46, align 8
  %48 = icmp eq %"struct.content::SecurityStyleExplanation"* %47, %42
  br i1 %48, label %56, label %49

49:                                               ; preds = %44, %49
  %50 = phi %"struct.content::SecurityStyleExplanation"* [ %51, %49 ], [ %47, %44 ]
  %51 = getelementptr inbounds %"struct.content::SecurityStyleExplanation", %"struct.content::SecurityStyleExplanation"* %50, i64 -1
  tail call void @_ZN7content24SecurityStyleExplanationD1Ev(%"struct.content::SecurityStyleExplanation"* %51) #7
  %52 = icmp eq %"struct.content::SecurityStyleExplanation"* %51, %42
  br i1 %52, label %53, label %49

53:                                               ; preds = %49
  %54 = bitcast %"class.std::__1::vector"* %40 to i8**
  %55 = load i8*, i8** %54, align 8
  br label %56

56:                                               ; preds = %53, %44
  %57 = phi i8* [ %55, %53 ], [ %45, %44 ]
  store %"struct.content::SecurityStyleExplanation"* %42, %"struct.content::SecurityStyleExplanation"** %46, align 8
  tail call void @_ZdlPv(i8* %57) #9
  br label %58

58:                                               ; preds = %39, %56
  %59 = getelementptr inbounds %"struct.content::SecurityStyleExplanations", %"struct.content::SecurityStyleExplanations"* %0, i64 0, i32 2
  %60 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %59, i64 0, i32 0, i32 0
  %61 = load %"struct.content::SecurityStyleExplanation"*, %"struct.content::SecurityStyleExplanation"** %60, align 8
  %62 = icmp eq %"struct.content::SecurityStyleExplanation"* %61, null
  br i1 %62, label %77, label %63

63:                                               ; preds = %58
  %64 = bitcast %"struct.content::SecurityStyleExplanation"* %61 to i8*
  %65 = getelementptr inbounds %"struct.content::SecurityStyleExplanations", %"struct.content::SecurityStyleExplanations"* %0, i64 0, i32 2, i32 0, i32 1
  %66 = load %"struct.content::SecurityStyleExplanation"*, %"struct.content::SecurityStyleExplanation"** %65, align 8
  %67 = icmp eq %"struct.content::SecurityStyleExplanation"* %66, %61
  br i1 %67, label %75, label %68

68:                                               ; preds = %63, %68
  %69 = phi %"struct.content::SecurityStyleExplanation"* [ %70, %68 ], [ %66, %63 ]
  %70 = getelementptr inbounds %"struct.content::SecurityStyleExplanation", %"struct.content::SecurityStyleExplanation"* %69, i64 -1
  tail call void @_ZN7content24SecurityStyleExplanationD1Ev(%"struct.content::SecurityStyleExplanation"* %70) #7
  %71 = icmp eq %"struct.content::SecurityStyleExplanation"* %70, %61
  br i1 %71, label %72, label %68

72:                                               ; preds = %68
  %73 = bitcast %"class.std::__1::vector"* %59 to i8**
  %74 = load i8*, i8** %73, align 8
  br label %75

75:                                               ; preds = %72, %63
  %76 = phi i8* [ %74, %72 ], [ %64, %63 ]
  store %"struct.content::SecurityStyleExplanation"* %61, %"struct.content::SecurityStyleExplanation"** %65, align 8
  tail call void @_ZdlPv(i8* %76) #9
  br label %77

77:                                               ; preds = %58, %75
  %78 = getelementptr inbounds %"struct.content::SecurityStyleExplanations", %"struct.content::SecurityStyleExplanations"* %0, i64 0, i32 1
  %79 = bitcast %"class.std::__1::basic_string"* %78 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i8*, i8** %84, align 8
  tail call void @_ZdlPv(i8* %85) #9
  br label %86

86:                                               ; preds = %77, %83
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7content24SecurityStyleExplanationD1Ev(%"struct.content::SecurityStyleExplanation"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZN7content24SecurityStyleExplanationC1ERKS0_(%"struct.content::SecurityStyleExplanation"*, %"struct.content::SecurityStyleExplanation"* dereferenceable(112)) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
