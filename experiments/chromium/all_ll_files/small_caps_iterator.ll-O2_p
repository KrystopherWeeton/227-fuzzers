; ModuleID = '../../third_party/blink/renderer/platform/fonts/small_caps_iterator.cc'
source_filename = "../../third_party/blink/renderer/platform/fonts/small_caps_iterator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::SmallCapsIterator" = type <{ %"class.std::__1::unique_ptr", i32, i32, i8, [3 x i8], i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::UTF16TextIterator"* }
%"class.blink::UTF16TextIterator" = type <{ i16*, i16*, i32, i32, i32, [4 x i8] }>

@_ZN5blink17SmallCapsIteratorC1EPKDsj = hidden unnamed_addr alias void (%"class.blink::SmallCapsIterator"*, i16*, i32), void (%"class.blink::SmallCapsIterator"*, i16*, i32)* @_ZN5blink17SmallCapsIteratorC2EPKDsj

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17SmallCapsIteratorC2EPKDsj(%"class.blink::SmallCapsIterator"* nocapture, i16*, i32) unnamed_addr #0 align 2 {
  %4 = tail call noalias i8* @malloc(i64 32) #3
  %5 = bitcast i8* %4 to %"class.blink::UTF16TextIterator"*
  tail call void @_ZN5blink17UTF16TextIteratorC1EPKDsi(%"class.blink::UTF16TextIterator"* %5, i16* %1, i32 %2) #3
  %6 = bitcast %"class.blink::SmallCapsIterator"* %0 to i8**
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds %"class.blink::SmallCapsIterator", %"class.blink::SmallCapsIterator"* %0, i64 0, i32 1
  store i32 %2, i32* %7, align 8
  %8 = getelementptr inbounds %"class.blink::SmallCapsIterator", %"class.blink::SmallCapsIterator"* %0, i64 0, i32 2
  store i32 0, i32* %8, align 4
  %9 = getelementptr inbounds %"class.blink::SmallCapsIterator", %"class.blink::SmallCapsIterator"* %0, i64 0, i32 3
  %10 = icmp eq i32 %2, 0
  %11 = zext i1 %10 to i8
  store i8 %11, i8* %9, align 8
  %12 = getelementptr inbounds %"class.blink::SmallCapsIterator", %"class.blink::SmallCapsIterator"* %0, i64 0, i32 5
  store i32 2, i32* %12, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink17SmallCapsIterator7ConsumeEPjPNS0_17SmallCapsBehaviorE(%"class.blink::SmallCapsIterator"*, i32* nocapture, i32* nocapture) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::SmallCapsIterator", %"class.blink::SmallCapsIterator"* %0, i64 0, i32 3
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %77

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::SmallCapsIterator", %"class.blink::SmallCapsIterator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::UTF16TextIterator"*, %"class.blink::UTF16TextIterator"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::SmallCapsIterator", %"class.blink::SmallCapsIterator"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.blink::UTF16TextIterator", %"class.blink::UTF16TextIterator"* %9, i64 0, i32 2
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %"class.blink::UTF16TextIterator", %"class.blink::UTF16TextIterator"* %9, i64 0, i32 3
  %14 = load i32, i32* %13, align 4
  %15 = icmp slt i32 %12, %14
  br i1 %15, label %16, label %72

16:                                               ; preds = %7
  %17 = getelementptr inbounds %"class.blink::SmallCapsIterator", %"class.blink::SmallCapsIterator"* %0, i64 0, i32 5
  %18 = getelementptr inbounds %"class.blink::SmallCapsIterator", %"class.blink::SmallCapsIterator"* %0, i64 0, i32 6
  br label %19

19:                                               ; preds = %16, %56
  %20 = phi %"class.blink::UTF16TextIterator"* [ %9, %16 ], [ %66, %56 ]
  %21 = getelementptr inbounds %"class.blink::UTF16TextIterator", %"class.blink::UTF16TextIterator"* %20, i64 0, i32 0
  %22 = load i16*, i16** %21, align 8
  %23 = load i16, i16* %22, align 2
  %24 = zext i16 %23 to i32
  store i32 %24, i32* %10, align 4
  %25 = getelementptr inbounds %"class.blink::UTF16TextIterator", %"class.blink::UTF16TextIterator"* %20, i64 0, i32 4
  store i32 1, i32* %25, align 8
  %26 = load i32, i32* %10, align 4
  %27 = and i32 %26, -2048
  %28 = icmp eq i32 %27, 55296
  br i1 %28, label %29, label %33

29:                                               ; preds = %19
  %30 = tail call zeroext i1 @_ZN5blink17UTF16TextIterator20ConsumeSurrogatePairERi(%"class.blink::UTF16TextIterator"* %20, i32* dereferenceable(4) %10) #3
  br i1 %30, label %31, label %72

31:                                               ; preds = %29
  %32 = load i32, i32* %10, align 4
  br label %33

33:                                               ; preds = %31, %19
  %34 = phi i32 [ %32, %31 ], [ %26, %19 ]
  %35 = load i32, i32* %17, align 4
  store i32 %35, i32* %18, align 8
  %36 = tail call zeroext i8 @u_getCombiningClass_69(i32 %34) #3
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %40, label %38

38:                                               ; preds = %33
  %39 = load i32, i32* %17, align 4
  br label %45

40:                                               ; preds = %33
  %41 = load i32, i32* %10, align 4
  %42 = tail call signext i8 @u_hasBinaryProperty_69(i32 %41, i32 52) #3
  %43 = icmp ne i8 %42, 0
  %44 = zext i1 %43 to i32
  store i32 %44, i32* %17, align 4
  br label %45

45:                                               ; preds = %38, %40
  %46 = phi i32 [ %39, %38 ], [ %44, %40 ]
  %47 = load i32, i32* %18, align 8
  %48 = icmp eq i32 %47, %46
  %49 = icmp eq i32 %47, 2
  %50 = or i1 %49, %48
  %51 = load %"class.blink::UTF16TextIterator"*, %"class.blink::UTF16TextIterator"** %8, align 8
  br i1 %50, label %56, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.blink::UTF16TextIterator", %"class.blink::UTF16TextIterator"* %51, i64 0, i32 2
  %54 = load i32, i32* %53, align 8
  store i32 %54, i32* %1, align 4
  %55 = load i32, i32* %18, align 8
  store i32 %55, i32* %2, align 4
  br label %77

56:                                               ; preds = %45
  %57 = getelementptr inbounds %"class.blink::UTF16TextIterator", %"class.blink::UTF16TextIterator"* %51, i64 0, i32 4
  %58 = load i32, i32* %57, align 8
  %59 = getelementptr inbounds %"class.blink::UTF16TextIterator", %"class.blink::UTF16TextIterator"* %51, i64 0, i32 0
  %60 = load i16*, i16** %59, align 8
  %61 = zext i32 %58 to i64
  %62 = getelementptr inbounds i16, i16* %60, i64 %61
  store i16* %62, i16** %59, align 8
  %63 = getelementptr inbounds %"class.blink::UTF16TextIterator", %"class.blink::UTF16TextIterator"* %51, i64 0, i32 2
  %64 = load i32, i32* %63, align 8
  %65 = add i32 %64, %58
  store i32 %65, i32* %63, align 8
  %66 = load %"class.blink::UTF16TextIterator"*, %"class.blink::UTF16TextIterator"** %8, align 8
  %67 = getelementptr inbounds %"class.blink::UTF16TextIterator", %"class.blink::UTF16TextIterator"* %66, i64 0, i32 2
  %68 = load i32, i32* %67, align 8
  %69 = getelementptr inbounds %"class.blink::UTF16TextIterator", %"class.blink::UTF16TextIterator"* %66, i64 0, i32 3
  %70 = load i32, i32* %69, align 4
  %71 = icmp slt i32 %68, %70
  br i1 %71, label %19, label %72

72:                                               ; preds = %29, %56, %7
  %73 = getelementptr inbounds %"class.blink::SmallCapsIterator", %"class.blink::SmallCapsIterator"* %0, i64 0, i32 1
  %74 = load i32, i32* %73, align 8
  store i32 %74, i32* %1, align 4
  %75 = getelementptr inbounds %"class.blink::SmallCapsIterator", %"class.blink::SmallCapsIterator"* %0, i64 0, i32 5
  %76 = load i32, i32* %75, align 4
  store i32 %76, i32* %2, align 4
  store i8 1, i8* %4, align 8
  br label %77

77:                                               ; preds = %3, %72, %52
  %78 = phi i1 [ true, %52 ], [ true, %72 ], [ false, %3 ]
  ret i1 %78
}

declare zeroext i8 @u_getCombiningClass_69(i32) local_unnamed_addr #1

declare signext i8 @u_hasBinaryProperty_69(i32, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink17UTF16TextIterator20ConsumeSurrogatePairERi(%"class.blink::UTF16TextIterator"*, i32* dereferenceable(4)) local_unnamed_addr #1

declare void @_ZN5blink17UTF16TextIteratorC1EPKDsi(%"class.blink::UTF16TextIterator"*, i16*, i32) unnamed_addr #1

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
