; ModuleID = '../../components/omnibox/browser/url_prefix.cc'
source_filename = "../../components/omnibox/browser/url_prefix.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::NoDestructor" = type { [24 x i8] }
%"class.base::NoDestructor.8" = type { [32 x i8] }
%struct.URLPrefix = type { %"class.std::__1::basic_string", i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %struct.URLPrefix*, %struct.URLPrefix*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %struct.URLPrefix* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorI9URLPrefixNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_ = comdat any

$_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EERKS9_SB_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

@_ZZN9URLPrefix14GetURLPrefixesEvE8prefixes = internal global %"class.base::NoDestructor" zeroinitializer, align 16
@_ZGVZN9URLPrefix14GetURLPrefixesEvE8prefixes = internal global i64 0, align 8
@_ZZN12_GLOBAL__N_124BestURLPrefixWithWWWCaseERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_E10www_prefix = internal global %"class.base::NoDestructor.8" zeroinitializer, align 8
@_ZGVZN12_GLOBAL__N_124BestURLPrefixWithWWWCaseERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_E10www_prefix = internal global i64 0, align 8

@_ZN9URLPrefixC1ERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEm = hidden unnamed_addr alias void (%struct.URLPrefix*, %"class.std::__1::basic_string"*, i64), void (%struct.URLPrefix*, %"class.std::__1::basic_string"*, i64)* @_ZN9URLPrefixC2ERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEm

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9URLPrefixC2ERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEm(%struct.URLPrefix*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), i64) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %3
  %9 = bitcast %struct.URLPrefix* %0 to i8*
  %10 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false) #9
  br label %186

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i16*, i16** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %15, 11
  br i1 %16, label %17, label %22

17:                                               ; preds = %11
  %18 = bitcast %struct.URLPrefix* %0 to i16*
  %19 = trunc i64 %15 to i8
  %20 = bitcast %struct.URLPrefix* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %20, i64 0, i32 1, i32 1
  store i8 %19, i8* %21, align 1
  br label %39

22:                                               ; preds = %11
  %23 = icmp ugt i64 %15, 9223372036854775791
  br i1 %23, label %24, label %26

24:                                               ; preds = %22
  %25 = bitcast %struct.URLPrefix* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %25) #10
  unreachable

26:                                               ; preds = %22
  %27 = add nuw nsw i64 %15, 8
  %28 = and i64 %27, -8
  %29 = icmp slt i64 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %26
  tail call void @abort() #10
  unreachable

31:                                               ; preds = %26
  %32 = shl i64 %28, 1
  %33 = tail call i8* @_Znwm(i64 %32) #11
  %34 = bitcast i8* %33 to i16*
  %35 = bitcast %struct.URLPrefix* %0 to i8**
  store i8* %33, i8** %35, align 8
  %36 = or i64 %28, -9223372036854775808
  %37 = getelementptr inbounds %struct.URLPrefix, %struct.URLPrefix* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %36, i64* %37, align 8
  %38 = getelementptr inbounds %struct.URLPrefix, %struct.URLPrefix* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %15, i64* %38, align 8
  br label %39

39:                                               ; preds = %31, %17
  %40 = phi i16* [ %18, %17 ], [ %34, %31 ]
  %41 = add nuw nsw i64 %15, 1
  %42 = add i64 %15, 1
  %43 = icmp ult i64 %42, 16
  br i1 %43, label %133, label %44

44:                                               ; preds = %39
  %45 = add i64 %15, 1
  %46 = getelementptr i16, i16* %40, i64 %45
  %47 = getelementptr i16, i16* %13, i64 %45
  %48 = icmp ult i16* %40, %47
  %49 = icmp ult i16* %13, %46
  %50 = and i1 %48, %49
  br i1 %50, label %133, label %51

51:                                               ; preds = %44
  %52 = and i64 %42, -16
  %53 = sub i64 %41, %52
  %54 = getelementptr i16, i16* %13, i64 %52
  %55 = getelementptr i16, i16* %40, i64 %52
  %56 = add i64 %52, -16
  %57 = lshr exact i64 %56, 4
  %58 = add nuw nsw i64 %57, 1
  %59 = and i64 %58, 3
  %60 = icmp ult i64 %56, 48
  br i1 %60, label %112, label %61

61:                                               ; preds = %51
  %62 = sub nsw i64 %58, %59
  br label %63

63:                                               ; preds = %63, %61
  %64 = phi i64 [ 0, %61 ], [ %109, %63 ]
  %65 = phi i64 [ %62, %61 ], [ %110, %63 ]
  %66 = getelementptr i16, i16* %13, i64 %64
  %67 = getelementptr i16, i16* %40, i64 %64
  %68 = bitcast i16* %66 to <8 x i16>*
  %69 = load <8 x i16>, <8 x i16>* %68, align 2, !alias.scope !2
  %70 = getelementptr i16, i16* %66, i64 8
  %71 = bitcast i16* %70 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !2
  %73 = bitcast i16* %67 to <8 x i16>*
  store <8 x i16> %69, <8 x i16>* %73, align 2, !alias.scope !5, !noalias !2
  %74 = getelementptr i16, i16* %67, i64 8
  %75 = bitcast i16* %74 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %75, align 2, !alias.scope !5, !noalias !2
  %76 = or i64 %64, 16
  %77 = getelementptr i16, i16* %13, i64 %76
  %78 = getelementptr i16, i16* %40, i64 %76
  %79 = bitcast i16* %77 to <8 x i16>*
  %80 = load <8 x i16>, <8 x i16>* %79, align 2, !alias.scope !2
  %81 = getelementptr i16, i16* %77, i64 8
  %82 = bitcast i16* %81 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !2
  %84 = bitcast i16* %78 to <8 x i16>*
  store <8 x i16> %80, <8 x i16>* %84, align 2, !alias.scope !5, !noalias !2
  %85 = getelementptr i16, i16* %78, i64 8
  %86 = bitcast i16* %85 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %86, align 2, !alias.scope !5, !noalias !2
  %87 = or i64 %64, 32
  %88 = getelementptr i16, i16* %13, i64 %87
  %89 = getelementptr i16, i16* %40, i64 %87
  %90 = bitcast i16* %88 to <8 x i16>*
  %91 = load <8 x i16>, <8 x i16>* %90, align 2, !alias.scope !2
  %92 = getelementptr i16, i16* %88, i64 8
  %93 = bitcast i16* %92 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !2
  %95 = bitcast i16* %89 to <8 x i16>*
  store <8 x i16> %91, <8 x i16>* %95, align 2, !alias.scope !5, !noalias !2
  %96 = getelementptr i16, i16* %89, i64 8
  %97 = bitcast i16* %96 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %97, align 2, !alias.scope !5, !noalias !2
  %98 = or i64 %64, 48
  %99 = getelementptr i16, i16* %13, i64 %98
  %100 = getelementptr i16, i16* %40, i64 %98
  %101 = bitcast i16* %99 to <8 x i16>*
  %102 = load <8 x i16>, <8 x i16>* %101, align 2, !alias.scope !2
  %103 = getelementptr i16, i16* %99, i64 8
  %104 = bitcast i16* %103 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !2
  %106 = bitcast i16* %100 to <8 x i16>*
  store <8 x i16> %102, <8 x i16>* %106, align 2, !alias.scope !5, !noalias !2
  %107 = getelementptr i16, i16* %100, i64 8
  %108 = bitcast i16* %107 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %108, align 2, !alias.scope !5, !noalias !2
  %109 = add i64 %64, 64
  %110 = add i64 %65, -4
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %63, !llvm.loop !7

112:                                              ; preds = %63, %51
  %113 = phi i64 [ 0, %51 ], [ %109, %63 ]
  %114 = icmp eq i64 %59, 0
  br i1 %114, label %131, label %115

115:                                              ; preds = %112, %115
  %116 = phi i64 [ %128, %115 ], [ %113, %112 ]
  %117 = phi i64 [ %129, %115 ], [ %59, %112 ]
  %118 = getelementptr i16, i16* %13, i64 %116
  %119 = getelementptr i16, i16* %40, i64 %116
  %120 = bitcast i16* %118 to <8 x i16>*
  %121 = load <8 x i16>, <8 x i16>* %120, align 2, !alias.scope !2
  %122 = getelementptr i16, i16* %118, i64 8
  %123 = bitcast i16* %122 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !2
  %125 = bitcast i16* %119 to <8 x i16>*
  store <8 x i16> %121, <8 x i16>* %125, align 2, !alias.scope !5, !noalias !2
  %126 = getelementptr i16, i16* %119, i64 8
  %127 = bitcast i16* %126 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %127, align 2, !alias.scope !5, !noalias !2
  %128 = add i64 %116, 16
  %129 = add i64 %117, -1
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %131, label %115, !llvm.loop !9

131:                                              ; preds = %115, %112
  %132 = icmp eq i64 %42, %52
  br i1 %132, label %186, label %133

133:                                              ; preds = %131, %44, %39
  %134 = phi i64 [ %41, %44 ], [ %41, %39 ], [ %53, %131 ]
  %135 = phi i16* [ %13, %44 ], [ %13, %39 ], [ %54, %131 ]
  %136 = phi i16* [ %40, %44 ], [ %40, %39 ], [ %55, %131 ]
  %137 = add i64 %134, -1
  %138 = and i64 %134, 7
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %151, label %140

140:                                              ; preds = %133, %140
  %141 = phi i64 [ %146, %140 ], [ %134, %133 ]
  %142 = phi i16* [ %148, %140 ], [ %135, %133 ]
  %143 = phi i16* [ %147, %140 ], [ %136, %133 ]
  %144 = phi i64 [ %149, %140 ], [ %138, %133 ]
  %145 = load i16, i16* %142, align 2
  store i16 %145, i16* %143, align 2
  %146 = add i64 %141, -1
  %147 = getelementptr inbounds i16, i16* %143, i64 1
  %148 = getelementptr inbounds i16, i16* %142, i64 1
  %149 = add i64 %144, -1
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %140, !llvm.loop !11

151:                                              ; preds = %140, %133
  %152 = phi i64 [ %134, %133 ], [ %146, %140 ]
  %153 = phi i16* [ %135, %133 ], [ %148, %140 ]
  %154 = phi i16* [ %136, %133 ], [ %147, %140 ]
  %155 = icmp ult i64 %137, 7
  br i1 %155, label %186, label %156

156:                                              ; preds = %151, %156
  %157 = phi i64 [ %182, %156 ], [ %152, %151 ]
  %158 = phi i16* [ %184, %156 ], [ %153, %151 ]
  %159 = phi i16* [ %183, %156 ], [ %154, %151 ]
  %160 = load i16, i16* %158, align 2
  store i16 %160, i16* %159, align 2
  %161 = getelementptr inbounds i16, i16* %159, i64 1
  %162 = getelementptr inbounds i16, i16* %158, i64 1
  %163 = load i16, i16* %162, align 2
  store i16 %163, i16* %161, align 2
  %164 = getelementptr inbounds i16, i16* %159, i64 2
  %165 = getelementptr inbounds i16, i16* %158, i64 2
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %159, i64 3
  %168 = getelementptr inbounds i16, i16* %158, i64 3
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %159, i64 4
  %171 = getelementptr inbounds i16, i16* %158, i64 4
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %159, i64 5
  %174 = getelementptr inbounds i16, i16* %158, i64 5
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %159, i64 6
  %177 = getelementptr inbounds i16, i16* %158, i64 6
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %159, i64 7
  %180 = getelementptr inbounds i16, i16* %158, i64 7
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = add i64 %157, -8
  %183 = getelementptr inbounds i16, i16* %159, i64 8
  %184 = getelementptr inbounds i16, i16* %158, i64 8
  %185 = icmp eq i64 %182, 0
  br i1 %185, label %186, label %156, !llvm.loop !12

186:                                              ; preds = %151, %156, %131, %8
  %187 = getelementptr inbounds %struct.URLPrefix, %struct.URLPrefix* %0, i64 0, i32 1
  store i64 %2, i64* %187, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::vector"* @_ZN9URLPrefix14GetURLPrefixesEv() local_unnamed_addr #0 align 2 {
  %1 = alloca %struct.URLPrefix, align 8
  %2 = alloca %struct.URLPrefix, align 8
  %3 = alloca %struct.URLPrefix, align 8
  %4 = alloca %struct.URLPrefix, align 8
  %5 = alloca %struct.URLPrefix, align 8
  %6 = alloca %struct.URLPrefix, align 8
  %7 = alloca %struct.URLPrefix, align 8
  %8 = alloca %"class.std::__1::vector", align 16
  %9 = load atomic i8, i8* bitcast (i64* @_ZGVZN9URLPrefix14GetURLPrefixesEvE8prefixes to i8*) acquire, align 8
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %261, !prof !13

11:                                               ; preds = %0
  %12 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN9URLPrefix14GetURLPrefixesEvE8prefixes) #9
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %261, label %14

14:                                               ; preds = %11
  %15 = bitcast %"class.std::__1::vector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #9
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %15, i8 0, i64 24, i1 false) #9, !alias.scope !14
  %17 = bitcast %struct.URLPrefix* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #9, !noalias !14
  %18 = tail call i8* @_Znwm(i64 32) #11, !noalias !14
  %19 = bitcast i8* %18 to <8 x i16>*
  store <8 x i16> <i16 104, i16 116, i16 116, i16 112, i16 58, i16 47, i16 47, i16 119>, <8 x i16>* %19, align 2, !noalias !14
  %20 = getelementptr inbounds i8, i8* %18, i64 16
  %21 = bitcast i8* %20 to i16*
  store i16 119, i16* %21, align 2, !noalias !14
  %22 = getelementptr inbounds i8, i8* %18, i64 18
  %23 = bitcast i8* %22 to i16*
  store i16 119, i16* %23, align 2, !noalias !14
  %24 = getelementptr inbounds i8, i8* %18, i64 20
  %25 = bitcast i8* %24 to i16*
  store i16 46, i16* %25, align 2, !noalias !14
  %26 = getelementptr inbounds i8, i8* %18, i64 22
  %27 = bitcast i8* %26 to i16*
  store i16 0, i16* %27, align 2, !noalias !14
  %28 = tail call i8* @_Znwm(i64 32) #11
  %29 = bitcast i8* %28 to i16*
  %30 = bitcast %struct.URLPrefix* %1 to i8**
  store i8* %28, i8** %30, align 8, !noalias !14
  %31 = getelementptr inbounds %struct.URLPrefix, %struct.URLPrefix* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = bitcast i64* %31 to <2 x i64>*
  store <2 x i64> <i64 11, i64 -9223372036854775792>, <2 x i64>* %32, align 8, !noalias !14
  store i16 104, i16* %29, align 2, !noalias !14
  %33 = getelementptr inbounds i8, i8* %28, i64 2
  %34 = bitcast i8* %33 to i16*
  store i16 116, i16* %34, align 2, !noalias !14
  %35 = getelementptr inbounds i8, i8* %28, i64 4
  %36 = bitcast i8* %35 to i16*
  store i16 116, i16* %36, align 2, !noalias !14
  %37 = getelementptr inbounds i8, i8* %28, i64 6
  %38 = bitcast i8* %37 to i16*
  store i16 112, i16* %38, align 2, !noalias !14
  %39 = getelementptr inbounds i8, i8* %28, i64 8
  %40 = bitcast i8* %39 to i16*
  store i16 58, i16* %40, align 2, !noalias !14
  %41 = getelementptr inbounds i8, i8* %28, i64 10
  %42 = bitcast i8* %41 to i16*
  %43 = getelementptr inbounds i8, i8* %18, i64 10
  %44 = bitcast i8* %43 to i16*
  %45 = load i16, i16* %44, align 2
  store i16 %45, i16* %42, align 2, !noalias !14
  %46 = getelementptr inbounds i8, i8* %28, i64 12
  %47 = bitcast i8* %46 to i16*
  %48 = getelementptr inbounds i8, i8* %18, i64 12
  %49 = bitcast i8* %48 to i16*
  %50 = load i16, i16* %49, align 2
  store i16 %50, i16* %47, align 2, !noalias !14
  %51 = getelementptr inbounds i8, i8* %28, i64 14
  %52 = bitcast i8* %51 to i16*
  %53 = getelementptr inbounds i8, i8* %18, i64 14
  %54 = bitcast i8* %53 to i16*
  %55 = load i16, i16* %54, align 2
  store i16 %55, i16* %52, align 2, !noalias !14
  %56 = getelementptr inbounds i8, i8* %28, i64 16
  %57 = bitcast i8* %56 to i16*
  %58 = getelementptr inbounds i8, i8* %18, i64 16
  %59 = bitcast i8* %58 to i16*
  %60 = load i16, i16* %59, align 2
  store i16 %60, i16* %57, align 2, !noalias !14
  %61 = getelementptr inbounds i8, i8* %28, i64 18
  %62 = bitcast i8* %61 to i16*
  %63 = getelementptr inbounds i8, i8* %18, i64 18
  %64 = bitcast i8* %63 to i16*
  %65 = load i16, i16* %64, align 2
  store i16 %65, i16* %62, align 2, !noalias !14
  %66 = getelementptr inbounds i8, i8* %28, i64 20
  %67 = bitcast i8* %66 to i16*
  %68 = getelementptr inbounds i8, i8* %18, i64 20
  %69 = bitcast i8* %68 to i16*
  %70 = load i16, i16* %69, align 2
  store i16 %70, i16* %67, align 2, !noalias !14
  %71 = getelementptr inbounds i8, i8* %28, i64 22
  %72 = bitcast i8* %71 to i16*
  store i16 0, i16* %72, align 2, !noalias !14
  %73 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %74 = getelementptr inbounds %struct.URLPrefix, %struct.URLPrefix* %1, i64 0, i32 1
  store i64 2, i64* %74, align 8, !noalias !14
  call void @_ZNSt3__16vectorI9URLPrefixNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_(%"class.std::__1::vector"* nonnull %8, %struct.URLPrefix* nonnull dereferenceable(32) %1) #9
  %75 = bitcast %struct.URLPrefix* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %76 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %75, i64 0, i32 1, i32 1
  %77 = load i8, i8* %76, align 1, !noalias !14
  %78 = icmp slt i8 %77, 0
  br i1 %78, label %79, label %81

79:                                               ; preds = %14
  %80 = load i8*, i8** %30, align 8, !noalias !14
  call void @_ZdlPv(i8* %80) #11
  br label %81

81:                                               ; preds = %14, %79
  call void @_ZdlPv(i8* nonnull %18) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #9, !noalias !14
  %82 = bitcast %struct.URLPrefix* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %82) #9, !noalias !14
  %83 = call i8* @_Znwm(i64 32) #11
  %84 = bitcast i8* %83 to <8 x i16>*
  store <8 x i16> <i16 104, i16 116, i16 116, i16 112, i16 115, i16 58, i16 47, i16 47>, <8 x i16>* %84, align 2, !noalias !14
  %85 = getelementptr inbounds i8, i8* %83, i64 16
  %86 = bitcast i8* %85 to i16*
  store i16 119, i16* %86, align 2, !noalias !14
  %87 = getelementptr inbounds i8, i8* %83, i64 18
  %88 = bitcast i8* %87 to i16*
  store i16 119, i16* %88, align 2, !noalias !14
  %89 = getelementptr inbounds i8, i8* %83, i64 20
  %90 = bitcast i8* %89 to i16*
  store i16 119, i16* %90, align 2, !noalias !14
  %91 = getelementptr inbounds i8, i8* %83, i64 22
  %92 = bitcast i8* %91 to i16*
  store i16 46, i16* %92, align 2, !noalias !14
  %93 = getelementptr inbounds i8, i8* %83, i64 24
  %94 = bitcast i8* %93 to i16*
  store i16 0, i16* %94, align 2, !noalias !14
  %95 = call i8* @_Znwm(i64 32) #11
  %96 = bitcast i8* %95 to i16*
  %97 = bitcast %struct.URLPrefix* %2 to i8**
  store i8* %95, i8** %97, align 8, !noalias !14
  %98 = getelementptr inbounds %struct.URLPrefix, %struct.URLPrefix* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %99 = bitcast i64* %98 to <2 x i64>*
  store <2 x i64> <i64 12, i64 -9223372036854775792>, <2 x i64>* %99, align 8, !noalias !14
  store i16 104, i16* %96, align 2, !noalias !14
  %100 = getelementptr inbounds i8, i8* %95, i64 2
  %101 = bitcast i8* %100 to i16*
  store i16 116, i16* %101, align 2, !noalias !14
  %102 = getelementptr inbounds i8, i8* %95, i64 4
  %103 = bitcast i8* %102 to i16*
  store i16 116, i16* %103, align 2, !noalias !14
  %104 = getelementptr inbounds i8, i8* %95, i64 6
  %105 = bitcast i8* %104 to i16*
  store i16 112, i16* %105, align 2, !noalias !14
  %106 = getelementptr inbounds i8, i8* %95, i64 8
  %107 = bitcast i8* %106 to i16*
  store i16 115, i16* %107, align 2, !noalias !14
  %108 = getelementptr inbounds i8, i8* %95, i64 10
  %109 = getelementptr inbounds i8, i8* %83, i64 10
  %110 = bitcast i8* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2
  %112 = bitcast i8* %108 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %112, align 2, !noalias !14
  %113 = getelementptr inbounds %struct.URLPrefix, %struct.URLPrefix* %2, i64 0, i32 1
  store i64 2, i64* %113, align 8, !noalias !14
  %114 = load %struct.URLPrefix*, %struct.URLPrefix** %16, align 8, !alias.scope !14
  %115 = load %struct.URLPrefix*, %struct.URLPrefix** %73, align 16, !alias.scope !14
  %116 = icmp ult %struct.URLPrefix* %114, %115
  br i1 %116, label %117, label %124

117:                                              ; preds = %81
  %118 = bitcast %struct.URLPrefix* %114 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* nonnull align 8 %82, i64 24, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %82, i8 0, i64 24, i1 false) #9, !noalias !14
  %119 = getelementptr inbounds %struct.URLPrefix, %struct.URLPrefix* %114, i64 0, i32 1
  %120 = load i64, i64* %113, align 8, !noalias !14
  store i64 %120, i64* %119, align 8
  %121 = getelementptr inbounds %struct.URLPrefix, %struct.URLPrefix* %114, i64 1
  %122 = ptrtoint %struct.URLPrefix* %121 to i64
  %123 = bitcast %struct.URLPrefix** %16 to i64*
  store i64 %122, i64* %123, align 8, !alias.scope !14
  br label %131

124:                                              ; preds = %81
  call void @_ZNSt3__16vectorI9URLPrefixNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_(%"class.std::__1::vector"* nonnull %8, %struct.URLPrefix* nonnull dereferenceable(32) %2) #9
  %125 = bitcast %struct.URLPrefix* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %126 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %125, i64 0, i32 1, i32 1
  %127 = load i8, i8* %126, align 1, !noalias !14
  %128 = icmp slt i8 %127, 0
  br i1 %128, label %129, label %131

129:                                              ; preds = %124
  %130 = load i8*, i8** %97, align 8, !noalias !14
  call void @_ZdlPv(i8* %130) #11
  br label %131

131:                                              ; preds = %129, %124, %117
  call void @_ZdlPv(i8* nonnull %83) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %82) #9, !noalias !14
  %132 = bitcast %struct.URLPrefix* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %132) #9, !noalias !14
  %133 = getelementptr inbounds %struct.URLPrefix, %struct.URLPrefix* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i16* inttoptr (i64 16326029693157478 to i16*), i16** %133, align 8, !noalias !14
  %134 = getelementptr inbounds %struct.URLPrefix, %struct.URLPrefix* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 33496033332756527, i64* %134, align 8, !noalias !14
  %135 = getelementptr inbounds %struct.URLPrefix, %struct.URLPrefix* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %136 = bitcast i64* %135 to i16*
  store i16 119, i16* %136, align 8, !noalias !14
  %137 = getelementptr inbounds i8, i8* %132, i64 18
  %138 = bitcast i8* %137 to i16*
  store i16 46, i16* %138, align 2, !noalias !14
  %139 = getelementptr inbounds i8, i8* %132, i64 20
  %140 = bitcast i8* %139 to i16*
  store i16 0, i16* %140, align 4, !noalias !14
  %141 = getelementptr inbounds i8, i8* %132, i64 23
  store i8 10, i8* %141, align 1, !noalias !14
  %142 = getelementptr inbounds %struct.URLPrefix, %struct.URLPrefix* %3, i64 0, i32 1
  store i64 2, i64* %142, align 8, !noalias !14
  %143 = load %struct.URLPrefix*, %struct.URLPrefix** %16, align 8, !alias.scope !14
  %144 = load %struct.URLPrefix*, %struct.URLPrefix** %73, align 16, !alias.scope !14
  %145 = icmp ult %struct.URLPrefix* %143, %144
  br i1 %145, label %146, label %153

146:                                              ; preds = %131
  %147 = bitcast %struct.URLPrefix* %143 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %147, i8* nonnull align 8 %132, i64 24, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %132, i8 0, i64 24, i1 false) #9, !noalias !14
  %148 = getelementptr inbounds %struct.URLPrefix, %struct.URLPrefix* %143, i64 0, i32 1
  %149 = load i64, i64* %142, align 8, !noalias !14
  store i64 %149, i64* %148, align 8
  %150 = getelementptr inbounds %struct.URLPrefix, %struct.URLPrefix* %143, i64 1
  %151 = ptrtoint %struct.URLPrefix* %150 to i64
  %152 = bitcast %struct.URLPrefix** %16 to i64*
  store i64 %151, i64* %152, align 8, !alias.scope !14
  br label %161

153:                                              ; preds = %131
  call void @_ZNSt3__16vectorI9URLPrefixNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_(%"class.std::__1::vector"* nonnull %8, %struct.URLPrefix* nonnull dereferenceable(32) %3) #9
  %154 = bitcast %struct.URLPrefix* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %155 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %154, i64 0, i32 1, i32 1
  %156 = load i8, i8* %155, align 1, !noalias !14
  %157 = icmp slt i8 %156, 0
  br i1 %157, label %158, label %161

158:                                              ; preds = %153
  %159 = bitcast %struct.URLPrefix* %3 to i8**
  %160 = load i8*, i8** %159, align 8, !noalias !14
  call void @_ZdlPv(i8* %160) #11
  br label %161

161:                                              ; preds = %146, %153, %158
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %132) #9, !noalias !14
  %162 = bitcast %struct.URLPrefix* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %162) #9, !noalias !14
  %163 = getelementptr inbounds %struct.URLPrefix, %struct.URLPrefix* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i16* inttoptr (i64 31525695615402088 to i16*), i16** %163, align 8, !noalias !14
  %164 = getelementptr inbounds %struct.URLPrefix, %struct.URLPrefix* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 201866543162, i64* %164, align 8, !noalias !14
  %165 = getelementptr inbounds i8, i8* %162, i64 23
  store i8 7, i8* %165, align 1, !noalias !14
  %166 = getelementptr inbounds %struct.URLPrefix, %struct.URLPrefix* %4, i64 0, i32 1
  store i64 1, i64* %166, align 8, !noalias !14
  %167 = load %struct.URLPrefix*, %struct.URLPrefix** %16, align 8, !alias.scope !14
  %168 = load %struct.URLPrefix*, %struct.URLPrefix** %73, align 16, !alias.scope !14
  %169 = icmp ult %struct.URLPrefix* %167, %168
  br i1 %169, label %170, label %177

170:                                              ; preds = %161
  %171 = bitcast %struct.URLPrefix* %167 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %171, i8* nonnull align 8 %162, i64 24, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %162, i8 0, i64 24, i1 false) #9, !noalias !14
  %172 = getelementptr inbounds %struct.URLPrefix, %struct.URLPrefix* %167, i64 0, i32 1
  %173 = load i64, i64* %166, align 8, !noalias !14
  store i64 %173, i64* %172, align 8
  %174 = getelementptr inbounds %struct.URLPrefix, %struct.URLPrefix* %167, i64 1
  %175 = ptrtoint %struct.URLPrefix* %174 to i64
  %176 = bitcast %struct.URLPrefix** %16 to i64*
  store i64 %175, i64* %176, align 8, !alias.scope !14
  br label %185

177:                                              ; preds = %161
  call void @_ZNSt3__16vectorI9URLPrefixNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_(%"class.std::__1::vector"* nonnull %8, %struct.URLPrefix* nonnull dereferenceable(32) %4) #9
  %178 = bitcast %struct.URLPrefix* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %179 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %178, i64 0, i32 1, i32 1
  %180 = load i8, i8* %179, align 1, !noalias !14
  %181 = icmp slt i8 %180, 0
  br i1 %181, label %182, label %185

182:                                              ; preds = %177
  %183 = bitcast %struct.URLPrefix* %4 to i8**
  %184 = load i8*, i8** %183, align 8, !noalias !14
  call void @_ZdlPv(i8* %184) #11
  br label %185

185:                                              ; preds = %170, %177, %182
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %162) #9, !noalias !14
  %186 = bitcast %struct.URLPrefix* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %186) #9, !noalias !14
  %187 = getelementptr inbounds %struct.URLPrefix, %struct.URLPrefix* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i16* inttoptr (i64 31525695615402088 to i16*), i16** %187, align 8, !noalias !14
  %188 = getelementptr inbounds %struct.URLPrefix, %struct.URLPrefix* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 13229525772664947, i64* %188, align 8, !noalias !14
  %189 = getelementptr inbounds %struct.URLPrefix, %struct.URLPrefix* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %190 = bitcast i64* %189 to i16*
  store i16 0, i16* %190, align 8, !noalias !14
  %191 = getelementptr inbounds i8, i8* %186, i64 23
  store i8 8, i8* %191, align 1, !noalias !14
  %192 = getelementptr inbounds %struct.URLPrefix, %struct.URLPrefix* %5, i64 0, i32 1
  store i64 1, i64* %192, align 8, !noalias !14
  %193 = load %struct.URLPrefix*, %struct.URLPrefix** %16, align 8, !alias.scope !14
  %194 = load %struct.URLPrefix*, %struct.URLPrefix** %73, align 16, !alias.scope !14
  %195 = icmp ult %struct.URLPrefix* %193, %194
  br i1 %195, label %196, label %203

196:                                              ; preds = %185
  %197 = bitcast %struct.URLPrefix* %193 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %197, i8* nonnull align 8 %186, i64 24, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %186, i8 0, i64 24, i1 false) #9, !noalias !14
  %198 = getelementptr inbounds %struct.URLPrefix, %struct.URLPrefix* %193, i64 0, i32 1
  %199 = load i64, i64* %192, align 8, !noalias !14
  store i64 %199, i64* %198, align 8
  %200 = getelementptr inbounds %struct.URLPrefix, %struct.URLPrefix* %193, i64 1
  %201 = ptrtoint %struct.URLPrefix* %200 to i64
  %202 = bitcast %struct.URLPrefix** %16 to i64*
  store i64 %201, i64* %202, align 8, !alias.scope !14
  br label %211

203:                                              ; preds = %185
  call void @_ZNSt3__16vectorI9URLPrefixNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_(%"class.std::__1::vector"* nonnull %8, %struct.URLPrefix* nonnull dereferenceable(32) %5) #9
  %204 = bitcast %struct.URLPrefix* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %205 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %204, i64 0, i32 1, i32 1
  %206 = load i8, i8* %205, align 1, !noalias !14
  %207 = icmp slt i8 %206, 0
  br i1 %207, label %208, label %211

208:                                              ; preds = %203
  %209 = bitcast %struct.URLPrefix* %5 to i8**
  %210 = load i8*, i8** %209, align 8, !noalias !14
  call void @_ZdlPv(i8* %210) #11
  br label %211

211:                                              ; preds = %196, %203, %208
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %186) #9, !noalias !14
  %212 = bitcast %struct.URLPrefix* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %212) #9, !noalias !14
  %213 = getelementptr inbounds %struct.URLPrefix, %struct.URLPrefix* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i16* inttoptr (i64 16326029693157478 to i16*), i16** %213, align 8, !noalias !14
  %214 = getelementptr inbounds %struct.URLPrefix, %struct.URLPrefix* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 3080239, i64* %214, align 8, !noalias !14
  %215 = getelementptr inbounds i8, i8* %212, i64 23
  store i8 6, i8* %215, align 1, !noalias !14
  %216 = getelementptr inbounds %struct.URLPrefix, %struct.URLPrefix* %6, i64 0, i32 1
  store i64 1, i64* %216, align 8, !noalias !14
  %217 = load %struct.URLPrefix*, %struct.URLPrefix** %16, align 8, !alias.scope !14
  %218 = load %struct.URLPrefix*, %struct.URLPrefix** %73, align 16, !alias.scope !14
  %219 = icmp ult %struct.URLPrefix* %217, %218
  br i1 %219, label %220, label %227

220:                                              ; preds = %211
  %221 = bitcast %struct.URLPrefix* %217 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %221, i8* nonnull align 8 %212, i64 24, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %212, i8 0, i64 24, i1 false) #9, !noalias !14
  %222 = getelementptr inbounds %struct.URLPrefix, %struct.URLPrefix* %217, i64 0, i32 1
  %223 = load i64, i64* %216, align 8, !noalias !14
  store i64 %223, i64* %222, align 8
  %224 = getelementptr inbounds %struct.URLPrefix, %struct.URLPrefix* %217, i64 1
  %225 = ptrtoint %struct.URLPrefix* %224 to i64
  %226 = bitcast %struct.URLPrefix** %16 to i64*
  store i64 %225, i64* %226, align 8, !alias.scope !14
  br label %235

227:                                              ; preds = %211
  call void @_ZNSt3__16vectorI9URLPrefixNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_(%"class.std::__1::vector"* nonnull %8, %struct.URLPrefix* nonnull dereferenceable(32) %6) #9
  %228 = bitcast %struct.URLPrefix* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %229 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %228, i64 0, i32 1, i32 1
  %230 = load i8, i8* %229, align 1, !noalias !14
  %231 = icmp slt i8 %230, 0
  br i1 %231, label %232, label %235

232:                                              ; preds = %227
  %233 = bitcast %struct.URLPrefix* %6 to i8**
  %234 = load i8*, i8** %233, align 8, !noalias !14
  call void @_ZdlPv(i8* %234) #11
  br label %235

235:                                              ; preds = %220, %227, %232
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %212) #9, !noalias !14
  %236 = bitcast %struct.URLPrefix* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %236) #9, !noalias !14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %236, i8 0, i64 32, i1 false) #9, !noalias !14
  %237 = load %struct.URLPrefix*, %struct.URLPrefix** %16, align 8, !alias.scope !14
  %238 = load %struct.URLPrefix*, %struct.URLPrefix** %73, align 16, !alias.scope !14
  %239 = icmp ult %struct.URLPrefix* %237, %238
  br i1 %239, label %240, label %248

240:                                              ; preds = %235
  %241 = getelementptr inbounds %struct.URLPrefix, %struct.URLPrefix* %7, i64 0, i32 1
  %242 = bitcast %struct.URLPrefix* %237 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %242, i8* nonnull align 8 %236, i64 24, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %236, i8 0, i64 24, i1 false) #9, !noalias !14
  %243 = getelementptr inbounds %struct.URLPrefix, %struct.URLPrefix* %237, i64 0, i32 1
  %244 = load i64, i64* %241, align 8, !noalias !14
  store i64 %244, i64* %243, align 8
  %245 = getelementptr inbounds %struct.URLPrefix, %struct.URLPrefix* %237, i64 1
  %246 = ptrtoint %struct.URLPrefix* %245 to i64
  %247 = bitcast %struct.URLPrefix** %16 to i64*
  store i64 %246, i64* %247, align 8, !alias.scope !14
  br label %256

248:                                              ; preds = %235
  call void @_ZNSt3__16vectorI9URLPrefixNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_(%"class.std::__1::vector"* nonnull %8, %struct.URLPrefix* nonnull dereferenceable(32) %7) #9
  %249 = bitcast %struct.URLPrefix* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %250 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %249, i64 0, i32 1, i32 1
  %251 = load i8, i8* %250, align 1, !noalias !14
  %252 = icmp slt i8 %251, 0
  br i1 %252, label %253, label %256

253:                                              ; preds = %248
  %254 = bitcast %struct.URLPrefix* %7 to i8**
  %255 = load i8*, i8** %254, align 8, !noalias !14
  call void @_ZdlPv(i8* %255) #11
  br label %256

256:                                              ; preds = %253, %248, %240
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %236) #9, !noalias !14
  %257 = bitcast %"class.std::__1::vector"* %8 to <2 x i64>*
  %258 = load <2 x i64>, <2 x i64>* %257, align 16
  store <2 x i64> %258, <2 x i64>* bitcast (%"class.base::NoDestructor"* @_ZZN9URLPrefix14GetURLPrefixesEvE8prefixes to <2 x i64>*), align 16
  %259 = bitcast %struct.URLPrefix** %73 to i64*
  %260 = load i64, i64* %259, align 16
  store i64 %260, i64* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN9URLPrefix14GetURLPrefixesEvE8prefixes, i64 0, i32 0, i64 16) to i64*), align 16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #9
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN9URLPrefix14GetURLPrefixesEvE8prefixes) #9
  br label %261

261:                                              ; preds = %11, %256, %0
  ret %"class.std::__1::vector"* bitcast (%"class.base::NoDestructor"* @_ZZN9URLPrefix14GetURLPrefixesEvE8prefixes to %"class.std::__1::vector"*)
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.URLPrefix* @_ZN9URLPrefix13BestURLPrefixERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #9
  %6 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i16*, i16** %10, align 8
  %12 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %13 = select i1 %9, i16* %11, i16* %12
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = zext i8 %8 to i64
  %17 = select i1 %9, i64 %15, i64 %16
  call void @_ZN4base4i18n7ToLowerENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %3, i16* %13, i64 %17) #9
  %18 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #9
  %19 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %19, i64 0, i32 1, i32 1
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i16*, i16** %23, align 8
  %25 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %26 = select i1 %22, i16* %24, i16* %25
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = zext i8 %21 to i64
  %30 = select i1 %22, i64 %28, i64 %29
  call void @_ZN4base4i18n7ToLowerENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %4, i16* %26, i64 %30) #9
  %31 = call fastcc %struct.URLPrefix* @_ZN12_GLOBAL__N_121BestURLPrefixInternalERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4)
  %32 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %32, i64 0, i32 1, i32 1
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %2
  %37 = bitcast %"class.std::__1::basic_string"* %4 to i8**
  %38 = load i8*, i8** %37, align 8
  call void @_ZdlPv(i8* %38) #11
  br label %39

39:                                               ; preds = %2, %36
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #9
  %40 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %40, i64 0, i32 1, i32 1
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %39
  %45 = bitcast %"class.std::__1::basic_string"* %3 to i8**
  %46 = load i8*, i8** %45, align 8
  call void @_ZdlPv(i8* %46) #11
  br label %47

47:                                               ; preds = %39, %44
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #9
  ret %struct.URLPrefix* %31
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %struct.URLPrefix* @_ZN12_GLOBAL__N_121BestURLPrefixInternalERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = tail call dereferenceable(24) %"class.std::__1::vector"* @_ZN9URLPrefix14GetURLPrefixesEv()
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %6 = load %struct.URLPrefix*, %struct.URLPrefix** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %8 = load %struct.URLPrefix*, %struct.URLPrefix** %7, align 8
  %9 = icmp eq %struct.URLPrefix* %6, %8
  br i1 %9, label %49, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %11, i64 0, i32 1, i32 1
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %17 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %17, i64 0, i32 1, i32 1
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = bitcast %"class.std::__1::basic_string"* %3 to i16*
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = bitcast %"class.std::__1::basic_string"* %3 to i8**
  br label %25

23:                                               ; preds = %47
  %24 = icmp eq %struct.URLPrefix* %48, %8
  br i1 %24, label %49, label %25

25:                                               ; preds = %10, %23
  %26 = phi %struct.URLPrefix* [ %6, %10 ], [ %48, %23 ]
  %27 = load i8, i8* %12, align 1
  %28 = icmp slt i8 %27, 0
  %29 = load i16*, i16** %13, align 8
  %30 = select i1 %28, i16* %29, i16* %14
  %31 = load i64, i64* %15, align 8
  %32 = zext i8 %27 to i64
  %33 = select i1 %28, i64 %31, i64 %32
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #9
  %34 = getelementptr inbounds %struct.URLPrefix, %struct.URLPrefix* %26, i64 0, i32 0
  call void @_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EERKS9_SB_(%"class.std::__1::basic_string"* nonnull sret %3, %"class.std::__1::basic_string"* dereferenceable(24) %34, %"class.std::__1::basic_string"* dereferenceable(24) %1)
  %35 = load i8, i8* %18, align 1
  %36 = icmp slt i8 %35, 0
  %37 = load i16*, i16** %19, align 8
  %38 = select i1 %36, i16* %37, i16* %20
  %39 = load i64, i64* %21, align 8
  %40 = zext i8 %35 to i64
  %41 = select i1 %36, i64 %39, i64 %40
  %42 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_11CompareCaseE(i16* %30, i64 %33, i16* %38, i64 %41, i32 0) #9
  %43 = load i8, i8* %18, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %47

45:                                               ; preds = %25
  %46 = load i8*, i8** %22, align 8
  call void @_ZdlPv(i8* %46) #11
  br label %47

47:                                               ; preds = %25, %45
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #9
  %48 = getelementptr inbounds %struct.URLPrefix, %struct.URLPrefix* %26, i64 1
  br i1 %42, label %49, label %23

49:                                               ; preds = %23, %47, %2
  %50 = phi %struct.URLPrefix* [ null, %2 ], [ %26, %47 ], [ null, %23 ]
  ret %struct.URLPrefix* %50
}

declare void @_ZN4base4i18n7ToLowerENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* sret, i16*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN9URLPrefix27GetInlineAutocompleteOffsetERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_bS8_(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #9
  %9 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %9, i64 0, i32 1, i32 1
  %11 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load i8, i8* %10, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i16*, i16** %14, align 8
  %16 = bitcast %"class.std::__1::basic_string"* %3 to i16*
  %17 = select i1 %13, i16* %15, i16* %16
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = zext i8 %12 to i64
  %21 = select i1 %13, i64 %19, i64 %20
  call void @_ZN4base4i18n7ToLowerENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %5, i16* %17, i64 %21) #9
  %22 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #9
  %23 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %23, i64 0, i32 1, i32 1
  %25 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 24, i1 false)
  %26 = load i8, i8* %24, align 1
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i16*, i16** %28, align 8
  %30 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %31 = select i1 %27, i16* %29, i16* %30
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = zext i8 %26 to i64
  %35 = select i1 %27, i64 %33, i64 %34
  call void @_ZN4base4i18n7ToLowerENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %6, i16* %31, i64 %35) #9
  br i1 %2, label %36, label %38

36:                                               ; preds = %4
  %37 = call fastcc %struct.URLPrefix* @_ZN12_GLOBAL__N_124BestURLPrefixWithWWWCaseERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %5, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6)
  br label %40

38:                                               ; preds = %4
  %39 = call fastcc %struct.URLPrefix* @_ZN12_GLOBAL__N_121BestURLPrefixInternalERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %5, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6)
  br label %40

40:                                               ; preds = %38, %36
  %41 = phi %struct.URLPrefix* [ %37, %36 ], [ %39, %38 ]
  %42 = icmp eq %struct.URLPrefix* %41, null
  br i1 %42, label %43, label %103

43:                                               ; preds = %40
  %44 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %44, i64 0, i32 1, i32 1
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, 0
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = zext i8 %46 to i64
  %51 = select i1 %47, i64 %49, i64 %50
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %129, label %53

53:                                               ; preds = %43
  %54 = load i8, i8* %24, align 1
  %55 = icmp slt i8 %54, 0
  %56 = load i64, i64* %32, align 8
  %57 = zext i8 %54 to i64
  %58 = select i1 %55, i64 %56, i64 %57
  %59 = icmp eq i64 %51, %58
  br i1 %59, label %65, label %60

60:                                               ; preds = %53
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load i16*, i16** %61, align 8
  %63 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %64 = select i1 %47, i16* %62, i16* %63
  br label %84

65:                                               ; preds = %53
  %66 = load i16*, i16** %28, align 8
  %67 = select i1 %55, i16* %66, i16* %30
  %68 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load i16*, i16** %68, align 8
  %70 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %71 = select i1 %47, i16* %69, i16* %70
  br label %72

72:                                               ; preds = %79, %65
  %73 = phi i64 [ %80, %79 ], [ %51, %65 ]
  %74 = phi i16* [ %82, %79 ], [ %67, %65 ]
  %75 = phi i16* [ %81, %79 ], [ %71, %65 ]
  %76 = load i16, i16* %75, align 2
  %77 = load i16, i16* %74, align 2
  %78 = icmp eq i16 %77, %76
  br i1 %78, label %79, label %84

79:                                               ; preds = %72
  %80 = add i64 %73, -1
  %81 = getelementptr inbounds i16, i16* %75, i64 1
  %82 = getelementptr inbounds i16, i16* %74, i64 1
  %83 = icmp eq i64 %80, 0
  br i1 %83, label %129, label %72

84:                                               ; preds = %72, %60
  %85 = phi i16* [ %64, %60 ], [ %71, %72 ]
  %86 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #9
  %87 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %87, i8 -86, i64 24, i1 false)
  call void @_ZN4base4i18n7ToLowerENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %7, i16* %85, i64 %51) #9
  br i1 %2, label %88, label %90

88:                                               ; preds = %84
  %89 = call fastcc %struct.URLPrefix* @_ZN12_GLOBAL__N_124BestURLPrefixWithWWWCaseERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %5, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7)
  br label %92

90:                                               ; preds = %84
  %91 = call fastcc %struct.URLPrefix* @_ZN12_GLOBAL__N_121BestURLPrefixInternalERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %5, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7)
  br label %92

92:                                               ; preds = %90, %88
  %93 = phi %struct.URLPrefix* [ %89, %88 ], [ %91, %90 ]
  %94 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %95 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %94, i64 0, i32 1, i32 1
  %96 = load i8, i8* %95, align 1
  %97 = icmp slt i8 %96, 0
  br i1 %97, label %98, label %101

98:                                               ; preds = %92
  %99 = bitcast %"class.std::__1::basic_string"* %7 to i8**
  %100 = load i8*, i8** %99, align 8
  call void @_ZdlPv(i8* %100) #11
  br label %101

101:                                              ; preds = %98, %92
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #9
  %102 = icmp eq %struct.URLPrefix* %93, null
  br i1 %102, label %129, label %103

103:                                              ; preds = %40, %101
  %104 = phi %"class.std::__1::basic_string"* [ %1, %101 ], [ %0, %40 ]
  %105 = phi %struct.URLPrefix* [ %93, %101 ], [ %41, %40 ]
  %106 = bitcast %struct.URLPrefix* %105 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %107 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %106, i64 0, i32 1, i32 1
  %108 = load i8, i8* %107, align 1
  %109 = icmp slt i8 %108, 0
  br i1 %109, label %110, label %113

110:                                              ; preds = %103
  %111 = getelementptr inbounds %struct.URLPrefix, %struct.URLPrefix* %105, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %112 = load i64, i64* %111, align 8
  br label %115

113:                                              ; preds = %103
  %114 = zext i8 %108 to i64
  br label %115

115:                                              ; preds = %110, %113
  %116 = phi i64 [ %112, %110 ], [ %114, %113 ]
  %117 = bitcast %"class.std::__1::basic_string"* %104 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %118 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %117, i64 0, i32 1, i32 1
  %119 = load i8, i8* %118, align 1
  %120 = icmp slt i8 %119, 0
  br i1 %120, label %121, label %124

121:                                              ; preds = %115
  %122 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %104, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %123 = load i64, i64* %122, align 8
  br label %126

124:                                              ; preds = %115
  %125 = zext i8 %119 to i64
  br label %126

126:                                              ; preds = %121, %124
  %127 = phi i64 [ %123, %121 ], [ %125, %124 ]
  %128 = add i64 %127, %116
  br label %129

129:                                              ; preds = %79, %43, %101, %126
  %130 = phi i64 [ %128, %126 ], [ -1, %101 ], [ -1, %43 ], [ -1, %79 ]
  %131 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %132 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %131, i64 0, i32 1, i32 1
  %133 = load i8, i8* %132, align 1
  %134 = icmp slt i8 %133, 0
  br i1 %134, label %135, label %138

135:                                              ; preds = %129
  %136 = bitcast %"class.std::__1::basic_string"* %6 to i8**
  %137 = load i8*, i8** %136, align 8
  call void @_ZdlPv(i8* %137) #11
  br label %138

138:                                              ; preds = %129, %135
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #9
  %139 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %140 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %139, i64 0, i32 1, i32 1
  %141 = load i8, i8* %140, align 1
  %142 = icmp slt i8 %141, 0
  br i1 %142, label %143, label %146

143:                                              ; preds = %138
  %144 = bitcast %"class.std::__1::basic_string"* %5 to i8**
  %145 = load i8*, i8** %144, align 8
  call void @_ZdlPv(i8* %145) #11
  br label %146

146:                                              ; preds = %138, %143
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #9
  ret i64 %130
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %struct.URLPrefix* @_ZN12_GLOBAL__N_124BestURLPrefixWithWWWCaseERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = load atomic i8, i8* bitcast (i64* @_ZGVZN12_GLOBAL__N_124BestURLPrefixWithWWWCaseERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_E10www_prefix to i8*) acquire, align 8
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %201, !prof !13

7:                                                ; preds = %2
  %8 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN12_GLOBAL__N_124BestURLPrefixWithWWWCaseERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_E10www_prefix) #9
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %201, label %10

10:                                               ; preds = %7
  %11 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #9
  %12 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %12, i64 0, i32 1, i32 1
  store i8 4, i8* %13, align 1
  %14 = bitcast %"class.std::__1::basic_string"* %3 to i16*
  store i16 119, i16* %14, align 8
  %15 = getelementptr inbounds i16, i16* %14, i64 1
  store i16 119, i16* %15, align 2
  %16 = getelementptr inbounds i16, i16* %14, i64 2
  store i16 119, i16* %16, align 4
  %17 = getelementptr inbounds i16, i16* %14, i64 3
  store i16 46, i16* %17, align 2
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = bitcast i64* %18 to i16*
  store i16 0, i16* %19, align 8
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %12, i64 0, i32 1, i32 1
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %24, label %23

23:                                               ; preds = %10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::NoDestructor.8", %"class.base::NoDestructor.8"* @_ZZN12_GLOBAL__N_124BestURLPrefixWithWWWCaseERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_E10www_prefix, i64 0, i32 0, i64 0), i8* nonnull align 8 %11, i64 24, i1 false) #9
  store i64 1, i64* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor.8", %"class.base::NoDestructor.8"* @_ZZN12_GLOBAL__N_124BestURLPrefixWithWWWCaseERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_E10www_prefix, i64 0, i32 0, i64 24) to i64*), align 8
  br label %200

24:                                               ; preds = %10
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i16*, i16** %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = icmp ult i64 %28, 11
  br i1 %29, label %30, label %32

30:                                               ; preds = %24
  %31 = trunc i64 %28 to i8
  store i8 %31, i8* getelementptr inbounds (%"class.base::NoDestructor.8", %"class.base::NoDestructor.8"* @_ZZN12_GLOBAL__N_124BestURLPrefixWithWWWCaseERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_E10www_prefix, i64 0, i32 0, i64 23), align 1
  br label %45

32:                                               ; preds = %24
  %33 = icmp ugt i64 %28, 9223372036854775791
  br i1 %33, label %34, label %35

34:                                               ; preds = %32
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* bitcast (%"class.base::NoDestructor.8"* @_ZZN12_GLOBAL__N_124BestURLPrefixWithWWWCaseERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_E10www_prefix to %"class.std::__1::__basic_string_common"*)) #10
  unreachable

35:                                               ; preds = %32
  %36 = add nuw nsw i64 %28, 8
  %37 = and i64 %36, -8
  %38 = icmp slt i64 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  tail call void @abort() #10
  unreachable

40:                                               ; preds = %35
  %41 = shl i64 %37, 1
  %42 = tail call i8* @_Znwm(i64 %41) #11
  %43 = bitcast i8* %42 to i16*
  store i8* %42, i8** bitcast (%"class.base::NoDestructor.8"* @_ZZN12_GLOBAL__N_124BestURLPrefixWithWWWCaseERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_E10www_prefix to i8**), align 8
  %44 = or i64 %37, -9223372036854775808
  store i64 %44, i64* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor.8", %"class.base::NoDestructor.8"* @_ZZN12_GLOBAL__N_124BestURLPrefixWithWWWCaseERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_E10www_prefix, i64 0, i32 0, i64 16) to i64*), align 8
  store i64 %28, i64* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor.8", %"class.base::NoDestructor.8"* @_ZZN12_GLOBAL__N_124BestURLPrefixWithWWWCaseERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_E10www_prefix, i64 0, i32 0, i64 8) to i64*), align 8
  br label %45

45:                                               ; preds = %40, %30
  %46 = phi i8* [ getelementptr inbounds (%"class.base::NoDestructor.8", %"class.base::NoDestructor.8"* @_ZZN12_GLOBAL__N_124BestURLPrefixWithWWWCaseERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_E10www_prefix, i64 0, i32 0, i64 0), %30 ], [ %42, %40 ]
  %47 = phi i16* [ bitcast (%"class.base::NoDestructor.8"* @_ZZN12_GLOBAL__N_124BestURLPrefixWithWWWCaseERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_E10www_prefix to i16*), %30 ], [ %43, %40 ]
  %48 = add nuw nsw i64 %28, 1
  %49 = add i64 %28, 1
  %50 = icmp ult i64 %49, 16
  br i1 %50, label %141, label %51

51:                                               ; preds = %45
  %52 = add i64 %28, 1
  %53 = getelementptr i16, i16* %47, i64 %52
  %54 = getelementptr i16, i16* %26, i64 %52
  %55 = bitcast i16* %54 to i8*
  %56 = icmp ult i8* %46, %55
  %57 = icmp ult i16* %26, %53
  %58 = and i1 %56, %57
  br i1 %58, label %141, label %59

59:                                               ; preds = %51
  %60 = and i64 %49, -16
  %61 = sub i64 %48, %60
  %62 = getelementptr i16, i16* %26, i64 %60
  %63 = getelementptr i16, i16* %47, i64 %60
  %64 = add i64 %60, -16
  %65 = lshr exact i64 %64, 4
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 3
  %68 = icmp ult i64 %64, 48
  br i1 %68, label %120, label %69

69:                                               ; preds = %59
  %70 = sub nsw i64 %66, %67
  br label %71

71:                                               ; preds = %71, %69
  %72 = phi i64 [ 0, %69 ], [ %117, %71 ]
  %73 = phi i64 [ %70, %69 ], [ %118, %71 ]
  %74 = getelementptr i16, i16* %26, i64 %72
  %75 = getelementptr i16, i16* %47, i64 %72
  %76 = bitcast i16* %74 to <8 x i16>*
  %77 = load <8 x i16>, <8 x i16>* %76, align 2, !alias.scope !17
  %78 = getelementptr i16, i16* %74, i64 8
  %79 = bitcast i16* %78 to <8 x i16>*
  %80 = load <8 x i16>, <8 x i16>* %79, align 2, !alias.scope !17
  %81 = bitcast i16* %75 to <8 x i16>*
  store <8 x i16> %77, <8 x i16>* %81, align 2, !alias.scope !20, !noalias !17
  %82 = getelementptr i16, i16* %75, i64 8
  %83 = bitcast i16* %82 to <8 x i16>*
  store <8 x i16> %80, <8 x i16>* %83, align 2, !alias.scope !20, !noalias !17
  %84 = or i64 %72, 16
  %85 = getelementptr i16, i16* %26, i64 %84
  %86 = getelementptr i16, i16* %47, i64 %84
  %87 = bitcast i16* %85 to <8 x i16>*
  %88 = load <8 x i16>, <8 x i16>* %87, align 2, !alias.scope !17
  %89 = getelementptr i16, i16* %85, i64 8
  %90 = bitcast i16* %89 to <8 x i16>*
  %91 = load <8 x i16>, <8 x i16>* %90, align 2, !alias.scope !17
  %92 = bitcast i16* %86 to <8 x i16>*
  store <8 x i16> %88, <8 x i16>* %92, align 2, !alias.scope !20, !noalias !17
  %93 = getelementptr i16, i16* %86, i64 8
  %94 = bitcast i16* %93 to <8 x i16>*
  store <8 x i16> %91, <8 x i16>* %94, align 2, !alias.scope !20, !noalias !17
  %95 = or i64 %72, 32
  %96 = getelementptr i16, i16* %26, i64 %95
  %97 = getelementptr i16, i16* %47, i64 %95
  %98 = bitcast i16* %96 to <8 x i16>*
  %99 = load <8 x i16>, <8 x i16>* %98, align 2, !alias.scope !17
  %100 = getelementptr i16, i16* %96, i64 8
  %101 = bitcast i16* %100 to <8 x i16>*
  %102 = load <8 x i16>, <8 x i16>* %101, align 2, !alias.scope !17
  %103 = bitcast i16* %97 to <8 x i16>*
  store <8 x i16> %99, <8 x i16>* %103, align 2, !alias.scope !20, !noalias !17
  %104 = getelementptr i16, i16* %97, i64 8
  %105 = bitcast i16* %104 to <8 x i16>*
  store <8 x i16> %102, <8 x i16>* %105, align 2, !alias.scope !20, !noalias !17
  %106 = or i64 %72, 48
  %107 = getelementptr i16, i16* %26, i64 %106
  %108 = getelementptr i16, i16* %47, i64 %106
  %109 = bitcast i16* %107 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !17
  %111 = getelementptr i16, i16* %107, i64 8
  %112 = bitcast i16* %111 to <8 x i16>*
  %113 = load <8 x i16>, <8 x i16>* %112, align 2, !alias.scope !17
  %114 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %110, <8 x i16>* %114, align 2, !alias.scope !20, !noalias !17
  %115 = getelementptr i16, i16* %108, i64 8
  %116 = bitcast i16* %115 to <8 x i16>*
  store <8 x i16> %113, <8 x i16>* %116, align 2, !alias.scope !20, !noalias !17
  %117 = add i64 %72, 64
  %118 = add i64 %73, -4
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %71, !llvm.loop !22

120:                                              ; preds = %71, %59
  %121 = phi i64 [ 0, %59 ], [ %117, %71 ]
  %122 = icmp eq i64 %67, 0
  br i1 %122, label %139, label %123

123:                                              ; preds = %120, %123
  %124 = phi i64 [ %136, %123 ], [ %121, %120 ]
  %125 = phi i64 [ %137, %123 ], [ %67, %120 ]
  %126 = getelementptr i16, i16* %26, i64 %124
  %127 = getelementptr i16, i16* %47, i64 %124
  %128 = bitcast i16* %126 to <8 x i16>*
  %129 = load <8 x i16>, <8 x i16>* %128, align 2, !alias.scope !17
  %130 = getelementptr i16, i16* %126, i64 8
  %131 = bitcast i16* %130 to <8 x i16>*
  %132 = load <8 x i16>, <8 x i16>* %131, align 2, !alias.scope !17
  %133 = bitcast i16* %127 to <8 x i16>*
  store <8 x i16> %129, <8 x i16>* %133, align 2, !alias.scope !20, !noalias !17
  %134 = getelementptr i16, i16* %127, i64 8
  %135 = bitcast i16* %134 to <8 x i16>*
  store <8 x i16> %132, <8 x i16>* %135, align 2, !alias.scope !20, !noalias !17
  %136 = add i64 %124, 16
  %137 = add i64 %125, -1
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %139, label %123, !llvm.loop !23

139:                                              ; preds = %123, %120
  %140 = icmp eq i64 %49, %60
  br i1 %140, label %194, label %141

141:                                              ; preds = %139, %51, %45
  %142 = phi i64 [ %48, %51 ], [ %48, %45 ], [ %61, %139 ]
  %143 = phi i16* [ %26, %51 ], [ %26, %45 ], [ %62, %139 ]
  %144 = phi i16* [ %47, %51 ], [ %47, %45 ], [ %63, %139 ]
  %145 = add i64 %142, -1
  %146 = and i64 %142, 7
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %159, label %148

148:                                              ; preds = %141, %148
  %149 = phi i64 [ %154, %148 ], [ %142, %141 ]
  %150 = phi i16* [ %156, %148 ], [ %143, %141 ]
  %151 = phi i16* [ %155, %148 ], [ %144, %141 ]
  %152 = phi i64 [ %157, %148 ], [ %146, %141 ]
  %153 = load i16, i16* %150, align 2
  store i16 %153, i16* %151, align 2
  %154 = add i64 %149, -1
  %155 = getelementptr inbounds i16, i16* %151, i64 1
  %156 = getelementptr inbounds i16, i16* %150, i64 1
  %157 = add i64 %152, -1
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %159, label %148, !llvm.loop !24

159:                                              ; preds = %148, %141
  %160 = phi i64 [ %142, %141 ], [ %154, %148 ]
  %161 = phi i16* [ %143, %141 ], [ %156, %148 ]
  %162 = phi i16* [ %144, %141 ], [ %155, %148 ]
  %163 = icmp ult i64 %145, 7
  br i1 %163, label %194, label %164

164:                                              ; preds = %159, %164
  %165 = phi i64 [ %190, %164 ], [ %160, %159 ]
  %166 = phi i16* [ %192, %164 ], [ %161, %159 ]
  %167 = phi i16* [ %191, %164 ], [ %162, %159 ]
  %168 = load i16, i16* %166, align 2
  store i16 %168, i16* %167, align 2
  %169 = getelementptr inbounds i16, i16* %167, i64 1
  %170 = getelementptr inbounds i16, i16* %166, i64 1
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %167, i64 2
  %173 = getelementptr inbounds i16, i16* %166, i64 2
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %167, i64 3
  %176 = getelementptr inbounds i16, i16* %166, i64 3
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %167, i64 4
  %179 = getelementptr inbounds i16, i16* %166, i64 4
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = getelementptr inbounds i16, i16* %167, i64 5
  %182 = getelementptr inbounds i16, i16* %166, i64 5
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = getelementptr inbounds i16, i16* %167, i64 6
  %185 = getelementptr inbounds i16, i16* %166, i64 6
  %186 = load i16, i16* %185, align 2
  store i16 %186, i16* %184, align 2
  %187 = getelementptr inbounds i16, i16* %167, i64 7
  %188 = getelementptr inbounds i16, i16* %166, i64 7
  %189 = load i16, i16* %188, align 2
  store i16 %189, i16* %187, align 2
  %190 = add i64 %165, -8
  %191 = getelementptr inbounds i16, i16* %167, i64 8
  %192 = getelementptr inbounds i16, i16* %166, i64 8
  %193 = icmp eq i64 %190, 0
  br i1 %193, label %194, label %164, !llvm.loop !25

194:                                              ; preds = %159, %164, %139
  %195 = load i8, i8* %20, align 1
  store i64 1, i64* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor.8", %"class.base::NoDestructor.8"* @_ZZN12_GLOBAL__N_124BestURLPrefixWithWWWCaseERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_E10www_prefix, i64 0, i32 0, i64 24) to i64*), align 8
  %196 = icmp slt i8 %195, 0
  br i1 %196, label %197, label %200

197:                                              ; preds = %194
  %198 = bitcast %"class.std::__1::basic_string"* %3 to i8**
  %199 = load i8*, i8** %198, align 8
  tail call void @_ZdlPv(i8* %199) #11
  br label %200

200:                                              ; preds = %23, %194, %197
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #9
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN12_GLOBAL__N_124BestURLPrefixWithWWWCaseERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_E10www_prefix) #9
  br label %201

201:                                              ; preds = %7, %200, %2
  %202 = tail call fastcc %struct.URLPrefix* @_ZN12_GLOBAL__N_121BestURLPrefixInternalERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_(%"class.std::__1::basic_string"* dereferenceable(24) %0, %"class.std::__1::basic_string"* dereferenceable(24) %1)
  %203 = icmp eq %struct.URLPrefix* %202, null
  br i1 %203, label %209, label %204

204:                                              ; preds = %201
  %205 = getelementptr inbounds %struct.URLPrefix, %struct.URLPrefix* %202, i64 0, i32 1
  %206 = load i64, i64* %205, align 8
  %207 = load i64, i64* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor.8", %"class.base::NoDestructor.8"* @_ZZN12_GLOBAL__N_124BestURLPrefixWithWWWCaseERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_E10www_prefix, i64 0, i32 0, i64 24) to i64*), align 8
  %208 = icmp ult i64 %206, %207
  br i1 %208, label %209, label %243

209:                                              ; preds = %201, %204
  %210 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %211 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %210, i64 0, i32 1, i32 1
  %212 = load i8, i8* %211, align 1
  %213 = icmp slt i8 %212, 0
  %214 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %215 = load i16*, i16** %214, align 8
  %216 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %217 = select i1 %213, i16* %215, i16* %216
  %218 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %219 = load i64, i64* %218, align 8
  %220 = zext i8 %212 to i64
  %221 = select i1 %213, i64 %219, i64 %220
  %222 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %222) #9
  call void @_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EERKS9_SB_(%"class.std::__1::basic_string"* nonnull sret %4, %"class.std::__1::basic_string"* dereferenceable(24) bitcast (%"class.base::NoDestructor.8"* @_ZZN12_GLOBAL__N_124BestURLPrefixWithWWWCaseERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_E10www_prefix to %"class.std::__1::basic_string"*), %"class.std::__1::basic_string"* dereferenceable(24) %1)
  %223 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %224 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %223, i64 0, i32 1, i32 1
  %225 = load i8, i8* %224, align 1
  %226 = icmp slt i8 %225, 0
  %227 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %228 = load i16*, i16** %227, align 8
  %229 = bitcast %"class.std::__1::basic_string"* %4 to i16*
  %230 = select i1 %226, i16* %228, i16* %229
  %231 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %232 = load i64, i64* %231, align 8
  %233 = zext i8 %225 to i64
  %234 = select i1 %226, i64 %232, i64 %233
  %235 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_11CompareCaseE(i16* %217, i64 %221, i16* %230, i64 %234, i32 0) #9
  %236 = load i8, i8* %224, align 1
  %237 = icmp slt i8 %236, 0
  br i1 %237, label %238, label %241

238:                                              ; preds = %209
  %239 = bitcast %"class.std::__1::basic_string"* %4 to i8**
  %240 = load i8*, i8** %239, align 8
  call void @_ZdlPv(i8* %240) #11
  br label %241

241:                                              ; preds = %238, %209
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %222) #9
  %242 = select i1 %235, %struct.URLPrefix* bitcast (%"class.base::NoDestructor.8"* @_ZZN12_GLOBAL__N_124BestURLPrefixWithWWWCaseERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_E10www_prefix to %struct.URLPrefix*), %struct.URLPrefix* %202
  ret %struct.URLPrefix* %242

243:                                              ; preds = %204
  ret %struct.URLPrefix* %202
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI9URLPrefixNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_(%"class.std::__1::vector"*, %struct.URLPrefix* dereferenceable(32)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %struct.URLPrefix** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 576460752303423487
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #10
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %struct.URLPrefix** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 5
  %20 = icmp ult i64 %19, 288230376151711743
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 4
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 576460752303423487
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #10
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 576460752303423487, %14 ]
  %31 = shl i64 %30, 5
  %32 = tail call i8* @_Znwm(i64 %31) #11
  %33 = bitcast i8* %32 to %struct.URLPrefix*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %struct.URLPrefix* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %struct.URLPrefix, %struct.URLPrefix* %36, i64 %9
  %38 = getelementptr inbounds %struct.URLPrefix, %struct.URLPrefix* %36, i64 %35
  %39 = ptrtoint %struct.URLPrefix* %38 to i64
  %40 = bitcast %struct.URLPrefix* %37 to i8*
  %41 = bitcast %struct.URLPrefix* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 24, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 24, i1 false) #9
  %42 = getelementptr inbounds %struct.URLPrefix, %struct.URLPrefix* %36, i64 %9, i32 1
  %43 = getelementptr inbounds %struct.URLPrefix, %struct.URLPrefix* %1, i64 0, i32 1
  %44 = load i64, i64* %43, align 8
  store i64 %44, i64* %42, align 8
  %45 = getelementptr inbounds %struct.URLPrefix, %struct.URLPrefix* %37, i64 1
  %46 = ptrtoint %struct.URLPrefix* %45 to i64
  %47 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %48 = load %struct.URLPrefix*, %struct.URLPrefix** %47, align 8
  %49 = ptrtoint %struct.URLPrefix* %48 to i64
  %50 = load %struct.URLPrefix*, %struct.URLPrefix** %3, align 8
  %51 = icmp eq %struct.URLPrefix* %50, %48
  br i1 %51, label %93, label %52

52:                                               ; preds = %34
  %53 = getelementptr %struct.URLPrefix, %struct.URLPrefix* %50, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = ptrtoint i16** %53 to i64
  %55 = sub i64 %54, %49
  %56 = and i64 %55, 32
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %58, label %66

58:                                               ; preds = %52
  %59 = getelementptr inbounds %struct.URLPrefix, %struct.URLPrefix* %37, i64 -1
  %60 = getelementptr inbounds %struct.URLPrefix, %struct.URLPrefix* %50, i64 -1
  %61 = bitcast %struct.URLPrefix* %59 to i8*
  %62 = bitcast %struct.URLPrefix* %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* align 8 %62, i64 24, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 24, i1 false) #9
  %63 = getelementptr inbounds %struct.URLPrefix, %struct.URLPrefix* %37, i64 -1, i32 1
  %64 = getelementptr inbounds %struct.URLPrefix, %struct.URLPrefix* %50, i64 -1, i32 1
  %65 = load i64, i64* %64, align 8
  store i64 %65, i64* %63, align 8
  br label %66

66:                                               ; preds = %58, %52
  %67 = phi %struct.URLPrefix* [ undef, %52 ], [ %59, %58 ]
  %68 = phi %struct.URLPrefix* [ %37, %52 ], [ %59, %58 ]
  %69 = phi %struct.URLPrefix* [ %50, %52 ], [ %60, %58 ]
  %70 = icmp ult i64 %55, 32
  br i1 %70, label %89, label %71

71:                                               ; preds = %66, %71
  %72 = phi %struct.URLPrefix* [ %81, %71 ], [ %68, %66 ]
  %73 = phi %struct.URLPrefix* [ %82, %71 ], [ %69, %66 ]
  %74 = getelementptr inbounds %struct.URLPrefix, %struct.URLPrefix* %72, i64 -1
  %75 = getelementptr inbounds %struct.URLPrefix, %struct.URLPrefix* %73, i64 -1
  %76 = bitcast %struct.URLPrefix* %74 to i8*
  %77 = bitcast %struct.URLPrefix* %75 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %77, i64 24, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 24, i1 false) #9
  %78 = getelementptr inbounds %struct.URLPrefix, %struct.URLPrefix* %72, i64 -1, i32 1
  %79 = getelementptr inbounds %struct.URLPrefix, %struct.URLPrefix* %73, i64 -1, i32 1
  %80 = load i64, i64* %79, align 8
  store i64 %80, i64* %78, align 8
  %81 = getelementptr inbounds %struct.URLPrefix, %struct.URLPrefix* %72, i64 -2
  %82 = getelementptr inbounds %struct.URLPrefix, %struct.URLPrefix* %73, i64 -2
  %83 = bitcast %struct.URLPrefix* %81 to i8*
  %84 = bitcast %struct.URLPrefix* %82 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %83, i8* align 8 %84, i64 24, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %84, i8 0, i64 24, i1 false) #9
  %85 = getelementptr inbounds %struct.URLPrefix, %struct.URLPrefix* %72, i64 -2, i32 1
  %86 = getelementptr inbounds %struct.URLPrefix, %struct.URLPrefix* %73, i64 -2, i32 1
  %87 = load i64, i64* %86, align 8
  store i64 %87, i64* %85, align 8
  %88 = icmp eq %struct.URLPrefix* %82, %48
  br i1 %88, label %89, label %71

89:                                               ; preds = %71, %66
  %90 = phi %struct.URLPrefix* [ %67, %66 ], [ %81, %71 ]
  %91 = load i64, i64* %6, align 8
  %92 = load %struct.URLPrefix*, %struct.URLPrefix** %3, align 8
  br label %93

93:                                               ; preds = %34, %89
  %94 = phi %struct.URLPrefix* [ %92, %89 ], [ %48, %34 ]
  %95 = phi %struct.URLPrefix* [ %90, %89 ], [ %37, %34 ]
  %96 = phi i64 [ %91, %89 ], [ %49, %34 ]
  %97 = ptrtoint %struct.URLPrefix* %95 to i64
  store i64 %97, i64* %6, align 8
  store i64 %46, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %98 = inttoptr i64 %96 to %struct.URLPrefix*
  %99 = icmp eq %struct.URLPrefix* %94, %98
  br i1 %99, label %112, label %100

100:                                              ; preds = %93, %110
  %101 = phi %struct.URLPrefix* [ %102, %110 ], [ %94, %93 ]
  %102 = getelementptr inbounds %struct.URLPrefix, %struct.URLPrefix* %101, i64 -1
  %103 = bitcast %struct.URLPrefix* %102 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %104 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %103, i64 0, i32 1, i32 1
  %105 = load i8, i8* %104, align 1
  %106 = icmp slt i8 %105, 0
  br i1 %106, label %107, label %110

107:                                              ; preds = %100
  %108 = bitcast %struct.URLPrefix* %102 to i8**
  %109 = load i8*, i8** %108, align 8
  tail call void @_ZdlPv(i8* %109) #11
  br label %110

110:                                              ; preds = %107, %100
  %111 = icmp eq %struct.URLPrefix* %102, %98
  br i1 %111, label %112, label %100

112:                                              ; preds = %110, %93
  %113 = icmp eq i64 %96, 0
  br i1 %113, label %116, label %114

114:                                              ; preds = %112
  %115 = inttoptr i64 %96 to i8*
  tail call void @_ZdlPv(i8* %115) #11
  br label %116

116:                                              ; preds = %112, %114
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #5

declare zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_11CompareCaseE(i16*, i64, i16*, i64, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EERKS9_SB_(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #9
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %8, i64 0, i32 1, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %10 to i64
  %15 = select i1 %11, i64 %13, i64 %14
  %16 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %16, i64 0, i32 1, i32 1
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = zext i8 %18 to i64
  %23 = select i1 %19, i64 %21, i64 %22
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i16*, i16** %24, align 8
  %26 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %27 = select i1 %11, i16* %25, i16* %26
  %28 = add i64 %23, %15
  %29 = icmp ugt i64 %28, 9223372036854775791
  br i1 %29, label %30, label %32

30:                                               ; preds = %3
  %31 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %31) #10
  unreachable

32:                                               ; preds = %3
  %33 = icmp ult i64 %28, 11
  br i1 %33, label %34, label %39

34:                                               ; preds = %32
  %35 = trunc i64 %15 to i8
  %36 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %36, i64 0, i32 1, i32 1
  store i8 %35, i8* %37, align 1
  %38 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %50

39:                                               ; preds = %32
  %40 = add nuw nsw i64 %28, 8
  %41 = and i64 %40, -8
  %42 = icmp slt i64 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %39
  tail call void @abort() #10
  unreachable

44:                                               ; preds = %39
  %45 = shl i64 %41, 1
  %46 = tail call i8* @_Znwm(i64 %45) #11
  %47 = bitcast i8* %46 to i16*
  %48 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %46, i8** %48, align 8
  %49 = or i64 %41, -9223372036854775808
  store i64 %49, i64* %6, align 8
  store i64 %15, i64* %5, align 8
  br label %50

50:                                               ; preds = %44, %34
  %51 = phi i16* [ %38, %34 ], [ %47, %44 ]
  %52 = icmp eq i64 %15, 0
  br i1 %52, label %198, label %53

53:                                               ; preds = %50
  %54 = icmp ult i64 %15, 16
  br i1 %54, label %143, label %55

55:                                               ; preds = %53
  %56 = getelementptr i16, i16* %51, i64 %15
  %57 = getelementptr i16, i16* %27, i64 %15
  %58 = icmp ult i16* %51, %57
  %59 = icmp ult i16* %27, %56
  %60 = and i1 %58, %59
  br i1 %60, label %143, label %61

61:                                               ; preds = %55
  %62 = and i64 %15, -16
  %63 = sub i64 %15, %62
  %64 = getelementptr i16, i16* %27, i64 %62
  %65 = getelementptr i16, i16* %51, i64 %62
  %66 = add i64 %62, -16
  %67 = lshr exact i64 %66, 4
  %68 = add nuw nsw i64 %67, 1
  %69 = and i64 %68, 3
  %70 = icmp ult i64 %66, 48
  br i1 %70, label %122, label %71

71:                                               ; preds = %61
  %72 = sub nsw i64 %68, %69
  br label %73

73:                                               ; preds = %73, %71
  %74 = phi i64 [ 0, %71 ], [ %119, %73 ]
  %75 = phi i64 [ %72, %71 ], [ %120, %73 ]
  %76 = getelementptr i16, i16* %27, i64 %74
  %77 = getelementptr i16, i16* %51, i64 %74
  %78 = bitcast i16* %76 to <8 x i16>*
  %79 = load <8 x i16>, <8 x i16>* %78, align 2, !alias.scope !26
  %80 = getelementptr i16, i16* %76, i64 8
  %81 = bitcast i16* %80 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !26
  %83 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %79, <8 x i16>* %83, align 2, !alias.scope !29, !noalias !26
  %84 = getelementptr i16, i16* %77, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %85, align 2, !alias.scope !29, !noalias !26
  %86 = or i64 %74, 16
  %87 = getelementptr i16, i16* %27, i64 %86
  %88 = getelementptr i16, i16* %51, i64 %86
  %89 = bitcast i16* %87 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !26
  %91 = getelementptr i16, i16* %87, i64 8
  %92 = bitcast i16* %91 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !26
  %94 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %94, align 2, !alias.scope !29, !noalias !26
  %95 = getelementptr i16, i16* %88, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %96, align 2, !alias.scope !29, !noalias !26
  %97 = or i64 %74, 32
  %98 = getelementptr i16, i16* %27, i64 %97
  %99 = getelementptr i16, i16* %51, i64 %97
  %100 = bitcast i16* %98 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !26
  %102 = getelementptr i16, i16* %98, i64 8
  %103 = bitcast i16* %102 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !26
  %105 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %105, align 2, !alias.scope !29, !noalias !26
  %106 = getelementptr i16, i16* %99, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %107, align 2, !alias.scope !29, !noalias !26
  %108 = or i64 %74, 48
  %109 = getelementptr i16, i16* %27, i64 %108
  %110 = getelementptr i16, i16* %51, i64 %108
  %111 = bitcast i16* %109 to <8 x i16>*
  %112 = load <8 x i16>, <8 x i16>* %111, align 2, !alias.scope !26
  %113 = getelementptr i16, i16* %109, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  %115 = load <8 x i16>, <8 x i16>* %114, align 2, !alias.scope !26
  %116 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %112, <8 x i16>* %116, align 2, !alias.scope !29, !noalias !26
  %117 = getelementptr i16, i16* %110, i64 8
  %118 = bitcast i16* %117 to <8 x i16>*
  store <8 x i16> %115, <8 x i16>* %118, align 2, !alias.scope !29, !noalias !26
  %119 = add i64 %74, 64
  %120 = add i64 %75, -4
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %122, label %73, !llvm.loop !31

122:                                              ; preds = %73, %61
  %123 = phi i64 [ 0, %61 ], [ %119, %73 ]
  %124 = icmp eq i64 %69, 0
  br i1 %124, label %141, label %125

125:                                              ; preds = %122, %125
  %126 = phi i64 [ %138, %125 ], [ %123, %122 ]
  %127 = phi i64 [ %139, %125 ], [ %69, %122 ]
  %128 = getelementptr i16, i16* %27, i64 %126
  %129 = getelementptr i16, i16* %51, i64 %126
  %130 = bitcast i16* %128 to <8 x i16>*
  %131 = load <8 x i16>, <8 x i16>* %130, align 2, !alias.scope !26
  %132 = getelementptr i16, i16* %128, i64 8
  %133 = bitcast i16* %132 to <8 x i16>*
  %134 = load <8 x i16>, <8 x i16>* %133, align 2, !alias.scope !26
  %135 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %131, <8 x i16>* %135, align 2, !alias.scope !29, !noalias !26
  %136 = getelementptr i16, i16* %129, i64 8
  %137 = bitcast i16* %136 to <8 x i16>*
  store <8 x i16> %134, <8 x i16>* %137, align 2, !alias.scope !29, !noalias !26
  %138 = add i64 %126, 16
  %139 = add i64 %127, -1
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %141, label %125, !llvm.loop !32

141:                                              ; preds = %125, %122
  %142 = icmp eq i64 %15, %62
  br i1 %142, label %196, label %143

143:                                              ; preds = %141, %55, %53
  %144 = phi i64 [ %15, %55 ], [ %15, %53 ], [ %63, %141 ]
  %145 = phi i16* [ %27, %55 ], [ %27, %53 ], [ %64, %141 ]
  %146 = phi i16* [ %51, %55 ], [ %51, %53 ], [ %65, %141 ]
  %147 = add i64 %144, -1
  %148 = and i64 %144, 7
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %161, label %150

150:                                              ; preds = %143, %150
  %151 = phi i64 [ %156, %150 ], [ %144, %143 ]
  %152 = phi i16* [ %158, %150 ], [ %145, %143 ]
  %153 = phi i16* [ %157, %150 ], [ %146, %143 ]
  %154 = phi i64 [ %159, %150 ], [ %148, %143 ]
  %155 = load i16, i16* %152, align 2
  store i16 %155, i16* %153, align 2
  %156 = add i64 %151, -1
  %157 = getelementptr inbounds i16, i16* %153, i64 1
  %158 = getelementptr inbounds i16, i16* %152, i64 1
  %159 = add i64 %154, -1
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %161, label %150, !llvm.loop !33

161:                                              ; preds = %150, %143
  %162 = phi i64 [ %144, %143 ], [ %156, %150 ]
  %163 = phi i16* [ %145, %143 ], [ %158, %150 ]
  %164 = phi i16* [ %146, %143 ], [ %157, %150 ]
  %165 = icmp ult i64 %147, 7
  br i1 %165, label %196, label %166

166:                                              ; preds = %161, %166
  %167 = phi i64 [ %192, %166 ], [ %162, %161 ]
  %168 = phi i16* [ %194, %166 ], [ %163, %161 ]
  %169 = phi i16* [ %193, %166 ], [ %164, %161 ]
  %170 = load i16, i16* %168, align 2
  store i16 %170, i16* %169, align 2
  %171 = getelementptr inbounds i16, i16* %169, i64 1
  %172 = getelementptr inbounds i16, i16* %168, i64 1
  %173 = load i16, i16* %172, align 2
  store i16 %173, i16* %171, align 2
  %174 = getelementptr inbounds i16, i16* %169, i64 2
  %175 = getelementptr inbounds i16, i16* %168, i64 2
  %176 = load i16, i16* %175, align 2
  store i16 %176, i16* %174, align 2
  %177 = getelementptr inbounds i16, i16* %169, i64 3
  %178 = getelementptr inbounds i16, i16* %168, i64 3
  %179 = load i16, i16* %178, align 2
  store i16 %179, i16* %177, align 2
  %180 = getelementptr inbounds i16, i16* %169, i64 4
  %181 = getelementptr inbounds i16, i16* %168, i64 4
  %182 = load i16, i16* %181, align 2
  store i16 %182, i16* %180, align 2
  %183 = getelementptr inbounds i16, i16* %169, i64 5
  %184 = getelementptr inbounds i16, i16* %168, i64 5
  %185 = load i16, i16* %184, align 2
  store i16 %185, i16* %183, align 2
  %186 = getelementptr inbounds i16, i16* %169, i64 6
  %187 = getelementptr inbounds i16, i16* %168, i64 6
  %188 = load i16, i16* %187, align 2
  store i16 %188, i16* %186, align 2
  %189 = getelementptr inbounds i16, i16* %169, i64 7
  %190 = getelementptr inbounds i16, i16* %168, i64 7
  %191 = load i16, i16* %190, align 2
  store i16 %191, i16* %189, align 2
  %192 = add i64 %167, -8
  %193 = getelementptr inbounds i16, i16* %169, i64 8
  %194 = getelementptr inbounds i16, i16* %168, i64 8
  %195 = icmp eq i64 %192, 0
  br i1 %195, label %196, label %166, !llvm.loop !34

196:                                              ; preds = %161, %166, %141
  %197 = load i8, i8* %17, align 1
  br label %198

198:                                              ; preds = %196, %50
  %199 = phi i8 [ %197, %196 ], [ %18, %50 ]
  %200 = getelementptr inbounds i16, i16* %51, i64 %15
  store i16 0, i16* %200, align 2
  %201 = icmp slt i8 %199, 0
  %202 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %203 = load i16*, i16** %202, align 8
  %204 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  %205 = select i1 %201, i16* %203, i16* %204
  %206 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %207 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %206, i64 0, i32 1, i32 1
  %208 = load i8, i8* %207, align 1
  %209 = icmp slt i8 %208, 0
  br i1 %209, label %210, label %215

210:                                              ; preds = %198
  %211 = load i64, i64* %6, align 8
  %212 = and i64 %211, 9223372036854775807
  %213 = add nsw i64 %212, -1
  %214 = load i64, i64* %5, align 8
  br label %217

215:                                              ; preds = %198
  %216 = zext i8 %208 to i64
  br label %217

217:                                              ; preds = %215, %210
  %218 = phi i64 [ %213, %210 ], [ 10, %215 ]
  %219 = phi i64 [ %214, %210 ], [ %216, %215 ]
  %220 = sub i64 %218, %219
  %221 = icmp ult i64 %220, %23
  br i1 %221, label %381, label %222

222:                                              ; preds = %217
  %223 = icmp eq i64 %23, 0
  br i1 %223, label %384, label %224

224:                                              ; preds = %222
  %225 = load i16*, i16** %4, align 8
  %226 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %227 = select i1 %209, i16* %225, i16* %226
  %228 = getelementptr inbounds i16, i16* %227, i64 %219
  %229 = icmp ult i64 %23, 16
  br i1 %229, label %319, label %230

230:                                              ; preds = %224
  %231 = add i64 %23, %219
  %232 = getelementptr i16, i16* %227, i64 %231
  %233 = getelementptr i16, i16* %205, i64 %23
  %234 = icmp ult i16* %228, %233
  %235 = icmp ult i16* %205, %232
  %236 = and i1 %234, %235
  br i1 %236, label %319, label %237

237:                                              ; preds = %230
  %238 = and i64 %23, -16
  %239 = sub i64 %23, %238
  %240 = getelementptr i16, i16* %205, i64 %238
  %241 = getelementptr i16, i16* %228, i64 %238
  %242 = add i64 %238, -16
  %243 = lshr exact i64 %242, 4
  %244 = add nuw nsw i64 %243, 1
  %245 = and i64 %244, 3
  %246 = icmp ult i64 %242, 48
  br i1 %246, label %298, label %247

247:                                              ; preds = %237
  %248 = sub nsw i64 %244, %245
  br label %249

249:                                              ; preds = %249, %247
  %250 = phi i64 [ 0, %247 ], [ %295, %249 ]
  %251 = phi i64 [ %248, %247 ], [ %296, %249 ]
  %252 = getelementptr i16, i16* %205, i64 %250
  %253 = getelementptr i16, i16* %228, i64 %250
  %254 = bitcast i16* %252 to <8 x i16>*
  %255 = load <8 x i16>, <8 x i16>* %254, align 2, !alias.scope !35
  %256 = getelementptr i16, i16* %252, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  %258 = load <8 x i16>, <8 x i16>* %257, align 2, !alias.scope !35
  %259 = bitcast i16* %253 to <8 x i16>*
  store <8 x i16> %255, <8 x i16>* %259, align 2, !alias.scope !38, !noalias !35
  %260 = getelementptr i16, i16* %253, i64 8
  %261 = bitcast i16* %260 to <8 x i16>*
  store <8 x i16> %258, <8 x i16>* %261, align 2, !alias.scope !38, !noalias !35
  %262 = or i64 %250, 16
  %263 = getelementptr i16, i16* %205, i64 %262
  %264 = getelementptr i16, i16* %228, i64 %262
  %265 = bitcast i16* %263 to <8 x i16>*
  %266 = load <8 x i16>, <8 x i16>* %265, align 2, !alias.scope !35
  %267 = getelementptr i16, i16* %263, i64 8
  %268 = bitcast i16* %267 to <8 x i16>*
  %269 = load <8 x i16>, <8 x i16>* %268, align 2, !alias.scope !35
  %270 = bitcast i16* %264 to <8 x i16>*
  store <8 x i16> %266, <8 x i16>* %270, align 2, !alias.scope !38, !noalias !35
  %271 = getelementptr i16, i16* %264, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  store <8 x i16> %269, <8 x i16>* %272, align 2, !alias.scope !38, !noalias !35
  %273 = or i64 %250, 32
  %274 = getelementptr i16, i16* %205, i64 %273
  %275 = getelementptr i16, i16* %228, i64 %273
  %276 = bitcast i16* %274 to <8 x i16>*
  %277 = load <8 x i16>, <8 x i16>* %276, align 2, !alias.scope !35
  %278 = getelementptr i16, i16* %274, i64 8
  %279 = bitcast i16* %278 to <8 x i16>*
  %280 = load <8 x i16>, <8 x i16>* %279, align 2, !alias.scope !35
  %281 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %277, <8 x i16>* %281, align 2, !alias.scope !38, !noalias !35
  %282 = getelementptr i16, i16* %275, i64 8
  %283 = bitcast i16* %282 to <8 x i16>*
  store <8 x i16> %280, <8 x i16>* %283, align 2, !alias.scope !38, !noalias !35
  %284 = or i64 %250, 48
  %285 = getelementptr i16, i16* %205, i64 %284
  %286 = getelementptr i16, i16* %228, i64 %284
  %287 = bitcast i16* %285 to <8 x i16>*
  %288 = load <8 x i16>, <8 x i16>* %287, align 2, !alias.scope !35
  %289 = getelementptr i16, i16* %285, i64 8
  %290 = bitcast i16* %289 to <8 x i16>*
  %291 = load <8 x i16>, <8 x i16>* %290, align 2, !alias.scope !35
  %292 = bitcast i16* %286 to <8 x i16>*
  store <8 x i16> %288, <8 x i16>* %292, align 2, !alias.scope !38, !noalias !35
  %293 = getelementptr i16, i16* %286, i64 8
  %294 = bitcast i16* %293 to <8 x i16>*
  store <8 x i16> %291, <8 x i16>* %294, align 2, !alias.scope !38, !noalias !35
  %295 = add i64 %250, 64
  %296 = add i64 %251, -4
  %297 = icmp eq i64 %296, 0
  br i1 %297, label %298, label %249, !llvm.loop !40

298:                                              ; preds = %249, %237
  %299 = phi i64 [ 0, %237 ], [ %295, %249 ]
  %300 = icmp eq i64 %245, 0
  br i1 %300, label %317, label %301

301:                                              ; preds = %298, %301
  %302 = phi i64 [ %314, %301 ], [ %299, %298 ]
  %303 = phi i64 [ %315, %301 ], [ %245, %298 ]
  %304 = getelementptr i16, i16* %205, i64 %302
  %305 = getelementptr i16, i16* %228, i64 %302
  %306 = bitcast i16* %304 to <8 x i16>*
  %307 = load <8 x i16>, <8 x i16>* %306, align 2, !alias.scope !35
  %308 = getelementptr i16, i16* %304, i64 8
  %309 = bitcast i16* %308 to <8 x i16>*
  %310 = load <8 x i16>, <8 x i16>* %309, align 2, !alias.scope !35
  %311 = bitcast i16* %305 to <8 x i16>*
  store <8 x i16> %307, <8 x i16>* %311, align 2, !alias.scope !38, !noalias !35
  %312 = getelementptr i16, i16* %305, i64 8
  %313 = bitcast i16* %312 to <8 x i16>*
  store <8 x i16> %310, <8 x i16>* %313, align 2, !alias.scope !38, !noalias !35
  %314 = add i64 %302, 16
  %315 = add i64 %303, -1
  %316 = icmp eq i64 %315, 0
  br i1 %316, label %317, label %301, !llvm.loop !41

317:                                              ; preds = %301, %298
  %318 = icmp eq i64 %23, %238
  br i1 %318, label %372, label %319

319:                                              ; preds = %317, %230, %224
  %320 = phi i64 [ %23, %230 ], [ %23, %224 ], [ %239, %317 ]
  %321 = phi i16* [ %205, %230 ], [ %205, %224 ], [ %240, %317 ]
  %322 = phi i16* [ %228, %230 ], [ %228, %224 ], [ %241, %317 ]
  %323 = add i64 %320, -1
  %324 = and i64 %320, 7
  %325 = icmp eq i64 %324, 0
  br i1 %325, label %337, label %326

326:                                              ; preds = %319, %326
  %327 = phi i64 [ %332, %326 ], [ %320, %319 ]
  %328 = phi i16* [ %334, %326 ], [ %321, %319 ]
  %329 = phi i16* [ %333, %326 ], [ %322, %319 ]
  %330 = phi i64 [ %335, %326 ], [ %324, %319 ]
  %331 = load i16, i16* %328, align 2
  store i16 %331, i16* %329, align 2
  %332 = add i64 %327, -1
  %333 = getelementptr inbounds i16, i16* %329, i64 1
  %334 = getelementptr inbounds i16, i16* %328, i64 1
  %335 = add i64 %330, -1
  %336 = icmp eq i64 %335, 0
  br i1 %336, label %337, label %326, !llvm.loop !42

337:                                              ; preds = %326, %319
  %338 = phi i64 [ %320, %319 ], [ %332, %326 ]
  %339 = phi i16* [ %321, %319 ], [ %334, %326 ]
  %340 = phi i16* [ %322, %319 ], [ %333, %326 ]
  %341 = icmp ult i64 %323, 7
  br i1 %341, label %372, label %342

342:                                              ; preds = %337, %342
  %343 = phi i64 [ %368, %342 ], [ %338, %337 ]
  %344 = phi i16* [ %370, %342 ], [ %339, %337 ]
  %345 = phi i16* [ %369, %342 ], [ %340, %337 ]
  %346 = load i16, i16* %344, align 2
  store i16 %346, i16* %345, align 2
  %347 = getelementptr inbounds i16, i16* %345, i64 1
  %348 = getelementptr inbounds i16, i16* %344, i64 1
  %349 = load i16, i16* %348, align 2
  store i16 %349, i16* %347, align 2
  %350 = getelementptr inbounds i16, i16* %345, i64 2
  %351 = getelementptr inbounds i16, i16* %344, i64 2
  %352 = load i16, i16* %351, align 2
  store i16 %352, i16* %350, align 2
  %353 = getelementptr inbounds i16, i16* %345, i64 3
  %354 = getelementptr inbounds i16, i16* %344, i64 3
  %355 = load i16, i16* %354, align 2
  store i16 %355, i16* %353, align 2
  %356 = getelementptr inbounds i16, i16* %345, i64 4
  %357 = getelementptr inbounds i16, i16* %344, i64 4
  %358 = load i16, i16* %357, align 2
  store i16 %358, i16* %356, align 2
  %359 = getelementptr inbounds i16, i16* %345, i64 5
  %360 = getelementptr inbounds i16, i16* %344, i64 5
  %361 = load i16, i16* %360, align 2
  store i16 %361, i16* %359, align 2
  %362 = getelementptr inbounds i16, i16* %345, i64 6
  %363 = getelementptr inbounds i16, i16* %344, i64 6
  %364 = load i16, i16* %363, align 2
  store i16 %364, i16* %362, align 2
  %365 = getelementptr inbounds i16, i16* %345, i64 7
  %366 = getelementptr inbounds i16, i16* %344, i64 7
  %367 = load i16, i16* %366, align 2
  store i16 %367, i16* %365, align 2
  %368 = add i64 %343, -8
  %369 = getelementptr inbounds i16, i16* %345, i64 8
  %370 = getelementptr inbounds i16, i16* %344, i64 8
  %371 = icmp eq i64 %368, 0
  br i1 %371, label %372, label %342, !llvm.loop !43

372:                                              ; preds = %337, %342, %317
  %373 = add i64 %219, %23
  %374 = load i8, i8* %207, align 1
  %375 = icmp slt i8 %374, 0
  br i1 %375, label %376, label %377

376:                                              ; preds = %372
  store i64 %373, i64* %5, align 8
  br label %379

377:                                              ; preds = %372
  %378 = trunc i64 %373 to i8
  store i8 %378, i8* %207, align 1
  br label %379

379:                                              ; preds = %377, %376
  %380 = getelementptr inbounds i16, i16* %227, i64 %373
  store i16 0, i16* %380, align 2
  br label %384

381:                                              ; preds = %217
  %382 = add i64 %219, %23
  %383 = sub i64 %382, %218
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %0, i64 %218, i64 %383, i64 %219, i64 %219, i64 0, i64 %23, i16* %205) #9
  br label %384

384:                                              ; preds = %222, %379, %381
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #10
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #10
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #11
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !44
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !44
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !47, !noalias !44
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !47, !noalias !44
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !44
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !44
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !47, !noalias !44
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !47, !noalias !44
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !44
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !44
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !47, !noalias !44
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !47, !noalias !44
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !44
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !44
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !47, !noalias !44
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !47, !noalias !44
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !49

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !44
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !44
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !47, !noalias !44
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !47, !noalias !44
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !50

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !51

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !52

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !53

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !54

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !55

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !57
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !57
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !60, !noalias !57
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !60, !noalias !57
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !57
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !57
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !60, !noalias !57
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !60, !noalias !57
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !57
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !57
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !60, !noalias !57
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !60, !noalias !57
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !57
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !57
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !60, !noalias !57
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !60, !noalias !57
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !62

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !57
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !57
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !60, !noalias !57
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !60, !noalias !57
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !63

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !64

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !65

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #11
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !8}
!13 = !{!"branch_weights", i32 1, i32 1048575}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZZN9URLPrefix14GetURLPrefixesEvENK3$_0clEv: argument 0"}
!16 = distinct !{!16, !"_ZZN9URLPrefix14GetURLPrefixesEvENK3$_0clEv"}
!17 = !{!18}
!18 = distinct !{!18, !19}
!19 = distinct !{!19, !"LVerDomain"}
!20 = !{!21}
!21 = distinct !{!21, !19}
!22 = distinct !{!22, !8}
!23 = distinct !{!23, !10}
!24 = distinct !{!24, !10}
!25 = distinct !{!25, !8}
!26 = !{!27}
!27 = distinct !{!27, !28}
!28 = distinct !{!28, !"LVerDomain"}
!29 = !{!30}
!30 = distinct !{!30, !28}
!31 = distinct !{!31, !8}
!32 = distinct !{!32, !10}
!33 = distinct !{!33, !10}
!34 = distinct !{!34, !8}
!35 = !{!36}
!36 = distinct !{!36, !37}
!37 = distinct !{!37, !"LVerDomain"}
!38 = !{!39}
!39 = distinct !{!39, !37}
!40 = distinct !{!40, !8}
!41 = distinct !{!41, !10}
!42 = distinct !{!42, !10}
!43 = distinct !{!43, !8}
!44 = !{!45}
!45 = distinct !{!45, !46}
!46 = distinct !{!46, !"LVerDomain"}
!47 = !{!48}
!48 = distinct !{!48, !46}
!49 = distinct !{!49, !8}
!50 = distinct !{!50, !10}
!51 = distinct !{!51, !10}
!52 = distinct !{!52, !8}
!53 = distinct !{!53, !8}
!54 = distinct !{!54, !10}
!55 = distinct !{!55, !56, !8}
!56 = !{!"llvm.loop.unroll.runtime.disable"}
!57 = !{!58}
!58 = distinct !{!58, !59}
!59 = distinct !{!59, !"LVerDomain"}
!60 = !{!61}
!61 = distinct !{!61, !59}
!62 = distinct !{!62, !8}
!63 = distinct !{!63, !10}
!64 = distinct !{!64, !10}
!65 = distinct !{!65, !8}
