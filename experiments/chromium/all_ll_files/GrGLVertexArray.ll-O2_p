; ModuleID = '../../third_party/skia/src/gpu/gl/GrGLVertexArray.cpp'
source_filename = "../../third_party/skia/src/gpu/gl/GrGLVertexArray.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.GrGLVertexArray = type { i32, [4 x i8], %class.GrGLAttribArrayState, %"class.GrGpuResource::UniqueID", [4 x i8] }
%class.GrGLAttribArrayState = type <{ %class.SkSTArray, i32, i8, i8, [2 x i8] }>
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [640 x i8] }
%class.SkTArray = type { %"struct.GrGLAttribArrayState::AttribArrayState"*, i64 }
%"struct.GrGLAttribArrayState::AttribArrayState" = type <{ %"class.GrGpuResource::UniqueID", i8, [3 x i8], i32, i32, i32, [4 x i8], i8*, i32, [4 x i8] }>
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.GrGLGpu = type <{ %class.GrGpu, %"class.std::__1::unique_ptr.139", %class.sk_sp.267, i32, i32, %class.sk_sp.276, i32, i32, i32, %struct.anon, %class.anon, %struct.GrNativeRect, %"class.GrGLGpu::HWVertexArrayState", i8, [3 x i8], [6 x %struct.anon.307], %struct.anon.308, i32, i32, i32, %class.GrStencilSettings, i32, i32, i32, %"class.GrGpuResource::UniqueID", i8, [3 x i8], i32, [4 x i8], %class.SkAutoTArray.309, [4 x float], i32, [3 x %struct.anon.316], [4 x i8], %class.sk_sp.317, [4 x %struct.anon.318], %class.sk_sp.317, i8, [7 x i8], i64, %"class.std::__1::unique_ptr.319", %"class.std::__1::unique_ptr.325", %class.GrFinishCallbacks, i8, [7 x i8] }>
%class.GrGpu = type { %class.SkRefCnt.base, %"class.GrGpu::Stats", %class.sk_sp, %"class.std::__1::unique_ptr", i32, %class.GrDirectContext*, %class.SkSTArray.136, i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.GrGpu::Stats" = type { i8 }
%class.sk_sp = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.1, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.1 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.SkSL::Compiler"* }
%"class.SkSL::Compiler" = type opaque
%class.GrDirectContext = type { %class.GrRecordingContext, %"class.GrDirectContext::DirectContextID", %"class.std::__1::unique_ptr.56", %"class.std::__1::unique_ptr.62", %class.sk_sp.68, %"class.std::__1::unique_ptr.69", %"class.std::__1::unique_ptr.111", i8, i8, %"class.GrContextOptions::PersistentCache"*, %"class.GrContextOptions::ShaderErrorHandler"*, %"class.std::__1::unique_ptr.118", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.130" }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.4", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.50" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.3 }
%class.sk_sp.3 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray.7, %class.SkTHashMap, %class.SkTHashMap.15, %class.SkTArray.24, %class.SkTArray.26, i32, i8, [3 x i8] }>
%class.SkTArray.7 = type { %"class.std::__1::unique_ptr.8"*, i64 }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.337" }
%"class.std::__1::__compressed_pair.337" = type { %"struct.std::__1::__compressed_pair_elem.338" }
%"struct.std::__1::__compressed_pair_elem.338" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.26, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkString = type { %class.sk_sp.27 }
%class.sk_sp.27 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%struct.SkRect = type { float, float, float, float }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.9" }
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, i32 }
%class.SkTHashMap.15 = type { %class.SkTHashTable.16 }
%class.SkTHashTable.16 = type { i32, i32, %class.SkAutoTArray.17 }
%class.SkAutoTArray.17 = type { %"class.std::__1::unique_ptr.18" }
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.342" }
%"struct.std::__1::pair.342" = type { i32, %class.SkTArray.343* }
%class.SkTArray.343 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.24 = type { %"class.std::__1::unique_ptr.25"*, i64 }
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.344" }
%"class.std::__1::__compressed_pair.344" = type { %"struct.std::__1::__compressed_pair_elem.345" }
%"struct.std::__1::__compressed_pair_elem.345" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.343, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%class.SkTArray.26 = type { %class.SkString*, i64 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.37" }
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.40 }
%class.SkFibBlockSizes.40 = type { i32 }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %class.GrProxyProvider* }
%class.GrProxyProvider = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %class.SkTaskGroup* }
%class.SkTaskGroup = type opaque
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %class.GrStrikeCache* }
%class.GrStrikeCache = type opaque
%class.sk_sp.68 = type { %class.GrGpu* }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %class.GrResourceCache* }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.81, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap.99, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon, [4 x i8] }>
%union.anon = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.72, i8* }
%class.sk_sp.72 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable.73 }
%class.SkTHashTable.73 = type { i32, i32, %class.SkAutoTArray.74 }
%class.SkAutoTArray.74 = type { %"class.std::__1::unique_ptr.75" }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.81 = type { %class.SkTHashTable.82 }
%class.SkTHashTable.82 = type { i32, i32, %class.SkAutoTArray.83 }
%class.SkAutoTArray.83 = type { %"class.std::__1::unique_ptr.84" }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.90, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.90 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.91" }
%"struct.std::__1::atomic.91" = type { %"struct.std::__1::__atomic_base.92" }
%"struct.std::__1::__atomic_base.92" = type { %"struct.std::__1::__atomic_base.93" }
%"struct.std::__1::__atomic_base.93" = type { %"struct.std::__1::__cxx_atomic_impl.94" }
%"struct.std::__1::__cxx_atomic_impl.94" = type { %"struct.std::__1::__cxx_atomic_base_impl.95" }
%"struct.std::__1::__cxx_atomic_base_impl.95" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.96, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.96 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.97 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.97 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.98, void (i8*)*, i8* }
%class.SkNVRefCnt.98 = type { %"struct.std::__1::atomic" }
%class.SkTHashMap.99 = type { %class.SkTHashTable.100 }
%class.SkTHashTable.100 = type { i32, i32, %class.SkAutoTArray.101 }
%class.SkAutoTArray.101 = type { %"class.std::__1::unique_ptr.102" }
%"class.std::__1::unique_ptr.102" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %class.GrResourceProvider* }
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp, %class.sk_sp.114, %class.sk_sp.114 }
%class.sk_sp.114 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.GrBuffer = type { i32 (...)** }
%"class.GrContextOptions::PersistentCache" = type { i32 (...)** }
%"class.GrContextOptions::ShaderErrorHandler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %class.GrClientMappedBufferManager* }
%class.GrClientMappedBufferManager = type opaque
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %class.GrAtlasManager* }
%class.GrAtlasManager = type opaque
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %class.GrSmallPathAtlasMgr* }
%class.GrSmallPathAtlasMgr = type opaque
%class.SkSTArray.136 = type { %class.SkAlignedSTStorage.137, %class.SkTArray.138 }
%class.SkAlignedSTStorage.137 = type { [64 x i8] }
%class.SkTArray.138 = type { %"struct.GrGpu::SubmittedProc"*, i64 }
%"struct.GrGpu::SubmittedProc" = type { void (i8*, i1)*, i8* }
%"class.std::__1::unique_ptr.139" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %class.GrGLContext* }
%class.GrGLContext = type { %class.GrGLContextInfo }
%class.GrGLContextInfo = type { i32 (...)**, %class.sk_sp.142, %struct.GrGLDriverInfo, i32, %class.sk_sp.249 }
%class.sk_sp.142 = type { %struct.GrGLInterface* }
%struct.GrGLInterface = type { %class.SkRefCnt.base, %union.anon.143, %class.GrGLExtensions, %"struct.GrGLInterface::Functions" }
%union.anon.143 = type { i32 }
%class.GrGLExtensions = type { i8, %class.SkTArray.26 }
%"struct.GrGLInterface::Functions" = type { %class.GrGLFunction, %class.GrGLFunction.144, %class.GrGLFunction.144, %class.GrGLFunction.145, %class.GrGLFunction.144, %class.GrGLFunction.145, %class.GrGLFunction.146, %class.GrGLFunction.144, %class.GrGLFunction.144, %class.GrGLFunction.144, %class.GrGLFunction.144, %class.GrGLFunction, %class.GrGLFunction.147, %class.GrGLFunction.148, %class.GrGLFunction, %class.GrGLFunction.144, %class.GrGLFunction.149, %class.GrGLFunction.150, %class.GrGLFunction.151, %class.GrGLFunction.152, %class.GrGLFunction, %class.GrGLFunction.148, %class.GrGLFunction.153, %class.GrGLFunction.154, %class.GrGLFunction.155, %class.GrGLFunction.156, %class.GrGLFunction, %class.GrGLFunction.157, %class.GrGLFunction.158, %class.GrGLFunction.159, %class.GrGLFunction.160, %class.GrGLFunction.152, %class.GrGLFunction, %class.GrGLFunction.161, %class.GrGLFunction.161, %class.GrGLFunction.161, %class.GrGLFunction, %class.GrGLFunction.161, %class.GrGLFunction.161, %class.GrGLFunction.161, %class.GrGLFunction, %class.GrGLFunction.161, %class.GrGLFunction.161, %class.GrGLFunction.162, %class.GrGLFunction, %class.GrGLFunction, %class.GrGLFunction.163, %class.GrGLFunction.164, %class.GrGLFunction.165, %class.GrGLFunction, %class.GrGLFunction.161, %class.GrGLFunction.166, %class.GrGLFunction.167, %class.GrGLFunction.168, %class.GrGLFunction.169, %class.GrGLFunction, %class.GrGLFunction, %class.GrGLFunction, %class.GrGLFunction.147, %class.GrGLFunction, %class.GrGLFunction.147, %class.GrGLFunction.170, %class.GrGLFunction.171, %class.GrGLFunction.172, %class.GrGLFunction.173, %class.GrGLFunction, %class.GrGLFunction.174, %class.GrGLFunction.174, %class.GrGLFunction.174, %class.GrGLFunction, %class.GrGLFunction.174, %class.GrGLFunction.174, %class.GrGLFunction.174, %class.GrGLFunction.174, %class.GrGLFunction.174, %class.GrGLFunction.175, %class.GrGLFunction.160, %class.GrGLFunction.176, %class.GrGLFunction.177, %class.GrGLFunction.178, %class.GrGLFunction.179, %class.GrGLFunction.180, %class.GrGLFunction.175, %class.GrGLFunction.181, %class.GrGLFunction.175, %class.GrGLFunction.182, %class.GrGLFunction.183, %class.GrGLFunction.175, %class.GrGLFunction.175, %class.GrGLFunction.180, %class.GrGLFunction.175, %class.GrGLFunction.184, %class.GrGLFunction.185, %class.GrGLFunction.186, %class.GrGLFunction.187, %class.GrGLFunction.188, %class.GrGLFunction.189, %class.GrGLFunction, %class.GrGLFunction.170, %class.GrGLFunction.190, %class.GrGLFunction.191, %class.GrGLFunction.192, %class.GrGLFunction.159, %class.GrGLFunction.193, %class.GrGLFunction.194, %class.GrGLFunction, %class.GrGLFunction.195, %class.GrGLFunction.196, %class.GrGLFunction.197, %class.GrGLFunction.198, %class.GrGLFunction.198, %class.GrGLFunction.199, %class.GrGLFunction.200, %class.GrGLFunction.201, %class.GrGLFunction.202, %class.GrGLFunction.203, %class.GrGLFunction.204, %class.GrGLFunction.205, %class.GrGLFunction.206, %class.GrGLFunction.192, %class.GrGLFunction.192, %class.GrGLFunction.144, %class.GrGLFunction.147, %class.GrGLFunction.189, %class.GrGLFunction.144, %class.GrGLFunction, %class.GrGLFunction.207, %class.GrGLFunction.208, %class.GrGLFunction.209, %class.GrGLFunction.209, %class.GrGLFunction.209, %class.GrGLFunction.210, %class.GrGLFunction.147, %class.GrGLFunction.196, %class.GrGLFunction.211, %class.GrGLFunction.212, %class.GrGLFunction.144, %class.GrGLFunction.213, %class.GrGLFunction.214, %class.GrGLFunction.215, %class.GrGLFunction, %class.GrGLFunction.144, %class.GrGLFunction.216, %class.GrGLFunction.171, %class.GrGLFunction.193, %class.GrGLFunction.216, %class.GrGLFunction.217, %class.GrGLFunction.218, %class.GrGLFunction.219, %class.GrGLFunction.220, %class.GrGLFunction.196, %class.GrGLFunction.211, %class.GrGLFunction.218, %class.GrGLFunction.209, %class.GrGLFunction.147, %class.GrGLFunction.190, %class.GrGLFunction.221, %class.GrGLFunction.222, %class.GrGLFunction.223, %class.GrGLFunction.224, %class.GrGLFunction.225, %class.GrGLFunction.226, %class.GrGLFunction.223, %class.GrGLFunction.224, %class.GrGLFunction.227, %class.GrGLFunction.212, %class.GrGLFunction.223, %class.GrGLFunction.224, %class.GrGLFunction.228, %class.GrGLFunction.229, %class.GrGLFunction.223, %class.GrGLFunction.224, %class.GrGLFunction.230, %class.GrGLFunction.230, %class.GrGLFunction.230, %class.GrGLFunction.193, %class.GrGLFunction.231, %class.GrGLFunction.231, %class.GrGLFunction, %class.GrGLFunction.232, %class.GrGLFunction.233, %class.GrGLFunction.233, %class.GrGLFunction.233, %class.GrGLFunction.144, %class.GrGLFunction.234, %class.GrGLFunction.235, %class.GrGLFunction.212, %class.GrGLFunction, %class.GrGLFunction.236, %class.GrGLFunction.237, %class.GrGLFunction.238, %class.GrGLFunction.239, %class.GrGLFunction.240, %class.GrGLFunction.241, %class.GrGLFunction.242, %class.GrGLFunction.243, %class.GrGLFunction.244, %class.GrGLFunction.245, %class.GrGLFunction.246, %class.GrGLFunction.147, %class.GrGLFunction.246, %class.GrGLFunction.247, %class.GrGLFunction.248, %class.GrGLFunction }
%class.GrGLFunction.145 = type { void (i8*, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.146 = type { void (i8*, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.149 = type { void (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.150 = type { void (i8*, i32, i64, i8*, i32)*, [4 x i64] }
%class.GrGLFunction.151 = type { void (i8*, i32, i64, i64, i8*)*, [4 x i64] }
%class.GrGLFunction.148 = type { void (i8*, float, float, float, float)*, [4 x i64] }
%class.GrGLFunction.153 = type { void (i8*, i32)*, [4 x i64] }
%class.GrGLFunction.154 = type { void (i8*, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.155 = type { void (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.156 = type { void (i8*, i8, i8, i8, i8)*, [4 x i64] }
%class.GrGLFunction.157 = type { void (i8*, i32, i32, i32, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.158 = type { void (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.152 = type { i32 (i8*, i32)*, [4 x i64] }
%class.GrGLFunction.162 = type { void (i8*, i8)*, [4 x i64] }
%class.GrGLFunction.163 = type { void (i8*, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.164 = type { void (i8*, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.165 = type { void (i8*, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.161 = type { void (i8*, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.166 = type { void (i8*, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.167 = type { void (i8*, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.168 = type { void (i8*, i32, i32, i32, i8*, i32)*, [4 x i64] }
%class.GrGLFunction.169 = type { void (i8*, i32, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.172 = type { void (i8*, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.173 = type { void (i8*, i32, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.174 = type { void (i8*, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.160 = type { i32 (i8*)*, [4 x i64] }
%class.GrGLFunction.176 = type { void (i8*, i32, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.177 = type { void (i8*, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.178 = type { void (i8*, i32, i32, float*)*, [4 x i64] }
%class.GrGLFunction.179 = type { void (i8*, i32, i32, i32*, i32*, i8*)*, [4 x i64] }
%class.GrGLFunction.181 = type { void (i8*, i32, i32, i64*)*, [4 x i64] }
%class.GrGLFunction.182 = type { void (i8*, i32, i32, i64*)*, [4 x i64] }
%class.GrGLFunction.183 = type { void (i8*, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.180 = type { void (i8*, i32, i32, i32*, i8*)*, [4 x i64] }
%class.GrGLFunction.175 = type { void (i8*, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.184 = type { void (i8*, i32, i32, i32*, i32*)*, [4 x i64] }
%class.GrGLFunction.185 = type { i8* (i8*, i32)*, [4 x i64] }
%class.GrGLFunction.186 = type { i8* (i8*, i32, i32)*, [4 x i64] }
%class.GrGLFunction.187 = type { void (i8*, i32, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.188 = type { i32 (i8*, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.170 = type { void (i8*, i32, i64, i64)*, [4 x i64] }
%class.GrGLFunction.191 = type { void (i8*, i32, i32, i32*, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.159 = type { void (i8*, i32, i32, i32, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.194 = type { void (i8*, float)*, [4 x i64] }
%class.GrGLFunction.195 = type { void (i8*, i32, i32, i8*, i32)*, [4 x i64] }
%class.GrGLFunction.197 = type { i8* (i8*, i32, i32)*, [4 x i64] }
%class.GrGLFunction.198 = type { i8* (i8*, i32, i64, i64, i32)*, [4 x i64] }
%class.GrGLFunction.199 = type { i8* (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.200 = type { i8* (i8*, i32)*, [4 x i64] }
%class.GrGLFunction.201 = type { void (i8*, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.202 = type { void (i8*, i32, i32, i32, i8*, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.203 = type { void (i8*, i32, i8*, i32, i32)*, [4 x i64] }
%class.GrGLFunction.204 = type { void (i8*, i32, i32, i8*, i32, i32)*, [4 x i64] }
%class.GrGLFunction.205 = type { void (i8*, i32, i32*, i32*, i32*, i32*, i32)*, [4 x i64] }
%class.GrGLFunction.206 = type { void (i8*, i32, i32*, i32, i8**, i32*, i32*, i32*, i32)*, [4 x i64] }
%class.GrGLFunction.192 = type { void (i8*, i32, i32)*, [4 x i64] }
%class.GrGLFunction.189 = type { void (i8*, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.207 = type { void (i8*, i32, i32, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.208 = type { void (i8*, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.210 = type { void (i8*, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.213 = type { void (i8*, i32, i32, i8**, i32*)*, [4 x i64] }
%class.GrGLFunction.214 = type { void (i8*, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.215 = type { void (i8*, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.171 = type { void (i8*, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.216 = type { void (i8*, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.217 = type { void (i8*, i32, i32, i32, i64, i64)*, [4 x i64] }
%class.GrGLFunction.219 = type { void (i8*, i32, i32, float)*, [4 x i64] }
%class.GrGLFunction.220 = type { void (i8*, i32, i32, float*)*, [4 x i64] }
%class.GrGLFunction.196 = type { void (i8*, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.211 = type { void (i8*, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.218 = type { void (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.209 = type { void (i8*, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.190 = type { void (i8*, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.221 = type { void (i8*, i32, float)*, [4 x i64] }
%class.GrGLFunction.222 = type { void (i8*, i32, i32)*, [4 x i64] }
%class.GrGLFunction.225 = type { void (i8*, i32, float, float)*, [4 x i64] }
%class.GrGLFunction.226 = type { void (i8*, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.227 = type { void (i8*, i32, float, float, float)*, [4 x i64] }
%class.GrGLFunction.228 = type { void (i8*, i32, float, float, float, float)*, [4 x i64] }
%class.GrGLFunction.229 = type { void (i8*, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.223 = type { void (i8*, i32, i32, float*)*, [4 x i64] }
%class.GrGLFunction.224 = type { void (i8*, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.230 = type { void (i8*, i32, i32, i8, float*)*, [4 x i64] }
%class.GrGLFunction.193 = type { i8 (i8*, i32)*, [4 x i64] }
%class.GrGLFunction.231 = type { void (i8*, i8*)*, [4 x i64] }
%class.GrGLFunction.232 = type { void (i8*, i32, float)*, [4 x i64] }
%class.GrGLFunction.233 = type { void (i8*, i32, float*)*, [4 x i64] }
%class.GrGLFunction.144 = type { void (i8*, i32, i32)*, [4 x i64] }
%class.GrGLFunction.234 = type { void (i8*, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.235 = type { void (i8*, i32, i32, i32, i8, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.212 = type { void (i8*, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.236 = type { %struct.__GLsync* (i8*, i32, i32)*, [4 x i64] }
%struct.__GLsync = type opaque
%class.GrGLFunction.237 = type { i8 (i8*, %struct.__GLsync*)*, [4 x i64] }
%class.GrGLFunction.238 = type { i32 (i8*, %struct.__GLsync*, i32, i64)*, [4 x i64] }
%class.GrGLFunction.239 = type { void (i8*, %struct.__GLsync*, i32, i64)*, [4 x i64] }
%class.GrGLFunction.240 = type { void (i8*, %struct.__GLsync*)*, [4 x i64] }
%class.GrGLFunction.241 = type { void (i8*, i32, i32, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.242 = type { void (i8*, i32, i32, i32, i32, i32*, i8)*, [4 x i64] }
%class.GrGLFunction.243 = type { void (i8*, i32, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.244 = type { void (i8*, void (i32, i32, i32, i32, i32, i8*, i8*)*, i8*)*, [4 x i64] }
%class.GrGLFunction.245 = type { i32 (i8*, i32, i32, i32*, i32*, i32*, i32*, i32*, i8*)*, [4 x i64] }
%class.GrGLFunction.147 = type { void (i8*)*, [4 x i64] }
%class.GrGLFunction.246 = type { void (i8*, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.247 = type { void (i8*, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.248 = type { void (i8*, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction = type { void (i8*, i32)*, [4 x i64] }
%struct.GrGLDriverInfo = type <{ i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i64, i8, [7 x i8] }>
%class.sk_sp.249 = type { %class.GrGLCaps* }
%class.GrGLCaps = type <{ %class.GrCaps.base, i8, i32, [4 x i8], %class.SkTArray.250, i32, i32, i32, i32, i32, i32, i32, i40, i32, i32, [4 x i8], [24 x %"struct.GrGLCaps::FormatInfo"], [31 x i32], [4 x i8] }>
%class.GrCaps.base = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.1, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8 }>
%class.SkTArray.250 = type { i32*, i64 }
%"struct.GrGLCaps::FormatInfo" = type <{ i32, i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i32, %class.SkTDArray.251, %"class.std::__1::unique_ptr.252", i32, [4 x i8] }>
%class.SkTDArray.251 = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.252" = type { %"class.std::__1::__compressed_pair.253" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.254" }
%"struct.std::__1::__compressed_pair_elem.254" = type { %"struct.GrGLCaps::ColorTypeInfo"* }
%"struct.GrGLCaps::ColorTypeInfo" = type <{ i32, i32, %class.GrSwizzle, %class.GrSwizzle, [4 x i8], %"class.std::__1::unique_ptr.255", i32, [4 x i8] }>
%class.GrSwizzle = type { i16 }
%"class.std::__1::unique_ptr.255" = type { %"class.std::__1::__compressed_pair.256" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"struct.std::__1::__compressed_pair_elem.257" = type { %"struct.GrGLCaps::ColorTypeInfo::ExternalIOFormats"* }
%"struct.GrGLCaps::ColorTypeInfo::ExternalIOFormats" = type <{ i32, i32, i32, i32, i8, [3 x i8] }>
%class.sk_sp.267 = type { %"class.GrGLGpu::ProgramCache"* }
%"class.GrGLGpu::ProgramCache" = type { %class.GrThreadSafePipelineBuilder.base, %class.SkLRUCache }
%class.GrThreadSafePipelineBuilder.base = type { %class.SkRefCnt.base, %"class.GrThreadSafePipelineBuilder::Stats" }
%"class.GrThreadSafePipelineBuilder::Stats" = type { i8 }
%class.SkLRUCache = type { i32, %class.SkTHashTable.268, %class.SkTInternalLList }
%class.SkTHashTable.268 = type { i32, i32, %class.SkAutoTArray.269 }
%class.SkAutoTArray.269 = type { %"class.std::__1::unique_ptr.270" }
%"class.std::__1::unique_ptr.270" = type { %"class.std::__1::__compressed_pair.271" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.272" }
%"struct.std::__1::__compressed_pair_elem.272" = type { %"struct.SkTHashTable<SkLRUCache<GrProgramDesc, std::__1::unique_ptr<GrGLGpu::ProgramCache::Entry, std::__1::default_delete<GrGLGpu::ProgramCache::Entry> >, GrGLGpu::ProgramCache::DescHash>::Entry *, GrProgramDesc, SkLRUCache<GrProgramDesc, std::__1::unique_ptr<GrGLGpu::ProgramCache::Entry, std::__1::default_delete<GrGLGpu::ProgramCache::Entry> >, GrGLGpu::ProgramCache::DescHash>::Traits>::Slot"* }
%"struct.SkTHashTable<SkLRUCache<GrProgramDesc, std::__1::unique_ptr<GrGLGpu::ProgramCache::Entry, std::__1::default_delete<GrGLGpu::ProgramCache::Entry> >, GrGLGpu::ProgramCache::DescHash>::Entry *, GrProgramDesc, SkLRUCache<GrProgramDesc, std::__1::unique_ptr<GrGLGpu::ProgramCache::Entry, std::__1::default_delete<GrGLGpu::ProgramCache::Entry> >, GrGLGpu::ProgramCache::DescHash>::Traits>::Slot" = type opaque
%class.SkTInternalLList = type { %"struct.SkLRUCache<GrProgramDesc, std::__1::unique_ptr<GrGLGpu::ProgramCache::Entry, std::__1::default_delete<GrGLGpu::ProgramCache::Entry> >, GrGLGpu::ProgramCache::DescHash>::Entry"*, %"struct.SkLRUCache<GrProgramDesc, std::__1::unique_ptr<GrGLGpu::ProgramCache::Entry, std::__1::default_delete<GrGLGpu::ProgramCache::Entry> >, GrGLGpu::ProgramCache::DescHash>::Entry"* }
%"struct.SkLRUCache<GrProgramDesc, std::__1::unique_ptr<GrGLGpu::ProgramCache::Entry, std::__1::default_delete<GrGLGpu::ProgramCache::Entry> >, GrGLGpu::ProgramCache::DescHash>::Entry" = type opaque
%class.sk_sp.276 = type { %class.GrGLProgram* }
%class.GrGLProgram = type <{ %class.SkRefCnt.base, %"struct.GrGLProgram::RenderTargetState", %struct.GrGLSLBuiltinUniformHandles, i32, [4 x i8], %"class.std::__1::unique_ptr.277", %"class.std::__1::unique_ptr.283", %"class.std::__1::vector", %"class.std::__1::unique_ptr.299", i32, i32, i32, i32, %class.GrGLGpu*, %class.GrGLProgramDataManager, i32, [4 x i8] }>
%"struct.GrGLProgram::RenderTargetState" = type { %struct.SkISize, i32 }
%struct.GrGLSLBuiltinUniformHandles = type { %class.GrResourceHandle, %class.GrResourceHandle }
%class.GrResourceHandle = type { i32 }
%"class.std::__1::unique_ptr.277" = type { %"class.std::__1::__compressed_pair.278" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.279" }
%"struct.std::__1::__compressed_pair_elem.279" = type { %class.GrGLSLGeometryProcessor* }
%class.GrGLSLGeometryProcessor = type opaque
%"class.std::__1::unique_ptr.283" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"struct.std::__1::__compressed_pair_elem.285" = type { %class.GrGLSLXferProcessor* }
%class.GrGLSLXferProcessor = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.289"*, %"class.std::__1::unique_ptr.289"*, %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::unique_ptr.289" = type { %"class.std::__1::__compressed_pair.290" }
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %class.GrGLSLFragmentProcessor* }
%class.GrGLSLFragmentProcessor = type { i32 (...)**, %class.SkTArray.26, %class.SkTArray.292 }
%class.SkTArray.292 = type { %"class.std::__1::unique_ptr.289"*, i64 }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"class.std::__1::unique_ptr.289"* }
%"class.std::__1::unique_ptr.299" = type { %"class.std::__1::__compressed_pair.300" }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.301" }
%"struct.std::__1::__compressed_pair_elem.301" = type { %"struct.GrGLProgram::Attribute"* }
%"struct.GrGLProgram::Attribute" = type { i32, i32, i64, i32 }
%class.GrGLProgramDataManager = type { %class.GrGLSLProgramDataManager, %class.SkTArray.305, %class.GrGLGpu* }
%class.GrGLSLProgramDataManager = type { i32 (...)** }
%class.SkTArray.305 = type { %"struct.GrGLProgramDataManager::Uniform"*, i64 }
%"struct.GrGLProgramDataManager::Uniform" = type { i32 }
%struct.anon = type { i32, %struct.GrNativeRect }
%class.anon = type { i32, i32, i32, %class.GrWindowRectsState }
%class.GrWindowRectsState = type { i8, %class.GrWindowRectangles }
%class.GrWindowRectangles = type { i32, %union.anon.306 }
%union.anon.306 = type { %"struct.GrWindowRectangles::Rec"*, [8 x i8] }
%"struct.GrWindowRectangles::Rec" = type { %class.GrNonAtomicRef, [8 x %struct.SkIRect] }
%class.GrNonAtomicRef = type { i32 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.GrNativeRect = type { i32, i32, i32, i32 }
%"class.GrGLGpu::HWVertexArrayState" = type { i32, i8, [3 x i8], %class.GrGLAttribArrayState, %class.GrGLVertexArray* }
%struct.anon.307 = type <{ i32, %"class.GrGpuResource::UniqueID", i8, [3 x i8] }>
%struct.anon.308 = type { i32, i32, i32, %struct.SkRGBA4f, i8, i32 }
%struct.SkRGBA4f = type { float, float, float, float }
%class.GrStencilSettings = type { i32, %"struct.GrStencilSettings::Face", %"struct.GrStencilSettings::Face" }
%"struct.GrStencilSettings::Face" = type { %struct.GrTStencilFaceSettings }
%struct.GrTStencilFaceSettings = type { i16, i16, i16, i8, i8, i16 }
%class.SkAutoTArray.309 = type { %"class.std::__1::unique_ptr.310" }
%"class.std::__1::unique_ptr.310" = type { %"class.std::__1::__compressed_pair.311" }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"struct.std::__1::__compressed_pair_elem.312" = type { %"class.GrGLGpu::TextureUnitBindings"* }
%"class.GrGLGpu::TextureUnitBindings" = type { [3 x %"struct.GrGLGpu::TextureUnitBindings::TargetBinding"] }
%"struct.GrGLGpu::TextureUnitBindings::TargetBinding" = type <{ %"class.GrGpuResource::UniqueID", i8, [3 x i8] }>
%struct.anon.316 = type { i32, i32, i32, i32 }
%struct.anon.318 = type { i32, i32, i32 }
%class.sk_sp.317 = type { %class.GrGLBuffer* }
%class.GrGLBuffer = type <{ %class.GrGpuBuffer, i32, i32, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.319" = type { %"class.std::__1::__compressed_pair.320" }
%"class.std::__1::__compressed_pair.320" = type { %"struct.std::__1::__compressed_pair_elem.321" }
%"struct.std::__1::__compressed_pair_elem.321" = type { %"class.GrGLGpu::SamplerObjectCache"* }
%"class.GrGLGpu::SamplerObjectCache" = type opaque
%"class.std::__1::unique_ptr.325" = type { %"class.std::__1::__compressed_pair.326" }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.327" }
%"struct.std::__1::__compressed_pair_elem.327" = type { %class.GrGLOpsRenderPass* }
%class.GrGLOpsRenderPass = type opaque
%class.GrFinishCallbacks = type { %class.GrGpu*, %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.331" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332" }
%"struct.std::__1::__compressed_pair_elem.332" = type { i64 }

$_ZN20GrGLAttribArrayState6resizeEi = comdat any

$_ZN8SkTArrayIN20GrGLAttribArrayState16AttribArrayStateELb1EE12checkReallocEiNS2_11ReallocTypeE = comdat any

@.str = private unnamed_addr constant [54 x i8] c"../../third_party/skia/src/gpu/gl/GrGLVertexArray.cpp\00", align 1
@.str.1 = private unnamed_addr constant [27 x i8] c"Unknown vertex attrib type\00", align 1
@switch.table._ZN20GrGLAttribArrayState3setEP7GrGLGpuiPK8GrBuffer18GrVertexAttribType8GrSLTypeimi = private unnamed_addr constant [26 x i32] [i32 256, i32 512, i32 768, i32 1024, i32 256, i32 512, i32 1024, i32 512, i32 768, i32 1024, i32 256, i32 512, i32 1024, i32 256, i32 512, i32 1024, i32 256, i32 1024, i32 512, i32 1024, i32 512, i32 512, i32 256, i32 256, i32 256, i32 1024], align 4
@switch.table._ZN20GrGLAttribArrayState3setEP7GrGLGpuiPK8GrBuffer18GrVertexAttribType8GrSLTypeimi.2 = private unnamed_addr constant [26 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01\00\00\00\01\00\00\01\01", align 1
@switch.table._ZN20GrGLAttribArrayState3setEP7GrGLGpuiPK8GrBuffer18GrVertexAttribType8GrSLTypeimi.3 = private unnamed_addr constant [26 x i32] [i32 335937536, i32 335937536, i32 335937536, i32 335937536, i32 336265216, i32 336265216, i32 336265216, i32 335806464, i32 335806464, i32 335806464, i32 335544320, i32 335544320, i32 335544320, i32 335609856, i32 335609856, i32 335609856, i32 335609856, i32 335609856, i32 335675392, i32 335675392, i32 335740928, i32 335740928, i32 335806464, i32 335872000, i32 335740928, i32 335740928], align 4

@_ZN15GrGLVertexArrayC1Eii = hidden unnamed_addr alias void (%class.GrGLVertexArray*, i32, i32), void (%class.GrGLVertexArray*, i32, i32)* @_ZN15GrGLVertexArrayC2Eii

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20GrGLAttribArrayState3setEP7GrGLGpuiPK8GrBuffer18GrVertexAttribType8GrSLTypeimi(%class.GrGLAttribArrayState* nocapture readonly, %class.GrGLGpu*, i32, %class.GrBuffer*, i32, i32, i32, i64, i32) local_unnamed_addr #0 align 2 {
  %10 = getelementptr inbounds %class.GrGLAttribArrayState, %class.GrGLAttribArrayState* %0, i64 0, i32 0, i32 0, i32 0, i64 640
  %11 = bitcast i8* %10 to %"struct.GrGLAttribArrayState::AttribArrayState"**
  %12 = load %"struct.GrGLAttribArrayState::AttribArrayState"*, %"struct.GrGLAttribArrayState::AttribArrayState"** %11, align 8
  %13 = sext i32 %2 to i64
  %14 = getelementptr inbounds %"struct.GrGLAttribArrayState::AttribArrayState", %"struct.GrGLAttribArrayState::AttribArrayState"* %12, i64 %13
  %15 = bitcast %class.GrBuffer* %3 to i1 (%class.GrBuffer*)***
  %16 = load i1 (%class.GrBuffer*)**, i1 (%class.GrBuffer*)*** %15, align 8
  %17 = getelementptr inbounds i1 (%class.GrBuffer*)*, i1 (%class.GrBuffer*)** %16, i64 5
  %18 = load i1 (%class.GrBuffer*)*, i1 (%class.GrBuffer*)** %17, align 8
  %19 = tail call zeroext i1 %18(%class.GrBuffer* %3) #6
  br i1 %19, label %20, label %34

20:                                               ; preds = %9
  %21 = getelementptr inbounds %"struct.GrGLAttribArrayState::AttribArrayState", %"struct.GrGLAttribArrayState::AttribArrayState"* %12, i64 %13, i32 1
  %22 = load i8, i8* %21, align 4, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %29

24:                                               ; preds = %20
  store i8 1, i8* %21, align 4
  %25 = getelementptr inbounds %class.GrBuffer, %class.GrBuffer* %3, i64 2
  %26 = bitcast %class.GrBuffer* %25 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds i8, i8* %27, i64 %7
  br label %70

29:                                               ; preds = %20
  %30 = getelementptr inbounds %class.GrBuffer, %class.GrBuffer* %3, i64 2
  %31 = bitcast %class.GrBuffer* %30 to i8**
  %32 = load i8*, i8** %31, align 8
  %33 = getelementptr inbounds i8, i8* %32, i64 %7
  br label %53

34:                                               ; preds = %9
  %35 = icmp eq %class.GrBuffer* %3, null
  %36 = getelementptr inbounds %class.GrBuffer, %class.GrBuffer* %3, i64 -19
  %37 = bitcast %class.GrBuffer* %36 to %class.GrGpuBuffer*
  %38 = select i1 %35, %class.GrGpuBuffer* null, %class.GrGpuBuffer* %37
  %39 = getelementptr inbounds %"struct.GrGLAttribArrayState::AttribArrayState", %"struct.GrGLAttribArrayState::AttribArrayState"* %12, i64 %13, i32 1
  %40 = load i8, i8* %39, align 4, !range !2
  %41 = icmp eq i8 %40, 0
  %42 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %38, i64 0, i32 0, i32 11, i32 0
  %43 = load i32, i32* %42, align 4
  br i1 %41, label %44, label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"struct.GrGLAttribArrayState::AttribArrayState", %"struct.GrGLAttribArrayState::AttribArrayState"* %14, i64 0, i32 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, %43
  br i1 %47, label %51, label %48

48:                                               ; preds = %34, %44
  %49 = getelementptr inbounds %"struct.GrGLAttribArrayState::AttribArrayState", %"struct.GrGLAttribArrayState::AttribArrayState"* %14, i64 0, i32 0, i32 0
  store i32 %43, i32* %49, align 8
  %50 = inttoptr i64 %7 to i8*
  br label %70

51:                                               ; preds = %44
  %52 = inttoptr i64 %7 to i8*
  br label %53

53:                                               ; preds = %29, %51
  %54 = phi i8* [ %33, %29 ], [ %52, %51 ]
  %55 = getelementptr inbounds %"struct.GrGLAttribArrayState::AttribArrayState", %"struct.GrGLAttribArrayState::AttribArrayState"* %12, i64 %13, i32 3
  %56 = load i32, i32* %55, align 8
  %57 = icmp eq i32 %56, %4
  br i1 %57, label %58, label %70

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"struct.GrGLAttribArrayState::AttribArrayState", %"struct.GrGLAttribArrayState::AttribArrayState"* %12, i64 %13, i32 4
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, %5
  br i1 %61, label %62, label %70

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"struct.GrGLAttribArrayState::AttribArrayState", %"struct.GrGLAttribArrayState::AttribArrayState"* %12, i64 %13, i32 5
  %64 = load i32, i32* %63, align 8
  %65 = icmp eq i32 %64, %6
  br i1 %65, label %66, label %70

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"struct.GrGLAttribArrayState::AttribArrayState", %"struct.GrGLAttribArrayState::AttribArrayState"* %12, i64 %13, i32 7
  %68 = load i8*, i8** %67, align 8
  %69 = icmp eq i8* %68, %54
  br i1 %69, label %114, label %70

70:                                               ; preds = %24, %48, %66, %62, %58, %53
  %71 = phi i8* [ %54, %66 ], [ %54, %62 ], [ %54, %58 ], [ %54, %53 ], [ %50, %48 ], [ %28, %24 ]
  %72 = tail call i32 @_ZN7GrGLGpu10bindBufferE15GrGpuBufferTypePK8GrBuffer(%class.GrGLGpu* %1, i32 0, %class.GrBuffer* %3) #6
  %73 = icmp ult i32 %4, 26
  br i1 %73, label %75, label %74

74:                                               ; preds = %70
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i32 76, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0)) #7
  unreachable

75:                                               ; preds = %70
  %76 = sext i32 %4 to i64
  %77 = getelementptr inbounds [26 x i32], [26 x i32]* @switch.table._ZN20GrGLAttribArrayState3setEP7GrGLGpuiPK8GrBuffer18GrVertexAttribType8GrSLTypeimi, i64 0, i64 %76
  %78 = load i32, i32* %77, align 4
  %79 = sext i32 %4 to i64
  %80 = getelementptr inbounds [26 x i32], [26 x i32]* @switch.table._ZN20GrGLAttribArrayState3setEP7GrGLGpuiPK8GrBuffer18GrVertexAttribType8GrSLTypeimi.3, i64 0, i64 %79
  %81 = load i32, i32* %80, align 4
  %82 = or i32 %81, %78
  %83 = lshr exact i32 %82, 8
  %84 = lshr exact i32 %81, 16
  switch i32 %5, label %85 [
    i32 21, label %86
    i32 22, label %86
    i32 23, label %86
    i32 24, label %86
    i32 25, label %86
    i32 26, label %86
    i32 27, label %86
    i32 28, label %86
    i32 29, label %86
    i32 30, label %86
    i32 31, label %86
    i32 32, label %86
    i32 33, label %86
    i32 34, label %86
    i32 0, label %99
    i32 43, label %99
    i32 44, label %99
    i32 45, label %99
    i32 1, label %99
    i32 2, label %99
    i32 3, label %99
    i32 4, label %99
    i32 5, label %99
    i32 6, label %99
    i32 7, label %99
    i32 8, label %99
    i32 9, label %99
    i32 10, label %99
    i32 11, label %99
    i32 12, label %99
    i32 13, label %99
    i32 14, label %99
    i32 15, label %99
    i32 16, label %99
    i32 17, label %99
    i32 18, label %99
    i32 19, label %99
    i32 20, label %99
    i32 35, label %99
    i32 36, label %99
    i32 37, label %99
    i32 38, label %99
    i32 39, label %99
    i32 40, label %99
    i32 41, label %99
    i32 42, label %99
    i32 46, label %99
    i32 47, label %99
    i32 48, label %99
  ]

85:                                               ; preds = %75
  tail call void @llvm.trap() #6
  unreachable

86:                                               ; preds = %75, %75, %75, %75, %75, %75, %75, %75, %75, %75, %75, %75, %75, %75
  %87 = sext i32 %4 to i64
  %88 = getelementptr inbounds [26 x i8], [26 x i8]* @switch.table._ZN20GrGLAttribArrayState3setEP7GrGLGpuiPK8GrBuffer18GrVertexAttribType8GrSLTypeimi.2, i64 0, i64 %87
  %89 = load i8, i8* %88, align 1
  %90 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %91 = load %class.GrGLContext*, %class.GrGLContext** %90, align 8
  %92 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %91, i64 0, i32 0, i32 1, i32 0
  %93 = load %struct.GrGLInterface*, %struct.GrGLInterface** %92, align 8
  %94 = and i32 %83, 7
  %95 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %93, i64 0, i32 3, i32 185, i32 0
  %96 = load void (i8*, i32, i32, i32, i8, i32, i8*)*, void (i8*, i32, i32, i32, i8, i32, i8*)** %95, align 8
  %97 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %93, i64 0, i32 3, i32 185, i32 1, i64 0
  %98 = bitcast i64* %97 to i8*
  tail call void %96(i8* %98, i32 %2, i32 %94, i32 %84, i8 zeroext %89, i32 %6, i8* %71) #6
  br label %109

99:                                               ; preds = %75, %75, %75, %75, %75, %75, %75, %75, %75, %75, %75, %75, %75, %75, %75, %75, %75, %75, %75, %75, %75, %75, %75, %75, %75, %75, %75, %75, %75, %75, %75, %75, %75, %75, %75
  %100 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %101 = load %class.GrGLContext*, %class.GrGLContext** %100, align 8
  %102 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %101, i64 0, i32 0, i32 1, i32 0
  %103 = load %struct.GrGLInterface*, %struct.GrGLInterface** %102, align 8
  %104 = and i32 %83, 7
  %105 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %103, i64 0, i32 3, i32 184, i32 0
  %106 = load void (i8*, i32, i32, i32, i32, i8*)*, void (i8*, i32, i32, i32, i32, i8*)** %105, align 8
  %107 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %103, i64 0, i32 3, i32 184, i32 1, i64 0
  %108 = bitcast i64* %107 to i8*
  tail call void %106(i8* %108, i32 %2, i32 %104, i32 %84, i32 %6, i8* %71) #6
  br label %109

109:                                              ; preds = %99, %86
  %110 = getelementptr inbounds %"struct.GrGLAttribArrayState::AttribArrayState", %"struct.GrGLAttribArrayState::AttribArrayState"* %12, i64 %13, i32 3
  store i32 %4, i32* %110, align 8
  %111 = getelementptr inbounds %"struct.GrGLAttribArrayState::AttribArrayState", %"struct.GrGLAttribArrayState::AttribArrayState"* %12, i64 %13, i32 4
  store i32 %5, i32* %111, align 4
  %112 = getelementptr inbounds %"struct.GrGLAttribArrayState::AttribArrayState", %"struct.GrGLAttribArrayState::AttribArrayState"* %12, i64 %13, i32 5
  store i32 %6, i32* %112, align 8
  %113 = getelementptr inbounds %"struct.GrGLAttribArrayState::AttribArrayState", %"struct.GrGLAttribArrayState::AttribArrayState"* %12, i64 %13, i32 7
  store i8* %71, i8** %113, align 8
  br label %114

114:                                              ; preds = %66, %109
  %115 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %1, i64 0, i32 0, i32 2, i32 0
  %116 = load %class.GrCaps*, %class.GrCaps** %115, align 8
  %117 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %116, i64 0, i32 3
  %118 = bitcast i48* %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = and i64 %119, 512
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %135, label %122

122:                                              ; preds = %114
  %123 = getelementptr inbounds %"struct.GrGLAttribArrayState::AttribArrayState", %"struct.GrGLAttribArrayState::AttribArrayState"* %12, i64 %13, i32 8
  %124 = load i32, i32* %123, align 8
  %125 = icmp eq i32 %124, %8
  br i1 %125, label %135, label %126

126:                                              ; preds = %122
  %127 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %128 = load %class.GrGLContext*, %class.GrGLContext** %127, align 8
  %129 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %128, i64 0, i32 0, i32 1, i32 0
  %130 = load %struct.GrGLInterface*, %struct.GrGLInterface** %129, align 8
  %131 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %130, i64 0, i32 3, i32 183, i32 0
  %132 = load void (i8*, i32, i32)*, void (i8*, i32, i32)** %131, align 8
  %133 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %130, i64 0, i32 3, i32 183, i32 1, i64 0
  %134 = bitcast i64* %133 to i8*
  tail call void %132(i8* %134, i32 %2, i32 %8) #6
  store i32 %8, i32* %123, align 8
  br label %135

135:                                              ; preds = %114, %122, %126
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare i32 @_ZN7GrGLGpu10bindBufferE15GrGpuBufferTypePK8GrBuffer(%class.GrGLGpu*, i32, %class.GrBuffer*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20GrGLAttribArrayState18enableVertexArraysEPK7GrGLGpui18GrPrimitiveRestart(%class.GrGLAttribArrayState* nocapture, %class.GrGLGpu* nocapture readonly, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = zext i1 %3 to i8
  %6 = getelementptr inbounds %class.GrGLAttribArrayState, %class.GrGLAttribArrayState* %0, i64 0, i32 3
  %7 = load i8, i8* %6, align 1, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %class.GrGLAttribArrayState, %class.GrGLAttribArrayState* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, %2
  br i1 %12, label %62, label %13

13:                                               ; preds = %9, %4
  %14 = phi i32 [ 0, %4 ], [ %11, %9 ]
  %15 = icmp slt i32 %14, %2
  br i1 %15, label %16, label %20

16:                                               ; preds = %13
  %17 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %23

18:                                               ; preds = %23
  %19 = load i8, i8* %6, align 1, !range !2
  br label %20

20:                                               ; preds = %18, %13
  %21 = phi i8 [ %19, %18 ], [ %7, %13 ]
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %37, label %34

23:                                               ; preds = %23, %16
  %24 = phi i32 [ %14, %16 ], [ %32, %23 ]
  %25 = load %class.GrGLContext*, %class.GrGLContext** %17, align 8
  %26 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %25, i64 0, i32 0, i32 1, i32 0
  %27 = load %struct.GrGLInterface*, %struct.GrGLInterface** %26, align 8
  %28 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %27, i64 0, i32 3, i32 56, i32 0
  %29 = load void (i8*, i32)*, void (i8*, i32)** %28, align 8
  %30 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %27, i64 0, i32 3, i32 56, i32 1, i64 0
  %31 = bitcast i64* %30 to i8*
  tail call void %29(i8* %31, i32 %24) #6
  %32 = add i32 %24, 1
  %33 = icmp eq i32 %32, %2
  br i1 %33, label %18, label %23

34:                                               ; preds = %20
  %35 = getelementptr inbounds %class.GrGLAttribArrayState, %class.GrGLAttribArrayState* %0, i64 0, i32 1
  %36 = load i32, i32* %35, align 8
  br label %44

37:                                               ; preds = %20
  %38 = getelementptr inbounds %class.GrGLAttribArrayState, %class.GrGLAttribArrayState* %0, i64 0, i32 0, i32 0, i32 0, i64 648
  %39 = bitcast i8* %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = lshr i64 %40, 1
  %42 = trunc i64 %41 to i32
  %43 = and i32 %42, 2147483647
  br label %44

44:                                               ; preds = %37, %34
  %45 = phi i32 [ %36, %34 ], [ %43, %37 ]
  %46 = icmp sgt i32 %45, %2
  br i1 %46, label %47, label %49

47:                                               ; preds = %44
  %48 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %51

49:                                               ; preds = %51, %44
  %50 = getelementptr inbounds %class.GrGLAttribArrayState, %class.GrGLAttribArrayState* %0, i64 0, i32 1
  store i32 %2, i32* %50, align 8
  br label %62

51:                                               ; preds = %51, %47
  %52 = phi i32 [ %2, %47 ], [ %60, %51 ]
  %53 = load %class.GrGLContext*, %class.GrGLContext** %48, align 8
  %54 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %53, i64 0, i32 0, i32 1, i32 0
  %55 = load %struct.GrGLInterface*, %struct.GrGLInterface** %54, align 8
  %56 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %55, i64 0, i32 3, i32 45, i32 0
  %57 = load void (i8*, i32)*, void (i8*, i32)** %56, align 8
  %58 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %55, i64 0, i32 3, i32 45, i32 1, i64 0
  %59 = bitcast i64* %58 to i8*
  tail call void %57(i8* %59, i32 %52) #6
  %60 = add i32 %52, 1
  %61 = icmp eq i32 %60, %45
  br i1 %61, label %49, label %51

62:                                               ; preds = %9, %49
  %63 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %1, i64 0, i32 0, i32 2, i32 0
  %64 = load %class.GrCaps*, %class.GrCaps** %63, align 8
  %65 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %64, i64 0, i32 3
  %66 = bitcast i48* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = trunc i64 %67 to i16
  %69 = icmp slt i16 %68, 0
  br i1 %69, label %70, label %95

70:                                               ; preds = %62
  %71 = load i8, i8* %6, align 1, !range !2
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %78, label %73

73:                                               ; preds = %70
  %74 = getelementptr inbounds %class.GrGLAttribArrayState, %class.GrGLAttribArrayState* %0, i64 0, i32 2
  %75 = load i8, i8* %74, align 4, !range !2
  %76 = icmp ne i8 %75, 0
  %77 = xor i1 %76, %3
  br i1 %77, label %78, label %95

78:                                               ; preds = %70, %73
  %79 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %80 = load %class.GrGLContext*, %class.GrGLContext** %79, align 8
  %81 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %80, i64 0, i32 0, i32 1, i32 0
  %82 = load %struct.GrGLInterface*, %struct.GrGLInterface** %81, align 8
  br i1 %3, label %83, label %88

83:                                               ; preds = %78
  %84 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %82, i64 0, i32 3, i32 55, i32 0
  %85 = load void (i8*, i32)*, void (i8*, i32)** %84, align 8
  %86 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %82, i64 0, i32 3, i32 55, i32 1, i64 0
  %87 = bitcast i64* %86 to i8*
  tail call void %85(i8* %87, i32 36201) #6
  br label %93

88:                                               ; preds = %78
  %89 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %82, i64 0, i32 3, i32 44, i32 0
  %90 = load void (i8*, i32)*, void (i8*, i32)** %89, align 8
  %91 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %82, i64 0, i32 3, i32 44, i32 1, i64 0
  %92 = bitcast i64* %91 to i8*
  tail call void %90(i8* %92, i32 36201) #6
  br label %93

93:                                               ; preds = %88, %83
  %94 = getelementptr inbounds %class.GrGLAttribArrayState, %class.GrGLAttribArrayState* %0, i64 0, i32 2
  store i8 %5, i8* %94, align 4
  br label %95

95:                                               ; preds = %93, %73, %62
  store i8 1, i8* %6, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15GrGLVertexArrayC2Eii(%class.GrGLVertexArray*, i32, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.GrGLVertexArray, %class.GrGLVertexArray* %0, i64 0, i32 0
  store i32 %1, i32* %4, align 8
  %5 = getelementptr inbounds %class.GrGLVertexArray, %class.GrGLVertexArray* %0, i64 0, i32 2
  %6 = getelementptr inbounds %class.GrGLVertexArray, %class.GrGLVertexArray* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i64 640
  %7 = getelementptr inbounds %class.GrGLAttribArrayState, %class.GrGLAttribArrayState* %5, i64 0, i32 0, i32 0, i32 0, i64 0
  %8 = getelementptr inbounds %class.GrGLVertexArray, %class.GrGLVertexArray* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i64 648
  %9 = bitcast i8* %8 to i64*
  %10 = bitcast i8* %6 to i8**
  store i8* %7, i8** %10, align 8
  store i64 137438953472, i64* %9, align 8
  %11 = getelementptr inbounds %class.GrGLVertexArray, %class.GrGLVertexArray* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %11, align 1
  tail call void @_ZN20GrGLAttribArrayState6resizeEi(%class.GrGLAttribArrayState* %5, i32 %2) #6
  %12 = getelementptr inbounds %class.GrGLVertexArray, %class.GrGLVertexArray* %0, i64 0, i32 3, i32 0
  store i32 0, i32* %12, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrGLAttribArrayState* @_ZN15GrGLVertexArray4bindEP7GrGLGpu(%class.GrGLVertexArray* readonly, %class.GrGLGpu* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrGLVertexArray, %class.GrGLVertexArray* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %35, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %1, i64 0, i32 12
  %8 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %9 = load %class.GrGLContext*, %class.GrGLContext** %8, align 8
  %10 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %9, i64 0, i32 0, i32 4, i32 0
  %11 = load %class.GrGLCaps*, %class.GrGLCaps** %10, align 8
  %12 = getelementptr inbounds %class.GrGLCaps, %class.GrGLCaps* %11, i64 0, i32 12
  %13 = bitcast i40* %12 to i64*
  %14 = load i64, i64* %13, align 4
  %15 = and i64 %14, 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %33, label %17

17:                                               ; preds = %6
  %18 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %1, i64 0, i32 12, i32 1
  %19 = load i8, i8* %18, align 4, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %25, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.GrGLGpu::HWVertexArrayState", %"class.GrGLGpu::HWVertexArrayState"* %7, i64 0, i32 0
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, %4
  br i1 %24, label %33, label %25

25:                                               ; preds = %21, %17
  %26 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %9, i64 0, i32 0, i32 1, i32 0
  %27 = load %struct.GrGLInterface*, %struct.GrGLInterface** %26, align 8
  %28 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %27, i64 0, i32 3, i32 11, i32 0
  %29 = load void (i8*, i32)*, void (i8*, i32)** %28, align 8
  %30 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %27, i64 0, i32 3, i32 11, i32 1, i64 0
  %31 = bitcast i64* %30 to i8*
  tail call void %29(i8* %31, i32 %4) #6
  store i8 1, i8* %18, align 4
  %32 = getelementptr inbounds %"class.GrGLGpu::HWVertexArrayState", %"class.GrGLGpu::HWVertexArrayState"* %7, i64 0, i32 0
  store i32 %4, i32* %32, align 8
  br label %33

33:                                               ; preds = %6, %21, %25
  %34 = getelementptr inbounds %class.GrGLVertexArray, %class.GrGLVertexArray* %0, i64 0, i32 2
  br label %35

35:                                               ; preds = %2, %33
  %36 = phi %class.GrGLAttribArrayState* [ %34, %33 ], [ null, %2 ]
  ret %class.GrGLAttribArrayState* %36
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrGLAttribArrayState* @_ZN15GrGLVertexArray19bindWithIndexBufferEP7GrGLGpuPK8GrBuffer(%class.GrGLVertexArray*, %class.GrGLGpu* nocapture, %class.GrBuffer*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.GrGLVertexArray, %class.GrGLVertexArray* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %72, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %1, i64 0, i32 12
  %9 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %class.GrGLContext*, %class.GrGLContext** %9, align 8
  %11 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %10, i64 0, i32 0, i32 4, i32 0
  %12 = load %class.GrGLCaps*, %class.GrGLCaps** %11, align 8
  %13 = getelementptr inbounds %class.GrGLCaps, %class.GrGLCaps* %12, i64 0, i32 12
  %14 = bitcast i40* %13 to i64*
  %15 = load i64, i64* %14, align 4
  %16 = and i64 %15, 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %34, label %18

18:                                               ; preds = %7
  %19 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %1, i64 0, i32 12, i32 1
  %20 = load i8, i8* %19, align 4, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %26, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.GrGLGpu::HWVertexArrayState", %"class.GrGLGpu::HWVertexArrayState"* %8, i64 0, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, %5
  br i1 %25, label %34, label %26

26:                                               ; preds = %22, %18
  %27 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %10, i64 0, i32 0, i32 1, i32 0
  %28 = load %struct.GrGLInterface*, %struct.GrGLInterface** %27, align 8
  %29 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %28, i64 0, i32 3, i32 11, i32 0
  %30 = load void (i8*, i32)*, void (i8*, i32)** %29, align 8
  %31 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %28, i64 0, i32 3, i32 11, i32 1, i64 0
  %32 = bitcast i64* %31 to i8*
  tail call void %30(i8* %32, i32 %5) #6
  store i8 1, i8* %19, align 4
  %33 = getelementptr inbounds %"class.GrGLGpu::HWVertexArrayState", %"class.GrGLGpu::HWVertexArrayState"* %8, i64 0, i32 0
  store i32 %5, i32* %33, align 8
  br label %34

34:                                               ; preds = %7, %22, %26
  %35 = getelementptr inbounds %class.GrGLVertexArray, %class.GrGLVertexArray* %0, i64 0, i32 2
  %36 = icmp eq %class.GrGLAttribArrayState* %35, null
  br i1 %36, label %72, label %37

37:                                               ; preds = %34
  %38 = bitcast %class.GrBuffer* %2 to i1 (%class.GrBuffer*)***
  %39 = load i1 (%class.GrBuffer*)**, i1 (%class.GrBuffer*)*** %38, align 8
  %40 = getelementptr inbounds i1 (%class.GrBuffer*)*, i1 (%class.GrBuffer*)** %39, i64 5
  %41 = load i1 (%class.GrBuffer*)*, i1 (%class.GrBuffer*)** %40, align 8
  %42 = tail call zeroext i1 %41(%class.GrBuffer* %2) #6
  br i1 %42, label %43, label %51

43:                                               ; preds = %37
  %44 = load %class.GrGLContext*, %class.GrGLContext** %9, align 8
  %45 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %44, i64 0, i32 0, i32 1, i32 0
  %46 = load %struct.GrGLInterface*, %struct.GrGLInterface** %45, align 8
  %47 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %46, i64 0, i32 3, i32 4, i32 0
  %48 = load void (i8*, i32, i32)*, void (i8*, i32, i32)** %47, align 8
  %49 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %46, i64 0, i32 3, i32 4, i32 1, i64 0
  %50 = bitcast i64* %49 to i8*
  tail call void %48(i8* %50, i32 34963, i32 0) #6
  br label %72

51:                                               ; preds = %37
  %52 = icmp eq %class.GrBuffer* %2, null
  %53 = getelementptr inbounds %class.GrBuffer, %class.GrBuffer* %2, i64 -19
  %54 = bitcast %class.GrBuffer* %53 to %class.GrGLBuffer*
  %55 = select i1 %52, %class.GrGLBuffer* null, %class.GrGLBuffer* %54
  %56 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %55, i64 0, i32 0, i32 0, i32 11, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %class.GrGLVertexArray, %class.GrGLVertexArray* %0, i64 0, i32 3, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, %57
  br i1 %60, label %72, label %61

61:                                               ; preds = %51
  %62 = load %class.GrGLContext*, %class.GrGLContext** %9, align 8
  %63 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %62, i64 0, i32 0, i32 1, i32 0
  %64 = load %struct.GrGLInterface*, %struct.GrGLInterface** %63, align 8
  %65 = getelementptr inbounds %class.GrGLBuffer, %class.GrGLBuffer* %55, i64 0, i32 2
  %66 = load i32, i32* %65, align 4
  %67 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %64, i64 0, i32 3, i32 4, i32 0
  %68 = load void (i8*, i32, i32)*, void (i8*, i32, i32)** %67, align 8
  %69 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %64, i64 0, i32 3, i32 4, i32 1, i64 0
  %70 = bitcast i64* %69 to i8*
  tail call void %68(i8* %70, i32 34963, i32 %66) #6
  %71 = load i32, i32* %56, align 4
  store i32 %71, i32* %58, align 8
  br label %72

72:                                               ; preds = %51, %3, %43, %61, %34
  %73 = phi %class.GrGLAttribArrayState* [ null, %34 ], [ %35, %51 ], [ %35, %61 ], [ %35, %43 ], [ null, %3 ]
  ret %class.GrGLAttribArrayState* %73
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN15GrGLVertexArray21invalidateCachedStateEv(%class.GrGLVertexArray* nocapture) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %class.GrGLVertexArray, %class.GrGLVertexArray* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i64 648
  %3 = bitcast i8* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = lshr i64 %4, 1
  %6 = trunc i64 %5 to i32
  %7 = and i32 %6, 2147483647
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %40, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %class.GrGLVertexArray, %class.GrGLVertexArray* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i64 640
  %11 = bitcast i8* %10 to %"struct.GrGLAttribArrayState::AttribArrayState"**
  %12 = zext i32 %7 to i64
  %13 = and i64 %12, 1
  %14 = icmp eq i32 %7, 1
  br i1 %14, label %32, label %15

15:                                               ; preds = %9
  %16 = sub nsw i64 %12, %13
  br label %17

17:                                               ; preds = %17, %15
  %18 = phi i64 [ 0, %15 ], [ %29, %17 ]
  %19 = phi i64 [ %16, %15 ], [ %30, %17 ]
  %20 = load %"struct.GrGLAttribArrayState::AttribArrayState"*, %"struct.GrGLAttribArrayState::AttribArrayState"** %11, align 8
  %21 = getelementptr inbounds %"struct.GrGLAttribArrayState::AttribArrayState", %"struct.GrGLAttribArrayState::AttribArrayState"* %20, i64 %18, i32 0, i32 0
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds %"struct.GrGLAttribArrayState::AttribArrayState", %"struct.GrGLAttribArrayState::AttribArrayState"* %20, i64 %18, i32 8
  store i32 -1, i32* %22, align 8
  %23 = getelementptr inbounds %"struct.GrGLAttribArrayState::AttribArrayState", %"struct.GrGLAttribArrayState::AttribArrayState"* %20, i64 %18, i32 1
  store i8 0, i8* %23, align 4
  %24 = or i64 %18, 1
  %25 = load %"struct.GrGLAttribArrayState::AttribArrayState"*, %"struct.GrGLAttribArrayState::AttribArrayState"** %11, align 8
  %26 = getelementptr inbounds %"struct.GrGLAttribArrayState::AttribArrayState", %"struct.GrGLAttribArrayState::AttribArrayState"* %25, i64 %24, i32 0, i32 0
  store i32 0, i32* %26, align 4
  %27 = getelementptr inbounds %"struct.GrGLAttribArrayState::AttribArrayState", %"struct.GrGLAttribArrayState::AttribArrayState"* %25, i64 %24, i32 8
  store i32 -1, i32* %27, align 8
  %28 = getelementptr inbounds %"struct.GrGLAttribArrayState::AttribArrayState", %"struct.GrGLAttribArrayState::AttribArrayState"* %25, i64 %24, i32 1
  store i8 0, i8* %28, align 4
  %29 = add nuw nsw i64 %18, 2
  %30 = add i64 %19, -2
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %32, label %17

32:                                               ; preds = %17, %9
  %33 = phi i64 [ 0, %9 ], [ %29, %17 ]
  %34 = icmp eq i64 %13, 0
  br i1 %34, label %40, label %35

35:                                               ; preds = %32
  %36 = load %"struct.GrGLAttribArrayState::AttribArrayState"*, %"struct.GrGLAttribArrayState::AttribArrayState"** %11, align 8
  %37 = getelementptr inbounds %"struct.GrGLAttribArrayState::AttribArrayState", %"struct.GrGLAttribArrayState::AttribArrayState"* %36, i64 %33, i32 0, i32 0
  store i32 0, i32* %37, align 4
  %38 = getelementptr inbounds %"struct.GrGLAttribArrayState::AttribArrayState", %"struct.GrGLAttribArrayState::AttribArrayState"* %36, i64 %33, i32 8
  store i32 -1, i32* %38, align 8
  %39 = getelementptr inbounds %"struct.GrGLAttribArrayState::AttribArrayState", %"struct.GrGLAttribArrayState::AttribArrayState"* %36, i64 %33, i32 1
  store i8 0, i8* %39, align 4
  br label %40

40:                                               ; preds = %35, %32, %1
  %41 = getelementptr inbounds %class.GrGLVertexArray, %class.GrGLVertexArray* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %class.GrGLVertexArray, %class.GrGLVertexArray* %0, i64 0, i32 3, i32 0
  store i32 0, i32* %42, align 4
  ret void
}

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN20GrGLAttribArrayState6resizeEi(%class.GrGLAttribArrayState*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.GrGLAttribArrayState, %class.GrGLAttribArrayState* %0, i64 0, i32 0, i32 0, i32 0, i64 640
  %4 = bitcast i8* %3 to %class.SkTArray*
  %5 = getelementptr inbounds %class.GrGLAttribArrayState, %class.GrGLAttribArrayState* %0, i64 0, i32 0, i32 0, i32 0, i64 648
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 1
  %9 = trunc i64 %8 to i32
  %10 = and i32 %9, 2147483647
  %11 = icmp slt i32 %10, %1
  br i1 %11, label %12, label %63

12:                                               ; preds = %2
  %13 = sub nsw i32 %1, %10
  tail call void @_ZN8SkTArrayIN20GrGLAttribArrayState16AttribArrayStateELb1EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray* %4, i32 %13, i32 1) #6
  %14 = bitcast i8* %3 to %"struct.GrGLAttribArrayState::AttribArrayState"**
  %15 = load %"struct.GrGLAttribArrayState::AttribArrayState"*, %"struct.GrGLAttribArrayState::AttribArrayState"** %14, align 8
  %16 = load i64, i64* %6, align 8
  %17 = lshr i64 %16, 1
  %18 = trunc i64 %17 to i32
  %19 = and i64 %17, 2147483647
  %20 = getelementptr inbounds %"struct.GrGLAttribArrayState::AttribArrayState", %"struct.GrGLAttribArrayState::AttribArrayState"* %15, i64 %19
  %21 = add i32 %13, %18
  %22 = shl i32 %21, 1
  %23 = zext i32 %22 to i64
  %24 = and i64 %16, -4294967295
  %25 = or i64 %24, %23
  store i64 %25, i64* %6, align 8
  %26 = icmp sgt i32 %13, 0
  br i1 %26, label %27, label %81

27:                                               ; preds = %12
  %28 = zext i32 %13 to i64
  %29 = add nsw i64 %28, -1
  %30 = and i64 %28, 7
  %31 = icmp ult i64 %29, 7
  br i1 %31, label %70, label %32

32:                                               ; preds = %27
  %33 = sub nsw i64 %28, %30
  br label %34

34:                                               ; preds = %34, %32
  %35 = phi i64 [ 0, %32 ], [ %60, %34 ]
  %36 = phi i64 [ %33, %32 ], [ %61, %34 ]
  %37 = getelementptr inbounds %"struct.GrGLAttribArrayState::AttribArrayState", %"struct.GrGLAttribArrayState::AttribArrayState"* %20, i64 %35
  %38 = getelementptr inbounds %"struct.GrGLAttribArrayState::AttribArrayState", %"struct.GrGLAttribArrayState::AttribArrayState"* %37, i64 0, i32 0, i32 0
  store i32 0, i32* %38, align 4
  %39 = or i64 %35, 1
  %40 = getelementptr inbounds %"struct.GrGLAttribArrayState::AttribArrayState", %"struct.GrGLAttribArrayState::AttribArrayState"* %20, i64 %39
  %41 = getelementptr inbounds %"struct.GrGLAttribArrayState::AttribArrayState", %"struct.GrGLAttribArrayState::AttribArrayState"* %40, i64 0, i32 0, i32 0
  store i32 0, i32* %41, align 4
  %42 = or i64 %35, 2
  %43 = getelementptr inbounds %"struct.GrGLAttribArrayState::AttribArrayState", %"struct.GrGLAttribArrayState::AttribArrayState"* %20, i64 %42
  %44 = getelementptr inbounds %"struct.GrGLAttribArrayState::AttribArrayState", %"struct.GrGLAttribArrayState::AttribArrayState"* %43, i64 0, i32 0, i32 0
  store i32 0, i32* %44, align 4
  %45 = or i64 %35, 3
  %46 = getelementptr inbounds %"struct.GrGLAttribArrayState::AttribArrayState", %"struct.GrGLAttribArrayState::AttribArrayState"* %20, i64 %45
  %47 = getelementptr inbounds %"struct.GrGLAttribArrayState::AttribArrayState", %"struct.GrGLAttribArrayState::AttribArrayState"* %46, i64 0, i32 0, i32 0
  store i32 0, i32* %47, align 4
  %48 = or i64 %35, 4
  %49 = getelementptr inbounds %"struct.GrGLAttribArrayState::AttribArrayState", %"struct.GrGLAttribArrayState::AttribArrayState"* %20, i64 %48
  %50 = getelementptr inbounds %"struct.GrGLAttribArrayState::AttribArrayState", %"struct.GrGLAttribArrayState::AttribArrayState"* %49, i64 0, i32 0, i32 0
  store i32 0, i32* %50, align 4
  %51 = or i64 %35, 5
  %52 = getelementptr inbounds %"struct.GrGLAttribArrayState::AttribArrayState", %"struct.GrGLAttribArrayState::AttribArrayState"* %20, i64 %51
  %53 = getelementptr inbounds %"struct.GrGLAttribArrayState::AttribArrayState", %"struct.GrGLAttribArrayState::AttribArrayState"* %52, i64 0, i32 0, i32 0
  store i32 0, i32* %53, align 4
  %54 = or i64 %35, 6
  %55 = getelementptr inbounds %"struct.GrGLAttribArrayState::AttribArrayState", %"struct.GrGLAttribArrayState::AttribArrayState"* %20, i64 %54
  %56 = getelementptr inbounds %"struct.GrGLAttribArrayState::AttribArrayState", %"struct.GrGLAttribArrayState::AttribArrayState"* %55, i64 0, i32 0, i32 0
  store i32 0, i32* %56, align 4
  %57 = or i64 %35, 7
  %58 = getelementptr inbounds %"struct.GrGLAttribArrayState::AttribArrayState", %"struct.GrGLAttribArrayState::AttribArrayState"* %20, i64 %57
  %59 = getelementptr inbounds %"struct.GrGLAttribArrayState::AttribArrayState", %"struct.GrGLAttribArrayState::AttribArrayState"* %58, i64 0, i32 0, i32 0
  store i32 0, i32* %59, align 4
  %60 = add nuw nsw i64 %35, 8
  %61 = add i64 %36, -8
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %70, label %34

63:                                               ; preds = %2
  %64 = icmp sgt i32 %10, %1
  br i1 %64, label %65, label %81

65:                                               ; preds = %63
  %66 = shl i32 %1, 1
  %67 = zext i32 %66 to i64
  %68 = and i64 %7, -4294967295
  %69 = or i64 %68, %67
  store i64 %69, i64* %6, align 8
  tail call void @_ZN8SkTArrayIN20GrGLAttribArrayState16AttribArrayStateELb1EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray* %4, i32 0, i32 2) #6
  br label %81

70:                                               ; preds = %34, %27
  %71 = phi i64 [ 0, %27 ], [ %60, %34 ]
  %72 = icmp eq i64 %30, 0
  br i1 %72, label %81, label %73

73:                                               ; preds = %70, %73
  %74 = phi i64 [ %78, %73 ], [ %71, %70 ]
  %75 = phi i64 [ %79, %73 ], [ %30, %70 ]
  %76 = getelementptr inbounds %"struct.GrGLAttribArrayState::AttribArrayState", %"struct.GrGLAttribArrayState::AttribArrayState"* %20, i64 %74
  %77 = getelementptr inbounds %"struct.GrGLAttribArrayState::AttribArrayState", %"struct.GrGLAttribArrayState::AttribArrayState"* %76, i64 0, i32 0, i32 0
  store i32 0, i32* %77, align 4
  %78 = add nuw nsw i64 %74, 1
  %79 = add i64 %75, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %73, !llvm.loop !3

81:                                               ; preds = %70, %73, %12, %63, %65
  %82 = load i64, i64* %6, align 8
  %83 = lshr i64 %82, 1
  %84 = trunc i64 %83 to i32
  %85 = and i32 %84, 2147483647
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %117, label %87

87:                                               ; preds = %81
  %88 = bitcast i8* %3 to %"struct.GrGLAttribArrayState::AttribArrayState"**
  %89 = zext i32 %85 to i64
  %90 = and i64 %89, 1
  %91 = icmp eq i32 %85, 1
  br i1 %91, label %109, label %92

92:                                               ; preds = %87
  %93 = sub nsw i64 %89, %90
  br label %94

94:                                               ; preds = %94, %92
  %95 = phi i64 [ 0, %92 ], [ %106, %94 ]
  %96 = phi i64 [ %93, %92 ], [ %107, %94 ]
  %97 = load %"struct.GrGLAttribArrayState::AttribArrayState"*, %"struct.GrGLAttribArrayState::AttribArrayState"** %88, align 8
  %98 = getelementptr inbounds %"struct.GrGLAttribArrayState::AttribArrayState", %"struct.GrGLAttribArrayState::AttribArrayState"* %97, i64 %95, i32 0, i32 0
  store i32 0, i32* %98, align 4
  %99 = getelementptr inbounds %"struct.GrGLAttribArrayState::AttribArrayState", %"struct.GrGLAttribArrayState::AttribArrayState"* %97, i64 %95, i32 8
  store i32 -1, i32* %99, align 8
  %100 = getelementptr inbounds %"struct.GrGLAttribArrayState::AttribArrayState", %"struct.GrGLAttribArrayState::AttribArrayState"* %97, i64 %95, i32 1
  store i8 0, i8* %100, align 4
  %101 = or i64 %95, 1
  %102 = load %"struct.GrGLAttribArrayState::AttribArrayState"*, %"struct.GrGLAttribArrayState::AttribArrayState"** %88, align 8
  %103 = getelementptr inbounds %"struct.GrGLAttribArrayState::AttribArrayState", %"struct.GrGLAttribArrayState::AttribArrayState"* %102, i64 %101, i32 0, i32 0
  store i32 0, i32* %103, align 4
  %104 = getelementptr inbounds %"struct.GrGLAttribArrayState::AttribArrayState", %"struct.GrGLAttribArrayState::AttribArrayState"* %102, i64 %101, i32 8
  store i32 -1, i32* %104, align 8
  %105 = getelementptr inbounds %"struct.GrGLAttribArrayState::AttribArrayState", %"struct.GrGLAttribArrayState::AttribArrayState"* %102, i64 %101, i32 1
  store i8 0, i8* %105, align 4
  %106 = add nuw nsw i64 %95, 2
  %107 = add i64 %96, -2
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %109, label %94

109:                                              ; preds = %94, %87
  %110 = phi i64 [ 0, %87 ], [ %106, %94 ]
  %111 = icmp eq i64 %90, 0
  br i1 %111, label %117, label %112

112:                                              ; preds = %109
  %113 = load %"struct.GrGLAttribArrayState::AttribArrayState"*, %"struct.GrGLAttribArrayState::AttribArrayState"** %88, align 8
  %114 = getelementptr inbounds %"struct.GrGLAttribArrayState::AttribArrayState", %"struct.GrGLAttribArrayState::AttribArrayState"* %113, i64 %110, i32 0, i32 0
  store i32 0, i32* %114, align 4
  %115 = getelementptr inbounds %"struct.GrGLAttribArrayState::AttribArrayState", %"struct.GrGLAttribArrayState::AttribArrayState"* %113, i64 %110, i32 8
  store i32 -1, i32* %115, align 8
  %116 = getelementptr inbounds %"struct.GrGLAttribArrayState::AttribArrayState", %"struct.GrGLAttribArrayState::AttribArrayState"* %113, i64 %110, i32 1
  store i8 0, i8* %116, align 4
  br label %117

117:                                              ; preds = %112, %109, %81
  %118 = getelementptr inbounds %class.GrGLAttribArrayState, %class.GrGLAttribArrayState* %0, i64 0, i32 3
  store i8 0, i8* %118, align 1
  ret void
}

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayIN20GrGLAttribArrayState16AttribArrayStateELb1EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %66

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %66, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 40) #6
  %45 = load i64, i64* %4, align 8
  %46 = lshr i64 %45, 1
  %47 = and i64 %46, 2147483647
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %54, label %49

49:                                               ; preds = %35
  %50 = mul nuw nsw i64 %47, 40
  %51 = bitcast %class.SkTArray* %0 to i8**
  %52 = load i8*, i8** %51, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %44, i8* align 1 %52, i64 %50, i1 false) #6
  %53 = load i64, i64* %4, align 8
  br label %54

54:                                               ; preds = %35, %49
  %55 = phi i64 [ %45, %35 ], [ %53, %49 ]
  %56 = and i64 %55, 1
  %57 = icmp eq i64 %56, 0
  %58 = bitcast %class.SkTArray* %0 to i8**
  br i1 %57, label %62, label %59

59:                                               ; preds = %54
  %60 = load i8*, i8** %58, align 8
  tail call void @_Z7sk_freePv(i8* %60) #6
  %61 = load i64, i64* %4, align 8
  br label %62

62:                                               ; preds = %54, %59
  %63 = phi i64 [ %61, %59 ], [ %55, %54 ]
  store i8* %44, i8** %58, align 8
  %64 = and i64 %63, -4294967298
  %65 = or i64 %64, 1
  store i64 %65, i64* %4, align 8
  br label %66

66:                                               ; preds = %62, %32, %21
  ret void
}

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
