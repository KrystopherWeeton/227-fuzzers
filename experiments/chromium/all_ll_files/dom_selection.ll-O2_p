; ModuleID = '../../third_party/blink/renderer/core/editing/dom_selection.cc'
source_filename = "../../third_party/blink/renderer/core/editing/dom_selection.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.19" }
%"struct.std::__1::__atomic_base.19" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.674", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.674" = type { %"class.base::RefCounted.675" }
%"class.base::RefCounted.675" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.678" }
%"class.blink::HeapHashMap.678" = type { %"class.WTF::HashMap.681" }
%"class.WTF::HashMap.681" = type { %"class.WTF::HashTable.682" }
%"class.WTF::HashTable.682" = type <{ %"struct.WTF::KeyValuePair.684"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.684" = type { %"class.blink::WeakMember.685", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.685" = type { %"class.blink::MemberBase.686" }
%"class.blink::MemberBase.686" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.687", i32, [4 x i8], %"class.std::__1::unique_ptr.825", %"class.std::__1::unique_ptr.825", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque.831", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.837", %"class.std::__1::unique_ptr.843", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.855", %"class.std::__1::unique_ptr.861", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.180", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.687" = type { %"class.std::__1::__compressed_pair.688" }
%"class.std::__1::__compressed_pair.688" = type { %"struct.std::__1::__compressed_pair_elem.689" }
%"struct.std::__1::__compressed_pair_elem.689" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.690", %"class.std::__1::unique_ptr.696", %"class.std::__1::unique_ptr.702", %"class.std::__1::unique_ptr.708", %"class.std::__1::unique_ptr.714", %"class.std::__1::unique_ptr.720", %"class.std::__1::unique_ptr.731", %"class.std::__1::unique_ptr.738", %"class.std::__1::unique_ptr.738", %"class.std::__1::unique_ptr.745", %"class.std::__1::unique_ptr.752", %"class.std::__1::unique_ptr.759", %"class.std::__1::unique_ptr.759", %"class.std::__1::unique_ptr.766", %"class.std::__1::unique_ptr.773", %"class.std::__1::unique_ptr.780", %"class.std::__1::unique_ptr.805", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.690" = type { %"class.std::__1::__compressed_pair.691" }
%"class.std::__1::__compressed_pair.691" = type { %"struct.std::__1::__compressed_pair_elem.692" }
%"struct.std::__1::__compressed_pair_elem.692" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.696" = type { %"class.std::__1::__compressed_pair.697" }
%"class.std::__1::__compressed_pair.697" = type { %"struct.std::__1::__compressed_pair_elem.698" }
%"struct.std::__1::__compressed_pair_elem.698" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.702" = type { %"class.std::__1::__compressed_pair.703" }
%"class.std::__1::__compressed_pair.703" = type { %"struct.std::__1::__compressed_pair_elem.704" }
%"struct.std::__1::__compressed_pair_elem.704" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.708" = type { %"class.std::__1::__compressed_pair.709" }
%"class.std::__1::__compressed_pair.709" = type { %"struct.std::__1::__compressed_pair_elem.710" }
%"struct.std::__1::__compressed_pair_elem.710" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.714" = type { %"class.std::__1::__compressed_pair.715" }
%"class.std::__1::__compressed_pair.715" = type { %"struct.std::__1::__compressed_pair_elem.716" }
%"struct.std::__1::__compressed_pair_elem.716" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.720" = type { %"class.std::__1::__compressed_pair.721" }
%"class.std::__1::__compressed_pair.721" = type { %"struct.std::__1::__compressed_pair_elem.722" }
%"struct.std::__1::__compressed_pair_elem.722" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.723" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.723" = type { %"struct.std::__1::__atomic_base.724" }
%"struct.std::__1::__atomic_base.724" = type { %"struct.std::__1::__atomic_base.725" }
%"struct.std::__1::__atomic_base.725" = type { %"struct.std::__1::__cxx_atomic_impl.726" }
%"struct.std::__1::__cxx_atomic_impl.726" = type { %"struct.std::__1::__cxx_atomic_base_impl.727" }
%"struct.std::__1::__cxx_atomic_base_impl.727" = type { i64 }
%"class.std::__1::unique_ptr.731" = type { %"class.std::__1::__compressed_pair.732" }
%"class.std::__1::__compressed_pair.732" = type { %"struct.std::__1::__compressed_pair_elem.733" }
%"struct.std::__1::__compressed_pair_elem.733" = type { %"class.blink::Worklist.734"* }
%"class.blink::Worklist.734" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.723" }
%"class.std::__1::unique_ptr.738" = type { %"class.std::__1::__compressed_pair.739" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"class.blink::Worklist.741"* }
%"class.blink::Worklist.741" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.723" }
%"class.std::__1::unique_ptr.745" = type { %"class.std::__1::__compressed_pair.746" }
%"class.std::__1::__compressed_pair.746" = type { %"struct.std::__1::__compressed_pair_elem.747" }
%"struct.std::__1::__compressed_pair_elem.747" = type { %"class.blink::Worklist.748"* }
%"class.blink::Worklist.748" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.723" }
%"class.std::__1::unique_ptr.752" = type { %"class.std::__1::__compressed_pair.753" }
%"class.std::__1::__compressed_pair.753" = type { %"struct.std::__1::__compressed_pair_elem.754" }
%"struct.std::__1::__compressed_pair_elem.754" = type { %"class.blink::Worklist.755"* }
%"class.blink::Worklist.755" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.723" }
%"class.std::__1::unique_ptr.759" = type { %"class.std::__1::__compressed_pair.760" }
%"class.std::__1::__compressed_pair.760" = type { %"struct.std::__1::__compressed_pair_elem.761" }
%"struct.std::__1::__compressed_pair_elem.761" = type { %"class.blink::Worklist.762"* }
%"class.blink::Worklist.762" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.723" }
%"class.std::__1::unique_ptr.766" = type { %"class.std::__1::__compressed_pair.767" }
%"class.std::__1::__compressed_pair.767" = type { %"struct.std::__1::__compressed_pair_elem.768" }
%"struct.std::__1::__compressed_pair_elem.768" = type { %"class.blink::Worklist.769"* }
%"class.blink::Worklist.769" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.723" }
%"class.std::__1::unique_ptr.773" = type { %"class.std::__1::__compressed_pair.774" }
%"class.std::__1::__compressed_pair.774" = type { %"struct.std::__1::__compressed_pair_elem.775" }
%"struct.std::__1::__compressed_pair_elem.775" = type { %"class.blink::Worklist.776"* }
%"class.blink::Worklist.776" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.723" }
%"class.std::__1::unique_ptr.780" = type { %"class.std::__1::__compressed_pair.781" }
%"class.std::__1::__compressed_pair.781" = type { %"struct.std::__1::__compressed_pair_elem.782" }
%"struct.std::__1::__compressed_pair_elem.782" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.783", %"class.std::__1::__compressed_pair.791", %"class.std::__1::__compressed_pair.796", %"class.std::__1::__compressed_pair.798", [4 x i8] }>
%"class.std::__1::unique_ptr.783" = type { %"class.std::__1::__compressed_pair.784" }
%"class.std::__1::__compressed_pair.784" = type { %"struct.std::__1::__compressed_pair_elem.785", %"struct.std::__1::__compressed_pair_elem.786" }
%"struct.std::__1::__compressed_pair_elem.785" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.786" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.787" }
%"class.std::__1::__compressed_pair.787" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { i64 }
%"class.std::__1::__compressed_pair.791" = type { %"struct.std::__1::__compressed_pair_elem.792" }
%"struct.std::__1::__compressed_pair_elem.792" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.796" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"class.std::__1::__compressed_pair.798" = type { %"struct.std::__1::__compressed_pair_elem.799" }
%"struct.std::__1::__compressed_pair_elem.799" = type { float }
%"class.std::__1::unique_ptr.805" = type { %"class.std::__1::__compressed_pair.806" }
%"class.std::__1::__compressed_pair.806" = type { %"struct.std::__1::__compressed_pair_elem.807" }
%"struct.std::__1::__compressed_pair_elem.807" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.808", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.808" = type { %"class.std::__1::__compressed_pair.809" }
%"class.std::__1::__compressed_pair.809" = type { %"struct.std::__1::__compressed_pair_elem.810" }
%"struct.std::__1::__compressed_pair_elem.810" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.817" }
%"class.WTF::Vector.817" = type { %"class.WTF::VectorBuffer.818" }
%"class.WTF::VectorBuffer.818" = type { %"class.WTF::VectorBufferBase.819" }
%"class.WTF::VectorBufferBase.819" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.825" = type { %"class.std::__1::__compressed_pair.826" }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque.831" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.834" }
%"class.WTF::VectorBuffer.834" = type { %"class.WTF::VectorBufferBase.835" }
%"class.WTF::VectorBufferBase.835" = type { %"struct.std::__1::pair.836"*, i32, i32 }
%"struct.std::__1::pair.836" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.837" = type { %"class.std::__1::__compressed_pair.838" }
%"class.std::__1::__compressed_pair.838" = type { %"struct.std::__1::__compressed_pair_elem.839" }
%"struct.std::__1::__compressed_pair_elem.839" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.843" = type { %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.849" }
%"class.std::__1::unique_ptr.849" = type { %"class.std::__1::__compressed_pair.850" }
%"class.std::__1::__compressed_pair.850" = type { %"struct.std::__1::__compressed_pair_elem.851" }
%"struct.std::__1::__compressed_pair_elem.851" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.734"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.741"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.748"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.755"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.762"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1084" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1084" = type { %"struct.std::__1::__compressed_pair_elem.1085" }
%"struct.std::__1::__compressed_pair_elem.1085" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.855" = type { %"class.std::__1::__compressed_pair.856" }
%"class.std::__1::__compressed_pair.856" = type { %"struct.std::__1::__compressed_pair_elem.857" }
%"struct.std::__1::__compressed_pair_elem.857" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.861" = type { %"class.std::__1::__compressed_pair.862" }
%"class.std::__1::__compressed_pair.862" = type { %"struct.std::__1::__compressed_pair_elem.863" }
%"struct.std::__1::__compressed_pair_elem.863" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.867 }
%class.scoped_refptr.867 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.180" = type { %"struct.std::__1::__atomic_base.181" }
%"struct.std::__1::__atomic_base.181" = type { %"struct.std::__1::__cxx_atomic_impl.182" }
%"struct.std::__1::__cxx_atomic_impl.182" = type { %"struct.std::__1::__cxx_atomic_base_impl.183" }
%"struct.std::__1::__cxx_atomic_base_impl.183" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::DOMSelection" = type { %"class.blink::ScriptWrappable", %"class.blink::ExecutionContextClient", %"class.blink::Member" }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.319", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.389", i32, i8, [3 x i8], %"class.blink::HeapVector.391", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.399", %"class.blink::Member.401", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.410", %"class.blink::Member.469", %"class.blink::Member.471", i8, [7 x i8] }>
%"class.blink::Supplementable.319" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.320" }
%"class.blink::HeapHashMap.320" = type { %"class.WTF::HashMap.323" }
%"class.WTF::HashMap.323" = type { %"class.WTF::HashTable.324" }
%"class.WTF::HashTable.324" = type <{ %"struct.WTF::KeyValuePair.326"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.326" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.334" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.327" }
%"class.blink::HeapHashSet.327" = type { %"class.WTF::HashSet.330" }
%"class.WTF::HashSet.330" = type { %"class.WTF::HashTable.331" }
%"class.WTF::HashTable.331" = type <{ %"class.blink::WeakMember.333"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.333" = type opaque
%"class.blink::Supplementable.334" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.335" }
%"class.blink::HeapHashMap.335" = type { %"class.WTF::HashMap.338" }
%"class.WTF::HashMap.338" = type { %"class.WTF::HashTable.339" }
%"class.WTF::HashTable.339" = type <{ %"struct.WTF::KeyValuePair.341"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.341" = type { i8*, %"class.blink::Member.1599" }
%"class.blink::Member.1599" = type { %"class.blink::MemberBase.1600" }
%"class.blink::MemberBase.1600" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1601" }
%"class.blink::Member.1601" = type { %"class.blink::MemberBase.1602" }
%"class.blink::MemberBase.1602" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.342, %"class.std::__1::unique_ptr.351", %"class.std::__1::unique_ptr.351", %"class.std::__1::unique_ptr.378", %"class.std::__1::unique_ptr.378", %"class.blink::Member.384", i32, [4 x i8], %"class.WTF::HashSet.385", i32, i32 }
%class.scoped_refptr.342 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.343", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.345", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.350 }
%"class.WTF::RefCounted.343" = type { %"class.base::RefCounted.344" }
%"class.base::RefCounted.344" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.absl::optional.345" = type { %"class.absl::optional_internal::optional_data.346" }
%"class.absl::optional_internal::optional_data.346" = type { %"class.absl::optional_internal::optional_data_base.347" }
%"class.absl::optional_internal::optional_data_base.347" = type { %"class.absl::optional_internal::optional_data_dtor_base.348" }
%"class.absl::optional_internal::optional_data_dtor_base.348" = type { i8, %union.anon.349 }
%union.anon.349 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.350 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.351" = type { %"class.std::__1::__compressed_pair.352" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.353" }
%"struct.std::__1::__compressed_pair_elem.353" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map.354", %"class.std::__1::map.365", %"class.std::__1::map.374"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.345" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map.354" = type { %"class.std::__1::__tree.355" }
%"class.std::__1::__tree.355" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.356", %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"class.std::__1::map.365" = type { %"class.std::__1::__tree.366" }
%"class.std::__1::__tree.366" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.367", %"class.std::__1::__compressed_pair.371" }
%"class.std::__1::__compressed_pair.367" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"class.std::__1::__compressed_pair.371" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"class.std::__1::map.374" = type opaque
%"class.std::__1::unique_ptr.378" = type { %"class.std::__1::__compressed_pair.379" }
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem.380" }
%"struct.std::__1::__compressed_pair_elem.380" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.384" = type { %"class.blink::MemberBase" }
%"class.WTF::HashSet.385" = type { %"class.WTF::HashTable.386" }
%"class.WTF::HashTable.386" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.391" = type { %"class.WTF::Vector.394" }
%"class.WTF::Vector.394" = type { %"class.WTF::VectorBuffer.395" }
%"class.WTF::VectorBuffer.395" = type { %"class.WTF::VectorBufferBase.396" }
%"class.WTF::VectorBufferBase.396" = type { %"class.blink::Member.397"*, i32, i32 }
%"class.blink::Member.397" = type opaque
%"class.blink::Member.399" = type { %"class.blink::MemberBase.400" }
%"class.blink::MemberBase.400" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.401" = type { %"class.blink::MemberBase.402" }
%"class.blink::MemberBase.402" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.403", i32, i32 }
%"class.blink::HeapHashMap.403" = type { %"class.WTF::HashMap.406" }
%"class.WTF::HashMap.406" = type { %"class.WTF::HashTable.407" }
%"class.WTF::HashTable.407" = type <{ %"struct.WTF::KeyValuePair.409"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.409" = type opaque
%"class.std::__1::unique_ptr.410" = type { %"class.std::__1::__compressed_pair.411" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.412" }
%"struct.std::__1::__compressed_pair_elem.412" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.413" }
%"class.std::__1::unique_ptr.413" = type { %"class.std::__1::__compressed_pair.414" }
%"class.std::__1::__compressed_pair.414" = type { %"struct.std::__1::__compressed_pair_elem.415" }
%"struct.std::__1::__compressed_pair_elem.415" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.416" }
%"class.WTF::Vector.416" = type { %"class.WTF::VectorBuffer.417" }
%"class.WTF::VectorBuffer.417" = type { %"class.WTF::VectorBufferBase.418" }
%"class.WTF::VectorBufferBase.418" = type { %"class.mojo::StructPtr.419"*, i32, i32 }
%"class.mojo::StructPtr.419" = type { %"class.std::__1::unique_ptr.420" }
%"class.std::__1::unique_ptr.420" = type { %"class.std::__1::__compressed_pair.421" }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.422" }
%"struct.std::__1::__compressed_pair_elem.422" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.423", %"class.WTF::HashMap.430", %"class.WTF::HashMap.435", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.440", i32, %"class.mojo::StructPtr.445", %"class.WTF::Vector.440" }
%"class.mojo::StructPtr.423" = type { %"class.std::__1::unique_ptr.424" }
%"class.std::__1::unique_ptr.424" = type { %"class.std::__1::__compressed_pair.425" }
%"class.std::__1::__compressed_pair.425" = type { %"struct.std::__1::__compressed_pair_elem.426" }
%"struct.std::__1::__compressed_pair_elem.426" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.430" = type { %"class.WTF::HashTable.431" }
%"class.WTF::HashTable.431" = type <{ %"struct.WTF::KeyValuePair.434"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.434" = type opaque
%"class.WTF::HashMap.435" = type { %"class.WTF::HashTable.436" }
%"class.WTF::HashTable.436" = type <{ %"struct.WTF::KeyValuePair.439"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.439" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.445" = type { %"class.std::__1::unique_ptr.446" }
%"class.std::__1::unique_ptr.446" = type { %"class.std::__1::__compressed_pair.447" }
%"class.std::__1::__compressed_pair.447" = type { %"struct.std::__1::__compressed_pair_elem.448" }
%"struct.std::__1::__compressed_pair_elem.448" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.440", i8, i8, [6 x i8] }>
%"class.WTF::Vector.440" = type { %"class.WTF::VectorBuffer.441" }
%"class.WTF::VectorBuffer.441" = type { %"class.WTF::VectorBufferBase.442" }
%"class.WTF::VectorBufferBase.442" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.460" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.261", i32 }>
%"class.std::__1::unique_ptr.261" = type { %"class.std::__1::__compressed_pair.262" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.264", %"class.base::OnceCallback.265", %"class.absl::optional.266", %"class.absl::optional.271", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.278", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.286", %"class.std::__1::map.297", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.306", i8, %class.scoped_refptr.145, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.307" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback.264" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.107 }
%class.scoped_refptr.107 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.108" }
%"struct.std::__1::atomic.108" = type { %"struct.std::__1::__atomic_base.109" }
%"struct.std::__1::__atomic_base.109" = type { %"struct.std::__1::__atomic_base.110" }
%"struct.std::__1::__atomic_base.110" = type { %"struct.std::__1::__cxx_atomic_impl.111" }
%"struct.std::__1::__cxx_atomic_impl.111" = type { %"struct.std::__1::__cxx_atomic_base_impl.112" }
%"struct.std::__1::__cxx_atomic_base_impl.112" = type { i32 }
%"class.base::OnceCallback.265" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.266" = type { %"class.absl::optional_internal::optional_data.267" }
%"class.absl::optional_internal::optional_data.267" = type { %"class.absl::optional_internal::optional_data_base.268" }
%"class.absl::optional_internal::optional_data_base.268" = type { %"class.absl::optional_internal::optional_data_dtor_base.269" }
%"class.absl::optional_internal::optional_data_dtor_base.269" = type { i8, %union.anon.270 }
%union.anon.270 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.271" = type { %"class.absl::optional_internal::optional_data.272" }
%"class.absl::optional_internal::optional_data.272" = type { %"class.absl::optional_internal::optional_data_base.273" }
%"class.absl::optional_internal::optional_data_base.273" = type { %"class.absl::optional_internal::optional_data_dtor_base.274" }
%"class.absl::optional_internal::optional_data_dtor_base.274" = type { i8, %union.anon.275 }
%union.anon.275 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.145, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.276" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.276" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.162 }
%class.scoped_refptr.162 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.163", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.163" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.164" }
%"struct.std::__1::atomic.164" = type { %"struct.std::__1::__atomic_base.165" }
%"struct.std::__1::__atomic_base.165" = type { %"struct.std::__1::__atomic_base.166" }
%"struct.std::__1::__atomic_base.166" = type { %"struct.std::__1::__cxx_atomic_impl.167" }
%"struct.std::__1::__cxx_atomic_impl.167" = type { %"struct.std::__1::__cxx_atomic_base_impl.168" }
%"struct.std::__1::__cxx_atomic_base_impl.168" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.220 }
%class.scoped_refptr.220 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1563", [4 x i8], %"class.base::RepeatingCallback.264", %class.scoped_refptr.145, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1563" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.277 }
%class.scoped_refptr.277 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.278" = type { %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.281", %class.scoped_refptr.282 }
%"class.base::RepeatingCallback.281" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.282 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.144", [4 x i8] }>
%"class.base::RefCountedThreadSafe.144" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.150", %"class.std::__1::unique_ptr.156", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.286" = type { %"class.std::__1::__tree.287" }
%"class.std::__1::__tree.287" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.288", %"class.std::__1::__compressed_pair.292" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"class.std::__1::map.297" = type { %"class.std::__1::__tree.298" }
%"class.std::__1::__tree.298" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.299", %"class.std::__1::__compressed_pair.303" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.306" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.145 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.146" }>
%"class.base::RefCountedThreadSafe.146" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.307" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.460" = type { %"class.std::__1::__compressed_pair.461" }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.462" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.469" = type { %"class.blink::MemberBase.470" }
%"class.blink::MemberBase.470" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.471" = type { %"class.blink::MemberBase.472" }
%"class.blink::MemberBase.472" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member" = type { %"class.blink::MemberBase.0" }
%"class.blink::MemberBase.0" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1", %"class.blink::Member.11", %"class.blink::Member.5", %"class.blink::Member.13", %"class.blink::Member.13", %"class.blink::Member.45", %"class.blink::Member.47", %"class.blink::Member.49", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.54", %"class.blink::HeapVector.56" }
%"class.blink::Member.1" = type { %"class.blink::MemberBase.2" }
%"class.blink::MemberBase.2" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.3", %"class.blink::Member.3" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.3", %"class.blink::Member.5", %"class.blink::Member.3", %"class.blink::Member.3", %"class.blink::Member.7" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.7" = type { %"class.blink::MemberBase.8" }
%"class.blink::MemberBase.8" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.3" = type { %"class.blink::MemberBase.4" }
%"class.blink::MemberBase.4" = type { %"class.blink::Node"* }
%"class.blink::Member.11" = type { %"class.blink::MemberBase.12" }
%"class.blink::MemberBase.12" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.104", %"class.WTF::Vector.104", i8, i32, %"class.blink::Member.115", %"class.blink::Member.384", %"class.blink::Member.645", %"class.blink::Member.647", %"class.blink::Member.649", %"class.blink::Member.651", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.659", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.665", %"class.blink::Member.667", %"class.blink::Member.62", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.670", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.24", %"class.blink::Member.621", %"class.blink::Member.24", %"class.blink::Member.24", %"class.blink::Member.24", %"class.blink::UserActionElementSet", %"class.blink::Member.880", double, double, i64, i64, %"class.blink::HeapHashSet.882", %"class.blink::HeapHashSet.889", i16, i8, %"class.blink::Member.896", %"class.blink::Member.898", %"class.blink::Member.900", %"class.blink::Member.902", %"class.blink::TextLinkColors", %"class.blink::Member.904", i8, [7 x i8], %"class.blink::HeapHashMap.906", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.24", %"class.WTF::Vector.913", %"class.blink::Member.918", %"class.blink::Member.920", i8, %"class.blink::Member.24", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.922", %"class.blink::HeapVector.924", %"class.std::__1::unique_ptr.932", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.938", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.951", %"class.WTF::Vector.953", i8, i8, %"class.std::__1::unique_ptr.958", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.964", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.972", i8, i32, %"class.blink::Member.974", %"class.blink::Member.976", %"class.blink::Member.978", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.980", %"class.WTF::HashMap.982", %"class.blink::Member.987", %"class.blink::Member.989", %"class.blink::Member.991", %"class.blink::Member.993", %"class.blink::Member.11", %"class.blink::Member.11", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.995", i8, i32, %"class.blink::Member.1002", %"class.blink::Member.1004", i32, %"class.blink::Member.1006", %"class.blink::Member.1008", %"class.blink::Member.1010", %"class.std::__1::unique_ptr.1012", i64, %"class.std::__1::unique_ptr.1018", i32, i32, %"class.blink::Member.1024", %"class.blink::Member.1026", %"class.blink::Member.1028", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1030", %"class.WTF::Vector.632", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1032", %"class.blink::Member.1039", %"class.std::__1::unique_ptr.1041", %"class.blink::Member.1047", i8, i8, %"class.WTF::String", %"class.blink::Member.1049", i8, [7 x i8], %"class.blink::HeapHashMap.1051", %"class.blink::HeapObserverSet.1058", %"class.blink::Member.1066", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1068", i32, i8, i8, %"class.blink::WeakMember.1070", %"class.blink::Member.1071" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.97" }
%"class.blink::HeapHashMap.97" = type { %"class.WTF::HashMap.100" }
%"class.WTF::HashMap.100" = type { %"class.WTF::HashTable.101" }
%"class.WTF::HashTable.101" = type <{ %"struct.WTF::KeyValuePair.103"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.103" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.104" = type { %"class.WTF::VectorBuffer.105" }
%"class.WTF::VectorBuffer.105" = type { %"class.WTF::VectorBufferBase.106" }
%"class.WTF::VectorBufferBase.106" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.blink::Member.115" = type { %"class.blink::MemberBase.116" }
%"class.blink::MemberBase.116" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type { %"class.blink::DOMWindow", %"class.blink::ExecutionContext.base", %"class.blink::Supplementable.473", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.481", %"class.blink::Member.11", %"class.blink::Member.483", i8, %"class.blink::Member.485", %"class.blink::Member.487", %"class.blink::Member.489", %"class.blink::Member.489", %"class.blink::Member.489", %"class.blink::Member.489", %"class.blink::Member.489", %"class.blink::Member.489", %"class.blink::Member.491", %"class.blink::Member.493", %"class.blink::Member.495", %"class.blink::Member.497", %"class.blink::Member.499", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.440", %"class.blink::Member.501", %class.scoped_refptr.503, %"class.blink::HeapHashSet.565", %"class.blink::Member.572", %"class.blink::HeapHashMap.585", %"class.std::__1::unique_ptr.592", %"class.blink::Member.604", %"class.blink::Member.625", %"class.blink::Member.627", %"class.blink::Member.629", %"class.WTF::Vector.632", %"class.util::TokenType", %"class.WTF::HashSet.637", %"class.WTF::Deque" }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.132", %"class.blink::Member.134", %"class.blink::Member.136", %"class.blink::Member.138", i8, %"class.WTF::Vector.140" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.119" }
%"class.blink::HeapVector.119" = type { %"class.WTF::Vector.122" }
%"class.WTF::Vector.122" = type { %"class.WTF::VectorBuffer.123" }
%"class.WTF::VectorBuffer.123" = type { %"class.WTF::VectorBufferBase.124", [32 x i8] }
%"class.WTF::VectorBufferBase.124" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::AtomicString", %"class.blink::Member.125" }
%"class.blink::Member.125" = type { %"class.blink::MemberBase.126" }
%"class.blink::MemberBase.126" = type { %"class.blink::HeapVector.127"* }
%"class.blink::HeapVector.127" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.WTF::Vector.130"* }
%"class.WTF::Vector.130" = type opaque
%"class.blink::Member.132" = type { %"class.blink::MemberBase.133" }
%"class.blink::MemberBase.133" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.1101", %"class.blink::Member.1103", %"class.blink::Member.1105", i8, i32, i8, i32, %"class.blink::Member.1107", %"class.blink::Member.134", %"class.blink::FrameLifecycle", %"class.blink::Member.132", %"class.blink::Member.132", %"class.blink::Member.132", %"class.blink::Member.132", %"class.blink::Member.132", %"class.blink::Member.132", %"class.blink::Member.610", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.1117", i8, %"class.base::UnguessableToken", %"class.absl::optional.1119", %"class.absl::optional.1124", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.132", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1101" = type { %"class.blink::MemberBase.1102" }
%"class.blink::MemberBase.1102" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.1103" = type { %"class.blink::MemberBase.1104" }
%"class.blink::MemberBase.1104" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.1105" = type { %"class.blink::MemberBase.1106" }
%"class.blink::MemberBase.1106" = type { %"class.blink::DOMWindow"* }
%"class.blink::Member.1107" = type { %"class.blink::MemberBase.1108" }
%"class.blink::MemberBase.1108" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.610" = type { %"class.blink::MemberBase.611" }
%"class.blink::MemberBase.611" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.1136", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.1144", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.1152", %"class.blink::FrameLoader", %"class.blink::Member.1173", %"class.blink::Member.24", %"class.blink::Member.1175", %"class.blink::Member.1177", %"class.blink::Member.1193", %"class.blink::Member.1195", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.1197", %class.scoped_refptr.1199, %"class.blink::Member.1200", %"class.blink::Member.1202", %"class.blink::Member.1204", %"class.blink::Member.1206", %"class.blink::Member.1208", %"class.blink::Member.1210", %"class.blink::Member.1212", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote.1214", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.1217", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.1223", %"class.std::__1::unique_ptr.1224", %"class.absl::optional.1124", i32, [4 x i8], %"class.std::__1::unique_ptr.1230", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.1238", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.1243", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.1248", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.1251", %"class.blink::Member.1253", %"class.blink::Member.1255", %"class.blink::Member.1257", %"class.mojo::StructPtr.1260", %"class.blink::Member.1269", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.1271", i8, [7 x i8] }>
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.1136" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1137" }
%"class.blink::HeapHashMap.1137" = type { %"class.WTF::HashMap.1140" }
%"class.WTF::HashMap.1140" = type { %"class.WTF::HashTable.1141" }
%"class.WTF::HashTable.1141" = type <{ %"struct.WTF::KeyValuePair.1143"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1143" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1144" = type { %"class.std::__1::__compressed_pair.1145" }
%"class.std::__1::__compressed_pair.1145" = type { %"struct.std::__1::__compressed_pair_elem.1146" }
%"struct.std::__1::__compressed_pair_elem.1146" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.595", %"class.base::WeakPtrFactory.600" }
%"class.WTF::HashMap.595" = type { %"class.WTF::HashTable.596" }
%"class.WTF::HashTable.596" = type <{ %"struct.WTF::KeyValuePair.599"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.599" = type opaque
%"class.base::WeakPtrFactory.600" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.1150" }
%"class.blink::Member.1150" = type { %"class.blink::MemberBase.1151" }
%"class.blink::MemberBase.1151" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.608" }
%"class.blink::WeakMember.608" = type { %"class.blink::MemberBase.609" }
%"class.blink::MemberBase.609" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback.264", %"class.base::RepeatingCallback.1611", i64, %"class.std::__1::map.1612", i8*, i64, %"class.base::WeakPtrFactory.1621" }
%"class.base::RepeatingCallback.1611" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.1612" = type { %"class.std::__1::__tree.1613" }
%"class.std::__1::__tree.1613" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1614", %"class.std::__1::__compressed_pair.1618" }
%"class.std::__1::__compressed_pair.1614" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"class.std::__1::__compressed_pair.1618" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"class.base::WeakPtrFactory.1621" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.1152" = type { %"class.WTF::HashSet.1155" }
%"class.WTF::HashSet.1155" = type { %"class.WTF::HashTable.1156" }
%"class.WTF::HashTable.1156" = type <{ %"class.blink::WeakMember.1158"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1158" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.610", %"class.blink::Member.1159", %"class.blink::Member.1161", %"class.std::__1::unique_ptr.1163", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.1169" }
%"class.blink::Member.1159" = type { %"class.blink::MemberBase.1160" }
%"class.blink::MemberBase.1160" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.1161" = type { %"class.blink::MemberBase.1162" }
%"class.blink::MemberBase.1162" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.1163" = type { %"class.std::__1::__compressed_pair.1164" }
%"class.std::__1::__compressed_pair.1164" = type { %"struct.std::__1::__compressed_pair_elem.1165" }
%"struct.std::__1::__compressed_pair_elem.1165" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.WTF::HashSet.1169" = type { %"class.WTF::HashTable.1170" }
%"class.WTF::HashTable.1170" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1173" = type { %"class.blink::MemberBase.1174" }
%"class.blink::MemberBase.1174" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1278", %"class.blink::Member.610", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1283", i8, i32, %"class.blink::Color", %"class.absl::optional.1285", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1290", %"class.blink::Member.1292", %"class.blink::Member.1292", %"class.std::__1::unique_ptr.1295", i32, [4 x i8], %"class.WTF::HashSet.1298", %"class.blink::Member.1305", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1307", %"class.blink::HeapHashSet.1314", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1322", i8, %"class.blink::Member.1328", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1340", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1354", i8, %"class.std::__1::unique_ptr.1360", %"class.std::__1::unique_ptr.1477", %"class.WTF::Vector.1483", i32, %class.scoped_refptr.1488, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1489", %"class.blink::Member.1491", %"class.blink::Member.1493", %"class.blink::HeapHashSet.1495", %"class.blink::HeapHashSet.1502", %"class.std::__1::unique_ptr.1509", %"class.std::__1::unique_ptr.1516", %"class.WTF::Vector.104" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.1278" = type { %"class.WTF::HashTable.1279" }
%"class.WTF::HashTable.1279" = type <{ %class.scoped_refptr.1282*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1282 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1283" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1284", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.870, %"class.base::WeakPtrFactory.871" }
%class.scoped_refptr.870 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory.871" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.1284" = type { %"class.blink::MemberBase.1174" }
%"class.blink::Color" = type { i32 }
%"class.absl::optional.1285" = type { %"class.absl::optional_internal::optional_data.1286" }
%"class.absl::optional_internal::optional_data.1286" = type { %"class.absl::optional_internal::optional_data_base.1287" }
%"class.absl::optional_internal::optional_data_base.1287" = type { %"class.absl::optional_internal::optional_data_dtor_base.1288" }
%"class.absl::optional_internal::optional_data_dtor_base.1288" = type { i8, %union.anon.1289 }
%union.anon.1289 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1290" = type { %"class.blink::MemberBase.1291" }
%"class.blink::MemberBase.1291" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1292" = type { %"class.blink::MemberBase.1293" }
%"class.blink::MemberBase.1293" = type { %"class.blink::HeapHashSet.1294"* }
%"class.blink::HeapHashSet.1294" = type opaque
%"class.std::__1::unique_ptr.1295" = type { %"class.std::__1::__compressed_pair.1296" }
%"class.std::__1::__compressed_pair.1296" = type { %"struct.std::__1::__compressed_pair_elem.1297" }
%"struct.std::__1::__compressed_pair_elem.1297" = type { %"class.WTF::HashSet.1298"* }
%"class.WTF::HashSet.1298" = type { %"class.WTF::HashTable.1299" }
%"class.WTF::HashTable.1299" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.1305" = type { %"class.blink::MemberBase.1306" }
%"class.blink::MemberBase.1306" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1307" = type { %"class.WTF::HashSet.1310" }
%"class.WTF::HashSet.1310" = type { %"class.WTF::HashTable.1311" }
%"class.WTF::HashTable.1311" = type <{ %"class.blink::Member.1313"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1313" = type opaque
%"class.blink::HeapHashSet.1314" = type { %"class.WTF::HashSet.1317" }
%"class.WTF::HashSet.1317" = type { %"class.WTF::HashTable.1318" }
%"class.WTF::HashTable.1318" = type <{ %"class.blink::Member.1320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1550", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1561", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.24" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::Member.1550" = type { %"class.blink::MemberBase.1551" }
%"class.blink::MemberBase.1551" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.1552", %"class.blink::Member.1553", %"class.blink::Member.1555", %"class.blink::Member.1557", %"class.blink::Member.1559", %"class.WTF::Vector.104", i16, %class.scoped_refptr.870 }
%"class.blink::ThreadState::PrefinalizerRegistration.1552" = type { i8 }
%"class.blink::Member.1553" = type { %"class.blink::MemberBase.1554" }
%"class.blink::MemberBase.1554" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.1555" = type { %"class.blink::MemberBase.1556" }
%"class.blink::MemberBase.1556" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.1557" = type { %"class.blink::MemberBase.1558" }
%"class.blink::MemberBase.1558" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.1559" = type { %"class.blink::MemberBase.1560" }
%"class.blink::MemberBase.1560" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type opaque
%"class.blink::HeapTaskRunnerTimer.1561" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1562", { i64, i64 } }
%"class.blink::WeakMember.1562" = type { %"class.blink::MemberBase.1321" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1322" = type { %"class.std::__1::__compressed_pair.1323" }
%"class.std::__1::__compressed_pair.1323" = type { %"struct.std::__1::__compressed_pair_elem.1324" }
%"struct.std::__1::__compressed_pair_elem.1324" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1328" = type { %"class.blink::MemberBase.1329" }
%"class.blink::MemberBase.1329" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1332", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1332" = type { %"class.WTF::HashTable.1333" }
%"class.WTF::HashTable.1333" = type <{ %"struct.WTF::KeyValuePair.1335"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1335" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1336", i32, i32 }
%"class.WTF::Vector.1336" = type { %"class.WTF::VectorBuffer.1337" }
%"class.WTF::VectorBuffer.1337" = type { %"class.WTF::VectorBufferBase.1338" }
%"class.WTF::VectorBufferBase.1338" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1340" = type { %"class.WTF::LinkedHashSet.1343" }
%"class.WTF::LinkedHashSet.1343" = type { %"class.WTF::HashMap.1344", %"class.WTF::VectorBackedLinkedList.1348" }
%"class.WTF::HashMap.1344" = type { %"class.WTF::HashTable.1345" }
%"class.WTF::HashTable.1345" = type <{ %"struct.WTF::KeyValuePair.1347"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1347" = type opaque
%"class.WTF::VectorBackedLinkedList.1348" = type { %"class.WTF::Vector.1349", i32, i32 }
%"class.WTF::Vector.1349" = type { %"class.WTF::VectorBuffer.1350" }
%"class.WTF::VectorBuffer.1350" = type { %"class.WTF::VectorBufferBase.1351" }
%"class.WTF::VectorBufferBase.1351" = type { %"class.WTF::VectorBackedLinkedListNode.1352"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1352" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1354" = type { %"class.std::__1::__compressed_pair.1355" }
%"class.std::__1::__compressed_pair.1355" = type { %"struct.std::__1::__compressed_pair_elem.1356" }
%"struct.std::__1::__compressed_pair_elem.1356" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1360" = type { %"class.std::__1::__compressed_pair.1361" }
%"class.std::__1::__compressed_pair.1361" = type { %"struct.std::__1::__compressed_pair_elem.1362" }
%"struct.std::__1::__compressed_pair_elem.1362" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1363, %class.scoped_refptr.1363, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1454", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1459", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1363 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1364", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1371" }
%"class.WTF::RefCounted.1364" = type { %"class.base::RefCounted.1365" }
%"class.base::RefCounted.1365" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1366", i32, [4 x i8] }>
%"class.WTF::Vector.1366" = type { %"class.WTF::VectorBuffer.1367" }
%"class.WTF::VectorBuffer.1367" = type { %"class.WTF::VectorBufferBase.1368" }
%"class.WTF::VectorBufferBase.1368" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1371" = type { %"class.WTF::VectorBuffer.1372" }
%"class.WTF::VectorBuffer.1372" = type { %"class.WTF::VectorBufferBase.1373" }
%"class.WTF::VectorBufferBase.1373" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1377", %"class.std::__1::unique_ptr.1426", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1374, %class.scoped_refptr.1375, %class.scoped_refptr.1376 }
%class.scoped_refptr.1374 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1390", i8, i8, %class.scoped_refptr.1374, i32, i32 }
%"class.WTF::RefCounted.1390" = type { %"class.base::RefCounted.1391" }
%"class.base::RefCounted.1391" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1375 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1545" }
%"class.blink::PaintPropertyNode.1545" = type { %"class.WTF::RefCounted.1546", i8, i8, %class.scoped_refptr.1375, i32, i32 }
%"class.WTF::RefCounted.1546" = type { %"class.base::RefCounted.1547" }
%"class.base::RefCounted.1547" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1376 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1542" }
%"class.blink::PaintPropertyNode.1542" = type { %"class.WTF::RefCounted.1543", i8, i8, %class.scoped_refptr.1376, i32, i32 }
%"class.WTF::RefCounted.1543" = type { %"class.base::RefCounted.1544" }
%"class.base::RefCounted.1544" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1377" = type { %"class.std::__1::__compressed_pair.1378" }
%"class.std::__1::__compressed_pair.1378" = type { %"struct.std::__1::__compressed_pair_elem.1379" }
%"struct.std::__1::__compressed_pair_elem.1379" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1380", %"class.WTF::Vector.1385", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1380" = type { %"class.WTF::VectorBuffer.1381" }
%"class.WTF::VectorBuffer.1381" = type { %"class.WTF::VectorBufferBase.1382" }
%"class.WTF::VectorBufferBase.1382" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1385" = type { %"class.WTF::VectorBuffer.1386" }
%"class.WTF::VectorBuffer.1386" = type { %"class.WTF::VectorBufferBase.1387" }
%"class.WTF::VectorBufferBase.1387" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1405" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1398, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1399", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1392" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.1392" = type { %"class.std::__1::__compressed_pair.1393" }
%"class.std::__1::__compressed_pair.1393" = type { %"struct.std::__1::__compressed_pair_elem.1394" }
%"struct.std::__1::__compressed_pair_elem.1394" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1398 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1527", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1527" = type { %"class.WTF::RefCounted.1528", i8, i8, %class.scoped_refptr.1398, i32, i32 }
%"class.WTF::RefCounted.1528" = type { %"class.base::RefCounted.1529" }
%"class.base::RefCounted.1529" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1530" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1530" = type { %"class.absl::optional_internal::optional_data.1531" }
%"class.absl::optional_internal::optional_data.1531" = type { %"class.absl::optional_internal::optional_data_base.1532" }
%"class.absl::optional_internal::optional_data_base.1532" = type { %"class.absl::optional_internal::optional_data_dtor_base.1533" }
%"class.absl::optional_internal::optional_data_dtor_base.1533" = type { i8, %union.anon.1534 }
%union.anon.1534 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1535", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1535" = type { %"class.std::__1::__vector_base.1536" }
%"class.std::__1::__vector_base.1536" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1537" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1537" = type { %"struct.std::__1::__compressed_pair_elem.1538" }
%"struct.std::__1::__compressed_pair_elem.1538" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1399" = type { %"class.std::__1::__compressed_pair.1400" }
%"class.std::__1::__compressed_pair.1400" = type { %"struct.std::__1::__compressed_pair_elem.1401" }
%"struct.std::__1::__compressed_pair_elem.1401" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1405" = type { %"class.std::__1::__compressed_pair.1406" }
%"class.std::__1::__compressed_pair.1406" = type { %"struct.std::__1::__compressed_pair_elem.1407" }
%"struct.std::__1::__compressed_pair_elem.1407" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1408", %"class.std::__1::unique_ptr.1414", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1408" = type { %"class.std::__1::__compressed_pair.1409" }
%"class.std::__1::__compressed_pair.1409" = type { %"struct.std::__1::__compressed_pair_elem.1410" }
%"struct.std::__1::__compressed_pair_elem.1410" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1414" = type { %"class.std::__1::__compressed_pair.1415" }
%"class.std::__1::__compressed_pair.1415" = type { %"struct.std::__1::__compressed_pair_elem.1416" }
%"struct.std::__1::__compressed_pair_elem.1416" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1426" = type { %"class.std::__1::__compressed_pair.1427" }
%"class.std::__1::__compressed_pair.1427" = type { %"struct.std::__1::__compressed_pair_elem.1428" }
%"struct.std::__1::__compressed_pair_elem.1428" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1429", %"class.absl::optional.1429" }
%"class.absl::optional.1429" = type { %"class.absl::optional_internal::optional_data.1430" }
%"class.absl::optional_internal::optional_data.1430" = type { %"class.absl::optional_internal::optional_data_base.1431" }
%"class.absl::optional_internal::optional_data_base.1431" = type { %"class.absl::optional_internal::optional_data_dtor_base.1432" }
%"class.absl::optional_internal::optional_data_dtor_base.1432" = type { i8, [3 x i8], %union.anon.1433 }
%union.anon.1433 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1371"*, %"class.absl::optional.1439", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1439" = type { %"class.absl::optional_internal::optional_data.1440" }
%"class.absl::optional_internal::optional_data.1440" = type { %"class.absl::optional_internal::optional_data_base.1441" }
%"class.absl::optional_internal::optional_data_base.1441" = type { %"class.absl::optional_internal::optional_data_dtor_base.1442" }
%"class.absl::optional_internal::optional_data_dtor_base.1442" = type { i8, %union.anon.1443 }
%union.anon.1443 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1444", %"class.WTF::Vector.1449" }
%"class.WTF::Vector.1444" = type { %"class.WTF::VectorBuffer.1445" }
%"class.WTF::VectorBuffer.1445" = type { %"class.WTF::VectorBufferBase.1446", [128 x i8] }
%"class.WTF::VectorBufferBase.1446" = type { i32*, i32, i32 }
%"class.WTF::Vector.1449" = type { %"class.WTF::VectorBuffer.1450" }
%"class.WTF::VectorBuffer.1450" = type { %"class.WTF::VectorBufferBase.1451", [128 x i8] }
%"class.WTF::VectorBufferBase.1451" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1454" = type { %"class.WTF::VectorBuffer.1455" }
%"class.WTF::VectorBuffer.1455" = type { %"class.WTF::VectorBufferBase.1456" }
%"class.WTF::VectorBufferBase.1456" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1459" = type { %"class.WTF::HashTable.1460" }
%"class.WTF::HashTable.1460" = type <{ %"struct.WTF::KeyValuePair.1463"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1463" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1464", %"class.WTF::Vector.1469" }
%"class.WTF::HashMap.1464" = type { %"class.WTF::HashTable.1465" }
%"class.WTF::HashTable.1465" = type <{ %"struct.WTF::KeyValuePair.1468"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1468" = type opaque
%"class.WTF::Vector.1469" = type { %"class.WTF::VectorBuffer.1470" }
%"class.WTF::VectorBuffer.1470" = type { %"class.WTF::VectorBufferBase.1471" }
%"class.WTF::VectorBufferBase.1471" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1477" = type { %"class.std::__1::__compressed_pair.1478" }
%"class.std::__1::__compressed_pair.1478" = type { %"struct.std::__1::__compressed_pair_elem.1479" }
%"struct.std::__1::__compressed_pair_elem.1479" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1483" = type { %"class.WTF::VectorBuffer.1484" }
%"class.WTF::VectorBuffer.1484" = type { %"class.WTF::VectorBufferBase.1485" }
%"class.WTF::VectorBufferBase.1485" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1488 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1489" = type { %"class.blink::MemberBase.1490" }
%"class.blink::MemberBase.1490" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1491" = type { %"class.blink::MemberBase.1492" }
%"class.blink::MemberBase.1492" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1493" = type { %"class.blink::MemberBase.1494" }
%"class.blink::MemberBase.1494" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1495" = type { %"class.WTF::HashSet.1498" }
%"class.WTF::HashSet.1498" = type { %"class.WTF::HashTable.1499" }
%"class.WTF::HashTable.1499" = type <{ %"class.blink::WeakMember.1501"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1501" = type opaque
%"class.blink::HeapHashSet.1502" = type { %"class.WTF::HashSet.1505" }
%"class.WTF::HashSet.1505" = type { %"class.WTF::HashTable.1506" }
%"class.WTF::HashTable.1506" = type <{ %"class.blink::WeakMember.1508"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1508" = type opaque
%"class.std::__1::unique_ptr.1509" = type { %"class.std::__1::__compressed_pair.1510" }
%"class.std::__1::__compressed_pair.1510" = type { %"struct.std::__1::__compressed_pair_elem.1511" }
%"struct.std::__1::__compressed_pair_elem.1511" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1512" }
%"class.base::time_internal::TimeBase.1512" = type { i64 }
%"class.std::__1::unique_ptr.1516" = type { %"class.std::__1::__compressed_pair.1517" }
%"class.std::__1::__compressed_pair.1517" = type { %"struct.std::__1::__compressed_pair_elem.1518" }
%"struct.std::__1::__compressed_pair_elem.1518" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1519", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.1519" = type { %"class.absl::optional_internal::optional_data.1520" }
%"class.absl::optional_internal::optional_data.1520" = type { %"class.absl::optional_internal::optional_data_base.1521" }
%"class.absl::optional_internal::optional_data_base.1521" = type { %"class.absl::optional_internal::optional_data_dtor_base.1522" }
%"class.absl::optional_internal::optional_data_dtor_base.1522" = type { i8, %union.anon.1523 }
%union.anon.1523 = type { %"class.base::Time" }
%"class.blink::Member.1175" = type { %"class.blink::MemberBase.1176" }
%"class.blink::MemberBase.1176" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.1177" = type { %"class.blink::MemberBase.1178" }
%"class.blink::MemberBase.1178" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type { %"class.blink::SynchronousMutationObserver", %"class.blink::Member.610", %"class.blink::Member.1181", %"class.blink::Member.1183", i32, %"class.blink::LayoutUnit", i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.1185", %"class.blink::Member.1191" }
%"class.blink::SynchronousMutationObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.872" }
%"class.blink::WeakMember.872" = type { %"class.blink::MemberBase.12" }
%"class.blink::Member.1181" = type { %"class.blink::MemberBase.1182" }
%"class.blink::MemberBase.1182" = type { %"class.blink::LayoutSelection"* }
%"class.blink::LayoutSelection" = type opaque
%"class.blink::Member.1183" = type { %"class.blink::MemberBase.1184" }
%"class.blink::MemberBase.1184" = type { %"class.blink::SelectionEditor"* }
%"class.blink::SelectionEditor" = type opaque
%"class.std::__1::unique_ptr.1185" = type { %"class.std::__1::__compressed_pair.1186" }
%"class.std::__1::__compressed_pair.1186" = type { %"struct.std::__1::__compressed_pair_elem.1187" }
%"struct.std::__1::__compressed_pair_elem.1187" = type { %"class.blink::GranularityStrategy"* }
%"class.blink::GranularityStrategy" = type opaque
%"class.blink::Member.1191" = type { %"class.blink::MemberBase.1192" }
%"class.blink::MemberBase.1192" = type { %"class.blink::FrameCaret"* }
%"class.blink::FrameCaret" = type opaque
%"class.blink::Member.1193" = type { %"class.blink::MemberBase.1194" }
%"class.blink::MemberBase.1194" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.1195" = type { %"class.blink::MemberBase.1196" }
%"class.blink::MemberBase.1196" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.1198" }
%"class.blink::MemberBase.1198" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type opaque
%class.scoped_refptr.1199 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.1200" = type { %"class.blink::MemberBase.1201" }
%"class.blink::MemberBase.1201" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.1202" = type { %"class.blink::MemberBase.1203" }
%"class.blink::MemberBase.1203" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.1204" = type { %"class.blink::MemberBase.1205" }
%"class.blink::MemberBase.1205" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.1206" = type { %"class.blink::MemberBase.1207" }
%"class.blink::MemberBase.1207" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.1208" = type { %"class.blink::MemberBase.1209" }
%"class.blink::MemberBase.1209" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::Member.1210" = type { %"class.blink::MemberBase.1211" }
%"class.blink::MemberBase.1211" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.1212" = type { %"class.blink::MemberBase.1213" }
%"class.blink::MemberBase.1213" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote.1214" = type { %"class.blink::Member.1215" }
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.1624" }
%"class.mojo::Remote.1624" = type { %"class.mojo::internal::InterfacePtrState.1625" }
%"class.mojo::internal::InterfacePtrState.1625" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1626" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.143, %"class.std::__1::unique_ptr.261", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.145, i32 }>
%class.scoped_refptr.143 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.145, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.223", %"class.absl::optional.228", %"class.absl::optional.184", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.252", i8, [7 x i8], %class.scoped_refptr.145, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.144" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.145, %"class.std::__1::unique_ptr.169", %"class.absl::optional", %"struct.std::__1::atomic.180", i8, i8, i8, i8, i32, i32, %"class.absl::optional.184", %"class.std::__1::unique_ptr.189", i8, i64, %class.scoped_refptr.219, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.222" }
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.145, i8, %"class.mojo::ScopedHandleBase.172", %class.scoped_refptr.173, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.174" }
%"class.mojo::ScopedHandleBase.172" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.173 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.174" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.178 }
%union.anon.178 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.179", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.179" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.189" = type { %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.192", i8, i64, %class.scoped_refptr.193, %class.scoped_refptr.215 }
%"class.base::RepeatingCallback.192" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.193 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.194", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.204", i8, [7 x i8] }>
%"class.base::RefCounted.194" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.195 }
%class.scoped_refptr.195 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.196", %"class.std::__1::__compressed_pair.201" }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"class.std::__1::map.204" = type { %"class.std::__1::__tree.205" }
%"class.std::__1::__tree.205" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.206", %"class.std::__1::__compressed_pair.210" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%class.scoped_refptr.215 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.219 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.221 }
%class.scoped_refptr.221 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.222" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.223" = type { %"class.absl::optional_internal::optional_data.224" }
%"class.absl::optional_internal::optional_data.224" = type { %"class.absl::optional_internal::optional_data_base.225" }
%"class.absl::optional_internal::optional_data_base.225" = type { %"class.absl::optional_internal::optional_data_dtor_base.226" }
%"class.absl::optional_internal::optional_data_dtor_base.226" = type { i8, %union.anon.227 }
%union.anon.227 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.228" = type { %"class.absl::optional_internal::optional_data.229" }
%"class.absl::optional_internal::optional_data.229" = type { %"class.absl::optional_internal::optional_data_base.230" }
%"class.absl::optional_internal::optional_data_base.230" = type { %"class.absl::optional_internal::optional_data_dtor_base.231" }
%"class.absl::optional_internal::optional_data_dtor_base.231" = type { i8, [7 x i8], %union.anon.232 }
%union.anon.232 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.184" = type { %"class.absl::optional_internal::optional_data.185" }
%"class.absl::optional_internal::optional_data.185" = type { %"class.absl::optional_internal::optional_data_base.186" }
%"class.absl::optional_internal::optional_data_base.186" = type { %"class.absl::optional_internal::optional_data_dtor_base.187" }
%"class.absl::optional_internal::optional_data_dtor_base.187" = type { i8, %union.anon.188 }
%union.anon.188 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.237 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.237 = type { %"class.std::__1::map.240" }
%"class.std::__1::map.240" = type { %"class.std::__1::__tree.241" }
%"class.std::__1::__tree.241" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.242", %"class.std::__1::__compressed_pair.246" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.251"*, i64 }
%"class.std::__1::unique_ptr.251" = type opaque
%"class.std::__1::map.252" = type { %"class.std::__1::__tree.253" }
%"class.std::__1::__tree.253" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.254", %"class.std::__1::__compressed_pair.258" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.1626" = type { %"class.std::__1::__compressed_pair.1627" }
%"class.std::__1::__compressed_pair.1627" = type { %"struct.std::__1::__compressed_pair_elem.1628" }
%"struct.std::__1::__compressed_pair_elem.1628" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1217" = type { %"class.std::__1::__compressed_pair.1218" }
%"class.std::__1::__compressed_pair.1218" = type { %"struct.std::__1::__compressed_pair_elem.1219" }
%"struct.std::__1::__compressed_pair_elem.1219" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.1223" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.1224" = type { %"class.std::__1::__compressed_pair.1225" }
%"class.std::__1::__compressed_pair.1225" = type { %"struct.std::__1::__compressed_pair_elem.1226" }
%"struct.std::__1::__compressed_pair_elem.1226" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.std::__1::unique_ptr.1230" = type { %"class.std::__1::__compressed_pair.1231" }
%"class.std::__1::__compressed_pair.1231" = type { %"struct.std::__1::__compressed_pair_elem.1232" }
%"struct.std::__1::__compressed_pair_elem.1232" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.1236" }
%"class.blink::Member.1236" = type { %"class.blink::MemberBase.1237" }
%"class.blink::MemberBase.1237" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.1634" }
%"class.mojo::AssociatedRemote.1634" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1635" }
%"class.mojo::internal::AssociatedInterfacePtrState.1635" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1636" }
%"class.std::__1::unique_ptr.1636" = type { %"class.std::__1::__compressed_pair.1637" }
%"class.std::__1::__compressed_pair.1637" = type { %"struct.std::__1::__compressed_pair_elem.1638" }
%"struct.std::__1::__compressed_pair_elem.1638" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.1238" = type { %"class.blink::Member.1239" }
%"class.blink::Member.1239" = type { %"class.blink::MemberBase.1240" }
%"class.blink::MemberBase.1240" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.1644" }
%"class.mojo::AssociatedRemote.1644" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1645" }
%"class.mojo::internal::AssociatedInterfacePtrState.1645" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1646" }
%"class.std::__1::unique_ptr.1646" = type { %"class.std::__1::__compressed_pair.1647" }
%"class.std::__1::__compressed_pair.1647" = type { %"struct.std::__1::__compressed_pair_elem.1648" }
%"struct.std::__1::__compressed_pair_elem.1648" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.1241" }
%"class.blink::Member.1241" = type { %"class.blink::MemberBase.1242" }
%"class.blink::MemberBase.1242" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1654", %"class.blink::Member.610", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.1654" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.1655" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.261" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.1655" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.1243" = type { %"class.blink::Member.1244" }
%"class.blink::Member.1244" = type { %"class.blink::MemberBase.1245" }
%"class.blink::MemberBase.1245" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1658", %"class.blink::Member.610", %"class.mojo::AssociatedReceiver.1659" }
%"class.blink::ThreadState::PrefinalizerRegistration.1658" = type { i8 }
%"class.mojo::AssociatedReceiver.1659" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.1660" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.1660" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.1246" }
%"class.blink::Member.1246" = type { %"class.blink::MemberBase.1247" }
%"class.blink::MemberBase.1247" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1663", %"class.blink::Member.610", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.1663" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.143, %"class.std::__1::unique_ptr.261", %"class.base::WeakPtrFactory.1664" }
%"class.base::WeakPtrFactory.1664" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.1248" = type { %"class.blink::Member.1249" }
%"class.blink::Member.1249" = type { %"class.blink::MemberBase.1250" }
%"class.blink::MemberBase.1250" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1667", %"class.blink::Member.610", %"class.mojo::AssociatedReceiver.1668" }
%"class.blink::ThreadState::PrefinalizerRegistration.1667" = type { i8 }
%"class.mojo::AssociatedReceiver.1668" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.1669" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.1669" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.1251" = type { %"class.blink::MemberBase.1252" }
%"class.blink::MemberBase.1252" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.1253" = type { %"class.blink::MemberBase.1254" }
%"class.blink::MemberBase.1254" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.1255" = type { %"class.blink::MemberBase.1256" }
%"class.blink::MemberBase.1256" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::HeapHashMap.1259"* }
%"class.blink::HeapHashMap.1259" = type opaque
%"class.mojo::StructPtr.1260" = type { %"class.std::__1::unique_ptr.1261" }
%"class.std::__1::unique_ptr.1261" = type { %"class.std::__1::__compressed_pair.1262" }
%"class.std::__1::__compressed_pair.1262" = type { %"struct.std::__1::__compressed_pair_elem.1263" }
%"struct.std::__1::__compressed_pair_elem.1263" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.1264", %"class.mojo::InlinedStructPtr.1265" }
%"class.mojo::InlinedStructPtr.1264" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.1265" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.1269" = type { %"class.blink::MemberBase.1270" }
%"class.blink::MemberBase.1270" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.1271" = type { %"class.absl::optional_internal::optional_data.1272" }
%"class.absl::optional_internal::optional_data.1272" = type { %"class.absl::optional_internal::optional_data_base.1273" }
%"class.absl::optional_internal::optional_data_base.1273" = type { %"class.absl::optional_internal::optional_data_dtor_base.1274" }
%"class.absl::optional_internal::optional_data_dtor_base.1274" = type { i8, %union.anon.1275 }
%union.anon.1275 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.132", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.1109" }
%"class.std::__1::vector.1109" = type { %"class.std::__1::__vector_base.1110" }
%"class.std::__1::__vector_base.1110" = type { %"struct.std::__1::pair.1111"*, %"struct.std::__1::pair.1111"*, %"class.std::__1::__compressed_pair.1112" }
%"struct.std::__1::pair.1111" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.1112" = type { %"struct.std::__1::__compressed_pair_elem.1113" }
%"struct.std::__1::__compressed_pair_elem.1113" = type { %"struct.std::__1::pair.1111"* }
%"class.blink::Member.1117" = type { %"class.blink::MemberBase.1118" }
%"class.blink::MemberBase.1118" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.1119" = type { %"class.absl::optional_internal::optional_data.1120" }
%"class.absl::optional_internal::optional_data.1120" = type { %"class.absl::optional_internal::optional_data_base.1121" }
%"class.absl::optional_internal::optional_data_base.1121" = type { %"class.absl::optional_internal::optional_data_dtor_base.1122" }
%"class.absl::optional_internal::optional_data_dtor_base.1122" = type { i8, %union.anon.1123 }
%union.anon.1123 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.1124" = type { %"class.absl::optional_internal::optional_data.1125" }
%"class.absl::optional_internal::optional_data.1125" = type { %"class.absl::optional_internal::optional_data_base.1126" }
%"class.absl::optional_internal::optional_data_base.1126" = type { %"class.absl::optional_internal::optional_data_dtor_base.1127" }
%"class.absl::optional_internal::optional_data_dtor_base.1127" = type { i8, %union.anon.1128 }
%union.anon.1128 = type { %"class.base::UnguessableToken" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.1129" }
%"class.blink::HeapHashSet.1129" = type { %"class.WTF::HashSet.1132" }
%"class.WTF::HashSet.1132" = type { %"class.WTF::HashTable.1133" }
%"class.WTF::HashTable.1133" = type <{ %"class.blink::WeakMember.1135"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1135" = type opaque
%"class.blink::Member.134" = type { %"class.blink::MemberBase.135" }
%"class.blink::MemberBase.135" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::Member.136" = type { %"class.blink::MemberBase.137" }
%"class.blink::MemberBase.137" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.138" = type { %"class.blink::MemberBase.139" }
%"class.blink::MemberBase.139" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.140" = type { %"class.WTF::VectorBuffer.141" }
%"class.WTF::VectorBuffer.141" = type { %"class.WTF::VectorBufferBase.142" }
%"class.WTF::VectorBufferBase.142" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.311" }
%"class.std::__1::unique_ptr.311" = type { %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.313" }
%"struct.std::__1::__compressed_pair_elem.313" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::ExecutionContext.base" = type <{ %"class.blink::Supplementable.319", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.389", i32, i8, [3 x i8], %"class.blink::HeapVector.391", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.399", %"class.blink::Member.401", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.410", %"class.blink::Member.469", %"class.blink::Member.471", i8 }>
%"class.blink::Supplementable.473" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.474" }
%"class.blink::HeapHashMap.474" = type { %"class.WTF::HashMap.477" }
%"class.WTF::HashMap.477" = type { %"class.WTF::HashTable.478" }
%"class.WTF::HashTable.478" = type <{ %"struct.WTF::KeyValuePair.480"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.480" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.481" = type { %"class.blink::MemberBase.482" }
%"class.blink::MemberBase.482" = type { %"class.blink::ScriptController"* }
%"class.blink::ScriptController" = type opaque
%"class.blink::Member.483" = type { %"class.blink::MemberBase.484" }
%"class.blink::MemberBase.484" = type { %"class.blink::DOMVisualViewport"* }
%"class.blink::DOMVisualViewport" = type opaque
%"class.blink::Member.485" = type { %"class.blink::MemberBase.486" }
%"class.blink::MemberBase.486" = type { %"class.blink::Screen"* }
%"class.blink::Screen" = type opaque
%"class.blink::Member.487" = type { %"class.blink::MemberBase.488" }
%"class.blink::MemberBase.488" = type { %"class.blink::History"* }
%"class.blink::History" = type opaque
%"class.blink::Member.489" = type { %"class.blink::MemberBase.490" }
%"class.blink::MemberBase.490" = type { %"class.blink::BarProp"* }
%"class.blink::BarProp" = type opaque
%"class.blink::Member.491" = type { %"class.blink::MemberBase.492" }
%"class.blink::MemberBase.492" = type { %"class.blink::Navigator"* }
%"class.blink::Navigator" = type opaque
%"class.blink::Member.493" = type { %"class.blink::MemberBase.494" }
%"class.blink::MemberBase.494" = type { %"class.blink::StyleMedia"* }
%"class.blink::StyleMedia" = type opaque
%"class.blink::Member.495" = type { %"class.blink::MemberBase.496" }
%"class.blink::MemberBase.496" = type { %"class.blink::CustomElementRegistry"* }
%"class.blink::CustomElementRegistry" = type opaque
%"class.blink::Member.497" = type { %"class.blink::MemberBase.498" }
%"class.blink::MemberBase.498" = type { %"class.blink::Modulator"* }
%"class.blink::Modulator" = type opaque
%"class.blink::Member.499" = type { %"class.blink::MemberBase.500" }
%"class.blink::MemberBase.500" = type { %"class.blink::External"* }
%"class.blink::External" = type opaque
%"class.blink::Member.501" = type { %"class.blink::MemberBase.502" }
%"class.blink::MemberBase.502" = type { %"class.blink::ApplicationCache"* }
%"class.blink::ApplicationCache" = type opaque
%class.scoped_refptr.503 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr.505", i64, %"class.WTF::Vector.509", %"class.WTF::Vector.514", %"class.WTF::Vector.520", %"class.WTF::Vector.538", %class.scoped_refptr.342, %"class.WTF::HashMap.544", %"class.WTF::Vector.549", %"class.WTF::Vector.509", %"class.WTF::Vector.555", %"class.WTF::HashMap.560", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.504" }
%"class.base::RefCountedThreadSafe.504" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.505" = type { %"class.std::__1::__compressed_pair.506" }
%"class.std::__1::__compressed_pair.506" = type { %"struct.std::__1::__compressed_pair_elem.507" }
%"struct.std::__1::__compressed_pair_elem.507" = type { i8* }
%"class.WTF::Vector.514" = type { %"class.WTF::VectorBuffer.515" }
%"class.WTF::VectorBuffer.515" = type { %"class.WTF::VectorBufferBase.516", [8 x i8] }
%"class.WTF::VectorBufferBase.516" = type { %class.scoped_refptr.517*, i32, i32 }
%class.scoped_refptr.517 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.520" = type { %"class.WTF::VectorBuffer.521" }
%"class.WTF::VectorBuffer.521" = type { %"class.WTF::VectorBufferBase.522" }
%"class.WTF::VectorBufferBase.522" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.524", %"class.std::__1::unique_ptr.530" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.523 }
%class.scoped_refptr.523 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.524" = type { %"class.std::__1::__compressed_pair.525" }
%"class.std::__1::__compressed_pair.525" = type { %"struct.std::__1::__compressed_pair_elem.526" }
%"struct.std::__1::__compressed_pair_elem.526" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.530" = type { %"class.std::__1::__compressed_pair.531" }
%"class.std::__1::__compressed_pair.531" = type { %"struct.std::__1::__compressed_pair_elem.532" }
%"struct.std::__1::__compressed_pair_elem.532" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.538" = type { %"class.WTF::VectorBuffer.539" }
%"class.WTF::VectorBuffer.539" = type { %"class.WTF::VectorBufferBase.540" }
%"class.WTF::VectorBufferBase.540" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.541", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.541" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.544" = type { %"class.WTF::HashTable.545" }
%"class.WTF::HashTable.545" = type <{ %"struct.WTF::KeyValuePair.548"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.548" = type opaque
%"class.WTF::Vector.549" = type { %"class.WTF::VectorBuffer.550" }
%"class.WTF::VectorBuffer.550" = type { %"class.WTF::VectorBufferBase.551" }
%"class.WTF::VectorBufferBase.551" = type { %"class.mojo::ScopedHandleBase.552"*, i32, i32 }
%"class.mojo::ScopedHandleBase.552" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.509" = type { %"class.WTF::VectorBuffer.510" }
%"class.WTF::VectorBuffer.510" = type { %"class.WTF::VectorBufferBase.511", [16 x i8] }
%"class.WTF::VectorBufferBase.511" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.555" = type { %"class.WTF::VectorBuffer.556" }
%"class.WTF::VectorBuffer.556" = type { %"class.WTF::VectorBufferBase.557" }
%"class.WTF::VectorBufferBase.557" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.WTF::HashMap.560" = type { %"class.WTF::HashTable.561" }
%"class.WTF::HashTable.561" = type <{ %"struct.WTF::KeyValuePair.564"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.564" = type { i8**, %"class.std::__1::unique_ptr.1603" }
%"class.std::__1::unique_ptr.1603" = type { %"class.std::__1::__compressed_pair.1604" }
%"class.std::__1::__compressed_pair.1604" = type { %"struct.std::__1::__compressed_pair_elem.1605" }
%"struct.std::__1::__compressed_pair_elem.1605" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::HeapHashSet.565" = type { %"class.WTF::HashSet.568" }
%"class.WTF::HashSet.568" = type { %"class.WTF::HashTable.569" }
%"class.WTF::HashTable.569" = type <{ %"class.blink::WeakMember.571"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.571" = type opaque
%"class.blink::Member.572" = type { %"class.blink::MemberBase.573" }
%"class.blink::MemberBase.573" = type { %"class.blink::Event"* }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.579", %"class.blink::Member.579", %"class.blink::Member.581", %"class.blink::Member.583", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.574" }
%"class.absl::optional.574" = type { %"class.absl::optional_internal::optional_data.575" }
%"class.absl::optional_internal::optional_data.575" = type { %"class.absl::optional_internal::optional_data_base.576" }
%"class.absl::optional_internal::optional_data_base.576" = type { %"class.absl::optional_internal::optional_data_dtor_base.577" }
%"class.absl::optional_internal::optional_data_dtor_base.577" = type { i8, %union.anon.578 }
%union.anon.578 = type { i64 }
%"class.blink::Member.579" = type { %"class.blink::MemberBase.580" }
%"class.blink::MemberBase.580" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.581" = type { %"class.blink::MemberBase.582" }
%"class.blink::MemberBase.582" = type { %"class.blink::Event"* }
%"class.blink::Member.583" = type { %"class.blink::MemberBase.584" }
%"class.blink::MemberBase.584" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::HeapHashMap.585" = type { %"class.WTF::HashMap.588" }
%"class.WTF::HashMap.588" = type { %"class.WTF::HashTable.589" }
%"class.WTF::HashTable.589" = type <{ %"struct.WTF::KeyValuePair.591"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.591" = type opaque
%"class.std::__1::unique_ptr.592" = type { %"class.std::__1::__compressed_pair.593" }
%"class.std::__1::__compressed_pair.593" = type { %"struct.std::__1::__compressed_pair_elem.594" }
%"struct.std::__1::__compressed_pair_elem.594" = type { %"class.blink::FrameOrWorkerScheduler"* }
%"class.blink::Member.604" = type { %"class.blink::MemberBase.605" }
%"class.blink::MemberBase.605" = type { %"class.blink::InputMethodController"* }
%"class.blink::InputMethodController" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::Member.610", %"class.blink::CachedTextInputInfo", %"class.blink::Member.621", %"class.blink::Member.623", i8, i32 }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::CachedTextInputInfo" = type { %"class.blink::Member.612", %"class.blink::LayoutObject"*, %"class.blink::HeapHashMap.614", %"class.WTF::String", %"class.blink::CachedTextInputInfo::CachedPlainTextRange", %"class.blink::CachedTextInputInfo::CachedPlainTextRange" }
%"class.blink::Member.612" = type { %"class.blink::MemberBase.613" }
%"class.blink::MemberBase.613" = type { %"class.blink::ContainerNode"* }
%"class.blink::HeapHashMap.614" = type { %"class.WTF::HashMap.617" }
%"class.WTF::HashMap.617" = type { %"class.WTF::HashTable.618" }
%"class.WTF::HashTable.618" = type <{ %"struct.WTF::KeyValuePair.620"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.620" = type opaque
%"class.blink::CachedTextInputInfo::CachedPlainTextRange" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i32 }
%"class.blink::PositionTemplate" = type { %"class.blink::Member.3", i32, i32 }
%"class.blink::Member.623" = type { %"class.blink::MemberBase.624" }
%"class.blink::MemberBase.624" = type { %"class.blink::EditContext"* }
%"class.blink::EditContext" = type opaque
%"class.blink::Member.625" = type { %"class.blink::MemberBase.626" }
%"class.blink::MemberBase.626" = type { %"class.blink::SpellChecker"* }
%"class.blink::SpellChecker" = type { %"class.blink::Member.115", %"class.blink::Member.1095", %"class.blink::Member.1097" }
%"class.blink::Member.1095" = type { %"class.blink::MemberBase.1096" }
%"class.blink::MemberBase.1096" = type { %"class.blink::SpellCheckRequester"* }
%"class.blink::SpellCheckRequester" = type opaque
%"class.blink::Member.1097" = type { %"class.blink::MemberBase.1098" }
%"class.blink::MemberBase.1098" = type { %"class.blink::IdleSpellCheckController"* }
%"class.blink::IdleSpellCheckController" = type opaque
%"class.blink::Member.627" = type { %"class.blink::MemberBase.628" }
%"class.blink::MemberBase.628" = type { %"class.blink::TextSuggestionController"* }
%"class.blink::TextSuggestionController" = type { i32 (...)**, i8, %"class.blink::Member.115", %"class.blink::HeapMojoRemote" }
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.1091" }
%"class.blink::Member.1091" = type { %"class.blink::MemberBase.1092" }
%"class.blink::MemberBase.1092" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.629" = type { %"class.blink::MemberBase.630" }
%"class.blink::MemberBase.630" = type { %"class.blink::HeapHashMap.631"* }
%"class.blink::HeapHashMap.631" = type opaque
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.WTF::HashSet.637" = type { %"class.WTF::HashTable.638" }
%"class.WTF::HashTable.638" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Deque" = type { %"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.643" }
%"class.WTF::VectorBuffer.643" = type { %"class.WTF::VectorBufferBase.644" }
%"class.WTF::VectorBufferBase.644" = type { i64*, i32, i32 }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.647" = type { %"class.blink::MemberBase.648" }
%"class.blink::MemberBase.648" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.649" = type { %"class.blink::MemberBase.650" }
%"class.blink::MemberBase.650" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.651" = type { %"class.blink::MemberBase.652" }
%"class.blink::MemberBase.652" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.659" = type { %"class.std::__1::__compressed_pair.660" }
%"class.std::__1::__compressed_pair.660" = type { %"struct.std::__1::__compressed_pair_elem.661" }
%"struct.std::__1::__compressed_pair_elem.661" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.653" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.653" = type { %"class.std::__1::__compressed_pair.654" }
%"class.std::__1::__compressed_pair.654" = type { %"struct.std::__1::__compressed_pair_elem.655" }
%"struct.std::__1::__compressed_pair_elem.655" = type { %"class.blink::KURL"* }
%"class.blink::Member.665" = type { %"class.blink::MemberBase.666" }
%"class.blink::MemberBase.666" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.667" = type { %"class.blink::MemberBase.668" }
%"class.blink::MemberBase.668" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.62" = type { %"class.blink::MemberBase.63" }
%"class.blink::MemberBase.63" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.64", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.66, %"class.WTF::Vector.67", %"class.WTF::Vector.67", %"class.blink::Member.3", %"class.blink::Member.72", %"class.blink::HeapHashSet", %"class.blink::Member.11", %"class.WTF::HashSet.81", %"class.WTF::TextPosition", %"class.blink::Member.85", %"class.blink::HeapVector.87", %"class.blink::Member.94" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.64" = type { %"class.blink::MemberBase.65" }
%"class.blink::MemberBase.65" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.66 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.67" = type { %"class.WTF::VectorBuffer.68" }
%"class.WTF::VectorBuffer.68" = type { %"class.WTF::VectorBufferBase.69" }
%"class.WTF::VectorBufferBase.69" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.72" = type { %"class.blink::MemberBase.73" }
%"class.blink::MemberBase.73" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.74" }
%"class.blink::Member.74" = type { %"class.blink::MemberBase.75" }
%"class.blink::MemberBase.75" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.78" }
%"class.WTF::HashTable.78" = type <{ %"class.blink::WeakMember.80"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.80" = type { %"class.blink::MemberBase.6" }
%"class.blink::MemberBase.6" = type { %"class.blink::TreeScope"* }
%"class.WTF::HashSet.81" = type { %"class.WTF::HashTable.82" }
%"class.WTF::HashTable.82" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.85" = type { %"class.blink::MemberBase.86" }
%"class.blink::MemberBase.86" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.87" = type { %"class.WTF::Vector.90" }
%"class.WTF::Vector.90" = type { %"class.WTF::VectorBuffer.91" }
%"class.WTF::VectorBuffer.91" = type { %"class.WTF::VectorBufferBase.92" }
%"class.WTF::VectorBufferBase.92" = type { %"class.blink::Member.72"*, i32, i32 }
%"class.blink::Member.94" = type { %"class.blink::MemberBase.95" }
%"class.blink::MemberBase.95" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.669 }
%class.scoped_refptr.669 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.670" = type { %"class.WTF::VectorBuffer.671" }
%"class.WTF::VectorBuffer.671" = type { %"class.WTF::VectorBufferBase.672" }
%"class.WTF::VectorBufferBase.672" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.673 }
%class.scoped_refptr.673 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.621" = type { %"class.blink::MemberBase.622" }
%"class.blink::MemberBase.622" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.11", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.3", %"class.blink::Member.3", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.873" }
%"class.blink::HeapHashMap.873" = type { %"class.WTF::HashMap.876" }
%"class.WTF::HashMap.876" = type { %"class.WTF::HashTable.877" }
%"class.WTF::HashTable.877" = type <{ %"struct.WTF::KeyValuePair.879"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.879" = type opaque
%"class.blink::Member.880" = type { %"class.blink::MemberBase.881" }
%"class.blink::MemberBase.881" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.882" = type { %"class.WTF::HashSet.885" }
%"class.WTF::HashSet.885" = type { %"class.WTF::HashTable.886" }
%"class.WTF::HashTable.886" = type <{ %"class.blink::WeakMember.888"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.888" = type opaque
%"class.blink::HeapHashSet.889" = type { %"class.WTF::HashSet.892" }
%"class.WTF::HashSet.892" = type { %"class.WTF::HashTable.893" }
%"class.WTF::HashTable.893" = type <{ %"class.blink::WeakMember.895"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.895" = type opaque
%"class.blink::Member.896" = type { %"class.blink::MemberBase.897" }
%"class.blink::MemberBase.897" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.898" = type { %"class.blink::MemberBase.899" }
%"class.blink::MemberBase.899" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.900" = type { %"class.blink::MemberBase.901" }
%"class.blink::MemberBase.901" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.5", %"class.blink::HeapVector.56" }
%"class.blink::Member.902" = type { %"class.blink::MemberBase.903" }
%"class.blink::MemberBase.903" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.904" = type { %"class.blink::MemberBase.905" }
%"class.blink::MemberBase.905" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.906" = type { %"class.WTF::HashMap.909" }
%"class.WTF::HashMap.909" = type { %"class.WTF::HashTable.910" }
%"class.WTF::HashTable.910" = type <{ %"struct.WTF::KeyValuePair.912"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.912" = type opaque
%"class.WTF::Vector.913" = type { %"class.WTF::VectorBuffer.914" }
%"class.WTF::VectorBuffer.914" = type { %"class.WTF::VectorBufferBase.915" }
%"class.WTF::VectorBufferBase.915" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.918" = type { %"class.blink::MemberBase.919" }
%"class.blink::MemberBase.919" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.920" = type { %"class.blink::MemberBase.921" }
%"class.blink::MemberBase.921" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.24" = type { %"class.blink::MemberBase.25" }
%"class.blink::MemberBase.25" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.27" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.26 }
%class.scoped_refptr.26 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.27" = type { %"class.blink::MemberBase.28" }
%"class.blink::MemberBase.28" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.31", %"class.blink::Member.33", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.31" = type { %"class.WTF::SingleThreadedBitField.32" }
%"class.WTF::SingleThreadedBitField.32" = type { i32 }
%"class.blink::Member.33" = type { %"class.blink::MemberBase.34" }
%"class.blink::MemberBase.34" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.35 }
%class.scoped_refptr.35 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.36", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.922" = type { %"class.blink::MemberBase.923" }
%"class.blink::MemberBase.923" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.924" = type { %"class.WTF::Vector.927" }
%"class.WTF::Vector.927" = type { %"class.WTF::VectorBuffer.928" }
%"class.WTF::VectorBuffer.928" = type { %"class.WTF::VectorBufferBase.929" }
%"class.WTF::VectorBufferBase.929" = type { %"class.blink::Member.930"*, i32, i32 }
%"class.blink::Member.930" = type opaque
%"class.std::__1::unique_ptr.932" = type { %"class.std::__1::__compressed_pair.933" }
%"class.std::__1::__compressed_pair.933" = type { %"struct.std::__1::__compressed_pair_elem.934" }
%"struct.std::__1::__compressed_pair_elem.934" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.938" = type { %"class.WTF::HashSet.941" }
%"class.WTF::HashSet.941" = type { %"class.WTF::HashTable.942" }
%"class.WTF::HashTable.942" = type <{ %"class.blink::WeakMember.944"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.944" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.945", i32, [4 x i8] }>
%"class.WTF::Vector.945" = type { %"class.WTF::VectorBuffer.946" }
%"class.WTF::VectorBuffer.946" = type { %"class.WTF::VectorBufferBase.947" }
%"class.WTF::VectorBufferBase.947" = type { %"struct.std::__1::pair.948"*, i32, i32 }
%"struct.std::__1::pair.948" = type opaque
%"class.blink::Member.951" = type { %"class.blink::MemberBase.952" }
%"class.blink::MemberBase.952" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.953" = type { %"class.WTF::VectorBuffer.954" }
%"class.WTF::VectorBuffer.954" = type { %"class.WTF::VectorBufferBase.955" }
%"class.WTF::VectorBufferBase.955" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.958" = type { %"class.std::__1::__compressed_pair.959" }
%"class.std::__1::__compressed_pair.959" = type { %"struct.std::__1::__compressed_pair_elem.960" }
%"struct.std::__1::__compressed_pair_elem.960" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.41" }
%"class.WTF::Vector.41" = type { %"class.WTF::VectorBuffer.42" }
%"class.WTF::VectorBuffer.42" = type { %"class.WTF::VectorBufferBase.43" }
%"class.WTF::VectorBufferBase.43" = type { %"class.blink::Member.24"*, i32, i32 }
%"class.blink::HeapVector.964" = type { %"class.WTF::Vector.967" }
%"class.WTF::Vector.967" = type { %"class.WTF::VectorBuffer.968" }
%"class.WTF::VectorBuffer.968" = type { %"class.WTF::VectorBufferBase.969" }
%"class.WTF::VectorBufferBase.969" = type { %"class.blink::Member.970"*, i32, i32 }
%"class.blink::Member.970" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.11" }
%"class.blink::Member.972" = type { %"class.blink::MemberBase.973" }
%"class.blink::MemberBase.973" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.974" = type { %"class.blink::MemberBase.975" }
%"class.blink::MemberBase.975" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.978" = type { %"class.blink::MemberBase.979" }
%"class.blink::MemberBase.979" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.980" = type { %"class.blink::MemberBase.981" }
%"class.blink::MemberBase.981" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.982" = type { %"class.WTF::HashTable.983" }
%"class.WTF::HashTable.983" = type <{ %"struct.WTF::KeyValuePair.986"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.986" = type opaque
%"class.blink::Member.987" = type { %"class.blink::MemberBase.988" }
%"class.blink::MemberBase.988" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.989" = type { %"class.blink::MemberBase.990" }
%"class.blink::MemberBase.990" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.991" = type { %"class.blink::MemberBase.992" }
%"class.blink::MemberBase.992" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.993" = type { %"class.blink::MemberBase.994" }
%"class.blink::MemberBase.994" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.872", { i64, i64 } }
%"class.blink::HeapHashSet.995" = type { %"class.WTF::HashSet.998" }
%"class.WTF::HashSet.998" = type { %"class.WTF::HashTable.999" }
%"class.WTF::HashTable.999" = type <{ %"class.blink::Member.1001"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1001" = type opaque
%"class.blink::Member.1002" = type { %"class.blink::MemberBase.1003" }
%"class.blink::MemberBase.1003" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1004" = type { %"class.blink::MemberBase.1005" }
%"class.blink::MemberBase.1005" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1006" = type { %"class.blink::MemberBase.1007" }
%"class.blink::MemberBase.1007" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1008" = type { %"class.blink::MemberBase.1009" }
%"class.blink::MemberBase.1009" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1010" = type { %"class.blink::MemberBase.1011" }
%"class.blink::MemberBase.1011" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1012" = type { %"class.std::__1::__compressed_pair.1013" }
%"class.std::__1::__compressed_pair.1013" = type { %"struct.std::__1::__compressed_pair_elem.1014" }
%"struct.std::__1::__compressed_pair_elem.1014" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1018" = type { %"class.std::__1::__compressed_pair.1019" }
%"class.std::__1::__compressed_pair.1019" = type { %"struct.std::__1::__compressed_pair_elem.1020" }
%"struct.std::__1::__compressed_pair_elem.1020" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.1024" = type { %"class.blink::MemberBase.1025" }
%"class.blink::MemberBase.1025" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1026" = type { %"class.blink::MemberBase.1027" }
%"class.blink::MemberBase.1027" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1028" = type { %"class.blink::MemberBase.1029" }
%"class.blink::MemberBase.1029" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1030" = type { %"class.blink::MemberBase.1031" }
%"class.blink::MemberBase.1031" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.632" = type { %"class.WTF::VectorBuffer.633" }
%"class.WTF::VectorBuffer.633" = type { %"class.WTF::VectorBufferBase.634" }
%"class.WTF::VectorBufferBase.634" = type { i8*, i32, i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::HeapHashMap.1032" = type { %"class.WTF::HashMap.1035" }
%"class.WTF::HashMap.1035" = type { %"class.WTF::HashTable.1036" }
%"class.WTF::HashTable.1036" = type <{ %"struct.WTF::KeyValuePair.1038"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1038" = type opaque
%"class.blink::Member.1039" = type { %"class.blink::MemberBase.1040" }
%"class.blink::MemberBase.1040" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1041" = type { %"class.std::__1::__compressed_pair.1042" }
%"class.std::__1::__compressed_pair.1042" = type { %"struct.std::__1::__compressed_pair_elem.1043" }
%"struct.std::__1::__compressed_pair_elem.1043" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1047" = type { %"class.blink::MemberBase.1048" }
%"class.blink::MemberBase.1048" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1049" = type { %"class.blink::MemberBase.1050" }
%"class.blink::MemberBase.1050" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1051" = type { %"class.WTF::HashMap.1054" }
%"class.WTF::HashMap.1054" = type { %"class.WTF::HashTable.1055" }
%"class.WTF::HashTable.1055" = type <{ %"struct.WTF::KeyValuePair.1057"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1057" = type opaque
%"class.blink::HeapObserverSet.1058" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1059" }
%"class.blink::HeapHashSet.1059" = type { %"class.WTF::HashSet.1062" }
%"class.WTF::HashSet.1062" = type { %"class.WTF::HashTable.1063" }
%"class.WTF::HashTable.1063" = type <{ %"class.blink::WeakMember.1065"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1065" = type opaque
%"class.blink::Member.1066" = type { %"class.blink::MemberBase.1067" }
%"class.blink::MemberBase.1067" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1068" = type { %"class.blink::MemberBase.1069" }
%"class.blink::MemberBase.1069" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.11", %"class.blink::HeapHashSet.1075", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1082", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1075" = type { %"class.WTF::HashSet.1078" }
%"class.WTF::HashSet.1078" = type { %"class.WTF::HashTable.1079" }
%"class.WTF::HashTable.1079" = type <{ %"class.blink::Member.1081"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1081" = type opaque
%"class.blink::HeapTaskRunnerTimer.1082" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1083", { i64, i64 } }
%"class.blink::WeakMember.1083" = type { %"class.blink::MemberBase.1069" }
%"class.blink::WeakMember.1070" = type { %"class.blink::MemberBase.4" }
%"class.blink::Member.1071" = type { %"class.blink::MemberBase.1072" }
%"class.blink::MemberBase.1072" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.5" = type { %"class.blink::MemberBase.6" }
%"class.blink::Member.13" = type { %"class.blink::MemberBase.14" }
%"class.blink::MemberBase.14" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.20" }
%"class.blink::Member.20" = type { %"class.blink::MemberBase.21" }
%"class.blink::MemberBase.21" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.24", i32, %"class.blink::HeapVector" }
%"class.blink::Member.45" = type { %"class.blink::MemberBase.46" }
%"class.blink::MemberBase.46" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.47" = type { %"class.blink::MemberBase.48" }
%"class.blink::MemberBase.48" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.49" = type { %"class.blink::MemberBase.50" }
%"class.blink::MemberBase.50" = type { %"class.blink::DOMSelection"* }
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.51" }
%"class.blink::Member.51" = type { %"class.blink::MemberBase.52" }
%"class.blink::MemberBase.52" = type { %"class.blink::HeapHashMap.53"* }
%"class.blink::HeapHashMap.53" = type opaque
%"class.blink::Member.54" = type { %"class.blink::MemberBase.55" }
%"class.blink::MemberBase.55" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.56" = type { %"class.WTF::Vector.59" }
%"class.WTF::Vector.59" = type { %"class.WTF::VectorBuffer.60" }
%"class.WTF::VectorBuffer.60" = type { %"class.WTF::VectorBufferBase.61" }
%"class.WTF::VectorBufferBase.61" = type { %"class.blink::Member.62"*, i32, i32 }
%"class.blink::SelectionTemplate" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i32 }
%"class.blink::SetSelectionOptions" = type <{ i32, i8, i8, [2 x i8], i32, i32, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::SetSelectionOptions::Builder" = type { %"class.blink::SetSelectionOptions" }
%"class.blink::VisibleSelectionTemplate" = type <{ %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i8, [3 x i8] }>
%"class.blink::DummyExceptionStateForTesting" = type { %"class.blink::ExceptionState" }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.1564" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.1564" = type { %"class.v8::TracedReference.1565" }
%"class.v8::TracedReference.1565" = type { %"class.v8::BasicTracedReference.1566" }
%"class.v8::BasicTracedReference.1566" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::EphemeralRangeTemplate" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate" }
%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder" = type { %"class.blink::SelectionTemplate" }
%"class.v8::internal::Isolate" = type opaque
%"class.v8::Value" = type { i8 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.WTF::IntegerToStringConverter" = type <{ [12 x i8], [4 x i8], i8*, i32, [4 x i8] }>
%"class.WTF::StringAppend" = type { %"class.WTF::String", i8* }
%"class.WTF::StringTypeAdapter" = type { %"class.WTF::StringTypeAdapter.1676" }
%"class.WTF::StringTypeAdapter.1676" = type { %"class.WTF::StringView" }
%"class.WTF::StringTypeAdapter.1677" = type <{ i8*, i32, [4 x i8] }>
%"class.blink::ConsoleMessage" = type { i32, i32, %"class.WTF::String", %"class.std::__1::unique_ptr.1571", %"class.WTF::String", double, %"class.WTF::String", %"class.blink::WeakMember.1583", %"class.WTF::Vector.1584" }
%"class.std::__1::unique_ptr.1571" = type { %"class.std::__1::__compressed_pair.1572" }
%"class.std::__1::__compressed_pair.1572" = type { %"struct.std::__1::__compressed_pair_elem.1573" }
%"struct.std::__1::__compressed_pair_elem.1573" = type { %"class.blink::SourceLocation"* }
%"class.blink::SourceLocation" = type <{ %"class.WTF::String", i32, i32, %"class.std::__1::unique_ptr.1574", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1574" = type { %"class.std::__1::__compressed_pair.1575" }
%"class.std::__1::__compressed_pair.1575" = type { %"struct.std::__1::__compressed_pair_elem.1576" }
%"struct.std::__1::__compressed_pair_elem.1576" = type { %"class.v8_inspector::V8StackTrace"* }
%"class.v8_inspector::V8StackTrace" = type { i32 (...)** }
%"class.blink::WeakMember.1583" = type { %"class.blink::MemberBase.611" }
%"class.WTF::Vector.1584" = type { %"class.WTF::VectorBuffer.1585" }
%"class.WTF::VectorBuffer.1585" = type { %"class.WTF::VectorBufferBase.1446" }
%"class.blink::TextIteratorBehavior" = type { %union.anon.1567 }
%union.anon.1567 = type { i32 }
%"class.blink::TextIteratorBehavior::Builder" = type { %"class.blink::TextIteratorBehavior" }
%"class.blink::NormalPage" = type { %"class.blink::BasePage.base", %"class.blink::NormalPage::CardTable", %"class.blink::PlatformAwareObjectStartBitmap", %"class.WTF::Vector.1678", %"class.blink::FreeList", %"class.WTF::Vector.1683" }
%"class.blink::BasePage.base" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8 }>
%"class.blink::NormalPage::CardTable" = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [256 x i8] }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.WTF::Vector.1678" = type { %"class.WTF::VectorBuffer.1679" }
%"class.WTF::VectorBuffer.1679" = type { %"class.WTF::VectorBufferBase.1680" }
%"class.WTF::VectorBufferBase.1680" = type { %"struct.blink::NormalPage::ToBeFinalizedObject"*, i32, i32 }
%"struct.blink::NormalPage::ToBeFinalizedObject" = type { %"class.blink::HeapObjectHeader"* }
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.WTF::Vector.1683" = type { %"class.WTF::VectorBuffer.1684" }
%"class.WTF::VectorBuffer.1684" = type { %"class.WTF::VectorBufferBase.1685" }
%"class.WTF::VectorBufferBase.1685" = type { %"struct.blink::NormalPage::FutureFreelistEntry"*, i32, i32 }
%"struct.blink::NormalPage::FutureFreelistEntry" = type { i8*, i64 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.1592, %"class.blink::Member.1593", %"class.blink::SelfKeepAlive", %"class.util::TokenType.1597" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.1592 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.1593" = type { %"class.blink::MemberBase.1594" }
%"class.blink::MemberBase.1594" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.1595" }
%"class.blink::Persistent.1595" = type { %"class.blink::PersistentBase.1596" }
%"class.blink::PersistentBase.1596" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType.1597" = type { %"class.base::StrongAlias.1598" }
%"class.base::StrongAlias.1598" = type { %"class.base::UnguessableToken" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>

$_ZN5blink29DummyExceptionStateForTestingD2Ev = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm7EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm8EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm9EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm6EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm10EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm13EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm17EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev = comdat any

$_ZN5blink15ScriptWrappableD2Ev = comdat any

$_ZN5blink12DOMSelectionD0Ev = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink15ScriptWrappable17HasEventListenersEv = comdat any

$_ZNK5blink12DOMSelection18GetWrapperTypeInfoEv = comdat any

$_ZN5blinkeqERKNS_18RangeBoundaryPointES2_ = comdat any

$_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink12DOMSelectionE = hidden unnamed_addr constant { [11 x i8*], [3 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::ScriptWrappable"*)* @_ZN5blink15ScriptWrappableD2Ev to i8*), i8* bitcast (void (%"class.blink::DOMSelection"*)* @_ZN5blink12DOMSelectionD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::DOMSelection"*, %"class.blink::Visitor"*)* @_ZNK5blink12DOMSelection5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::DOMSelection"*)* @_ZNK5blink12DOMSelection18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*)], [3 x i8*] [i8* inttoptr (i64 -16 to i8*), i8* null, i8* bitcast (void (%"class.blink::DOMSelection"*, %"class.blink::Visitor"*)* @_ZThn16_NK5blink12DOMSelection5TraceEPNS_7VisitorE to i8*)] }, align 8
@.str = private unnamed_addr constant [5 x i8] c"None\00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"Caret\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"Range\00", align 1
@.str.3 = private unnamed_addr constant [23 x i8] c"there is no selection.\00", align 1
@.str.4 = private unnamed_addr constant [7 x i8] c"extend\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"move\00", align 1
@.str.6 = private unnamed_addr constant [8 x i8] c"forward\00", align 1
@.str.7 = private unnamed_addr constant [9 x i8] c"backward\00", align 1
@.str.8 = private unnamed_addr constant [5 x i8] c"left\00", align 1
@.str.9 = private unnamed_addr constant [6 x i8] c"right\00", align 1
@.str.10 = private unnamed_addr constant [10 x i8] c"character\00", align 1
@.str.11 = private unnamed_addr constant [5 x i8] c"word\00", align 1
@.str.12 = private unnamed_addr constant [9 x i8] c"sentence\00", align 1
@.str.13 = private unnamed_addr constant [5 x i8] c"line\00", align 1
@.str.14 = private unnamed_addr constant [10 x i8] c"paragraph\00", align 1
@.str.15 = private unnamed_addr constant [13 x i8] c"lineboundary\00", align 1
@.str.16 = private unnamed_addr constant [17 x i8] c"sentenceboundary\00", align 1
@.str.17 = private unnamed_addr constant [18 x i8] c"paragraphboundary\00", align 1
@.str.18 = private unnamed_addr constant [17 x i8] c"documentboundary\00", align 1
@.str.19 = private unnamed_addr constant [47 x i8] c"This Selection object doesn't have any Ranges.\00", align 1
@.str.20 = private unnamed_addr constant [23 x i8] c" is not a valid index.\00", align 1
@.str.21 = private unnamed_addr constant [47 x i8] c"addRange(): The given range isn't in document.\00", align 1
@_ZTVN5blink15ScriptWrappableE = external unnamed_addr constant { [11 x i8*] }, align 8
@_ZTVN5blink29DummyExceptionStateForTestingE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZTVN5blink14ExceptionStateE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink12DOMSelection18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZN3WTF19kASCIICaseFoldTableE = external local_unnamed_addr constant [256 x i8], align 16
@.str.22 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.23 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.24 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.25 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.26 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.27 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8

@_ZN5blink12DOMSelectionC1EPKNS_9TreeScopeE = hidden unnamed_addr alias void (%"class.blink::DOMSelection"*, %"class.blink::TreeScope"*), void (%"class.blink::DOMSelection"*, %"class.blink::TreeScope"*)* @_ZN5blink12DOMSelectionC2EPKNS_9TreeScopeE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12DOMSelectionC2EPKNS_9TreeScopeE(%"class.blink::DOMSelection"*, %"class.blink::TreeScope"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DOMSelection", %"class.blink::DOMSelection"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink15ScriptWrappableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::DOMSelection", %"class.blink::DOMSelection"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %4, align 8
  %5 = getelementptr inbounds %"class.blink::DOMSelection", %"class.blink::DOMSelection"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %1, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %7, i64 0, i32 0
  %9 = bitcast %"class.blink::ContainerNode"* %7 to %"class.blink::ExecutionContext"* (%"class.blink::Node"*)***
  %10 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)**, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %10, i64 10
  %12 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %11, align 8
  %13 = tail call %"class.blink::ExecutionContext"* %12(%"class.blink::Node"* %8) #9
  tail call void @_ZN5blink22ExecutionContextClientC2EPNS_16ExecutionContextE(%"class.blink::ExecutionContextClient"* %5, %"class.blink::ExecutionContext"* %13) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [3 x i8*] }, { [11 x i8*], [3 x i8*] }* @_ZTVN5blink12DOMSelectionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %14 = getelementptr inbounds %"class.blink::ExecutionContextClient", %"class.blink::ExecutionContextClient"* %5, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [3 x i8*] }, { [11 x i8*], [3 x i8*] }* @_ZTVN5blink12DOMSelectionE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %15 = getelementptr inbounds %"class.blink::DOMSelection", %"class.blink::DOMSelection"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.blink::TreeScope"* %1, %"class.blink::TreeScope"** %15, align 8
  ret void
}

declare void @_ZN5blink22ExecutionContextClientC2EPNS_16ExecutionContextE(%"class.blink::ExecutionContextClient"*, %"class.blink::ExecutionContext"*) unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink12DOMSelection14ClearTreeScopeEv(%"class.blink::DOMSelection"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMSelection", %"class.blink::DOMSelection"* %0, i64 0, i32 2
  %3 = bitcast %"class.blink::Member"* %2 to i64*
  store atomic i64 0, i64* %3 monotonic, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(72) %"class.blink::FrameSelection"* @_ZNK5blink12DOMSelection9SelectionEv(%"class.blink::DOMSelection"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMSelection", %"class.blink::DOMSelection"* %0, i64 0, i32 1
  %3 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %2) #9
  %4 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.blink::Frame"** %4 to %"class.blink::LocalFrame"**
  %6 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %6, i64 0, i32 14, i32 0, i32 0
  %8 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %7, align 8
  ret %"class.blink::FrameSelection"* %8
}

declare %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink12DOMSelection11IsAvailableEv(%"class.blink::DOMSelection"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMSelection", %"class.blink::DOMSelection"* %0, i64 0, i32 1
  %3 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %2) #9
  %4 = icmp eq %"class.blink::LocalDOMWindow"* %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %2) #9
  %7 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  %8 = bitcast %"class.blink::Frame"** %7 to %"class.blink::LocalFrame"**
  %9 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %9, i64 0, i32 14, i32 0, i32 0
  %11 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %10, align 8
  %12 = tail call zeroext i1 @_ZNK5blink14FrameSelection11IsAvailableEv(%"class.blink::FrameSelection"* %11) #9
  br label %13

13:                                               ; preds = %1, %5
  %14 = phi i1 [ false, %1 ], [ %12, %5 ]
  ret i1 %14
}

declare zeroext i1 @_ZNK5blink14FrameSelection11IsAvailableEv(%"class.blink::FrameSelection"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink12DOMSelection20UpdateFrameSelectionERKNS_17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEEPNS_5RangeERKNS_19SetSelectionOptionsE(%"class.blink::DOMSelection"*, %"class.blink::SelectionTemplate"* dereferenceable(40), %"class.blink::Range"*, %"class.blink::SetSelectionOptions"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::SetSelectionOptions::Builder", align 4
  %6 = alloca %"class.blink::SetSelectionOptions", align 4
  %7 = bitcast %"class.blink::SetSelectionOptions::Builder"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #9
  %8 = bitcast %"class.blink::SetSelectionOptions::Builder"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %8, i8 -86, i64 24, i1 false)
  call void @_ZN5blink19SetSelectionOptions7BuilderC1ERKS0_(%"class.blink::SetSelectionOptions::Builder"* nonnull %5, %"class.blink::SetSelectionOptions"* dereferenceable(24) %3) #9
  %9 = call dereferenceable(24) %"class.blink::SetSelectionOptions::Builder"* @_ZN5blink19SetSelectionOptions7Builder20SetShouldCloseTypingEb(%"class.blink::SetSelectionOptions::Builder"* nonnull %5, i1 zeroext true) #9
  %10 = call dereferenceable(24) %"class.blink::SetSelectionOptions::Builder"* @_ZN5blink19SetSelectionOptions7Builder25SetShouldClearTypingStyleEb(%"class.blink::SetSelectionOptions::Builder"* %9, i1 zeroext true) #9
  %11 = bitcast %"class.blink::SetSelectionOptions"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #9
  %12 = bitcast %"class.blink::SetSelectionOptions"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %12, i8 -86, i64 24, i1 false)
  call void @_ZNK5blink19SetSelectionOptions7Builder5BuildEv(%"class.blink::SetSelectionOptions"* nonnull sret %6, %"class.blink::SetSelectionOptions::Builder"* nonnull %5) #9
  %13 = getelementptr inbounds %"class.blink::DOMSelection", %"class.blink::DOMSelection"* %0, i64 0, i32 1
  %14 = call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %13) #9
  %15 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %14, i64 0, i32 0, i32 1, i32 0, i32 0
  %16 = bitcast %"class.blink::Frame"** %15 to %"class.blink::LocalFrame"**
  %17 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %17, i64 0, i32 14, i32 0, i32 0
  %19 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %18, align 8
  %20 = call zeroext i1 @_ZN5blink14FrameSelection22SetSelectionDeprecatedERKNS_17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEERKNS_19SetSelectionOptionsE(%"class.blink::FrameSelection"* %19, %"class.blink::SelectionTemplate"* dereferenceable(40) %1, %"class.blink::SetSelectionOptions"* nonnull dereferenceable(24) %6) #9
  %21 = getelementptr inbounds %"class.blink::DOMSelection", %"class.blink::DOMSelection"* %0, i64 0, i32 2, i32 0, i32 0
  %22 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %22, i64 0, i32 2, i32 0, i32 0
  %24 = load %"class.blink::Document"*, %"class.blink::Document"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %24, i64 0, i32 1
  %26 = icmp eq %"class.blink::TreeScope"* %22, %25
  br i1 %26, label %27, label %37

27:                                               ; preds = %4
  %28 = call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %13) #9
  %29 = icmp eq %"class.blink::LocalDOMWindow"* %28, null
  br i1 %29, label %37, label %30

30:                                               ; preds = %27
  %31 = call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %13) #9
  %32 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %31, i64 0, i32 0, i32 1, i32 0, i32 0
  %33 = bitcast %"class.blink::Frame"** %32 to %"class.blink::LocalFrame"**
  %34 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %34, i64 0, i32 14, i32 0, i32 0
  %36 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %35, align 8
  call void @_ZN5blink14FrameSelection20CacheRangeOfDocumentEPNS_5RangeE(%"class.blink::FrameSelection"* %36, %"class.blink::Range"* %2) #9
  br label %37

37:                                               ; preds = %4, %27, %30
  br i1 %20, label %38, label %68

38:                                               ; preds = %37
  %39 = call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %13) #9
  %40 = call %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"* %39) #9
  %41 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %40, i64 0, i32 43, i32 0, i32 0
  %42 = load %"class.blink::Element"*, %"class.blink::Element"** %41, align 8
  %43 = call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %13) #9
  %44 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %43, i64 0, i32 0, i32 1, i32 0, i32 0
  %45 = bitcast %"class.blink::Frame"** %44 to %"class.blink::LocalFrame"**
  %46 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %46, i64 0, i32 14, i32 0, i32 0
  %48 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %47, align 8
  call void @_ZN5blink14FrameSelection25DidSetSelectionDeprecatedERKNS_17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEERKNS_19SetSelectionOptionsE(%"class.blink::FrameSelection"* %48, %"class.blink::SelectionTemplate"* dereferenceable(40) %1, %"class.blink::SetSelectionOptions"* nonnull dereferenceable(24) %6) #9
  %49 = call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %13) #9
  %50 = icmp eq %"class.blink::LocalDOMWindow"* %49, null
  br i1 %50, label %68, label %51

51:                                               ; preds = %38
  %52 = call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %13) #9
  %53 = call %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"* %52) #9
  %54 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %53, i64 0, i32 43, i32 0, i32 0
  %55 = load %"class.blink::Element"*, %"class.blink::Element"** %54, align 8
  %56 = icmp eq %"class.blink::Element"* %42, %55
  br i1 %56, label %68, label %57

57:                                               ; preds = %51
  %58 = call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %13) #9
  %59 = icmp eq %"class.blink::LocalDOMWindow"* %58, null
  %60 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %58, i64 0, i32 1, i32 3
  %61 = icmp eq %"class.blink::UseCounter"* %60, null
  %62 = or i1 %59, %61
  br i1 %62, label %68, label %63

63:                                               ; preds = %57
  %64 = bitcast %"class.blink::UseCounter"* %60 to void (%"class.blink::UseCounter"*, i32)***
  %65 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %65, i64 3
  %67 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %66, align 8
  call void %67(%"class.blink::UseCounter"* nonnull %60, i32 1837) #9
  br label %68

68:                                               ; preds = %63, %57, %38, %51, %37
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN5blink19SetSelectionOptions7BuilderC1ERKS0_(%"class.blink::SetSelectionOptions::Builder"*, %"class.blink::SetSelectionOptions"* dereferenceable(24)) unnamed_addr #1

declare dereferenceable(24) %"class.blink::SetSelectionOptions::Builder"* @_ZN5blink19SetSelectionOptions7Builder20SetShouldCloseTypingEb(%"class.blink::SetSelectionOptions::Builder"*, i1 zeroext) local_unnamed_addr #1

declare dereferenceable(24) %"class.blink::SetSelectionOptions::Builder"* @_ZN5blink19SetSelectionOptions7Builder25SetShouldClearTypingStyleEb(%"class.blink::SetSelectionOptions::Builder"*, i1 zeroext) local_unnamed_addr #1

declare void @_ZNK5blink19SetSelectionOptions7Builder5BuildEv(%"class.blink::SetSelectionOptions"* sret, %"class.blink::SetSelectionOptions::Builder"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink14FrameSelection22SetSelectionDeprecatedERKNS_17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEERKNS_19SetSelectionOptionsE(%"class.blink::FrameSelection"*, %"class.blink::SelectionTemplate"* dereferenceable(40), %"class.blink::SetSelectionOptions"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink12DOMSelection31CacheRangeIfSelectionOfDocumentEPNS_5RangeE(%"class.blink::DOMSelection"*, %"class.blink::Range"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DOMSelection", %"class.blink::DOMSelection"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %4, i64 0, i32 2, i32 0, i32 0
  %6 = load %"class.blink::Document"*, %"class.blink::Document"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %6, i64 0, i32 1
  %8 = icmp eq %"class.blink::TreeScope"* %4, %7
  br i1 %8, label %9, label %20

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::DOMSelection", %"class.blink::DOMSelection"* %0, i64 0, i32 1
  %11 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %10) #9
  %12 = icmp eq %"class.blink::LocalDOMWindow"* %11, null
  br i1 %12, label %20, label %13

13:                                               ; preds = %9
  %14 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %10) #9
  %15 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %14, i64 0, i32 0, i32 1, i32 0, i32 0
  %16 = bitcast %"class.blink::Frame"** %15 to %"class.blink::LocalFrame"**
  %17 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %17, i64 0, i32 14, i32 0, i32 0
  %19 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %18, align 8
  tail call void @_ZN5blink14FrameSelection20CacheRangeOfDocumentEPNS_5RangeE(%"class.blink::FrameSelection"* %19, %"class.blink::Range"* %1) #9
  br label %20

20:                                               ; preds = %9, %2, %13
  ret void
}

declare %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"*) local_unnamed_addr #1

declare void @_ZN5blink14FrameSelection25DidSetSelectionDeprecatedERKNS_17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEERKNS_19SetSelectionOptionsE(%"class.blink::FrameSelection"*, %"class.blink::SelectionTemplate"* dereferenceable(40), %"class.blink::SetSelectionOptions"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink12DOMSelection19GetVisibleSelectionEv(%"class.blink::VisibleSelectionTemplate"* noalias sret, %"class.blink::DOMSelection"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DOMSelection", %"class.blink::DOMSelection"* %1, i64 0, i32 1
  %4 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %3) #9
  %5 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  %6 = bitcast %"class.blink::Frame"** %5 to %"class.blink::LocalFrame"**
  %7 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %7, i64 0, i32 14, i32 0, i32 0
  %9 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %8, align 8
  tail call void @_ZNK5blink14FrameSelection42ComputeVisibleSelectionInDOMTreeDeprecatedEv(%"class.blink::VisibleSelectionTemplate"* sret %0, %"class.blink::FrameSelection"* %9) #9
  ret void
}

declare void @_ZNK5blink14FrameSelection42ComputeVisibleSelectionInDOMTreeDeprecatedEv(%"class.blink::VisibleSelectionTemplate"* sret, %"class.blink::FrameSelection"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink12DOMSelection22IsBaseFirstInSelectionEv(%"class.blink::DOMSelection"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::SelectionTemplate", align 8
  %3 = bitcast %"class.blink::SelectionTemplate"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %3) #9
  %4 = getelementptr inbounds %"class.blink::DOMSelection", %"class.blink::DOMSelection"* %0, i64 0, i32 1
  %5 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %4) #9
  %6 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %5, i64 0, i32 0, i32 1, i32 0, i32 0
  %7 = bitcast %"class.blink::Frame"** %6 to %"class.blink::LocalFrame"**
  %8 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %8, i64 0, i32 14, i32 0, i32 0
  %10 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %9, align 8
  call void @_ZNK5blink14FrameSelection21GetSelectionInDOMTreeEv(%"class.blink::SelectionTemplate"* nonnull sret %2, %"class.blink::FrameSelection"* %10) #9
  %11 = call zeroext i1 @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE11IsBaseFirstEv(%"class.blink::SelectionTemplate"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %3) #9
  ret i1 %11
}

declare void @_ZNK5blink14FrameSelection21GetSelectionInDOMTreeEv(%"class.blink::SelectionTemplate"* sret, %"class.blink::FrameSelection"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE11IsBaseFirstEv(%"class.blink::SelectionTemplate"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Node"* @_ZNK5blink12DOMSelection10anchorNodeEv(%"class.blink::DOMSelection"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::SelectionTemplate", align 8
  %3 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %4 = tail call i32 @_ZNK5blink12DOMSelection10rangeCountEv(%"class.blink::DOMSelection"* %0) #9
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %37, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::DummyExceptionStateForTesting"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %9, align 8
  %10 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %10, align 2
  %11 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 1, i32 2
  %12 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 5, i32 0, i32 0
  %13 = bitcast %"class.WTF::StringImpl"** %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false) #9
  %14 = bitcast i8** %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 36, i1 false) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %15 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0
  %16 = call %"class.blink::Range"* @_ZNK5blink12DOMSelection10getRangeAtEjRNS_14ExceptionStateE(%"class.blink::DOMSelection"* %0, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %15) #9
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %7) #9
  %17 = icmp eq %"class.blink::Range"* %16, null
  br i1 %17, label %37, label %18

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"class.blink::DOMSelection", %"class.blink::DOMSelection"* %0, i64 0, i32 1
  %20 = call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %19) #9
  %21 = icmp eq %"class.blink::LocalDOMWindow"* %20, null
  br i1 %21, label %31, label %22

22:                                               ; preds = %18
  %23 = bitcast %"class.blink::SelectionTemplate"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %23) #9
  %24 = call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %19) #9
  %25 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %24, i64 0, i32 0, i32 1, i32 0, i32 0
  %26 = bitcast %"class.blink::Frame"** %25 to %"class.blink::LocalFrame"**
  %27 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %27, i64 0, i32 14, i32 0, i32 0
  %29 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %28, align 8
  call void @_ZNK5blink14FrameSelection21GetSelectionInDOMTreeEv(%"class.blink::SelectionTemplate"* nonnull sret %2, %"class.blink::FrameSelection"* %29) #9
  %30 = call zeroext i1 @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE11IsBaseFirstEv(%"class.blink::SelectionTemplate"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %23) #9
  br i1 %30, label %31, label %34

31:                                               ; preds = %18, %22
  %32 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %16, i64 0, i32 2, i32 0, i32 0, i32 0
  %33 = load %"class.blink::Node"*, %"class.blink::Node"** %32, align 8
  br label %37

34:                                               ; preds = %22
  %35 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %16, i64 0, i32 3, i32 0, i32 0, i32 0
  %36 = load %"class.blink::Node"*, %"class.blink::Node"** %35, align 8
  br label %37

37:                                               ; preds = %1, %6, %31, %34
  %38 = phi %"class.blink::Node"* [ %33, %31 ], [ %36, %34 ], [ null, %6 ], [ null, %1 ]
  ret %"class.blink::Node"* %38
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Range"* @_ZNK5blink12DOMSelection18PrimaryRangeOrNullEv(%"class.blink::DOMSelection"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %3 = tail call i32 @_ZNK5blink12DOMSelection10rangeCountEv(%"class.blink::DOMSelection"* %0)
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::DummyExceptionStateForTesting"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %2, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %2, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %8, align 8
  %9 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %2, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %9, align 2
  %10 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %2, i64 0, i32 0, i32 1, i32 2
  %11 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %2, i64 0, i32 0, i32 5, i32 0, i32 0
  %12 = bitcast %"class.WTF::StringImpl"** %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #9
  %13 = bitcast i8** %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 36, i1 false) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %14 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %2, i64 0, i32 0
  %15 = call %"class.blink::Range"* @_ZNK5blink12DOMSelection10getRangeAtEjRNS_14ExceptionStateE(%"class.blink::DOMSelection"* %0, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %14)
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %6) #9
  br label %16

16:                                               ; preds = %1, %5
  %17 = phi %"class.blink::Range"* [ %15, %5 ], [ null, %1 ]
  ret %"class.blink::Range"* %17
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink12DOMSelection12anchorOffsetEv(%"class.blink::DOMSelection"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::SelectionTemplate", align 8
  %3 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %4 = tail call i32 @_ZNK5blink12DOMSelection10rangeCountEv(%"class.blink::DOMSelection"* %0) #9
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %115, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::DummyExceptionStateForTesting"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %9, align 8
  %10 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %10, align 2
  %11 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 1, i32 2
  %12 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 5, i32 0, i32 0
  %13 = bitcast %"class.WTF::StringImpl"** %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false) #9
  %14 = bitcast i8** %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 36, i1 false) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %15 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0
  %16 = call %"class.blink::Range"* @_ZNK5blink12DOMSelection10getRangeAtEjRNS_14ExceptionStateE(%"class.blink::DOMSelection"* %0, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %15) #9
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %7) #9
  %17 = icmp eq %"class.blink::Range"* %16, null
  br i1 %17, label %115, label %18

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"class.blink::DOMSelection", %"class.blink::DOMSelection"* %0, i64 0, i32 1
  %20 = call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %19) #9
  %21 = icmp eq %"class.blink::LocalDOMWindow"* %20, null
  br i1 %21, label %31, label %22

22:                                               ; preds = %18
  %23 = bitcast %"class.blink::SelectionTemplate"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %23) #9
  %24 = call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %19) #9
  %25 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %24, i64 0, i32 0, i32 1, i32 0, i32 0
  %26 = bitcast %"class.blink::Frame"** %25 to %"class.blink::LocalFrame"**
  %27 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %27, i64 0, i32 14, i32 0, i32 0
  %29 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %28, align 8
  call void @_ZNK5blink14FrameSelection21GetSelectionInDOMTreeEv(%"class.blink::SelectionTemplate"* nonnull sret %2, %"class.blink::FrameSelection"* %29) #9
  %30 = call zeroext i1 @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE11IsBaseFirstEv(%"class.blink::SelectionTemplate"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %23) #9
  br i1 %30, label %31, label %73

31:                                               ; preds = %18, %22
  %32 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %16, i64 0, i32 2
  %33 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %16, i64 0, i32 2, i32 3
  %34 = load i32, i32* %33, align 8
  %35 = icmp eq i32 %34, -1
  br i1 %35, label %56, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint"* %32, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.blink::Node"*, %"class.blink::Node"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %38, i64 0, i32 3, i32 0, i32 0
  %40 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %40, i64 0, i32 2, i32 0, i32 0
  %42 = load %"class.blink::Document"*, %"class.blink::Document"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %42, i64 0, i32 52
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %16, i64 0, i32 2, i32 2
  %46 = load i64, i64* %45, align 8
  %47 = icmp eq i64 %44, %46
  br i1 %47, label %115, label %48

48:                                               ; preds = %36
  %49 = bitcast %"class.blink::Node"* %38 to i1 (%"class.blink::Node"*)***
  %50 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %49, align 8
  %51 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %50, i64 41
  %52 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %51, align 8
  %53 = call zeroext i1 %52(%"class.blink::Node"* %38) #9
  br i1 %53, label %54, label %56

54:                                               ; preds = %48
  %55 = load i32, i32* %33, align 8
  br label %115

56:                                               ; preds = %48, %31
  %57 = getelementptr inbounds %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint"* %32, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.blink::Node"*, %"class.blink::Node"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %58, i64 0, i32 3, i32 0, i32 0
  %60 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %60, i64 0, i32 2, i32 0, i32 0
  %62 = load %"class.blink::Document"*, %"class.blink::Document"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %62, i64 0, i32 52
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %16, i64 0, i32 2, i32 2
  store i64 %64, i64* %65, align 8
  %66 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %16, i64 0, i32 2, i32 1, i32 0, i32 0
  %67 = load %"class.blink::Node"*, %"class.blink::Node"** %66, align 8
  %68 = icmp eq %"class.blink::Node"* %67, null
  br i1 %68, label %69, label %70

69:                                               ; preds = %56
  store i32 0, i32* %33, align 8
  br label %115

70:                                               ; preds = %56
  %71 = call i32 @_ZNK5blink4Node9NodeIndexEv(%"class.blink::Node"* nonnull %67) #9
  %72 = add i32 %71, 1
  store i32 %72, i32* %33, align 8
  br label %115

73:                                               ; preds = %22
  %74 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %16, i64 0, i32 3
  %75 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %16, i64 0, i32 3, i32 3
  %76 = load i32, i32* %75, align 8
  %77 = icmp eq i32 %76, -1
  br i1 %77, label %98, label %78

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint"* %74, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.blink::Node"*, %"class.blink::Node"** %79, align 8
  %81 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %80, i64 0, i32 3, i32 0, i32 0
  %82 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %81, align 8
  %83 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %82, i64 0, i32 2, i32 0, i32 0
  %84 = load %"class.blink::Document"*, %"class.blink::Document"** %83, align 8
  %85 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %84, i64 0, i32 52
  %86 = load i64, i64* %85, align 8
  %87 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %16, i64 0, i32 3, i32 2
  %88 = load i64, i64* %87, align 8
  %89 = icmp eq i64 %86, %88
  br i1 %89, label %115, label %90

90:                                               ; preds = %78
  %91 = bitcast %"class.blink::Node"* %80 to i1 (%"class.blink::Node"*)***
  %92 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %91, align 8
  %93 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %92, i64 41
  %94 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %93, align 8
  %95 = call zeroext i1 %94(%"class.blink::Node"* %80) #9
  br i1 %95, label %96, label %98

96:                                               ; preds = %90
  %97 = load i32, i32* %75, align 8
  br label %115

98:                                               ; preds = %90, %73
  %99 = getelementptr inbounds %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint"* %74, i64 0, i32 0, i32 0, i32 0
  %100 = load %"class.blink::Node"*, %"class.blink::Node"** %99, align 8
  %101 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %100, i64 0, i32 3, i32 0, i32 0
  %102 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %101, align 8
  %103 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %102, i64 0, i32 2, i32 0, i32 0
  %104 = load %"class.blink::Document"*, %"class.blink::Document"** %103, align 8
  %105 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %104, i64 0, i32 52
  %106 = load i64, i64* %105, align 8
  %107 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %16, i64 0, i32 3, i32 2
  store i64 %106, i64* %107, align 8
  %108 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %16, i64 0, i32 3, i32 1, i32 0, i32 0
  %109 = load %"class.blink::Node"*, %"class.blink::Node"** %108, align 8
  %110 = icmp eq %"class.blink::Node"* %109, null
  br i1 %110, label %111, label %112

111:                                              ; preds = %98
  store i32 0, i32* %75, align 8
  br label %115

112:                                              ; preds = %98
  %113 = call i32 @_ZNK5blink4Node9NodeIndexEv(%"class.blink::Node"* nonnull %109) #9
  %114 = add i32 %113, 1
  store i32 %114, i32* %75, align 8
  br label %115

115:                                              ; preds = %112, %111, %96, %78, %70, %69, %54, %36, %1, %6
  %116 = phi i32 [ 0, %6 ], [ 0, %1 ], [ %114, %112 ], [ 0, %111 ], [ %76, %78 ], [ %97, %96 ], [ %72, %70 ], [ 0, %69 ], [ %34, %36 ], [ %55, %54 ]
  ret i32 %116
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Node"* @_ZNK5blink12DOMSelection9focusNodeEv(%"class.blink::DOMSelection"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::SelectionTemplate", align 8
  %3 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %4 = tail call i32 @_ZNK5blink12DOMSelection10rangeCountEv(%"class.blink::DOMSelection"* %0) #9
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %37, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::DummyExceptionStateForTesting"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %9, align 8
  %10 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %10, align 2
  %11 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 1, i32 2
  %12 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 5, i32 0, i32 0
  %13 = bitcast %"class.WTF::StringImpl"** %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false) #9
  %14 = bitcast i8** %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 36, i1 false) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %15 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0
  %16 = call %"class.blink::Range"* @_ZNK5blink12DOMSelection10getRangeAtEjRNS_14ExceptionStateE(%"class.blink::DOMSelection"* %0, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %15) #9
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %7) #9
  %17 = icmp eq %"class.blink::Range"* %16, null
  br i1 %17, label %37, label %18

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"class.blink::DOMSelection", %"class.blink::DOMSelection"* %0, i64 0, i32 1
  %20 = call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %19) #9
  %21 = icmp eq %"class.blink::LocalDOMWindow"* %20, null
  br i1 %21, label %31, label %22

22:                                               ; preds = %18
  %23 = bitcast %"class.blink::SelectionTemplate"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %23) #9
  %24 = call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %19) #9
  %25 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %24, i64 0, i32 0, i32 1, i32 0, i32 0
  %26 = bitcast %"class.blink::Frame"** %25 to %"class.blink::LocalFrame"**
  %27 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %27, i64 0, i32 14, i32 0, i32 0
  %29 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %28, align 8
  call void @_ZNK5blink14FrameSelection21GetSelectionInDOMTreeEv(%"class.blink::SelectionTemplate"* nonnull sret %2, %"class.blink::FrameSelection"* %29) #9
  %30 = call zeroext i1 @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE11IsBaseFirstEv(%"class.blink::SelectionTemplate"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %23) #9
  br i1 %30, label %31, label %34

31:                                               ; preds = %18, %22
  %32 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %16, i64 0, i32 3, i32 0, i32 0, i32 0
  %33 = load %"class.blink::Node"*, %"class.blink::Node"** %32, align 8
  br label %37

34:                                               ; preds = %22
  %35 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %16, i64 0, i32 2, i32 0, i32 0, i32 0
  %36 = load %"class.blink::Node"*, %"class.blink::Node"** %35, align 8
  br label %37

37:                                               ; preds = %1, %6, %31, %34
  %38 = phi %"class.blink::Node"* [ %33, %31 ], [ %36, %34 ], [ null, %6 ], [ null, %1 ]
  ret %"class.blink::Node"* %38
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink12DOMSelection11focusOffsetEv(%"class.blink::DOMSelection"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::SelectionTemplate", align 8
  %3 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %4 = tail call i32 @_ZNK5blink12DOMSelection10rangeCountEv(%"class.blink::DOMSelection"* %0) #9
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %115, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::DummyExceptionStateForTesting"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %9, align 8
  %10 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %10, align 2
  %11 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 1, i32 2
  %12 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 5, i32 0, i32 0
  %13 = bitcast %"class.WTF::StringImpl"** %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false) #9
  %14 = bitcast i8** %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 36, i1 false) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %15 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0
  %16 = call %"class.blink::Range"* @_ZNK5blink12DOMSelection10getRangeAtEjRNS_14ExceptionStateE(%"class.blink::DOMSelection"* %0, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %15) #9
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %7) #9
  %17 = icmp eq %"class.blink::Range"* %16, null
  br i1 %17, label %115, label %18

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"class.blink::DOMSelection", %"class.blink::DOMSelection"* %0, i64 0, i32 1
  %20 = call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %19) #9
  %21 = icmp eq %"class.blink::LocalDOMWindow"* %20, null
  br i1 %21, label %31, label %22

22:                                               ; preds = %18
  %23 = bitcast %"class.blink::SelectionTemplate"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %23) #9
  %24 = call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %19) #9
  %25 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %24, i64 0, i32 0, i32 1, i32 0, i32 0
  %26 = bitcast %"class.blink::Frame"** %25 to %"class.blink::LocalFrame"**
  %27 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %27, i64 0, i32 14, i32 0, i32 0
  %29 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %28, align 8
  call void @_ZNK5blink14FrameSelection21GetSelectionInDOMTreeEv(%"class.blink::SelectionTemplate"* nonnull sret %2, %"class.blink::FrameSelection"* %29) #9
  %30 = call zeroext i1 @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE11IsBaseFirstEv(%"class.blink::SelectionTemplate"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %23) #9
  br i1 %30, label %31, label %73

31:                                               ; preds = %18, %22
  %32 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %16, i64 0, i32 3
  %33 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %16, i64 0, i32 3, i32 3
  %34 = load i32, i32* %33, align 8
  %35 = icmp eq i32 %34, -1
  br i1 %35, label %56, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint"* %32, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.blink::Node"*, %"class.blink::Node"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %38, i64 0, i32 3, i32 0, i32 0
  %40 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %40, i64 0, i32 2, i32 0, i32 0
  %42 = load %"class.blink::Document"*, %"class.blink::Document"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %42, i64 0, i32 52
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %16, i64 0, i32 3, i32 2
  %46 = load i64, i64* %45, align 8
  %47 = icmp eq i64 %44, %46
  br i1 %47, label %115, label %48

48:                                               ; preds = %36
  %49 = bitcast %"class.blink::Node"* %38 to i1 (%"class.blink::Node"*)***
  %50 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %49, align 8
  %51 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %50, i64 41
  %52 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %51, align 8
  %53 = call zeroext i1 %52(%"class.blink::Node"* %38) #9
  br i1 %53, label %54, label %56

54:                                               ; preds = %48
  %55 = load i32, i32* %33, align 8
  br label %115

56:                                               ; preds = %48, %31
  %57 = getelementptr inbounds %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint"* %32, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.blink::Node"*, %"class.blink::Node"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %58, i64 0, i32 3, i32 0, i32 0
  %60 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %60, i64 0, i32 2, i32 0, i32 0
  %62 = load %"class.blink::Document"*, %"class.blink::Document"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %62, i64 0, i32 52
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %16, i64 0, i32 3, i32 2
  store i64 %64, i64* %65, align 8
  %66 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %16, i64 0, i32 3, i32 1, i32 0, i32 0
  %67 = load %"class.blink::Node"*, %"class.blink::Node"** %66, align 8
  %68 = icmp eq %"class.blink::Node"* %67, null
  br i1 %68, label %69, label %70

69:                                               ; preds = %56
  store i32 0, i32* %33, align 8
  br label %115

70:                                               ; preds = %56
  %71 = call i32 @_ZNK5blink4Node9NodeIndexEv(%"class.blink::Node"* nonnull %67) #9
  %72 = add i32 %71, 1
  store i32 %72, i32* %33, align 8
  br label %115

73:                                               ; preds = %22
  %74 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %16, i64 0, i32 2
  %75 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %16, i64 0, i32 2, i32 3
  %76 = load i32, i32* %75, align 8
  %77 = icmp eq i32 %76, -1
  br i1 %77, label %98, label %78

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint"* %74, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.blink::Node"*, %"class.blink::Node"** %79, align 8
  %81 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %80, i64 0, i32 3, i32 0, i32 0
  %82 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %81, align 8
  %83 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %82, i64 0, i32 2, i32 0, i32 0
  %84 = load %"class.blink::Document"*, %"class.blink::Document"** %83, align 8
  %85 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %84, i64 0, i32 52
  %86 = load i64, i64* %85, align 8
  %87 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %16, i64 0, i32 2, i32 2
  %88 = load i64, i64* %87, align 8
  %89 = icmp eq i64 %86, %88
  br i1 %89, label %115, label %90

90:                                               ; preds = %78
  %91 = bitcast %"class.blink::Node"* %80 to i1 (%"class.blink::Node"*)***
  %92 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %91, align 8
  %93 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %92, i64 41
  %94 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %93, align 8
  %95 = call zeroext i1 %94(%"class.blink::Node"* %80) #9
  br i1 %95, label %96, label %98

96:                                               ; preds = %90
  %97 = load i32, i32* %75, align 8
  br label %115

98:                                               ; preds = %90, %73
  %99 = getelementptr inbounds %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint"* %74, i64 0, i32 0, i32 0, i32 0
  %100 = load %"class.blink::Node"*, %"class.blink::Node"** %99, align 8
  %101 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %100, i64 0, i32 3, i32 0, i32 0
  %102 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %101, align 8
  %103 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %102, i64 0, i32 2, i32 0, i32 0
  %104 = load %"class.blink::Document"*, %"class.blink::Document"** %103, align 8
  %105 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %104, i64 0, i32 52
  %106 = load i64, i64* %105, align 8
  %107 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %16, i64 0, i32 2, i32 2
  store i64 %106, i64* %107, align 8
  %108 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %16, i64 0, i32 2, i32 1, i32 0, i32 0
  %109 = load %"class.blink::Node"*, %"class.blink::Node"** %108, align 8
  %110 = icmp eq %"class.blink::Node"* %109, null
  br i1 %110, label %111, label %112

111:                                              ; preds = %98
  store i32 0, i32* %75, align 8
  br label %115

112:                                              ; preds = %98
  %113 = call i32 @_ZNK5blink4Node9NodeIndexEv(%"class.blink::Node"* nonnull %109) #9
  %114 = add i32 %113, 1
  store i32 %114, i32* %75, align 8
  br label %115

115:                                              ; preds = %112, %111, %96, %78, %70, %69, %54, %36, %1, %6
  %116 = phi i32 [ 0, %6 ], [ 0, %1 ], [ %114, %112 ], [ 0, %111 ], [ %76, %78 ], [ %97, %96 ], [ %72, %70 ], [ 0, %69 ], [ %34, %36 ], [ %55, %54 ]
  ret i32 %116
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Node"* @_ZNK5blink12DOMSelection8baseNodeEv(%"class.blink::DOMSelection"*) local_unnamed_addr #0 align 2 {
  %2 = tail call %"class.blink::Node"* @_ZNK5blink12DOMSelection10anchorNodeEv(%"class.blink::DOMSelection"* %0)
  ret %"class.blink::Node"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink12DOMSelection10baseOffsetEv(%"class.blink::DOMSelection"*) local_unnamed_addr #0 align 2 {
  %2 = tail call i32 @_ZNK5blink12DOMSelection12anchorOffsetEv(%"class.blink::DOMSelection"* %0)
  ret i32 %2
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Node"* @_ZNK5blink12DOMSelection10extentNodeEv(%"class.blink::DOMSelection"*) local_unnamed_addr #0 align 2 {
  %2 = tail call %"class.blink::Node"* @_ZNK5blink12DOMSelection9focusNodeEv(%"class.blink::DOMSelection"* %0)
  ret %"class.blink::Node"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink12DOMSelection12extentOffsetEv(%"class.blink::DOMSelection"*) local_unnamed_addr #0 align 2 {
  %2 = tail call i32 @_ZNK5blink12DOMSelection11focusOffsetEv(%"class.blink::DOMSelection"* %0)
  ret i32 %2
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink12DOMSelection11isCollapsedEv(%"class.blink::DOMSelection"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %3 = alloca %"class.blink::PositionTemplate", align 8
  %4 = alloca %"class.blink::VisibleSelectionTemplate", align 8
  %5 = getelementptr inbounds %"class.blink::DOMSelection", %"class.blink::DOMSelection"* %0, i64 0, i32 1
  %6 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %5) #9
  %7 = icmp eq %"class.blink::LocalDOMWindow"* %6, null
  br i1 %7, label %59, label %8

8:                                                ; preds = %1
  %9 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %5) #9
  %10 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.blink::Frame"** %10 to %"class.blink::LocalFrame"**
  %12 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %12, i64 0, i32 14, i32 0, i32 0
  %14 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %13, align 8
  %15 = tail call zeroext i1 @_ZNK5blink14FrameSelection11IsAvailableEv(%"class.blink::FrameSelection"* %14) #9
  br i1 %15, label %16, label %59

16:                                               ; preds = %8
  %17 = bitcast %"class.blink::PositionTemplate"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #9
  %18 = bitcast %"class.blink::VisibleSelectionTemplate"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #9
  %19 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %5) #9
  %20 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %19, i64 0, i32 0, i32 1, i32 0, i32 0
  %21 = bitcast %"class.blink::Frame"** %20 to %"class.blink::LocalFrame"**
  %22 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %22, i64 0, i32 14, i32 0, i32 0
  %24 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %23, align 8
  call void @_ZNK5blink14FrameSelection42ComputeVisibleSelectionInDOMTreeDeprecatedEv(%"class.blink::VisibleSelectionTemplate"* nonnull sret %4, %"class.blink::FrameSelection"* %24) #9
  %25 = getelementptr inbounds %"class.blink::VisibleSelectionTemplate", %"class.blink::VisibleSelectionTemplate"* %4, i64 0, i32 0
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %3, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %25) #9
  %26 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %3, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.blink::Node"*, %"class.blink::Node"** %26, align 8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #9
  %28 = icmp eq %"class.blink::Node"* %27, null
  br i1 %28, label %40, label %29

29:                                               ; preds = %16
  %30 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %27, i64 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = and i32 %31, 512
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %40, label %34

34:                                               ; preds = %29
  %35 = call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %5) #9
  %36 = call %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"* %35) #9
  %37 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %36, i64 0, i32 1
  %38 = call %"class.blink::Node"* @_ZNK5blink9TreeScope19AncestorInThisScopeEPNS_4NodeE(%"class.blink::TreeScope"* %37, %"class.blink::Node"* nonnull %27) #9
  %39 = icmp eq %"class.blink::Node"* %38, null
  br i1 %39, label %40, label %59

40:                                               ; preds = %29, %34, %16
  %41 = call i32 @_ZNK5blink12DOMSelection10rangeCountEv(%"class.blink::DOMSelection"* %0) #9
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %59, label %43

43:                                               ; preds = %40
  %44 = bitcast %"class.blink::DummyExceptionStateForTesting"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %44) #9
  %45 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %2, i64 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %2, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %46, align 8
  %47 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %2, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %47, align 2
  %48 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %2, i64 0, i32 0, i32 1, i32 2
  %49 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %2, i64 0, i32 0, i32 5, i32 0, i32 0
  %50 = bitcast %"class.WTF::StringImpl"** %49 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 16, i1 false) #9
  %51 = bitcast i8** %48 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 36, i1 false) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %45, align 8
  %52 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %2, i64 0, i32 0
  %53 = call %"class.blink::Range"* @_ZNK5blink12DOMSelection10getRangeAtEjRNS_14ExceptionStateE(%"class.blink::DOMSelection"* %0, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %52) #9
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %44) #9
  %54 = icmp eq %"class.blink::Range"* %53, null
  br i1 %54, label %59, label %55

55:                                               ; preds = %43
  %56 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %53, i64 0, i32 2
  %57 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %53, i64 0, i32 3
  %58 = call zeroext i1 @_ZN5blinkeqERKNS_18RangeBoundaryPointES2_(%"class.blink::RangeBoundaryPoint"* dereferenceable(32) %56, %"class.blink::RangeBoundaryPoint"* dereferenceable(32) %57) #9
  br label %59

59:                                               ; preds = %8, %34, %1, %40, %43, %55
  %60 = phi i1 [ %58, %55 ], [ true, %43 ], [ true, %40 ], [ true, %1 ], [ true, %34 ], [ true, %8 ]
  ret i1 %60
}

declare %"class.blink::Node"* @_ZNK5blink9TreeScope19AncestorInThisScopeEPNS_4NodeE(%"class.blink::TreeScope"*, %"class.blink::Node"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink12DOMSelection4typeEv(%"class.blink::DOMSelection"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.blink::SelectionTemplate", align 8
  %4 = getelementptr inbounds %"class.blink::DOMSelection", %"class.blink::DOMSelection"* %0, i64 0, i32 1
  %5 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %4) #9
  %6 = icmp eq %"class.blink::LocalDOMWindow"* %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %1
  %8 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %4) #9
  %9 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %8, i64 0, i32 0, i32 1, i32 0, i32 0
  %10 = bitcast %"class.blink::Frame"** %9 to %"class.blink::LocalFrame"**
  %11 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %11, i64 0, i32 14, i32 0, i32 0
  %13 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %12, align 8
  %14 = tail call zeroext i1 @_ZNK5blink14FrameSelection11IsAvailableEv(%"class.blink::FrameSelection"* %13) #9
  br i1 %14, label %17, label %15

15:                                               ; preds = %1, %7
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %16, align 8
  br label %32

17:                                               ; preds = %7
  %18 = tail call i32 @_ZNK5blink12DOMSelection10rangeCountEv(%"class.blink::DOMSelection"* %0)
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %17
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64 4) #9
  br label %32

21:                                               ; preds = %17
  %22 = bitcast %"class.blink::SelectionTemplate"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %22) #9
  %23 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %4) #9
  %24 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %23, i64 0, i32 0, i32 1, i32 0, i32 0
  %25 = bitcast %"class.blink::Frame"** %24 to %"class.blink::LocalFrame"**
  %26 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %26, i64 0, i32 14, i32 0, i32 0
  %28 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %27, align 8
  call void @_ZNK5blink14FrameSelection21GetSelectionInDOMTreeEv(%"class.blink::SelectionTemplate"* nonnull sret %3, %"class.blink::FrameSelection"* %28) #9
  %29 = call zeroext i1 @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7IsCaretEv(%"class.blink::SelectionTemplate"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %22) #9
  br i1 %29, label %30, label %31

30:                                               ; preds = %21
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i64 5) #9
  br label %32

31:                                               ; preds = %21
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i64 5) #9
  br label %32

32:                                               ; preds = %31, %30, %20, %15
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  ret %"class.WTF::StringImpl"* %34
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink12DOMSelection10rangeCountEv(%"class.blink::DOMSelection"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::VisibleSelectionTemplate", align 8
  %3 = alloca %"class.blink::EphemeralRangeTemplate", align 8
  %4 = getelementptr inbounds %"class.blink::DOMSelection", %"class.blink::DOMSelection"* %0, i64 0, i32 1
  %5 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %4) #9
  %6 = icmp eq %"class.blink::LocalDOMWindow"* %5, null
  br i1 %6, label %52, label %7

7:                                                ; preds = %1
  %8 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %4) #9
  %9 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %8, i64 0, i32 0, i32 1, i32 0, i32 0
  %10 = bitcast %"class.blink::Frame"** %9 to %"class.blink::LocalFrame"**
  %11 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %11, i64 0, i32 14, i32 0, i32 0
  %13 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %12, align 8
  %14 = tail call zeroext i1 @_ZNK5blink14FrameSelection11IsAvailableEv(%"class.blink::FrameSelection"* %13) #9
  br i1 %14, label %15, label %52

15:                                               ; preds = %7
  %16 = getelementptr inbounds %"class.blink::DOMSelection", %"class.blink::DOMSelection"* %0, i64 0, i32 2, i32 0, i32 0
  %17 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %17, i64 0, i32 2, i32 0, i32 0
  %19 = load %"class.blink::Document"*, %"class.blink::Document"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %19, i64 0, i32 1
  %21 = icmp eq %"class.blink::TreeScope"* %17, %20
  br i1 %21, label %22, label %31

22:                                               ; preds = %15
  %23 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %4) #9
  %24 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %23, i64 0, i32 0, i32 1, i32 0, i32 0
  %25 = bitcast %"class.blink::Frame"** %24 to %"class.blink::LocalFrame"**
  %26 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %26, i64 0, i32 14, i32 0, i32 0
  %28 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %27, align 8
  %29 = tail call %"class.blink::Range"* @_ZNK5blink14FrameSelection19DocumentCachedRangeEv(%"class.blink::FrameSelection"* %28) #9
  %30 = icmp eq %"class.blink::Range"* %29, null
  br i1 %30, label %31, label %52

31:                                               ; preds = %15, %22
  %32 = bitcast %"class.blink::VisibleSelectionTemplate"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %32) #9
  %33 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %4) #9
  %34 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %33, i64 0, i32 0, i32 1, i32 0, i32 0
  %35 = bitcast %"class.blink::Frame"** %34 to %"class.blink::LocalFrame"**
  %36 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %36, i64 0, i32 14, i32 0, i32 0
  %38 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %37, align 8
  call void @_ZNK5blink14FrameSelection42ComputeVisibleSelectionInDOMTreeDeprecatedEv(%"class.blink::VisibleSelectionTemplate"* nonnull sret %2, %"class.blink::FrameSelection"* %38) #9
  %39 = call zeroext i1 @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE6IsNoneEv(%"class.blink::VisibleSelectionTemplate"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %32) #9
  br i1 %39, label %52, label %40

40:                                               ; preds = %31
  %41 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %16, align 8
  %42 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %41, i64 0, i32 2, i32 0, i32 0
  %43 = load %"class.blink::Document"*, %"class.blink::Document"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %43, i64 0, i32 1
  %45 = icmp eq %"class.blink::TreeScope"* %41, %44
  br i1 %45, label %52, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.blink::EphemeralRangeTemplate"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %47) #9
  call void @_ZNK5blink12DOMSelection30CreateRangeFromSelectionEditorEv(%"class.blink::EphemeralRangeTemplate"* nonnull sret %3, %"class.blink::DOMSelection"* %0)
  %48 = getelementptr inbounds %"class.blink::EphemeralRangeTemplate", %"class.blink::EphemeralRangeTemplate"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %49 = load %"class.blink::Node"*, %"class.blink::Node"** %48, align 8
  %50 = icmp ne %"class.blink::Node"* %49, null
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %47) #9
  %51 = zext i1 %50 to i32
  br label %52

52:                                               ; preds = %1, %46, %40, %31, %22, %7
  %53 = phi i32 [ 0, %7 ], [ 1, %22 ], [ 0, %31 ], [ 1, %40 ], [ %51, %46 ], [ 0, %1 ]
  ret i32 %53
}

declare zeroext i1 @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7IsCaretEv(%"class.blink::SelectionTemplate"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Range"* @_ZNK5blink12DOMSelection19DocumentCachedRangeEv(%"class.blink::DOMSelection"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMSelection", %"class.blink::DOMSelection"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %3, i64 0, i32 2, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %5, i64 0, i32 1
  %7 = icmp eq %"class.blink::TreeScope"* %3, %6
  br i1 %7, label %8, label %17

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::DOMSelection", %"class.blink::DOMSelection"* %0, i64 0, i32 1
  %10 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %9) #9
  %11 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %10, i64 0, i32 0, i32 1, i32 0, i32 0
  %12 = bitcast %"class.blink::Frame"** %11 to %"class.blink::LocalFrame"**
  %13 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %13, i64 0, i32 14, i32 0, i32 0
  %15 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %14, align 8
  %16 = tail call %"class.blink::Range"* @_ZNK5blink14FrameSelection19DocumentCachedRangeEv(%"class.blink::FrameSelection"* %15) #9
  br label %17

17:                                               ; preds = %1, %8
  %18 = phi %"class.blink::Range"* [ %16, %8 ], [ null, %1 ]
  ret %"class.blink::Range"* %18
}

declare zeroext i1 @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE6IsNoneEv(%"class.blink::VisibleSelectionTemplate"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink12DOMSelection21IsSelectionOfDocumentEv(%"class.blink::DOMSelection"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMSelection", %"class.blink::DOMSelection"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %3, i64 0, i32 2, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %5, i64 0, i32 1
  %7 = icmp eq %"class.blink::TreeScope"* %3, %6
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink12DOMSelection30CreateRangeFromSelectionEditorEv(%"class.blink::EphemeralRangeTemplate"* noalias sret, %"class.blink::DOMSelection"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::PositionTemplate", align 8
  %4 = alloca %"class.blink::PositionTemplate", align 8
  %5 = alloca %"class.blink::VisibleSelectionTemplate", align 8
  %6 = alloca %"class.blink::PositionTemplate", align 8
  %7 = alloca %"class.blink::PositionTemplate", align 8
  %8 = alloca %"class.blink::PositionTemplate", align 8
  %9 = alloca %"class.blink::PositionTemplate", align 8
  %10 = bitcast %"class.blink::VisibleSelectionTemplate"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %10) #9
  %11 = getelementptr inbounds %"class.blink::DOMSelection", %"class.blink::DOMSelection"* %1, i64 0, i32 1
  %12 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %11) #9, !noalias !2
  %13 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %12, i64 0, i32 0, i32 1, i32 0, i32 0
  %14 = bitcast %"class.blink::Frame"** %13 to %"class.blink::LocalFrame"**
  %15 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %14, align 8, !noalias !2
  %16 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %15, i64 0, i32 14, i32 0, i32 0
  %17 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %16, align 8, !noalias !2
  call void @_ZNK5blink14FrameSelection42ComputeVisibleSelectionInDOMTreeDeprecatedEv(%"class.blink::VisibleSelectionTemplate"* nonnull sret %5, %"class.blink::FrameSelection"* %17) #9
  %18 = bitcast %"class.blink::PositionTemplate"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #9
  %19 = bitcast %"class.blink::PositionTemplate"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #9, !noalias !5
  %20 = getelementptr inbounds %"class.blink::VisibleSelectionTemplate", %"class.blink::VisibleSelectionTemplate"* %5, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 16, i1 false) #9, !noalias !5
  %21 = load i8, i8* %20, align 4, !noalias !5
  %22 = and i8 %21, 1
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %25, label %24

24:                                               ; preds = %2
  call void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE5StartEv(%"class.blink::PositionTemplate"* nonnull sret %4, %"class.blink::VisibleSelectionTemplate"* nonnull %5) #9
  br label %26

25:                                               ; preds = %2
  call void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE3EndEv(%"class.blink::PositionTemplate"* nonnull sret %4, %"class.blink::VisibleSelectionTemplate"* nonnull %5) #9
  br label %26

26:                                               ; preds = %24, %25
  call void @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE24ParentAnchoredEquivalentEv(%"class.blink::PositionTemplate"* nonnull sret %6, %"class.blink::PositionTemplate"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #9, !noalias !5
  %27 = getelementptr inbounds %"class.blink::DOMSelection", %"class.blink::DOMSelection"* %1, i64 0, i32 2, i32 0, i32 0
  %28 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %28, i64 0, i32 2, i32 0, i32 0
  %30 = load %"class.blink::Document"*, %"class.blink::Document"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %30, i64 0, i32 1
  %32 = icmp eq %"class.blink::TreeScope"* %28, %31
  %33 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %6, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.blink::Node"*, %"class.blink::Node"** %33, align 8
  br i1 %32, label %35, label %41

35:                                               ; preds = %26
  %36 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %34, i64 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = and i32 %37, 512
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %35
  call void @_ZN5blink21FirstEphemeralRangeOfERKNS_24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::EphemeralRangeTemplate"* sret %0, %"class.blink::VisibleSelectionTemplate"* nonnull dereferenceable(40) %5) #9
  br label %127

41:                                               ; preds = %26, %35
  %42 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %6, i64 0, i32 0, i32 0, i32 0
  %43 = icmp eq %"class.blink::Node"* %34, null
  br i1 %43, label %59, label %44

44:                                               ; preds = %41
  %45 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* nonnull %6) #9
  %46 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %27, align 8
  %47 = call %"class.blink::Node"* @_ZNK5blink9TreeScope19AncestorInThisScopeEPNS_4NodeE(%"class.blink::TreeScope"* %46, %"class.blink::Node"* %45) #9
  %48 = icmp eq %"class.blink::Node"* %47, null
  br i1 %48, label %59, label %49

49:                                               ; preds = %44
  %50 = icmp eq %"class.blink::Node"* %45, %47
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %47, i64 0, i32 2, i32 0, i32 0
  %53 = bitcast %"class.blink::Node"** %52 to %"class.blink::ContainerNode"**
  %54 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %54, i64 0, i32 0
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi %"class.blink::Node"* [ %55, %51 ], [ %45, %49 ]
  %58 = icmp eq %"class.blink::Node"* %57, null
  br i1 %58, label %59, label %60

59:                                               ; preds = %44, %41, %56
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1Ev(%"class.blink::EphemeralRangeTemplate"* %0) #9
  br label %127

60:                                               ; preds = %56
  %61 = bitcast %"class.blink::PositionTemplate"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %61) #9
  %62 = bitcast %"class.blink::PositionTemplate"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %62) #9, !noalias !8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %62, i8 -86, i64 16, i1 false) #9, !noalias !8
  %63 = load i8, i8* %20, align 4, !noalias !8
  %64 = and i8 %63, 1
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %67, label %66

66:                                               ; preds = %60
  call void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE3EndEv(%"class.blink::PositionTemplate"* nonnull sret %3, %"class.blink::VisibleSelectionTemplate"* nonnull %5) #9
  br label %68

67:                                               ; preds = %60
  call void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE5StartEv(%"class.blink::PositionTemplate"* nonnull sret %3, %"class.blink::VisibleSelectionTemplate"* nonnull %5) #9
  br label %68

68:                                               ; preds = %66, %67
  call void @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE24ParentAnchoredEquivalentEv(%"class.blink::PositionTemplate"* nonnull sret %7, %"class.blink::PositionTemplate"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %62) #9, !noalias !8
  %69 = bitcast %"class.blink::PositionTemplate"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %69) #9
  %70 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %7, i64 0, i32 0, i32 0, i32 0
  %71 = bitcast %"class.blink::PositionTemplate"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 -86, i64 16, i1 false)
  %72 = load %"class.blink::Node"*, %"class.blink::Node"** %70, align 8
  %73 = icmp eq %"class.blink::Node"* %72, null
  br i1 %73, label %101, label %74

74:                                               ; preds = %68
  %75 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* nonnull %7) #9
  %76 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %27, align 8
  %77 = call %"class.blink::Node"* @_ZNK5blink9TreeScope19AncestorInThisScopeEPNS_4NodeE(%"class.blink::TreeScope"* %76, %"class.blink::Node"* %75) #9
  %78 = icmp eq %"class.blink::Node"* %77, null
  br i1 %78, label %86, label %79

79:                                               ; preds = %74
  %80 = icmp eq %"class.blink::Node"* %75, %77
  br i1 %80, label %86, label %81

81:                                               ; preds = %79
  %82 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %77, i64 0, i32 2, i32 0, i32 0
  %83 = bitcast %"class.blink::Node"** %82 to %"class.blink::ContainerNode"**
  %84 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %83, align 8
  %85 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %84, i64 0, i32 0
  br label %86

86:                                               ; preds = %74, %79, %81
  %87 = phi %"class.blink::Node"* [ %75, %79 ], [ null, %74 ], [ %85, %81 ]
  %88 = load %"class.blink::Node"*, %"class.blink::Node"** %70, align 8
  %89 = icmp eq %"class.blink::Node"* %88, null
  br i1 %89, label %101, label %90

90:                                               ; preds = %86
  %91 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* nonnull %7) #9
  %92 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %27, align 8
  %93 = call %"class.blink::Node"* @_ZNK5blink9TreeScope19AncestorInThisScopeEPNS_4NodeE(%"class.blink::TreeScope"* %92, %"class.blink::Node"* %91) #9
  %94 = icmp eq %"class.blink::Node"* %93, null
  br i1 %94, label %101, label %95

95:                                               ; preds = %90
  %96 = icmp eq %"class.blink::Node"* %91, %93
  br i1 %96, label %97, label %99

97:                                               ; preds = %95
  %98 = call i32 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE28ComputeOffsetInContainerNodeEv(%"class.blink::PositionTemplate"* nonnull %7) #9
  br label %101

99:                                               ; preds = %95
  %100 = call i32 @_ZNK5blink4Node9NodeIndexEv(%"class.blink::Node"* nonnull %93) #9
  br label %101

101:                                              ; preds = %68, %86, %90, %97, %99
  %102 = phi %"class.blink::Node"* [ %87, %86 ], [ %87, %97 ], [ %87, %99 ], [ %87, %90 ], [ null, %68 ]
  %103 = phi i32 [ 0, %86 ], [ %98, %97 ], [ %100, %99 ], [ 0, %90 ], [ 0, %68 ]
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"* nonnull %8, %"class.blink::Node"* %102, i32 %103) #9
  %104 = bitcast %"class.blink::PositionTemplate"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %104) #9
  %105 = bitcast %"class.blink::PositionTemplate"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %105, i8 -86, i64 16, i1 false)
  %106 = load %"class.blink::Node"*, %"class.blink::Node"** %42, align 8
  %107 = icmp eq %"class.blink::Node"* %106, null
  br i1 %107, label %119, label %108

108:                                              ; preds = %101
  %109 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* nonnull %6) #9
  %110 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %27, align 8
  %111 = call %"class.blink::Node"* @_ZNK5blink9TreeScope19AncestorInThisScopeEPNS_4NodeE(%"class.blink::TreeScope"* %110, %"class.blink::Node"* %109) #9
  %112 = icmp eq %"class.blink::Node"* %111, null
  br i1 %112, label %119, label %113

113:                                              ; preds = %108
  %114 = icmp eq %"class.blink::Node"* %109, %111
  br i1 %114, label %115, label %117

115:                                              ; preds = %113
  %116 = call i32 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE28ComputeOffsetInContainerNodeEv(%"class.blink::PositionTemplate"* nonnull %6) #9
  br label %119

117:                                              ; preds = %113
  %118 = call i32 @_ZNK5blink4Node9NodeIndexEv(%"class.blink::Node"* nonnull %111) #9
  br label %119

119:                                              ; preds = %101, %108, %115, %117
  %120 = phi i32 [ 0, %101 ], [ %116, %115 ], [ %118, %117 ], [ 0, %108 ]
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"* nonnull %9, %"class.blink::Node"* nonnull %57, i32 %120) #9
  %121 = load i8, i8* %20, align 4
  %122 = and i8 %121, 1
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %125, label %124

124:                                              ; preds = %119
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EES8_(%"class.blink::EphemeralRangeTemplate"* %0, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %9, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %8) #9
  br label %126

125:                                              ; preds = %119
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EES8_(%"class.blink::EphemeralRangeTemplate"* %0, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %8, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %9) #9
  br label %126

126:                                              ; preds = %125, %124
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %104) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %69) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %61) #9
  br label %127

127:                                              ; preds = %59, %126, %40
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %10) #9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12DOMSelection8collapseEPNS_4NodeEjRNS_14ExceptionStateE(%"class.blink::DOMSelection"*, %"class.blink::Node"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::SelectionTemplate", align 8
  %6 = alloca %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder", align 8
  %7 = alloca %"class.blink::PositionTemplate", align 8
  %8 = alloca %"class.blink::SetSelectionOptions", align 4
  %9 = alloca %"class.blink::SetSelectionOptions::Builder", align 4
  %10 = getelementptr inbounds %"class.blink::DOMSelection", %"class.blink::DOMSelection"* %0, i64 0, i32 1
  %11 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %10) #9
  %12 = icmp eq %"class.blink::LocalDOMWindow"* %11, null
  br i1 %12, label %85, label %13

13:                                               ; preds = %4
  %14 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %10) #9
  %15 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %14, i64 0, i32 0, i32 1, i32 0, i32 0
  %16 = bitcast %"class.blink::Frame"** %15 to %"class.blink::LocalFrame"**
  %17 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %17, i64 0, i32 14, i32 0, i32 0
  %19 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %18, align 8
  %20 = tail call zeroext i1 @_ZNK5blink14FrameSelection11IsAvailableEv(%"class.blink::FrameSelection"* %19) #9
  br i1 %20, label %21, label %85

21:                                               ; preds = %13
  %22 = icmp eq %"class.blink::Node"* %1, null
  br i1 %22, label %23, label %41

23:                                               ; preds = %21
  %24 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %10) #9
  %25 = icmp eq %"class.blink::LocalDOMWindow"* %24, null
  %26 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %24, i64 0, i32 1, i32 3
  %27 = icmp eq %"class.blink::UseCounter"* %26, null
  %28 = or i1 %25, %27
  br i1 %28, label %34, label %29

29:                                               ; preds = %23
  %30 = bitcast %"class.blink::UseCounter"* %26 to void (%"class.blink::UseCounter"*, i32)***
  %31 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %31, i64 3
  %33 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %32, align 8
  tail call void %33(%"class.blink::UseCounter"* nonnull %26, i32 1083) #9
  br label %34

34:                                               ; preds = %23, %29
  %35 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %10) #9
  %36 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %35, i64 0, i32 0, i32 1, i32 0, i32 0
  %37 = bitcast %"class.blink::Frame"** %36 to %"class.blink::LocalFrame"**
  %38 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %38, i64 0, i32 14, i32 0, i32 0
  %40 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %39, align 8
  tail call void @_ZN5blink14FrameSelection5ClearEv(%"class.blink::FrameSelection"* %40) #9
  br label %85

41:                                               ; preds = %21
  %42 = tail call %"class.blink::Node"* @_ZN5blink5Range16CheckNodeWOffsetEPNS_4NodeEjRNS_14ExceptionStateE(%"class.blink::Node"* nonnull %1, i32 %2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #9
  %43 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %44 = load i32, i32* %43, align 8
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %85

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 3, i32 0, i32 0
  %48 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %48, i64 0, i32 2, i32 0, i32 0
  %50 = load %"class.blink::Document"*, %"class.blink::Document"** %49, align 8
  %51 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %10) #9
  %52 = tail call %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"* %51) #9
  %53 = icmp eq %"class.blink::Document"* %50, %52
  br i1 %53, label %54, label %85

54:                                               ; preds = %46
  %55 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 1
  %56 = load i32, i32* %55, align 8
  %57 = and i32 %56, 256
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %85, label %59

59:                                               ; preds = %54
  %60 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %10) #9
  %61 = tail call %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"* %60) #9
  %62 = tail call %"class.blink::Range"* @_ZN5blink5Range6CreateERNS_8DocumentE(%"class.blink::Document"* dereferenceable(2848) %61) #9
  tail call void @_ZN5blink5Range8setStartEPNS_4NodeEjRNS_14ExceptionStateE(%"class.blink::Range"* %62, %"class.blink::Node"* nonnull %1, i32 %2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #9
  %63 = load i32, i32* %43, align 8
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %66, label %65

65:                                               ; preds = %59
  tail call void @_ZN5blink5Range7DisposeEv(%"class.blink::Range"* %62) #9
  br label %85

66:                                               ; preds = %59
  tail call void @_ZN5blink5Range6setEndEPNS_4NodeEjRNS_14ExceptionStateE(%"class.blink::Range"* %62, %"class.blink::Node"* nonnull %1, i32 %2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #9
  %67 = load i32, i32* %43, align 8
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %70, label %69

69:                                               ; preds = %66
  tail call void @_ZN5blink5Range7DisposeEv(%"class.blink::Range"* %62) #9
  br label %85

70:                                               ; preds = %66
  %71 = bitcast %"class.blink::SelectionTemplate"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %71) #9
  %72 = bitcast %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %72) #9
  call void @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7BuilderC1Ev(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* nonnull %6) #9
  %73 = bitcast %"class.blink::PositionTemplate"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %73) #9
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"* nonnull %7, %"class.blink::Node"* nonnull %1, i32 %2) #9
  %74 = call dereferenceable(40) %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder8CollapseERKNS_16PositionTemplateIS3_EE(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* nonnull %6, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %7) #9
  call void @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder5BuildEv(%"class.blink::SelectionTemplate"* nonnull sret %5, %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* %74) #9
  %75 = bitcast %"class.blink::SetSelectionOptions"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %75) #9
  %76 = bitcast %"class.blink::SetSelectionOptions::Builder"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %76) #9
  call void @_ZN5blink19SetSelectionOptions7BuilderC1Ev(%"class.blink::SetSelectionOptions::Builder"* nonnull %9) #9
  %77 = call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %10) #9
  %78 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %77, i64 0, i32 0, i32 1, i32 0, i32 0
  %79 = bitcast %"class.blink::Frame"** %78 to %"class.blink::LocalFrame"**
  %80 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %79, align 8
  %81 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %80, i64 0, i32 14, i32 0, i32 0
  %82 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %81, align 8
  %83 = call zeroext i1 @_ZNK5blink14FrameSelection13IsDirectionalEv(%"class.blink::FrameSelection"* %82) #9
  %84 = call dereferenceable(24) %"class.blink::SetSelectionOptions::Builder"* @_ZN5blink19SetSelectionOptions7Builder16SetIsDirectionalEb(%"class.blink::SetSelectionOptions::Builder"* nonnull %9, i1 zeroext %83) #9
  call void @_ZNK5blink19SetSelectionOptions7Builder5BuildEv(%"class.blink::SetSelectionOptions"* nonnull sret %8, %"class.blink::SetSelectionOptions::Builder"* %84) #9
  call void @_ZNK5blink12DOMSelection20UpdateFrameSelectionERKNS_17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEEPNS_5RangeERKNS_19SetSelectionOptionsE(%"class.blink::DOMSelection"* %0, %"class.blink::SelectionTemplate"* nonnull dereferenceable(40) %5, %"class.blink::Range"* %62, %"class.blink::SetSelectionOptions"* nonnull dereferenceable(24) %8)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %76) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %75) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %73) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %72) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %71) #9
  br label %85

85:                                               ; preds = %54, %41, %46, %4, %65, %69, %70, %13, %34
  ret void
}

declare void @_ZN5blink14FrameSelection5ClearEv(%"class.blink::FrameSelection"*) local_unnamed_addr #1

declare %"class.blink::Node"* @_ZN5blink5Range16CheckNodeWOffsetEPNS_4NodeEjRNS_14ExceptionStateE(%"class.blink::Node"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink12DOMSelection18IsValidForPositionEPNS_4NodeE(%"class.blink::DOMSelection"*, %"class.blink::Node"* readonly) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.blink::Node"* %1, null
  br i1 %3, label %18, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %6, i64 0, i32 2, i32 0, i32 0
  %8 = load %"class.blink::Document"*, %"class.blink::Document"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::DOMSelection", %"class.blink::DOMSelection"* %0, i64 0, i32 1
  %10 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %9) #9
  %11 = tail call %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"* %10) #9
  %12 = icmp eq %"class.blink::Document"* %8, %11
  br i1 %12, label %13, label %18

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = and i32 %15, 256
  %17 = icmp ne i32 %16, 0
  br label %18

18:                                               ; preds = %4, %13, %2
  %19 = phi i1 [ true, %2 ], [ false, %4 ], [ %17, %13 ]
  ret i1 %19
}

declare %"class.blink::Range"* @_ZN5blink5Range6CreateERNS_8DocumentE(%"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #1

declare void @_ZN5blink5Range8setStartEPNS_4NodeEjRNS_14ExceptionStateE(%"class.blink::Range"*, %"class.blink::Node"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

declare void @_ZN5blink5Range7DisposeEv(%"class.blink::Range"*) local_unnamed_addr #1

declare void @_ZN5blink5Range6setEndEPNS_4NodeEjRNS_14ExceptionStateE(%"class.blink::Range"*, %"class.blink::Node"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

declare void @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7BuilderC1Ev(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"*) unnamed_addr #1

declare dereferenceable(40) %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder8CollapseERKNS_16PositionTemplateIS3_EE(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"*, %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"*, %"class.blink::Node"*, i32) unnamed_addr #1

declare void @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder5BuildEv(%"class.blink::SelectionTemplate"* sret, %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"*) local_unnamed_addr #1

declare void @_ZN5blink19SetSelectionOptions7BuilderC1Ev(%"class.blink::SetSelectionOptions::Builder"*) unnamed_addr #1

declare dereferenceable(24) %"class.blink::SetSelectionOptions::Builder"* @_ZN5blink19SetSelectionOptions7Builder16SetIsDirectionalEb(%"class.blink::SetSelectionOptions::Builder"*, i1 zeroext) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink14FrameSelection13IsDirectionalEv(%"class.blink::FrameSelection"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12DOMSelection13collapseToEndERNS_14ExceptionStateE(%"class.blink::DOMSelection"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder", align 8
  %4 = alloca %"class.blink::PositionTemplate", align 8
  %5 = alloca %"class.blink::SelectionTemplate", align 8
  %6 = alloca %"class.blink::SetSelectionOptions", align 4
  %7 = alloca %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder", align 8
  %8 = alloca %"class.blink::PositionTemplate", align 8
  %9 = alloca %"class.blink::SelectionTemplate", align 8
  %10 = alloca %"class.blink::SelectionTemplate", align 8
  %11 = alloca %"class.blink::SetSelectionOptions", align 4
  %12 = getelementptr inbounds %"class.blink::DOMSelection", %"class.blink::DOMSelection"* %0, i64 0, i32 1
  %13 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %12) #9
  %14 = icmp eq %"class.blink::LocalDOMWindow"* %13, null
  br i1 %14, label %108, label %15

15:                                               ; preds = %2
  %16 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %12) #9
  %17 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %16, i64 0, i32 0, i32 1, i32 0, i32 0
  %18 = bitcast %"class.blink::Frame"** %17 to %"class.blink::LocalFrame"**
  %19 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %19, i64 0, i32 14, i32 0, i32 0
  %21 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %20, align 8
  %22 = tail call zeroext i1 @_ZNK5blink14FrameSelection11IsAvailableEv(%"class.blink::FrameSelection"* %21) #9
  br i1 %22, label %23, label %108

23:                                               ; preds = %15
  %24 = tail call i32 @_ZNK5blink12DOMSelection10rangeCountEv(%"class.blink::DOMSelection"* %0)
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %23
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %1, i32 11, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0)) #9
  br label %108

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.blink::DOMSelection", %"class.blink::DOMSelection"* %0, i64 0, i32 2, i32 0, i32 0
  %29 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %29, i64 0, i32 2, i32 0, i32 0
  %31 = load %"class.blink::Document"*, %"class.blink::Document"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %31, i64 0, i32 1
  %33 = icmp eq %"class.blink::TreeScope"* %29, %32
  br i1 %33, label %34, label %95

34:                                               ; preds = %27
  %35 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %12) #9
  %36 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %35, i64 0, i32 0, i32 1, i32 0, i32 0
  %37 = bitcast %"class.blink::Frame"** %36 to %"class.blink::LocalFrame"**
  %38 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %38, i64 0, i32 14, i32 0, i32 0
  %40 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %39, align 8
  %41 = tail call %"class.blink::Range"* @_ZNK5blink14FrameSelection19DocumentCachedRangeEv(%"class.blink::FrameSelection"* %40) #9
  %42 = icmp eq %"class.blink::Range"* %41, null
  br i1 %42, label %95, label %43

43:                                               ; preds = %34
  %44 = tail call %"class.blink::Range"* @_ZNK5blink5Range10cloneRangeEv(%"class.blink::Range"* nonnull %41) #9
  tail call void @_ZN5blink5Range8collapseEb(%"class.blink::Range"* %44, i1 zeroext false) #9
  %45 = bitcast %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %45) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 -86, i64 40, i1 false)
  call void @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7BuilderC1Ev(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* nonnull %3) #9
  %46 = bitcast %"class.blink::PositionTemplate"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #9
  %47 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %44, i64 0, i32 3
  %48 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %44, i64 0, i32 3, i32 3
  %49 = load i32, i32* %48, align 8, !noalias !11
  %50 = icmp eq i32 %49, -1
  br i1 %50, label %71, label %51

51:                                               ; preds = %43
  %52 = getelementptr inbounds %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint"* %47, i64 0, i32 0, i32 0, i32 0
  %53 = load %"class.blink::Node"*, %"class.blink::Node"** %52, align 8, !noalias !11
  %54 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %53, i64 0, i32 3, i32 0, i32 0
  %55 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %55, i64 0, i32 2, i32 0, i32 0
  %57 = load %"class.blink::Document"*, %"class.blink::Document"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %57, i64 0, i32 52
  %59 = load i64, i64* %58, align 8
  %60 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %44, i64 0, i32 3, i32 2
  %61 = load i64, i64* %60, align 8, !noalias !11
  %62 = icmp eq i64 %59, %61
  br i1 %62, label %88, label %63

63:                                               ; preds = %51
  %64 = bitcast %"class.blink::Node"* %53 to i1 (%"class.blink::Node"*)***
  %65 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %64, align 8
  %66 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %65, i64 41
  %67 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %66, align 8
  %68 = call zeroext i1 %67(%"class.blink::Node"* %53) #9
  br i1 %68, label %69, label %71

69:                                               ; preds = %63
  %70 = load i32, i32* %48, align 8, !noalias !11
  br label %88

71:                                               ; preds = %63, %43
  %72 = getelementptr inbounds %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint"* %47, i64 0, i32 0, i32 0, i32 0
  %73 = load %"class.blink::Node"*, %"class.blink::Node"** %72, align 8, !noalias !11
  %74 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %73, i64 0, i32 3, i32 0, i32 0
  %75 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %75, i64 0, i32 2, i32 0, i32 0
  %77 = load %"class.blink::Document"*, %"class.blink::Document"** %76, align 8
  %78 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %77, i64 0, i32 52
  %79 = load i64, i64* %78, align 8
  %80 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %44, i64 0, i32 3, i32 2
  store i64 %79, i64* %80, align 8, !noalias !11
  %81 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %44, i64 0, i32 3, i32 1, i32 0, i32 0
  %82 = load %"class.blink::Node"*, %"class.blink::Node"** %81, align 8, !noalias !11
  %83 = icmp eq %"class.blink::Node"* %82, null
  br i1 %83, label %84, label %85

84:                                               ; preds = %71
  store i32 0, i32* %48, align 8, !noalias !11
  br label %88

85:                                               ; preds = %71
  %86 = call i32 @_ZNK5blink4Node9NodeIndexEv(%"class.blink::Node"* nonnull %82) #9
  %87 = add i32 %86, 1
  store i32 %87, i32* %48, align 8, !noalias !11
  br label %88

88:                                               ; preds = %51, %69, %84, %85
  %89 = phi i32 [ %70, %69 ], [ %49, %51 ], [ 0, %84 ], [ %87, %85 ]
  %90 = getelementptr inbounds %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint"* %47, i64 0, i32 0, i32 0, i32 0
  %91 = load %"class.blink::Node"*, %"class.blink::Node"** %90, align 8, !noalias !11
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"* nonnull %4, %"class.blink::Node"* %91, i32 %89) #9
  %92 = call dereferenceable(40) %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder8CollapseERKNS_16PositionTemplateIS3_EE(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* nonnull %3, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %4) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #9
  %93 = bitcast %"class.blink::SelectionTemplate"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %93) #9
  call void @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder5BuildEv(%"class.blink::SelectionTemplate"* nonnull sret %5, %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* nonnull %3) #9
  %94 = bitcast %"class.blink::SetSelectionOptions"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %94) #9
  call void @_ZN5blink19SetSelectionOptionsC1Ev(%"class.blink::SetSelectionOptions"* nonnull %6) #9
  call void @_ZNK5blink12DOMSelection20UpdateFrameSelectionERKNS_17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEEPNS_5RangeERKNS_19SetSelectionOptionsE(%"class.blink::DOMSelection"* %0, %"class.blink::SelectionTemplate"* nonnull dereferenceable(40) %5, %"class.blink::Range"* %44, %"class.blink::SetSelectionOptions"* nonnull dereferenceable(24) %6)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %94) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %93) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %45) #9
  br label %108

95:                                               ; preds = %27, %34
  %96 = bitcast %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %96) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %96, i8 -86, i64 40, i1 false)
  call void @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7BuilderC1Ev(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* nonnull %7) #9
  %97 = bitcast %"class.blink::PositionTemplate"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %97) #9
  %98 = bitcast %"class.blink::SelectionTemplate"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %98) #9
  %99 = call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %12) #9
  %100 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %99, i64 0, i32 0, i32 1, i32 0, i32 0
  %101 = bitcast %"class.blink::Frame"** %100 to %"class.blink::LocalFrame"**
  %102 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %101, align 8
  %103 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %102, i64 0, i32 14, i32 0, i32 0
  %104 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %103, align 8
  call void @_ZNK5blink14FrameSelection21GetSelectionInDOMTreeEv(%"class.blink::SelectionTemplate"* nonnull sret %9, %"class.blink::FrameSelection"* %104) #9
  call void @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE18ComputeEndPositionEv(%"class.blink::PositionTemplate"* nonnull sret %8, %"class.blink::SelectionTemplate"* nonnull %9) #9
  %105 = call dereferenceable(40) %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder8CollapseERKNS_16PositionTemplateIS3_EE(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* nonnull %7, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %8) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %98) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %97) #9
  %106 = bitcast %"class.blink::SelectionTemplate"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %106) #9
  call void @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder5BuildEv(%"class.blink::SelectionTemplate"* nonnull sret %10, %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* nonnull %7) #9
  %107 = bitcast %"class.blink::SetSelectionOptions"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %107) #9
  call void @_ZN5blink19SetSelectionOptionsC1Ev(%"class.blink::SetSelectionOptions"* nonnull %11) #9
  call void @_ZNK5blink12DOMSelection20UpdateFrameSelectionERKNS_17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEEPNS_5RangeERKNS_19SetSelectionOptionsE(%"class.blink::DOMSelection"* %0, %"class.blink::SelectionTemplate"* nonnull dereferenceable(40) %10, %"class.blink::Range"* null, %"class.blink::SetSelectionOptions"* nonnull dereferenceable(24) %11)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %107) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %106) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %96) #9
  br label %108

108:                                              ; preds = %2, %88, %95, %15, %26
  ret void
}

declare void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"*, i32, i8*) local_unnamed_addr #1

declare %"class.blink::Range"* @_ZNK5blink5Range10cloneRangeEv(%"class.blink::Range"*) local_unnamed_addr #1

declare void @_ZN5blink5Range8collapseEb(%"class.blink::Range"*, i1 zeroext) local_unnamed_addr #1

declare void @_ZN5blink19SetSelectionOptionsC1Ev(%"class.blink::SetSelectionOptions"*) unnamed_addr #1

declare void @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE18ComputeEndPositionEv(%"class.blink::PositionTemplate"* sret, %"class.blink::SelectionTemplate"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12DOMSelection15collapseToStartERNS_14ExceptionStateE(%"class.blink::DOMSelection"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder", align 8
  %4 = alloca %"class.blink::PositionTemplate", align 8
  %5 = alloca %"class.blink::SelectionTemplate", align 8
  %6 = alloca %"class.blink::SetSelectionOptions", align 4
  %7 = alloca %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder", align 8
  %8 = alloca %"class.blink::PositionTemplate", align 8
  %9 = alloca %"class.blink::SelectionTemplate", align 8
  %10 = alloca %"class.blink::SelectionTemplate", align 8
  %11 = alloca %"class.blink::SetSelectionOptions", align 4
  %12 = getelementptr inbounds %"class.blink::DOMSelection", %"class.blink::DOMSelection"* %0, i64 0, i32 1
  %13 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %12) #9
  %14 = icmp eq %"class.blink::LocalDOMWindow"* %13, null
  br i1 %14, label %108, label %15

15:                                               ; preds = %2
  %16 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %12) #9
  %17 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %16, i64 0, i32 0, i32 1, i32 0, i32 0
  %18 = bitcast %"class.blink::Frame"** %17 to %"class.blink::LocalFrame"**
  %19 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %19, i64 0, i32 14, i32 0, i32 0
  %21 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %20, align 8
  %22 = tail call zeroext i1 @_ZNK5blink14FrameSelection11IsAvailableEv(%"class.blink::FrameSelection"* %21) #9
  br i1 %22, label %23, label %108

23:                                               ; preds = %15
  %24 = tail call i32 @_ZNK5blink12DOMSelection10rangeCountEv(%"class.blink::DOMSelection"* %0)
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %23
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %1, i32 11, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0)) #9
  br label %108

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.blink::DOMSelection", %"class.blink::DOMSelection"* %0, i64 0, i32 2, i32 0, i32 0
  %29 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %29, i64 0, i32 2, i32 0, i32 0
  %31 = load %"class.blink::Document"*, %"class.blink::Document"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %31, i64 0, i32 1
  %33 = icmp eq %"class.blink::TreeScope"* %29, %32
  br i1 %33, label %34, label %95

34:                                               ; preds = %27
  %35 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %12) #9
  %36 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %35, i64 0, i32 0, i32 1, i32 0, i32 0
  %37 = bitcast %"class.blink::Frame"** %36 to %"class.blink::LocalFrame"**
  %38 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %38, i64 0, i32 14, i32 0, i32 0
  %40 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %39, align 8
  %41 = tail call %"class.blink::Range"* @_ZNK5blink14FrameSelection19DocumentCachedRangeEv(%"class.blink::FrameSelection"* %40) #9
  %42 = icmp eq %"class.blink::Range"* %41, null
  br i1 %42, label %95, label %43

43:                                               ; preds = %34
  %44 = tail call %"class.blink::Range"* @_ZNK5blink5Range10cloneRangeEv(%"class.blink::Range"* nonnull %41) #9
  tail call void @_ZN5blink5Range8collapseEb(%"class.blink::Range"* %44, i1 zeroext true) #9
  %45 = bitcast %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %45) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 -86, i64 40, i1 false)
  call void @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7BuilderC1Ev(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* nonnull %3) #9
  %46 = bitcast %"class.blink::PositionTemplate"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #9
  %47 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %44, i64 0, i32 2
  %48 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %44, i64 0, i32 2, i32 3
  %49 = load i32, i32* %48, align 8, !noalias !16
  %50 = icmp eq i32 %49, -1
  br i1 %50, label %71, label %51

51:                                               ; preds = %43
  %52 = getelementptr inbounds %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint"* %47, i64 0, i32 0, i32 0, i32 0
  %53 = load %"class.blink::Node"*, %"class.blink::Node"** %52, align 8, !noalias !16
  %54 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %53, i64 0, i32 3, i32 0, i32 0
  %55 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %55, i64 0, i32 2, i32 0, i32 0
  %57 = load %"class.blink::Document"*, %"class.blink::Document"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %57, i64 0, i32 52
  %59 = load i64, i64* %58, align 8
  %60 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %44, i64 0, i32 2, i32 2
  %61 = load i64, i64* %60, align 8, !noalias !16
  %62 = icmp eq i64 %59, %61
  br i1 %62, label %88, label %63

63:                                               ; preds = %51
  %64 = bitcast %"class.blink::Node"* %53 to i1 (%"class.blink::Node"*)***
  %65 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %64, align 8
  %66 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %65, i64 41
  %67 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %66, align 8
  %68 = call zeroext i1 %67(%"class.blink::Node"* %53) #9
  br i1 %68, label %69, label %71

69:                                               ; preds = %63
  %70 = load i32, i32* %48, align 8, !noalias !16
  br label %88

71:                                               ; preds = %63, %43
  %72 = getelementptr inbounds %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint"* %47, i64 0, i32 0, i32 0, i32 0
  %73 = load %"class.blink::Node"*, %"class.blink::Node"** %72, align 8, !noalias !16
  %74 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %73, i64 0, i32 3, i32 0, i32 0
  %75 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %75, i64 0, i32 2, i32 0, i32 0
  %77 = load %"class.blink::Document"*, %"class.blink::Document"** %76, align 8
  %78 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %77, i64 0, i32 52
  %79 = load i64, i64* %78, align 8
  %80 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %44, i64 0, i32 2, i32 2
  store i64 %79, i64* %80, align 8, !noalias !16
  %81 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %44, i64 0, i32 2, i32 1, i32 0, i32 0
  %82 = load %"class.blink::Node"*, %"class.blink::Node"** %81, align 8, !noalias !16
  %83 = icmp eq %"class.blink::Node"* %82, null
  br i1 %83, label %84, label %85

84:                                               ; preds = %71
  store i32 0, i32* %48, align 8, !noalias !16
  br label %88

85:                                               ; preds = %71
  %86 = call i32 @_ZNK5blink4Node9NodeIndexEv(%"class.blink::Node"* nonnull %82) #9
  %87 = add i32 %86, 1
  store i32 %87, i32* %48, align 8, !noalias !16
  br label %88

88:                                               ; preds = %51, %69, %84, %85
  %89 = phi i32 [ %70, %69 ], [ %49, %51 ], [ 0, %84 ], [ %87, %85 ]
  %90 = getelementptr inbounds %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint"* %47, i64 0, i32 0, i32 0, i32 0
  %91 = load %"class.blink::Node"*, %"class.blink::Node"** %90, align 8, !noalias !16
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"* nonnull %4, %"class.blink::Node"* %91, i32 %89) #9
  %92 = call dereferenceable(40) %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder8CollapseERKNS_16PositionTemplateIS3_EE(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* nonnull %3, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %4) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #9
  %93 = bitcast %"class.blink::SelectionTemplate"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %93) #9
  call void @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder5BuildEv(%"class.blink::SelectionTemplate"* nonnull sret %5, %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* nonnull %3) #9
  %94 = bitcast %"class.blink::SetSelectionOptions"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %94) #9
  call void @_ZN5blink19SetSelectionOptionsC1Ev(%"class.blink::SetSelectionOptions"* nonnull %6) #9
  call void @_ZNK5blink12DOMSelection20UpdateFrameSelectionERKNS_17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEEPNS_5RangeERKNS_19SetSelectionOptionsE(%"class.blink::DOMSelection"* %0, %"class.blink::SelectionTemplate"* nonnull dereferenceable(40) %5, %"class.blink::Range"* %44, %"class.blink::SetSelectionOptions"* nonnull dereferenceable(24) %6)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %94) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %93) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %45) #9
  br label %108

95:                                               ; preds = %27, %34
  %96 = bitcast %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %96) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %96, i8 -86, i64 40, i1 false)
  call void @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7BuilderC1Ev(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* nonnull %7) #9
  %97 = bitcast %"class.blink::PositionTemplate"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %97) #9
  %98 = bitcast %"class.blink::SelectionTemplate"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %98) #9
  %99 = call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %12) #9
  %100 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %99, i64 0, i32 0, i32 1, i32 0, i32 0
  %101 = bitcast %"class.blink::Frame"** %100 to %"class.blink::LocalFrame"**
  %102 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %101, align 8
  %103 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %102, i64 0, i32 14, i32 0, i32 0
  %104 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %103, align 8
  call void @_ZNK5blink14FrameSelection21GetSelectionInDOMTreeEv(%"class.blink::SelectionTemplate"* nonnull sret %9, %"class.blink::FrameSelection"* %104) #9
  call void @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeStartPositionEv(%"class.blink::PositionTemplate"* nonnull sret %8, %"class.blink::SelectionTemplate"* nonnull %9) #9
  %105 = call dereferenceable(40) %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder8CollapseERKNS_16PositionTemplateIS3_EE(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* nonnull %7, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %8) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %98) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %97) #9
  %106 = bitcast %"class.blink::SelectionTemplate"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %106) #9
  call void @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder5BuildEv(%"class.blink::SelectionTemplate"* nonnull sret %10, %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* nonnull %7) #9
  %107 = bitcast %"class.blink::SetSelectionOptions"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %107) #9
  call void @_ZN5blink19SetSelectionOptionsC1Ev(%"class.blink::SetSelectionOptions"* nonnull %11) #9
  call void @_ZNK5blink12DOMSelection20UpdateFrameSelectionERKNS_17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEEPNS_5RangeERKNS_19SetSelectionOptionsE(%"class.blink::DOMSelection"* %0, %"class.blink::SelectionTemplate"* nonnull dereferenceable(40) %10, %"class.blink::Range"* null, %"class.blink::SetSelectionOptions"* nonnull dereferenceable(24) %11)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %107) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %106) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %96) #9
  br label %108

108:                                              ; preds = %2, %88, %95, %15, %26
  ret void
}

declare void @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeStartPositionEv(%"class.blink::PositionTemplate"* sret, %"class.blink::SelectionTemplate"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12DOMSelection5emptyEv(%"class.blink::DOMSelection"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMSelection", %"class.blink::DOMSelection"* %0, i64 0, i32 1
  %3 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %2) #9
  %4 = icmp eq %"class.blink::LocalDOMWindow"* %3, null
  br i1 %4, label %20, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %2) #9
  %7 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  %8 = bitcast %"class.blink::Frame"** %7 to %"class.blink::LocalFrame"**
  %9 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %9, i64 0, i32 14, i32 0, i32 0
  %11 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %10, align 8
  %12 = tail call zeroext i1 @_ZNK5blink14FrameSelection11IsAvailableEv(%"class.blink::FrameSelection"* %11) #9
  br i1 %12, label %13, label %20

13:                                               ; preds = %5
  %14 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %2) #9
  %15 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %14, i64 0, i32 0, i32 1, i32 0, i32 0
  %16 = bitcast %"class.blink::Frame"** %15 to %"class.blink::LocalFrame"**
  %17 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %17, i64 0, i32 14, i32 0, i32 0
  %19 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %18, align 8
  tail call void @_ZN5blink14FrameSelection5ClearEv(%"class.blink::FrameSelection"* %19) #9
  br label %20

20:                                               ; preds = %1, %13, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12DOMSelection16setBaseAndExtentEPNS_4NodeEjS2_jRNS_14ExceptionStateE(%"class.blink::DOMSelection"*, %"class.blink::Node"*, i32, %"class.blink::Node"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.blink::PositionTemplate", align 8
  %8 = alloca %"class.blink::PositionTemplate", align 8
  %9 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %10 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %11 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %12 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %13 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %14 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %15 = alloca %"class.blink::SelectionTemplate", align 8
  %16 = alloca %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder", align 8
  %17 = alloca %"class.blink::SetSelectionOptions", align 4
  %18 = alloca %"class.blink::SetSelectionOptions::Builder", align 4
  %19 = getelementptr inbounds %"class.blink::DOMSelection", %"class.blink::DOMSelection"* %0, i64 0, i32 1
  %20 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %19) #9
  %21 = icmp eq %"class.blink::LocalDOMWindow"* %20, null
  br i1 %21, label %196, label %22

22:                                               ; preds = %6
  %23 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %19) #9
  %24 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %23, i64 0, i32 0, i32 1, i32 0, i32 0
  %25 = bitcast %"class.blink::Frame"** %24 to %"class.blink::LocalFrame"**
  %26 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %26, i64 0, i32 14, i32 0, i32 0
  %28 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %27, align 8
  %29 = tail call zeroext i1 @_ZNK5blink14FrameSelection11IsAvailableEv(%"class.blink::FrameSelection"* %28) #9
  br i1 %29, label %30, label %196

30:                                               ; preds = %22
  %31 = icmp eq %"class.blink::Node"* %1, null
  br i1 %31, label %32, label %50

32:                                               ; preds = %30
  %33 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %19) #9
  %34 = icmp eq %"class.blink::LocalDOMWindow"* %33, null
  %35 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %33, i64 0, i32 1, i32 3
  %36 = icmp eq %"class.blink::UseCounter"* %35, null
  %37 = or i1 %34, %36
  br i1 %37, label %43, label %38

38:                                               ; preds = %32
  %39 = bitcast %"class.blink::UseCounter"* %35 to void (%"class.blink::UseCounter"*, i32)***
  %40 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %40, i64 3
  %42 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %41, align 8
  tail call void %42(%"class.blink::UseCounter"* nonnull %35, i32 1084) #9
  br label %43

43:                                               ; preds = %32, %38
  %44 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %19) #9
  %45 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %44, i64 0, i32 0, i32 1, i32 0, i32 0
  %46 = bitcast %"class.blink::Frame"** %45 to %"class.blink::LocalFrame"**
  %47 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %47, i64 0, i32 14, i32 0, i32 0
  %49 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %48, align 8
  tail call void @_ZN5blink14FrameSelection5ClearEv(%"class.blink::FrameSelection"* %49) #9
  br label %196

50:                                               ; preds = %30
  %51 = icmp ne %"class.blink::Node"* %3, null
  br i1 %51, label %63, label %52

52:                                               ; preds = %50
  %53 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %19) #9
  %54 = icmp eq %"class.blink::LocalDOMWindow"* %53, null
  %55 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %53, i64 0, i32 1, i32 3
  %56 = icmp eq %"class.blink::UseCounter"* %55, null
  %57 = or i1 %54, %56
  br i1 %57, label %63, label %58

58:                                               ; preds = %52
  %59 = bitcast %"class.blink::UseCounter"* %55 to void (%"class.blink::UseCounter"*, i32)***
  %60 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %60, i64 3
  %62 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %61, align 8
  tail call void %62(%"class.blink::UseCounter"* nonnull %55, i32 1084) #9
  br label %63

63:                                               ; preds = %58, %52, %50
  %64 = phi i32 [ %4, %50 ], [ 0, %52 ], [ 0, %58 ]
  %65 = tail call %"class.blink::Node"* @_ZN5blink5Range16CheckNodeWOffsetEPNS_4NodeEjRNS_14ExceptionStateE(%"class.blink::Node"* nonnull %1, i32 %2, %"class.blink::ExceptionState"* dereferenceable(72) %5) #9
  %66 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 4
  %67 = load i32, i32* %66, align 8
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %196

69:                                               ; preds = %63
  br i1 %51, label %70, label %74

70:                                               ; preds = %69
  %71 = tail call %"class.blink::Node"* @_ZN5blink5Range16CheckNodeWOffsetEPNS_4NodeEjRNS_14ExceptionStateE(%"class.blink::Node"* nonnull %3, i32 %64, %"class.blink::ExceptionState"* dereferenceable(72) %5) #9
  %72 = load i32, i32* %66, align 8
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %196

74:                                               ; preds = %70, %69
  %75 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 3, i32 0, i32 0
  %76 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %76, i64 0, i32 2, i32 0, i32 0
  %78 = load %"class.blink::Document"*, %"class.blink::Document"** %77, align 8
  %79 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %19) #9
  %80 = tail call %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"* %79) #9
  %81 = icmp eq %"class.blink::Document"* %78, %80
  br i1 %81, label %82, label %196

82:                                               ; preds = %74
  %83 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 1
  %84 = load i32, i32* %83, align 8
  %85 = and i32 %84, 256
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %196, label %87

87:                                               ; preds = %82
  %88 = icmp eq %"class.blink::Node"* %3, null
  br i1 %88, label %102, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 0, i32 3, i32 0, i32 0
  %91 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %90, align 8
  %92 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %91, i64 0, i32 2, i32 0, i32 0
  %93 = load %"class.blink::Document"*, %"class.blink::Document"** %92, align 8
  %94 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %19) #9
  %95 = tail call %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"* %94) #9
  %96 = icmp eq %"class.blink::Document"* %93, %95
  br i1 %96, label %97, label %196

97:                                               ; preds = %89
  %98 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3, i64 0, i32 1
  %99 = load i32, i32* %98, align 8
  %100 = and i32 %99, 256
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %196, label %102

102:                                              ; preds = %97, %87
  %103 = getelementptr inbounds %"class.blink::DOMSelection", %"class.blink::DOMSelection"* %0, i64 0, i32 2, i32 0, i32 0
  %104 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %103, align 8
  %105 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %104, i64 0, i32 2, i32 0, i32 0
  %106 = load %"class.blink::Document"*, %"class.blink::Document"** %105, align 8
  %107 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %106, i64 0, i32 1
  %108 = icmp eq %"class.blink::TreeScope"* %104, %107
  br i1 %108, label %109, label %116

109:                                              ; preds = %102
  %110 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %19) #9
  %111 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %110, i64 0, i32 0, i32 1, i32 0, i32 0
  %112 = bitcast %"class.blink::Frame"** %111 to %"class.blink::LocalFrame"**
  %113 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %112, align 8
  %114 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %113, i64 0, i32 14, i32 0, i32 0
  %115 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %114, align 8
  tail call void @_ZN5blink14FrameSelection24ClearDocumentCachedRangeEv(%"class.blink::FrameSelection"* %115) #9
  br label %116

116:                                              ; preds = %102, %109
  %117 = bitcast %"class.blink::PositionTemplate"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %117) #9
  %118 = bitcast %"class.blink::PositionTemplate"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %118, i8 -86, i64 16, i1 false)
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"* nonnull %7, %"class.blink::Node"* nonnull %1, i32 %2) #9
  %119 = bitcast %"class.blink::PositionTemplate"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %119) #9
  %120 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %8, i64 0, i32 0, i32 0, i32 0
  %121 = bitcast %"class.blink::PositionTemplate"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %121, i8 -86, i64 16, i1 false)
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"* nonnull %8, %"class.blink::Node"* %3, i32 %64) #9
  %122 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %75, align 8
  %123 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %122, i64 0, i32 2, i32 0, i32 0
  %124 = load %"class.blink::Document"*, %"class.blink::Document"** %123, align 8
  %125 = call %"class.blink::Range"* @_ZN5blink5Range6CreateERNS_8DocumentE(%"class.blink::Document"* dereferenceable(2848) %124) #9
  %126 = load %"class.blink::Node"*, %"class.blink::Node"** %120, align 8
  %127 = icmp eq %"class.blink::Node"* %126, null
  br i1 %127, label %128, label %147

128:                                              ; preds = %116
  %129 = bitcast %"class.blink::DummyExceptionStateForTesting"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %129) #9
  %130 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %9, i64 0, i32 0, i32 0
  %131 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %9, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %131, align 8
  %132 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %9, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %132, align 2
  %133 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %9, i64 0, i32 0, i32 1, i32 2
  %134 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %9, i64 0, i32 0, i32 5, i32 0, i32 0
  %135 = bitcast %"class.WTF::StringImpl"** %134 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %135, i8 0, i64 16, i1 false) #9
  %136 = bitcast i8** %133 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %136, i8 0, i64 36, i1 false) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %130, align 8
  %137 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %9, i64 0, i32 0
  call void @_ZN5blink5Range8setStartEPNS_4NodeEjRNS_14ExceptionStateE(%"class.blink::Range"* %125, %"class.blink::Node"* nonnull %1, i32 %2, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %137) #9
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %129) #9
  %138 = bitcast %"class.blink::DummyExceptionStateForTesting"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %138) #9
  %139 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %10, i64 0, i32 0, i32 0
  %140 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %10, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %140, align 8
  %141 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %10, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %141, align 2
  %142 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %10, i64 0, i32 0, i32 1, i32 2
  %143 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %10, i64 0, i32 0, i32 5, i32 0, i32 0
  %144 = bitcast %"class.WTF::StringImpl"** %143 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %144, i8 0, i64 16, i1 false) #9
  %145 = bitcast i8** %142 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %145, i8 0, i64 36, i1 false) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %139, align 8
  %146 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %10, i64 0, i32 0
  call void @_ZN5blink5Range6setEndEPNS_4NodeEjRNS_14ExceptionStateE(%"class.blink::Range"* %125, %"class.blink::Node"* nonnull %1, i32 %2, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %146) #9
  br label %187

147:                                              ; preds = %116
  %148 = call zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEltERKS4_(%"class.blink::PositionTemplate"* nonnull %7, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %8) #9
  br i1 %148, label %149, label %168

149:                                              ; preds = %147
  %150 = bitcast %"class.blink::DummyExceptionStateForTesting"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %150) #9
  %151 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %11, i64 0, i32 0, i32 0
  %152 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %11, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %152, align 8
  %153 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %11, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %153, align 2
  %154 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %11, i64 0, i32 0, i32 1, i32 2
  %155 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %11, i64 0, i32 0, i32 5, i32 0, i32 0
  %156 = bitcast %"class.WTF::StringImpl"** %155 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %156, i8 0, i64 16, i1 false) #9
  %157 = bitcast i8** %154 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %157, i8 0, i64 36, i1 false) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %151, align 8
  %158 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %11, i64 0, i32 0
  call void @_ZN5blink5Range8setStartEPNS_4NodeEjRNS_14ExceptionStateE(%"class.blink::Range"* %125, %"class.blink::Node"* nonnull %1, i32 %2, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %158) #9
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %150) #9
  %159 = bitcast %"class.blink::DummyExceptionStateForTesting"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %159) #9
  %160 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %12, i64 0, i32 0, i32 0
  %161 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %12, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %161, align 8
  %162 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %12, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %162, align 2
  %163 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %12, i64 0, i32 0, i32 1, i32 2
  %164 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %12, i64 0, i32 0, i32 5, i32 0, i32 0
  %165 = bitcast %"class.WTF::StringImpl"** %164 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %165, i8 0, i64 16, i1 false) #9
  %166 = bitcast i8** %163 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %166, i8 0, i64 36, i1 false) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %160, align 8
  %167 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %12, i64 0, i32 0
  call void @_ZN5blink5Range6setEndEPNS_4NodeEjRNS_14ExceptionStateE(%"class.blink::Range"* %125, %"class.blink::Node"* %3, i32 %64, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %167) #9
  br label %187

168:                                              ; preds = %147
  %169 = bitcast %"class.blink::DummyExceptionStateForTesting"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %169) #9
  %170 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %13, i64 0, i32 0, i32 0
  %171 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %13, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %171, align 8
  %172 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %13, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %172, align 2
  %173 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %13, i64 0, i32 0, i32 1, i32 2
  %174 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %13, i64 0, i32 0, i32 5, i32 0, i32 0
  %175 = bitcast %"class.WTF::StringImpl"** %174 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %175, i8 0, i64 16, i1 false) #9
  %176 = bitcast i8** %173 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %176, i8 0, i64 36, i1 false) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %170, align 8
  %177 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %13, i64 0, i32 0
  call void @_ZN5blink5Range8setStartEPNS_4NodeEjRNS_14ExceptionStateE(%"class.blink::Range"* %125, %"class.blink::Node"* %3, i32 %64, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %177) #9
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %13) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %169) #9
  %178 = bitcast %"class.blink::DummyExceptionStateForTesting"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %178) #9
  %179 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %14, i64 0, i32 0, i32 0
  %180 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %14, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %180, align 8
  %181 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %14, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %181, align 2
  %182 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %14, i64 0, i32 0, i32 1, i32 2
  %183 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %14, i64 0, i32 0, i32 5, i32 0, i32 0
  %184 = bitcast %"class.WTF::StringImpl"** %183 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %184, i8 0, i64 16, i1 false) #9
  %185 = bitcast i8** %182 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %185, i8 0, i64 36, i1 false) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %179, align 8
  %186 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %14, i64 0, i32 0
  call void @_ZN5blink5Range6setEndEPNS_4NodeEjRNS_14ExceptionStateE(%"class.blink::Range"* %125, %"class.blink::Node"* nonnull %1, i32 %2, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %186) #9
  br label %187

187:                                              ; preds = %149, %168, %128
  %188 = phi %"class.blink::DummyExceptionStateForTesting"* [ %12, %149 ], [ %14, %168 ], [ %10, %128 ]
  %189 = phi i8* [ %159, %149 ], [ %178, %168 ], [ %138, %128 ]
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %188) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %189) #9
  %190 = bitcast %"class.blink::SelectionTemplate"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %190) #9
  %191 = bitcast %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %191) #9
  call void @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7BuilderC1Ev(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* nonnull %16) #9
  %192 = call dereferenceable(40) %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder26SetBaseAndExtentDeprecatedERKNS_16PositionTemplateIS3_EES9_(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* nonnull %16, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %7, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %8) #9
  call void @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder5BuildEv(%"class.blink::SelectionTemplate"* nonnull sret %15, %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* %192) #9
  %193 = bitcast %"class.blink::SetSelectionOptions"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %193) #9
  %194 = bitcast %"class.blink::SetSelectionOptions::Builder"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %194) #9
  call void @_ZN5blink19SetSelectionOptions7BuilderC1Ev(%"class.blink::SetSelectionOptions::Builder"* nonnull %18) #9
  %195 = call dereferenceable(24) %"class.blink::SetSelectionOptions::Builder"* @_ZN5blink19SetSelectionOptions7Builder16SetIsDirectionalEb(%"class.blink::SetSelectionOptions::Builder"* nonnull %18, i1 zeroext true) #9
  call void @_ZNK5blink19SetSelectionOptions7Builder5BuildEv(%"class.blink::SetSelectionOptions"* nonnull sret %17, %"class.blink::SetSelectionOptions::Builder"* %195) #9
  call void @_ZNK5blink12DOMSelection20UpdateFrameSelectionERKNS_17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEEPNS_5RangeERKNS_19SetSelectionOptionsE(%"class.blink::DOMSelection"* %0, %"class.blink::SelectionTemplate"* nonnull dereferenceable(40) %15, %"class.blink::Range"* %125, %"class.blink::SetSelectionOptions"* nonnull dereferenceable(24) %17)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %194) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %193) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %191) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %190) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %119) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %117) #9
  br label %196

196:                                              ; preds = %70, %97, %82, %63, %89, %74, %6, %22, %187, %43
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12DOMSelection37ClearCachedRangeIfSelectionOfDocumentEv(%"class.blink::DOMSelection"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMSelection", %"class.blink::DOMSelection"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %3, i64 0, i32 2, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %5, i64 0, i32 1
  %7 = icmp eq %"class.blink::TreeScope"* %3, %6
  br i1 %7, label %8, label %16

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::DOMSelection", %"class.blink::DOMSelection"* %0, i64 0, i32 1
  %10 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %9) #9
  %11 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %10, i64 0, i32 0, i32 1, i32 0, i32 0
  %12 = bitcast %"class.blink::Frame"** %11 to %"class.blink::LocalFrame"**
  %13 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %13, i64 0, i32 14, i32 0, i32 0
  %15 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %14, align 8
  tail call void @_ZN5blink14FrameSelection24ClearDocumentCachedRangeEv(%"class.blink::FrameSelection"* %15) #9
  br label %16

16:                                               ; preds = %8, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %0, i64 0, i32 0, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %0, i64 0, i32 0
  tail call void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %9 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %0, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %10 = load i64*, i64** %9, align 8
  %11 = icmp eq i64* %10, null
  br i1 %11, label %22, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %0, i64 0, i32 0, i32 3
  %14 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %13, align 8
  %15 = bitcast %"class.v8::Isolate"* %14 to %"class.v8::internal::Isolate"*
  %16 = load i64, i64* %10, align 8
  %17 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %15, i64 %16) #9
  %18 = tail call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %14) #9
  br i1 %18, label %22, label %19

19:                                               ; preds = %12
  %20 = bitcast i64* %17 to %"class.v8::Value"*
  %21 = tail call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %14, %"class.v8::Value"* %20) #9
  br label %22

22:                                               ; preds = %19, %12, %8
  %23 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %0, i64 0, i32 0, i32 5, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %35

33:                                               ; preds = %26
  %34 = add i32 %32, -1
  store i32 %34, i32* %31, align 4
  br label %35

35:                                               ; preds = %33, %26
  %36 = phi i32 [ %34, %33 ], [ %32, %26 ]
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %35
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #9
  br label %39

39:                                               ; preds = %22, %35, %38
  ret void
}

declare zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEltERKS4_(%"class.blink::PositionTemplate"*, %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #1

declare dereferenceable(40) %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder26SetBaseAndExtentDeprecatedERKNS_16PositionTemplateIS3_EES9_(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"*, %"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12DOMSelection6modifyERKN3WTF6StringES4_S4_(%"class.blink::DOMSelection"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.WTF::StringView", align 8
  %14 = alloca %"class.WTF::StringView", align 8
  %15 = alloca %"class.WTF::StringView", align 8
  %16 = alloca %"class.WTF::StringView", align 8
  %17 = alloca %"class.WTF::StringView", align 8
  %18 = alloca %"class.WTF::StringView", align 8
  %19 = getelementptr inbounds %"class.blink::DOMSelection", %"class.blink::DOMSelection"* %0, i64 0, i32 1
  %20 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %19) #9
  %21 = icmp eq %"class.blink::LocalDOMWindow"* %20, null
  br i1 %21, label %390, label %22

22:                                               ; preds = %4
  %23 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %19) #9
  %24 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %23, i64 0, i32 0, i32 1, i32 0, i32 0
  %25 = bitcast %"class.blink::Frame"** %24 to %"class.blink::LocalFrame"**
  %26 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %26, i64 0, i32 14, i32 0, i32 0
  %28 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %27, align 8
  %29 = tail call zeroext i1 @_ZNK5blink14FrameSelection11IsAvailableEv(%"class.blink::FrameSelection"* %28) #9
  br i1 %29, label %30, label %390

30:                                               ; preds = %22
  %31 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #9
  %32 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %35, label %39

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %36, align 8
  %37 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %38 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %37, i64* %38, align 8
  br label %46

39:                                               ; preds = %30
  %40 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %33, %"class.WTF::StringImpl"** %40, align 8
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 1
  %44 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %45 = bitcast i8** %44 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %43, %"class.WTF::StringImpl"** %45, align 8
  br label %46

46:                                               ; preds = %35, %39
  %47 = phi i32 [ %42, %39 ], [ 0, %35 ]
  %48 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %47, i32* %48, align 8
  %49 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm7EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %5, [7 x i8]* nonnull dereferenceable(7) @.str.4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #9
  br i1 %49, label %69, label %50

50:                                               ; preds = %46
  %51 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #9
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %54, label %58

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %55, align 8
  %56 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %57 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %56, i64* %57, align 8
  br label %65

58:                                               ; preds = %50
  %59 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %52, %"class.WTF::StringImpl"** %59, align 8
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 1
  %61 = load i32, i32* %60, align 4
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 1
  %63 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %64 = bitcast i8** %63 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %62, %"class.WTF::StringImpl"** %64, align 8
  br label %65

65:                                               ; preds = %54, %58
  %66 = phi i32 [ %61, %58 ], [ 0, %54 ]
  %67 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %66, i32* %67, align 8
  %68 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %6, [5 x i8]* nonnull dereferenceable(5) @.str.5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #9
  br i1 %68, label %69, label %390

69:                                               ; preds = %65, %46
  %70 = phi i32 [ 1, %46 ], [ 0, %65 ]
  %71 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #9
  %72 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %75, label %79

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* null, i8** %76, align 8
  %77 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %78 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %77, i64* %78, align 8
  br label %86

79:                                               ; preds = %69
  %80 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %73, %"class.WTF::StringImpl"** %80, align 8
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 1
  %82 = load i32, i32* %81, align 4
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 1
  %84 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %85 = bitcast i8** %84 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %83, %"class.WTF::StringImpl"** %85, align 8
  br label %86

86:                                               ; preds = %75, %79
  %87 = phi i32 [ %82, %79 ], [ 0, %75 ]
  %88 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %87, i32* %88, align 8
  %89 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm8EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %7, [8 x i8]* nonnull dereferenceable(8) @.str.6)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #9
  br i1 %89, label %147, label %90

90:                                               ; preds = %86
  %91 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %91) #9
  %92 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %93 = icmp eq %"class.WTF::StringImpl"* %92, null
  br i1 %93, label %94, label %98

94:                                               ; preds = %90
  %95 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* null, i8** %95, align 8
  %96 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %97 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %96, i64* %97, align 8
  br label %105

98:                                               ; preds = %90
  %99 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %92, %"class.WTF::StringImpl"** %99, align 8
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 1
  %101 = load i32, i32* %100, align 4
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 1
  %103 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %104 = bitcast i8** %103 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %102, %"class.WTF::StringImpl"** %104, align 8
  br label %105

105:                                              ; preds = %94, %98
  %106 = phi i32 [ %101, %98 ], [ 0, %94 ]
  %107 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %106, i32* %107, align 8
  %108 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm9EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %8, [9 x i8]* nonnull dereferenceable(9) @.str.7)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %91) #9
  br i1 %108, label %147, label %109

109:                                              ; preds = %105
  %110 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %110) #9
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %112 = icmp eq %"class.WTF::StringImpl"* %111, null
  br i1 %112, label %113, label %117

113:                                              ; preds = %109
  %114 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* null, i8** %114, align 8
  %115 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %116 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %115, i64* %116, align 8
  br label %124

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 0
  store %"class.WTF::StringImpl"* %111, %"class.WTF::StringImpl"** %118, align 8
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 1
  %120 = load i32, i32* %119, align 4
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 1
  %122 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %123 = bitcast i8** %122 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %121, %"class.WTF::StringImpl"** %123, align 8
  br label %124

124:                                              ; preds = %113, %117
  %125 = phi i32 [ %120, %117 ], [ 0, %113 ]
  %126 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 %125, i32* %126, align 8
  %127 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %9, [5 x i8]* nonnull dereferenceable(5) @.str.8)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %110) #9
  br i1 %127, label %147, label %128

128:                                              ; preds = %124
  %129 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %129) #9
  %130 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %131 = icmp eq %"class.WTF::StringImpl"* %130, null
  br i1 %131, label %132, label %136

132:                                              ; preds = %128
  %133 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* null, i8** %133, align 8
  %134 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %135 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %134, i64* %135, align 8
  br label %143

136:                                              ; preds = %128
  %137 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 0
  store %"class.WTF::StringImpl"* %130, %"class.WTF::StringImpl"** %137, align 8
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 1
  %139 = load i32, i32* %138, align 4
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 1
  %141 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  %142 = bitcast i8** %141 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %140, %"class.WTF::StringImpl"** %142, align 8
  br label %143

143:                                              ; preds = %132, %136
  %144 = phi i32 [ %139, %136 ], [ 0, %132 ]
  %145 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 %144, i32* %145, align 8
  %146 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm6EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %10, [6 x i8]* nonnull dereferenceable(6) @.str.9)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %129) #9
  br i1 %146, label %147, label %390

147:                                              ; preds = %143, %124, %105, %86
  %148 = phi i32 [ 1, %86 ], [ 0, %105 ], [ 2, %124 ], [ 3, %143 ]
  %149 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %149) #9
  %150 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %151 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %150, align 8
  %152 = icmp eq %"class.WTF::StringImpl"* %151, null
  br i1 %152, label %153, label %157

153:                                              ; preds = %147
  %154 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* null, i8** %154, align 8
  %155 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %156 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %155, i64* %156, align 8
  br label %164

157:                                              ; preds = %147
  %158 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 0
  store %"class.WTF::StringImpl"* %151, %"class.WTF::StringImpl"** %158, align 8
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %151, i64 0, i32 1
  %160 = load i32, i32* %159, align 4
  %161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %151, i64 1
  %162 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  %163 = bitcast i8** %162 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %161, %"class.WTF::StringImpl"** %163, align 8
  br label %164

164:                                              ; preds = %153, %157
  %165 = phi i32 [ %160, %157 ], [ 0, %153 ]
  %166 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 %165, i32* %166, align 8
  %167 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm10EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %11, [10 x i8]* nonnull dereferenceable(10) @.str.10)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %149) #9
  br i1 %167, label %356, label %168

168:                                              ; preds = %164
  %169 = bitcast %"class.WTF::StringView"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %169) #9
  %170 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %150, align 8
  %171 = icmp eq %"class.WTF::StringImpl"* %170, null
  br i1 %171, label %172, label %176

172:                                              ; preds = %168
  %173 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  store i8* null, i8** %173, align 8
  %174 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %175 = bitcast %"class.WTF::StringView"* %12 to i64*
  store i64 %174, i64* %175, align 8
  br label %183

176:                                              ; preds = %168
  %177 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 0
  store %"class.WTF::StringImpl"* %170, %"class.WTF::StringImpl"** %177, align 8
  %178 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %170, i64 0, i32 1
  %179 = load i32, i32* %178, align 4
  %180 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %170, i64 1
  %181 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  %182 = bitcast i8** %181 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %180, %"class.WTF::StringImpl"** %182, align 8
  br label %183

183:                                              ; preds = %172, %176
  %184 = phi i32 [ %179, %176 ], [ 0, %172 ]
  %185 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 %184, i32* %185, align 8
  %186 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %12, [5 x i8]* nonnull dereferenceable(5) @.str.11)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %169) #9
  br i1 %186, label %356, label %187

187:                                              ; preds = %183
  %188 = bitcast %"class.WTF::StringView"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %188) #9
  %189 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %150, align 8
  %190 = icmp eq %"class.WTF::StringImpl"* %189, null
  br i1 %190, label %191, label %195

191:                                              ; preds = %187
  %192 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  store i8* null, i8** %192, align 8
  %193 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %194 = bitcast %"class.WTF::StringView"* %13 to i64*
  store i64 %193, i64* %194, align 8
  br label %202

195:                                              ; preds = %187
  %196 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 0
  store %"class.WTF::StringImpl"* %189, %"class.WTF::StringImpl"** %196, align 8
  %197 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %189, i64 0, i32 1
  %198 = load i32, i32* %197, align 4
  %199 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %189, i64 1
  %200 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  %201 = bitcast i8** %200 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %199, %"class.WTF::StringImpl"** %201, align 8
  br label %202

202:                                              ; preds = %191, %195
  %203 = phi i32 [ %198, %195 ], [ 0, %191 ]
  %204 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  store i32 %203, i32* %204, align 8
  %205 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm9EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %13, [9 x i8]* nonnull dereferenceable(9) @.str.12)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %188) #9
  br i1 %205, label %356, label %206

206:                                              ; preds = %202
  %207 = bitcast %"class.WTF::StringView"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %207) #9
  %208 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %150, align 8
  %209 = icmp eq %"class.WTF::StringImpl"* %208, null
  br i1 %209, label %210, label %214

210:                                              ; preds = %206
  %211 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  store i8* null, i8** %211, align 8
  %212 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %213 = bitcast %"class.WTF::StringView"* %14 to i64*
  store i64 %212, i64* %213, align 8
  br label %221

214:                                              ; preds = %206
  %215 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 0
  store %"class.WTF::StringImpl"* %208, %"class.WTF::StringImpl"** %215, align 8
  %216 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 1
  %217 = load i32, i32* %216, align 4
  %218 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 1
  %219 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  %220 = bitcast i8** %219 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %218, %"class.WTF::StringImpl"** %220, align 8
  br label %221

221:                                              ; preds = %210, %214
  %222 = phi i32 [ %217, %214 ], [ 0, %210 ]
  %223 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  store i32 %222, i32* %223, align 8
  %224 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %14, [5 x i8]* nonnull dereferenceable(5) @.str.13)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %207) #9
  br i1 %224, label %356, label %225

225:                                              ; preds = %221
  %226 = bitcast %"class.WTF::StringView"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %226) #9
  %227 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %150, align 8
  %228 = icmp eq %"class.WTF::StringImpl"* %227, null
  br i1 %228, label %229, label %233

229:                                              ; preds = %225
  %230 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  store i8* null, i8** %230, align 8
  %231 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %232 = bitcast %"class.WTF::StringView"* %15 to i64*
  store i64 %231, i64* %232, align 8
  br label %240

233:                                              ; preds = %225
  %234 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 0
  store %"class.WTF::StringImpl"* %227, %"class.WTF::StringImpl"** %234, align 8
  %235 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 0, i32 1
  %236 = load i32, i32* %235, align 4
  %237 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 1
  %238 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  %239 = bitcast i8** %238 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %237, %"class.WTF::StringImpl"** %239, align 8
  br label %240

240:                                              ; preds = %229, %233
  %241 = phi i32 [ %236, %233 ], [ 0, %229 ]
  %242 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 2
  store i32 %241, i32* %242, align 8
  %243 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm10EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %15, [10 x i8]* nonnull dereferenceable(10) @.str.14)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %226) #9
  br i1 %243, label %356, label %244

244:                                              ; preds = %240
  %245 = bitcast %"class.WTF::StringView"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %245) #9
  %246 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %150, align 8
  %247 = icmp eq %"class.WTF::StringImpl"* %246, null
  br i1 %247, label %248, label %252

248:                                              ; preds = %244
  %249 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 1
  store i8* null, i8** %249, align 8
  %250 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %251 = bitcast %"class.WTF::StringView"* %16 to i64*
  store i64 %250, i64* %251, align 8
  br label %259

252:                                              ; preds = %244
  %253 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 0
  store %"class.WTF::StringImpl"* %246, %"class.WTF::StringImpl"** %253, align 8
  %254 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %246, i64 0, i32 1
  %255 = load i32, i32* %254, align 4
  %256 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %246, i64 1
  %257 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 1
  %258 = bitcast i8** %257 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %256, %"class.WTF::StringImpl"** %258, align 8
  br label %259

259:                                              ; preds = %248, %252
  %260 = phi i32 [ %255, %252 ], [ 0, %248 ]
  %261 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 2
  store i32 %260, i32* %261, align 8
  %262 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm13EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %16, [13 x i8]* nonnull dereferenceable(13) @.str.15)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %245) #9
  br i1 %262, label %356, label %263

263:                                              ; preds = %259
  %264 = bitcast %"class.WTF::StringView"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %264) #9
  %265 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %150, align 8
  %266 = icmp eq %"class.WTF::StringImpl"* %265, null
  br i1 %266, label %267, label %271

267:                                              ; preds = %263
  %268 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 1
  store i8* null, i8** %268, align 8
  %269 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %270 = bitcast %"class.WTF::StringView"* %17 to i64*
  store i64 %269, i64* %270, align 8
  br label %278

271:                                              ; preds = %263
  %272 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 0
  store %"class.WTF::StringImpl"* %265, %"class.WTF::StringImpl"** %272, align 8
  %273 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %265, i64 0, i32 1
  %274 = load i32, i32* %273, align 4
  %275 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %265, i64 1
  %276 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 1
  %277 = bitcast i8** %276 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %275, %"class.WTF::StringImpl"** %277, align 8
  br label %278

278:                                              ; preds = %267, %271
  %279 = phi i32 [ %274, %271 ], [ 0, %267 ]
  %280 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 2
  store i32 %279, i32* %280, align 8
  %281 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm17EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %17, [17 x i8]* nonnull dereferenceable(17) @.str.16)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %264) #9
  br i1 %281, label %356, label %282

282:                                              ; preds = %278
  %283 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %150, align 8
  %284 = icmp eq %"class.WTF::StringImpl"* %283, null
  br i1 %284, label %340, label %285

285:                                              ; preds = %282
  %286 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %283, i64 0, i32 1
  %287 = load i32, i32* %286, align 4
  %288 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %283, i64 1
  %289 = bitcast %"class.WTF::StringImpl"* %288 to i8*
  %290 = icmp eq i32 %287, 17
  br i1 %290, label %293, label %291

291:                                              ; preds = %285
  %292 = bitcast %"class.WTF::StringView"* %18 to i8*
  br label %345

293:                                              ; preds = %285
  %294 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %283, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %295 = load atomic i32, i32* %294 monotonic, align 4
  %296 = and i32 %295, 1
  %297 = icmp eq i32 %296, 0
  br i1 %297, label %316, label %300

298:                                              ; preds = %300
  %299 = icmp eq i64 %315, 17
  br i1 %299, label %356, label %409

300:                                              ; preds = %293, %423
  %301 = phi i64 [ %424, %423 ], [ 0, %293 ]
  %302 = getelementptr inbounds i8, i8* %289, i64 %301
  %303 = load i8, i8* %302, align 1
  %304 = zext i8 %303 to i64
  %305 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %304
  %306 = load i8, i8* %305, align 1
  %307 = zext i8 %306 to i32
  %308 = getelementptr inbounds [18 x i8], [18 x i8]* @.str.17, i64 0, i64 %301
  %309 = load i8, i8* %308, align 1
  %310 = zext i8 %309 to i64
  %311 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %310
  %312 = load i8, i8* %311, align 1
  %313 = sext i8 %312 to i32
  %314 = icmp eq i32 %307, %313
  %315 = or i64 %301, 1
  br i1 %314, label %298, label %338

316:                                              ; preds = %293
  %317 = bitcast %"class.WTF::StringImpl"* %288 to i16*
  br label %320

318:                                              ; preds = %320
  %319 = icmp eq i64 %337, 17
  br i1 %319, label %356, label %391

320:                                              ; preds = %407, %316
  %321 = phi i64 [ 0, %316 ], [ %408, %407 ]
  %322 = getelementptr inbounds i16, i16* %317, i64 %321
  %323 = load i16, i16* %322, align 2
  %324 = add i16 %323, -65
  %325 = icmp ult i16 %324, 26
  %326 = zext i1 %325 to i16
  %327 = shl nuw nsw i16 %326, 5
  %328 = or i16 %327, %323
  %329 = zext i16 %328 to i32
  %330 = getelementptr inbounds [18 x i8], [18 x i8]* @.str.17, i64 0, i64 %321
  %331 = load i8, i8* %330, align 1
  %332 = zext i8 %331 to i64
  %333 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %332
  %334 = load i8, i8* %333, align 1
  %335 = sext i8 %334 to i32
  %336 = icmp eq i32 %329, %335
  %337 = or i64 %321, 1
  br i1 %336, label %318, label %338

338:                                              ; preds = %300, %409, %320, %391
  %339 = bitcast %"class.WTF::StringView"* %18 to i8*
  br label %345

340:                                              ; preds = %282
  %341 = bitcast %"class.WTF::StringView"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %341) #9
  %342 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 1
  store i8* null, i8** %342, align 8
  %343 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %344 = bitcast %"class.WTF::StringView"* %18 to i64*
  store i64 %343, i64* %344, align 8
  br label %351

345:                                              ; preds = %338, %291
  %346 = phi i8* [ %339, %338 ], [ %292, %291 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %346) #9
  %347 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 0
  store %"class.WTF::StringImpl"* %283, %"class.WTF::StringImpl"** %347, align 8
  %348 = load i32, i32* %286, align 4
  %349 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 1
  %350 = bitcast i8** %349 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %288, %"class.WTF::StringImpl"** %350, align 8
  br label %351

351:                                              ; preds = %340, %345
  %352 = phi i8* [ %346, %345 ], [ %341, %340 ]
  %353 = phi i32 [ %348, %345 ], [ 0, %340 ]
  %354 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 2
  store i32 %353, i32* %354, align 8
  %355 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm17EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %18, [17 x i8]* nonnull dereferenceable(17) @.str.18)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %352) #9
  br i1 %355, label %356, label %390

356:                                              ; preds = %298, %318, %351, %278, %259, %240, %221, %202, %183, %164
  %357 = phi i32 [ 0, %164 ], [ 1, %183 ], [ 2, %202 ], [ 3, %221 ], [ 4, %240 ], [ 6, %259 ], [ 5, %278 ], [ 8, %351 ], [ 7, %318 ], [ 7, %298 ]
  %358 = call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %19) #9
  %359 = call %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"* %358) #9
  call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %359, i32 21) #9
  %360 = call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %19) #9
  %361 = call %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"* %360) #9
  %362 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %361, i64 0, i32 43, i32 0, i32 0
  %363 = load %"class.blink::Element"*, %"class.blink::Element"** %362, align 8
  %364 = call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %19) #9
  %365 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %364, i64 0, i32 0, i32 1, i32 0, i32 0
  %366 = bitcast %"class.blink::Frame"** %365 to %"class.blink::LocalFrame"**
  %367 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %366, align 8
  %368 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %367, i64 0, i32 14, i32 0, i32 0
  %369 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %368, align 8
  %370 = call zeroext i1 @_ZN5blink14FrameSelection6ModifyENS_25SelectionModifyAlterationENS_24SelectionModifyDirectionENS_15TextGranularityENS_14SetSelectionByE(%"class.blink::FrameSelection"* %369, i32 %70, i32 %148, i32 %357, i32 0) #9
  %371 = call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %19) #9
  %372 = icmp eq %"class.blink::LocalDOMWindow"* %371, null
  br i1 %372, label %390, label %373

373:                                              ; preds = %356
  %374 = call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %19) #9
  %375 = call %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"* %374) #9
  %376 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %375, i64 0, i32 43, i32 0, i32 0
  %377 = load %"class.blink::Element"*, %"class.blink::Element"** %376, align 8
  %378 = icmp eq %"class.blink::Element"* %363, %377
  br i1 %378, label %390, label %379

379:                                              ; preds = %373
  %380 = call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %19) #9
  %381 = icmp eq %"class.blink::LocalDOMWindow"* %380, null
  %382 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %380, i64 0, i32 1, i32 3
  %383 = icmp eq %"class.blink::UseCounter"* %382, null
  %384 = or i1 %381, %383
  br i1 %384, label %390, label %385

385:                                              ; preds = %379
  %386 = bitcast %"class.blink::UseCounter"* %382 to void (%"class.blink::UseCounter"*, i32)***
  %387 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %386, align 8
  %388 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %387, i64 3
  %389 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %388, align 8
  call void %389(%"class.blink::UseCounter"* nonnull %382, i32 1837) #9
  br label %390

390:                                              ; preds = %4, %385, %379, %65, %351, %373, %356, %143, %22
  ret void

391:                                              ; preds = %318
  %392 = getelementptr inbounds i16, i16* %317, i64 %337
  %393 = load i16, i16* %392, align 2
  %394 = add i16 %393, -65
  %395 = icmp ult i16 %394, 26
  %396 = zext i1 %395 to i16
  %397 = shl nuw nsw i16 %396, 5
  %398 = or i16 %397, %393
  %399 = zext i16 %398 to i32
  %400 = getelementptr inbounds [18 x i8], [18 x i8]* @.str.17, i64 0, i64 %337
  %401 = load i8, i8* %400, align 1
  %402 = zext i8 %401 to i64
  %403 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %402
  %404 = load i8, i8* %403, align 1
  %405 = sext i8 %404 to i32
  %406 = icmp eq i32 %399, %405
  br i1 %406, label %407, label %338

407:                                              ; preds = %391
  %408 = add nuw nsw i64 %321, 2
  br label %320

409:                                              ; preds = %298
  %410 = getelementptr inbounds i8, i8* %289, i64 %315
  %411 = load i8, i8* %410, align 1
  %412 = zext i8 %411 to i64
  %413 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %412
  %414 = load i8, i8* %413, align 1
  %415 = zext i8 %414 to i32
  %416 = getelementptr inbounds [18 x i8], [18 x i8]* @.str.17, i64 0, i64 %315
  %417 = load i8, i8* %416, align 1
  %418 = zext i8 %417 to i64
  %419 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %418
  %420 = load i8, i8* %419, align 1
  %421 = sext i8 %420 to i32
  %422 = icmp eq i32 %415, %421
  br i1 %422, label %423, label %338

423:                                              ; preds = %409
  %424 = add nuw nsw i64 %301, 2
  br label %300
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm7EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [7 x i8]* dereferenceable(7)) local_unnamed_addr #6 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 6
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %141, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %183, %14, %28, %141, %155, %169, %42, %59, %77, %93, %109, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %93 ], [ false, %109 ], [ false, %14 ], [ false, %28 ], [ false, %141 ], [ false, %155 ], [ false, %169 ], [ %196, %183 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  br i1 %108, label %109, label %75

109:                                              ; preds = %93
  %110 = getelementptr inbounds i16, i16* %44, i64 4
  %111 = load i16, i16* %110, align 2
  %112 = add i16 %111, -65
  %113 = icmp ult i16 %112, 26
  %114 = zext i1 %113 to i16
  %115 = shl nuw nsw i16 %114, 5
  %116 = or i16 %115, %111
  %117 = zext i16 %116 to i32
  %118 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 4
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = sext i8 %122 to i32
  %124 = icmp eq i32 %117, %123
  br i1 %124, label %125, label %75

125:                                              ; preds = %109
  %126 = getelementptr inbounds i16, i16* %44, i64 5
  %127 = load i16, i16* %126, align 2
  %128 = add i16 %127, -65
  %129 = icmp ult i16 %128, 26
  %130 = zext i1 %129 to i16
  %131 = shl nuw nsw i16 %130, 5
  %132 = or i16 %131, %127
  %133 = zext i16 %132 to i32
  %134 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 5
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i64
  %137 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = sext i8 %138 to i32
  %140 = icmp eq i32 %133, %139
  ret i1 %140

141:                                              ; preds = %28
  %142 = getelementptr inbounds i8, i8* %15, i64 2
  %143 = load i8, i8* %142, align 1
  %144 = zext i8 %143 to i64
  %145 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %144
  %146 = load i8, i8* %145, align 1
  %147 = zext i8 %146 to i32
  %148 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 2
  %149 = load i8, i8* %148, align 1
  %150 = zext i8 %149 to i64
  %151 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %150
  %152 = load i8, i8* %151, align 1
  %153 = sext i8 %152 to i32
  %154 = icmp eq i32 %147, %153
  br i1 %154, label %155, label %75

155:                                              ; preds = %141
  %156 = getelementptr inbounds i8, i8* %15, i64 3
  %157 = load i8, i8* %156, align 1
  %158 = zext i8 %157 to i64
  %159 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %158
  %160 = load i8, i8* %159, align 1
  %161 = zext i8 %160 to i32
  %162 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 3
  %163 = load i8, i8* %162, align 1
  %164 = zext i8 %163 to i64
  %165 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %164
  %166 = load i8, i8* %165, align 1
  %167 = sext i8 %166 to i32
  %168 = icmp eq i32 %161, %167
  br i1 %168, label %169, label %75

169:                                              ; preds = %155
  %170 = getelementptr inbounds i8, i8* %15, i64 4
  %171 = load i8, i8* %170, align 1
  %172 = zext i8 %171 to i64
  %173 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %172
  %174 = load i8, i8* %173, align 1
  %175 = zext i8 %174 to i32
  %176 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 4
  %177 = load i8, i8* %176, align 1
  %178 = zext i8 %177 to i64
  %179 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %178
  %180 = load i8, i8* %179, align 1
  %181 = sext i8 %180 to i32
  %182 = icmp eq i32 %175, %181
  br i1 %182, label %183, label %75

183:                                              ; preds = %169
  %184 = getelementptr inbounds i8, i8* %15, i64 5
  %185 = load i8, i8* %184, align 1
  %186 = zext i8 %185 to i64
  %187 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %186
  %188 = load i8, i8* %187, align 1
  %189 = zext i8 %188 to i32
  %190 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 5
  %191 = load i8, i8* %190, align 1
  %192 = zext i8 %191 to i64
  %193 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %192
  %194 = load i8, i8* %193, align 1
  %195 = sext i8 %194 to i32
  %196 = icmp eq i32 %189, %195
  br label %75
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [5 x i8]* dereferenceable(5)) local_unnamed_addr #6 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 4
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %109, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %123, %14, %28, %109, %42, %59, %77, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %14 ], [ false, %28 ], [ false, %109 ], [ %136, %123 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  ret i1 %108

109:                                              ; preds = %28
  %110 = getelementptr inbounds i8, i8* %15, i64 2
  %111 = load i8, i8* %110, align 1
  %112 = zext i8 %111 to i64
  %113 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %112
  %114 = load i8, i8* %113, align 1
  %115 = zext i8 %114 to i32
  %116 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 2
  %117 = load i8, i8* %116, align 1
  %118 = zext i8 %117 to i64
  %119 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %118
  %120 = load i8, i8* %119, align 1
  %121 = sext i8 %120 to i32
  %122 = icmp eq i32 %115, %121
  br i1 %122, label %123, label %75

123:                                              ; preds = %109
  %124 = getelementptr inbounds i8, i8* %15, i64 3
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i64
  %127 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %126
  %128 = load i8, i8* %127, align 1
  %129 = zext i8 %128 to i32
  %130 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 3
  %131 = load i8, i8* %130, align 1
  %132 = zext i8 %131 to i64
  %133 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %132
  %134 = load i8, i8* %133, align 1
  %135 = sext i8 %134 to i32
  %136 = icmp eq i32 %129, %135
  br label %75
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm8EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [8 x i8]* dereferenceable(8)) local_unnamed_addr #6 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 7
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %157, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %213, %14, %28, %157, %171, %185, %199, %42, %59, %77, %93, %109, %125, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %93 ], [ false, %109 ], [ false, %125 ], [ false, %14 ], [ false, %28 ], [ false, %157 ], [ false, %171 ], [ false, %185 ], [ false, %199 ], [ %226, %213 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  br i1 %108, label %109, label %75

109:                                              ; preds = %93
  %110 = getelementptr inbounds i16, i16* %44, i64 4
  %111 = load i16, i16* %110, align 2
  %112 = add i16 %111, -65
  %113 = icmp ult i16 %112, 26
  %114 = zext i1 %113 to i16
  %115 = shl nuw nsw i16 %114, 5
  %116 = or i16 %115, %111
  %117 = zext i16 %116 to i32
  %118 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 4
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = sext i8 %122 to i32
  %124 = icmp eq i32 %117, %123
  br i1 %124, label %125, label %75

125:                                              ; preds = %109
  %126 = getelementptr inbounds i16, i16* %44, i64 5
  %127 = load i16, i16* %126, align 2
  %128 = add i16 %127, -65
  %129 = icmp ult i16 %128, 26
  %130 = zext i1 %129 to i16
  %131 = shl nuw nsw i16 %130, 5
  %132 = or i16 %131, %127
  %133 = zext i16 %132 to i32
  %134 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 5
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i64
  %137 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = sext i8 %138 to i32
  %140 = icmp eq i32 %133, %139
  br i1 %140, label %141, label %75

141:                                              ; preds = %125
  %142 = getelementptr inbounds i16, i16* %44, i64 6
  %143 = load i16, i16* %142, align 2
  %144 = add i16 %143, -65
  %145 = icmp ult i16 %144, 26
  %146 = zext i1 %145 to i16
  %147 = shl nuw nsw i16 %146, 5
  %148 = or i16 %147, %143
  %149 = zext i16 %148 to i32
  %150 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 6
  %151 = load i8, i8* %150, align 1
  %152 = zext i8 %151 to i64
  %153 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %152
  %154 = load i8, i8* %153, align 1
  %155 = sext i8 %154 to i32
  %156 = icmp eq i32 %149, %155
  ret i1 %156

157:                                              ; preds = %28
  %158 = getelementptr inbounds i8, i8* %15, i64 2
  %159 = load i8, i8* %158, align 1
  %160 = zext i8 %159 to i64
  %161 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %160
  %162 = load i8, i8* %161, align 1
  %163 = zext i8 %162 to i32
  %164 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 2
  %165 = load i8, i8* %164, align 1
  %166 = zext i8 %165 to i64
  %167 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %166
  %168 = load i8, i8* %167, align 1
  %169 = sext i8 %168 to i32
  %170 = icmp eq i32 %163, %169
  br i1 %170, label %171, label %75

171:                                              ; preds = %157
  %172 = getelementptr inbounds i8, i8* %15, i64 3
  %173 = load i8, i8* %172, align 1
  %174 = zext i8 %173 to i64
  %175 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %174
  %176 = load i8, i8* %175, align 1
  %177 = zext i8 %176 to i32
  %178 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 3
  %179 = load i8, i8* %178, align 1
  %180 = zext i8 %179 to i64
  %181 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %180
  %182 = load i8, i8* %181, align 1
  %183 = sext i8 %182 to i32
  %184 = icmp eq i32 %177, %183
  br i1 %184, label %185, label %75

185:                                              ; preds = %171
  %186 = getelementptr inbounds i8, i8* %15, i64 4
  %187 = load i8, i8* %186, align 1
  %188 = zext i8 %187 to i64
  %189 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %188
  %190 = load i8, i8* %189, align 1
  %191 = zext i8 %190 to i32
  %192 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 4
  %193 = load i8, i8* %192, align 1
  %194 = zext i8 %193 to i64
  %195 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %194
  %196 = load i8, i8* %195, align 1
  %197 = sext i8 %196 to i32
  %198 = icmp eq i32 %191, %197
  br i1 %198, label %199, label %75

199:                                              ; preds = %185
  %200 = getelementptr inbounds i8, i8* %15, i64 5
  %201 = load i8, i8* %200, align 1
  %202 = zext i8 %201 to i64
  %203 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %202
  %204 = load i8, i8* %203, align 1
  %205 = zext i8 %204 to i32
  %206 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 5
  %207 = load i8, i8* %206, align 1
  %208 = zext i8 %207 to i64
  %209 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %208
  %210 = load i8, i8* %209, align 1
  %211 = sext i8 %210 to i32
  %212 = icmp eq i32 %205, %211
  br i1 %212, label %213, label %75

213:                                              ; preds = %199
  %214 = getelementptr inbounds i8, i8* %15, i64 6
  %215 = load i8, i8* %214, align 1
  %216 = zext i8 %215 to i64
  %217 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %216
  %218 = load i8, i8* %217, align 1
  %219 = zext i8 %218 to i32
  %220 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 6
  %221 = load i8, i8* %220, align 1
  %222 = zext i8 %221 to i64
  %223 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %222
  %224 = load i8, i8* %223, align 1
  %225 = sext i8 %224 to i32
  %226 = icmp eq i32 %219, %225
  br label %75
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm9EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [9 x i8]* dereferenceable(9)) local_unnamed_addr #6 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 8
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %173, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %243, %14, %28, %173, %187, %201, %215, %229, %42, %59, %77, %93, %109, %125, %141, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %93 ], [ false, %109 ], [ false, %125 ], [ false, %141 ], [ false, %14 ], [ false, %28 ], [ false, %173 ], [ false, %187 ], [ false, %201 ], [ false, %215 ], [ false, %229 ], [ %256, %243 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  br i1 %108, label %109, label %75

109:                                              ; preds = %93
  %110 = getelementptr inbounds i16, i16* %44, i64 4
  %111 = load i16, i16* %110, align 2
  %112 = add i16 %111, -65
  %113 = icmp ult i16 %112, 26
  %114 = zext i1 %113 to i16
  %115 = shl nuw nsw i16 %114, 5
  %116 = or i16 %115, %111
  %117 = zext i16 %116 to i32
  %118 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 4
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = sext i8 %122 to i32
  %124 = icmp eq i32 %117, %123
  br i1 %124, label %125, label %75

125:                                              ; preds = %109
  %126 = getelementptr inbounds i16, i16* %44, i64 5
  %127 = load i16, i16* %126, align 2
  %128 = add i16 %127, -65
  %129 = icmp ult i16 %128, 26
  %130 = zext i1 %129 to i16
  %131 = shl nuw nsw i16 %130, 5
  %132 = or i16 %131, %127
  %133 = zext i16 %132 to i32
  %134 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 5
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i64
  %137 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = sext i8 %138 to i32
  %140 = icmp eq i32 %133, %139
  br i1 %140, label %141, label %75

141:                                              ; preds = %125
  %142 = getelementptr inbounds i16, i16* %44, i64 6
  %143 = load i16, i16* %142, align 2
  %144 = add i16 %143, -65
  %145 = icmp ult i16 %144, 26
  %146 = zext i1 %145 to i16
  %147 = shl nuw nsw i16 %146, 5
  %148 = or i16 %147, %143
  %149 = zext i16 %148 to i32
  %150 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 6
  %151 = load i8, i8* %150, align 1
  %152 = zext i8 %151 to i64
  %153 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %152
  %154 = load i8, i8* %153, align 1
  %155 = sext i8 %154 to i32
  %156 = icmp eq i32 %149, %155
  br i1 %156, label %157, label %75

157:                                              ; preds = %141
  %158 = getelementptr inbounds i16, i16* %44, i64 7
  %159 = load i16, i16* %158, align 2
  %160 = add i16 %159, -65
  %161 = icmp ult i16 %160, 26
  %162 = zext i1 %161 to i16
  %163 = shl nuw nsw i16 %162, 5
  %164 = or i16 %163, %159
  %165 = zext i16 %164 to i32
  %166 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 7
  %167 = load i8, i8* %166, align 1
  %168 = zext i8 %167 to i64
  %169 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %168
  %170 = load i8, i8* %169, align 1
  %171 = sext i8 %170 to i32
  %172 = icmp eq i32 %165, %171
  ret i1 %172

173:                                              ; preds = %28
  %174 = getelementptr inbounds i8, i8* %15, i64 2
  %175 = load i8, i8* %174, align 1
  %176 = zext i8 %175 to i64
  %177 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %176
  %178 = load i8, i8* %177, align 1
  %179 = zext i8 %178 to i32
  %180 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 2
  %181 = load i8, i8* %180, align 1
  %182 = zext i8 %181 to i64
  %183 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %182
  %184 = load i8, i8* %183, align 1
  %185 = sext i8 %184 to i32
  %186 = icmp eq i32 %179, %185
  br i1 %186, label %187, label %75

187:                                              ; preds = %173
  %188 = getelementptr inbounds i8, i8* %15, i64 3
  %189 = load i8, i8* %188, align 1
  %190 = zext i8 %189 to i64
  %191 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %190
  %192 = load i8, i8* %191, align 1
  %193 = zext i8 %192 to i32
  %194 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 3
  %195 = load i8, i8* %194, align 1
  %196 = zext i8 %195 to i64
  %197 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %196
  %198 = load i8, i8* %197, align 1
  %199 = sext i8 %198 to i32
  %200 = icmp eq i32 %193, %199
  br i1 %200, label %201, label %75

201:                                              ; preds = %187
  %202 = getelementptr inbounds i8, i8* %15, i64 4
  %203 = load i8, i8* %202, align 1
  %204 = zext i8 %203 to i64
  %205 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %204
  %206 = load i8, i8* %205, align 1
  %207 = zext i8 %206 to i32
  %208 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 4
  %209 = load i8, i8* %208, align 1
  %210 = zext i8 %209 to i64
  %211 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %210
  %212 = load i8, i8* %211, align 1
  %213 = sext i8 %212 to i32
  %214 = icmp eq i32 %207, %213
  br i1 %214, label %215, label %75

215:                                              ; preds = %201
  %216 = getelementptr inbounds i8, i8* %15, i64 5
  %217 = load i8, i8* %216, align 1
  %218 = zext i8 %217 to i64
  %219 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %218
  %220 = load i8, i8* %219, align 1
  %221 = zext i8 %220 to i32
  %222 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 5
  %223 = load i8, i8* %222, align 1
  %224 = zext i8 %223 to i64
  %225 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %224
  %226 = load i8, i8* %225, align 1
  %227 = sext i8 %226 to i32
  %228 = icmp eq i32 %221, %227
  br i1 %228, label %229, label %75

229:                                              ; preds = %215
  %230 = getelementptr inbounds i8, i8* %15, i64 6
  %231 = load i8, i8* %230, align 1
  %232 = zext i8 %231 to i64
  %233 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %232
  %234 = load i8, i8* %233, align 1
  %235 = zext i8 %234 to i32
  %236 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 6
  %237 = load i8, i8* %236, align 1
  %238 = zext i8 %237 to i64
  %239 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %238
  %240 = load i8, i8* %239, align 1
  %241 = sext i8 %240 to i32
  %242 = icmp eq i32 %235, %241
  br i1 %242, label %243, label %75

243:                                              ; preds = %229
  %244 = getelementptr inbounds i8, i8* %15, i64 7
  %245 = load i8, i8* %244, align 1
  %246 = zext i8 %245 to i64
  %247 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %246
  %248 = load i8, i8* %247, align 1
  %249 = zext i8 %248 to i32
  %250 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 7
  %251 = load i8, i8* %250, align 1
  %252 = zext i8 %251 to i64
  %253 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %252
  %254 = load i8, i8* %253, align 1
  %255 = sext i8 %254 to i32
  %256 = icmp eq i32 %249, %255
  br label %75
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm6EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [6 x i8]* dereferenceable(6)) local_unnamed_addr #6 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 5
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %125, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %153, %14, %28, %125, %139, %42, %59, %77, %93, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %93 ], [ false, %14 ], [ false, %28 ], [ false, %125 ], [ false, %139 ], [ %166, %153 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  br i1 %108, label %109, label %75

109:                                              ; preds = %93
  %110 = getelementptr inbounds i16, i16* %44, i64 4
  %111 = load i16, i16* %110, align 2
  %112 = add i16 %111, -65
  %113 = icmp ult i16 %112, 26
  %114 = zext i1 %113 to i16
  %115 = shl nuw nsw i16 %114, 5
  %116 = or i16 %115, %111
  %117 = zext i16 %116 to i32
  %118 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 4
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = sext i8 %122 to i32
  %124 = icmp eq i32 %117, %123
  ret i1 %124

125:                                              ; preds = %28
  %126 = getelementptr inbounds i8, i8* %15, i64 2
  %127 = load i8, i8* %126, align 1
  %128 = zext i8 %127 to i64
  %129 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %128
  %130 = load i8, i8* %129, align 1
  %131 = zext i8 %130 to i32
  %132 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 2
  %133 = load i8, i8* %132, align 1
  %134 = zext i8 %133 to i64
  %135 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %134
  %136 = load i8, i8* %135, align 1
  %137 = sext i8 %136 to i32
  %138 = icmp eq i32 %131, %137
  br i1 %138, label %139, label %75

139:                                              ; preds = %125
  %140 = getelementptr inbounds i8, i8* %15, i64 3
  %141 = load i8, i8* %140, align 1
  %142 = zext i8 %141 to i64
  %143 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %142
  %144 = load i8, i8* %143, align 1
  %145 = zext i8 %144 to i32
  %146 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 3
  %147 = load i8, i8* %146, align 1
  %148 = zext i8 %147 to i64
  %149 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %148
  %150 = load i8, i8* %149, align 1
  %151 = sext i8 %150 to i32
  %152 = icmp eq i32 %145, %151
  br i1 %152, label %153, label %75

153:                                              ; preds = %139
  %154 = getelementptr inbounds i8, i8* %15, i64 4
  %155 = load i8, i8* %154, align 1
  %156 = zext i8 %155 to i64
  %157 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %156
  %158 = load i8, i8* %157, align 1
  %159 = zext i8 %158 to i32
  %160 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 4
  %161 = load i8, i8* %160, align 1
  %162 = zext i8 %161 to i64
  %163 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %162
  %164 = load i8, i8* %163, align 1
  %165 = sext i8 %164 to i32
  %166 = icmp eq i32 %159, %165
  br label %75
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm10EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [10 x i8]* dereferenceable(10)) local_unnamed_addr #6 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 9
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %189, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %273, %14, %28, %189, %203, %217, %231, %245, %259, %42, %59, %77, %93, %109, %125, %141, %157, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %93 ], [ false, %109 ], [ false, %125 ], [ false, %141 ], [ false, %157 ], [ false, %14 ], [ false, %28 ], [ false, %189 ], [ false, %203 ], [ false, %217 ], [ false, %231 ], [ false, %245 ], [ false, %259 ], [ %286, %273 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  br i1 %108, label %109, label %75

109:                                              ; preds = %93
  %110 = getelementptr inbounds i16, i16* %44, i64 4
  %111 = load i16, i16* %110, align 2
  %112 = add i16 %111, -65
  %113 = icmp ult i16 %112, 26
  %114 = zext i1 %113 to i16
  %115 = shl nuw nsw i16 %114, 5
  %116 = or i16 %115, %111
  %117 = zext i16 %116 to i32
  %118 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 4
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = sext i8 %122 to i32
  %124 = icmp eq i32 %117, %123
  br i1 %124, label %125, label %75

125:                                              ; preds = %109
  %126 = getelementptr inbounds i16, i16* %44, i64 5
  %127 = load i16, i16* %126, align 2
  %128 = add i16 %127, -65
  %129 = icmp ult i16 %128, 26
  %130 = zext i1 %129 to i16
  %131 = shl nuw nsw i16 %130, 5
  %132 = or i16 %131, %127
  %133 = zext i16 %132 to i32
  %134 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 5
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i64
  %137 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = sext i8 %138 to i32
  %140 = icmp eq i32 %133, %139
  br i1 %140, label %141, label %75

141:                                              ; preds = %125
  %142 = getelementptr inbounds i16, i16* %44, i64 6
  %143 = load i16, i16* %142, align 2
  %144 = add i16 %143, -65
  %145 = icmp ult i16 %144, 26
  %146 = zext i1 %145 to i16
  %147 = shl nuw nsw i16 %146, 5
  %148 = or i16 %147, %143
  %149 = zext i16 %148 to i32
  %150 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 6
  %151 = load i8, i8* %150, align 1
  %152 = zext i8 %151 to i64
  %153 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %152
  %154 = load i8, i8* %153, align 1
  %155 = sext i8 %154 to i32
  %156 = icmp eq i32 %149, %155
  br i1 %156, label %157, label %75

157:                                              ; preds = %141
  %158 = getelementptr inbounds i16, i16* %44, i64 7
  %159 = load i16, i16* %158, align 2
  %160 = add i16 %159, -65
  %161 = icmp ult i16 %160, 26
  %162 = zext i1 %161 to i16
  %163 = shl nuw nsw i16 %162, 5
  %164 = or i16 %163, %159
  %165 = zext i16 %164 to i32
  %166 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 7
  %167 = load i8, i8* %166, align 1
  %168 = zext i8 %167 to i64
  %169 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %168
  %170 = load i8, i8* %169, align 1
  %171 = sext i8 %170 to i32
  %172 = icmp eq i32 %165, %171
  br i1 %172, label %173, label %75

173:                                              ; preds = %157
  %174 = getelementptr inbounds i16, i16* %44, i64 8
  %175 = load i16, i16* %174, align 2
  %176 = add i16 %175, -65
  %177 = icmp ult i16 %176, 26
  %178 = zext i1 %177 to i16
  %179 = shl nuw nsw i16 %178, 5
  %180 = or i16 %179, %175
  %181 = zext i16 %180 to i32
  %182 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 8
  %183 = load i8, i8* %182, align 1
  %184 = zext i8 %183 to i64
  %185 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %184
  %186 = load i8, i8* %185, align 1
  %187 = sext i8 %186 to i32
  %188 = icmp eq i32 %181, %187
  ret i1 %188

189:                                              ; preds = %28
  %190 = getelementptr inbounds i8, i8* %15, i64 2
  %191 = load i8, i8* %190, align 1
  %192 = zext i8 %191 to i64
  %193 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %192
  %194 = load i8, i8* %193, align 1
  %195 = zext i8 %194 to i32
  %196 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 2
  %197 = load i8, i8* %196, align 1
  %198 = zext i8 %197 to i64
  %199 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %198
  %200 = load i8, i8* %199, align 1
  %201 = sext i8 %200 to i32
  %202 = icmp eq i32 %195, %201
  br i1 %202, label %203, label %75

203:                                              ; preds = %189
  %204 = getelementptr inbounds i8, i8* %15, i64 3
  %205 = load i8, i8* %204, align 1
  %206 = zext i8 %205 to i64
  %207 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %206
  %208 = load i8, i8* %207, align 1
  %209 = zext i8 %208 to i32
  %210 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 3
  %211 = load i8, i8* %210, align 1
  %212 = zext i8 %211 to i64
  %213 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %212
  %214 = load i8, i8* %213, align 1
  %215 = sext i8 %214 to i32
  %216 = icmp eq i32 %209, %215
  br i1 %216, label %217, label %75

217:                                              ; preds = %203
  %218 = getelementptr inbounds i8, i8* %15, i64 4
  %219 = load i8, i8* %218, align 1
  %220 = zext i8 %219 to i64
  %221 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %220
  %222 = load i8, i8* %221, align 1
  %223 = zext i8 %222 to i32
  %224 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 4
  %225 = load i8, i8* %224, align 1
  %226 = zext i8 %225 to i64
  %227 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %226
  %228 = load i8, i8* %227, align 1
  %229 = sext i8 %228 to i32
  %230 = icmp eq i32 %223, %229
  br i1 %230, label %231, label %75

231:                                              ; preds = %217
  %232 = getelementptr inbounds i8, i8* %15, i64 5
  %233 = load i8, i8* %232, align 1
  %234 = zext i8 %233 to i64
  %235 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %234
  %236 = load i8, i8* %235, align 1
  %237 = zext i8 %236 to i32
  %238 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 5
  %239 = load i8, i8* %238, align 1
  %240 = zext i8 %239 to i64
  %241 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %240
  %242 = load i8, i8* %241, align 1
  %243 = sext i8 %242 to i32
  %244 = icmp eq i32 %237, %243
  br i1 %244, label %245, label %75

245:                                              ; preds = %231
  %246 = getelementptr inbounds i8, i8* %15, i64 6
  %247 = load i8, i8* %246, align 1
  %248 = zext i8 %247 to i64
  %249 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %248
  %250 = load i8, i8* %249, align 1
  %251 = zext i8 %250 to i32
  %252 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 6
  %253 = load i8, i8* %252, align 1
  %254 = zext i8 %253 to i64
  %255 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %254
  %256 = load i8, i8* %255, align 1
  %257 = sext i8 %256 to i32
  %258 = icmp eq i32 %251, %257
  br i1 %258, label %259, label %75

259:                                              ; preds = %245
  %260 = getelementptr inbounds i8, i8* %15, i64 7
  %261 = load i8, i8* %260, align 1
  %262 = zext i8 %261 to i64
  %263 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %262
  %264 = load i8, i8* %263, align 1
  %265 = zext i8 %264 to i32
  %266 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 7
  %267 = load i8, i8* %266, align 1
  %268 = zext i8 %267 to i64
  %269 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %268
  %270 = load i8, i8* %269, align 1
  %271 = sext i8 %270 to i32
  %272 = icmp eq i32 %265, %271
  br i1 %272, label %273, label %75

273:                                              ; preds = %259
  %274 = getelementptr inbounds i8, i8* %15, i64 8
  %275 = load i8, i8* %274, align 1
  %276 = zext i8 %275 to i64
  %277 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %276
  %278 = load i8, i8* %277, align 1
  %279 = zext i8 %278 to i32
  %280 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 8
  %281 = load i8, i8* %280, align 1
  %282 = zext i8 %281 to i64
  %283 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %282
  %284 = load i8, i8* %283, align 1
  %285 = sext i8 %284 to i32
  %286 = icmp eq i32 %279, %285
  br label %75
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm13EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [13 x i8]* dereferenceable(13)) local_unnamed_addr #6 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 12
  br i1 %5, label %6, label %80

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [13 x i8], [13 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %80

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [13 x i8], [13 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %82, label %80

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  br label %62

45:                                               ; preds = %62
  %46 = getelementptr inbounds i16, i16* %44, i64 %79
  %47 = load i16, i16* %46, align 2
  %48 = add i16 %47, -65
  %49 = icmp ult i16 %48, 26
  %50 = zext i1 %49 to i16
  %51 = shl nuw nsw i16 %50, 5
  %52 = or i16 %51, %47
  %53 = zext i16 %52 to i32
  %54 = getelementptr inbounds [13 x i8], [13 x i8]* %1, i64 0, i64 %79
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i64
  %57 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %56
  %58 = load i8, i8* %57, align 1
  %59 = sext i8 %58 to i32
  %60 = icmp eq i32 %53, %59
  %61 = add nuw nsw i64 %63, 2
  br i1 %60, label %222, label %80

62:                                               ; preds = %222, %42
  %63 = phi i64 [ 0, %42 ], [ %61, %222 ]
  %64 = getelementptr inbounds i16, i16* %44, i64 %63
  %65 = load i16, i16* %64, align 2
  %66 = add i16 %65, -65
  %67 = icmp ult i16 %66, 26
  %68 = zext i1 %67 to i16
  %69 = shl nuw nsw i16 %68, 5
  %70 = or i16 %69, %65
  %71 = zext i16 %70 to i32
  %72 = getelementptr inbounds [13 x i8], [13 x i8]* %1, i64 0, i64 %63
  %73 = load i8, i8* %72, align 1
  %74 = zext i8 %73 to i64
  %75 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %74
  %76 = load i8, i8* %75, align 1
  %77 = sext i8 %76 to i32
  %78 = icmp eq i32 %71, %77
  %79 = or i64 %63, 1
  br i1 %78, label %45, label %80

80:                                               ; preds = %62, %45, %222, %14, %28, %82, %96, %110, %124, %138, %152, %166, %180, %194, %2
  %81 = phi i1 [ false, %2 ], [ false, %14 ], [ false, %28 ], [ false, %82 ], [ false, %96 ], [ false, %110 ], [ false, %124 ], [ false, %138 ], [ false, %152 ], [ false, %166 ], [ false, %180 ], [ false, %194 ], [ false, %62 ], [ false, %45 ], [ true, %222 ]
  ret i1 %81

82:                                               ; preds = %28
  %83 = getelementptr inbounds i8, i8* %15, i64 2
  %84 = load i8, i8* %83, align 1
  %85 = zext i8 %84 to i64
  %86 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %85
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i32
  %89 = getelementptr inbounds [13 x i8], [13 x i8]* %1, i64 0, i64 2
  %90 = load i8, i8* %89, align 1
  %91 = zext i8 %90 to i64
  %92 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %91
  %93 = load i8, i8* %92, align 1
  %94 = sext i8 %93 to i32
  %95 = icmp eq i32 %88, %94
  br i1 %95, label %96, label %80

96:                                               ; preds = %82
  %97 = getelementptr inbounds i8, i8* %15, i64 3
  %98 = load i8, i8* %97, align 1
  %99 = zext i8 %98 to i64
  %100 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %99
  %101 = load i8, i8* %100, align 1
  %102 = zext i8 %101 to i32
  %103 = getelementptr inbounds [13 x i8], [13 x i8]* %1, i64 0, i64 3
  %104 = load i8, i8* %103, align 1
  %105 = zext i8 %104 to i64
  %106 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %105
  %107 = load i8, i8* %106, align 1
  %108 = sext i8 %107 to i32
  %109 = icmp eq i32 %102, %108
  br i1 %109, label %110, label %80

110:                                              ; preds = %96
  %111 = getelementptr inbounds i8, i8* %15, i64 4
  %112 = load i8, i8* %111, align 1
  %113 = zext i8 %112 to i64
  %114 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %113
  %115 = load i8, i8* %114, align 1
  %116 = zext i8 %115 to i32
  %117 = getelementptr inbounds [13 x i8], [13 x i8]* %1, i64 0, i64 4
  %118 = load i8, i8* %117, align 1
  %119 = zext i8 %118 to i64
  %120 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %119
  %121 = load i8, i8* %120, align 1
  %122 = sext i8 %121 to i32
  %123 = icmp eq i32 %116, %122
  br i1 %123, label %124, label %80

124:                                              ; preds = %110
  %125 = getelementptr inbounds i8, i8* %15, i64 5
  %126 = load i8, i8* %125, align 1
  %127 = zext i8 %126 to i64
  %128 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %127
  %129 = load i8, i8* %128, align 1
  %130 = zext i8 %129 to i32
  %131 = getelementptr inbounds [13 x i8], [13 x i8]* %1, i64 0, i64 5
  %132 = load i8, i8* %131, align 1
  %133 = zext i8 %132 to i64
  %134 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %133
  %135 = load i8, i8* %134, align 1
  %136 = sext i8 %135 to i32
  %137 = icmp eq i32 %130, %136
  br i1 %137, label %138, label %80

138:                                              ; preds = %124
  %139 = getelementptr inbounds i8, i8* %15, i64 6
  %140 = load i8, i8* %139, align 1
  %141 = zext i8 %140 to i64
  %142 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %141
  %143 = load i8, i8* %142, align 1
  %144 = zext i8 %143 to i32
  %145 = getelementptr inbounds [13 x i8], [13 x i8]* %1, i64 0, i64 6
  %146 = load i8, i8* %145, align 1
  %147 = zext i8 %146 to i64
  %148 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %147
  %149 = load i8, i8* %148, align 1
  %150 = sext i8 %149 to i32
  %151 = icmp eq i32 %144, %150
  br i1 %151, label %152, label %80

152:                                              ; preds = %138
  %153 = getelementptr inbounds i8, i8* %15, i64 7
  %154 = load i8, i8* %153, align 1
  %155 = zext i8 %154 to i64
  %156 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %155
  %157 = load i8, i8* %156, align 1
  %158 = zext i8 %157 to i32
  %159 = getelementptr inbounds [13 x i8], [13 x i8]* %1, i64 0, i64 7
  %160 = load i8, i8* %159, align 1
  %161 = zext i8 %160 to i64
  %162 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %161
  %163 = load i8, i8* %162, align 1
  %164 = sext i8 %163 to i32
  %165 = icmp eq i32 %158, %164
  br i1 %165, label %166, label %80

166:                                              ; preds = %152
  %167 = getelementptr inbounds i8, i8* %15, i64 8
  %168 = load i8, i8* %167, align 1
  %169 = zext i8 %168 to i64
  %170 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %169
  %171 = load i8, i8* %170, align 1
  %172 = zext i8 %171 to i32
  %173 = getelementptr inbounds [13 x i8], [13 x i8]* %1, i64 0, i64 8
  %174 = load i8, i8* %173, align 1
  %175 = zext i8 %174 to i64
  %176 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %175
  %177 = load i8, i8* %176, align 1
  %178 = sext i8 %177 to i32
  %179 = icmp eq i32 %172, %178
  br i1 %179, label %180, label %80

180:                                              ; preds = %166
  %181 = getelementptr inbounds i8, i8* %15, i64 9
  %182 = load i8, i8* %181, align 1
  %183 = zext i8 %182 to i64
  %184 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %183
  %185 = load i8, i8* %184, align 1
  %186 = zext i8 %185 to i32
  %187 = getelementptr inbounds [13 x i8], [13 x i8]* %1, i64 0, i64 9
  %188 = load i8, i8* %187, align 1
  %189 = zext i8 %188 to i64
  %190 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %189
  %191 = load i8, i8* %190, align 1
  %192 = sext i8 %191 to i32
  %193 = icmp eq i32 %186, %192
  br i1 %193, label %194, label %80

194:                                              ; preds = %180
  %195 = getelementptr inbounds i8, i8* %15, i64 10
  %196 = load i8, i8* %195, align 1
  %197 = zext i8 %196 to i64
  %198 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %197
  %199 = load i8, i8* %198, align 1
  %200 = zext i8 %199 to i32
  %201 = getelementptr inbounds [13 x i8], [13 x i8]* %1, i64 0, i64 10
  %202 = load i8, i8* %201, align 1
  %203 = zext i8 %202 to i64
  %204 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %203
  %205 = load i8, i8* %204, align 1
  %206 = sext i8 %205 to i32
  %207 = icmp eq i32 %200, %206
  br i1 %207, label %208, label %80

208:                                              ; preds = %194
  %209 = getelementptr inbounds i8, i8* %15, i64 11
  %210 = load i8, i8* %209, align 1
  %211 = zext i8 %210 to i64
  %212 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %211
  %213 = load i8, i8* %212, align 1
  %214 = zext i8 %213 to i32
  %215 = getelementptr inbounds [13 x i8], [13 x i8]* %1, i64 0, i64 11
  %216 = load i8, i8* %215, align 1
  %217 = zext i8 %216 to i64
  %218 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %217
  %219 = load i8, i8* %218, align 1
  %220 = sext i8 %219 to i32
  %221 = icmp eq i32 %214, %220
  ret i1 %221

222:                                              ; preds = %45
  %223 = icmp eq i64 %61, 12
  br i1 %223, label %80, label %62
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm17EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [17 x i8]* dereferenceable(17)) local_unnamed_addr #6 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 16
  br i1 %5, label %6, label %80

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %80

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %82, label %80

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  br label %62

45:                                               ; preds = %62
  %46 = getelementptr inbounds i16, i16* %44, i64 %79
  %47 = load i16, i16* %46, align 2
  %48 = add i16 %47, -65
  %49 = icmp ult i16 %48, 26
  %50 = zext i1 %49 to i16
  %51 = shl nuw nsw i16 %50, 5
  %52 = or i16 %51, %47
  %53 = zext i16 %52 to i32
  %54 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 %79
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i64
  %57 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %56
  %58 = load i8, i8* %57, align 1
  %59 = sext i8 %58 to i32
  %60 = icmp eq i32 %53, %59
  %61 = add nuw nsw i64 %63, 2
  br i1 %60, label %278, label %80

62:                                               ; preds = %278, %42
  %63 = phi i64 [ 0, %42 ], [ %61, %278 ]
  %64 = getelementptr inbounds i16, i16* %44, i64 %63
  %65 = load i16, i16* %64, align 2
  %66 = add i16 %65, -65
  %67 = icmp ult i16 %66, 26
  %68 = zext i1 %67 to i16
  %69 = shl nuw nsw i16 %68, 5
  %70 = or i16 %69, %65
  %71 = zext i16 %70 to i32
  %72 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 %63
  %73 = load i8, i8* %72, align 1
  %74 = zext i8 %73 to i64
  %75 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %74
  %76 = load i8, i8* %75, align 1
  %77 = sext i8 %76 to i32
  %78 = icmp eq i32 %71, %77
  %79 = or i64 %63, 1
  br i1 %78, label %45, label %80

80:                                               ; preds = %62, %45, %278, %14, %28, %82, %96, %110, %124, %138, %152, %166, %180, %194, %208, %222, %236, %250, %2
  %81 = phi i1 [ false, %2 ], [ false, %14 ], [ false, %28 ], [ false, %82 ], [ false, %96 ], [ false, %110 ], [ false, %124 ], [ false, %138 ], [ false, %152 ], [ false, %166 ], [ false, %180 ], [ false, %194 ], [ false, %208 ], [ false, %222 ], [ false, %236 ], [ false, %250 ], [ false, %62 ], [ false, %45 ], [ true, %278 ]
  ret i1 %81

82:                                               ; preds = %28
  %83 = getelementptr inbounds i8, i8* %15, i64 2
  %84 = load i8, i8* %83, align 1
  %85 = zext i8 %84 to i64
  %86 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %85
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i32
  %89 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 2
  %90 = load i8, i8* %89, align 1
  %91 = zext i8 %90 to i64
  %92 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %91
  %93 = load i8, i8* %92, align 1
  %94 = sext i8 %93 to i32
  %95 = icmp eq i32 %88, %94
  br i1 %95, label %96, label %80

96:                                               ; preds = %82
  %97 = getelementptr inbounds i8, i8* %15, i64 3
  %98 = load i8, i8* %97, align 1
  %99 = zext i8 %98 to i64
  %100 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %99
  %101 = load i8, i8* %100, align 1
  %102 = zext i8 %101 to i32
  %103 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 3
  %104 = load i8, i8* %103, align 1
  %105 = zext i8 %104 to i64
  %106 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %105
  %107 = load i8, i8* %106, align 1
  %108 = sext i8 %107 to i32
  %109 = icmp eq i32 %102, %108
  br i1 %109, label %110, label %80

110:                                              ; preds = %96
  %111 = getelementptr inbounds i8, i8* %15, i64 4
  %112 = load i8, i8* %111, align 1
  %113 = zext i8 %112 to i64
  %114 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %113
  %115 = load i8, i8* %114, align 1
  %116 = zext i8 %115 to i32
  %117 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 4
  %118 = load i8, i8* %117, align 1
  %119 = zext i8 %118 to i64
  %120 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %119
  %121 = load i8, i8* %120, align 1
  %122 = sext i8 %121 to i32
  %123 = icmp eq i32 %116, %122
  br i1 %123, label %124, label %80

124:                                              ; preds = %110
  %125 = getelementptr inbounds i8, i8* %15, i64 5
  %126 = load i8, i8* %125, align 1
  %127 = zext i8 %126 to i64
  %128 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %127
  %129 = load i8, i8* %128, align 1
  %130 = zext i8 %129 to i32
  %131 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 5
  %132 = load i8, i8* %131, align 1
  %133 = zext i8 %132 to i64
  %134 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %133
  %135 = load i8, i8* %134, align 1
  %136 = sext i8 %135 to i32
  %137 = icmp eq i32 %130, %136
  br i1 %137, label %138, label %80

138:                                              ; preds = %124
  %139 = getelementptr inbounds i8, i8* %15, i64 6
  %140 = load i8, i8* %139, align 1
  %141 = zext i8 %140 to i64
  %142 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %141
  %143 = load i8, i8* %142, align 1
  %144 = zext i8 %143 to i32
  %145 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 6
  %146 = load i8, i8* %145, align 1
  %147 = zext i8 %146 to i64
  %148 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %147
  %149 = load i8, i8* %148, align 1
  %150 = sext i8 %149 to i32
  %151 = icmp eq i32 %144, %150
  br i1 %151, label %152, label %80

152:                                              ; preds = %138
  %153 = getelementptr inbounds i8, i8* %15, i64 7
  %154 = load i8, i8* %153, align 1
  %155 = zext i8 %154 to i64
  %156 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %155
  %157 = load i8, i8* %156, align 1
  %158 = zext i8 %157 to i32
  %159 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 7
  %160 = load i8, i8* %159, align 1
  %161 = zext i8 %160 to i64
  %162 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %161
  %163 = load i8, i8* %162, align 1
  %164 = sext i8 %163 to i32
  %165 = icmp eq i32 %158, %164
  br i1 %165, label %166, label %80

166:                                              ; preds = %152
  %167 = getelementptr inbounds i8, i8* %15, i64 8
  %168 = load i8, i8* %167, align 1
  %169 = zext i8 %168 to i64
  %170 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %169
  %171 = load i8, i8* %170, align 1
  %172 = zext i8 %171 to i32
  %173 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 8
  %174 = load i8, i8* %173, align 1
  %175 = zext i8 %174 to i64
  %176 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %175
  %177 = load i8, i8* %176, align 1
  %178 = sext i8 %177 to i32
  %179 = icmp eq i32 %172, %178
  br i1 %179, label %180, label %80

180:                                              ; preds = %166
  %181 = getelementptr inbounds i8, i8* %15, i64 9
  %182 = load i8, i8* %181, align 1
  %183 = zext i8 %182 to i64
  %184 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %183
  %185 = load i8, i8* %184, align 1
  %186 = zext i8 %185 to i32
  %187 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 9
  %188 = load i8, i8* %187, align 1
  %189 = zext i8 %188 to i64
  %190 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %189
  %191 = load i8, i8* %190, align 1
  %192 = sext i8 %191 to i32
  %193 = icmp eq i32 %186, %192
  br i1 %193, label %194, label %80

194:                                              ; preds = %180
  %195 = getelementptr inbounds i8, i8* %15, i64 10
  %196 = load i8, i8* %195, align 1
  %197 = zext i8 %196 to i64
  %198 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %197
  %199 = load i8, i8* %198, align 1
  %200 = zext i8 %199 to i32
  %201 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 10
  %202 = load i8, i8* %201, align 1
  %203 = zext i8 %202 to i64
  %204 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %203
  %205 = load i8, i8* %204, align 1
  %206 = sext i8 %205 to i32
  %207 = icmp eq i32 %200, %206
  br i1 %207, label %208, label %80

208:                                              ; preds = %194
  %209 = getelementptr inbounds i8, i8* %15, i64 11
  %210 = load i8, i8* %209, align 1
  %211 = zext i8 %210 to i64
  %212 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %211
  %213 = load i8, i8* %212, align 1
  %214 = zext i8 %213 to i32
  %215 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 11
  %216 = load i8, i8* %215, align 1
  %217 = zext i8 %216 to i64
  %218 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %217
  %219 = load i8, i8* %218, align 1
  %220 = sext i8 %219 to i32
  %221 = icmp eq i32 %214, %220
  br i1 %221, label %222, label %80

222:                                              ; preds = %208
  %223 = getelementptr inbounds i8, i8* %15, i64 12
  %224 = load i8, i8* %223, align 1
  %225 = zext i8 %224 to i64
  %226 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %225
  %227 = load i8, i8* %226, align 1
  %228 = zext i8 %227 to i32
  %229 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 12
  %230 = load i8, i8* %229, align 1
  %231 = zext i8 %230 to i64
  %232 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %231
  %233 = load i8, i8* %232, align 1
  %234 = sext i8 %233 to i32
  %235 = icmp eq i32 %228, %234
  br i1 %235, label %236, label %80

236:                                              ; preds = %222
  %237 = getelementptr inbounds i8, i8* %15, i64 13
  %238 = load i8, i8* %237, align 1
  %239 = zext i8 %238 to i64
  %240 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %239
  %241 = load i8, i8* %240, align 1
  %242 = zext i8 %241 to i32
  %243 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 13
  %244 = load i8, i8* %243, align 1
  %245 = zext i8 %244 to i64
  %246 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %245
  %247 = load i8, i8* %246, align 1
  %248 = sext i8 %247 to i32
  %249 = icmp eq i32 %242, %248
  br i1 %249, label %250, label %80

250:                                              ; preds = %236
  %251 = getelementptr inbounds i8, i8* %15, i64 14
  %252 = load i8, i8* %251, align 1
  %253 = zext i8 %252 to i64
  %254 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %253
  %255 = load i8, i8* %254, align 1
  %256 = zext i8 %255 to i32
  %257 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 14
  %258 = load i8, i8* %257, align 1
  %259 = zext i8 %258 to i64
  %260 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %259
  %261 = load i8, i8* %260, align 1
  %262 = sext i8 %261 to i32
  %263 = icmp eq i32 %256, %262
  br i1 %263, label %264, label %80

264:                                              ; preds = %250
  %265 = getelementptr inbounds i8, i8* %15, i64 15
  %266 = load i8, i8* %265, align 1
  %267 = zext i8 %266 to i64
  %268 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %267
  %269 = load i8, i8* %268, align 1
  %270 = zext i8 %269 to i32
  %271 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 15
  %272 = load i8, i8* %271, align 1
  %273 = zext i8 %272 to i64
  %274 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %273
  %275 = load i8, i8* %274, align 1
  %276 = sext i8 %275 to i32
  %277 = icmp eq i32 %270, %276
  ret i1 %277

278:                                              ; preds = %45
  %279 = icmp eq i64 %61, 16
  br i1 %279, label %80, label %62
}

declare void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink14FrameSelection6ModifyENS_25SelectionModifyAlterationENS_24SelectionModifyDirectionENS_15TextGranularityENS_14SetSelectionByE(%"class.blink::FrameSelection"*, i32, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12DOMSelection6extendEPNS_4NodeEjRNS_14ExceptionStateE(%"class.blink::DOMSelection"*, %"class.blink::Node"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::PositionTemplate", align 8
  %6 = alloca %"class.blink::PositionTemplate", align 8
  %7 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %8 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %9 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %10 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %11 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %12 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %13 = alloca %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder", align 8
  %14 = alloca %"class.blink::SelectionTemplate", align 8
  %15 = alloca %"class.blink::SetSelectionOptions", align 4
  %16 = alloca %"class.blink::SetSelectionOptions::Builder", align 4
  %17 = getelementptr inbounds %"class.blink::DOMSelection", %"class.blink::DOMSelection"* %0, i64 0, i32 1
  %18 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %17) #9
  %19 = icmp eq %"class.blink::LocalDOMWindow"* %18, null
  br i1 %19, label %162, label %20

20:                                               ; preds = %4
  %21 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %17) #9
  %22 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %21, i64 0, i32 0, i32 1, i32 0, i32 0
  %23 = bitcast %"class.blink::Frame"** %22 to %"class.blink::LocalFrame"**
  %24 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %24, i64 0, i32 14, i32 0, i32 0
  %26 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %25, align 8
  %27 = tail call zeroext i1 @_ZNK5blink14FrameSelection11IsAvailableEv(%"class.blink::FrameSelection"* %26) #9
  br i1 %27, label %28, label %162

28:                                               ; preds = %20
  %29 = icmp eq %"class.blink::Node"* %1, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %28
  %31 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 3, i32 0, i32 0
  %32 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %32, i64 0, i32 2, i32 0, i32 0
  %34 = load %"class.blink::Document"*, %"class.blink::Document"** %33, align 8
  %35 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %17) #9
  %36 = tail call %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"* %35) #9
  %37 = icmp eq %"class.blink::Document"* %34, %36
  br i1 %37, label %38, label %162

38:                                               ; preds = %30
  %39 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 1
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, 256
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %162, label %43

43:                                               ; preds = %38, %28
  %44 = tail call i32 @_ZNK5blink12DOMSelection10rangeCountEv(%"class.blink::DOMSelection"* %0)
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %43
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %3, i32 11, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.19, i64 0, i64 0)) #9
  br label %162

47:                                               ; preds = %43
  %48 = tail call %"class.blink::Node"* @_ZN5blink5Range16CheckNodeWOffsetEPNS_4NodeEjRNS_14ExceptionStateE(%"class.blink::Node"* %1, i32 %2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #9
  %49 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %50 = load i32, i32* %49, align 8
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %162

52:                                               ; preds = %47
  %53 = bitcast %"class.blink::PositionTemplate"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %53) #9
  %54 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %5, i64 0, i32 0, i32 0, i32 0
  %55 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %5, i64 0, i32 1
  %56 = bitcast %"class.blink::PositionTemplate"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 -86, i64 16, i1 false)
  %57 = tail call %"class.blink::Node"* @_ZNK5blink12DOMSelection10anchorNodeEv(%"class.blink::DOMSelection"* %0)
  %58 = tail call i32 @_ZNK5blink12DOMSelection12anchorOffsetEv(%"class.blink::DOMSelection"* %0)
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"* nonnull %5, %"class.blink::Node"* %57, i32 %58) #9
  %59 = bitcast %"class.blink::PositionTemplate"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %59) #9
  %60 = bitcast %"class.blink::PositionTemplate"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 -86, i64 16, i1 false)
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"* nonnull %6, %"class.blink::Node"* %1, i32 %2) #9
  %61 = getelementptr inbounds %"class.blink::DOMSelection", %"class.blink::DOMSelection"* %0, i64 0, i32 2, i32 0, i32 0
  %62 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %62, i64 0, i32 2, i32 0, i32 0
  %64 = load %"class.blink::Document"*, %"class.blink::Document"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %64, i64 0, i32 1
  %66 = icmp eq %"class.blink::TreeScope"* %62, %65
  br i1 %66, label %67, label %74

67:                                               ; preds = %52
  %68 = call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %17) #9
  %69 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %68, i64 0, i32 0, i32 1, i32 0, i32 0
  %70 = bitcast %"class.blink::Frame"** %69 to %"class.blink::LocalFrame"**
  %71 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %71, i64 0, i32 14, i32 0, i32 0
  %73 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %72, align 8
  call void @_ZN5blink14FrameSelection24ClearDocumentCachedRangeEv(%"class.blink::FrameSelection"* %73) #9
  br label %74

74:                                               ; preds = %52, %67
  %75 = call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %17) #9
  %76 = call %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"* %75) #9
  %77 = call %"class.blink::Range"* @_ZN5blink5Range6CreateERNS_8DocumentE(%"class.blink::Document"* dereferenceable(2848) %76) #9
  %78 = load %"class.blink::Node"*, %"class.blink::Node"** %54, align 8
  %79 = call dereferenceable(64) %"class.blink::Node"* @_ZNK5blink4Node8TreeRootEv(%"class.blink::Node"* %78) #9
  %80 = call dereferenceable(64) %"class.blink::Node"* @_ZNK5blink4Node8TreeRootEv(%"class.blink::Node"* %1) #9
  %81 = icmp eq %"class.blink::Node"* %79, %80
  br i1 %81, label %101, label %82

82:                                               ; preds = %74
  %83 = bitcast %"class.blink::DummyExceptionStateForTesting"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %83) #9
  %84 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %7, i64 0, i32 0, i32 0
  %85 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %7, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %85, align 8
  %86 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %7, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %86, align 2
  %87 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %7, i64 0, i32 0, i32 1, i32 2
  %88 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %7, i64 0, i32 0, i32 5, i32 0, i32 0
  %89 = bitcast %"class.WTF::StringImpl"** %88 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %89, i8 0, i64 16, i1 false) #9
  %90 = bitcast i8** %87 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %90, i8 0, i64 36, i1 false) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %84, align 8
  %91 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %7, i64 0, i32 0
  call void @_ZN5blink5Range8setStartEPNS_4NodeEjRNS_14ExceptionStateE(%"class.blink::Range"* %77, %"class.blink::Node"* %1, i32 %2, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %91) #9
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %83) #9
  %92 = bitcast %"class.blink::DummyExceptionStateForTesting"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %92) #9
  %93 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0, i32 0
  %94 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %94, align 8
  %95 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %95, align 2
  %96 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0, i32 1, i32 2
  %97 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0, i32 5, i32 0, i32 0
  %98 = bitcast %"class.WTF::StringImpl"** %97 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %98, i8 0, i64 16, i1 false) #9
  %99 = bitcast i8** %96 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %99, i8 0, i64 36, i1 false) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %93, align 8
  %100 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0
  call void @_ZN5blink5Range6setEndEPNS_4NodeEjRNS_14ExceptionStateE(%"class.blink::Range"* %77, %"class.blink::Node"* %1, i32 %2, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %100) #9
  br label %145

101:                                              ; preds = %74
  %102 = call zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEleERKS4_(%"class.blink::PositionTemplate"* nonnull %5, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %6) #9
  br i1 %102, label %103, label %124

103:                                              ; preds = %101
  %104 = load %"class.blink::Node"*, %"class.blink::Node"** %54, align 8
  %105 = load i32, i32* %55, align 8
  %106 = bitcast %"class.blink::DummyExceptionStateForTesting"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %106) #9
  %107 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %9, i64 0, i32 0, i32 0
  %108 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %9, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %108, align 8
  %109 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %9, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %109, align 2
  %110 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %9, i64 0, i32 0, i32 1, i32 2
  %111 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %9, i64 0, i32 0, i32 5, i32 0, i32 0
  %112 = bitcast %"class.WTF::StringImpl"** %111 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %112, i8 0, i64 16, i1 false) #9
  %113 = bitcast i8** %110 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %113, i8 0, i64 36, i1 false) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %107, align 8
  %114 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %9, i64 0, i32 0
  call void @_ZN5blink5Range8setStartEPNS_4NodeEjRNS_14ExceptionStateE(%"class.blink::Range"* %77, %"class.blink::Node"* %104, i32 %105, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %114) #9
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %106) #9
  %115 = bitcast %"class.blink::DummyExceptionStateForTesting"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %115) #9
  %116 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %10, i64 0, i32 0, i32 0
  %117 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %10, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %117, align 8
  %118 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %10, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %118, align 2
  %119 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %10, i64 0, i32 0, i32 1, i32 2
  %120 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %10, i64 0, i32 0, i32 5, i32 0, i32 0
  %121 = bitcast %"class.WTF::StringImpl"** %120 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %121, i8 0, i64 16, i1 false) #9
  %122 = bitcast i8** %119 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %122, i8 0, i64 36, i1 false) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %116, align 8
  %123 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %10, i64 0, i32 0
  call void @_ZN5blink5Range6setEndEPNS_4NodeEjRNS_14ExceptionStateE(%"class.blink::Range"* %77, %"class.blink::Node"* %1, i32 %2, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %123) #9
  br label %145

124:                                              ; preds = %101
  %125 = bitcast %"class.blink::DummyExceptionStateForTesting"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %125) #9
  %126 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %11, i64 0, i32 0, i32 0
  %127 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %11, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %127, align 8
  %128 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %11, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %128, align 2
  %129 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %11, i64 0, i32 0, i32 1, i32 2
  %130 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %11, i64 0, i32 0, i32 5, i32 0, i32 0
  %131 = bitcast %"class.WTF::StringImpl"** %130 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %131, i8 0, i64 16, i1 false) #9
  %132 = bitcast i8** %129 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %132, i8 0, i64 36, i1 false) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %126, align 8
  %133 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %11, i64 0, i32 0
  call void @_ZN5blink5Range8setStartEPNS_4NodeEjRNS_14ExceptionStateE(%"class.blink::Range"* %77, %"class.blink::Node"* %1, i32 %2, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %133) #9
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %125) #9
  %134 = load %"class.blink::Node"*, %"class.blink::Node"** %54, align 8
  %135 = load i32, i32* %55, align 8
  %136 = bitcast %"class.blink::DummyExceptionStateForTesting"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %136) #9
  %137 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %12, i64 0, i32 0, i32 0
  %138 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %12, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %138, align 8
  %139 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %12, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %139, align 2
  %140 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %12, i64 0, i32 0, i32 1, i32 2
  %141 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %12, i64 0, i32 0, i32 5, i32 0, i32 0
  %142 = bitcast %"class.WTF::StringImpl"** %141 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %142, i8 0, i64 16, i1 false) #9
  %143 = bitcast i8** %140 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %143, i8 0, i64 36, i1 false) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %137, align 8
  %144 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %12, i64 0, i32 0
  call void @_ZN5blink5Range6setEndEPNS_4NodeEjRNS_14ExceptionStateE(%"class.blink::Range"* %77, %"class.blink::Node"* %134, i32 %135, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %144) #9
  br label %145

145:                                              ; preds = %103, %124, %82
  %146 = phi %"class.blink::DummyExceptionStateForTesting"* [ %10, %103 ], [ %12, %124 ], [ %8, %82 ]
  %147 = phi i8* [ %115, %103 ], [ %136, %124 ], [ %92, %82 ]
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %146) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %147) #9
  %148 = bitcast %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %148) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %148, i8 -86, i64 40, i1 false)
  call void @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7BuilderC1Ev(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* nonnull %13) #9
  %149 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %77, i64 0, i32 2
  %150 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %77, i64 0, i32 3
  %151 = call zeroext i1 @_ZN5blinkeqERKNS_18RangeBoundaryPointES2_(%"class.blink::RangeBoundaryPoint"* dereferenceable(32) %149, %"class.blink::RangeBoundaryPoint"* dereferenceable(32) %150) #9
  br i1 %151, label %152, label %154

152:                                              ; preds = %145
  %153 = call dereferenceable(40) %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder8CollapseERKNS_16PositionTemplateIS3_EE(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* nonnull %13, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %6) #9
  br label %157

154:                                              ; preds = %145
  %155 = call dereferenceable(40) %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder8CollapseERKNS_16PositionTemplateIS3_EE(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* nonnull %13, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %5) #9
  %156 = call dereferenceable(40) %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder6ExtendERKNS_16PositionTemplateIS3_EE(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* %155, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %6) #9
  br label %157

157:                                              ; preds = %154, %152
  %158 = bitcast %"class.blink::SelectionTemplate"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %158) #9
  call void @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder5BuildEv(%"class.blink::SelectionTemplate"* nonnull sret %14, %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* nonnull %13) #9
  %159 = bitcast %"class.blink::SetSelectionOptions"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %159) #9
  %160 = bitcast %"class.blink::SetSelectionOptions::Builder"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %160) #9
  call void @_ZN5blink19SetSelectionOptions7BuilderC1Ev(%"class.blink::SetSelectionOptions::Builder"* nonnull %16) #9
  %161 = call dereferenceable(24) %"class.blink::SetSelectionOptions::Builder"* @_ZN5blink19SetSelectionOptions7Builder16SetIsDirectionalEb(%"class.blink::SetSelectionOptions::Builder"* nonnull %16, i1 zeroext true) #9
  call void @_ZNK5blink19SetSelectionOptions7Builder5BuildEv(%"class.blink::SetSelectionOptions"* nonnull sret %15, %"class.blink::SetSelectionOptions::Builder"* %161) #9
  call void @_ZNK5blink12DOMSelection20UpdateFrameSelectionERKNS_17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEEPNS_5RangeERKNS_19SetSelectionOptionsE(%"class.blink::DOMSelection"* %0, %"class.blink::SelectionTemplate"* nonnull dereferenceable(40) %14, %"class.blink::Range"* %77, %"class.blink::SetSelectionOptions"* nonnull dereferenceable(24) %15)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %160) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %159) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %158) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %148) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %59) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53) #9
  br label %162

162:                                              ; preds = %47, %38, %30, %4, %20, %157, %46
  ret void
}

declare dereferenceable(64) %"class.blink::Node"* @_ZNK5blink4Node8TreeRootEv(%"class.blink::Node"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEleERKS4_(%"class.blink::PositionTemplate"*, %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #1

declare dereferenceable(40) %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder6ExtendERKNS_16PositionTemplateIS3_EE(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"*, %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Range"* @_ZNK5blink12DOMSelection10getRangeAtEjRNS_14ExceptionStateE(%"class.blink::DOMSelection"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::StringAppend", align 8
  %7 = alloca %"class.blink::EphemeralRangeTemplate", align 8
  %8 = getelementptr inbounds %"class.blink::DOMSelection", %"class.blink::DOMSelection"* %0, i64 0, i32 1
  %9 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %8) #9
  %10 = icmp eq %"class.blink::LocalDOMWindow"* %9, null
  br i1 %10, label %204, label %11

11:                                               ; preds = %3
  %12 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %8) #9
  %13 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %12, i64 0, i32 0, i32 1, i32 0, i32 0
  %14 = bitcast %"class.blink::Frame"** %13 to %"class.blink::LocalFrame"**
  %15 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %15, i64 0, i32 14, i32 0, i32 0
  %17 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %16, align 8
  %18 = tail call zeroext i1 @_ZNK5blink14FrameSelection11IsAvailableEv(%"class.blink::FrameSelection"* %17) #9
  br i1 %18, label %19, label %204

19:                                               ; preds = %11
  %20 = tail call i32 @_ZNK5blink12DOMSelection10rangeCountEv(%"class.blink::DOMSelection"* %0)
  %21 = icmp ugt i32 %20, %1
  br i1 %21, label %170, label %22

22:                                               ; preds = %19
  %23 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #9
  %24 = bitcast %"class.WTF::StringAppend"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #9
  %25 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %25) #9
  %26 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 11
  %27 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 2
  %28 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 3
  %29 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 32, i1 false) #9
  store i8* %26, i8** %27, align 8
  %30 = urem i32 %1, 10
  %31 = udiv i32 %1, 10
  %32 = trunc i32 %30 to i8
  %33 = or i8 %32, 48
  store i8 %33, i8* %26, align 1
  %34 = icmp ugt i32 %1, 9
  br i1 %34, label %35, label %50

35:                                               ; preds = %22
  %36 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 10
  store i8* %36, i8** %27, align 8
  %37 = urem i32 %31, 10
  %38 = trunc i32 %37 to i8
  %39 = or i8 %38, 48
  store i8 %39, i8* %36, align 2
  %40 = icmp ugt i32 %1, 99
  br i1 %40, label %41, label %48

41:                                               ; preds = %35
  %42 = udiv i32 %1, 100
  %43 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 9
  store i8* %43, i8** %27, align 8
  %44 = urem i32 %42, 10
  %45 = trunc i32 %44 to i8
  %46 = or i8 %45, 48
  store i8 %46, i8* %43, align 1
  %47 = icmp ugt i32 %1, 999
  br i1 %47, label %52, label %61

48:                                               ; preds = %35
  %49 = ptrtoint i8* %36 to i64
  br label %64

50:                                               ; preds = %22
  %51 = ptrtoint i8* %26 to i64
  br label %64

52:                                               ; preds = %41, %52
  %53 = phi i32 [ %55, %52 ], [ %42, %41 ]
  %54 = load i8*, i8** %27, align 8
  %55 = udiv i32 %53, 10
  %56 = getelementptr inbounds i8, i8* %54, i64 -1
  store i8* %56, i8** %27, align 8
  %57 = urem i32 %55, 10
  %58 = trunc i32 %57 to i8
  %59 = or i8 %58, 48
  store i8 %59, i8* %56, align 1
  %60 = icmp ugt i32 %53, 99
  br i1 %60, label %52, label %61

61:                                               ; preds = %52, %41
  %62 = bitcast i8** %27 to i64*
  %63 = load i64, i64* %62, align 8
  br label %64

64:                                               ; preds = %61, %48, %50
  %65 = phi i64 [ %51, %50 ], [ %63, %61 ], [ %49, %48 ]
  %66 = ptrtoint i8* %29 to i64
  %67 = sub i64 %66, %65
  %68 = trunc i64 %67 to i32
  store i32 %68, i32* %28, align 8
  %69 = inttoptr i64 %65 to i8*
  %70 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %69, i32 %68) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %25) #9
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %116, label %72

72:                                               ; preds = %64
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = and i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 0
  %78 = load i32, i32* %77, align 4
  br i1 %76, label %79, label %89

79:                                               ; preds = %72
  %80 = zext i32 %78 to i33
  %81 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %80, i33 1) #9
  %82 = extractvalue { i33, i1 } %81, 1
  %83 = extractvalue { i33, i1 } %81, 0
  %84 = icmp slt i33 %83, 0
  %85 = or i1 %82, %84
  br i1 %85, label %86, label %87, !prof !21

86:                                               ; preds = %79
  call void @llvm.trap() #9
  unreachable

87:                                               ; preds = %79
  %88 = trunc i33 %83 to i32
  store i32 %88, i32* %77, align 4
  br label %89

89:                                               ; preds = %72, %87
  %90 = phi i32 [ %88, %87 ], [ %78, %72 ]
  %91 = load atomic i32, i32* %73 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 0
  br i1 %93, label %95, label %105

95:                                               ; preds = %89
  %96 = zext i32 %90 to i33
  %97 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %96, i33 1) #9
  %98 = extractvalue { i33, i1 } %97, 1
  %99 = extractvalue { i33, i1 } %97, 0
  %100 = icmp slt i33 %99, 0
  %101 = or i1 %98, %100
  br i1 %101, label %102, label %103, !prof !21

102:                                              ; preds = %95
  call void @llvm.trap() #9
  unreachable

103:                                              ; preds = %95
  %104 = trunc i33 %99 to i32
  store i32 %104, i32* %94, align 4
  br label %105

105:                                              ; preds = %103, %89
  %106 = phi i32 [ %104, %103 ], [ %90, %89 ]
  %107 = load atomic i32, i32* %73 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %112

110:                                              ; preds = %105
  %111 = add i32 %106, -1
  store i32 %111, i32* %94, align 4
  br label %112

112:                                              ; preds = %110, %105
  %113 = phi i32 [ %111, %110 ], [ %106, %105 ]
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %116

115:                                              ; preds = %112
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %70) #9
  br label %116

116:                                              ; preds = %64, %112, %115
  %117 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %70, %"class.WTF::StringImpl"** %117, align 8
  %118 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20, i64 0, i64 0), i8** %118, align 8
  %119 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend"* nonnull %6)
  %120 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %119, %"class.WTF::StringImpl"** %120, align 8
  %121 = bitcast %"class.blink::ExceptionState"* %2 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %122 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %121, align 8
  %123 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %122, align 8
  call void %123(%"class.blink::ExceptionState"* %2, i32 1, %"class.WTF::String"* nonnull dereferenceable(8) %5) #9
  %124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %120, align 8
  %125 = icmp eq %"class.WTF::StringImpl"* %124, null
  br i1 %125, label %139, label %126

126:                                              ; preds = %116
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load atomic i32, i32* %127 monotonic, align 4
  %129 = and i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 0
  %132 = load i32, i32* %131, align 4
  br i1 %130, label %133, label %135

133:                                              ; preds = %126
  %134 = add i32 %132, -1
  store i32 %134, i32* %131, align 4
  br label %135

135:                                              ; preds = %133, %126
  %136 = phi i32 [ %134, %133 ], [ %132, %126 ]
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %139

138:                                              ; preds = %135
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %124) #9
  br label %139

139:                                              ; preds = %116, %135, %138
  %140 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %117, align 8
  %141 = icmp eq %"class.WTF::StringImpl"* %140, null
  br i1 %141, label %155, label %142

142:                                              ; preds = %139
  %143 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %140, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %144 = load atomic i32, i32* %143 monotonic, align 4
  %145 = and i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %140, i64 0, i32 0
  %148 = load i32, i32* %147, align 4
  br i1 %146, label %149, label %151

149:                                              ; preds = %142
  %150 = add i32 %148, -1
  store i32 %150, i32* %147, align 4
  br label %151

151:                                              ; preds = %149, %142
  %152 = phi i32 [ %150, %149 ], [ %148, %142 ]
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %154, label %155

154:                                              ; preds = %151
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %140) #9
  br label %155

155:                                              ; preds = %139, %151, %154
  br i1 %71, label %169, label %156

156:                                              ; preds = %155
  %157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %158 = load atomic i32, i32* %157 monotonic, align 4
  %159 = and i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 0
  %162 = load i32, i32* %161, align 4
  br i1 %160, label %163, label %165

163:                                              ; preds = %156
  %164 = add i32 %162, -1
  store i32 %164, i32* %161, align 4
  br label %165

165:                                              ; preds = %163, %156
  %166 = phi i32 [ %164, %163 ], [ %162, %156 ]
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %169

168:                                              ; preds = %165
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %70) #9
  br label %169

169:                                              ; preds = %155, %165, %168
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #9
  br label %204

170:                                              ; preds = %19
  %171 = getelementptr inbounds %"class.blink::DOMSelection", %"class.blink::DOMSelection"* %0, i64 0, i32 2, i32 0, i32 0
  %172 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %171, align 8
  %173 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %172, i64 0, i32 2, i32 0, i32 0
  %174 = load %"class.blink::Document"*, %"class.blink::Document"** %173, align 8
  %175 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %174, i64 0, i32 1
  %176 = icmp eq %"class.blink::TreeScope"* %172, %175
  br i1 %176, label %177, label %186

177:                                              ; preds = %170
  %178 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %8) #9
  %179 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %178, i64 0, i32 0, i32 1, i32 0, i32 0
  %180 = bitcast %"class.blink::Frame"** %179 to %"class.blink::LocalFrame"**
  %181 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %180, align 8
  %182 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %181, i64 0, i32 14, i32 0, i32 0
  %183 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %182, align 8
  %184 = tail call %"class.blink::Range"* @_ZNK5blink14FrameSelection19DocumentCachedRangeEv(%"class.blink::FrameSelection"* %183) #9
  %185 = icmp eq %"class.blink::Range"* %184, null
  br i1 %185, label %186, label %204

186:                                              ; preds = %170, %177
  %187 = bitcast %"class.blink::EphemeralRangeTemplate"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %187) #9
  call void @_ZNK5blink12DOMSelection30CreateRangeFromSelectionEditorEv(%"class.blink::EphemeralRangeTemplate"* nonnull sret %7, %"class.blink::DOMSelection"* %0)
  %188 = call %"class.blink::Range"* @_ZN5blink11CreateRangeERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::EphemeralRangeTemplate"* nonnull dereferenceable(32) %7) #9
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %187) #9
  %189 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %171, align 8
  %190 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %189, i64 0, i32 2, i32 0, i32 0
  %191 = load %"class.blink::Document"*, %"class.blink::Document"** %190, align 8
  %192 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %191, i64 0, i32 1
  %193 = icmp eq %"class.blink::TreeScope"* %189, %192
  br i1 %193, label %194, label %204

194:                                              ; preds = %186
  %195 = call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %8) #9
  %196 = icmp eq %"class.blink::LocalDOMWindow"* %195, null
  br i1 %196, label %204, label %197

197:                                              ; preds = %194
  %198 = call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %8) #9
  %199 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %198, i64 0, i32 0, i32 1, i32 0, i32 0
  %200 = bitcast %"class.blink::Frame"** %199 to %"class.blink::LocalFrame"**
  %201 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %200, align 8
  %202 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %201, i64 0, i32 14, i32 0, i32 0
  %203 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %202, align 8
  call void @_ZN5blink14FrameSelection20CacheRangeOfDocumentEPNS_5RangeE(%"class.blink::FrameSelection"* %203, %"class.blink::Range"* %188) #9
  br label %204

204:                                              ; preds = %3, %197, %194, %186, %11, %177, %169
  %205 = phi %"class.blink::Range"* [ null, %169 ], [ %184, %177 ], [ null, %11 ], [ %188, %186 ], [ %188, %194 ], [ %188, %197 ], [ null, %3 ]
  ret %"class.blink::Range"* %205
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.1677", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.1677", align 8
  %6 = alloca %"class.WTF::StringTypeAdapter.1677", align 8
  %7 = alloca i8*, align 8
  %8 = alloca i16*, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %13 = select i1 %11, %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"* %10
  %14 = bitcast %"class.WTF::StringTypeAdapter.1677"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #9
  %15 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false) #9
  %16 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1677"* nonnull %6, i8* %16) #9
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #9
  br i1 %20, label %81, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #9
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %7) #9
  %25 = load i8*, i8** %7, align 8
  %26 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #9
  %27 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 24, i1 false) #9
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %31, label %33

31:                                               ; preds = %21
  %32 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %39

33:                                               ; preds = %21
  %34 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 1
  %38 = bitcast %"class.WTF::StringImpl"* %37 to i8*
  br label %39

39:                                               ; preds = %31, %33
  %40 = phi i8* [ null, %31 ], [ %38, %33 ]
  %41 = phi i64 [ %32, %31 ], [ %34, %33 ]
  %42 = phi i32 [ 0, %31 ], [ %36, %33 ]
  %43 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i64*
  store i64 %41, i64* %43, align 8
  store i8* %40, i8** %27, align 8
  store i32 %42, i32* %28, align 8
  %44 = bitcast %"class.WTF::StringTypeAdapter.1677"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 16, i1 false) #9
  %45 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1677"* nonnull %5, i8* %45) #9
  %46 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.1676"* nonnull %46, i8* %25) #9
  %47 = load i32, i32* %28, align 8
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds i8, i8* %25, i64 %48
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.1677"* nonnull %5, i8* %49) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #9
  %50 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %50, label %141, label %51

51:                                               ; preds = %39
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %68

58:                                               ; preds = %51
  %59 = zext i32 %57 to i33
  %60 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %59, i33 1) #9
  %61 = extractvalue { i33, i1 } %60, 1
  %62 = extractvalue { i33, i1 } %60, 0
  %63 = icmp slt i33 %62, 0
  %64 = or i1 %61, %63
  br i1 %64, label %65, label %66, !prof !21

65:                                               ; preds = %58
  call void @llvm.trap() #9
  unreachable

66:                                               ; preds = %58
  %67 = trunc i33 %62 to i32
  store i32 %67, i32* %56, align 4
  br label %68

68:                                               ; preds = %51, %66
  %69 = phi i32 [ %67, %66 ], [ %57, %51 ]
  %70 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %71 = load atomic i32, i32* %52 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %77

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %76 = add i32 %69, -1
  store i32 %76, i32* %75, align 4
  br label %77

77:                                               ; preds = %74, %68
  %78 = phi i32 [ %76, %74 ], [ %69, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %141

80:                                               ; preds = %77
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #9
  br label %141

81:                                               ; preds = %1
  %82 = bitcast i16** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #9
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %8, align 8
  %83 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend"* %0)
  %84 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %83, i16** nonnull dereferenceable(8) %8) #9
  %85 = load i16*, i16** %8, align 8
  %86 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #9
  %87 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0, i32 0, i32 1
  %88 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 -86, i64 24, i1 false) #9
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %91, label %93

91:                                               ; preds = %81
  %92 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %99

93:                                               ; preds = %81
  %94 = ptrtoint %"class.WTF::StringImpl"* %89 to i64
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 1
  %96 = load i32, i32* %95, align 4
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 1
  %98 = bitcast %"class.WTF::StringImpl"* %97 to i8*
  br label %99

99:                                               ; preds = %91, %93
  %100 = phi i8* [ null, %91 ], [ %98, %93 ]
  %101 = phi i64 [ %92, %91 ], [ %94, %93 ]
  %102 = phi i32 [ 0, %91 ], [ %96, %93 ]
  %103 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i64*
  store i64 %101, i64* %103, align 8
  store i8* %100, i8** %87, align 8
  store i32 %102, i32* %88, align 8
  %104 = bitcast %"class.WTF::StringTypeAdapter.1677"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %104) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %104, i8 -86, i64 16, i1 false) #9
  %105 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1677"* nonnull %3, i8* %105) #9
  %106 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1676"* nonnull %106, i16* %85) #9
  %107 = load i32, i32* %88, align 8
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds i16, i16* %85, i64 %108
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1677"* nonnull %3, i16* %109) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %104) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #9
  %110 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %110, label %141, label %111

111:                                              ; preds = %99
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  br i1 %115, label %118, label %128

118:                                              ; preds = %111
  %119 = zext i32 %117 to i33
  %120 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %119, i33 1) #9
  %121 = extractvalue { i33, i1 } %120, 1
  %122 = extractvalue { i33, i1 } %120, 0
  %123 = icmp slt i33 %122, 0
  %124 = or i1 %121, %123
  br i1 %124, label %125, label %126, !prof !21

125:                                              ; preds = %118
  call void @llvm.trap() #9
  unreachable

126:                                              ; preds = %118
  %127 = trunc i33 %122 to i32
  store i32 %127, i32* %116, align 4
  br label %128

128:                                              ; preds = %111, %126
  %129 = phi i32 [ %127, %126 ], [ %117, %111 ]
  %130 = ptrtoint %"class.WTF::StringImpl"* %84 to i64
  %131 = load atomic i32, i32* %112 monotonic, align 4
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %137

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %136 = add i32 %129, -1
  store i32 %136, i32* %135, align 4
  br label %137

137:                                              ; preds = %134, %128
  %138 = phi i32 [ %136, %134 ], [ %129, %128 ]
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %137
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #9
  br label %141

141:                                              ; preds = %140, %137, %99, %80, %77, %39
  %142 = phi i8* [ %22, %39 ], [ %22, %77 ], [ %22, %80 ], [ %82, %99 ], [ %82, %137 ], [ %82, %140 ]
  %143 = phi i64 [ 0, %39 ], [ %70, %77 ], [ %70, %80 ], [ 0, %99 ], [ %130, %137 ], [ %130, %140 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %142) #9
  %144 = inttoptr i64 %143 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %144
}

declare %"class.blink::Range"* @_ZN5blink11CreateRangeERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::EphemeralRangeTemplate"* dereferenceable(32)) local_unnamed_addr #1

declare void @_ZN5blink21FirstEphemeralRangeOfERKNS_24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::EphemeralRangeTemplate"* sret, %"class.blink::VisibleSelectionTemplate"* dereferenceable(40)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Node"* @_ZNK5blink12DOMSelection18ShadowAdjustedNodeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::DOMSelection"* nocapture readonly, %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %5 = icmp eq %"class.blink::Node"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %2
  %7 = tail call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* %1) #9
  %8 = getelementptr inbounds %"class.blink::DOMSelection", %"class.blink::DOMSelection"* %0, i64 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %8, align 8
  %10 = tail call %"class.blink::Node"* @_ZNK5blink9TreeScope19AncestorInThisScopeEPNS_4NodeE(%"class.blink::TreeScope"* %9, %"class.blink::Node"* %7) #9
  %11 = icmp eq %"class.blink::Node"* %10, null
  br i1 %11, label %19, label %12

12:                                               ; preds = %6
  %13 = icmp eq %"class.blink::Node"* %7, %10
  br i1 %13, label %19, label %14

14:                                               ; preds = %12
  %15 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %10, i64 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.blink::Node"** %15 to %"class.blink::ContainerNode"**
  %17 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %17, i64 0, i32 0
  br label %19

19:                                               ; preds = %14, %6, %12, %2
  %20 = phi %"class.blink::Node"* [ null, %2 ], [ %18, %14 ], [ null, %6 ], [ %7, %12 ]
  ret %"class.blink::Node"* %20
}

declare void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1Ev(%"class.blink::EphemeralRangeTemplate"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink12DOMSelection20ShadowAdjustedOffsetERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::DOMSelection"* nocapture readonly, %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %5 = icmp eq %"class.blink::Node"* %4, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %2
  %7 = tail call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* %1) #9
  %8 = getelementptr inbounds %"class.blink::DOMSelection", %"class.blink::DOMSelection"* %0, i64 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %8, align 8
  %10 = tail call %"class.blink::Node"* @_ZNK5blink9TreeScope19AncestorInThisScopeEPNS_4NodeE(%"class.blink::TreeScope"* %9, %"class.blink::Node"* %7) #9
  %11 = icmp eq %"class.blink::Node"* %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %6
  %13 = icmp eq %"class.blink::Node"* %7, %10
  br i1 %13, label %14, label %16

14:                                               ; preds = %12
  %15 = tail call i32 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE28ComputeOffsetInContainerNodeEv(%"class.blink::PositionTemplate"* %1) #9
  br label %18

16:                                               ; preds = %12
  %17 = tail call i32 @_ZNK5blink4Node9NodeIndexEv(%"class.blink::Node"* nonnull %10) #9
  br label %18

18:                                               ; preds = %14, %16, %6, %2
  %19 = phi i32 [ 0, %2 ], [ %15, %14 ], [ %17, %16 ], [ 0, %6 ]
  ret i32 %19
}

declare void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EES8_(%"class.blink::EphemeralRangeTemplate"*, %"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::PositionTemplate"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN5blink14FrameSelection20CacheRangeOfDocumentEPNS_5RangeE(%"class.blink::FrameSelection"*, %"class.blink::Range"*) local_unnamed_addr #1

declare %"class.blink::Range"* @_ZNK5blink14FrameSelection19DocumentCachedRangeEv(%"class.blink::FrameSelection"*) local_unnamed_addr #1

declare void @_ZN5blink14FrameSelection24ClearDocumentCachedRangeEv(%"class.blink::FrameSelection"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12DOMSelection11removeRangeEPNS_5RangeE(%"class.blink::DOMSelection"*, %"class.blink::Range"* readnone) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %4 = getelementptr inbounds %"class.blink::DOMSelection", %"class.blink::DOMSelection"* %0, i64 0, i32 1
  %5 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %4) #9
  %6 = icmp eq %"class.blink::LocalDOMWindow"* %5, null
  br i1 %6, label %39, label %7

7:                                                ; preds = %2
  %8 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %4) #9
  %9 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %8, i64 0, i32 0, i32 1, i32 0, i32 0
  %10 = bitcast %"class.blink::Frame"** %9 to %"class.blink::LocalFrame"**
  %11 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %11, i64 0, i32 14, i32 0, i32 0
  %13 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %12, align 8
  %14 = tail call zeroext i1 @_ZNK5blink14FrameSelection11IsAvailableEv(%"class.blink::FrameSelection"* %13) #9
  br i1 %14, label %15, label %39

15:                                               ; preds = %7
  %16 = tail call i32 @_ZNK5blink12DOMSelection10rangeCountEv(%"class.blink::DOMSelection"* %0) #9
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %29, label %18

18:                                               ; preds = %15
  %19 = bitcast %"class.blink::DummyExceptionStateForTesting"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %19) #9
  %20 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %21, align 8
  %22 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %22, align 2
  %23 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 1, i32 2
  %24 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 5, i32 0, i32 0
  %25 = bitcast %"class.WTF::StringImpl"** %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 16, i1 false) #9
  %26 = bitcast i8** %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 36, i1 false) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %27 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0
  %28 = call %"class.blink::Range"* @_ZNK5blink12DOMSelection10getRangeAtEjRNS_14ExceptionStateE(%"class.blink::DOMSelection"* %0, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %27) #9
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %19) #9
  br label %29

29:                                               ; preds = %15, %18
  %30 = phi %"class.blink::Range"* [ %28, %18 ], [ null, %15 ]
  %31 = icmp eq %"class.blink::Range"* %30, %1
  br i1 %31, label %32, label %39

32:                                               ; preds = %29
  %33 = call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %4) #9
  %34 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %33, i64 0, i32 0, i32 1, i32 0, i32 0
  %35 = bitcast %"class.blink::Frame"** %34 to %"class.blink::LocalFrame"**
  %36 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %36, i64 0, i32 14, i32 0, i32 0
  %38 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %37, align 8
  call void @_ZN5blink14FrameSelection5ClearEv(%"class.blink::FrameSelection"* %38) #9
  br label %39

39:                                               ; preds = %2, %32, %29, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12DOMSelection15removeAllRangesEv(%"class.blink::DOMSelection"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMSelection", %"class.blink::DOMSelection"* %0, i64 0, i32 1
  %3 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %2) #9
  %4 = icmp eq %"class.blink::LocalDOMWindow"* %3, null
  br i1 %4, label %20, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %2) #9
  %7 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  %8 = bitcast %"class.blink::Frame"** %7 to %"class.blink::LocalFrame"**
  %9 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %9, i64 0, i32 14, i32 0, i32 0
  %11 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %10, align 8
  %12 = tail call zeroext i1 @_ZNK5blink14FrameSelection11IsAvailableEv(%"class.blink::FrameSelection"* %11) #9
  br i1 %12, label %13, label %20

13:                                               ; preds = %5
  %14 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %2) #9
  %15 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %14, i64 0, i32 0, i32 1, i32 0, i32 0
  %16 = bitcast %"class.blink::Frame"** %15 to %"class.blink::LocalFrame"**
  %17 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %17, i64 0, i32 14, i32 0, i32 0
  %19 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %18, align 8
  tail call void @_ZN5blink14FrameSelection5ClearEv(%"class.blink::FrameSelection"* %19) #9
  br label %20

20:                                               ; preds = %1, %13, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12DOMSelection8addRangeEPNS_5RangeE(%"class.blink::DOMSelection"*, %"class.blink::Range"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.blink::SelectionTemplate", align 8
  %6 = alloca %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder", align 8
  %7 = alloca %"class.blink::PositionTemplate", align 8
  %8 = alloca %"class.blink::PositionTemplate", align 8
  %9 = alloca %"class.blink::SetSelectionOptions", align 4
  %10 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %11 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %12 = getelementptr inbounds %"class.blink::DOMSelection", %"class.blink::DOMSelection"* %0, i64 0, i32 1
  %13 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %12) #9
  %14 = icmp eq %"class.blink::LocalDOMWindow"* %13, null
  br i1 %14, label %231, label %15

15:                                               ; preds = %2
  %16 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %12) #9
  %17 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %16, i64 0, i32 0, i32 1, i32 0, i32 0
  %18 = bitcast %"class.blink::Frame"** %17 to %"class.blink::LocalFrame"**
  %19 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %19, i64 0, i32 14, i32 0, i32 0
  %21 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %20, align 8
  %22 = tail call zeroext i1 @_ZNK5blink14FrameSelection11IsAvailableEv(%"class.blink::FrameSelection"* %21) #9
  br i1 %22, label %23, label %231

23:                                               ; preds = %15
  %24 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %1, i64 0, i32 1, i32 0, i32 0
  %25 = load %"class.blink::Document"*, %"class.blink::Document"** %24, align 8
  %26 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %12) #9
  %27 = tail call %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"* %26) #9
  %28 = icmp eq %"class.blink::Document"* %25, %27
  br i1 %28, label %29, label %231

29:                                               ; preds = %23
  %30 = tail call zeroext i1 @_ZNK5blink5Range11IsConnectedEv(%"class.blink::Range"* %1) #9
  br i1 %30, label %64, label %31

31:                                               ; preds = %29
  %32 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #9
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.21, i64 0, i64 0), i64 46) #9
  %33 = getelementptr inbounds %"class.blink::DOMSelection", %"class.blink::DOMSelection"* %0, i64 0, i32 2, i32 0, i32 0
  %34 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %33, align 8
  %35 = icmp eq %"class.blink::TreeScope"* %34, null
  br i1 %35, label %46, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %34, i64 0, i32 2, i32 0, i32 0
  %38 = load %"class.blink::Document"*, %"class.blink::Document"** %37, align 8
  %39 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #9
  %40 = bitcast i8* %39 to %"class.blink::ConsoleMessage"*
  %41 = call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #9
  call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %40, i32 1, i32 2, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.blink::SourceLocation"* %41) #9
  %42 = getelementptr inbounds i8, i8* %39, i64 -4
  %43 = bitcast i8* %42 to i16*
  %44 = load atomic i16, i16* %43 monotonic, align 2
  %45 = or i16 %44, 1
  store atomic i16 %45, i16* %43 release, align 2
  call void @_ZNK5blink8Document17AddConsoleMessageEPNS_14ConsoleMessageEb(%"class.blink::Document"* %38, %"class.blink::ConsoleMessage"* %40, i1 zeroext false) #9
  br label %46

46:                                               ; preds = %31, %36
  %47 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %50
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %50
  %60 = phi i32 [ %58, %57 ], [ %56, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #9
  br label %63

63:                                               ; preds = %46, %59, %62
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #9
  br label %231

64:                                               ; preds = %29
  %65 = load %"class.blink::Document"*, %"class.blink::Document"** %24, align 8
  %66 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %12) #9
  %67 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %66, i64 0, i32 0, i32 1, i32 0, i32 0
  %68 = bitcast %"class.blink::Frame"** %67 to %"class.blink::LocalFrame"**
  %69 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %69, i64 0, i32 14, i32 0, i32 0
  %71 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %70, align 8
  %72 = tail call dereferenceable(2848) %"class.blink::Document"* @_ZNK5blink14FrameSelection11GetDocumentEv(%"class.blink::FrameSelection"* %71) #9
  %73 = icmp eq %"class.blink::Document"* %65, %72
  br i1 %73, label %74, label %231

74:                                               ; preds = %64
  %75 = tail call i32 @_ZNK5blink12DOMSelection10rangeCountEv(%"class.blink::DOMSelection"* %0)
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %175

77:                                               ; preds = %74
  %78 = bitcast %"class.blink::SelectionTemplate"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %78) #9
  %79 = bitcast %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %79) #9
  call void @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7BuilderC1Ev(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* nonnull %6) #9
  %80 = bitcast %"class.blink::PositionTemplate"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %80) #9
  %81 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %1, i64 0, i32 2
  %82 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %1, i64 0, i32 2, i32 3
  %83 = load i32, i32* %82, align 8, !noalias !22
  %84 = icmp eq i32 %83, -1
  br i1 %84, label %105, label %85

85:                                               ; preds = %77
  %86 = getelementptr inbounds %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint"* %81, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.blink::Node"*, %"class.blink::Node"** %86, align 8, !noalias !22
  %88 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %87, i64 0, i32 3, i32 0, i32 0
  %89 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %88, align 8
  %90 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %89, i64 0, i32 2, i32 0, i32 0
  %91 = load %"class.blink::Document"*, %"class.blink::Document"** %90, align 8
  %92 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %91, i64 0, i32 52
  %93 = load i64, i64* %92, align 8
  %94 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %1, i64 0, i32 2, i32 2
  %95 = load i64, i64* %94, align 8, !noalias !22
  %96 = icmp eq i64 %93, %95
  br i1 %96, label %122, label %97

97:                                               ; preds = %85
  %98 = bitcast %"class.blink::Node"* %87 to i1 (%"class.blink::Node"*)***
  %99 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %98, align 8
  %100 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %99, i64 41
  %101 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %100, align 8
  %102 = call zeroext i1 %101(%"class.blink::Node"* %87) #9
  br i1 %102, label %103, label %105

103:                                              ; preds = %97
  %104 = load i32, i32* %82, align 8, !noalias !22
  br label %122

105:                                              ; preds = %97, %77
  %106 = getelementptr inbounds %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint"* %81, i64 0, i32 0, i32 0, i32 0
  %107 = load %"class.blink::Node"*, %"class.blink::Node"** %106, align 8, !noalias !22
  %108 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %107, i64 0, i32 3, i32 0, i32 0
  %109 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %108, align 8
  %110 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %109, i64 0, i32 2, i32 0, i32 0
  %111 = load %"class.blink::Document"*, %"class.blink::Document"** %110, align 8
  %112 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %111, i64 0, i32 52
  %113 = load i64, i64* %112, align 8
  %114 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %1, i64 0, i32 2, i32 2
  store i64 %113, i64* %114, align 8, !noalias !22
  %115 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %1, i64 0, i32 2, i32 1, i32 0, i32 0
  %116 = load %"class.blink::Node"*, %"class.blink::Node"** %115, align 8, !noalias !22
  %117 = icmp eq %"class.blink::Node"* %116, null
  br i1 %117, label %118, label %119

118:                                              ; preds = %105
  store i32 0, i32* %82, align 8, !noalias !22
  br label %122

119:                                              ; preds = %105
  %120 = call i32 @_ZNK5blink4Node9NodeIndexEv(%"class.blink::Node"* nonnull %116) #9
  %121 = add i32 %120, 1
  store i32 %121, i32* %82, align 8, !noalias !22
  br label %122

122:                                              ; preds = %85, %103, %118, %119
  %123 = phi i32 [ %104, %103 ], [ %83, %85 ], [ 0, %118 ], [ %121, %119 ]
  %124 = getelementptr inbounds %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint"* %81, i64 0, i32 0, i32 0, i32 0
  %125 = load %"class.blink::Node"*, %"class.blink::Node"** %124, align 8, !noalias !22
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"* nonnull %7, %"class.blink::Node"* %125, i32 %123) #9
  %126 = call dereferenceable(40) %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder8CollapseERKNS_16PositionTemplateIS3_EE(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* nonnull %6, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %7) #9
  %127 = bitcast %"class.blink::PositionTemplate"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %127) #9
  %128 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %1, i64 0, i32 3
  %129 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %1, i64 0, i32 3, i32 3
  %130 = load i32, i32* %129, align 8, !noalias !27
  %131 = icmp eq i32 %130, -1
  br i1 %131, label %152, label %132

132:                                              ; preds = %122
  %133 = getelementptr inbounds %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint"* %128, i64 0, i32 0, i32 0, i32 0
  %134 = load %"class.blink::Node"*, %"class.blink::Node"** %133, align 8, !noalias !27
  %135 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %134, i64 0, i32 3, i32 0, i32 0
  %136 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %135, align 8
  %137 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %136, i64 0, i32 2, i32 0, i32 0
  %138 = load %"class.blink::Document"*, %"class.blink::Document"** %137, align 8
  %139 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %138, i64 0, i32 52
  %140 = load i64, i64* %139, align 8
  %141 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %1, i64 0, i32 3, i32 2
  %142 = load i64, i64* %141, align 8, !noalias !27
  %143 = icmp eq i64 %140, %142
  br i1 %143, label %169, label %144

144:                                              ; preds = %132
  %145 = bitcast %"class.blink::Node"* %134 to i1 (%"class.blink::Node"*)***
  %146 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %145, align 8
  %147 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %146, i64 41
  %148 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %147, align 8
  %149 = call zeroext i1 %148(%"class.blink::Node"* %134) #9
  br i1 %149, label %150, label %152

150:                                              ; preds = %144
  %151 = load i32, i32* %129, align 8, !noalias !27
  br label %169

152:                                              ; preds = %144, %122
  %153 = getelementptr inbounds %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint"* %128, i64 0, i32 0, i32 0, i32 0
  %154 = load %"class.blink::Node"*, %"class.blink::Node"** %153, align 8, !noalias !27
  %155 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %154, i64 0, i32 3, i32 0, i32 0
  %156 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %155, align 8
  %157 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %156, i64 0, i32 2, i32 0, i32 0
  %158 = load %"class.blink::Document"*, %"class.blink::Document"** %157, align 8
  %159 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %158, i64 0, i32 52
  %160 = load i64, i64* %159, align 8
  %161 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %1, i64 0, i32 3, i32 2
  store i64 %160, i64* %161, align 8, !noalias !27
  %162 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %1, i64 0, i32 3, i32 1, i32 0, i32 0
  %163 = load %"class.blink::Node"*, %"class.blink::Node"** %162, align 8, !noalias !27
  %164 = icmp eq %"class.blink::Node"* %163, null
  br i1 %164, label %165, label %166

165:                                              ; preds = %152
  store i32 0, i32* %129, align 8, !noalias !27
  br label %169

166:                                              ; preds = %152
  %167 = call i32 @_ZNK5blink4Node9NodeIndexEv(%"class.blink::Node"* nonnull %163) #9
  %168 = add i32 %167, 1
  store i32 %168, i32* %129, align 8, !noalias !27
  br label %169

169:                                              ; preds = %132, %150, %165, %166
  %170 = phi i32 [ %151, %150 ], [ %130, %132 ], [ 0, %165 ], [ %168, %166 ]
  %171 = getelementptr inbounds %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint"* %128, i64 0, i32 0, i32 0, i32 0
  %172 = load %"class.blink::Node"*, %"class.blink::Node"** %171, align 8, !noalias !27
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"* nonnull %8, %"class.blink::Node"* %172, i32 %170) #9
  %173 = call dereferenceable(40) %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder6ExtendERKNS_16PositionTemplateIS3_EE(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* %126, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %8) #9
  call void @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder5BuildEv(%"class.blink::SelectionTemplate"* nonnull sret %5, %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* %173) #9
  %174 = bitcast %"class.blink::SetSelectionOptions"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %174) #9
  call void @_ZN5blink19SetSelectionOptionsC1Ev(%"class.blink::SetSelectionOptions"* nonnull %9) #9
  call void @_ZNK5blink12DOMSelection20UpdateFrameSelectionERKNS_17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEEPNS_5RangeERKNS_19SetSelectionOptionsE(%"class.blink::DOMSelection"* %0, %"class.blink::SelectionTemplate"* nonnull dereferenceable(40) %5, %"class.blink::Range"* %1, %"class.blink::SetSelectionOptions"* nonnull dereferenceable(24) %9)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %174) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %127) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %80) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %79) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %78) #9
  br label %231

175:                                              ; preds = %74
  %176 = tail call i32 @_ZNK5blink12DOMSelection10rangeCountEv(%"class.blink::DOMSelection"* %0) #9
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %189, label %178

178:                                              ; preds = %175
  %179 = bitcast %"class.blink::DummyExceptionStateForTesting"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %179) #9
  %180 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 0
  %181 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %181, align 8
  %182 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %182, align 2
  %183 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 1, i32 2
  %184 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 5, i32 0, i32 0
  %185 = bitcast %"class.WTF::StringImpl"** %184 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %185, i8 0, i64 16, i1 false) #9
  %186 = bitcast i8** %183 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %186, i8 0, i64 36, i1 false) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %180, align 8
  %187 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0
  %188 = call %"class.blink::Range"* @_ZNK5blink12DOMSelection10getRangeAtEjRNS_14ExceptionStateE(%"class.blink::DOMSelection"* %0, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %187) #9
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %179) #9
  br label %189

189:                                              ; preds = %175, %178
  %190 = phi %"class.blink::Range"* [ %188, %178 ], [ null, %175 ]
  %191 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %190, i64 0, i32 2, i32 0, i32 0, i32 0
  %192 = load %"class.blink::Node"*, %"class.blink::Node"** %191, align 8
  %193 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %192, i64 0, i32 3, i32 0, i32 0
  %194 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %193, align 8
  %195 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %196 = load %"class.blink::Node"*, %"class.blink::Node"** %195, align 8
  %197 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %196, i64 0, i32 3, i32 0, i32 0
  %198 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %197, align 8
  %199 = icmp eq %"class.blink::TreeScope"* %194, %198
  br i1 %199, label %200, label %231

200:                                              ; preds = %189
  %201 = bitcast %"class.blink::DummyExceptionStateForTesting"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %201) #9
  %202 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %10, i64 0, i32 0, i32 0
  %203 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %10, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %203, align 8
  %204 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %10, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %204, align 2
  %205 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %10, i64 0, i32 0, i32 1, i32 2
  %206 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %10, i64 0, i32 0, i32 5, i32 0, i32 0
  %207 = bitcast %"class.WTF::StringImpl"** %206 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %207, i8 0, i64 16, i1 false) #9
  %208 = bitcast i8** %205 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %208, i8 0, i64 36, i1 false) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %202, align 8
  %209 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %10, i64 0, i32 0
  %210 = call signext i16 @_ZNK5blink5Range21compareBoundaryPointsEjPKS0_RNS_14ExceptionStateE(%"class.blink::Range"* %190, i32 1, %"class.blink::Range"* %1, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %209) #9
  %211 = icmp slt i16 %210, 0
  br i1 %211, label %212, label %213

212:                                              ; preds = %200
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %201) #9
  br label %231

213:                                              ; preds = %200
  %214 = bitcast %"class.blink::DummyExceptionStateForTesting"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %214) #9
  %215 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %11, i64 0, i32 0, i32 0
  %216 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %11, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %216, align 8
  %217 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %11, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %217, align 2
  %218 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %11, i64 0, i32 0, i32 1, i32 2
  %219 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %11, i64 0, i32 0, i32 5, i32 0, i32 0
  %220 = bitcast %"class.WTF::StringImpl"** %219 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %220, i8 0, i64 16, i1 false) #9
  %221 = bitcast i8** %218 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %221, i8 0, i64 36, i1 false) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %215, align 8
  %222 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %11, i64 0, i32 0
  %223 = call signext i16 @_ZNK5blink5Range21compareBoundaryPointsEjPKS0_RNS_14ExceptionStateE(%"class.blink::Range"* %1, i32 1, %"class.blink::Range"* %190, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %222) #9
  %224 = icmp slt i16 %223, 0
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %214) #9
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %201) #9
  br i1 %224, label %231, label %225

225:                                              ; preds = %213
  %226 = getelementptr inbounds %"class.blink::DOMSelection", %"class.blink::DOMSelection"* %0, i64 0, i32 2, i32 0, i32 0
  %227 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %226, align 8
  %228 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %227, i64 0, i32 2, i32 0, i32 0
  %229 = load %"class.blink::Document"*, %"class.blink::Document"** %228, align 8
  %230 = call %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"* %229) #9
  call void @_ZN5blink11Deprecation16CountDeprecationEPNS_16ExecutionContextENS_5mojom10WebFeatureE(%"class.blink::ExecutionContext"* %230, i32 1786) #9
  br label %231

231:                                              ; preds = %189, %64, %23, %2, %212, %225, %213, %15, %63, %169
  ret void
}

declare zeroext i1 @_ZNK5blink5Range11IsConnectedEv(%"class.blink::Range"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12DOMSelection17AddConsoleWarningERKN3WTF6StringE(%"class.blink::DOMSelection"* nocapture readonly, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DOMSelection", %"class.blink::DOMSelection"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %3, align 8
  %5 = icmp eq %"class.blink::TreeScope"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %4, i64 0, i32 2, i32 0, i32 0
  %8 = load %"class.blink::Document"*, %"class.blink::Document"** %7, align 8
  %9 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #9
  %10 = bitcast i8* %9 to %"class.blink::ConsoleMessage"*
  %11 = tail call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #9
  tail call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %10, i32 1, i32 2, %"class.WTF::String"* dereferenceable(8) %1, %"class.blink::SourceLocation"* %11) #9
  %12 = getelementptr inbounds i8, i8* %9, i64 -4
  %13 = bitcast i8* %12 to i16*
  %14 = load atomic i16, i16* %13 monotonic, align 2
  %15 = or i16 %14, 1
  store atomic i16 %15, i16* %13 release, align 2
  tail call void @_ZNK5blink8Document17AddConsoleMessageEPNS_14ConsoleMessageEb(%"class.blink::Document"* %8, %"class.blink::ConsoleMessage"* %10, i1 zeroext false) #9
  br label %16

16:                                               ; preds = %2, %6
  ret void
}

declare dereferenceable(2848) %"class.blink::Document"* @_ZNK5blink14FrameSelection11GetDocumentEv(%"class.blink::FrameSelection"*) local_unnamed_addr #1

declare signext i16 @_ZNK5blink5Range21compareBoundaryPointsEjPKS0_RNS_14ExceptionStateE(%"class.blink::Range"*, i32, %"class.blink::Range"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

declare void @_ZN5blink11Deprecation16CountDeprecationEPNS_16ExecutionContextENS_5mojom10WebFeatureE(%"class.blink::ExecutionContext"*, i32) local_unnamed_addr #1

declare %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12DOMSelection18deleteFromDocumentEv(%"class.blink::DOMSelection"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %3 = alloca %"class.blink::VisibleSelectionTemplate", align 8
  %4 = alloca %"class.blink::EphemeralRangeTemplate", align 8
  %5 = alloca %"class.blink::VisibleSelectionTemplate", align 8
  %6 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %7 = getelementptr inbounds %"class.blink::DOMSelection", %"class.blink::DOMSelection"* %0, i64 0, i32 1
  %8 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %7) #9
  %9 = icmp eq %"class.blink::LocalDOMWindow"* %8, null
  br i1 %9, label %76, label %10

10:                                               ; preds = %1
  %11 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %7) #9
  %12 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %11, i64 0, i32 0, i32 1, i32 0, i32 0
  %13 = bitcast %"class.blink::Frame"** %12 to %"class.blink::LocalFrame"**
  %14 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %14, i64 0, i32 14, i32 0, i32 0
  %16 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %15, align 8
  %17 = tail call zeroext i1 @_ZNK5blink14FrameSelection11IsAvailableEv(%"class.blink::FrameSelection"* %16) #9
  br i1 %17, label %18, label %76

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.blink::DOMSelection", %"class.blink::DOMSelection"* %0, i64 0, i32 2, i32 0, i32 0
  %20 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %20, i64 0, i32 2, i32 0, i32 0
  %22 = load %"class.blink::Document"*, %"class.blink::Document"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %22, i64 0, i32 1
  %24 = icmp eq %"class.blink::TreeScope"* %20, %23
  br i1 %24, label %25, label %44

25:                                               ; preds = %18
  %26 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %7) #9
  %27 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %26, i64 0, i32 0, i32 1, i32 0, i32 0
  %28 = bitcast %"class.blink::Frame"** %27 to %"class.blink::LocalFrame"**
  %29 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %29, i64 0, i32 14, i32 0, i32 0
  %31 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %30, align 8
  %32 = tail call %"class.blink::Range"* @_ZNK5blink14FrameSelection19DocumentCachedRangeEv(%"class.blink::FrameSelection"* %31) #9
  %33 = icmp eq %"class.blink::Range"* %32, null
  br i1 %33, label %44, label %34

34:                                               ; preds = %25
  %35 = bitcast %"class.blink::DummyExceptionStateForTesting"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %35) #9
  %36 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %2, i64 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %2, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %37, align 8
  %38 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %2, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %38, align 2
  %39 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %2, i64 0, i32 0, i32 1, i32 2
  %40 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %2, i64 0, i32 0, i32 5, i32 0, i32 0
  %41 = bitcast %"class.WTF::StringImpl"** %40 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 16, i1 false) #9
  %42 = bitcast i8** %39 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 36, i1 false) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  %43 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %2, i64 0, i32 0
  call void @_ZN5blink5Range14deleteContentsERNS_14ExceptionStateE(%"class.blink::Range"* nonnull %32, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %43) #9
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %35) #9
  br label %76

44:                                               ; preds = %18, %25
  %45 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %7) #9
  %46 = tail call %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"* %45) #9
  tail call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %46, i32 21) #9
  %47 = bitcast %"class.blink::VisibleSelectionTemplate"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %47) #9
  %48 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %7) #9
  %49 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %48, i64 0, i32 0, i32 1, i32 0, i32 0
  %50 = bitcast %"class.blink::Frame"** %49 to %"class.blink::LocalFrame"**
  %51 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %51, i64 0, i32 14, i32 0, i32 0
  %53 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %52, align 8
  call void @_ZNK5blink14FrameSelection32ComputeVisibleSelectionInDOMTreeEv(%"class.blink::VisibleSelectionTemplate"* nonnull sret %3, %"class.blink::FrameSelection"* %53) #9
  %54 = call zeroext i1 @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE6IsNoneEv(%"class.blink::VisibleSelectionTemplate"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %47) #9
  br i1 %54, label %76, label %55

55:                                               ; preds = %44
  %56 = bitcast %"class.blink::EphemeralRangeTemplate"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %56) #9
  %57 = bitcast %"class.blink::VisibleSelectionTemplate"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %57) #9
  %58 = call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %7) #9
  %59 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %58, i64 0, i32 0, i32 1, i32 0, i32 0
  %60 = bitcast %"class.blink::Frame"** %59 to %"class.blink::LocalFrame"**
  %61 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %61, i64 0, i32 14, i32 0, i32 0
  %63 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %62, align 8
  call void @_ZNK5blink14FrameSelection32ComputeVisibleSelectionInDOMTreeEv(%"class.blink::VisibleSelectionTemplate"* nonnull sret %5, %"class.blink::FrameSelection"* %63) #9
  call void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE26ToNormalizedEphemeralRangeEv(%"class.blink::EphemeralRangeTemplate"* nonnull sret %4, %"class.blink::VisibleSelectionTemplate"* nonnull %5) #9
  %64 = call %"class.blink::Range"* @_ZN5blink11CreateRangeERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::EphemeralRangeTemplate"* nonnull dereferenceable(32) %4) #9
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %57) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %56) #9
  %65 = icmp eq %"class.blink::Range"* %64, null
  br i1 %65, label %76, label %66

66:                                               ; preds = %55
  %67 = bitcast %"class.blink::DummyExceptionStateForTesting"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %67) #9
  %68 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %6, i64 0, i32 0, i32 0
  %69 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %6, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %69, align 8
  %70 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %6, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %70, align 2
  %71 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %6, i64 0, i32 0, i32 1, i32 2
  %72 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %6, i64 0, i32 0, i32 5, i32 0, i32 0
  %73 = bitcast %"class.WTF::StringImpl"** %72 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %73, i8 0, i64 16, i1 false) #9
  %74 = bitcast i8** %71 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %74, i8 0, i64 36, i1 false) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %68, align 8
  %75 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %6, i64 0, i32 0
  call void @_ZN5blink5Range14deleteContentsERNS_14ExceptionStateE(%"class.blink::Range"* nonnull %64, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %75) #9
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %67) #9
  br label %76

76:                                               ; preds = %1, %66, %55, %34, %44, %10
  ret void
}

declare void @_ZN5blink5Range14deleteContentsERNS_14ExceptionStateE(%"class.blink::Range"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

declare void @_ZNK5blink14FrameSelection32ComputeVisibleSelectionInDOMTreeEv(%"class.blink::VisibleSelectionTemplate"* sret, %"class.blink::FrameSelection"*) local_unnamed_addr #1

declare void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE26ToNormalizedEphemeralRangeEv(%"class.blink::EphemeralRangeTemplate"* sret, %"class.blink::VisibleSelectionTemplate"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink12DOMSelection12containsNodeEPKNS_4NodeEb(%"class.blink::DOMSelection"*, %"class.blink::Node"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::EphemeralRangeTemplate", align 8
  %5 = alloca %"class.blink::VisibleSelectionTemplate", align 8
  %6 = alloca %"class.blink::PositionTemplate", align 8
  %7 = alloca %"class.blink::PositionTemplate", align 8
  %8 = alloca %"class.blink::PositionTemplate", align 8
  %9 = alloca %"class.blink::PositionTemplate", align 8
  %10 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %11 = getelementptr inbounds %"class.blink::DOMSelection", %"class.blink::DOMSelection"* %0, i64 0, i32 1
  %12 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %11) #9
  %13 = icmp eq %"class.blink::LocalDOMWindow"* %12, null
  br i1 %13, label %121, label %14

14:                                               ; preds = %3
  %15 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %11) #9
  %16 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %15, i64 0, i32 0, i32 1, i32 0, i32 0
  %17 = bitcast %"class.blink::Frame"** %16 to %"class.blink::LocalFrame"**
  %18 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %18, i64 0, i32 14, i32 0, i32 0
  %20 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %19, align 8
  %21 = tail call zeroext i1 @_ZNK5blink14FrameSelection11IsAvailableEv(%"class.blink::FrameSelection"* %20) #9
  br i1 %21, label %22, label %121

22:                                               ; preds = %14
  %23 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %11) #9
  %24 = tail call %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"* %23) #9
  %25 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 3, i32 0, i32 0
  %26 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %26, i64 0, i32 2, i32 0, i32 0
  %28 = load %"class.blink::Document"*, %"class.blink::Document"** %27, align 8
  %29 = icmp eq %"class.blink::Document"* %24, %28
  br i1 %29, label %30, label %121

30:                                               ; preds = %22
  %31 = tail call i32 @_ZNK5blink4Node9NodeIndexEv(%"class.blink::Node"* %1) #9
  %32 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %11) #9
  %33 = tail call %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"* %32) #9
  tail call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %33, i32 21) #9
  %34 = bitcast %"class.blink::EphemeralRangeTemplate"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %34) #9
  %35 = getelementptr inbounds %"class.blink::EphemeralRangeTemplate", %"class.blink::EphemeralRangeTemplate"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %36 = bitcast %"class.blink::VisibleSelectionTemplate"* %5 to i8*
  %37 = bitcast %"class.blink::EphemeralRangeTemplate"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %36) #9
  %38 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %11) #9
  %39 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %38, i64 0, i32 0, i32 1, i32 0, i32 0
  %40 = bitcast %"class.blink::Frame"** %39 to %"class.blink::LocalFrame"**
  %41 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %41, i64 0, i32 14, i32 0, i32 0
  %43 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %42, align 8
  call void @_ZNK5blink14FrameSelection42ComputeVisibleSelectionInDOMTreeDeprecatedEv(%"class.blink::VisibleSelectionTemplate"* nonnull sret %5, %"class.blink::FrameSelection"* %43) #9
  call void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE26ToNormalizedEphemeralRangeEv(%"class.blink::EphemeralRangeTemplate"* nonnull sret %4, %"class.blink::VisibleSelectionTemplate"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %36) #9
  %44 = load %"class.blink::Node"*, %"class.blink::Node"** %35, align 8
  %45 = icmp eq %"class.blink::Node"* %44, null
  br i1 %45, label %119, label %46

46:                                               ; preds = %30
  %47 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %1) #9
  %48 = icmp eq %"class.blink::ContainerNode"* %47, null
  br i1 %48, label %119, label %49

49:                                               ; preds = %46
  %50 = bitcast %"class.blink::PositionTemplate"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %50) #9
  %51 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %6, i64 0, i32 1
  %52 = bitcast %"class.blink::PositionTemplate"* %7 to i8*
  %53 = bitcast %"class.blink::PositionTemplate"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52) #9
  call void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE13StartPositionEv(%"class.blink::PositionTemplate"* nonnull sret %7, %"class.blink::EphemeralRangeTemplate"* nonnull %4) #9
  call void @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE16ToOffsetInAnchorEv(%"class.blink::PositionTemplate"* nonnull sret %6, %"class.blink::PositionTemplate"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52) #9
  %54 = bitcast %"class.blink::PositionTemplate"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54) #9
  %55 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %8, i64 0, i32 1
  %56 = bitcast %"class.blink::PositionTemplate"* %9 to i8*
  %57 = bitcast %"class.blink::PositionTemplate"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %56) #9
  call void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE11EndPositionEv(%"class.blink::PositionTemplate"* nonnull sret %9, %"class.blink::EphemeralRangeTemplate"* nonnull %4) #9
  call void @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE16ToOffsetInAnchorEv(%"class.blink::PositionTemplate"* nonnull sret %8, %"class.blink::PositionTemplate"* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %56) #9
  %58 = bitcast %"class.blink::DummyExceptionStateForTesting"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %58) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %58, i8 -86, i64 56, i1 false)
  %59 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %10, i64 0, i32 0, i32 0
  %60 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %10, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %60, align 8
  %61 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %10, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %61, align 2
  %62 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %10, i64 0, i32 0, i32 1, i32 2
  %63 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %10, i64 0, i32 0, i32 5, i32 0, i32 0
  %64 = bitcast %"class.WTF::StringImpl"** %63 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 16, i1 false) #9
  %65 = bitcast i8** %62 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 36, i1 false) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %59, align 8
  %66 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %47, i64 0, i32 0
  %67 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* nonnull %6) #9
  %68 = load i32, i32* %51, align 8
  %69 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %10, i64 0, i32 0
  %70 = call signext i16 @_ZN5blink5Range21compareBoundaryPointsEPNS_4NodeEjS2_jRNS_14ExceptionStateE(%"class.blink::Node"* %66, i32 %31, %"class.blink::Node"* %67, i32 %68, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %69) #9
  %71 = icmp sgt i16 %70, -1
  br i1 %71, label %72, label %85

72:                                               ; preds = %49
  %73 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %10, i64 0, i32 0, i32 4
  %74 = load i32, i32* %73, align 8
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %85

76:                                               ; preds = %72
  %77 = add i32 %31, 1
  %78 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* nonnull %8) #9
  %79 = load i32, i32* %55, align 8
  %80 = call signext i16 @_ZN5blink5Range21compareBoundaryPointsEPNS_4NodeEjS2_jRNS_14ExceptionStateE(%"class.blink::Node"* %66, i32 %77, %"class.blink::Node"* %78, i32 %79, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %69) #9
  %81 = icmp slt i16 %80, 1
  br i1 %81, label %82, label %85

82:                                               ; preds = %76
  %83 = load i32, i32* %73, align 8
  %84 = icmp eq i32 %83, 0
  br label %85

85:                                               ; preds = %72, %82, %76, %49
  %86 = phi i1 [ false, %76 ], [ false, %72 ], [ false, %49 ], [ %84, %82 ]
  %87 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %10, i64 0, i32 0, i32 4
  %88 = load i32, i32* %87, align 8
  %89 = icmp ne i32 %88, 0
  %90 = or i1 %86, %89
  %91 = xor i1 %89, true
  br i1 %90, label %117, label %92

92:                                               ; preds = %85
  %93 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* nonnull %8) #9
  %94 = load i32, i32* %55, align 8
  %95 = call signext i16 @_ZN5blink5Range21compareBoundaryPointsEPNS_4NodeEjS2_jRNS_14ExceptionStateE(%"class.blink::Node"* %66, i32 %31, %"class.blink::Node"* %93, i32 %94, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %69) #9
  %96 = icmp slt i16 %95, 1
  %97 = load i32, i32* %87, align 8
  %98 = icmp ne i32 %97, 0
  %99 = or i1 %96, %98
  br i1 %99, label %100, label %117

100:                                              ; preds = %92
  %101 = add i32 %31, 1
  %102 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* nonnull %6) #9
  %103 = load i32, i32* %51, align 8
  %104 = call signext i16 @_ZN5blink5Range21compareBoundaryPointsEPNS_4NodeEjS2_jRNS_14ExceptionStateE(%"class.blink::Node"* %66, i32 %101, %"class.blink::Node"* %102, i32 %103, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %69) #9
  %105 = icmp slt i16 %104, 0
  br i1 %105, label %106, label %111

106:                                              ; preds = %100
  %107 = load i32, i32* %87, align 8
  %108 = icmp eq i32 %107, 0
  %109 = or i1 %108, %2
  %110 = xor i1 %108, true
  br i1 %109, label %117, label %112

111:                                              ; preds = %100
  br i1 %2, label %117, label %112

112:                                              ; preds = %106, %111
  %113 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 1
  %114 = load i32, i32* %113, align 8
  %115 = and i32 %114, 12
  %116 = icmp eq i32 %115, 4
  br label %117

117:                                              ; preds = %92, %106, %85, %112, %111
  %118 = phi i1 [ %91, %85 ], [ %110, %106 ], [ true, %111 ], [ %116, %112 ], [ false, %92 ]
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %58) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #9
  br label %119

119:                                              ; preds = %117, %46, %30
  %120 = phi i1 [ false, %30 ], [ %118, %117 ], [ false, %46 ]
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %34) #9
  br label %121

121:                                              ; preds = %22, %3, %14, %119
  %122 = phi i1 [ %120, %119 ], [ false, %14 ], [ false, %22 ], [ false, %3 ]
  ret i1 %122
}

declare i32 @_ZNK5blink4Node9NodeIndexEv(%"class.blink::Node"*) local_unnamed_addr #1

declare %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"*) local_unnamed_addr #1

declare void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE13StartPositionEv(%"class.blink::PositionTemplate"* sret, %"class.blink::EphemeralRangeTemplate"*) local_unnamed_addr #1

declare void @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE16ToOffsetInAnchorEv(%"class.blink::PositionTemplate"* sret, %"class.blink::PositionTemplate"*) local_unnamed_addr #1

declare void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE11EndPositionEv(%"class.blink::PositionTemplate"* sret, %"class.blink::EphemeralRangeTemplate"*) local_unnamed_addr #1

declare signext i16 @_ZN5blink5Range21compareBoundaryPointsEPNS_4NodeEjS2_jRNS_14ExceptionStateE(%"class.blink::Node"*, i32, %"class.blink::Node"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

declare %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12DOMSelection17selectAllChildrenEPNS_4NodeERNS_14ExceptionStateE(%"class.blink::DOMSelection"*, %"class.blink::Node"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = icmp eq %"class.blink::Node"* %1, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %5
  %11 = bitcast %"class.blink::Node"* %1 to %"class.blink::ContainerNode"*
  %12 = tail call i32 @_ZNK5blink13ContainerNode13CountChildrenEv(%"class.blink::ContainerNode"* nonnull %11) #9
  br label %13

13:                                               ; preds = %3, %5, %10
  %14 = phi i32 [ %12, %10 ], [ 0, %3 ], [ 0, %5 ]
  tail call void @_ZN5blink12DOMSelection16setBaseAndExtentEPNS_4NodeEjS2_jRNS_14ExceptionStateE(%"class.blink::DOMSelection"* %0, %"class.blink::Node"* %1, i32 0, %"class.blink::Node"* %1, i32 %14, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink12DOMSelection8toStringEv(%"class.blink::DOMSelection"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::EphemeralRangeTemplate", align 8
  %3 = alloca %"class.blink::VisibleSelectionTemplate", align 8
  %4 = alloca %"class.blink::TextIteratorBehavior", align 4
  %5 = alloca %"class.blink::TextIteratorBehavior::Builder", align 4
  %6 = getelementptr inbounds %"class.blink::DOMSelection", %"class.blink::DOMSelection"* %0, i64 0, i32 1
  %7 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %6) #9
  %8 = icmp eq %"class.blink::LocalDOMWindow"* %7, null
  br i1 %8, label %40, label %9

9:                                                ; preds = %1
  %10 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %6) #9
  %11 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %10, i64 0, i32 0, i32 1, i32 0, i32 0
  %12 = bitcast %"class.blink::Frame"** %11 to %"class.blink::LocalFrame"**
  %13 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %13, i64 0, i32 14, i32 0, i32 0
  %15 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %14, align 8
  %16 = tail call zeroext i1 @_ZNK5blink14FrameSelection11IsAvailableEv(%"class.blink::FrameSelection"* %15) #9
  br i1 %16, label %17, label %40

17:                                               ; preds = %9
  %18 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %6) #9
  %19 = tail call %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"* %18) #9
  tail call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %19, i32 21) #9
  %20 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %6) #9
  %21 = tail call %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"* %20) #9
  %22 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %21, i64 0, i32 5, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = add nsw i32 %23, 1
  store i32 %24, i32* %22, align 4
  %25 = bitcast %"class.blink::EphemeralRangeTemplate"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %25) #9
  %26 = bitcast %"class.blink::VisibleSelectionTemplate"* %3 to i8*
  %27 = bitcast %"class.blink::EphemeralRangeTemplate"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %26) #9
  %28 = tail call %"class.blink::LocalDOMWindow"* @_ZNK5blink22ExecutionContextClient9DomWindowEv(%"class.blink::ExecutionContextClient"* %6) #9
  %29 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %28, i64 0, i32 0, i32 1, i32 0, i32 0
  %30 = bitcast %"class.blink::Frame"** %29 to %"class.blink::LocalFrame"**
  %31 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %31, i64 0, i32 14, i32 0, i32 0
  %33 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %32, align 8
  call void @_ZNK5blink14FrameSelection42ComputeVisibleSelectionInDOMTreeDeprecatedEv(%"class.blink::VisibleSelectionTemplate"* nonnull sret %3, %"class.blink::FrameSelection"* %33) #9
  call void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE26ToNormalizedEphemeralRangeEv(%"class.blink::EphemeralRangeTemplate"* nonnull sret %2, %"class.blink::VisibleSelectionTemplate"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %26) #9
  %34 = bitcast %"class.blink::TextIteratorBehavior"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %34) #9
  %35 = bitcast %"class.blink::TextIteratorBehavior::Builder"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %35) #9
  call void @_ZN5blink20TextIteratorBehavior7BuilderC1Ev(%"class.blink::TextIteratorBehavior::Builder"* nonnull %5) #9
  %36 = call dereferenceable(4) %"class.blink::TextIteratorBehavior::Builder"* @_ZN5blink20TextIteratorBehavior7Builder23SetForSelectionToStringEb(%"class.blink::TextIteratorBehavior::Builder"* nonnull %5, i1 zeroext true) #9
  call void @_ZN5blink20TextIteratorBehavior7Builder5BuildEv(%"class.blink::TextIteratorBehavior"* nonnull sret %4, %"class.blink::TextIteratorBehavior::Builder"* %36) #9
  %37 = call %"class.WTF::StringImpl"* @_ZN5blink9PlainTextERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEERKNS_20TextIteratorBehaviorE(%"class.blink::EphemeralRangeTemplate"* nonnull dereferenceable(32) %2, %"class.blink::TextIteratorBehavior"* nonnull dereferenceable(4) %4) #9
  call void @_ZN5blink20TextIteratorBehavior7BuilderD1Ev(%"class.blink::TextIteratorBehavior::Builder"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %35) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %34) #9
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %25) #9
  %38 = load i32, i32* %22, align 4
  %39 = add nsw i32 %38, -1
  store i32 %39, i32* %22, align 4
  br label %40

40:                                               ; preds = %1, %9, %17
  %41 = phi %"class.WTF::StringImpl"* [ %37, %17 ], [ null, %9 ], [ null, %1 ]
  ret %"class.WTF::StringImpl"* %41
}

declare %"class.WTF::StringImpl"* @_ZN5blink9PlainTextERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEERKNS_20TextIteratorBehaviorE(%"class.blink::EphemeralRangeTemplate"* dereferenceable(32), %"class.blink::TextIteratorBehavior"* dereferenceable(4)) local_unnamed_addr #1

declare void @_ZN5blink20TextIteratorBehavior7BuilderC1Ev(%"class.blink::TextIteratorBehavior::Builder"*) unnamed_addr #1

declare dereferenceable(4) %"class.blink::TextIteratorBehavior::Builder"* @_ZN5blink20TextIteratorBehavior7Builder23SetForSelectionToStringEb(%"class.blink::TextIteratorBehavior::Builder"*, i1 zeroext) local_unnamed_addr #1

declare void @_ZN5blink20TextIteratorBehavior7Builder5BuildEv(%"class.blink::TextIteratorBehavior"* sret, %"class.blink::TextIteratorBehavior::Builder"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink20TextIteratorBehavior7BuilderD1Ev(%"class.blink::TextIteratorBehavior::Builder"*) unnamed_addr #5

declare i32 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE28ComputeOffsetInContainerNodeEv(%"class.blink::PositionTemplate"*) local_unnamed_addr #1

declare void @_ZNK5blink8Document17AddConsoleMessageEPNS_14ConsoleMessageEb(%"class.blink::Document"*, %"class.blink::ConsoleMessage"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink12DOMSelection5TraceEPNS_7VisitorE(%"class.blink::DOMSelection"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DOMSelection", %"class.blink::DOMSelection"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %73, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = and i64 %5, -131072
  %10 = inttoptr i64 %9 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 4138
  %12 = load i8, i8* %11, align 2
  %13 = icmp eq i8 %12, 1
  br i1 %13, label %14, label %16

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i64 4160
  br label %54

16:                                               ; preds = %7
  %17 = getelementptr inbounds i8, i8* %10, i64 4096
  %18 = bitcast i8* %17 to %"class.blink::NormalPage"*
  %19 = getelementptr inbounds i8, i8* %10, i64 4400
  %20 = bitcast i8* %19 to i8**
  %21 = bitcast i8* %19 to i64*
  %22 = load i64, i64* %21, align 16
  %23 = sub i64 %5, %22
  %24 = lshr i64 %23, 3
  %25 = lshr i64 %23, 6
  %26 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %18, i64 0, i32 2, i32 0, i32 1, i64 %25
  %27 = load atomic i8, i8* %26 acquire, align 1
  %28 = trunc i64 %24 to i32
  %29 = and i32 %28, 7
  %30 = shl i32 2, %29
  %31 = trunc i32 %30 to i8
  %32 = add i8 %31, -1
  %33 = and i8 %32, %27
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %41

35:                                               ; preds = %16, %35
  %36 = phi i64 [ %37, %35 ], [ %25, %16 ]
  %37 = add i64 %36, -1
  %38 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %18, i64 0, i32 2, i32 0, i32 1, i64 %37
  %39 = load atomic i8, i8* %38 acquire, align 1
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %35, label %41

41:                                               ; preds = %35, %16
  %42 = phi i64 [ %25, %16 ], [ %37, %35 ]
  %43 = phi i8 [ %33, %16 ], [ %39, %35 ]
  %44 = zext i8 %43 to i32
  %45 = tail call i32 @llvm.ctlz.i32(i32 %44, i1 true) #9, !range !32
  %46 = add nsw i32 %45, -24
  %47 = shl i64 %42, 3
  %48 = or i64 %47, 7
  %49 = sext i32 %46 to i64
  %50 = sub i64 %48, %49
  %51 = shl i64 %50, 3
  %52 = load i8*, i8** %20, align 16
  %53 = getelementptr inbounds i8, i8* %52, i64 %51
  br label %54

54:                                               ; preds = %41, %14
  %55 = phi i8* [ %15, %14 ], [ %53, %41 ]
  %56 = getelementptr inbounds i8, i8* %55, i64 8
  %57 = getelementptr inbounds i8, i8* %55, i64 4
  %58 = bitcast i8* %57 to i16*
  %59 = load atomic i16, i16* %58 acquire, align 2
  %60 = lshr i16 %59, 2
  %61 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %62 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %61, i64 0, i32 0
  %63 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %62, align 8
  %64 = zext i16 %60 to i64
  %65 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %63, i64 %64
  %66 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %65, align 8
  %67 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %66, i64 0, i32 0
  %68 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %67, align 8
  %69 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %70 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %70, i64 5
  %72 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %71, align 8
  tail call void %72(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* %56, void (%"class.blink::Visitor"*, i8*)* %68) #9
  br label %73

73:                                               ; preds = %2, %54
  %74 = getelementptr inbounds %"class.blink::DOMSelection", %"class.blink::DOMSelection"* %0, i64 0, i32 0
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %74, %"class.blink::Visitor"* %1) #9
  %75 = getelementptr inbounds %"class.blink::DOMSelection", %"class.blink::DOMSelection"* %0, i64 0, i32 1
  tail call void @_ZNK5blink22ExecutionContextClient5TraceEPNS_7VisitorE(%"class.blink::ExecutionContextClient"* %75, %"class.blink::Visitor"* %1) #9
  ret void
}

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #1

declare void @_ZNK5blink22ExecutionContextClient5TraceEPNS_7VisitorE(%"class.blink::ExecutionContextClient"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_NK5blink12DOMSelection5TraceEPNS_7VisitorE(%"class.blink::DOMSelection"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DOMSelection", %"class.blink::DOMSelection"* %0, i64 -1, i32 1, i32 1
  %4 = bitcast %"class.blink::WeakMember"* %3 to %"class.blink::DOMSelection"*
  tail call void @_ZNK5blink12DOMSelection5TraceEPNS_7VisitorE(%"class.blink::DOMSelection"* %4, %"class.blink::Visitor"* %1)
  ret void
}

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15ScriptWrappableD2Ev(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12DOMSelectionD0Ev(%"class.blink::DOMSelection"*) unnamed_addr #6 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable17HasEventListenersEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink12DOMSelection18GetWrapperTypeInfoEv(%"class.blink::DOMSelection"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink12DOMSelection18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #1

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blinkeqERKNS_18RangeBoundaryPointES2_(%"class.blink::RangeBoundaryPoint"* dereferenceable(32), %"class.blink::RangeBoundaryPoint"* dereferenceable(32)) local_unnamed_addr #6 comdat {
  %3 = getelementptr inbounds %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint"* %1, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  %7 = icmp eq %"class.blink::Node"* %4, %6
  br i1 %7, label %8, label %101

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.blink::Node"*, %"class.blink::Node"** %9, align 8
  %11 = icmp eq %"class.blink::Node"* %10, null
  %12 = getelementptr inbounds %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint"* %1, i64 0, i32 1, i32 0, i32 0
  %13 = load %"class.blink::Node"*, %"class.blink::Node"** %12, align 8
  %14 = icmp eq %"class.blink::Node"* %13, null
  %15 = and i1 %11, %14
  br i1 %15, label %18, label %16

16:                                               ; preds = %8
  %17 = icmp eq %"class.blink::Node"* %10, %13
  br i1 %17, label %100, label %101

18:                                               ; preds = %8
  %19 = getelementptr inbounds %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint"* %0, i64 0, i32 3
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, -1
  br i1 %21, label %43, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %4, i64 0, i32 3, i32 0, i32 0
  %24 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %24, i64 0, i32 2, i32 0, i32 0
  %26 = load %"class.blink::Document"*, %"class.blink::Document"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %26, i64 0, i32 52
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint"* %0, i64 0, i32 2
  %30 = load i64, i64* %29, align 8
  %31 = icmp eq i64 %28, %30
  br i1 %31, label %58, label %32

32:                                               ; preds = %22
  %33 = bitcast %"class.blink::Node"* %4 to i1 (%"class.blink::Node"*)***
  %34 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %33, align 8
  %35 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %34, i64 41
  %36 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %35, align 8
  %37 = tail call zeroext i1 %36(%"class.blink::Node"* %4) #9
  br i1 %37, label %41, label %38

38:                                               ; preds = %32
  %39 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %40 = load %"class.blink::Node"*, %"class.blink::Node"** %9, align 8
  br label %43

41:                                               ; preds = %32
  %42 = load i32, i32* %19, align 8
  br label %58

43:                                               ; preds = %38, %18
  %44 = phi %"class.blink::Node"* [ %40, %38 ], [ null, %18 ]
  %45 = phi %"class.blink::Node"* [ %39, %38 ], [ %4, %18 ]
  %46 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %45, i64 0, i32 3, i32 0, i32 0
  %47 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %47, i64 0, i32 2, i32 0, i32 0
  %49 = load %"class.blink::Document"*, %"class.blink::Document"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %49, i64 0, i32 52
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint"* %0, i64 0, i32 2
  store i64 %51, i64* %52, align 8
  %53 = icmp eq %"class.blink::Node"* %44, null
  br i1 %53, label %54, label %55

54:                                               ; preds = %43
  store i32 0, i32* %19, align 8
  br label %58

55:                                               ; preds = %43
  %56 = tail call i32 @_ZNK5blink4Node9NodeIndexEv(%"class.blink::Node"* nonnull %44) #9
  %57 = add i32 %56, 1
  store i32 %57, i32* %19, align 8
  br label %58

58:                                               ; preds = %22, %41, %54, %55
  %59 = phi i32 [ %42, %41 ], [ %20, %22 ], [ 0, %54 ], [ %57, %55 ]
  %60 = getelementptr inbounds %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint"* %1, i64 0, i32 3
  %61 = load i32, i32* %60, align 8
  %62 = icmp eq i32 %61, -1
  br i1 %62, label %82, label %63

63:                                               ; preds = %58
  %64 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  %65 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %64, i64 0, i32 3, i32 0, i32 0
  %66 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %65, align 8
  %67 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %66, i64 0, i32 2, i32 0, i32 0
  %68 = load %"class.blink::Document"*, %"class.blink::Document"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %68, i64 0, i32 52
  %70 = load i64, i64* %69, align 8
  %71 = getelementptr inbounds %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint"* %1, i64 0, i32 2
  %72 = load i64, i64* %71, align 8
  %73 = icmp eq i64 %70, %72
  br i1 %73, label %97, label %74

74:                                               ; preds = %63
  %75 = bitcast %"class.blink::Node"* %64 to i1 (%"class.blink::Node"*)***
  %76 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %75, align 8
  %77 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %76, i64 41
  %78 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %77, align 8
  %79 = tail call zeroext i1 %78(%"class.blink::Node"* %64) #9
  br i1 %79, label %80, label %82

80:                                               ; preds = %74
  %81 = load i32, i32* %60, align 8
  br label %97

82:                                               ; preds = %74, %58
  %83 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  %84 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %83, i64 0, i32 3, i32 0, i32 0
  %85 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %84, align 8
  %86 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %85, i64 0, i32 2, i32 0, i32 0
  %87 = load %"class.blink::Document"*, %"class.blink::Document"** %86, align 8
  %88 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %87, i64 0, i32 52
  %89 = load i64, i64* %88, align 8
  %90 = getelementptr inbounds %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint"* %1, i64 0, i32 2
  store i64 %89, i64* %90, align 8
  %91 = load %"class.blink::Node"*, %"class.blink::Node"** %12, align 8
  %92 = icmp eq %"class.blink::Node"* %91, null
  br i1 %92, label %93, label %94

93:                                               ; preds = %82
  store i32 0, i32* %60, align 8
  br label %97

94:                                               ; preds = %82
  %95 = tail call i32 @_ZNK5blink4Node9NodeIndexEv(%"class.blink::Node"* nonnull %91) #9
  %96 = add i32 %95, 1
  store i32 %96, i32* %60, align 8
  br label %97

97:                                               ; preds = %63, %80, %93, %94
  %98 = phi i32 [ %81, %80 ], [ %61, %63 ], [ 0, %93 ], [ %96, %94 ]
  %99 = icmp eq i32 %59, %98
  br i1 %99, label %100, label %101

100:                                              ; preds = %16, %97
  br label %101

101:                                              ; preds = %2, %97, %16, %100
  %102 = phi i1 [ true, %100 ], [ false, %2 ], [ false, %16 ], [ false, %97 ]
  ret i1 %102
}

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

declare void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"*) unnamed_addr #1

declare zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #1

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE5StartEv(%"class.blink::PositionTemplate"* sret, %"class.blink::VisibleSelectionTemplate"*) local_unnamed_addr #1

declare void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE3EndEv(%"class.blink::PositionTemplate"* sret, %"class.blink::VisibleSelectionTemplate"*) local_unnamed_addr #1

declare void @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE24ParentAnchoredEquivalentEv(%"class.blink::PositionTemplate"* sret, %"class.blink::PositionTemplate"*) local_unnamed_addr #1

declare i32 @_ZNK5blink13ContainerNode13CountChildrenEv(%"class.blink::ContainerNode"*) local_unnamed_addr #1

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"*, %"class.blink::PositionTemplate"* dereferenceable(16)) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1677", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = bitcast %"class.WTF::StringTypeAdapter.1677"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #9
  %18 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1677", %"class.WTF::StringTypeAdapter.1677"* %4, i64 0, i32 1
  %19 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %20 = bitcast %"class.WTF::StringTypeAdapter.1677"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false)
  %21 = load i8*, i8** %19, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1677"* nonnull %4, i8* %21) #9
  %22 = load i32, i32* %18, align 8
  %23 = add i32 %22, %16
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %16
  br i1 %27, label %29, label %28

28:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %15
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #9
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22, i64 0, i64 0), i8* %30, i8* %31) #9
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.23, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #9
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #9
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #9
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = load i32, i32* %18, align 8
  %42 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = icmp ult i32 %23, %41
  br i1 %43, label %45, label %44

44:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* null, i8** %40, align 8
  br label %54

45:                                               ; preds = %38
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #9
  %47 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %41) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.24, i64 0, i64 0), i8* %46, i8* %47) #9
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* %49, i8** %40, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.23, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #9
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #9
  br label %54

54:                                               ; preds = %44, %45, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #9
  ret i32 %23
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1677"*, i8*) unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.1676"*, i8*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.1677"*, i8*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1676"*, i16*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1677"*, i16*) local_unnamed_addr #1

declare %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #1

declare void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"*, i32, i32, %"class.WTF::String"* dereferenceable(8), %"class.blink::SourceLocation"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #9
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !21

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #9
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #9
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #9
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #9
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.25, i64 0, i64 0), i8* %40, i8* %41) #9
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #9
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.26, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #9
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #9
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !21

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #9
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ConsoleMessage"*
  tail call void @_ZNK5blink14ConsoleMessage5TraceEPNS_7VisitorE(%"class.blink::ConsoleMessage"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ConsoleMessage"*
  tail call void @_ZN5blink14ConsoleMessageD1Ev(%"class.blink::ConsoleMessage"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.27, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

declare void @_ZNK5blink14ConsoleMessage5TraceEPNS_7VisitorE(%"class.blink::ConsoleMessage"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink14ConsoleMessageD1Ev(%"class.blink::ConsoleMessage"*) unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK5blink12DOMSelection19GetVisibleSelectionEv: argument 0"}
!4 = distinct !{!4, !"_ZNK5blink12DOMSelection19GetVisibleSelectionEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN5blinkL14AnchorPositionERKNS_24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE: argument 0"}
!7 = distinct !{!7, !"_ZN5blinkL14AnchorPositionERKNS_24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN5blinkL13FocusPositionERKNS_24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE: argument 0"}
!10 = distinct !{!10, !"_ZN5blinkL13FocusPositionERKNS_24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE"}
!11 = !{!12, !14}
!12 = distinct !{!12, !13, !"_ZNK5blink18RangeBoundaryPoint10ToPositionEv: argument 0"}
!13 = distinct !{!13, !"_ZNK5blink18RangeBoundaryPoint10ToPositionEv"}
!14 = distinct !{!14, !15, !"_ZNK5blink5Range11EndPositionEv: argument 0"}
!15 = distinct !{!15, !"_ZNK5blink5Range11EndPositionEv"}
!16 = !{!17, !19}
!17 = distinct !{!17, !18, !"_ZNK5blink18RangeBoundaryPoint10ToPositionEv: argument 0"}
!18 = distinct !{!18, !"_ZNK5blink18RangeBoundaryPoint10ToPositionEv"}
!19 = distinct !{!19, !20, !"_ZNK5blink5Range13StartPositionEv: argument 0"}
!20 = distinct !{!20, !"_ZNK5blink5Range13StartPositionEv"}
!21 = !{!"branch_weights", i32 1, i32 2000}
!22 = !{!23, !25}
!23 = distinct !{!23, !24, !"_ZNK5blink18RangeBoundaryPoint10ToPositionEv: argument 0"}
!24 = distinct !{!24, !"_ZNK5blink18RangeBoundaryPoint10ToPositionEv"}
!25 = distinct !{!25, !26, !"_ZNK5blink5Range13StartPositionEv: argument 0"}
!26 = distinct !{!26, !"_ZNK5blink5Range13StartPositionEv"}
!27 = !{!28, !30}
!28 = distinct !{!28, !29, !"_ZNK5blink18RangeBoundaryPoint10ToPositionEv: argument 0"}
!29 = distinct !{!29, !"_ZNK5blink18RangeBoundaryPoint10ToPositionEv"}
!30 = distinct !{!30, !31, !"_ZNK5blink5Range11EndPositionEv: argument 0"}
!31 = distinct !{!31, !"_ZNK5blink5Range11EndPositionEv"}
!32 = !{i32 24, i32 33}
