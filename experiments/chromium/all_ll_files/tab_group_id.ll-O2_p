; ModuleID = '../../components/tab_groups/tab_group_id.cc'
source_filename = "../../components/tab_groups/tab_group_id.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.tab_groups::TabGroupId" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }

@_ZN10tab_groups10TabGroupIdC1ERKS0_ = hidden unnamed_addr alias void (%"class.tab_groups::TabGroupId"*, %"class.tab_groups::TabGroupId"*), void (%"class.tab_groups::TabGroupId"*, %"class.tab_groups::TabGroupId"*)* @_ZN10tab_groups10TabGroupIdC2ERKS0_
@_ZN10tab_groups10TabGroupIdC1EN4base5TokenE = hidden unnamed_addr alias void (%"class.tab_groups::TabGroupId"*, i64, i64), void (%"class.tab_groups::TabGroupId"*, i64, i64)* @_ZN10tab_groups10TabGroupIdC2EN4base5TokenE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10tab_groups10TabGroupId11GenerateNewEv(%"class.tab_groups::TabGroupId"* noalias nocapture sret) local_unnamed_addr #0 align 2 {
  %2 = tail call { i64, i64 } @_ZN4base5Token12CreateRandomEv() #6
  %3 = extractvalue { i64, i64 } %2, 0
  %4 = extractvalue { i64, i64 } %2, 1
  %5 = getelementptr inbounds %"class.tab_groups::TabGroupId", %"class.tab_groups::TabGroupId"* %0, i64 0, i32 0, i32 0
  store i64 %3, i64* %5, align 8
  %6 = getelementptr inbounds %"class.tab_groups::TabGroupId", %"class.tab_groups::TabGroupId"* %0, i64 0, i32 0, i32 1
  store i64 %4, i64* %6, align 8
  ret void
}

declare { i64, i64 } @_ZN4base5Token12CreateRandomEv() local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN10tab_groups10TabGroupId12FromRawTokenEN4base5TokenE(%"class.tab_groups::TabGroupId"* noalias nocapture sret, i64, i64) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.tab_groups::TabGroupId", %"class.tab_groups::TabGroupId"* %0, i64 0, i32 0, i32 0
  store i64 %1, i64* %4, align 8
  %5 = getelementptr inbounds %"class.tab_groups::TabGroupId", %"class.tab_groups::TabGroupId"* %0, i64 0, i32 0, i32 1
  store i64 %2, i64* %5, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable writeonly
define hidden void @_ZN10tab_groups10TabGroupId11CreateEmptyEv(%"class.tab_groups::TabGroupId"* noalias nocapture sret) local_unnamed_addr #4 align 2 {
  %2 = bitcast %"class.tab_groups::TabGroupId"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10tab_groups10TabGroupIdC2ERKS0_(%"class.tab_groups::TabGroupId"* nocapture, %"class.tab_groups::TabGroupId"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.tab_groups::TabGroupId"* %0 to i8*
  %4 = bitcast %"class.tab_groups::TabGroupId"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %"class.tab_groups::TabGroupId"* @_ZN10tab_groups10TabGroupIdaSERKS0_(%"class.tab_groups::TabGroupId"* returned, %"class.tab_groups::TabGroupId"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.tab_groups::TabGroupId"* %0 to i8*
  %4 = bitcast %"class.tab_groups::TabGroupId"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false)
  ret %"class.tab_groups::TabGroupId"* %0
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10tab_groups10TabGroupIdeqERKS0_(%"class.tab_groups::TabGroupId"* nocapture readonly, %"class.tab_groups::TabGroupId"* nocapture readonly dereferenceable(16)) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.tab_groups::TabGroupId", %"class.tab_groups::TabGroupId"* %0, i64 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.tab_groups::TabGroupId", %"class.tab_groups::TabGroupId"* %1, i64 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %8, label %14

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.tab_groups::TabGroupId", %"class.tab_groups::TabGroupId"* %0, i64 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.tab_groups::TabGroupId", %"class.tab_groups::TabGroupId"* %1, i64 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %10, %12
  br label %14

14:                                               ; preds = %2, %8
  %15 = phi i1 [ false, %2 ], [ %13, %8 ]
  ret i1 %15
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10tab_groups10TabGroupIdneERKS0_(%"class.tab_groups::TabGroupId"* nocapture readonly, %"class.tab_groups::TabGroupId"* nocapture readonly dereferenceable(16)) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.tab_groups::TabGroupId", %"class.tab_groups::TabGroupId"* %0, i64 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.tab_groups::TabGroupId", %"class.tab_groups::TabGroupId"* %1, i64 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %8, label %14

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.tab_groups::TabGroupId", %"class.tab_groups::TabGroupId"* %0, i64 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.tab_groups::TabGroupId", %"class.tab_groups::TabGroupId"* %1, i64 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp ne i64 %10, %12
  br label %14

14:                                               ; preds = %2, %8
  %15 = phi i1 [ true, %2 ], [ %13, %8 ]
  ret i1 %15
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10tab_groups10TabGroupIdltERKS0_(%"class.tab_groups::TabGroupId"* nocapture readonly, %"class.tab_groups::TabGroupId"* nocapture readonly dereferenceable(16)) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.tab_groups::TabGroupId", %"class.tab_groups::TabGroupId"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.tab_groups::TabGroupId", %"class.tab_groups::TabGroupId"* %0, i64 0, i32 0, i32 1
  %5 = getelementptr inbounds %"class.tab_groups::TabGroupId", %"class.tab_groups::TabGroupId"* %1, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.tab_groups::TabGroupId", %"class.tab_groups::TabGroupId"* %1, i64 0, i32 0, i32 1
  %7 = load i64, i64* %3, align 8
  %8 = load i64, i64* %5, align 8
  %9 = icmp ult i64 %7, %8
  br i1 %9, label %16, label %10

10:                                               ; preds = %2
  %11 = icmp ult i64 %8, %7
  br i1 %11, label %16, label %12

12:                                               ; preds = %10
  %13 = load i64, i64* %4, align 8
  %14 = load i64, i64* %6, align 8
  %15 = icmp ult i64 %13, %14
  br label %16

16:                                               ; preds = %2, %10, %12
  %17 = phi i1 [ %15, %12 ], [ true, %2 ], [ false, %10 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10tab_groups10TabGroupId8ToStringEv(%"class.std::__1::basic_string"* noalias sret, %"class.tab_groups::TabGroupId"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.tab_groups::TabGroupId", %"class.tab_groups::TabGroupId"* %1, i64 0, i32 0
  tail call void @_ZNK4base5Token8ToStringEv(%"class.std::__1::basic_string"* sret %0, %"class.base::Token"* %3) #6
  ret void
}

declare void @_ZNK4base5Token8ToStringEv(%"class.std::__1::basic_string"* sret, %"class.base::Token"*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN10tab_groups10TabGroupIdC2EN4base5TokenE(%"class.tab_groups::TabGroupId"* nocapture, i64, i64) unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.tab_groups::TabGroupId", %"class.tab_groups::TabGroupId"* %0, i64 0, i32 0, i32 0
  store i64 %1, i64* %4, align 8
  %5 = getelementptr inbounds %"class.tab_groups::TabGroupId", %"class.tab_groups::TabGroupId"* %0, i64 0, i32 0, i32 1
  store i64 %2, i64* %5, align 8
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
