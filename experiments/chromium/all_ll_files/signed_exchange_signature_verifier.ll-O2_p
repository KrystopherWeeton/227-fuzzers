; ModuleID = '../../content/browser/web_package/signed_exchange_signature_verifier.cc'
source_filename = "../../content/browser/web_package/signed_exchange_signature_verifier.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.content::SignedExchangeEnvelope" = type { %"class.std::__1::vector", %"struct.content::signed_exchange_utils::URLWithRawString", i32, %"class.std::__1::map", %"struct.content::SignedExchangeSignatureHeaderField::Signature" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"struct.content::signed_exchange_utils::URLWithRawString" = type { %class.GURL, %"class.std::__1::basic_string" }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %class.GURL* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { i64 }
%"struct.content::SignedExchangeSignatureHeaderField::Signature" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %class.GURL, %"class.absl::optional", %"struct.content::signed_exchange_utils::URLWithRawString", i64, i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.17 }
%union.anon.17 = type { %"struct.net::SHA256HashValue" }
%"struct.net::SHA256HashValue" = type { [32 x i8] }
%"class.content::SignedExchangeCertificateChain" = type { %class.scoped_refptr, %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr = type { %"class.net::X509Certificate"* }
%"class.net::X509Certificate" = type { %"class.base::RefCountedThreadSafe", %"struct.net::CertPrincipal", %"struct.net::CertPrincipal", %"class.base::Time", %"class.base::Time", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.26", %"class.std::__1::vector.30" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.18" }
%"struct.std::__1::__atomic_base.18" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.net::CertPrincipal" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.19", %"class.std::__1::vector.19", %"class.std::__1::vector.19", %"class.std::__1::vector.19" }
%"class.std::__1::vector.19" = type { %"class.std::__1::__vector_base.20" }
%"class.std::__1::__vector_base.20" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.std::__1::basic_string"* }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %struct.crypto_buffer_st* }
%struct.crypto_buffer_st = type opaque
%"class.std::__1::vector.30" = type { %"class.std::__1::__vector_base.31" }
%"class.std::__1::__vector_base.31" = type { %"class.std::__1::unique_ptr.26"*, %"class.std::__1::unique_ptr.26"*, %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.std::__1::unique_ptr.26"* }
%"class.content::SignedExchangeDevToolsProxy" = type opaque
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase.37" }
%"class.base::time_internal::TimeBase.37" = type { i64 }
%"class.crypto::SignatureVerifier" = type { %"class.std::__1::vector", %"class.std::__1::unique_ptr.86" }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"struct.crypto::SignatureVerifier::VerifyContext"* }
%"struct.crypto::SignatureVerifier::VerifyContext" = type opaque
%"class.absl::optional.38" = type { %"class.absl::optional_internal::optional_data.39" }
%"class.absl::optional_internal::optional_data.39" = type { %"class.absl::optional_internal::optional_data_base.40" }
%"class.absl::optional_internal::optional_data_base.40" = type { %"class.absl::optional_internal::optional_data_dtor_base.41" }
%"class.absl::optional_internal::optional_data_dtor_base.41" = type { i8, %union.anon.42 }
%union.anon.42 = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, i32 }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%struct.cbs_st = type { i8*, i64 }
%"class.base::CheckedContiguousIterator" = type { i8*, i8*, i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.base::TimeDelta" = type { i64 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.69", [4 x i8] }>
%"struct.std::__1::atomic.69" = type { %"struct.std::__1::__atomic_base.70" }
%"struct.std::__1::__atomic_base.70" = type { %"struct.std::__1::__atomic_base.71" }
%"struct.std::__1::__atomic_base.71" = type { %"struct.std::__1::__cxx_atomic_impl.72" }
%"struct.std::__1::__cxx_atomic_impl.72" = type { %"struct.std::__1::__cxx_atomic_base_impl.73" }
%"struct.std::__1::__cxx_atomic_base_impl.73" = type { i32 }
%"class.std::__1::__vector_base_common" = type { i8 }
%struct.evp_pkey_st = type { i32, i32, %union.anon.83, %struct.evp_pkey_asn1_method_st* }
%union.anon.83 = type { i8* }
%struct.evp_pkey_asn1_method_st = type opaque
%struct.ec_key_st = type opaque
%struct.ec_group_st = type opaque
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.48", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"class.std::__1::vector.48" = type { %"class.std::__1::__vector_base.49" }
%"class.std::__1::__vector_base.49" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.50", i64, i64 }
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.60" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IS6_EES8_S8_ = comdat any

$_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertINS_11__wrap_iterIPKcEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsISA_E9referenceEEE5valueENS5_IPhEEE4typeENS5_IPKhEESA_SA_ = comdat any

$_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIN4base25CheckedContiguousIteratorIKhEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsISA_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSE_IPS7_EESA_SA_ = comdat any

$_ZN20trace_event_internal13AddTraceEventINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEEN4base11trace_event16TraceEventHandleEcPKhPKcSE_yjySE_OT_ = comdat any

$_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSB_IPKhEES7_S7_ = comdat any

$_ZNK4base25CheckedContiguousIteratorIKhE15CheckComparableERKS2_ = comdat any

$_ZZN7logging15CheckOpValueStrIPKhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN4base25CheckedContiguousIteratorIKhEpLEl = comdat any

$_ZNK4base25CheckedContiguousIteratorIKhEdeEv = comdat any

$_ZN4base25CheckedContiguousIteratorIKhEppEv = comdat any

$_ZN4base25CheckedContiguousIteratorIKhEC2EPS1_S3_S3_ = comdat any

@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [40 x i8] c"SignedExchangeSignatureVerifier::Verify\00", align 1
@.str.1 = private unnamed_addr constant [98 x i8] c"Specified validity period too long. creation_time: %lu, expires_time: %lu, verification_time: %lu\00", align 1
@.str.2 = private unnamed_addr constant [81 x i8] c"Invalid timestamp. creation_time: %lu, expires_time: %lu, verification_time: %lu\00", align 1
@.str.3 = private unnamed_addr constant [22 x i8] c"cert-sha256 mismatch.\00", align 1
@.str.4 = private unnamed_addr constant [34 x i8] c"Failed to verify signature \22sig\22.\00", align 1
@.str.5 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.6 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1
@.str.7 = private unnamed_addr constant [54 x i8] c"SignedExchange.SignatureVerificationError.NotYetValid\00", align 1
@.str.8 = private unnamed_addr constant [50 x i8] c"SignedExchange.SignatureVerificationError.Expired\00", align 1
@.str.9 = private unnamed_addr constant [35 x i8] c"SignedExchange.TimeUntilExpiration\00", align 1
@.str.10 = private unnamed_addr constant [22 x i8] c"GenerateSignedMessage\00", align 1
@_ZN7content12_GLOBAL__N_114kMessageHeaderE = internal constant [83 x i8] c"                                                                HTTP Exchange 1 b3\00", align 16
@.str.11 = private unnamed_addr constant [5 x i8] c"dump\00", align 1
@.str.13 = private unnamed_addr constant [23 x i8] c"start_ == other.start_\00", align 1
@.str.14 = private unnamed_addr constant [42 x i8] c"../../base/containers/checked_iterators.h\00", align 1
@.str.15 = private unnamed_addr constant [19 x i8] c"end_ == other.end_\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@.str.16 = private unnamed_addr constant [23 x i8] c"rhs <= end_ - current_\00", align 1
@.str.17 = private unnamed_addr constant [26 x i8] c"-rhs <= current_ - start_\00", align 1
@.str.18 = private unnamed_addr constant [17 x i8] c"current_ != end_\00", align 1
@.str.19 = private unnamed_addr constant [17 x i8] c"start <= current\00", align 1
@.str.20 = private unnamed_addr constant [15 x i8] c"current <= end\00", align 1
@.str.21 = private unnamed_addr constant [5 x i8] c"%02x\00", align 1
@.str.22 = private unnamed_addr constant [22 x i8] c"GetSignatureAlgorithm\00", align 1
@.str.23 = private unnamed_addr constant [24 x i8] c"Failed to extract SPKI.\00", align 1
@.str.24 = private unnamed_addr constant [28 x i8] c"Failed to parse public key.\00", align 1
@.str.25 = private unnamed_addr constant [87 x i8] c"Unsupported public key type: %d. Only ECDSA keys on the secp256r1 curve are supported.\00", align 1
@.str.26 = private unnamed_addr constant [80 x i8] c"Unsupported EC group: %d. Only ECDSA keys on the secp256r1 curve are supported.\00", align 1
@.str.27 = private unnamed_addr constant [16 x i8] c"VerifySignature\00", align 1
@.str.28 = private unnamed_addr constant [45 x i8] c"SignatureVerifierInitWithCertificate failed.\00", align 1
@.str.29 = private unnamed_addr constant [20 x i8] c"VerifyFinal failed.\00", align 1
@.str.30 = private unnamed_addr constant [36 x i8] c"SignedExchange.Time.SignatureVerify\00", align 1
@_ZZN7content12_GLOBAL__N_116VerifyTimestampsERKNS_22SignedExchangeEnvelopeERKN4base4TimeEE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN7content12_GLOBAL__N_116VerifyTimestampsERKNS_22SignedExchangeEnvelopeERKN4base4TimeEE24atomic_histogram_pointer_0.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN7content12_GLOBAL__N_116VerifyTimestampsERKNS_22SignedExchangeEnvelopeERKN4base4TimeEE24atomic_histogram_pointer_1.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZZN7content31SignedExchangeSignatureVerifier6VerifyENS_21SignedExchangeVersionERKNS_22SignedExchangeEnvelopeEPKNS_30SignedExchangeCertificateChainERKN4base4TimeEPNS_27SignedExchangeDevToolsProxyEEN21ScopedHistogramTimer0D1EvE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN7content31SignedExchangeSignatureVerifier6VerifyENS_21SignedExchangeVersionERKNS_22SignedExchangeEnvelopeEPKNS_30SignedExchangeCertificateChainERKN4base4TimeEPNS_27SignedExchangeDevToolsProxyE(i32, %"class.content::SignedExchangeEnvelope"* dereferenceable(592), %"class.content::SignedExchangeCertificateChain"*, %"class.base::Time"* nocapture readonly dereferenceable(8), %"class.content::SignedExchangeDevToolsProxy"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::TimeTicks", align 8
  %7 = alloca %"class.crypto::SignatureVerifier", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.absl::optional.38", align 4
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.absl::optional.38", align 4
  %12 = alloca %"class.base::TimeTicks", align 8
  %13 = alloca %"class.base::BasicStringPiece", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = alloca %"class.absl::optional.38", align 4
  %16 = alloca %struct.cbs_st, align 8
  %17 = alloca %"class.std::__1::basic_string", align 8
  %18 = alloca %"class.absl::optional.38", align 4
  %19 = alloca %"class.std::__1::basic_string", align 8
  %20 = alloca %"class.absl::optional.38", align 4
  %21 = alloca %"class.std::__1::basic_string", align 8
  %22 = alloca %"class.absl::optional.38", align 4
  %23 = alloca [8 x i8], align 1
  %24 = alloca %"class.base::TimeTicks", align 8
  %25 = alloca %"struct.content::SignedExchangeSignatureHeaderField::Signature", align 8
  %26 = alloca %"class.base::CheckedContiguousIterator", align 8
  %27 = alloca %"class.base::CheckedContiguousIterator", align 8
  %28 = alloca %"class.std::__1::basic_string", align 8
  %29 = alloca %"class.logging::CheckError", align 8
  %30 = alloca %"class.logging::CheckError", align 8
  %31 = alloca %"class.logging::CheckError", align 8
  %32 = alloca %"class.logging::CheckError", align 8
  %33 = alloca %"class.base::TimeTicks", align 8
  %34 = alloca %"class.base::TimeDelta", align 8
  %35 = alloca %"class.std::__1::basic_string", align 8
  %36 = alloca %"class.absl::optional.38", align 4
  %37 = alloca %"class.std::__1::basic_string", align 8
  %38 = alloca %"class.absl::optional.38", align 4
  %39 = alloca %"struct.net::SHA256HashValue", align 1
  %40 = alloca %"class.std::__1::basic_string", align 8
  %41 = alloca %"class.absl::optional.38", align 4
  %42 = alloca %"class.std::__1::vector", align 8
  %43 = alloca %"class.std::__1::basic_string", align 8
  %44 = alloca %"class.absl::optional.38", align 4
  %45 = tail call i64 @_ZN4base9TimeTicks3NowEv() #12
  %46 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 188, i32 0), align 16
  %47 = and i8 %46, 25
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %55, label %49, !prof !2

49:                                               ; preds = %5
  %50 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #12
  %51 = bitcast %"class.base::TimeTicks"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #12
  %52 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %33, i64 0, i32 0, i32 0
  %53 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #12
  store i64 %53, i64* %52, align 8
  %54 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 188, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %50, %"class.base::TimeTicks"* nonnull dereferenceable(8) %33, %"class.base::trace_event::TraceArguments"* null, i32 0) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #12
  br label %55

55:                                               ; preds = %5, %49
  %56 = phi i8* [ null, %5 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 188, i32 0), %49 ]
  %57 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %5 ], [ getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i64 0, i64 0), %49 ]
  %58 = phi i64 [ -6148914691236517206, %5 ], [ %54, %49 ]
  %59 = getelementptr inbounds %"class.content::SignedExchangeCertificateChain", %"class.content::SignedExchangeCertificateChain"* %2, i64 0, i32 0, i32 0
  %60 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %59, align 8
  %61 = icmp eq %"class.net::X509Certificate"* %60, null
  br i1 %61, label %65, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = atomicrmw add i32* %63, i32 1 monotonic
  br label %65

65:                                               ; preds = %55, %62
  %66 = getelementptr inbounds %"class.content::SignedExchangeEnvelope", %"class.content::SignedExchangeEnvelope"* %1, i64 0, i32 4, i32 7
  %67 = load i64, i64* %66, align 8
  %68 = call i64 @_ZN4base4Time9UnixEpochEv() #12
  %69 = icmp slt i64 %67, 0
  %70 = select i1 %69, i64 -9223372036854775808, i64 9223372036854775807
  %71 = call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %67, i64 1000000) #12
  %72 = extractvalue { i64, i1 } %71, 1
  %73 = extractvalue { i64, i1 } %71, 0
  %74 = select i1 %72, i64 %70, i64 %73, !prof !3
  %75 = add i64 %74, -9223372036854775807
  %76 = icmp ult i64 %75, 2
  br i1 %76, label %84, label %77

77:                                               ; preds = %65
  %78 = icmp slt i64 %74, 0
  %79 = select i1 %78, i64 -9223372036854775808, i64 9223372036854775807
  %80 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %68, i64 %74) #12
  %81 = extractvalue { i64, i1 } %80, 1
  %82 = extractvalue { i64, i1 } %80, 0
  %83 = select i1 %81, i64 %79, i64 %82, !prof !3
  br label %92

84:                                               ; preds = %65
  %85 = add i64 %68, -9223372036854775807
  %86 = icmp ugt i64 %85, 1
  %87 = icmp eq i64 %68, %74
  %88 = or i1 %86, %87
  br i1 %88, label %92, label %89

89:                                               ; preds = %84
  %90 = bitcast %"class.logging::CheckError"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %90) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %31, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6, i64 0, i64 0)) #12
  %91 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %31) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %31) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %90) #12
  br label %92

92:                                               ; preds = %89, %84, %77
  %93 = phi i64 [ %83, %77 ], [ %74, %84 ], [ %74, %89 ]
  %94 = getelementptr inbounds %"class.content::SignedExchangeEnvelope", %"class.content::SignedExchangeEnvelope"* %1, i64 0, i32 4, i32 6
  %95 = load i64, i64* %94, align 8
  %96 = call i64 @_ZN4base4Time9UnixEpochEv() #12
  %97 = icmp slt i64 %95, 0
  %98 = select i1 %97, i64 -9223372036854775808, i64 9223372036854775807
  %99 = call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %95, i64 1000000) #12
  %100 = extractvalue { i64, i1 } %99, 1
  %101 = extractvalue { i64, i1 } %99, 0
  %102 = select i1 %100, i64 %98, i64 %101, !prof !3
  %103 = add i64 %102, -9223372036854775807
  %104 = icmp ult i64 %103, 2
  br i1 %104, label %112, label %105

105:                                              ; preds = %92
  %106 = icmp slt i64 %102, 0
  %107 = select i1 %106, i64 -9223372036854775808, i64 9223372036854775807
  %108 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %96, i64 %102) #12
  %109 = extractvalue { i64, i1 } %108, 1
  %110 = extractvalue { i64, i1 } %108, 0
  %111 = select i1 %109, i64 %107, i64 %110, !prof !3
  br label %120

112:                                              ; preds = %92
  %113 = add i64 %96, -9223372036854775807
  %114 = icmp ugt i64 %113, 1
  %115 = icmp eq i64 %96, %102
  %116 = or i1 %114, %115
  br i1 %116, label %120, label %117

117:                                              ; preds = %112
  %118 = bitcast %"class.logging::CheckError"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %118) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %32, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6, i64 0, i64 0)) #12
  %119 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %32) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %32) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %118) #12
  br label %120

120:                                              ; preds = %105, %112, %117
  %121 = phi i64 [ %111, %105 ], [ %102, %112 ], [ %102, %117 ]
  %122 = sub nsw i64 %93, %121
  %123 = add i64 %122, -9223372036854775807
  %124 = icmp ult i64 %123, 2
  %125 = sdiv i64 %122, 1000000
  %126 = select i1 %124, i64 %122, i64 %125
  %127 = icmp slt i64 %126, 604801
  br i1 %127, label %148, label %128

128:                                              ; preds = %120
  %129 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %129) #12
  %130 = load i64, i64* %94, align 8
  %131 = load i64, i64* %66, align 8
  %132 = call i64 @_ZN4base4Time9UnixEpochEv() #12
  %133 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %3, i64 0, i32 0, i32 0
  %134 = load i64, i64* %133, align 8
  %135 = sub nsw i64 %134, %132
  %136 = add i64 %135, -9223372036854775807
  %137 = icmp ult i64 %136, 2
  %138 = sdiv i64 %135, 1000000
  %139 = select i1 %137, i64 %135, i64 %138
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %35, i8* getelementptr inbounds ([98 x i8], [98 x i8]* @.str.1, i64 0, i64 0), i64 %130, i64 %131, i64 %139) #12
  %140 = getelementptr inbounds %"class.absl::optional.38", %"class.absl::optional.38"* %36, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %140, align 4
  call void @_ZN7content21signed_exchange_utils24ReportErrorAndTraceEventEPNS_27SignedExchangeDevToolsProxyERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN4absl8optionalINS3_4pairIiNS_19SignedExchangeError5FieldEEEEE(%"class.content::SignedExchangeDevToolsProxy"* %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %35, %"class.absl::optional.38"* nonnull %36) #12
  %141 = bitcast %"class.std::__1::basic_string"* %35 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %142 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %141, i64 0, i32 1, i32 0
  %143 = load i8, i8* %142, align 1
  %144 = icmp slt i8 %143, 0
  br i1 %144, label %145, label %790

145:                                              ; preds = %128
  %146 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = load i8*, i8** %146, align 8
  call void @_ZdlPv(i8* %147) #13
  br label %790

148:                                              ; preds = %120
  %149 = load i64, i64* %66, align 8
  %150 = call i64 @_ZN4base4Time9UnixEpochEv() #12
  %151 = icmp slt i64 %149, 0
  %152 = select i1 %151, i64 -9223372036854775808, i64 9223372036854775807
  %153 = call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %149, i64 1000000) #12
  %154 = extractvalue { i64, i1 } %153, 1
  %155 = extractvalue { i64, i1 } %153, 0
  %156 = select i1 %154, i64 %152, i64 %155, !prof !3
  %157 = add i64 %156, -9223372036854775807
  %158 = icmp ult i64 %157, 2
  br i1 %158, label %166, label %159

159:                                              ; preds = %148
  %160 = icmp slt i64 %156, 0
  %161 = select i1 %160, i64 -9223372036854775808, i64 9223372036854775807
  %162 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %150, i64 %156) #12
  %163 = extractvalue { i64, i1 } %162, 1
  %164 = extractvalue { i64, i1 } %162, 0
  %165 = select i1 %163, i64 %161, i64 %164, !prof !3
  br label %174

166:                                              ; preds = %148
  %167 = add i64 %150, -9223372036854775807
  %168 = icmp ugt i64 %167, 1
  %169 = icmp eq i64 %150, %156
  %170 = or i1 %168, %169
  br i1 %170, label %174, label %171

171:                                              ; preds = %166
  %172 = bitcast %"class.logging::CheckError"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %172) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %30, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6, i64 0, i64 0)) #12
  %173 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %30) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %30) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %172) #12
  br label %174

174:                                              ; preds = %171, %166, %159
  %175 = phi i64 [ %165, %159 ], [ %156, %166 ], [ %156, %171 ]
  %176 = load i64, i64* %94, align 8
  %177 = call i64 @_ZN4base4Time9UnixEpochEv() #12
  %178 = icmp slt i64 %176, 0
  %179 = select i1 %178, i64 -9223372036854775808, i64 9223372036854775807
  %180 = call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %176, i64 1000000) #12
  %181 = extractvalue { i64, i1 } %180, 1
  %182 = extractvalue { i64, i1 } %180, 0
  %183 = select i1 %181, i64 %179, i64 %182, !prof !3
  %184 = add i64 %183, -9223372036854775807
  %185 = icmp ult i64 %184, 2
  br i1 %185, label %193, label %186

186:                                              ; preds = %174
  %187 = icmp slt i64 %183, 0
  %188 = select i1 %187, i64 -9223372036854775808, i64 9223372036854775807
  %189 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %177, i64 %183) #12
  %190 = extractvalue { i64, i1 } %189, 1
  %191 = extractvalue { i64, i1 } %189, 0
  %192 = select i1 %190, i64 %188, i64 %191, !prof !3
  br label %201

193:                                              ; preds = %174
  %194 = add i64 %177, -9223372036854775807
  %195 = icmp ugt i64 %194, 1
  %196 = icmp eq i64 %177, %183
  %197 = or i1 %195, %196
  br i1 %197, label %201, label %198

198:                                              ; preds = %193
  %199 = bitcast %"class.logging::CheckError"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %199) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %29, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6, i64 0, i64 0)) #12
  %200 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %29) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %29) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %199) #12
  br label %201

201:                                              ; preds = %198, %193, %186
  %202 = phi i64 [ %192, %186 ], [ %183, %193 ], [ %183, %198 ]
  %203 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %3, i64 0, i32 0, i32 0
  %204 = load i64, i64* %203, align 8
  %205 = icmp slt i64 %204, %202
  br i1 %205, label %206, label %226

206:                                              ; preds = %201
  %207 = load atomic i64, i64* @_ZZN7content12_GLOBAL__N_116VerifyTimestampsERKNS_22SignedExchangeEnvelopeERKN4base4TimeEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %208 = inttoptr i64 %207 to %"class.base::HistogramBase"*
  %209 = icmp eq i64 %207, 0
  br i1 %209, label %210, label %213

210:                                              ; preds = %206
  %211 = call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.7, i64 0, i64 0), i32 1, i32 2419200, i32 50, i32 1) #12
  %212 = ptrtoint %"class.base::HistogramBase"* %211 to i64
  store atomic i64 %212, i64* @_ZZN7content12_GLOBAL__N_116VerifyTimestampsERKNS_22SignedExchangeEnvelopeERKN4base4TimeEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %213

213:                                              ; preds = %210, %206
  %214 = phi %"class.base::HistogramBase"* [ %208, %206 ], [ %211, %210 ]
  %215 = load i64, i64* %203, align 8
  %216 = sub nsw i64 %202, %215
  %217 = add i64 %216, -9223372036854775807
  %218 = icmp ult i64 %217, 2
  %219 = sdiv i64 %216, 1000000
  %220 = select i1 %218, i64 %216, i64 %219
  %221 = trunc i64 %220 to i32
  %222 = bitcast %"class.base::HistogramBase"* %214 to void (%"class.base::HistogramBase"*, i32)***
  %223 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %222, align 8
  %224 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %223, i64 6
  %225 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %224, align 8
  call void %225(%"class.base::HistogramBase"* %214, i32 %221) #12
  br label %268

226:                                              ; preds = %201
  %227 = icmp slt i64 %175, %204
  br i1 %227, label %228, label %248

228:                                              ; preds = %226
  %229 = load atomic i64, i64* @_ZZN7content12_GLOBAL__N_116VerifyTimestampsERKNS_22SignedExchangeEnvelopeERKN4base4TimeEE24atomic_histogram_pointer_0.0.0.0.0.0 acquire, align 8
  %230 = inttoptr i64 %229 to %"class.base::HistogramBase"*
  %231 = icmp eq i64 %229, 0
  br i1 %231, label %232, label %235

232:                                              ; preds = %228
  %233 = call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.8, i64 0, i64 0), i32 1, i32 2419200, i32 50, i32 1) #12
  %234 = ptrtoint %"class.base::HistogramBase"* %233 to i64
  store atomic i64 %234, i64* @_ZZN7content12_GLOBAL__N_116VerifyTimestampsERKNS_22SignedExchangeEnvelopeERKN4base4TimeEE24atomic_histogram_pointer_0.0.0.0.0.0 release, align 8
  br label %235

235:                                              ; preds = %232, %228
  %236 = phi %"class.base::HistogramBase"* [ %230, %228 ], [ %233, %232 ]
  %237 = load i64, i64* %203, align 8
  %238 = sub nsw i64 %237, %175
  %239 = add i64 %238, -9223372036854775807
  %240 = icmp ult i64 %239, 2
  %241 = sdiv i64 %238, 1000000
  %242 = select i1 %240, i64 %238, i64 %241
  %243 = trunc i64 %242 to i32
  %244 = bitcast %"class.base::HistogramBase"* %236 to void (%"class.base::HistogramBase"*, i32)***
  %245 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %244, align 8
  %246 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %245, i64 6
  %247 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %246, align 8
  call void %247(%"class.base::HistogramBase"* %236, i32 %243) #12
  br label %268

248:                                              ; preds = %226
  %249 = load atomic i64, i64* @_ZZN7content12_GLOBAL__N_116VerifyTimestampsERKNS_22SignedExchangeEnvelopeERKN4base4TimeEE24atomic_histogram_pointer_1.0.0.0.0.0 acquire, align 8
  %250 = inttoptr i64 %249 to %"class.base::HistogramBase"*
  %251 = icmp eq i64 %249, 0
  br i1 %251, label %252, label %255

252:                                              ; preds = %248
  %253 = call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.9, i64 0, i64 0), i32 1, i32 604800, i32 50, i32 1) #12
  %254 = ptrtoint %"class.base::HistogramBase"* %253 to i64
  store atomic i64 %254, i64* @_ZZN7content12_GLOBAL__N_116VerifyTimestampsERKNS_22SignedExchangeEnvelopeERKN4base4TimeEE24atomic_histogram_pointer_1.0.0.0.0.0 release, align 8
  br label %255

255:                                              ; preds = %248, %252
  %256 = phi %"class.base::HistogramBase"* [ %250, %248 ], [ %253, %252 ]
  %257 = load i64, i64* %203, align 8
  %258 = sub nsw i64 %175, %257
  %259 = add i64 %258, -9223372036854775807
  %260 = icmp ult i64 %259, 2
  %261 = sdiv i64 %258, 1000000
  %262 = select i1 %260, i64 %258, i64 %261
  %263 = trunc i64 %262 to i32
  %264 = bitcast %"class.base::HistogramBase"* %256 to void (%"class.base::HistogramBase"*, i32)***
  %265 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %264, align 8
  %266 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %265, i64 6
  %267 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %266, align 8
  call void %267(%"class.base::HistogramBase"* %256, i32 %263) #12
  br label %290

268:                                              ; preds = %213, %235
  %269 = phi i32 [ 11, %235 ], [ 10, %213 ]
  %270 = call zeroext i1 @_ZNK7content30SignedExchangeCertificateChain18ShouldIgnoreErrorsEv(%"class.content::SignedExchangeCertificateChain"* %2) #12
  br i1 %270, label %290, label %271

271:                                              ; preds = %268
  %272 = bitcast %"class.std::__1::basic_string"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %272) #12
  %273 = load i64, i64* %94, align 8
  %274 = load i64, i64* %66, align 8
  %275 = call i64 @_ZN4base4Time9UnixEpochEv() #12
  %276 = load i64, i64* %203, align 8
  %277 = sub nsw i64 %276, %275
  %278 = add i64 %277, -9223372036854775807
  %279 = icmp ult i64 %278, 2
  %280 = sdiv i64 %277, 1000000
  %281 = select i1 %279, i64 %277, i64 %280
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %37, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.2, i64 0, i64 0), i64 %273, i64 %274, i64 %281) #12
  %282 = getelementptr inbounds %"class.absl::optional.38", %"class.absl::optional.38"* %38, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %282, align 4
  call void @_ZN7content21signed_exchange_utils24ReportErrorAndTraceEventEPNS_27SignedExchangeDevToolsProxyERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN4absl8optionalINS3_4pairIiNS_19SignedExchangeError5FieldEEEEE(%"class.content::SignedExchangeDevToolsProxy"* %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %37, %"class.absl::optional.38"* nonnull %38) #12
  %283 = bitcast %"class.std::__1::basic_string"* %37 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %284 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %283, i64 0, i32 1, i32 0
  %285 = load i8, i8* %284, align 1
  %286 = icmp slt i8 %285, 0
  br i1 %286, label %287, label %790

287:                                              ; preds = %271
  %288 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %289 = load i8*, i8** %288, align 8
  call void @_ZdlPv(i8* %289) #13
  br label %790

290:                                              ; preds = %255, %268
  %291 = getelementptr inbounds %"class.content::SignedExchangeEnvelope", %"class.content::SignedExchangeEnvelope"* %1, i64 0, i32 4
  %292 = getelementptr inbounds %"class.content::SignedExchangeEnvelope", %"class.content::SignedExchangeEnvelope"* %1, i64 0, i32 4, i32 4, i32 0, i32 0, i32 0, i32 0
  %293 = load i8, i8* %292, align 1, !range !4
  %294 = icmp eq i8 %293, 0
  br i1 %294, label %295, label %296, !prof !3

295:                                              ; preds = %290
  call void @llvm.trap() #12
  unreachable

296:                                              ; preds = %290
  %297 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %39, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %297) #12
  %298 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %60, i64 0, i32 6, i32 0, i32 0, i32 0
  %299 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %298, align 8
  call void @_ZN3net15X509Certificate23CalculateFingerprint256EPK16crypto_buffer_st(%"struct.net::SHA256HashValue"* nonnull sret %39, %struct.crypto_buffer_st* %299) #12
  %300 = getelementptr inbounds %"class.content::SignedExchangeEnvelope", %"class.content::SignedExchangeEnvelope"* %1, i64 0, i32 4, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %301 = call i32 @bcmp(i8* %300, i8* nonnull %297, i64 32) #12
  %302 = icmp eq i32 %301, 0
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %297) #12
  br i1 %302, label %314, label %303

303:                                              ; preds = %296
  %304 = bitcast %"class.std::__1::basic_string"* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %304) #12
  %305 = bitcast %"class.std::__1::basic_string"* %40 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %306 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %305, i64 0, i32 1, i32 0
  store i8 21, i8* %306, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %304, i8* align 1 getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0), i64 21, i1 false) #12
  %307 = getelementptr inbounds i8, i8* %304, i64 21
  store i8 0, i8* %307, align 1
  %308 = getelementptr inbounds %"class.absl::optional.38", %"class.absl::optional.38"* %41, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %308, align 4
  call void @_ZN7content21signed_exchange_utils24ReportErrorAndTraceEventEPNS_27SignedExchangeDevToolsProxyERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN4absl8optionalINS3_4pairIiNS_19SignedExchangeError5FieldEEEEE(%"class.content::SignedExchangeDevToolsProxy"* %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %40, %"class.absl::optional.38"* nonnull %41) #12
  %309 = load i8, i8* %306, align 1
  %310 = icmp slt i8 %309, 0
  br i1 %310, label %311, label %790

311:                                              ; preds = %303
  %312 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %313 = load i8*, i8** %312, align 8
  call void @_ZdlPv(i8* %313) #13
  br label %790

314:                                              ; preds = %296
  %315 = bitcast %"class.std::__1::vector"* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %315) #12
  %316 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %42, i64 0, i32 0, i32 0
  %317 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %42, i64 0, i32 0, i32 1
  %318 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %42, i64 0, i32 0, i32 2, i32 0, i32 0
  %319 = bitcast %"class.base::CheckedContiguousIterator"* %26 to i8*
  %320 = bitcast %"class.std::__1::vector"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %320, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %319)
  %321 = bitcast %"class.base::CheckedContiguousIterator"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %321)
  %322 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 188, i32 0), align 16, !noalias !5
  %323 = and i8 %322, 25
  %324 = icmp eq i8 %323, 0
  br i1 %324, label %331, label %325, !prof !2

325:                                              ; preds = %314
  %326 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #12
  %327 = bitcast %"class.base::TimeTicks"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %327) #12, !noalias !5
  %328 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %24, i64 0, i32 0, i32 0
  %329 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #12
  store i64 %329, i64* %328, align 8, !noalias !5
  %330 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 66, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 188, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.10, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %326, %"class.base::TimeTicks"* nonnull dereferenceable(8) %24, %"class.base::trace_event::TraceArguments"* null, i32 0) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %327) #12, !noalias !5
  br label %331

331:                                              ; preds = %325, %314
  %332 = bitcast %"struct.content::SignedExchangeSignatureHeaderField::Signature"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 392, i8* nonnull %332) #12, !noalias !5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %332, i8 -86, i64 392, i1 false) #12, !noalias !5
  call void @_ZN7content34SignedExchangeSignatureHeaderField9SignatureC1ERKS1_(%"struct.content::SignedExchangeSignatureHeaderField::Signature"* nonnull %25, %"struct.content::SignedExchangeSignatureHeaderField::Signature"* dereferenceable(392) %291) #12, !noalias !5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %315, i8 0, i64 24, i1 false) #12, !alias.scope !5
  %333 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IS6_EES8_S8_(%"class.std::__1::vector"* nonnull %42, i8* null, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @_ZN7content12_GLOBAL__N_114kMessageHeaderE, i64 0, i64 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @_ZN7content12_GLOBAL__N_114kMessageHeaderE, i64 1, i64 0)) #12
  %334 = load i8*, i8** %317, align 8, !alias.scope !5
  %335 = load i8*, i8** %318, align 8, !alias.scope !5
  %336 = icmp ult i8* %334, %335
  %337 = ptrtoint i8* %335 to i64
  br i1 %336, label %338, label %342

338:                                              ; preds = %331
  store i8 32, i8* %334, align 1
  %339 = getelementptr inbounds i8, i8* %334, i64 1
  %340 = ptrtoint i8* %339 to i64
  %341 = bitcast i8** %317 to i64*
  store i64 %340, i64* %341, align 8, !alias.scope !5
  br label %379

342:                                              ; preds = %331
  %343 = ptrtoint i8* %334 to i64
  %344 = bitcast i8** %317 to i64*
  %345 = bitcast %"class.std::__1::vector"* %42 to i64*
  %346 = load i64, i64* %345, align 8, !alias.scope !5
  %347 = sub i64 %343, %346
  %348 = add i64 %347, 1
  %349 = icmp slt i64 %348, 0
  %350 = inttoptr i64 %346 to i8*
  br i1 %349, label %351, label %353

351:                                              ; preds = %342
  %352 = bitcast %"class.std::__1::vector"* %42 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %352) #14
  unreachable

353:                                              ; preds = %342
  %354 = bitcast i8** %318 to i64*
  %355 = sub i64 %337, %346
  %356 = icmp ult i64 %355, 4611686018427387903
  br i1 %356, label %357, label %362

357:                                              ; preds = %353
  %358 = shl i64 %355, 1
  %359 = icmp ult i64 %358, %348
  %360 = select i1 %359, i64 %348, i64 %358
  %361 = icmp eq i64 %360, 0
  br i1 %361, label %365, label %362

362:                                              ; preds = %357, %353
  %363 = phi i64 [ %360, %357 ], [ 9223372036854775807, %353 ]
  %364 = call i8* @_Znwm(i64 %363) #13
  br label %365

365:                                              ; preds = %362, %357
  %366 = phi i64 [ %363, %362 ], [ 0, %357 ]
  %367 = phi i8* [ %364, %362 ], [ null, %357 ]
  %368 = getelementptr inbounds i8, i8* %367, i64 %347
  %369 = getelementptr inbounds i8, i8* %367, i64 %366
  %370 = ptrtoint i8* %369 to i64
  store i8 32, i8* %368, align 1, !noalias !5
  %371 = getelementptr inbounds i8, i8* %368, i64 1
  %372 = ptrtoint i8* %371 to i64
  %373 = ptrtoint i8* %367 to i64
  %374 = icmp sgt i64 %347, 0
  br i1 %374, label %375, label %376

375:                                              ; preds = %365
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %367, i8* align 1 %350, i64 %347, i1 false) #12
  br label %376

376:                                              ; preds = %375, %365
  store i64 %373, i64* %345, align 8, !alias.scope !5
  store i64 %372, i64* %344, align 8, !alias.scope !5
  store i64 %370, i64* %354, align 8, !alias.scope !5
  %377 = icmp eq i64 %346, 0
  br i1 %377, label %379, label %378

378:                                              ; preds = %376
  call void @_ZdlPv(i8* nonnull %350) #13
  br label %379

379:                                              ; preds = %378, %376, %338
  %380 = load i8, i8* %292, align 1, !range !4, !noalias !5
  %381 = icmp eq i8 %380, 0
  br i1 %381, label %382, label %383

382:                                              ; preds = %379
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #14
  unreachable

383:                                              ; preds = %379
  %384 = load i8*, i8** %317, align 8, !alias.scope !5
  %385 = getelementptr inbounds %"class.content::SignedExchangeEnvelope", %"class.content::SignedExchangeEnvelope"* %1, i64 0, i32 4, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 32
  %386 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IS6_EES8_S8_(%"class.std::__1::vector"* nonnull %42, i8* %384, i8* %300, i8* %385) #12
  %387 = getelementptr inbounds %"struct.content::SignedExchangeSignatureHeaderField::Signature", %"struct.content::SignedExchangeSignatureHeaderField::Signature"* %25, i64 0, i32 5, i32 1
  %388 = bitcast %"class.std::__1::basic_string"* %387 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %389 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %388, i64 0, i32 1, i32 0
  %390 = load i8, i8* %389, align 1, !noalias !5
  %391 = icmp slt i8 %390, 0
  %392 = getelementptr inbounds %"struct.content::SignedExchangeSignatureHeaderField::Signature", %"struct.content::SignedExchangeSignatureHeaderField::Signature"* %25, i64 0, i32 5, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %393 = load i64, i64* %392, align 8, !noalias !5
  %394 = zext i8 %390 to i64
  %395 = select i1 %391, i64 %393, i64 %394
  %396 = getelementptr inbounds [8 x i8], [8 x i8]* %23, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %396) #12, !noalias !5
  %397 = getelementptr inbounds [8 x i8], [8 x i8]* %23, i64 0, i64 1
  %398 = getelementptr inbounds [8 x i8], [8 x i8]* %23, i64 0, i64 2
  %399 = getelementptr inbounds [8 x i8], [8 x i8]* %23, i64 0, i64 3
  %400 = getelementptr inbounds [8 x i8], [8 x i8]* %23, i64 0, i64 4
  %401 = getelementptr inbounds [8 x i8], [8 x i8]* %23, i64 0, i64 5
  %402 = getelementptr inbounds [8 x i8], [8 x i8]* %23, i64 0, i64 6
  %403 = trunc i64 %395 to i8
  %404 = getelementptr inbounds [8 x i8], [8 x i8]* %23, i64 0, i64 7
  store i8 %403, i8* %404, align 1, !noalias !5
  %405 = lshr i64 %395, 8
  %406 = trunc i64 %405 to i8
  store i8 %406, i8* %402, align 1, !noalias !5
  %407 = lshr i64 %395, 16
  %408 = trunc i64 %407 to i8
  store i8 %408, i8* %401, align 1, !noalias !5
  %409 = lshr i64 %395, 24
  %410 = trunc i64 %409 to i8
  store i8 %410, i8* %400, align 1, !noalias !5
  %411 = lshr i64 %395, 32
  %412 = trunc i64 %411 to i8
  store i8 %412, i8* %399, align 1, !noalias !5
  %413 = lshr i64 %395, 40
  %414 = trunc i64 %413 to i8
  store i8 %414, i8* %398, align 1, !noalias !5
  %415 = lshr i64 %395, 48
  %416 = trunc i64 %415 to i8
  store i8 %416, i8* %397, align 1, !noalias !5
  %417 = lshr i64 %395, 56
  %418 = trunc i64 %417 to i8
  store i8 %418, i8* %396, align 1, !noalias !5
  %419 = load i8*, i8** %317, align 8, !alias.scope !5
  %420 = getelementptr inbounds [8 x i8], [8 x i8]* %23, i64 0, i64 8
  %421 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSB_IPKhEES7_S7_(%"class.std::__1::vector"* nonnull %42, i8* %419, i8* nonnull %396, i8* %420) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %396) #12, !noalias !5
  %422 = load i8*, i8** %317, align 8, !alias.scope !5
  %423 = load i8, i8* %389, align 1, !noalias !5
  %424 = icmp slt i8 %423, 0
  %425 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %387, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %426 = load i8*, i8** %425, align 8, !noalias !5
  %427 = bitcast %"class.std::__1::basic_string"* %387 to i8*
  %428 = select i1 %424, i8* %426, i8* %427
  %429 = load i64, i64* %392, align 8, !noalias !5
  %430 = zext i8 %423 to i64
  %431 = select i1 %424, i64 %429, i64 %430
  %432 = getelementptr inbounds i8, i8* %428, i64 %431
  %433 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertINS_11__wrap_iterIPKcEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsISA_E9referenceEEE5valueENS5_IPhEEE4typeENS5_IPKhEESA_SA_(%"class.std::__1::vector"* nonnull %42, i8* %422, i8* %428, i8* %432) #12
  %434 = getelementptr inbounds %"struct.content::SignedExchangeSignatureHeaderField::Signature", %"struct.content::SignedExchangeSignatureHeaderField::Signature"* %25, i64 0, i32 6
  %435 = load i64, i64* %434, align 8, !noalias !5
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %396) #12, !noalias !5
  %436 = trunc i64 %435 to i8
  store i8 %436, i8* %404, align 1, !noalias !5
  %437 = lshr i64 %435, 8
  %438 = trunc i64 %437 to i8
  store i8 %438, i8* %402, align 1, !noalias !5
  %439 = lshr i64 %435, 16
  %440 = trunc i64 %439 to i8
  store i8 %440, i8* %401, align 1, !noalias !5
  %441 = lshr i64 %435, 24
  %442 = trunc i64 %441 to i8
  store i8 %442, i8* %400, align 1, !noalias !5
  %443 = lshr i64 %435, 32
  %444 = trunc i64 %443 to i8
  store i8 %444, i8* %399, align 1, !noalias !5
  %445 = lshr i64 %435, 40
  %446 = trunc i64 %445 to i8
  store i8 %446, i8* %398, align 1, !noalias !5
  %447 = lshr i64 %435, 48
  %448 = trunc i64 %447 to i8
  store i8 %448, i8* %397, align 1, !noalias !5
  %449 = lshr i64 %435, 56
  %450 = trunc i64 %449 to i8
  store i8 %450, i8* %396, align 1, !noalias !5
  %451 = load i8*, i8** %317, align 8, !alias.scope !5
  %452 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSB_IPKhEES7_S7_(%"class.std::__1::vector"* nonnull %42, i8* %451, i8* nonnull %396, i8* %420) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %396) #12, !noalias !5
  %453 = getelementptr inbounds %"struct.content::SignedExchangeSignatureHeaderField::Signature", %"struct.content::SignedExchangeSignatureHeaderField::Signature"* %25, i64 0, i32 7
  %454 = load i64, i64* %453, align 8, !noalias !5
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %396) #12, !noalias !5
  %455 = trunc i64 %454 to i8
  store i8 %455, i8* %404, align 1, !noalias !5
  %456 = lshr i64 %454, 8
  %457 = trunc i64 %456 to i8
  store i8 %457, i8* %402, align 1, !noalias !5
  %458 = lshr i64 %454, 16
  %459 = trunc i64 %458 to i8
  store i8 %459, i8* %401, align 1, !noalias !5
  %460 = lshr i64 %454, 24
  %461 = trunc i64 %460 to i8
  store i8 %461, i8* %400, align 1, !noalias !5
  %462 = lshr i64 %454, 32
  %463 = trunc i64 %462 to i8
  store i8 %463, i8* %399, align 1, !noalias !5
  %464 = lshr i64 %454, 40
  %465 = trunc i64 %464 to i8
  store i8 %465, i8* %398, align 1, !noalias !5
  %466 = lshr i64 %454, 48
  %467 = trunc i64 %466 to i8
  store i8 %467, i8* %397, align 1, !noalias !5
  %468 = lshr i64 %454, 56
  %469 = trunc i64 %468 to i8
  store i8 %469, i8* %396, align 1, !noalias !5
  %470 = load i8*, i8** %317, align 8, !alias.scope !5
  %471 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSB_IPKhEES7_S7_(%"class.std::__1::vector"* nonnull %42, i8* %470, i8* nonnull %396, i8* %420) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %396) #12, !noalias !5
  %472 = getelementptr inbounds %"class.content::SignedExchangeEnvelope", %"class.content::SignedExchangeEnvelope"* %1, i64 0, i32 1, i32 1
  %473 = bitcast %"class.std::__1::basic_string"* %472 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %474 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %473, i64 0, i32 1, i32 0
  %475 = load i8, i8* %474, align 1, !noalias !5
  %476 = icmp slt i8 %475, 0
  %477 = getelementptr inbounds %"class.content::SignedExchangeEnvelope", %"class.content::SignedExchangeEnvelope"* %1, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %478 = load i64, i64* %477, align 8, !noalias !5
  %479 = zext i8 %475 to i64
  %480 = select i1 %476, i64 %478, i64 %479
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %396) #12, !noalias !5
  %481 = trunc i64 %480 to i8
  store i8 %481, i8* %404, align 1, !noalias !5
  %482 = lshr i64 %480, 8
  %483 = trunc i64 %482 to i8
  store i8 %483, i8* %402, align 1, !noalias !5
  %484 = lshr i64 %480, 16
  %485 = trunc i64 %484 to i8
  store i8 %485, i8* %401, align 1, !noalias !5
  %486 = lshr i64 %480, 24
  %487 = trunc i64 %486 to i8
  store i8 %487, i8* %400, align 1, !noalias !5
  %488 = lshr i64 %480, 32
  %489 = trunc i64 %488 to i8
  store i8 %489, i8* %399, align 1, !noalias !5
  %490 = lshr i64 %480, 40
  %491 = trunc i64 %490 to i8
  store i8 %491, i8* %398, align 1, !noalias !5
  %492 = lshr i64 %480, 48
  %493 = trunc i64 %492 to i8
  store i8 %493, i8* %397, align 1, !noalias !5
  %494 = lshr i64 %480, 56
  %495 = trunc i64 %494 to i8
  store i8 %495, i8* %396, align 1, !noalias !5
  %496 = load i8*, i8** %317, align 8, !alias.scope !5
  %497 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSB_IPKhEES7_S7_(%"class.std::__1::vector"* nonnull %42, i8* %496, i8* nonnull %396, i8* %420) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %396) #12, !noalias !5
  %498 = load i8*, i8** %317, align 8, !alias.scope !5
  %499 = load i8, i8* %474, align 1, !noalias !5
  %500 = icmp slt i8 %499, 0
  %501 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %472, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %502 = load i8*, i8** %501, align 8, !noalias !5
  %503 = bitcast %"class.std::__1::basic_string"* %472 to i8*
  %504 = select i1 %500, i8* %502, i8* %503
  %505 = load i64, i64* %477, align 8, !noalias !5
  %506 = zext i8 %499 to i64
  %507 = select i1 %500, i64 %505, i64 %506
  %508 = getelementptr inbounds i8, i8* %504, i64 %507
  %509 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertINS_11__wrap_iterIPKcEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsISA_E9referenceEEE5valueENS5_IPhEEE4typeENS5_IPKhEESA_SA_(%"class.std::__1::vector"* nonnull %42, i8* %498, i8* %504, i8* %508) #12
  %510 = bitcast %"class.content::SignedExchangeEnvelope"* %1 to i64*
  %511 = load i64, i64* %510, align 8, !noalias !5
  %512 = getelementptr inbounds %"class.content::SignedExchangeEnvelope", %"class.content::SignedExchangeEnvelope"* %1, i64 0, i32 0, i32 0, i32 1
  %513 = bitcast i8** %512 to i64*
  %514 = load i64, i64* %513, align 8, !noalias !5
  %515 = sub i64 %514, %511
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %396) #12, !noalias !5
  %516 = trunc i64 %515 to i8
  store i8 %516, i8* %404, align 1, !noalias !5
  %517 = lshr i64 %515, 8
  %518 = trunc i64 %517 to i8
  store i8 %518, i8* %402, align 1, !noalias !5
  %519 = lshr i64 %515, 16
  %520 = trunc i64 %519 to i8
  store i8 %520, i8* %401, align 1, !noalias !5
  %521 = lshr i64 %515, 24
  %522 = trunc i64 %521 to i8
  store i8 %522, i8* %400, align 1, !noalias !5
  %523 = lshr i64 %515, 32
  %524 = trunc i64 %523 to i8
  store i8 %524, i8* %399, align 1, !noalias !5
  %525 = lshr i64 %515, 40
  %526 = trunc i64 %525 to i8
  store i8 %526, i8* %398, align 1, !noalias !5
  %527 = lshr i64 %515, 48
  %528 = trunc i64 %527 to i8
  store i8 %528, i8* %397, align 1, !noalias !5
  %529 = lshr i64 %515, 56
  %530 = trunc i64 %529 to i8
  store i8 %530, i8* %396, align 1, !noalias !5
  %531 = load i8*, i8** %317, align 8, !alias.scope !5
  %532 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSB_IPKhEES7_S7_(%"class.std::__1::vector"* nonnull %42, i8* %531, i8* nonnull %396, i8* %420) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %396) #12, !noalias !5
  %533 = load i8*, i8** %317, align 8, !alias.scope !5
  %534 = load i64, i64* %510, align 8, !noalias !5
  %535 = load i64, i64* %513, align 8, !noalias !5
  %536 = sub i64 %535, %534
  %537 = inttoptr i64 %534 to i8*
  %538 = getelementptr inbounds i8, i8* %537, i64 %536
  call void @_ZN4base25CheckedContiguousIteratorIKhEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator"* nonnull %26, i8* %537, i8* %537, i8* %538) #12
  %539 = load i64, i64* %510, align 8, !noalias !5
  %540 = load i64, i64* %513, align 8, !noalias !5
  %541 = sub i64 %540, %539
  %542 = inttoptr i64 %539 to i8*
  %543 = getelementptr inbounds i8, i8* %542, i64 %541
  call void @_ZN4base25CheckedContiguousIteratorIKhEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator"* nonnull %27, i8* %542, i8* %543, i8* %543) #12
  %544 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIN4base25CheckedContiguousIteratorIKhEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsISA_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSE_IPS7_EESA_SA_(%"class.std::__1::vector"* nonnull %42, i8* %533, %"class.base::CheckedContiguousIterator"* nonnull byval(%"class.base::CheckedContiguousIterator") align 8 %26, %"class.base::CheckedContiguousIterator"* nonnull byval(%"class.base::CheckedContiguousIterator") align 8 %27) #12
  %545 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 188, i32 0), align 16
  %546 = and i8 %545, 25
  %547 = icmp eq i8 %546, 0
  br i1 %547, label %569, label %548, !prof !2

548:                                              ; preds = %383
  %549 = bitcast %"class.std::__1::basic_string"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %549) #12, !noalias !5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %549, i8 0, i64 24, i1 false) #12, !alias.scope !8, !noalias !5
  %550 = load i8*, i8** %316, align 8, !alias.scope !5, !noalias !8
  %551 = load i8*, i8** %317, align 8, !alias.scope !5, !noalias !8
  %552 = icmp eq i8* %550, %551
  br i1 %552, label %559, label %553

553:                                              ; preds = %548, %553
  %554 = phi i8* [ %557, %553 ], [ %550, %548 ]
  %555 = load i8, i8* %554, align 1
  %556 = zext i8 %555 to i32
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base13StringAppendFEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcz(%"class.std::__1::basic_string"* nonnull %28, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21, i64 0, i64 0), i32 %556) #12
  %557 = getelementptr inbounds i8, i8* %554, i64 1
  %558 = icmp eq i8* %557, %551
  br i1 %558, label %559, label %553

559:                                              ; preds = %553, %548
  %560 = call i64 @_ZN20trace_event_internal13AddTraceEventINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEEN4base11trace_event16TraceEventHandleEcPKhPKcSE_yjySE_OT_(i8 signext 69, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 188, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.10, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0), %"class.std::__1::basic_string"* nonnull dereferenceable(24) %28) #12
  %561 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %562 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %561, i64 0, i32 1, i32 0
  %563 = load i8, i8* %562, align 1, !noalias !5
  %564 = icmp slt i8 %563, 0
  br i1 %564, label %565, label %568

565:                                              ; preds = %559
  %566 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %567 = load i8*, i8** %566, align 8, !noalias !5
  call void @_ZdlPv(i8* %567) #13
  br label %568

568:                                              ; preds = %565, %559
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %549) #12, !noalias !5
  br label %569

569:                                              ; preds = %383, %568
  call void @_ZN7content34SignedExchangeSignatureHeaderField9SignatureD1Ev(%"struct.content::SignedExchangeSignatureHeaderField::Signature"* nonnull %25) #12
  call void @llvm.lifetime.end.p0i8(i64 392, i8* nonnull %332) #12, !noalias !5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %319)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %321)
  br i1 %61, label %573, label %570

570:                                              ; preds = %569
  %571 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %572 = atomicrmw add i32* %571, i32 1 monotonic
  br label %573

573:                                              ; preds = %569, %570
  %574 = getelementptr inbounds %"class.absl::optional.38", %"class.absl::optional.38"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %574)
  %575 = getelementptr inbounds %"class.absl::optional.38", %"class.absl::optional.38"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %575)
  %576 = getelementptr inbounds %"class.absl::optional.38", %"class.absl::optional.38"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %576)
  %577 = getelementptr inbounds %"class.absl::optional.38", %"class.absl::optional.38"* %22, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %577)
  %578 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 188, i32 0), align 16
  %579 = and i8 %578, 25
  %580 = icmp eq i8 %579, 0
  br i1 %580, label %587, label %581, !prof !2

581:                                              ; preds = %573
  %582 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #12
  %583 = bitcast %"class.base::TimeTicks"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %583) #12
  %584 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %12, i64 0, i32 0, i32 0
  %585 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #12
  store i64 %585, i64* %584, align 8
  %586 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 188, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.22, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %582, %"class.base::TimeTicks"* nonnull dereferenceable(8) %12, %"class.base::trace_event::TraceArguments"* null, i32 0) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %583) #12
  br label %587

587:                                              ; preds = %581, %573
  %588 = phi i64 [ -6148914691236517206, %573 ], [ %586, %581 ]
  %589 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %573 ], [ getelementptr inbounds ([22 x i8], [22 x i8]* @.str.22, i64 0, i64 0), %581 ]
  %590 = phi i8* [ null, %573 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 188, i32 0), %581 ]
  %591 = bitcast %"class.base::BasicStringPiece"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %591) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %591, i8 0, i64 16, i1 false) #12
  %592 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %298, align 8
  %593 = call { i8*, i64 } @_ZN3net9x509_util25CryptoBufferAsStringPieceEPK16crypto_buffer_st(%struct.crypto_buffer_st* %592) #12
  %594 = extractvalue { i8*, i64 } %593, 0
  %595 = extractvalue { i8*, i64 } %593, 1
  %596 = call zeroext i1 @_ZN3net4asn122ExtractSPKIFromDERCertEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPS6_(i8* %594, i64 %595, %"class.base::BasicStringPiece"* nonnull %13) #12
  br i1 %596, label %611, label %597

597:                                              ; preds = %587
  %598 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %598) #12
  %599 = call i8* @_Znwm(i64 32) #13
  %600 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %599, i8** %600, align 8
  %601 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %602 = bitcast i64* %601 to <2 x i64>*
  store <2 x i64> <i64 23, i64 -9223372036854775776>, <2 x i64>* %602, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %599, i8* align 1 getelementptr inbounds ([24 x i8], [24 x i8]* @.str.23, i64 0, i64 0), i64 23, i1 false) #12
  %603 = getelementptr inbounds i8, i8* %599, i64 23
  store i8 0, i8* %603, align 1
  store i8 0, i8* %574, align 4
  call void @_ZN7content21signed_exchange_utils24ReportErrorAndTraceEventEPNS_27SignedExchangeDevToolsProxyERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN4absl8optionalINS3_4pairIiNS_19SignedExchangeError5FieldEEEEE(%"class.content::SignedExchangeDevToolsProxy"* %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %14, %"class.absl::optional.38"* nonnull %15) #12
  %604 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %605 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %604, i64 0, i32 1, i32 0
  %606 = load i8, i8* %605, align 1
  %607 = icmp slt i8 %606, 0
  br i1 %607, label %608, label %610

608:                                              ; preds = %597
  %609 = load i8*, i8** %600, align 8
  call void @_ZdlPv(i8* %609) #13
  br label %610

610:                                              ; preds = %608, %597
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %598) #12
  br label %668

611:                                              ; preds = %587
  %612 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %13, i64 0, i32 0
  %613 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %13, i64 0, i32 1
  %614 = bitcast %struct.cbs_st* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %614) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %614, i8 -86, i64 16, i1 false) #12
  %615 = load i8*, i8** %612, align 8
  %616 = load i64, i64* %613, align 8
  call void @CBS_init(%struct.cbs_st* nonnull %16, i8* %615, i64 %616) #12
  %617 = call %struct.evp_pkey_st* @EVP_parse_public_key(%struct.cbs_st* nonnull %16) #12
  %618 = icmp eq %struct.evp_pkey_st* %617, null
  br i1 %618, label %622, label %619

619:                                              ; preds = %611
  %620 = call i64 @CBS_len(%struct.cbs_st* nonnull %16) #12
  %621 = icmp eq i64 %620, 0
  br i1 %621, label %635, label %622

622:                                              ; preds = %619, %611
  %623 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %623) #12
  %624 = call i8* @_Znwm(i64 32) #13
  %625 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %624, i8** %625, align 8
  %626 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %627 = bitcast i64* %626 to <2 x i64>*
  store <2 x i64> <i64 27, i64 -9223372036854775776>, <2 x i64>* %627, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %624, i8* align 1 getelementptr inbounds ([28 x i8], [28 x i8]* @.str.24, i64 0, i64 0), i64 27, i1 false) #12
  %628 = getelementptr inbounds i8, i8* %624, i64 27
  store i8 0, i8* %628, align 1
  store i8 0, i8* %575, align 4
  call void @_ZN7content21signed_exchange_utils24ReportErrorAndTraceEventEPNS_27SignedExchangeDevToolsProxyERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN4absl8optionalINS3_4pairIiNS_19SignedExchangeError5FieldEEEEE(%"class.content::SignedExchangeDevToolsProxy"* %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %17, %"class.absl::optional.38"* nonnull %18) #12
  %629 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %630 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %629, i64 0, i32 1, i32 0
  %631 = load i8, i8* %630, align 1
  %632 = icmp slt i8 %631, 0
  br i1 %632, label %633, label %663

633:                                              ; preds = %622
  %634 = load i8*, i8** %625, align 8
  call void @_ZdlPv(i8* %634) #13
  br label %663

635:                                              ; preds = %619
  %636 = call i32 @EVP_PKEY_id(%struct.evp_pkey_st* nonnull %617) #12
  %637 = icmp eq i32 %636, 408
  br i1 %637, label %648, label %638

638:                                              ; preds = %635
  %639 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %639) #12
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %19, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @.str.25, i64 0, i64 0), i32 %636) #12
  store i8 0, i8* %576, align 4
  call void @_ZN7content21signed_exchange_utils24ReportErrorAndTraceEventEPNS_27SignedExchangeDevToolsProxyERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN4absl8optionalINS3_4pairIiNS_19SignedExchangeError5FieldEEEEE(%"class.content::SignedExchangeDevToolsProxy"* %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %19, %"class.absl::optional.38"* nonnull %20) #12
  %640 = bitcast %"class.std::__1::basic_string"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %641 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %640, i64 0, i32 1, i32 0
  %642 = load i8, i8* %641, align 1
  %643 = icmp slt i8 %642, 0
  br i1 %643, label %644, label %647

644:                                              ; preds = %638
  %645 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %646 = load i8*, i8** %645, align 8
  call void @_ZdlPv(i8* %646) #13
  br label %647

647:                                              ; preds = %644, %638
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %639) #12
  br label %664

648:                                              ; preds = %635
  %649 = call %struct.ec_key_st* @EVP_PKEY_get0_EC_KEY(%struct.evp_pkey_st* nonnull %617) #12
  %650 = call %struct.ec_group_st* @EC_KEY_get0_group(%struct.ec_key_st* %649) #12
  %651 = call i32 @EC_GROUP_get_curve_name(%struct.ec_group_st* %650) #12
  %652 = icmp eq i32 %651, 415
  br i1 %652, label %664, label %653

653:                                              ; preds = %648
  %654 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %654) #12
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %21, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.26, i64 0, i64 0), i32 %651) #12
  store i8 0, i8* %577, align 4
  call void @_ZN7content21signed_exchange_utils24ReportErrorAndTraceEventEPNS_27SignedExchangeDevToolsProxyERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN4absl8optionalINS3_4pairIiNS_19SignedExchangeError5FieldEEEEE(%"class.content::SignedExchangeDevToolsProxy"* %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %21, %"class.absl::optional.38"* nonnull %22) #12
  %655 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %656 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %655, i64 0, i32 1, i32 0
  %657 = load i8, i8* %656, align 1
  %658 = icmp slt i8 %657, 0
  br i1 %658, label %659, label %662

659:                                              ; preds = %653
  %660 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %661 = load i8*, i8** %660, align 8
  call void @_ZdlPv(i8* %661) #13
  br label %662

662:                                              ; preds = %659, %653
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %654) #12
  br label %664

663:                                              ; preds = %633, %622
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %623) #12
  br i1 %618, label %666, label %664

664:                                              ; preds = %663, %662, %648, %647
  %665 = phi i8 [ 0, %663 ], [ 1, %648 ], [ 0, %647 ], [ 0, %662 ]
  call void @EVP_PKEY_free(%struct.evp_pkey_st* nonnull %617) #12
  br label %666

666:                                              ; preds = %664, %663
  %667 = phi i8 [ 0, %663 ], [ %665, %664 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %614) #12
  br label %668

668:                                              ; preds = %666, %610
  %669 = phi i8 [ %667, %666 ], [ 0, %610 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %591) #12
  %670 = icmp eq i8* %590, null
  br i1 %670, label %675, label %671

671:                                              ; preds = %668
  %672 = load i8, i8* %590, align 1
  %673 = icmp eq i8 %672, 0
  br i1 %673, label %675, label %674

674:                                              ; preds = %671
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %590, i8* %589, i64 %588) #12
  br label %675

675:                                              ; preds = %674, %671, %668
  br i1 %61, label %682, label %676

676:                                              ; preds = %675
  %677 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %678 = atomicrmw sub i32* %677, i32 1 acq_rel
  %679 = icmp eq i32 %678, 1
  br i1 %679, label %680, label %682

680:                                              ; preds = %676
  call void @_ZN3net15X509CertificateD1Ev(%"class.net::X509Certificate"* nonnull %60) #12
  %681 = bitcast %"class.net::X509Certificate"* %60 to i8*
  call void @_ZdlPv(i8* %681) #13
  br label %682

682:                                              ; preds = %675, %676, %680
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %574)
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %575)
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %576)
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %577)
  %683 = icmp eq i8 %669, 0
  br i1 %683, label %783, label %684

684:                                              ; preds = %682
  %685 = getelementptr inbounds %"class.content::SignedExchangeEnvelope", %"class.content::SignedExchangeEnvelope"* %1, i64 0, i32 4, i32 1
  %686 = bitcast %"class.std::__1::basic_string"* %685 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %687 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %686, i64 0, i32 1, i32 0
  %688 = load i8, i8* %687, align 1
  %689 = icmp slt i8 %688, 0
  %690 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %685, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %691 = load i8*, i8** %690, align 8
  %692 = getelementptr inbounds %"class.content::SignedExchangeEnvelope", %"class.content::SignedExchangeEnvelope"* %1, i64 0, i32 4, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %693 = load i64, i64* %692, align 8
  %694 = bitcast %"class.std::__1::basic_string"* %685 to i8*
  %695 = zext i8 %688 to i64
  %696 = select i1 %689, i8* %691, i8* %694
  %697 = select i1 %689, i64 %693, i64 %695
  %698 = bitcast %"class.std::__1::vector"* %42 to i64*
  %699 = load i64, i64* %698, align 8
  %700 = bitcast i8** %317 to i64*
  %701 = load i64, i64* %700, align 8
  %702 = sub i64 %701, %699
  br i1 %61, label %706, label %703

703:                                              ; preds = %684
  %704 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %705 = atomicrmw add i32* %704, i32 1 monotonic
  br label %706

706:                                              ; preds = %703, %684
  %707 = inttoptr i64 %699 to i8*
  %708 = getelementptr inbounds %"class.absl::optional.38", %"class.absl::optional.38"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %708)
  %709 = getelementptr inbounds %"class.absl::optional.38", %"class.absl::optional.38"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %709)
  %710 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 188, i32 0), align 16
  %711 = and i8 %710, 25
  %712 = icmp eq i8 %711, 0
  br i1 %712, label %719, label %713, !prof !2

713:                                              ; preds = %706
  %714 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #12
  %715 = bitcast %"class.base::TimeTicks"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %715) #12
  %716 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %6, i64 0, i32 0, i32 0
  %717 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #12
  store i64 %717, i64* %716, align 8
  %718 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 188, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.27, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %714, %"class.base::TimeTicks"* nonnull dereferenceable(8) %6, %"class.base::trace_event::TraceArguments"* null, i32 0) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %715) #12
  br label %719

719:                                              ; preds = %713, %706
  %720 = phi i64 [ -6148914691236517206, %706 ], [ %718, %713 ]
  %721 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %706 ], [ getelementptr inbounds ([16 x i8], [16 x i8]* @.str.27, i64 0, i64 0), %713 ]
  %722 = phi i8* [ null, %706 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 188, i32 0), %713 ]
  %723 = bitcast %"class.crypto::SignatureVerifier"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %723) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %723, i8 -86, i64 32, i1 false) #12
  call void @_ZN6crypto17SignatureVerifierC1Ev(%"class.crypto::SignatureVerifier"* nonnull %7) #12
  %724 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %298, align 8
  %725 = call zeroext i1 @_ZN3net9x509_util36SignatureVerifierInitWithCertificateEPN6crypto17SignatureVerifierENS2_18SignatureAlgorithmEN4base4spanIKhLm18446744073709551615EEEPK16crypto_buffer_st(%"class.crypto::SignatureVerifier"* nonnull %7, i32 2, i64 %697, i8* %696, %struct.crypto_buffer_st* %724) #12
  br i1 %725, label %739, label %726

726:                                              ; preds = %719
  %727 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %727) #12
  %728 = call i8* @_Znwm(i64 48) #13
  %729 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %728, i8** %729, align 8
  %730 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %731 = bitcast i64* %730 to <2 x i64>*
  store <2 x i64> <i64 44, i64 -9223372036854775760>, <2 x i64>* %731, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %728, i8* align 1 getelementptr inbounds ([45 x i8], [45 x i8]* @.str.28, i64 0, i64 0), i64 44, i1 false) #12
  %732 = getelementptr inbounds i8, i8* %728, i64 44
  store i8 0, i8* %732, align 1
  store i8 0, i8* %708, align 4
  call void @_ZN7content21signed_exchange_utils24ReportErrorAndTraceEventEPNS_27SignedExchangeDevToolsProxyERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN4absl8optionalINS3_4pairIiNS_19SignedExchangeError5FieldEEEEE(%"class.content::SignedExchangeDevToolsProxy"* %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8, %"class.absl::optional.38"* nonnull %9) #12
  %733 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %734 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %733, i64 0, i32 1, i32 0
  %735 = load i8, i8* %734, align 1
  %736 = icmp slt i8 %735, 0
  br i1 %736, label %737, label %751

737:                                              ; preds = %726
  %738 = load i8*, i8** %729, align 8
  call void @_ZdlPv(i8* %738) #13
  br label %751

739:                                              ; preds = %719
  call void @_ZN6crypto17SignatureVerifier12VerifyUpdateEN4base4spanIKhLm18446744073709551615EEE(%"class.crypto::SignatureVerifier"* nonnull %7, i64 %702, i8* %707) #12
  %740 = call zeroext i1 @_ZN6crypto17SignatureVerifier11VerifyFinalEv(%"class.crypto::SignatureVerifier"* nonnull %7) #12
  br i1 %740, label %753, label %741

741:                                              ; preds = %739
  %742 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %742) #12
  %743 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %744 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %743, i64 0, i32 1, i32 0
  store i8 19, i8* %744, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %742, i8* align 1 getelementptr inbounds ([20 x i8], [20 x i8]* @.str.29, i64 0, i64 0), i64 19, i1 false) #12
  %745 = getelementptr inbounds i8, i8* %742, i64 19
  store i8 0, i8* %745, align 1
  store i8 0, i8* %709, align 4
  call void @_ZN7content21signed_exchange_utils24ReportErrorAndTraceEventEPNS_27SignedExchangeDevToolsProxyERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN4absl8optionalINS3_4pairIiNS_19SignedExchangeError5FieldEEEEE(%"class.content::SignedExchangeDevToolsProxy"* %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %10, %"class.absl::optional.38"* nonnull %11) #12
  %746 = load i8, i8* %744, align 1
  %747 = icmp slt i8 %746, 0
  br i1 %747, label %748, label %751

748:                                              ; preds = %741
  %749 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %750 = load i8*, i8** %749, align 8
  call void @_ZdlPv(i8* %750) #13
  br label %751

751:                                              ; preds = %741, %748, %726, %737
  %752 = phi i8* [ %727, %737 ], [ %727, %726 ], [ %742, %748 ], [ %742, %741 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %752) #12
  br label %753

753:                                              ; preds = %751, %739
  %754 = phi i1 [ true, %739 ], [ false, %751 ]
  call void @_ZN6crypto17SignatureVerifierD1Ev(%"class.crypto::SignatureVerifier"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %723) #12
  %755 = icmp eq i8* %722, null
  br i1 %755, label %760, label %756

756:                                              ; preds = %753
  %757 = load i8, i8* %722, align 1
  %758 = icmp eq i8 %757, 0
  br i1 %758, label %760, label %759

759:                                              ; preds = %756
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %722, i8* %721, i64 %720) #12
  br label %760

760:                                              ; preds = %759, %756, %753
  br i1 %61, label %767, label %761

761:                                              ; preds = %760
  %762 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %763 = atomicrmw sub i32* %762, i32 1 acq_rel
  %764 = icmp eq i32 %763, 1
  br i1 %764, label %765, label %767

765:                                              ; preds = %761
  call void @_ZN3net15X509CertificateD1Ev(%"class.net::X509Certificate"* nonnull %60) #12
  %766 = bitcast %"class.net::X509Certificate"* %60 to i8*
  call void @_ZdlPv(i8* %766) #13
  br label %767

767:                                              ; preds = %760, %761, %765
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %708)
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %709)
  br i1 %754, label %783, label %768

768:                                              ; preds = %767
  %769 = bitcast %"class.std::__1::basic_string"* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %769) #12
  %770 = call i8* @_Znwm(i64 48) #13
  %771 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %770, i8** %771, align 8
  %772 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %773 = bitcast i64* %772 to <2 x i64>*
  store <2 x i64> <i64 33, i64 -9223372036854775760>, <2 x i64>* %773, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %770, i8* align 1 getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4, i64 0, i64 0), i64 33, i1 false) #12
  %774 = getelementptr inbounds i8, i8* %770, i64 33
  store i8 0, i8* %774, align 1
  %775 = getelementptr inbounds %"class.absl::optional.38", %"class.absl::optional.38"* %44, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %775, align 4
  call void @_ZN7content21signed_exchange_utils24ReportErrorAndTraceEventEPNS_27SignedExchangeDevToolsProxyERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN4absl8optionalINS3_4pairIiNS_19SignedExchangeError5FieldEEEEE(%"class.content::SignedExchangeDevToolsProxy"* %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %43, %"class.absl::optional.38"* nonnull %44) #12
  %776 = bitcast %"class.std::__1::basic_string"* %43 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %777 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %776, i64 0, i32 1, i32 0
  %778 = load i8, i8* %777, align 1
  %779 = icmp slt i8 %778, 0
  br i1 %779, label %780, label %782

780:                                              ; preds = %768
  %781 = load i8*, i8** %771, align 8
  call void @_ZdlPv(i8* %781) #13
  br label %782

782:                                              ; preds = %768, %780
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %769) #12
  br label %783

783:                                              ; preds = %682, %782, %767
  %784 = phi i32 [ 8, %682 ], [ 5, %782 ], [ 0, %767 ]
  %785 = load i8*, i8** %316, align 8
  %786 = icmp eq i8* %785, null
  br i1 %786, label %790, label %787

787:                                              ; preds = %783
  %788 = ptrtoint i8* %785 to i64
  %789 = bitcast i8** %317 to i64*
  store i64 %788, i64* %789, align 8
  call void @_ZdlPv(i8* nonnull %785) #13
  br label %790

790:                                              ; preds = %787, %783, %311, %303, %287, %271, %145, %128
  %791 = phi i8* [ %129, %128 ], [ %129, %145 ], [ %272, %271 ], [ %272, %287 ], [ %304, %303 ], [ %304, %311 ], [ %315, %783 ], [ %315, %787 ]
  %792 = phi i32 [ 9, %128 ], [ 9, %145 ], [ %269, %271 ], [ %269, %287 ], [ 3, %303 ], [ 3, %311 ], [ %784, %783 ], [ %784, %787 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %791) #12
  br i1 %61, label %799, label %793

793:                                              ; preds = %790
  %794 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %795 = atomicrmw sub i32* %794, i32 1 acq_rel
  %796 = icmp eq i32 %795, 1
  br i1 %796, label %797, label %799

797:                                              ; preds = %793
  call void @_ZN3net15X509CertificateD1Ev(%"class.net::X509Certificate"* nonnull %60) #12
  %798 = bitcast %"class.net::X509Certificate"* %60 to i8*
  call void @_ZdlPv(i8* %798) #13
  br label %799

799:                                              ; preds = %790, %793, %797
  %800 = icmp eq i8* %56, null
  br i1 %800, label %805, label %801

801:                                              ; preds = %799
  %802 = load i8, i8* %56, align 1
  %803 = icmp eq i8 %802, 0
  br i1 %803, label %805, label %804

804:                                              ; preds = %801
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %56, i8* %57, i64 %58) #12
  br label %805

805:                                              ; preds = %799, %801, %804
  %806 = bitcast %"class.base::TimeDelta"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %806) #12
  %807 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %34, i64 0, i32 0
  %808 = call i64 @_ZN4base9TimeTicks3NowEv() #12
  %809 = sub nsw i64 %808, %45
  store i64 %809, i64* %807, align 8
  %810 = load atomic i64, i64* @_ZZZN7content31SignedExchangeSignatureVerifier6VerifyENS_21SignedExchangeVersionERKNS_22SignedExchangeEnvelopeEPKNS_30SignedExchangeCertificateChainERKN4base4TimeEPNS_27SignedExchangeDevToolsProxyEEN21ScopedHistogramTimer0D1EvE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %811 = inttoptr i64 %810 to %"class.base::HistogramBase"*
  %812 = icmp eq i64 %810, 0
  br i1 %812, label %813, label %816

813:                                              ; preds = %805
  %814 = call %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.30, i64 0, i64 0), i64 1000, i64 10000000, i32 50, i32 1) #12
  %815 = ptrtoint %"class.base::HistogramBase"* %814 to i64
  store atomic i64 %815, i64* @_ZZZN7content31SignedExchangeSignatureVerifier6VerifyENS_21SignedExchangeVersionERKNS_22SignedExchangeEnvelopeEPKNS_30SignedExchangeCertificateChainERKN4base4TimeEPNS_27SignedExchangeDevToolsProxyEEN21ScopedHistogramTimer0D1EvE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %816

816:                                              ; preds = %805, %813
  %817 = phi %"class.base::HistogramBase"* [ %811, %805 ], [ %814, %813 ]
  call void @_ZN4base13HistogramBase30AddTimeMillisecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"* %817, %"class.base::TimeDelta"* nonnull dereferenceable(8) %34) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %806) #12
  ret i32 %792
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN7content21signed_exchange_utils24ReportErrorAndTraceEventEPNS_27SignedExchangeDevToolsProxyERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN4absl8optionalINS3_4pairIiNS_19SignedExchangeError5FieldEEEEE(%"class.content::SignedExchangeDevToolsProxy"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.absl::optional.38"*) local_unnamed_addr #2

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #2

declare i64 @_ZN4base4Time9UnixEpochEv() local_unnamed_addr #2

declare zeroext i1 @_ZNK7content30SignedExchangeCertificateChain18ShouldIgnoreErrorsEv(%"class.content::SignedExchangeCertificateChain"*) local_unnamed_addr #2

declare void @_ZN3net15X509Certificate23CalculateFingerprint256EPK16crypto_buffer_st(%"struct.net::SHA256HashValue"* sret, %struct.crypto_buffer_st*) local_unnamed_addr #2

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #2

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #2

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #2

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #4

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.smul.with.overflow.i64(i64, i64) #4

declare %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN7content34SignedExchangeSignatureHeaderField9SignatureC1ERKS1_(%"struct.content::SignedExchangeSignatureHeaderField::Signature"*, %"struct.content::SignedExchangeSignatureHeaderField::Signature"* dereferenceable(392)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IS6_EES8_S8_(%"class.std::__1::vector"*, i8*, i8*, i8*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint i8* %1 to i64
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %7 = ptrtoint i8* %3 to i64
  %8 = ptrtoint i8* %2 to i64
  %9 = sub i64 %7, %8
  %10 = icmp sgt i64 %9, 0
  br i1 %10, label %11, label %414

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %16 = load i8*, i8** %15, align 8
  %17 = ptrtoint i8* %16 to i64
  %18 = sub i64 %14, %17
  %19 = icmp sgt i64 %9, %18
  %20 = bitcast i8** %15 to i64*
  br i1 %19, label %164, label %21

21:                                               ; preds = %11
  %22 = sub i64 %17, %5
  %23 = icmp sgt i64 %9, %22
  br i1 %23, label %24, label %37

24:                                               ; preds = %21
  %25 = getelementptr inbounds i8, i8* %2, i64 %22
  %26 = ptrtoint i8* %25 to i64
  %27 = sub i64 %7, %26
  %28 = icmp sgt i64 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %16, i8* align 1 %25, i64 %27, i1 false) #12
  %30 = getelementptr inbounds i8, i8* %16, i64 %27
  %31 = ptrtoint i8* %30 to i64
  br label %32

32:                                               ; preds = %29, %24
  %33 = phi i64 [ %31, %29 ], [ %17, %24 ]
  store i64 %33, i64* %20, align 8
  %34 = icmp sgt i64 %22, 0
  br i1 %34, label %35, label %414

35:                                               ; preds = %32
  %36 = inttoptr i64 %33 to i8*
  br label %37

37:                                               ; preds = %35, %21
  %38 = phi i64 [ %33, %35 ], [ %17, %21 ]
  %39 = phi i8* [ %36, %35 ], [ %16, %21 ]
  %40 = phi i8* [ %25, %35 ], [ %3, %21 ]
  %41 = getelementptr inbounds i8, i8* %1, i64 %9
  %42 = ptrtoint i8* %41 to i64
  %43 = sub i64 %38, %42
  %44 = getelementptr inbounds i8, i8* %1, i64 %43
  %45 = icmp ult i8* %44, %16
  br i1 %45, label %46, label %146

46:                                               ; preds = %37
  %47 = sub i64 %9, %38
  %48 = getelementptr i8, i8* %16, i64 %47
  %49 = ptrtoint i8* %48 to i64
  %50 = icmp ult i8* %48, inttoptr (i64 32 to i8*)
  br i1 %50, label %51, label %54

51:                                               ; preds = %141, %54, %46
  %52 = phi i8* [ %44, %54 ], [ %44, %46 ], [ %64, %141 ]
  %53 = phi i8* [ %39, %54 ], [ %39, %46 ], [ %65, %141 ]
  br label %152

54:                                               ; preds = %46
  %55 = sub i64 %9, %38
  %56 = getelementptr i8, i8* %16, i64 %55
  %57 = ptrtoint i8* %56 to i64
  %58 = getelementptr i8, i8* %39, i64 %57
  %59 = icmp ult i8* %39, %16
  %60 = icmp ult i8* %44, %58
  %61 = and i1 %59, %60
  br i1 %61, label %51, label %62

62:                                               ; preds = %54
  %63 = and i64 %49, -32
  %64 = getelementptr i8, i8* %44, i64 %63
  %65 = getelementptr i8, i8* %39, i64 %63
  %66 = add i64 %63, -32
  %67 = lshr exact i64 %66, 5
  %68 = add nuw nsw i64 %67, 1
  %69 = and i64 %68, 3
  %70 = icmp ult i64 %66, 96
  br i1 %70, label %122, label %71

71:                                               ; preds = %62
  %72 = sub nsw i64 %68, %69
  br label %73

73:                                               ; preds = %73, %71
  %74 = phi i64 [ 0, %71 ], [ %119, %73 ]
  %75 = phi i64 [ %72, %71 ], [ %120, %73 ]
  %76 = getelementptr i8, i8* %44, i64 %74
  %77 = getelementptr i8, i8* %39, i64 %74
  %78 = bitcast i8* %76 to <16 x i8>*
  %79 = load <16 x i8>, <16 x i8>* %78, align 1, !alias.scope !11
  %80 = getelementptr i8, i8* %76, i64 16
  %81 = bitcast i8* %80 to <16 x i8>*
  %82 = load <16 x i8>, <16 x i8>* %81, align 1, !alias.scope !11
  %83 = bitcast i8* %77 to <16 x i8>*
  store <16 x i8> %79, <16 x i8>* %83, align 1, !alias.scope !14, !noalias !11
  %84 = getelementptr i8, i8* %77, i64 16
  %85 = bitcast i8* %84 to <16 x i8>*
  store <16 x i8> %82, <16 x i8>* %85, align 1, !alias.scope !14, !noalias !11
  %86 = or i64 %74, 32
  %87 = getelementptr i8, i8* %44, i64 %86
  %88 = getelementptr i8, i8* %39, i64 %86
  %89 = bitcast i8* %87 to <16 x i8>*
  %90 = load <16 x i8>, <16 x i8>* %89, align 1, !alias.scope !11
  %91 = getelementptr i8, i8* %87, i64 16
  %92 = bitcast i8* %91 to <16 x i8>*
  %93 = load <16 x i8>, <16 x i8>* %92, align 1, !alias.scope !11
  %94 = bitcast i8* %88 to <16 x i8>*
  store <16 x i8> %90, <16 x i8>* %94, align 1, !alias.scope !14, !noalias !11
  %95 = getelementptr i8, i8* %88, i64 16
  %96 = bitcast i8* %95 to <16 x i8>*
  store <16 x i8> %93, <16 x i8>* %96, align 1, !alias.scope !14, !noalias !11
  %97 = or i64 %74, 64
  %98 = getelementptr i8, i8* %44, i64 %97
  %99 = getelementptr i8, i8* %39, i64 %97
  %100 = bitcast i8* %98 to <16 x i8>*
  %101 = load <16 x i8>, <16 x i8>* %100, align 1, !alias.scope !11
  %102 = getelementptr i8, i8* %98, i64 16
  %103 = bitcast i8* %102 to <16 x i8>*
  %104 = load <16 x i8>, <16 x i8>* %103, align 1, !alias.scope !11
  %105 = bitcast i8* %99 to <16 x i8>*
  store <16 x i8> %101, <16 x i8>* %105, align 1, !alias.scope !14, !noalias !11
  %106 = getelementptr i8, i8* %99, i64 16
  %107 = bitcast i8* %106 to <16 x i8>*
  store <16 x i8> %104, <16 x i8>* %107, align 1, !alias.scope !14, !noalias !11
  %108 = or i64 %74, 96
  %109 = getelementptr i8, i8* %44, i64 %108
  %110 = getelementptr i8, i8* %39, i64 %108
  %111 = bitcast i8* %109 to <16 x i8>*
  %112 = load <16 x i8>, <16 x i8>* %111, align 1, !alias.scope !11
  %113 = getelementptr i8, i8* %109, i64 16
  %114 = bitcast i8* %113 to <16 x i8>*
  %115 = load <16 x i8>, <16 x i8>* %114, align 1, !alias.scope !11
  %116 = bitcast i8* %110 to <16 x i8>*
  store <16 x i8> %112, <16 x i8>* %116, align 1, !alias.scope !14, !noalias !11
  %117 = getelementptr i8, i8* %110, i64 16
  %118 = bitcast i8* %117 to <16 x i8>*
  store <16 x i8> %115, <16 x i8>* %118, align 1, !alias.scope !14, !noalias !11
  %119 = add i64 %74, 128
  %120 = add i64 %75, -4
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %122, label %73, !llvm.loop !16

122:                                              ; preds = %73, %62
  %123 = phi i64 [ 0, %62 ], [ %119, %73 ]
  %124 = icmp eq i64 %69, 0
  br i1 %124, label %141, label %125

125:                                              ; preds = %122, %125
  %126 = phi i64 [ %138, %125 ], [ %123, %122 ]
  %127 = phi i64 [ %139, %125 ], [ %69, %122 ]
  %128 = getelementptr i8, i8* %44, i64 %126
  %129 = getelementptr i8, i8* %39, i64 %126
  %130 = bitcast i8* %128 to <16 x i8>*
  %131 = load <16 x i8>, <16 x i8>* %130, align 1, !alias.scope !11
  %132 = getelementptr i8, i8* %128, i64 16
  %133 = bitcast i8* %132 to <16 x i8>*
  %134 = load <16 x i8>, <16 x i8>* %133, align 1, !alias.scope !11
  %135 = bitcast i8* %129 to <16 x i8>*
  store <16 x i8> %131, <16 x i8>* %135, align 1, !alias.scope !14, !noalias !11
  %136 = getelementptr i8, i8* %129, i64 16
  %137 = bitcast i8* %136 to <16 x i8>*
  store <16 x i8> %134, <16 x i8>* %137, align 1, !alias.scope !14, !noalias !11
  %138 = add i64 %126, 32
  %139 = add i64 %127, -1
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %141, label %125, !llvm.loop !18

141:                                              ; preds = %125, %122
  %142 = icmp eq i64 %63, %49
  br i1 %142, label %143, label %51

143:                                              ; preds = %152, %141
  %144 = phi i8* [ %65, %141 ], [ %157, %152 ]
  %145 = ptrtoint i8* %144 to i64
  br label %146

146:                                              ; preds = %143, %37
  %147 = phi i64 [ %145, %143 ], [ %38, %37 ]
  store i64 %147, i64* %20, align 8
  %148 = icmp eq i64 %43, 0
  br i1 %148, label %159, label %149

149:                                              ; preds = %146
  %150 = sub i64 0, %43
  %151 = getelementptr inbounds i8, i8* %39, i64 %150
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %151, i8* align 1 %1, i64 %43, i1 false) #12
  br label %159

152:                                              ; preds = %51, %152
  %153 = phi i8* [ %156, %152 ], [ %52, %51 ]
  %154 = phi i8* [ %157, %152 ], [ %53, %51 ]
  %155 = load i8, i8* %153, align 1
  store i8 %155, i8* %154, align 1
  %156 = getelementptr inbounds i8, i8* %153, i64 1
  %157 = getelementptr inbounds i8, i8* %154, i64 1
  %158 = icmp eq i8* %156, %16
  br i1 %158, label %143, label %152, !llvm.loop !20

159:                                              ; preds = %146, %149
  %160 = ptrtoint i8* %40 to i64
  %161 = sub i64 %160, %8
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %414, label %163

163:                                              ; preds = %159
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 %161, i1 false) #12
  br label %414

164:                                              ; preds = %11
  %165 = bitcast %"class.std::__1::vector"* %0 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = sub i64 %17, %166
  %168 = add i64 %167, %9
  %169 = icmp slt i64 %168, 0
  br i1 %169, label %170, label %172

170:                                              ; preds = %164
  %171 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %171) #14
  unreachable

172:                                              ; preds = %164
  %173 = sub i64 %14, %166
  %174 = icmp ult i64 %173, 4611686018427387903
  br i1 %174, label %177, label %175

175:                                              ; preds = %172
  %176 = sub i64 %5, %166
  br label %183

177:                                              ; preds = %172
  %178 = shl i64 %173, 1
  %179 = icmp ult i64 %178, %168
  %180 = select i1 %179, i64 %168, i64 %178
  %181 = sub i64 %5, %166
  %182 = icmp eq i64 %180, 0
  br i1 %182, label %187, label %183

183:                                              ; preds = %175, %177
  %184 = phi i64 [ %176, %175 ], [ %181, %177 ]
  %185 = phi i64 [ 9223372036854775807, %175 ], [ %180, %177 ]
  %186 = tail call i8* @_Znwm(i64 %185) #13
  br label %187

187:                                              ; preds = %177, %183
  %188 = phi i64 [ %184, %183 ], [ %181, %177 ]
  %189 = phi i64 [ %185, %183 ], [ 0, %177 ]
  %190 = phi i8* [ %186, %183 ], [ null, %177 ]
  %191 = getelementptr inbounds i8, i8* %190, i64 %188
  %192 = getelementptr inbounds i8, i8* %190, i64 %189
  %193 = getelementptr inbounds i8, i8* %191, i64 %9
  %194 = icmp ult i64 %9, 32
  br i1 %194, label %280, label %195

195:                                              ; preds = %187
  %196 = icmp ult i8* %191, %3
  %197 = icmp ugt i8* %193, %2
  %198 = and i1 %196, %197
  br i1 %198, label %280, label %199

199:                                              ; preds = %195
  %200 = and i64 %9, -32
  %201 = getelementptr i8, i8* %191, i64 %200
  %202 = getelementptr i8, i8* %2, i64 %200
  %203 = add i64 %200, -32
  %204 = lshr exact i64 %203, 5
  %205 = add nuw nsw i64 %204, 1
  %206 = and i64 %205, 3
  %207 = icmp ult i64 %203, 96
  br i1 %207, label %259, label %208

208:                                              ; preds = %199
  %209 = sub nsw i64 %205, %206
  br label %210

210:                                              ; preds = %210, %208
  %211 = phi i64 [ 0, %208 ], [ %256, %210 ]
  %212 = phi i64 [ %209, %208 ], [ %257, %210 ]
  %213 = getelementptr i8, i8* %191, i64 %211
  %214 = getelementptr i8, i8* %2, i64 %211
  %215 = bitcast i8* %214 to <16 x i8>*
  %216 = load <16 x i8>, <16 x i8>* %215, align 1, !alias.scope !21
  %217 = getelementptr i8, i8* %214, i64 16
  %218 = bitcast i8* %217 to <16 x i8>*
  %219 = load <16 x i8>, <16 x i8>* %218, align 1, !alias.scope !21
  %220 = bitcast i8* %213 to <16 x i8>*
  store <16 x i8> %216, <16 x i8>* %220, align 1, !alias.scope !24, !noalias !21
  %221 = getelementptr i8, i8* %213, i64 16
  %222 = bitcast i8* %221 to <16 x i8>*
  store <16 x i8> %219, <16 x i8>* %222, align 1, !alias.scope !24, !noalias !21
  %223 = or i64 %211, 32
  %224 = getelementptr i8, i8* %191, i64 %223
  %225 = getelementptr i8, i8* %2, i64 %223
  %226 = bitcast i8* %225 to <16 x i8>*
  %227 = load <16 x i8>, <16 x i8>* %226, align 1, !alias.scope !21
  %228 = getelementptr i8, i8* %225, i64 16
  %229 = bitcast i8* %228 to <16 x i8>*
  %230 = load <16 x i8>, <16 x i8>* %229, align 1, !alias.scope !21
  %231 = bitcast i8* %224 to <16 x i8>*
  store <16 x i8> %227, <16 x i8>* %231, align 1, !alias.scope !24, !noalias !21
  %232 = getelementptr i8, i8* %224, i64 16
  %233 = bitcast i8* %232 to <16 x i8>*
  store <16 x i8> %230, <16 x i8>* %233, align 1, !alias.scope !24, !noalias !21
  %234 = or i64 %211, 64
  %235 = getelementptr i8, i8* %191, i64 %234
  %236 = getelementptr i8, i8* %2, i64 %234
  %237 = bitcast i8* %236 to <16 x i8>*
  %238 = load <16 x i8>, <16 x i8>* %237, align 1, !alias.scope !21
  %239 = getelementptr i8, i8* %236, i64 16
  %240 = bitcast i8* %239 to <16 x i8>*
  %241 = load <16 x i8>, <16 x i8>* %240, align 1, !alias.scope !21
  %242 = bitcast i8* %235 to <16 x i8>*
  store <16 x i8> %238, <16 x i8>* %242, align 1, !alias.scope !24, !noalias !21
  %243 = getelementptr i8, i8* %235, i64 16
  %244 = bitcast i8* %243 to <16 x i8>*
  store <16 x i8> %241, <16 x i8>* %244, align 1, !alias.scope !24, !noalias !21
  %245 = or i64 %211, 96
  %246 = getelementptr i8, i8* %191, i64 %245
  %247 = getelementptr i8, i8* %2, i64 %245
  %248 = bitcast i8* %247 to <16 x i8>*
  %249 = load <16 x i8>, <16 x i8>* %248, align 1, !alias.scope !21
  %250 = getelementptr i8, i8* %247, i64 16
  %251 = bitcast i8* %250 to <16 x i8>*
  %252 = load <16 x i8>, <16 x i8>* %251, align 1, !alias.scope !21
  %253 = bitcast i8* %246 to <16 x i8>*
  store <16 x i8> %249, <16 x i8>* %253, align 1, !alias.scope !24, !noalias !21
  %254 = getelementptr i8, i8* %246, i64 16
  %255 = bitcast i8* %254 to <16 x i8>*
  store <16 x i8> %252, <16 x i8>* %255, align 1, !alias.scope !24, !noalias !21
  %256 = add i64 %211, 128
  %257 = add i64 %212, -4
  %258 = icmp eq i64 %257, 0
  br i1 %258, label %259, label %210, !llvm.loop !26

259:                                              ; preds = %210, %199
  %260 = phi i64 [ 0, %199 ], [ %256, %210 ]
  %261 = icmp eq i64 %206, 0
  br i1 %261, label %278, label %262

262:                                              ; preds = %259, %262
  %263 = phi i64 [ %275, %262 ], [ %260, %259 ]
  %264 = phi i64 [ %276, %262 ], [ %206, %259 ]
  %265 = getelementptr i8, i8* %191, i64 %263
  %266 = getelementptr i8, i8* %2, i64 %263
  %267 = bitcast i8* %266 to <16 x i8>*
  %268 = load <16 x i8>, <16 x i8>* %267, align 1, !alias.scope !21
  %269 = getelementptr i8, i8* %266, i64 16
  %270 = bitcast i8* %269 to <16 x i8>*
  %271 = load <16 x i8>, <16 x i8>* %270, align 1, !alias.scope !21
  %272 = bitcast i8* %265 to <16 x i8>*
  store <16 x i8> %268, <16 x i8>* %272, align 1, !alias.scope !24, !noalias !21
  %273 = getelementptr i8, i8* %265, i64 16
  %274 = bitcast i8* %273 to <16 x i8>*
  store <16 x i8> %271, <16 x i8>* %274, align 1, !alias.scope !24, !noalias !21
  %275 = add i64 %263, 32
  %276 = add i64 %264, -1
  %277 = icmp eq i64 %276, 0
  br i1 %277, label %278, label %262, !llvm.loop !27

278:                                              ; preds = %262, %259
  %279 = icmp eq i64 %9, %200
  br i1 %279, label %290, label %280

280:                                              ; preds = %278, %195, %187
  %281 = phi i8* [ %191, %195 ], [ %191, %187 ], [ %201, %278 ]
  %282 = phi i8* [ %2, %195 ], [ %2, %187 ], [ %202, %278 ]
  br label %283

283:                                              ; preds = %280, %283
  %284 = phi i8* [ %287, %283 ], [ %281, %280 ]
  %285 = phi i8* [ %288, %283 ], [ %282, %280 ]
  %286 = load i8, i8* %285, align 1
  store i8 %286, i8* %284, align 1
  %287 = getelementptr inbounds i8, i8* %284, i64 1
  %288 = getelementptr inbounds i8, i8* %285, i64 1
  %289 = icmp eq i8* %193, %287
  br i1 %289, label %290, label %283, !llvm.loop !28

290:                                              ; preds = %283, %278
  %291 = ptrtoint i8* %192 to i64
  %292 = load i8*, i8** %6, align 8
  %293 = ptrtoint i8* %292 to i64
  %294 = sub i64 %5, %293
  %295 = sub i64 0, %294
  %296 = getelementptr inbounds i8, i8* %191, i64 %295
  %297 = ptrtoint i8* %296 to i64
  %298 = icmp sgt i64 %294, 0
  br i1 %298, label %299, label %300

299:                                              ; preds = %290
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %296, i8* align 1 %292, i64 %294, i1 false) #12
  br label %300

300:                                              ; preds = %299, %290
  %301 = load i8*, i8** %15, align 8
  %302 = icmp eq i8* %301, %1
  br i1 %302, label %408, label %303

303:                                              ; preds = %300
  %304 = ptrtoint i8* %301 to i64
  %305 = sub i64 %304, %5
  %306 = icmp ult i64 %305, 32
  br i1 %306, label %398, label %307

307:                                              ; preds = %303
  %308 = add i64 %188, %7
  %309 = sub i64 %308, %5
  %310 = sub i64 %309, %8
  %311 = getelementptr i8, i8* %301, i64 %310
  %312 = ptrtoint i8* %311 to i64
  %313 = getelementptr i8, i8* %190, i64 %312
  %314 = icmp ult i8* %193, %301
  %315 = icmp ugt i8* %313, %1
  %316 = and i1 %314, %315
  br i1 %316, label %398, label %317

317:                                              ; preds = %307
  %318 = and i64 %305, -32
  %319 = getelementptr i8, i8* %193, i64 %318
  %320 = getelementptr i8, i8* %1, i64 %318
  %321 = add i64 %318, -32
  %322 = lshr exact i64 %321, 5
  %323 = add nuw nsw i64 %322, 1
  %324 = and i64 %323, 3
  %325 = icmp ult i64 %321, 96
  br i1 %325, label %377, label %326

326:                                              ; preds = %317
  %327 = sub nsw i64 %323, %324
  br label %328

328:                                              ; preds = %328, %326
  %329 = phi i64 [ 0, %326 ], [ %374, %328 ]
  %330 = phi i64 [ %327, %326 ], [ %375, %328 ]
  %331 = getelementptr i8, i8* %193, i64 %329
  %332 = getelementptr i8, i8* %1, i64 %329
  %333 = bitcast i8* %332 to <16 x i8>*
  %334 = load <16 x i8>, <16 x i8>* %333, align 1, !alias.scope !29
  %335 = getelementptr i8, i8* %332, i64 16
  %336 = bitcast i8* %335 to <16 x i8>*
  %337 = load <16 x i8>, <16 x i8>* %336, align 1, !alias.scope !29
  %338 = bitcast i8* %331 to <16 x i8>*
  store <16 x i8> %334, <16 x i8>* %338, align 1, !alias.scope !32, !noalias !29
  %339 = getelementptr i8, i8* %331, i64 16
  %340 = bitcast i8* %339 to <16 x i8>*
  store <16 x i8> %337, <16 x i8>* %340, align 1, !alias.scope !32, !noalias !29
  %341 = or i64 %329, 32
  %342 = getelementptr i8, i8* %193, i64 %341
  %343 = getelementptr i8, i8* %1, i64 %341
  %344 = bitcast i8* %343 to <16 x i8>*
  %345 = load <16 x i8>, <16 x i8>* %344, align 1, !alias.scope !29
  %346 = getelementptr i8, i8* %343, i64 16
  %347 = bitcast i8* %346 to <16 x i8>*
  %348 = load <16 x i8>, <16 x i8>* %347, align 1, !alias.scope !29
  %349 = bitcast i8* %342 to <16 x i8>*
  store <16 x i8> %345, <16 x i8>* %349, align 1, !alias.scope !32, !noalias !29
  %350 = getelementptr i8, i8* %342, i64 16
  %351 = bitcast i8* %350 to <16 x i8>*
  store <16 x i8> %348, <16 x i8>* %351, align 1, !alias.scope !32, !noalias !29
  %352 = or i64 %329, 64
  %353 = getelementptr i8, i8* %193, i64 %352
  %354 = getelementptr i8, i8* %1, i64 %352
  %355 = bitcast i8* %354 to <16 x i8>*
  %356 = load <16 x i8>, <16 x i8>* %355, align 1, !alias.scope !29
  %357 = getelementptr i8, i8* %354, i64 16
  %358 = bitcast i8* %357 to <16 x i8>*
  %359 = load <16 x i8>, <16 x i8>* %358, align 1, !alias.scope !29
  %360 = bitcast i8* %353 to <16 x i8>*
  store <16 x i8> %356, <16 x i8>* %360, align 1, !alias.scope !32, !noalias !29
  %361 = getelementptr i8, i8* %353, i64 16
  %362 = bitcast i8* %361 to <16 x i8>*
  store <16 x i8> %359, <16 x i8>* %362, align 1, !alias.scope !32, !noalias !29
  %363 = or i64 %329, 96
  %364 = getelementptr i8, i8* %193, i64 %363
  %365 = getelementptr i8, i8* %1, i64 %363
  %366 = bitcast i8* %365 to <16 x i8>*
  %367 = load <16 x i8>, <16 x i8>* %366, align 1, !alias.scope !29
  %368 = getelementptr i8, i8* %365, i64 16
  %369 = bitcast i8* %368 to <16 x i8>*
  %370 = load <16 x i8>, <16 x i8>* %369, align 1, !alias.scope !29
  %371 = bitcast i8* %364 to <16 x i8>*
  store <16 x i8> %367, <16 x i8>* %371, align 1, !alias.scope !32, !noalias !29
  %372 = getelementptr i8, i8* %364, i64 16
  %373 = bitcast i8* %372 to <16 x i8>*
  store <16 x i8> %370, <16 x i8>* %373, align 1, !alias.scope !32, !noalias !29
  %374 = add i64 %329, 128
  %375 = add i64 %330, -4
  %376 = icmp eq i64 %375, 0
  br i1 %376, label %377, label %328, !llvm.loop !34

377:                                              ; preds = %328, %317
  %378 = phi i64 [ 0, %317 ], [ %374, %328 ]
  %379 = icmp eq i64 %324, 0
  br i1 %379, label %396, label %380

380:                                              ; preds = %377, %380
  %381 = phi i64 [ %393, %380 ], [ %378, %377 ]
  %382 = phi i64 [ %394, %380 ], [ %324, %377 ]
  %383 = getelementptr i8, i8* %193, i64 %381
  %384 = getelementptr i8, i8* %1, i64 %381
  %385 = bitcast i8* %384 to <16 x i8>*
  %386 = load <16 x i8>, <16 x i8>* %385, align 1, !alias.scope !29
  %387 = getelementptr i8, i8* %384, i64 16
  %388 = bitcast i8* %387 to <16 x i8>*
  %389 = load <16 x i8>, <16 x i8>* %388, align 1, !alias.scope !29
  %390 = bitcast i8* %383 to <16 x i8>*
  store <16 x i8> %386, <16 x i8>* %390, align 1, !alias.scope !32, !noalias !29
  %391 = getelementptr i8, i8* %383, i64 16
  %392 = bitcast i8* %391 to <16 x i8>*
  store <16 x i8> %389, <16 x i8>* %392, align 1, !alias.scope !32, !noalias !29
  %393 = add i64 %381, 32
  %394 = add i64 %382, -1
  %395 = icmp eq i64 %394, 0
  br i1 %395, label %396, label %380, !llvm.loop !35

396:                                              ; preds = %380, %377
  %397 = icmp eq i64 %305, %318
  br i1 %397, label %408, label %398

398:                                              ; preds = %396, %307, %303
  %399 = phi i8* [ %193, %307 ], [ %193, %303 ], [ %319, %396 ]
  %400 = phi i8* [ %1, %307 ], [ %1, %303 ], [ %320, %396 ]
  br label %401

401:                                              ; preds = %398, %401
  %402 = phi i8* [ %406, %401 ], [ %399, %398 ]
  %403 = phi i8* [ %405, %401 ], [ %400, %398 ]
  %404 = load i8, i8* %403, align 1
  store i8 %404, i8* %402, align 1
  %405 = getelementptr inbounds i8, i8* %403, i64 1
  %406 = getelementptr inbounds i8, i8* %402, i64 1
  %407 = icmp eq i8* %405, %301
  br i1 %407, label %408, label %401, !llvm.loop !36

408:                                              ; preds = %401, %396, %300
  %409 = phi i8* [ %193, %300 ], [ %319, %396 ], [ %406, %401 ]
  %410 = ptrtoint i8* %409 to i64
  %411 = load i8*, i8** %6, align 8
  store i64 %297, i64* %165, align 8
  store i64 %410, i64* %20, align 8
  store i64 %291, i64* %13, align 8
  %412 = icmp eq i8* %411, null
  br i1 %412, label %414, label %413

413:                                              ; preds = %408
  tail call void @_ZdlPv(i8* nonnull %411) #13
  br label %414

414:                                              ; preds = %413, %408, %32, %159, %163, %4
  %415 = phi i8* [ %1, %4 ], [ %1, %163 ], [ %1, %159 ], [ %1, %32 ], [ %191, %408 ], [ %191, %413 ]
  ret i8* %415
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertINS_11__wrap_iterIPKcEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsISA_E9referenceEEE5valueENS5_IPhEEE4typeENS5_IPKhEESA_SA_(%"class.std::__1::vector"*, i8*, i8*, i8*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint i8* %1 to i64
  %6 = ptrtoint i8* %2 to i64
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %8 = ptrtoint i8* %3 to i64
  %9 = sub i64 %8, %6
  %10 = icmp sgt i64 %9, 0
  br i1 %10, label %11, label %618

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %16 = load i8*, i8** %15, align 8
  %17 = ptrtoint i8* %16 to i64
  %18 = sub i64 %14, %17
  %19 = icmp sgt i64 %9, %18
  %20 = bitcast i8** %15 to i64*
  br i1 %19, label %368, label %21

21:                                               ; preds = %11
  %22 = sub i64 %17, %5
  %23 = icmp sgt i64 %9, %22
  br i1 %23, label %24, label %141

24:                                               ; preds = %21
  %25 = getelementptr inbounds i8, i8* %2, i64 %22
  %26 = icmp eq i8* %25, %3
  br i1 %26, label %136, label %27

27:                                               ; preds = %24
  %28 = sub i64 %5, %6
  %29 = sub i64 %28, %17
  %30 = getelementptr i8, i8* %3, i64 %29
  %31 = ptrtoint i8* %30 to i64
  %32 = icmp ult i8* %30, inttoptr (i64 32 to i8*)
  br i1 %32, label %123, label %33

33:                                               ; preds = %27
  %34 = sub i64 %5, %6
  %35 = sub i64 %34, %17
  %36 = getelementptr i8, i8* %3, i64 %35
  %37 = ptrtoint i8* %36 to i64
  %38 = getelementptr i8, i8* %16, i64 %37
  %39 = icmp ult i8* %16, %3
  %40 = icmp ult i8* %25, %38
  %41 = and i1 %39, %40
  br i1 %41, label %123, label %42

42:                                               ; preds = %33
  %43 = and i64 %31, -32
  %44 = getelementptr i8, i8* %16, i64 %43
  %45 = getelementptr i8, i8* %25, i64 %43
  %46 = add i64 %43, -32
  %47 = lshr exact i64 %46, 5
  %48 = add nuw nsw i64 %47, 1
  %49 = and i64 %48, 3
  %50 = icmp ult i64 %46, 96
  br i1 %50, label %102, label %51

51:                                               ; preds = %42
  %52 = sub nsw i64 %48, %49
  br label %53

53:                                               ; preds = %53, %51
  %54 = phi i64 [ 0, %51 ], [ %99, %53 ]
  %55 = phi i64 [ %52, %51 ], [ %100, %53 ]
  %56 = getelementptr i8, i8* %16, i64 %54
  %57 = getelementptr i8, i8* %25, i64 %54
  %58 = bitcast i8* %57 to <16 x i8>*
  %59 = load <16 x i8>, <16 x i8>* %58, align 1, !alias.scope !37
  %60 = getelementptr i8, i8* %57, i64 16
  %61 = bitcast i8* %60 to <16 x i8>*
  %62 = load <16 x i8>, <16 x i8>* %61, align 1, !alias.scope !37
  %63 = bitcast i8* %56 to <16 x i8>*
  store <16 x i8> %59, <16 x i8>* %63, align 1, !alias.scope !40, !noalias !37
  %64 = getelementptr i8, i8* %56, i64 16
  %65 = bitcast i8* %64 to <16 x i8>*
  store <16 x i8> %62, <16 x i8>* %65, align 1, !alias.scope !40, !noalias !37
  %66 = or i64 %54, 32
  %67 = getelementptr i8, i8* %16, i64 %66
  %68 = getelementptr i8, i8* %25, i64 %66
  %69 = bitcast i8* %68 to <16 x i8>*
  %70 = load <16 x i8>, <16 x i8>* %69, align 1, !alias.scope !37
  %71 = getelementptr i8, i8* %68, i64 16
  %72 = bitcast i8* %71 to <16 x i8>*
  %73 = load <16 x i8>, <16 x i8>* %72, align 1, !alias.scope !37
  %74 = bitcast i8* %67 to <16 x i8>*
  store <16 x i8> %70, <16 x i8>* %74, align 1, !alias.scope !40, !noalias !37
  %75 = getelementptr i8, i8* %67, i64 16
  %76 = bitcast i8* %75 to <16 x i8>*
  store <16 x i8> %73, <16 x i8>* %76, align 1, !alias.scope !40, !noalias !37
  %77 = or i64 %54, 64
  %78 = getelementptr i8, i8* %16, i64 %77
  %79 = getelementptr i8, i8* %25, i64 %77
  %80 = bitcast i8* %79 to <16 x i8>*
  %81 = load <16 x i8>, <16 x i8>* %80, align 1, !alias.scope !37
  %82 = getelementptr i8, i8* %79, i64 16
  %83 = bitcast i8* %82 to <16 x i8>*
  %84 = load <16 x i8>, <16 x i8>* %83, align 1, !alias.scope !37
  %85 = bitcast i8* %78 to <16 x i8>*
  store <16 x i8> %81, <16 x i8>* %85, align 1, !alias.scope !40, !noalias !37
  %86 = getelementptr i8, i8* %78, i64 16
  %87 = bitcast i8* %86 to <16 x i8>*
  store <16 x i8> %84, <16 x i8>* %87, align 1, !alias.scope !40, !noalias !37
  %88 = or i64 %54, 96
  %89 = getelementptr i8, i8* %16, i64 %88
  %90 = getelementptr i8, i8* %25, i64 %88
  %91 = bitcast i8* %90 to <16 x i8>*
  %92 = load <16 x i8>, <16 x i8>* %91, align 1, !alias.scope !37
  %93 = getelementptr i8, i8* %90, i64 16
  %94 = bitcast i8* %93 to <16 x i8>*
  %95 = load <16 x i8>, <16 x i8>* %94, align 1, !alias.scope !37
  %96 = bitcast i8* %89 to <16 x i8>*
  store <16 x i8> %92, <16 x i8>* %96, align 1, !alias.scope !40, !noalias !37
  %97 = getelementptr i8, i8* %89, i64 16
  %98 = bitcast i8* %97 to <16 x i8>*
  store <16 x i8> %95, <16 x i8>* %98, align 1, !alias.scope !40, !noalias !37
  %99 = add i64 %54, 128
  %100 = add i64 %55, -4
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %102, label %53, !llvm.loop !42

102:                                              ; preds = %53, %42
  %103 = phi i64 [ 0, %42 ], [ %99, %53 ]
  %104 = icmp eq i64 %49, 0
  br i1 %104, label %121, label %105

105:                                              ; preds = %102, %105
  %106 = phi i64 [ %118, %105 ], [ %103, %102 ]
  %107 = phi i64 [ %119, %105 ], [ %49, %102 ]
  %108 = getelementptr i8, i8* %16, i64 %106
  %109 = getelementptr i8, i8* %25, i64 %106
  %110 = bitcast i8* %109 to <16 x i8>*
  %111 = load <16 x i8>, <16 x i8>* %110, align 1, !alias.scope !37
  %112 = getelementptr i8, i8* %109, i64 16
  %113 = bitcast i8* %112 to <16 x i8>*
  %114 = load <16 x i8>, <16 x i8>* %113, align 1, !alias.scope !37
  %115 = bitcast i8* %108 to <16 x i8>*
  store <16 x i8> %111, <16 x i8>* %115, align 1, !alias.scope !40, !noalias !37
  %116 = getelementptr i8, i8* %108, i64 16
  %117 = bitcast i8* %116 to <16 x i8>*
  store <16 x i8> %114, <16 x i8>* %117, align 1, !alias.scope !40, !noalias !37
  %118 = add i64 %106, 32
  %119 = add i64 %107, -1
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %105, !llvm.loop !43

121:                                              ; preds = %105, %102
  %122 = icmp eq i64 %43, %31
  br i1 %122, label %133, label %123

123:                                              ; preds = %121, %33, %27
  %124 = phi i8* [ %16, %33 ], [ %16, %27 ], [ %44, %121 ]
  %125 = phi i8* [ %25, %33 ], [ %25, %27 ], [ %45, %121 ]
  br label %126

126:                                              ; preds = %123, %126
  %127 = phi i8* [ %131, %126 ], [ %124, %123 ]
  %128 = phi i8* [ %130, %126 ], [ %125, %123 ]
  %129 = load i8, i8* %128, align 1
  store i8 %129, i8* %127, align 1
  %130 = getelementptr inbounds i8, i8* %128, i64 1
  %131 = getelementptr inbounds i8, i8* %127, i64 1
  %132 = icmp eq i8* %130, %3
  br i1 %132, label %133, label %126, !llvm.loop !44

133:                                              ; preds = %126, %121
  %134 = phi i8* [ %44, %121 ], [ %131, %126 ]
  %135 = ptrtoint i8* %134 to i64
  br label %136

136:                                              ; preds = %133, %24
  %137 = phi i64 [ %17, %24 ], [ %135, %133 ]
  store i64 %137, i64* %20, align 8
  %138 = icmp sgt i64 %22, 0
  br i1 %138, label %139, label %618

139:                                              ; preds = %136
  %140 = inttoptr i64 %137 to i8*
  br label %141

141:                                              ; preds = %139, %21
  %142 = phi i64 [ %137, %139 ], [ %17, %21 ]
  %143 = phi i8* [ %140, %139 ], [ %16, %21 ]
  %144 = phi i8* [ %25, %139 ], [ %3, %21 ]
  %145 = getelementptr inbounds i8, i8* %1, i64 %9
  %146 = ptrtoint i8* %145 to i64
  %147 = sub i64 %142, %146
  %148 = getelementptr inbounds i8, i8* %1, i64 %147
  %149 = icmp ult i8* %148, %16
  br i1 %149, label %150, label %250

150:                                              ; preds = %141
  %151 = sub i64 %9, %142
  %152 = getelementptr i8, i8* %16, i64 %151
  %153 = ptrtoint i8* %152 to i64
  %154 = icmp ult i8* %152, inttoptr (i64 32 to i8*)
  br i1 %154, label %155, label %158

155:                                              ; preds = %245, %158, %150
  %156 = phi i8* [ %148, %158 ], [ %148, %150 ], [ %168, %245 ]
  %157 = phi i8* [ %143, %158 ], [ %143, %150 ], [ %169, %245 ]
  br label %256

158:                                              ; preds = %150
  %159 = sub i64 %9, %142
  %160 = getelementptr i8, i8* %16, i64 %159
  %161 = ptrtoint i8* %160 to i64
  %162 = getelementptr i8, i8* %143, i64 %161
  %163 = icmp ult i8* %143, %16
  %164 = icmp ult i8* %148, %162
  %165 = and i1 %163, %164
  br i1 %165, label %155, label %166

166:                                              ; preds = %158
  %167 = and i64 %153, -32
  %168 = getelementptr i8, i8* %148, i64 %167
  %169 = getelementptr i8, i8* %143, i64 %167
  %170 = add i64 %167, -32
  %171 = lshr exact i64 %170, 5
  %172 = add nuw nsw i64 %171, 1
  %173 = and i64 %172, 3
  %174 = icmp ult i64 %170, 96
  br i1 %174, label %226, label %175

175:                                              ; preds = %166
  %176 = sub nsw i64 %172, %173
  br label %177

177:                                              ; preds = %177, %175
  %178 = phi i64 [ 0, %175 ], [ %223, %177 ]
  %179 = phi i64 [ %176, %175 ], [ %224, %177 ]
  %180 = getelementptr i8, i8* %148, i64 %178
  %181 = getelementptr i8, i8* %143, i64 %178
  %182 = bitcast i8* %180 to <16 x i8>*
  %183 = load <16 x i8>, <16 x i8>* %182, align 1, !alias.scope !45
  %184 = getelementptr i8, i8* %180, i64 16
  %185 = bitcast i8* %184 to <16 x i8>*
  %186 = load <16 x i8>, <16 x i8>* %185, align 1, !alias.scope !45
  %187 = bitcast i8* %181 to <16 x i8>*
  store <16 x i8> %183, <16 x i8>* %187, align 1, !alias.scope !48, !noalias !45
  %188 = getelementptr i8, i8* %181, i64 16
  %189 = bitcast i8* %188 to <16 x i8>*
  store <16 x i8> %186, <16 x i8>* %189, align 1, !alias.scope !48, !noalias !45
  %190 = or i64 %178, 32
  %191 = getelementptr i8, i8* %148, i64 %190
  %192 = getelementptr i8, i8* %143, i64 %190
  %193 = bitcast i8* %191 to <16 x i8>*
  %194 = load <16 x i8>, <16 x i8>* %193, align 1, !alias.scope !45
  %195 = getelementptr i8, i8* %191, i64 16
  %196 = bitcast i8* %195 to <16 x i8>*
  %197 = load <16 x i8>, <16 x i8>* %196, align 1, !alias.scope !45
  %198 = bitcast i8* %192 to <16 x i8>*
  store <16 x i8> %194, <16 x i8>* %198, align 1, !alias.scope !48, !noalias !45
  %199 = getelementptr i8, i8* %192, i64 16
  %200 = bitcast i8* %199 to <16 x i8>*
  store <16 x i8> %197, <16 x i8>* %200, align 1, !alias.scope !48, !noalias !45
  %201 = or i64 %178, 64
  %202 = getelementptr i8, i8* %148, i64 %201
  %203 = getelementptr i8, i8* %143, i64 %201
  %204 = bitcast i8* %202 to <16 x i8>*
  %205 = load <16 x i8>, <16 x i8>* %204, align 1, !alias.scope !45
  %206 = getelementptr i8, i8* %202, i64 16
  %207 = bitcast i8* %206 to <16 x i8>*
  %208 = load <16 x i8>, <16 x i8>* %207, align 1, !alias.scope !45
  %209 = bitcast i8* %203 to <16 x i8>*
  store <16 x i8> %205, <16 x i8>* %209, align 1, !alias.scope !48, !noalias !45
  %210 = getelementptr i8, i8* %203, i64 16
  %211 = bitcast i8* %210 to <16 x i8>*
  store <16 x i8> %208, <16 x i8>* %211, align 1, !alias.scope !48, !noalias !45
  %212 = or i64 %178, 96
  %213 = getelementptr i8, i8* %148, i64 %212
  %214 = getelementptr i8, i8* %143, i64 %212
  %215 = bitcast i8* %213 to <16 x i8>*
  %216 = load <16 x i8>, <16 x i8>* %215, align 1, !alias.scope !45
  %217 = getelementptr i8, i8* %213, i64 16
  %218 = bitcast i8* %217 to <16 x i8>*
  %219 = load <16 x i8>, <16 x i8>* %218, align 1, !alias.scope !45
  %220 = bitcast i8* %214 to <16 x i8>*
  store <16 x i8> %216, <16 x i8>* %220, align 1, !alias.scope !48, !noalias !45
  %221 = getelementptr i8, i8* %214, i64 16
  %222 = bitcast i8* %221 to <16 x i8>*
  store <16 x i8> %219, <16 x i8>* %222, align 1, !alias.scope !48, !noalias !45
  %223 = add i64 %178, 128
  %224 = add i64 %179, -4
  %225 = icmp eq i64 %224, 0
  br i1 %225, label %226, label %177, !llvm.loop !50

226:                                              ; preds = %177, %166
  %227 = phi i64 [ 0, %166 ], [ %223, %177 ]
  %228 = icmp eq i64 %173, 0
  br i1 %228, label %245, label %229

229:                                              ; preds = %226, %229
  %230 = phi i64 [ %242, %229 ], [ %227, %226 ]
  %231 = phi i64 [ %243, %229 ], [ %173, %226 ]
  %232 = getelementptr i8, i8* %148, i64 %230
  %233 = getelementptr i8, i8* %143, i64 %230
  %234 = bitcast i8* %232 to <16 x i8>*
  %235 = load <16 x i8>, <16 x i8>* %234, align 1, !alias.scope !45
  %236 = getelementptr i8, i8* %232, i64 16
  %237 = bitcast i8* %236 to <16 x i8>*
  %238 = load <16 x i8>, <16 x i8>* %237, align 1, !alias.scope !45
  %239 = bitcast i8* %233 to <16 x i8>*
  store <16 x i8> %235, <16 x i8>* %239, align 1, !alias.scope !48, !noalias !45
  %240 = getelementptr i8, i8* %233, i64 16
  %241 = bitcast i8* %240 to <16 x i8>*
  store <16 x i8> %238, <16 x i8>* %241, align 1, !alias.scope !48, !noalias !45
  %242 = add i64 %230, 32
  %243 = add i64 %231, -1
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %245, label %229, !llvm.loop !51

245:                                              ; preds = %229, %226
  %246 = icmp eq i64 %167, %153
  br i1 %246, label %247, label %155

247:                                              ; preds = %256, %245
  %248 = phi i8* [ %169, %245 ], [ %261, %256 ]
  %249 = ptrtoint i8* %248 to i64
  br label %250

250:                                              ; preds = %247, %141
  %251 = phi i64 [ %249, %247 ], [ %142, %141 ]
  store i64 %251, i64* %20, align 8
  %252 = icmp eq i64 %147, 0
  br i1 %252, label %263, label %253

253:                                              ; preds = %250
  %254 = sub i64 0, %147
  %255 = getelementptr inbounds i8, i8* %143, i64 %254
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %255, i8* align 1 %1, i64 %147, i1 false) #12
  br label %263

256:                                              ; preds = %155, %256
  %257 = phi i8* [ %260, %256 ], [ %156, %155 ]
  %258 = phi i8* [ %261, %256 ], [ %157, %155 ]
  %259 = load i8, i8* %257, align 1
  store i8 %259, i8* %258, align 1
  %260 = getelementptr inbounds i8, i8* %257, i64 1
  %261 = getelementptr inbounds i8, i8* %258, i64 1
  %262 = icmp eq i8* %260, %16
  br i1 %262, label %247, label %256, !llvm.loop !52

263:                                              ; preds = %250, %253
  %264 = icmp eq i8* %144, %2
  br i1 %264, label %618, label %265

265:                                              ; preds = %263
  %266 = sub i64 0, %6
  %267 = getelementptr i8, i8* %144, i64 %266
  %268 = ptrtoint i8* %267 to i64
  %269 = icmp ult i8* %267, inttoptr (i64 32 to i8*)
  br i1 %269, label %358, label %270

270:                                              ; preds = %265
  %271 = ptrtoint i8* %1 to i64
  %272 = sub i64 %271, %6
  %273 = getelementptr i8, i8* %144, i64 %272
  %274 = icmp ugt i8* %144, %1
  %275 = icmp ugt i8* %273, %2
  %276 = and i1 %274, %275
  br i1 %276, label %358, label %277

277:                                              ; preds = %270
  %278 = and i64 %268, -32
  %279 = getelementptr i8, i8* %1, i64 %278
  %280 = getelementptr i8, i8* %2, i64 %278
  %281 = add i64 %278, -32
  %282 = lshr exact i64 %281, 5
  %283 = add nuw nsw i64 %282, 1
  %284 = and i64 %283, 3
  %285 = icmp ult i64 %281, 96
  br i1 %285, label %337, label %286

286:                                              ; preds = %277
  %287 = sub nsw i64 %283, %284
  br label %288

288:                                              ; preds = %288, %286
  %289 = phi i64 [ 0, %286 ], [ %334, %288 ]
  %290 = phi i64 [ %287, %286 ], [ %335, %288 ]
  %291 = getelementptr i8, i8* %1, i64 %289
  %292 = getelementptr i8, i8* %2, i64 %289
  %293 = bitcast i8* %292 to <16 x i8>*
  %294 = load <16 x i8>, <16 x i8>* %293, align 1, !alias.scope !53
  %295 = getelementptr i8, i8* %292, i64 16
  %296 = bitcast i8* %295 to <16 x i8>*
  %297 = load <16 x i8>, <16 x i8>* %296, align 1, !alias.scope !53
  %298 = bitcast i8* %291 to <16 x i8>*
  store <16 x i8> %294, <16 x i8>* %298, align 1, !alias.scope !56, !noalias !53
  %299 = getelementptr i8, i8* %291, i64 16
  %300 = bitcast i8* %299 to <16 x i8>*
  store <16 x i8> %297, <16 x i8>* %300, align 1, !alias.scope !56, !noalias !53
  %301 = or i64 %289, 32
  %302 = getelementptr i8, i8* %1, i64 %301
  %303 = getelementptr i8, i8* %2, i64 %301
  %304 = bitcast i8* %303 to <16 x i8>*
  %305 = load <16 x i8>, <16 x i8>* %304, align 1, !alias.scope !53
  %306 = getelementptr i8, i8* %303, i64 16
  %307 = bitcast i8* %306 to <16 x i8>*
  %308 = load <16 x i8>, <16 x i8>* %307, align 1, !alias.scope !53
  %309 = bitcast i8* %302 to <16 x i8>*
  store <16 x i8> %305, <16 x i8>* %309, align 1, !alias.scope !56, !noalias !53
  %310 = getelementptr i8, i8* %302, i64 16
  %311 = bitcast i8* %310 to <16 x i8>*
  store <16 x i8> %308, <16 x i8>* %311, align 1, !alias.scope !56, !noalias !53
  %312 = or i64 %289, 64
  %313 = getelementptr i8, i8* %1, i64 %312
  %314 = getelementptr i8, i8* %2, i64 %312
  %315 = bitcast i8* %314 to <16 x i8>*
  %316 = load <16 x i8>, <16 x i8>* %315, align 1, !alias.scope !53
  %317 = getelementptr i8, i8* %314, i64 16
  %318 = bitcast i8* %317 to <16 x i8>*
  %319 = load <16 x i8>, <16 x i8>* %318, align 1, !alias.scope !53
  %320 = bitcast i8* %313 to <16 x i8>*
  store <16 x i8> %316, <16 x i8>* %320, align 1, !alias.scope !56, !noalias !53
  %321 = getelementptr i8, i8* %313, i64 16
  %322 = bitcast i8* %321 to <16 x i8>*
  store <16 x i8> %319, <16 x i8>* %322, align 1, !alias.scope !56, !noalias !53
  %323 = or i64 %289, 96
  %324 = getelementptr i8, i8* %1, i64 %323
  %325 = getelementptr i8, i8* %2, i64 %323
  %326 = bitcast i8* %325 to <16 x i8>*
  %327 = load <16 x i8>, <16 x i8>* %326, align 1, !alias.scope !53
  %328 = getelementptr i8, i8* %325, i64 16
  %329 = bitcast i8* %328 to <16 x i8>*
  %330 = load <16 x i8>, <16 x i8>* %329, align 1, !alias.scope !53
  %331 = bitcast i8* %324 to <16 x i8>*
  store <16 x i8> %327, <16 x i8>* %331, align 1, !alias.scope !56, !noalias !53
  %332 = getelementptr i8, i8* %324, i64 16
  %333 = bitcast i8* %332 to <16 x i8>*
  store <16 x i8> %330, <16 x i8>* %333, align 1, !alias.scope !56, !noalias !53
  %334 = add i64 %289, 128
  %335 = add i64 %290, -4
  %336 = icmp eq i64 %335, 0
  br i1 %336, label %337, label %288, !llvm.loop !58

337:                                              ; preds = %288, %277
  %338 = phi i64 [ 0, %277 ], [ %334, %288 ]
  %339 = icmp eq i64 %284, 0
  br i1 %339, label %356, label %340

340:                                              ; preds = %337, %340
  %341 = phi i64 [ %353, %340 ], [ %338, %337 ]
  %342 = phi i64 [ %354, %340 ], [ %284, %337 ]
  %343 = getelementptr i8, i8* %1, i64 %341
  %344 = getelementptr i8, i8* %2, i64 %341
  %345 = bitcast i8* %344 to <16 x i8>*
  %346 = load <16 x i8>, <16 x i8>* %345, align 1, !alias.scope !53
  %347 = getelementptr i8, i8* %344, i64 16
  %348 = bitcast i8* %347 to <16 x i8>*
  %349 = load <16 x i8>, <16 x i8>* %348, align 1, !alias.scope !53
  %350 = bitcast i8* %343 to <16 x i8>*
  store <16 x i8> %346, <16 x i8>* %350, align 1, !alias.scope !56, !noalias !53
  %351 = getelementptr i8, i8* %343, i64 16
  %352 = bitcast i8* %351 to <16 x i8>*
  store <16 x i8> %349, <16 x i8>* %352, align 1, !alias.scope !56, !noalias !53
  %353 = add i64 %341, 32
  %354 = add i64 %342, -1
  %355 = icmp eq i64 %354, 0
  br i1 %355, label %356, label %340, !llvm.loop !59

356:                                              ; preds = %340, %337
  %357 = icmp eq i64 %278, %268
  br i1 %357, label %618, label %358

358:                                              ; preds = %356, %270, %265
  %359 = phi i8* [ %1, %270 ], [ %1, %265 ], [ %279, %356 ]
  %360 = phi i8* [ %2, %270 ], [ %2, %265 ], [ %280, %356 ]
  br label %361

361:                                              ; preds = %358, %361
  %362 = phi i8* [ %366, %361 ], [ %359, %358 ]
  %363 = phi i8* [ %365, %361 ], [ %360, %358 ]
  %364 = load i8, i8* %363, align 1
  store i8 %364, i8* %362, align 1
  %365 = getelementptr inbounds i8, i8* %363, i64 1
  %366 = getelementptr inbounds i8, i8* %362, i64 1
  %367 = icmp eq i8* %365, %144
  br i1 %367, label %618, label %361, !llvm.loop !60

368:                                              ; preds = %11
  %369 = bitcast %"class.std::__1::vector"* %0 to i64*
  %370 = load i64, i64* %369, align 8
  %371 = sub i64 %17, %370
  %372 = add i64 %371, %9
  %373 = icmp slt i64 %372, 0
  br i1 %373, label %374, label %376

374:                                              ; preds = %368
  %375 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %375) #14
  unreachable

376:                                              ; preds = %368
  %377 = sub i64 %14, %370
  %378 = icmp ult i64 %377, 4611686018427387903
  br i1 %378, label %381, label %379

379:                                              ; preds = %376
  %380 = sub i64 %5, %370
  br label %387

381:                                              ; preds = %376
  %382 = shl i64 %377, 1
  %383 = icmp ult i64 %382, %372
  %384 = select i1 %383, i64 %372, i64 %382
  %385 = sub i64 %5, %370
  %386 = icmp eq i64 %384, 0
  br i1 %386, label %391, label %387

387:                                              ; preds = %379, %381
  %388 = phi i64 [ %380, %379 ], [ %385, %381 ]
  %389 = phi i64 [ 9223372036854775807, %379 ], [ %384, %381 ]
  %390 = tail call i8* @_Znwm(i64 %389) #13
  br label %391

391:                                              ; preds = %381, %387
  %392 = phi i64 [ %388, %387 ], [ %385, %381 ]
  %393 = phi i64 [ %389, %387 ], [ 0, %381 ]
  %394 = phi i8* [ %390, %387 ], [ null, %381 ]
  %395 = getelementptr inbounds i8, i8* %394, i64 %392
  %396 = getelementptr inbounds i8, i8* %394, i64 %393
  %397 = getelementptr inbounds i8, i8* %395, i64 %9
  %398 = icmp ult i64 %9, 32
  br i1 %398, label %484, label %399

399:                                              ; preds = %391
  %400 = icmp ult i8* %395, %3
  %401 = icmp ugt i8* %397, %2
  %402 = and i1 %400, %401
  br i1 %402, label %484, label %403

403:                                              ; preds = %399
  %404 = and i64 %9, -32
  %405 = getelementptr i8, i8* %395, i64 %404
  %406 = getelementptr i8, i8* %2, i64 %404
  %407 = add i64 %404, -32
  %408 = lshr exact i64 %407, 5
  %409 = add nuw nsw i64 %408, 1
  %410 = and i64 %409, 3
  %411 = icmp ult i64 %407, 96
  br i1 %411, label %463, label %412

412:                                              ; preds = %403
  %413 = sub nsw i64 %409, %410
  br label %414

414:                                              ; preds = %414, %412
  %415 = phi i64 [ 0, %412 ], [ %460, %414 ]
  %416 = phi i64 [ %413, %412 ], [ %461, %414 ]
  %417 = getelementptr i8, i8* %395, i64 %415
  %418 = getelementptr i8, i8* %2, i64 %415
  %419 = bitcast i8* %418 to <16 x i8>*
  %420 = load <16 x i8>, <16 x i8>* %419, align 1, !alias.scope !61
  %421 = getelementptr i8, i8* %418, i64 16
  %422 = bitcast i8* %421 to <16 x i8>*
  %423 = load <16 x i8>, <16 x i8>* %422, align 1, !alias.scope !61
  %424 = bitcast i8* %417 to <16 x i8>*
  store <16 x i8> %420, <16 x i8>* %424, align 1, !alias.scope !64, !noalias !61
  %425 = getelementptr i8, i8* %417, i64 16
  %426 = bitcast i8* %425 to <16 x i8>*
  store <16 x i8> %423, <16 x i8>* %426, align 1, !alias.scope !64, !noalias !61
  %427 = or i64 %415, 32
  %428 = getelementptr i8, i8* %395, i64 %427
  %429 = getelementptr i8, i8* %2, i64 %427
  %430 = bitcast i8* %429 to <16 x i8>*
  %431 = load <16 x i8>, <16 x i8>* %430, align 1, !alias.scope !61
  %432 = getelementptr i8, i8* %429, i64 16
  %433 = bitcast i8* %432 to <16 x i8>*
  %434 = load <16 x i8>, <16 x i8>* %433, align 1, !alias.scope !61
  %435 = bitcast i8* %428 to <16 x i8>*
  store <16 x i8> %431, <16 x i8>* %435, align 1, !alias.scope !64, !noalias !61
  %436 = getelementptr i8, i8* %428, i64 16
  %437 = bitcast i8* %436 to <16 x i8>*
  store <16 x i8> %434, <16 x i8>* %437, align 1, !alias.scope !64, !noalias !61
  %438 = or i64 %415, 64
  %439 = getelementptr i8, i8* %395, i64 %438
  %440 = getelementptr i8, i8* %2, i64 %438
  %441 = bitcast i8* %440 to <16 x i8>*
  %442 = load <16 x i8>, <16 x i8>* %441, align 1, !alias.scope !61
  %443 = getelementptr i8, i8* %440, i64 16
  %444 = bitcast i8* %443 to <16 x i8>*
  %445 = load <16 x i8>, <16 x i8>* %444, align 1, !alias.scope !61
  %446 = bitcast i8* %439 to <16 x i8>*
  store <16 x i8> %442, <16 x i8>* %446, align 1, !alias.scope !64, !noalias !61
  %447 = getelementptr i8, i8* %439, i64 16
  %448 = bitcast i8* %447 to <16 x i8>*
  store <16 x i8> %445, <16 x i8>* %448, align 1, !alias.scope !64, !noalias !61
  %449 = or i64 %415, 96
  %450 = getelementptr i8, i8* %395, i64 %449
  %451 = getelementptr i8, i8* %2, i64 %449
  %452 = bitcast i8* %451 to <16 x i8>*
  %453 = load <16 x i8>, <16 x i8>* %452, align 1, !alias.scope !61
  %454 = getelementptr i8, i8* %451, i64 16
  %455 = bitcast i8* %454 to <16 x i8>*
  %456 = load <16 x i8>, <16 x i8>* %455, align 1, !alias.scope !61
  %457 = bitcast i8* %450 to <16 x i8>*
  store <16 x i8> %453, <16 x i8>* %457, align 1, !alias.scope !64, !noalias !61
  %458 = getelementptr i8, i8* %450, i64 16
  %459 = bitcast i8* %458 to <16 x i8>*
  store <16 x i8> %456, <16 x i8>* %459, align 1, !alias.scope !64, !noalias !61
  %460 = add i64 %415, 128
  %461 = add i64 %416, -4
  %462 = icmp eq i64 %461, 0
  br i1 %462, label %463, label %414, !llvm.loop !66

463:                                              ; preds = %414, %403
  %464 = phi i64 [ 0, %403 ], [ %460, %414 ]
  %465 = icmp eq i64 %410, 0
  br i1 %465, label %482, label %466

466:                                              ; preds = %463, %466
  %467 = phi i64 [ %479, %466 ], [ %464, %463 ]
  %468 = phi i64 [ %480, %466 ], [ %410, %463 ]
  %469 = getelementptr i8, i8* %395, i64 %467
  %470 = getelementptr i8, i8* %2, i64 %467
  %471 = bitcast i8* %470 to <16 x i8>*
  %472 = load <16 x i8>, <16 x i8>* %471, align 1, !alias.scope !61
  %473 = getelementptr i8, i8* %470, i64 16
  %474 = bitcast i8* %473 to <16 x i8>*
  %475 = load <16 x i8>, <16 x i8>* %474, align 1, !alias.scope !61
  %476 = bitcast i8* %469 to <16 x i8>*
  store <16 x i8> %472, <16 x i8>* %476, align 1, !alias.scope !64, !noalias !61
  %477 = getelementptr i8, i8* %469, i64 16
  %478 = bitcast i8* %477 to <16 x i8>*
  store <16 x i8> %475, <16 x i8>* %478, align 1, !alias.scope !64, !noalias !61
  %479 = add i64 %467, 32
  %480 = add i64 %468, -1
  %481 = icmp eq i64 %480, 0
  br i1 %481, label %482, label %466, !llvm.loop !67

482:                                              ; preds = %466, %463
  %483 = icmp eq i64 %9, %404
  br i1 %483, label %494, label %484

484:                                              ; preds = %482, %399, %391
  %485 = phi i8* [ %395, %399 ], [ %395, %391 ], [ %405, %482 ]
  %486 = phi i8* [ %2, %399 ], [ %2, %391 ], [ %406, %482 ]
  br label %487

487:                                              ; preds = %484, %487
  %488 = phi i8* [ %491, %487 ], [ %485, %484 ]
  %489 = phi i8* [ %492, %487 ], [ %486, %484 ]
  %490 = load i8, i8* %489, align 1
  store i8 %490, i8* %488, align 1
  %491 = getelementptr inbounds i8, i8* %488, i64 1
  %492 = getelementptr inbounds i8, i8* %489, i64 1
  %493 = icmp eq i8* %397, %491
  br i1 %493, label %494, label %487, !llvm.loop !68

494:                                              ; preds = %487, %482
  %495 = ptrtoint i8* %396 to i64
  %496 = load i8*, i8** %7, align 8
  %497 = ptrtoint i8* %496 to i64
  %498 = sub i64 %5, %497
  %499 = sub i64 0, %498
  %500 = getelementptr inbounds i8, i8* %395, i64 %499
  %501 = ptrtoint i8* %500 to i64
  %502 = icmp sgt i64 %498, 0
  br i1 %502, label %503, label %504

503:                                              ; preds = %494
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %500, i8* align 1 %496, i64 %498, i1 false) #12
  br label %504

504:                                              ; preds = %503, %494
  %505 = load i8*, i8** %15, align 8
  %506 = icmp eq i8* %505, %1
  br i1 %506, label %612, label %507

507:                                              ; preds = %504
  %508 = ptrtoint i8* %505 to i64
  %509 = sub i64 %508, %5
  %510 = icmp ult i64 %509, 32
  br i1 %510, label %602, label %511

511:                                              ; preds = %507
  %512 = add i64 %392, %8
  %513 = sub i64 %512, %5
  %514 = sub i64 %513, %6
  %515 = getelementptr i8, i8* %505, i64 %514
  %516 = ptrtoint i8* %515 to i64
  %517 = getelementptr i8, i8* %394, i64 %516
  %518 = icmp ult i8* %397, %505
  %519 = icmp ugt i8* %517, %1
  %520 = and i1 %518, %519
  br i1 %520, label %602, label %521

521:                                              ; preds = %511
  %522 = and i64 %509, -32
  %523 = getelementptr i8, i8* %397, i64 %522
  %524 = getelementptr i8, i8* %1, i64 %522
  %525 = add i64 %522, -32
  %526 = lshr exact i64 %525, 5
  %527 = add nuw nsw i64 %526, 1
  %528 = and i64 %527, 3
  %529 = icmp ult i64 %525, 96
  br i1 %529, label %581, label %530

530:                                              ; preds = %521
  %531 = sub nsw i64 %527, %528
  br label %532

532:                                              ; preds = %532, %530
  %533 = phi i64 [ 0, %530 ], [ %578, %532 ]
  %534 = phi i64 [ %531, %530 ], [ %579, %532 ]
  %535 = getelementptr i8, i8* %397, i64 %533
  %536 = getelementptr i8, i8* %1, i64 %533
  %537 = bitcast i8* %536 to <16 x i8>*
  %538 = load <16 x i8>, <16 x i8>* %537, align 1, !alias.scope !69
  %539 = getelementptr i8, i8* %536, i64 16
  %540 = bitcast i8* %539 to <16 x i8>*
  %541 = load <16 x i8>, <16 x i8>* %540, align 1, !alias.scope !69
  %542 = bitcast i8* %535 to <16 x i8>*
  store <16 x i8> %538, <16 x i8>* %542, align 1, !alias.scope !72, !noalias !69
  %543 = getelementptr i8, i8* %535, i64 16
  %544 = bitcast i8* %543 to <16 x i8>*
  store <16 x i8> %541, <16 x i8>* %544, align 1, !alias.scope !72, !noalias !69
  %545 = or i64 %533, 32
  %546 = getelementptr i8, i8* %397, i64 %545
  %547 = getelementptr i8, i8* %1, i64 %545
  %548 = bitcast i8* %547 to <16 x i8>*
  %549 = load <16 x i8>, <16 x i8>* %548, align 1, !alias.scope !69
  %550 = getelementptr i8, i8* %547, i64 16
  %551 = bitcast i8* %550 to <16 x i8>*
  %552 = load <16 x i8>, <16 x i8>* %551, align 1, !alias.scope !69
  %553 = bitcast i8* %546 to <16 x i8>*
  store <16 x i8> %549, <16 x i8>* %553, align 1, !alias.scope !72, !noalias !69
  %554 = getelementptr i8, i8* %546, i64 16
  %555 = bitcast i8* %554 to <16 x i8>*
  store <16 x i8> %552, <16 x i8>* %555, align 1, !alias.scope !72, !noalias !69
  %556 = or i64 %533, 64
  %557 = getelementptr i8, i8* %397, i64 %556
  %558 = getelementptr i8, i8* %1, i64 %556
  %559 = bitcast i8* %558 to <16 x i8>*
  %560 = load <16 x i8>, <16 x i8>* %559, align 1, !alias.scope !69
  %561 = getelementptr i8, i8* %558, i64 16
  %562 = bitcast i8* %561 to <16 x i8>*
  %563 = load <16 x i8>, <16 x i8>* %562, align 1, !alias.scope !69
  %564 = bitcast i8* %557 to <16 x i8>*
  store <16 x i8> %560, <16 x i8>* %564, align 1, !alias.scope !72, !noalias !69
  %565 = getelementptr i8, i8* %557, i64 16
  %566 = bitcast i8* %565 to <16 x i8>*
  store <16 x i8> %563, <16 x i8>* %566, align 1, !alias.scope !72, !noalias !69
  %567 = or i64 %533, 96
  %568 = getelementptr i8, i8* %397, i64 %567
  %569 = getelementptr i8, i8* %1, i64 %567
  %570 = bitcast i8* %569 to <16 x i8>*
  %571 = load <16 x i8>, <16 x i8>* %570, align 1, !alias.scope !69
  %572 = getelementptr i8, i8* %569, i64 16
  %573 = bitcast i8* %572 to <16 x i8>*
  %574 = load <16 x i8>, <16 x i8>* %573, align 1, !alias.scope !69
  %575 = bitcast i8* %568 to <16 x i8>*
  store <16 x i8> %571, <16 x i8>* %575, align 1, !alias.scope !72, !noalias !69
  %576 = getelementptr i8, i8* %568, i64 16
  %577 = bitcast i8* %576 to <16 x i8>*
  store <16 x i8> %574, <16 x i8>* %577, align 1, !alias.scope !72, !noalias !69
  %578 = add i64 %533, 128
  %579 = add i64 %534, -4
  %580 = icmp eq i64 %579, 0
  br i1 %580, label %581, label %532, !llvm.loop !74

581:                                              ; preds = %532, %521
  %582 = phi i64 [ 0, %521 ], [ %578, %532 ]
  %583 = icmp eq i64 %528, 0
  br i1 %583, label %600, label %584

584:                                              ; preds = %581, %584
  %585 = phi i64 [ %597, %584 ], [ %582, %581 ]
  %586 = phi i64 [ %598, %584 ], [ %528, %581 ]
  %587 = getelementptr i8, i8* %397, i64 %585
  %588 = getelementptr i8, i8* %1, i64 %585
  %589 = bitcast i8* %588 to <16 x i8>*
  %590 = load <16 x i8>, <16 x i8>* %589, align 1, !alias.scope !69
  %591 = getelementptr i8, i8* %588, i64 16
  %592 = bitcast i8* %591 to <16 x i8>*
  %593 = load <16 x i8>, <16 x i8>* %592, align 1, !alias.scope !69
  %594 = bitcast i8* %587 to <16 x i8>*
  store <16 x i8> %590, <16 x i8>* %594, align 1, !alias.scope !72, !noalias !69
  %595 = getelementptr i8, i8* %587, i64 16
  %596 = bitcast i8* %595 to <16 x i8>*
  store <16 x i8> %593, <16 x i8>* %596, align 1, !alias.scope !72, !noalias !69
  %597 = add i64 %585, 32
  %598 = add i64 %586, -1
  %599 = icmp eq i64 %598, 0
  br i1 %599, label %600, label %584, !llvm.loop !75

600:                                              ; preds = %584, %581
  %601 = icmp eq i64 %509, %522
  br i1 %601, label %612, label %602

602:                                              ; preds = %600, %511, %507
  %603 = phi i8* [ %397, %511 ], [ %397, %507 ], [ %523, %600 ]
  %604 = phi i8* [ %1, %511 ], [ %1, %507 ], [ %524, %600 ]
  br label %605

605:                                              ; preds = %602, %605
  %606 = phi i8* [ %610, %605 ], [ %603, %602 ]
  %607 = phi i8* [ %609, %605 ], [ %604, %602 ]
  %608 = load i8, i8* %607, align 1
  store i8 %608, i8* %606, align 1
  %609 = getelementptr inbounds i8, i8* %607, i64 1
  %610 = getelementptr inbounds i8, i8* %606, i64 1
  %611 = icmp eq i8* %609, %505
  br i1 %611, label %612, label %605, !llvm.loop !76

612:                                              ; preds = %605, %600, %504
  %613 = phi i8* [ %397, %504 ], [ %523, %600 ], [ %610, %605 ]
  %614 = ptrtoint i8* %613 to i64
  %615 = load i8*, i8** %7, align 8
  store i64 %501, i64* %369, align 8
  store i64 %614, i64* %20, align 8
  store i64 %495, i64* %13, align 8
  %616 = icmp eq i8* %615, null
  br i1 %616, label %618, label %617

617:                                              ; preds = %612
  tail call void @_ZdlPv(i8* nonnull %615) #13
  br label %618

618:                                              ; preds = %361, %356, %617, %612, %136, %263, %4
  %619 = phi i8* [ %1, %4 ], [ %1, %263 ], [ %1, %136 ], [ %395, %612 ], [ %395, %617 ], [ %1, %356 ], [ %1, %361 ]
  ret i8* %619
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIN4base25CheckedContiguousIteratorIKhEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsISA_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSE_IPS7_EESA_SA_(%"class.std::__1::vector"*, i8*, %"class.base::CheckedContiguousIterator"* byval(%"class.base::CheckedContiguousIterator") align 8, %"class.base::CheckedContiguousIterator"* byval(%"class.base::CheckedContiguousIterator") align 8) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint i8* %1 to i64
  %6 = alloca %"class.base::CheckedContiguousIterator", align 8
  %7 = alloca %"class.base::CheckedContiguousIterator", align 8
  %8 = alloca %"class.base::CheckedContiguousIterator", align 8
  %9 = alloca %"class.base::CheckedContiguousIterator", align 8
  %10 = alloca %"class.base::CheckedContiguousIterator", align 8
  %11 = alloca %"class.base::CheckedContiguousIterator", align 8
  %12 = alloca %"class.base::CheckedContiguousIterator", align 8
  %13 = alloca %"class.base::CheckedContiguousIterator", align 8
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %15 = bitcast %"class.base::CheckedContiguousIterator"* %2 to i8*
  %16 = bitcast %"class.base::CheckedContiguousIterator"* %3 to i8*
  %17 = bitcast %"class.base::CheckedContiguousIterator"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #12
  %18 = bitcast %"class.base::CheckedContiguousIterator"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %18, i8* nonnull align 8 %16, i64 24, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %17, i8* nonnull align 8 %15, i64 24, i1 false)
  call void @_ZNK4base25CheckedContiguousIteratorIKhE15CheckComparableERKS2_(%"class.base::CheckedContiguousIterator"* nonnull %8, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %9) #12
  %19 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %8, i64 0, i32 1
  %20 = bitcast i8** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %9, i64 0, i32 1
  %23 = bitcast i8** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %21, %24
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #12
  %26 = icmp sgt i64 %25, 0
  br i1 %26, label %27, label %372

27:                                               ; preds = %4
  %28 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %29 = bitcast i8** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %32 = load i8*, i8** %31, align 8
  %33 = ptrtoint i8* %32 to i64
  %34 = sub i64 %30, %33
  %35 = icmp sgt i64 %25, %34
  br i1 %35, label %201, label %36

36:                                               ; preds = %27
  %37 = bitcast %"class.base::CheckedContiguousIterator"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #12
  %38 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %13, i64 0, i32 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %37, i8* nonnull align 8 %16, i64 24, i1 false)
  %39 = bitcast i8** %31 to i64*
  %40 = sub i64 %33, %5
  %41 = icmp sgt i64 %25, %40
  br i1 %41, label %42, label %70

42:                                               ; preds = %36
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %37, i8* nonnull align 8 %15, i64 24, i1 false)
  %43 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKhEpLEl(%"class.base::CheckedContiguousIterator"* nonnull %13, i64 %40) #12
  %44 = load i64, i64* %39, align 8
  %45 = bitcast %"class.base::CheckedContiguousIterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #12
  %46 = bitcast %"class.base::CheckedContiguousIterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %46, i8* nonnull align 8 %16, i64 24, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %45, i8* nonnull align 8 %37, i64 24, i1 false)
  call void @_ZNK4base25CheckedContiguousIteratorIKhE15CheckComparableERKS2_(%"class.base::CheckedContiguousIterator"* nonnull %7, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %6) #12
  %47 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %7, i64 0, i32 1
  %48 = load i8*, i8** %47, align 8
  %49 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %6, i64 0, i32 1
  %50 = load i8*, i8** %49, align 8
  %51 = icmp eq i8* %48, %50
  br i1 %51, label %65, label %52

52:                                               ; preds = %42, %52
  %53 = phi i64 [ %59, %52 ], [ %44, %42 ]
  %54 = inttoptr i64 %53 to i8*
  %55 = call dereferenceable(1) i8* @_ZNK4base25CheckedContiguousIteratorIKhEdeEv(%"class.base::CheckedContiguousIterator"* nonnull %7) #12
  %56 = load i8, i8* %55, align 1
  store i8 %56, i8* %54, align 1
  %57 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKhEppEv(%"class.base::CheckedContiguousIterator"* nonnull %7) #12
  %58 = getelementptr inbounds i8, i8* %54, i64 1
  %59 = ptrtoint i8* %58 to i64
  call void @_ZNK4base25CheckedContiguousIteratorIKhE15CheckComparableERKS2_(%"class.base::CheckedContiguousIterator"* nonnull %7, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %6) #12
  %60 = load i8*, i8** %47, align 8
  %61 = load i8*, i8** %49, align 8
  %62 = icmp eq i8* %60, %61
  br i1 %62, label %63, label %52

63:                                               ; preds = %52
  %64 = ptrtoint i8* %58 to i64
  br label %65

65:                                               ; preds = %63, %42
  %66 = phi i64 [ %44, %42 ], [ %64, %63 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #12
  store i64 %66, i64* %39, align 8
  %67 = icmp sgt i64 %40, 0
  br i1 %67, label %68, label %200

68:                                               ; preds = %65
  %69 = inttoptr i64 %66 to i8*
  br label %70

70:                                               ; preds = %68, %36
  %71 = phi i64 [ %66, %68 ], [ %33, %36 ]
  %72 = phi i8* [ %69, %68 ], [ %32, %36 ]
  %73 = getelementptr inbounds i8, i8* %1, i64 %25
  %74 = ptrtoint i8* %73 to i64
  %75 = sub i64 %71, %74
  %76 = getelementptr inbounds i8, i8* %1, i64 %75
  %77 = icmp ult i8* %76, %32
  br i1 %77, label %78, label %178

78:                                               ; preds = %70
  %79 = sub i64 %25, %71
  %80 = getelementptr i8, i8* %32, i64 %79
  %81 = ptrtoint i8* %80 to i64
  %82 = icmp ult i8* %80, inttoptr (i64 32 to i8*)
  br i1 %82, label %83, label %86

83:                                               ; preds = %173, %86, %78
  %84 = phi i8* [ %76, %86 ], [ %76, %78 ], [ %96, %173 ]
  %85 = phi i8* [ %72, %86 ], [ %72, %78 ], [ %97, %173 ]
  br label %184

86:                                               ; preds = %78
  %87 = sub i64 %25, %71
  %88 = getelementptr i8, i8* %32, i64 %87
  %89 = ptrtoint i8* %88 to i64
  %90 = getelementptr i8, i8* %72, i64 %89
  %91 = icmp ult i8* %72, %32
  %92 = icmp ult i8* %76, %90
  %93 = and i1 %91, %92
  br i1 %93, label %83, label %94

94:                                               ; preds = %86
  %95 = and i64 %81, -32
  %96 = getelementptr i8, i8* %76, i64 %95
  %97 = getelementptr i8, i8* %72, i64 %95
  %98 = add i64 %95, -32
  %99 = lshr exact i64 %98, 5
  %100 = add nuw nsw i64 %99, 1
  %101 = and i64 %100, 3
  %102 = icmp ult i64 %98, 96
  br i1 %102, label %154, label %103

103:                                              ; preds = %94
  %104 = sub nsw i64 %100, %101
  br label %105

105:                                              ; preds = %105, %103
  %106 = phi i64 [ 0, %103 ], [ %151, %105 ]
  %107 = phi i64 [ %104, %103 ], [ %152, %105 ]
  %108 = getelementptr i8, i8* %76, i64 %106
  %109 = getelementptr i8, i8* %72, i64 %106
  %110 = bitcast i8* %108 to <16 x i8>*
  %111 = load <16 x i8>, <16 x i8>* %110, align 1, !alias.scope !77
  %112 = getelementptr i8, i8* %108, i64 16
  %113 = bitcast i8* %112 to <16 x i8>*
  %114 = load <16 x i8>, <16 x i8>* %113, align 1, !alias.scope !77
  %115 = bitcast i8* %109 to <16 x i8>*
  store <16 x i8> %111, <16 x i8>* %115, align 1, !alias.scope !80, !noalias !77
  %116 = getelementptr i8, i8* %109, i64 16
  %117 = bitcast i8* %116 to <16 x i8>*
  store <16 x i8> %114, <16 x i8>* %117, align 1, !alias.scope !80, !noalias !77
  %118 = or i64 %106, 32
  %119 = getelementptr i8, i8* %76, i64 %118
  %120 = getelementptr i8, i8* %72, i64 %118
  %121 = bitcast i8* %119 to <16 x i8>*
  %122 = load <16 x i8>, <16 x i8>* %121, align 1, !alias.scope !77
  %123 = getelementptr i8, i8* %119, i64 16
  %124 = bitcast i8* %123 to <16 x i8>*
  %125 = load <16 x i8>, <16 x i8>* %124, align 1, !alias.scope !77
  %126 = bitcast i8* %120 to <16 x i8>*
  store <16 x i8> %122, <16 x i8>* %126, align 1, !alias.scope !80, !noalias !77
  %127 = getelementptr i8, i8* %120, i64 16
  %128 = bitcast i8* %127 to <16 x i8>*
  store <16 x i8> %125, <16 x i8>* %128, align 1, !alias.scope !80, !noalias !77
  %129 = or i64 %106, 64
  %130 = getelementptr i8, i8* %76, i64 %129
  %131 = getelementptr i8, i8* %72, i64 %129
  %132 = bitcast i8* %130 to <16 x i8>*
  %133 = load <16 x i8>, <16 x i8>* %132, align 1, !alias.scope !77
  %134 = getelementptr i8, i8* %130, i64 16
  %135 = bitcast i8* %134 to <16 x i8>*
  %136 = load <16 x i8>, <16 x i8>* %135, align 1, !alias.scope !77
  %137 = bitcast i8* %131 to <16 x i8>*
  store <16 x i8> %133, <16 x i8>* %137, align 1, !alias.scope !80, !noalias !77
  %138 = getelementptr i8, i8* %131, i64 16
  %139 = bitcast i8* %138 to <16 x i8>*
  store <16 x i8> %136, <16 x i8>* %139, align 1, !alias.scope !80, !noalias !77
  %140 = or i64 %106, 96
  %141 = getelementptr i8, i8* %76, i64 %140
  %142 = getelementptr i8, i8* %72, i64 %140
  %143 = bitcast i8* %141 to <16 x i8>*
  %144 = load <16 x i8>, <16 x i8>* %143, align 1, !alias.scope !77
  %145 = getelementptr i8, i8* %141, i64 16
  %146 = bitcast i8* %145 to <16 x i8>*
  %147 = load <16 x i8>, <16 x i8>* %146, align 1, !alias.scope !77
  %148 = bitcast i8* %142 to <16 x i8>*
  store <16 x i8> %144, <16 x i8>* %148, align 1, !alias.scope !80, !noalias !77
  %149 = getelementptr i8, i8* %142, i64 16
  %150 = bitcast i8* %149 to <16 x i8>*
  store <16 x i8> %147, <16 x i8>* %150, align 1, !alias.scope !80, !noalias !77
  %151 = add i64 %106, 128
  %152 = add i64 %107, -4
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %105, !llvm.loop !82

154:                                              ; preds = %105, %94
  %155 = phi i64 [ 0, %94 ], [ %151, %105 ]
  %156 = icmp eq i64 %101, 0
  br i1 %156, label %173, label %157

157:                                              ; preds = %154, %157
  %158 = phi i64 [ %170, %157 ], [ %155, %154 ]
  %159 = phi i64 [ %171, %157 ], [ %101, %154 ]
  %160 = getelementptr i8, i8* %76, i64 %158
  %161 = getelementptr i8, i8* %72, i64 %158
  %162 = bitcast i8* %160 to <16 x i8>*
  %163 = load <16 x i8>, <16 x i8>* %162, align 1, !alias.scope !77
  %164 = getelementptr i8, i8* %160, i64 16
  %165 = bitcast i8* %164 to <16 x i8>*
  %166 = load <16 x i8>, <16 x i8>* %165, align 1, !alias.scope !77
  %167 = bitcast i8* %161 to <16 x i8>*
  store <16 x i8> %163, <16 x i8>* %167, align 1, !alias.scope !80, !noalias !77
  %168 = getelementptr i8, i8* %161, i64 16
  %169 = bitcast i8* %168 to <16 x i8>*
  store <16 x i8> %166, <16 x i8>* %169, align 1, !alias.scope !80, !noalias !77
  %170 = add i64 %158, 32
  %171 = add i64 %159, -1
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %173, label %157, !llvm.loop !83

173:                                              ; preds = %157, %154
  %174 = icmp eq i64 %95, %81
  br i1 %174, label %175, label %83

175:                                              ; preds = %184, %173
  %176 = phi i8* [ %97, %173 ], [ %189, %184 ]
  %177 = ptrtoint i8* %176 to i64
  br label %178

178:                                              ; preds = %175, %70
  %179 = phi i64 [ %177, %175 ], [ %71, %70 ]
  store i64 %179, i64* %39, align 8
  %180 = icmp eq i64 %75, 0
  br i1 %180, label %191, label %181

181:                                              ; preds = %178
  %182 = sub i64 0, %75
  %183 = getelementptr inbounds i8, i8* %72, i64 %182
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %183, i8* align 1 %1, i64 %75, i1 false) #12
  br label %191

184:                                              ; preds = %83, %184
  %185 = phi i8* [ %188, %184 ], [ %84, %83 ]
  %186 = phi i8* [ %189, %184 ], [ %85, %83 ]
  %187 = load i8, i8* %185, align 1
  store i8 %187, i8* %186, align 1
  %188 = getelementptr inbounds i8, i8* %185, i64 1
  %189 = getelementptr inbounds i8, i8* %186, i64 1
  %190 = icmp eq i8* %188, %32
  br i1 %190, label %175, label %184, !llvm.loop !84

191:                                              ; preds = %178, %181
  %192 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %2, i64 0, i32 1
  %193 = load i8*, i8** %192, align 8
  %194 = bitcast i8** %38 to i64*
  %195 = load i64, i64* %194, align 8
  %196 = ptrtoint i8* %193 to i64
  %197 = sub i64 %195, %196
  %198 = icmp eq i64 %197, 0
  br i1 %198, label %200, label %199

199:                                              ; preds = %191
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %193, i64 %197, i1 false) #12
  br label %200

200:                                              ; preds = %199, %191, %65
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #12
  br label %372

201:                                              ; preds = %27
  %202 = bitcast i8** %31 to i64*
  %203 = bitcast %"class.std::__1::vector"* %0 to i64*
  %204 = load i64, i64* %203, align 8
  %205 = sub i64 %33, %204
  %206 = add i64 %205, %25
  %207 = icmp slt i64 %206, 0
  br i1 %207, label %208, label %210

208:                                              ; preds = %201
  %209 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %209) #14
  unreachable

210:                                              ; preds = %201
  %211 = sub i64 %30, %204
  %212 = icmp ult i64 %211, 4611686018427387903
  br i1 %212, label %215, label %213

213:                                              ; preds = %210
  %214 = sub i64 %5, %204
  br label %221

215:                                              ; preds = %210
  %216 = shl i64 %211, 1
  %217 = icmp ult i64 %216, %206
  %218 = select i1 %217, i64 %206, i64 %216
  %219 = sub i64 %5, %204
  %220 = icmp eq i64 %218, 0
  br i1 %220, label %225, label %221

221:                                              ; preds = %213, %215
  %222 = phi i64 [ %214, %213 ], [ %219, %215 ]
  %223 = phi i64 [ 9223372036854775807, %213 ], [ %218, %215 ]
  %224 = call i8* @_Znwm(i64 %223) #13
  br label %225

225:                                              ; preds = %215, %221
  %226 = phi i64 [ %222, %221 ], [ %219, %215 ]
  %227 = phi i64 [ %223, %221 ], [ 0, %215 ]
  %228 = phi i8* [ %224, %221 ], [ null, %215 ]
  %229 = getelementptr inbounds i8, i8* %228, i64 %226
  %230 = getelementptr inbounds i8, i8* %228, i64 %227
  %231 = ptrtoint i8* %230 to i64
  %232 = bitcast %"class.base::CheckedContiguousIterator"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %232)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %232, i8* nonnull align 8 %15, i64 24, i1 false)
  %233 = bitcast %"class.base::CheckedContiguousIterator"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %233) #12
  %234 = bitcast %"class.base::CheckedContiguousIterator"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %234) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %234, i8* nonnull align 8 %16, i64 24, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %233, i8* nonnull align 8 %15, i64 24, i1 false)
  call void @_ZNK4base25CheckedContiguousIteratorIKhE15CheckComparableERKS2_(%"class.base::CheckedContiguousIterator"* nonnull %10, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %11) #12
  %235 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %10, i64 0, i32 1
  %236 = bitcast i8** %235 to i64*
  %237 = load i64, i64* %236, align 8
  %238 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %11, i64 0, i32 1
  %239 = bitcast i8** %238 to i64*
  %240 = load i64, i64* %239, align 8
  %241 = sub i64 %237, %240
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %233) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %234) #12
  %242 = getelementptr inbounds i8, i8* %229, i64 %241
  %243 = icmp eq i64 %241, 0
  br i1 %243, label %251, label %244

244:                                              ; preds = %225, %244
  %245 = phi i8* [ %248, %244 ], [ %229, %225 ]
  %246 = call dereferenceable(1) i8* @_ZNK4base25CheckedContiguousIteratorIKhEdeEv(%"class.base::CheckedContiguousIterator"* nonnull %12) #12
  %247 = load i8, i8* %246, align 1
  store i8 %247, i8* %245, align 1
  %248 = getelementptr inbounds i8, i8* %245, i64 1
  %249 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKhEppEv(%"class.base::CheckedContiguousIterator"* nonnull %12) #12
  %250 = icmp eq i8* %242, %248
  br i1 %250, label %251, label %244

251:                                              ; preds = %244, %225
  %252 = phi i8* [ %229, %225 ], [ %242, %244 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %232)
  %253 = load i8*, i8** %14, align 8
  %254 = ptrtoint i8* %253 to i64
  %255 = sub i64 %5, %254
  %256 = sub i64 0, %255
  %257 = getelementptr inbounds i8, i8* %229, i64 %256
  %258 = ptrtoint i8* %257 to i64
  %259 = icmp sgt i64 %255, 0
  br i1 %259, label %260, label %261

260:                                              ; preds = %251
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %257, i8* align 1 %253, i64 %255, i1 false) #12
  br label %261

261:                                              ; preds = %260, %251
  %262 = load i8*, i8** %31, align 8
  %263 = icmp eq i8* %262, %1
  br i1 %263, label %366, label %264

264:                                              ; preds = %261
  %265 = ptrtoint i8* %262 to i64
  %266 = sub i64 %265, %5
  %267 = icmp ult i64 %266, 32
  br i1 %267, label %356, label %268

268:                                              ; preds = %264
  %269 = ptrtoint i8* %262 to i64
  %270 = sub i64 %269, %5
  %271 = getelementptr i8, i8* %252, i64 %270
  %272 = icmp ult i8* %252, %262
  %273 = icmp ugt i8* %271, %1
  %274 = and i1 %272, %273
  br i1 %274, label %356, label %275

275:                                              ; preds = %268
  %276 = and i64 %266, -32
  %277 = getelementptr i8, i8* %252, i64 %276
  %278 = getelementptr i8, i8* %1, i64 %276
  %279 = add i64 %276, -32
  %280 = lshr exact i64 %279, 5
  %281 = add nuw nsw i64 %280, 1
  %282 = and i64 %281, 3
  %283 = icmp ult i64 %279, 96
  br i1 %283, label %335, label %284

284:                                              ; preds = %275
  %285 = sub nsw i64 %281, %282
  br label %286

286:                                              ; preds = %286, %284
  %287 = phi i64 [ 0, %284 ], [ %332, %286 ]
  %288 = phi i64 [ %285, %284 ], [ %333, %286 ]
  %289 = getelementptr i8, i8* %252, i64 %287
  %290 = getelementptr i8, i8* %1, i64 %287
  %291 = bitcast i8* %290 to <16 x i8>*
  %292 = load <16 x i8>, <16 x i8>* %291, align 1, !alias.scope !85
  %293 = getelementptr i8, i8* %290, i64 16
  %294 = bitcast i8* %293 to <16 x i8>*
  %295 = load <16 x i8>, <16 x i8>* %294, align 1, !alias.scope !85
  %296 = bitcast i8* %289 to <16 x i8>*
  store <16 x i8> %292, <16 x i8>* %296, align 1, !alias.scope !88, !noalias !85
  %297 = getelementptr i8, i8* %289, i64 16
  %298 = bitcast i8* %297 to <16 x i8>*
  store <16 x i8> %295, <16 x i8>* %298, align 1, !alias.scope !88, !noalias !85
  %299 = or i64 %287, 32
  %300 = getelementptr i8, i8* %252, i64 %299
  %301 = getelementptr i8, i8* %1, i64 %299
  %302 = bitcast i8* %301 to <16 x i8>*
  %303 = load <16 x i8>, <16 x i8>* %302, align 1, !alias.scope !85
  %304 = getelementptr i8, i8* %301, i64 16
  %305 = bitcast i8* %304 to <16 x i8>*
  %306 = load <16 x i8>, <16 x i8>* %305, align 1, !alias.scope !85
  %307 = bitcast i8* %300 to <16 x i8>*
  store <16 x i8> %303, <16 x i8>* %307, align 1, !alias.scope !88, !noalias !85
  %308 = getelementptr i8, i8* %300, i64 16
  %309 = bitcast i8* %308 to <16 x i8>*
  store <16 x i8> %306, <16 x i8>* %309, align 1, !alias.scope !88, !noalias !85
  %310 = or i64 %287, 64
  %311 = getelementptr i8, i8* %252, i64 %310
  %312 = getelementptr i8, i8* %1, i64 %310
  %313 = bitcast i8* %312 to <16 x i8>*
  %314 = load <16 x i8>, <16 x i8>* %313, align 1, !alias.scope !85
  %315 = getelementptr i8, i8* %312, i64 16
  %316 = bitcast i8* %315 to <16 x i8>*
  %317 = load <16 x i8>, <16 x i8>* %316, align 1, !alias.scope !85
  %318 = bitcast i8* %311 to <16 x i8>*
  store <16 x i8> %314, <16 x i8>* %318, align 1, !alias.scope !88, !noalias !85
  %319 = getelementptr i8, i8* %311, i64 16
  %320 = bitcast i8* %319 to <16 x i8>*
  store <16 x i8> %317, <16 x i8>* %320, align 1, !alias.scope !88, !noalias !85
  %321 = or i64 %287, 96
  %322 = getelementptr i8, i8* %252, i64 %321
  %323 = getelementptr i8, i8* %1, i64 %321
  %324 = bitcast i8* %323 to <16 x i8>*
  %325 = load <16 x i8>, <16 x i8>* %324, align 1, !alias.scope !85
  %326 = getelementptr i8, i8* %323, i64 16
  %327 = bitcast i8* %326 to <16 x i8>*
  %328 = load <16 x i8>, <16 x i8>* %327, align 1, !alias.scope !85
  %329 = bitcast i8* %322 to <16 x i8>*
  store <16 x i8> %325, <16 x i8>* %329, align 1, !alias.scope !88, !noalias !85
  %330 = getelementptr i8, i8* %322, i64 16
  %331 = bitcast i8* %330 to <16 x i8>*
  store <16 x i8> %328, <16 x i8>* %331, align 1, !alias.scope !88, !noalias !85
  %332 = add i64 %287, 128
  %333 = add i64 %288, -4
  %334 = icmp eq i64 %333, 0
  br i1 %334, label %335, label %286, !llvm.loop !90

335:                                              ; preds = %286, %275
  %336 = phi i64 [ 0, %275 ], [ %332, %286 ]
  %337 = icmp eq i64 %282, 0
  br i1 %337, label %354, label %338

338:                                              ; preds = %335, %338
  %339 = phi i64 [ %351, %338 ], [ %336, %335 ]
  %340 = phi i64 [ %352, %338 ], [ %282, %335 ]
  %341 = getelementptr i8, i8* %252, i64 %339
  %342 = getelementptr i8, i8* %1, i64 %339
  %343 = bitcast i8* %342 to <16 x i8>*
  %344 = load <16 x i8>, <16 x i8>* %343, align 1, !alias.scope !85
  %345 = getelementptr i8, i8* %342, i64 16
  %346 = bitcast i8* %345 to <16 x i8>*
  %347 = load <16 x i8>, <16 x i8>* %346, align 1, !alias.scope !85
  %348 = bitcast i8* %341 to <16 x i8>*
  store <16 x i8> %344, <16 x i8>* %348, align 1, !alias.scope !88, !noalias !85
  %349 = getelementptr i8, i8* %341, i64 16
  %350 = bitcast i8* %349 to <16 x i8>*
  store <16 x i8> %347, <16 x i8>* %350, align 1, !alias.scope !88, !noalias !85
  %351 = add i64 %339, 32
  %352 = add i64 %340, -1
  %353 = icmp eq i64 %352, 0
  br i1 %353, label %354, label %338, !llvm.loop !91

354:                                              ; preds = %338, %335
  %355 = icmp eq i64 %266, %276
  br i1 %355, label %366, label %356

356:                                              ; preds = %354, %268, %264
  %357 = phi i8* [ %252, %268 ], [ %252, %264 ], [ %277, %354 ]
  %358 = phi i8* [ %1, %268 ], [ %1, %264 ], [ %278, %354 ]
  br label %359

359:                                              ; preds = %356, %359
  %360 = phi i8* [ %364, %359 ], [ %357, %356 ]
  %361 = phi i8* [ %363, %359 ], [ %358, %356 ]
  %362 = load i8, i8* %361, align 1
  store i8 %362, i8* %360, align 1
  %363 = getelementptr inbounds i8, i8* %361, i64 1
  %364 = getelementptr inbounds i8, i8* %360, i64 1
  %365 = icmp eq i8* %363, %262
  br i1 %365, label %366, label %359, !llvm.loop !92

366:                                              ; preds = %359, %354, %261
  %367 = phi i8* [ %252, %261 ], [ %277, %354 ], [ %364, %359 ]
  %368 = ptrtoint i8* %367 to i64
  %369 = load i8*, i8** %14, align 8
  store i64 %258, i64* %203, align 8
  store i64 %368, i64* %202, align 8
  store i64 %231, i64* %29, align 8
  %370 = icmp eq i8* %369, null
  br i1 %370, label %372, label %371

371:                                              ; preds = %366
  call void @_ZdlPv(i8* nonnull %369) #13
  br label %372

372:                                              ; preds = %371, %366, %200, %4
  %373 = phi i8* [ %1, %200 ], [ %1, %4 ], [ %229, %366 ], [ %229, %371 ]
  ret i8* %373
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEEN4base11trace_event16TraceEventHandleEcPKhPKcSE_yjySE_OT_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #6 comdat {
  %10 = alloca %"class.base::trace_event::TraceArguments", align 8
  %11 = alloca %"class.base::TimeTicks", align 8
  %12 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #12
  %13 = bitcast %"class.base::TimeTicks"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #12
  %14 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %11, i64 0, i32 0, i32 0
  %15 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #12
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false) #12
  store i8 1, i8* %16, align 8
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 0
  store i8 7, i8* %17, align 1
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 2, i64 0
  store i8* %7, i8** %18, align 8
  %19 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 0
  %20 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %27 = select i1 %23, i8* %25, i8* %26
  %28 = bitcast %"union.base::trace_event::TraceValue"* %19 to i8**
  store i8* %27, i8** %28, align 8
  %29 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %12, %"class.base::TimeTicks"* nonnull dereferenceable(8) %11, %"class.base::trace_event::TraceArguments"* nonnull %10, i32 %5) #12
  %30 = load i8, i8* %16, align 8
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %66, label %32

32:                                               ; preds = %9, %61
  %33 = phi i64 [ %62, %61 ], [ 0, %9 ]
  %34 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 %33
  %35 = load i8, i8* %34, align 1
  %36 = icmp eq i8 %35, 8
  br i1 %36, label %37, label %48

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %33
  %39 = bitcast %"union.base::trace_event::TraceValue"* %38 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %40 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %39, align 8
  %41 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %40, null
  br i1 %41, label %61, label %42

42:                                               ; preds = %37
  %43 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %40 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %44 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %44, i64 1
  %46 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %45, align 8
  call void %46(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %40) #12
  %47 = load i8, i8* %34, align 1
  br label %48

48:                                               ; preds = %42, %32
  %49 = phi i8 [ %35, %32 ], [ %47, %42 ]
  %50 = icmp eq i8 %49, 9
  br i1 %50, label %51, label %61

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %33
  %53 = bitcast %"union.base::trace_event::TraceValue"* %52 to %"class.protozero::HeapBuffered"**
  %54 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %53, align 8
  %55 = icmp eq %"class.protozero::HeapBuffered"* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %54, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %57) #12
  %58 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %54, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %58) #12
  %59 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %54, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %59) #12
  %60 = bitcast %"class.protozero::HeapBuffered"* %54 to i8*
  call void @_ZdlPv(i8* %60) #13
  br label %61

61:                                               ; preds = %56, %51, %48, %37
  %62 = add nuw nsw i64 %33, 1
  %63 = load i8, i8* %16, align 8
  %64 = zext i8 %63 to i64
  %65 = icmp ult i64 %62, %64
  br i1 %65, label %32, label %66

66:                                               ; preds = %61, %9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #12
  ret i64 %29
}

; Function Attrs: nounwind
declare void @_ZN7content34SignedExchangeSignatureHeaderField9SignatureD1Ev(%"struct.content::SignedExchangeSignatureHeaderField::Signature"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: noreturn
declare void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSB_IPKhEES7_S7_(%"class.std::__1::vector"*, i8*, i8*, i8*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint i8* %1 to i64
  %6 = ptrtoint i8* %2 to i64
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %8 = ptrtoint i8* %3 to i64
  %9 = sub i64 %8, %6
  %10 = icmp sgt i64 %9, 0
  br i1 %10, label %11, label %618

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %16 = load i8*, i8** %15, align 8
  %17 = ptrtoint i8* %16 to i64
  %18 = sub i64 %14, %17
  %19 = icmp sgt i64 %9, %18
  %20 = bitcast i8** %15 to i64*
  br i1 %19, label %368, label %21

21:                                               ; preds = %11
  %22 = sub i64 %17, %5
  %23 = icmp sgt i64 %9, %22
  br i1 %23, label %24, label %141

24:                                               ; preds = %21
  %25 = getelementptr inbounds i8, i8* %2, i64 %22
  %26 = icmp eq i8* %25, %3
  br i1 %26, label %136, label %27

27:                                               ; preds = %24
  %28 = sub i64 %5, %6
  %29 = sub i64 %28, %17
  %30 = getelementptr i8, i8* %3, i64 %29
  %31 = ptrtoint i8* %30 to i64
  %32 = icmp ult i8* %30, inttoptr (i64 32 to i8*)
  br i1 %32, label %123, label %33

33:                                               ; preds = %27
  %34 = sub i64 %5, %6
  %35 = sub i64 %34, %17
  %36 = getelementptr i8, i8* %3, i64 %35
  %37 = ptrtoint i8* %36 to i64
  %38 = getelementptr i8, i8* %16, i64 %37
  %39 = icmp ult i8* %16, %3
  %40 = icmp ult i8* %25, %38
  %41 = and i1 %39, %40
  br i1 %41, label %123, label %42

42:                                               ; preds = %33
  %43 = and i64 %31, -32
  %44 = getelementptr i8, i8* %16, i64 %43
  %45 = getelementptr i8, i8* %25, i64 %43
  %46 = add i64 %43, -32
  %47 = lshr exact i64 %46, 5
  %48 = add nuw nsw i64 %47, 1
  %49 = and i64 %48, 3
  %50 = icmp ult i64 %46, 96
  br i1 %50, label %102, label %51

51:                                               ; preds = %42
  %52 = sub nsw i64 %48, %49
  br label %53

53:                                               ; preds = %53, %51
  %54 = phi i64 [ 0, %51 ], [ %99, %53 ]
  %55 = phi i64 [ %52, %51 ], [ %100, %53 ]
  %56 = getelementptr i8, i8* %16, i64 %54
  %57 = getelementptr i8, i8* %25, i64 %54
  %58 = bitcast i8* %57 to <16 x i8>*
  %59 = load <16 x i8>, <16 x i8>* %58, align 1, !alias.scope !93
  %60 = getelementptr i8, i8* %57, i64 16
  %61 = bitcast i8* %60 to <16 x i8>*
  %62 = load <16 x i8>, <16 x i8>* %61, align 1, !alias.scope !93
  %63 = bitcast i8* %56 to <16 x i8>*
  store <16 x i8> %59, <16 x i8>* %63, align 1, !alias.scope !96, !noalias !93
  %64 = getelementptr i8, i8* %56, i64 16
  %65 = bitcast i8* %64 to <16 x i8>*
  store <16 x i8> %62, <16 x i8>* %65, align 1, !alias.scope !96, !noalias !93
  %66 = or i64 %54, 32
  %67 = getelementptr i8, i8* %16, i64 %66
  %68 = getelementptr i8, i8* %25, i64 %66
  %69 = bitcast i8* %68 to <16 x i8>*
  %70 = load <16 x i8>, <16 x i8>* %69, align 1, !alias.scope !93
  %71 = getelementptr i8, i8* %68, i64 16
  %72 = bitcast i8* %71 to <16 x i8>*
  %73 = load <16 x i8>, <16 x i8>* %72, align 1, !alias.scope !93
  %74 = bitcast i8* %67 to <16 x i8>*
  store <16 x i8> %70, <16 x i8>* %74, align 1, !alias.scope !96, !noalias !93
  %75 = getelementptr i8, i8* %67, i64 16
  %76 = bitcast i8* %75 to <16 x i8>*
  store <16 x i8> %73, <16 x i8>* %76, align 1, !alias.scope !96, !noalias !93
  %77 = or i64 %54, 64
  %78 = getelementptr i8, i8* %16, i64 %77
  %79 = getelementptr i8, i8* %25, i64 %77
  %80 = bitcast i8* %79 to <16 x i8>*
  %81 = load <16 x i8>, <16 x i8>* %80, align 1, !alias.scope !93
  %82 = getelementptr i8, i8* %79, i64 16
  %83 = bitcast i8* %82 to <16 x i8>*
  %84 = load <16 x i8>, <16 x i8>* %83, align 1, !alias.scope !93
  %85 = bitcast i8* %78 to <16 x i8>*
  store <16 x i8> %81, <16 x i8>* %85, align 1, !alias.scope !96, !noalias !93
  %86 = getelementptr i8, i8* %78, i64 16
  %87 = bitcast i8* %86 to <16 x i8>*
  store <16 x i8> %84, <16 x i8>* %87, align 1, !alias.scope !96, !noalias !93
  %88 = or i64 %54, 96
  %89 = getelementptr i8, i8* %16, i64 %88
  %90 = getelementptr i8, i8* %25, i64 %88
  %91 = bitcast i8* %90 to <16 x i8>*
  %92 = load <16 x i8>, <16 x i8>* %91, align 1, !alias.scope !93
  %93 = getelementptr i8, i8* %90, i64 16
  %94 = bitcast i8* %93 to <16 x i8>*
  %95 = load <16 x i8>, <16 x i8>* %94, align 1, !alias.scope !93
  %96 = bitcast i8* %89 to <16 x i8>*
  store <16 x i8> %92, <16 x i8>* %96, align 1, !alias.scope !96, !noalias !93
  %97 = getelementptr i8, i8* %89, i64 16
  %98 = bitcast i8* %97 to <16 x i8>*
  store <16 x i8> %95, <16 x i8>* %98, align 1, !alias.scope !96, !noalias !93
  %99 = add i64 %54, 128
  %100 = add i64 %55, -4
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %102, label %53, !llvm.loop !98

102:                                              ; preds = %53, %42
  %103 = phi i64 [ 0, %42 ], [ %99, %53 ]
  %104 = icmp eq i64 %49, 0
  br i1 %104, label %121, label %105

105:                                              ; preds = %102, %105
  %106 = phi i64 [ %118, %105 ], [ %103, %102 ]
  %107 = phi i64 [ %119, %105 ], [ %49, %102 ]
  %108 = getelementptr i8, i8* %16, i64 %106
  %109 = getelementptr i8, i8* %25, i64 %106
  %110 = bitcast i8* %109 to <16 x i8>*
  %111 = load <16 x i8>, <16 x i8>* %110, align 1, !alias.scope !93
  %112 = getelementptr i8, i8* %109, i64 16
  %113 = bitcast i8* %112 to <16 x i8>*
  %114 = load <16 x i8>, <16 x i8>* %113, align 1, !alias.scope !93
  %115 = bitcast i8* %108 to <16 x i8>*
  store <16 x i8> %111, <16 x i8>* %115, align 1, !alias.scope !96, !noalias !93
  %116 = getelementptr i8, i8* %108, i64 16
  %117 = bitcast i8* %116 to <16 x i8>*
  store <16 x i8> %114, <16 x i8>* %117, align 1, !alias.scope !96, !noalias !93
  %118 = add i64 %106, 32
  %119 = add i64 %107, -1
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %105, !llvm.loop !99

121:                                              ; preds = %105, %102
  %122 = icmp eq i64 %43, %31
  br i1 %122, label %133, label %123

123:                                              ; preds = %121, %33, %27
  %124 = phi i8* [ %16, %33 ], [ %16, %27 ], [ %44, %121 ]
  %125 = phi i8* [ %25, %33 ], [ %25, %27 ], [ %45, %121 ]
  br label %126

126:                                              ; preds = %123, %126
  %127 = phi i8* [ %131, %126 ], [ %124, %123 ]
  %128 = phi i8* [ %130, %126 ], [ %125, %123 ]
  %129 = load i8, i8* %128, align 1
  store i8 %129, i8* %127, align 1
  %130 = getelementptr inbounds i8, i8* %128, i64 1
  %131 = getelementptr inbounds i8, i8* %127, i64 1
  %132 = icmp eq i8* %130, %3
  br i1 %132, label %133, label %126, !llvm.loop !100

133:                                              ; preds = %126, %121
  %134 = phi i8* [ %44, %121 ], [ %131, %126 ]
  %135 = ptrtoint i8* %134 to i64
  br label %136

136:                                              ; preds = %133, %24
  %137 = phi i64 [ %17, %24 ], [ %135, %133 ]
  store i64 %137, i64* %20, align 8
  %138 = icmp sgt i64 %22, 0
  br i1 %138, label %139, label %618

139:                                              ; preds = %136
  %140 = inttoptr i64 %137 to i8*
  br label %141

141:                                              ; preds = %139, %21
  %142 = phi i64 [ %137, %139 ], [ %17, %21 ]
  %143 = phi i8* [ %140, %139 ], [ %16, %21 ]
  %144 = phi i8* [ %25, %139 ], [ %3, %21 ]
  %145 = getelementptr inbounds i8, i8* %1, i64 %9
  %146 = ptrtoint i8* %145 to i64
  %147 = sub i64 %142, %146
  %148 = getelementptr inbounds i8, i8* %1, i64 %147
  %149 = icmp ult i8* %148, %16
  br i1 %149, label %150, label %250

150:                                              ; preds = %141
  %151 = sub i64 %9, %142
  %152 = getelementptr i8, i8* %16, i64 %151
  %153 = ptrtoint i8* %152 to i64
  %154 = icmp ult i8* %152, inttoptr (i64 32 to i8*)
  br i1 %154, label %155, label %158

155:                                              ; preds = %245, %158, %150
  %156 = phi i8* [ %148, %158 ], [ %148, %150 ], [ %168, %245 ]
  %157 = phi i8* [ %143, %158 ], [ %143, %150 ], [ %169, %245 ]
  br label %256

158:                                              ; preds = %150
  %159 = sub i64 %9, %142
  %160 = getelementptr i8, i8* %16, i64 %159
  %161 = ptrtoint i8* %160 to i64
  %162 = getelementptr i8, i8* %143, i64 %161
  %163 = icmp ult i8* %143, %16
  %164 = icmp ult i8* %148, %162
  %165 = and i1 %163, %164
  br i1 %165, label %155, label %166

166:                                              ; preds = %158
  %167 = and i64 %153, -32
  %168 = getelementptr i8, i8* %148, i64 %167
  %169 = getelementptr i8, i8* %143, i64 %167
  %170 = add i64 %167, -32
  %171 = lshr exact i64 %170, 5
  %172 = add nuw nsw i64 %171, 1
  %173 = and i64 %172, 3
  %174 = icmp ult i64 %170, 96
  br i1 %174, label %226, label %175

175:                                              ; preds = %166
  %176 = sub nsw i64 %172, %173
  br label %177

177:                                              ; preds = %177, %175
  %178 = phi i64 [ 0, %175 ], [ %223, %177 ]
  %179 = phi i64 [ %176, %175 ], [ %224, %177 ]
  %180 = getelementptr i8, i8* %148, i64 %178
  %181 = getelementptr i8, i8* %143, i64 %178
  %182 = bitcast i8* %180 to <16 x i8>*
  %183 = load <16 x i8>, <16 x i8>* %182, align 1, !alias.scope !101
  %184 = getelementptr i8, i8* %180, i64 16
  %185 = bitcast i8* %184 to <16 x i8>*
  %186 = load <16 x i8>, <16 x i8>* %185, align 1, !alias.scope !101
  %187 = bitcast i8* %181 to <16 x i8>*
  store <16 x i8> %183, <16 x i8>* %187, align 1, !alias.scope !104, !noalias !101
  %188 = getelementptr i8, i8* %181, i64 16
  %189 = bitcast i8* %188 to <16 x i8>*
  store <16 x i8> %186, <16 x i8>* %189, align 1, !alias.scope !104, !noalias !101
  %190 = or i64 %178, 32
  %191 = getelementptr i8, i8* %148, i64 %190
  %192 = getelementptr i8, i8* %143, i64 %190
  %193 = bitcast i8* %191 to <16 x i8>*
  %194 = load <16 x i8>, <16 x i8>* %193, align 1, !alias.scope !101
  %195 = getelementptr i8, i8* %191, i64 16
  %196 = bitcast i8* %195 to <16 x i8>*
  %197 = load <16 x i8>, <16 x i8>* %196, align 1, !alias.scope !101
  %198 = bitcast i8* %192 to <16 x i8>*
  store <16 x i8> %194, <16 x i8>* %198, align 1, !alias.scope !104, !noalias !101
  %199 = getelementptr i8, i8* %192, i64 16
  %200 = bitcast i8* %199 to <16 x i8>*
  store <16 x i8> %197, <16 x i8>* %200, align 1, !alias.scope !104, !noalias !101
  %201 = or i64 %178, 64
  %202 = getelementptr i8, i8* %148, i64 %201
  %203 = getelementptr i8, i8* %143, i64 %201
  %204 = bitcast i8* %202 to <16 x i8>*
  %205 = load <16 x i8>, <16 x i8>* %204, align 1, !alias.scope !101
  %206 = getelementptr i8, i8* %202, i64 16
  %207 = bitcast i8* %206 to <16 x i8>*
  %208 = load <16 x i8>, <16 x i8>* %207, align 1, !alias.scope !101
  %209 = bitcast i8* %203 to <16 x i8>*
  store <16 x i8> %205, <16 x i8>* %209, align 1, !alias.scope !104, !noalias !101
  %210 = getelementptr i8, i8* %203, i64 16
  %211 = bitcast i8* %210 to <16 x i8>*
  store <16 x i8> %208, <16 x i8>* %211, align 1, !alias.scope !104, !noalias !101
  %212 = or i64 %178, 96
  %213 = getelementptr i8, i8* %148, i64 %212
  %214 = getelementptr i8, i8* %143, i64 %212
  %215 = bitcast i8* %213 to <16 x i8>*
  %216 = load <16 x i8>, <16 x i8>* %215, align 1, !alias.scope !101
  %217 = getelementptr i8, i8* %213, i64 16
  %218 = bitcast i8* %217 to <16 x i8>*
  %219 = load <16 x i8>, <16 x i8>* %218, align 1, !alias.scope !101
  %220 = bitcast i8* %214 to <16 x i8>*
  store <16 x i8> %216, <16 x i8>* %220, align 1, !alias.scope !104, !noalias !101
  %221 = getelementptr i8, i8* %214, i64 16
  %222 = bitcast i8* %221 to <16 x i8>*
  store <16 x i8> %219, <16 x i8>* %222, align 1, !alias.scope !104, !noalias !101
  %223 = add i64 %178, 128
  %224 = add i64 %179, -4
  %225 = icmp eq i64 %224, 0
  br i1 %225, label %226, label %177, !llvm.loop !106

226:                                              ; preds = %177, %166
  %227 = phi i64 [ 0, %166 ], [ %223, %177 ]
  %228 = icmp eq i64 %173, 0
  br i1 %228, label %245, label %229

229:                                              ; preds = %226, %229
  %230 = phi i64 [ %242, %229 ], [ %227, %226 ]
  %231 = phi i64 [ %243, %229 ], [ %173, %226 ]
  %232 = getelementptr i8, i8* %148, i64 %230
  %233 = getelementptr i8, i8* %143, i64 %230
  %234 = bitcast i8* %232 to <16 x i8>*
  %235 = load <16 x i8>, <16 x i8>* %234, align 1, !alias.scope !101
  %236 = getelementptr i8, i8* %232, i64 16
  %237 = bitcast i8* %236 to <16 x i8>*
  %238 = load <16 x i8>, <16 x i8>* %237, align 1, !alias.scope !101
  %239 = bitcast i8* %233 to <16 x i8>*
  store <16 x i8> %235, <16 x i8>* %239, align 1, !alias.scope !104, !noalias !101
  %240 = getelementptr i8, i8* %233, i64 16
  %241 = bitcast i8* %240 to <16 x i8>*
  store <16 x i8> %238, <16 x i8>* %241, align 1, !alias.scope !104, !noalias !101
  %242 = add i64 %230, 32
  %243 = add i64 %231, -1
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %245, label %229, !llvm.loop !107

245:                                              ; preds = %229, %226
  %246 = icmp eq i64 %167, %153
  br i1 %246, label %247, label %155

247:                                              ; preds = %256, %245
  %248 = phi i8* [ %169, %245 ], [ %261, %256 ]
  %249 = ptrtoint i8* %248 to i64
  br label %250

250:                                              ; preds = %247, %141
  %251 = phi i64 [ %249, %247 ], [ %142, %141 ]
  store i64 %251, i64* %20, align 8
  %252 = icmp eq i64 %147, 0
  br i1 %252, label %263, label %253

253:                                              ; preds = %250
  %254 = sub i64 0, %147
  %255 = getelementptr inbounds i8, i8* %143, i64 %254
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %255, i8* align 1 %1, i64 %147, i1 false) #12
  br label %263

256:                                              ; preds = %155, %256
  %257 = phi i8* [ %260, %256 ], [ %156, %155 ]
  %258 = phi i8* [ %261, %256 ], [ %157, %155 ]
  %259 = load i8, i8* %257, align 1
  store i8 %259, i8* %258, align 1
  %260 = getelementptr inbounds i8, i8* %257, i64 1
  %261 = getelementptr inbounds i8, i8* %258, i64 1
  %262 = icmp eq i8* %260, %16
  br i1 %262, label %247, label %256, !llvm.loop !108

263:                                              ; preds = %250, %253
  %264 = icmp eq i8* %144, %2
  br i1 %264, label %618, label %265

265:                                              ; preds = %263
  %266 = sub i64 0, %6
  %267 = getelementptr i8, i8* %144, i64 %266
  %268 = ptrtoint i8* %267 to i64
  %269 = icmp ult i8* %267, inttoptr (i64 32 to i8*)
  br i1 %269, label %358, label %270

270:                                              ; preds = %265
  %271 = ptrtoint i8* %1 to i64
  %272 = sub i64 %271, %6
  %273 = getelementptr i8, i8* %144, i64 %272
  %274 = icmp ugt i8* %144, %1
  %275 = icmp ugt i8* %273, %2
  %276 = and i1 %274, %275
  br i1 %276, label %358, label %277

277:                                              ; preds = %270
  %278 = and i64 %268, -32
  %279 = getelementptr i8, i8* %1, i64 %278
  %280 = getelementptr i8, i8* %2, i64 %278
  %281 = add i64 %278, -32
  %282 = lshr exact i64 %281, 5
  %283 = add nuw nsw i64 %282, 1
  %284 = and i64 %283, 3
  %285 = icmp ult i64 %281, 96
  br i1 %285, label %337, label %286

286:                                              ; preds = %277
  %287 = sub nsw i64 %283, %284
  br label %288

288:                                              ; preds = %288, %286
  %289 = phi i64 [ 0, %286 ], [ %334, %288 ]
  %290 = phi i64 [ %287, %286 ], [ %335, %288 ]
  %291 = getelementptr i8, i8* %1, i64 %289
  %292 = getelementptr i8, i8* %2, i64 %289
  %293 = bitcast i8* %292 to <16 x i8>*
  %294 = load <16 x i8>, <16 x i8>* %293, align 1, !alias.scope !109
  %295 = getelementptr i8, i8* %292, i64 16
  %296 = bitcast i8* %295 to <16 x i8>*
  %297 = load <16 x i8>, <16 x i8>* %296, align 1, !alias.scope !109
  %298 = bitcast i8* %291 to <16 x i8>*
  store <16 x i8> %294, <16 x i8>* %298, align 1, !alias.scope !112, !noalias !109
  %299 = getelementptr i8, i8* %291, i64 16
  %300 = bitcast i8* %299 to <16 x i8>*
  store <16 x i8> %297, <16 x i8>* %300, align 1, !alias.scope !112, !noalias !109
  %301 = or i64 %289, 32
  %302 = getelementptr i8, i8* %1, i64 %301
  %303 = getelementptr i8, i8* %2, i64 %301
  %304 = bitcast i8* %303 to <16 x i8>*
  %305 = load <16 x i8>, <16 x i8>* %304, align 1, !alias.scope !109
  %306 = getelementptr i8, i8* %303, i64 16
  %307 = bitcast i8* %306 to <16 x i8>*
  %308 = load <16 x i8>, <16 x i8>* %307, align 1, !alias.scope !109
  %309 = bitcast i8* %302 to <16 x i8>*
  store <16 x i8> %305, <16 x i8>* %309, align 1, !alias.scope !112, !noalias !109
  %310 = getelementptr i8, i8* %302, i64 16
  %311 = bitcast i8* %310 to <16 x i8>*
  store <16 x i8> %308, <16 x i8>* %311, align 1, !alias.scope !112, !noalias !109
  %312 = or i64 %289, 64
  %313 = getelementptr i8, i8* %1, i64 %312
  %314 = getelementptr i8, i8* %2, i64 %312
  %315 = bitcast i8* %314 to <16 x i8>*
  %316 = load <16 x i8>, <16 x i8>* %315, align 1, !alias.scope !109
  %317 = getelementptr i8, i8* %314, i64 16
  %318 = bitcast i8* %317 to <16 x i8>*
  %319 = load <16 x i8>, <16 x i8>* %318, align 1, !alias.scope !109
  %320 = bitcast i8* %313 to <16 x i8>*
  store <16 x i8> %316, <16 x i8>* %320, align 1, !alias.scope !112, !noalias !109
  %321 = getelementptr i8, i8* %313, i64 16
  %322 = bitcast i8* %321 to <16 x i8>*
  store <16 x i8> %319, <16 x i8>* %322, align 1, !alias.scope !112, !noalias !109
  %323 = or i64 %289, 96
  %324 = getelementptr i8, i8* %1, i64 %323
  %325 = getelementptr i8, i8* %2, i64 %323
  %326 = bitcast i8* %325 to <16 x i8>*
  %327 = load <16 x i8>, <16 x i8>* %326, align 1, !alias.scope !109
  %328 = getelementptr i8, i8* %325, i64 16
  %329 = bitcast i8* %328 to <16 x i8>*
  %330 = load <16 x i8>, <16 x i8>* %329, align 1, !alias.scope !109
  %331 = bitcast i8* %324 to <16 x i8>*
  store <16 x i8> %327, <16 x i8>* %331, align 1, !alias.scope !112, !noalias !109
  %332 = getelementptr i8, i8* %324, i64 16
  %333 = bitcast i8* %332 to <16 x i8>*
  store <16 x i8> %330, <16 x i8>* %333, align 1, !alias.scope !112, !noalias !109
  %334 = add i64 %289, 128
  %335 = add i64 %290, -4
  %336 = icmp eq i64 %335, 0
  br i1 %336, label %337, label %288, !llvm.loop !114

337:                                              ; preds = %288, %277
  %338 = phi i64 [ 0, %277 ], [ %334, %288 ]
  %339 = icmp eq i64 %284, 0
  br i1 %339, label %356, label %340

340:                                              ; preds = %337, %340
  %341 = phi i64 [ %353, %340 ], [ %338, %337 ]
  %342 = phi i64 [ %354, %340 ], [ %284, %337 ]
  %343 = getelementptr i8, i8* %1, i64 %341
  %344 = getelementptr i8, i8* %2, i64 %341
  %345 = bitcast i8* %344 to <16 x i8>*
  %346 = load <16 x i8>, <16 x i8>* %345, align 1, !alias.scope !109
  %347 = getelementptr i8, i8* %344, i64 16
  %348 = bitcast i8* %347 to <16 x i8>*
  %349 = load <16 x i8>, <16 x i8>* %348, align 1, !alias.scope !109
  %350 = bitcast i8* %343 to <16 x i8>*
  store <16 x i8> %346, <16 x i8>* %350, align 1, !alias.scope !112, !noalias !109
  %351 = getelementptr i8, i8* %343, i64 16
  %352 = bitcast i8* %351 to <16 x i8>*
  store <16 x i8> %349, <16 x i8>* %352, align 1, !alias.scope !112, !noalias !109
  %353 = add i64 %341, 32
  %354 = add i64 %342, -1
  %355 = icmp eq i64 %354, 0
  br i1 %355, label %356, label %340, !llvm.loop !115

356:                                              ; preds = %340, %337
  %357 = icmp eq i64 %278, %268
  br i1 %357, label %618, label %358

358:                                              ; preds = %356, %270, %265
  %359 = phi i8* [ %1, %270 ], [ %1, %265 ], [ %279, %356 ]
  %360 = phi i8* [ %2, %270 ], [ %2, %265 ], [ %280, %356 ]
  br label %361

361:                                              ; preds = %358, %361
  %362 = phi i8* [ %366, %361 ], [ %359, %358 ]
  %363 = phi i8* [ %365, %361 ], [ %360, %358 ]
  %364 = load i8, i8* %363, align 1
  store i8 %364, i8* %362, align 1
  %365 = getelementptr inbounds i8, i8* %363, i64 1
  %366 = getelementptr inbounds i8, i8* %362, i64 1
  %367 = icmp eq i8* %365, %144
  br i1 %367, label %618, label %361, !llvm.loop !116

368:                                              ; preds = %11
  %369 = bitcast %"class.std::__1::vector"* %0 to i64*
  %370 = load i64, i64* %369, align 8
  %371 = sub i64 %17, %370
  %372 = add i64 %371, %9
  %373 = icmp slt i64 %372, 0
  br i1 %373, label %374, label %376

374:                                              ; preds = %368
  %375 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %375) #14
  unreachable

376:                                              ; preds = %368
  %377 = sub i64 %14, %370
  %378 = icmp ult i64 %377, 4611686018427387903
  br i1 %378, label %381, label %379

379:                                              ; preds = %376
  %380 = sub i64 %5, %370
  br label %387

381:                                              ; preds = %376
  %382 = shl i64 %377, 1
  %383 = icmp ult i64 %382, %372
  %384 = select i1 %383, i64 %372, i64 %382
  %385 = sub i64 %5, %370
  %386 = icmp eq i64 %384, 0
  br i1 %386, label %391, label %387

387:                                              ; preds = %379, %381
  %388 = phi i64 [ %380, %379 ], [ %385, %381 ]
  %389 = phi i64 [ 9223372036854775807, %379 ], [ %384, %381 ]
  %390 = tail call i8* @_Znwm(i64 %389) #13
  br label %391

391:                                              ; preds = %381, %387
  %392 = phi i64 [ %388, %387 ], [ %385, %381 ]
  %393 = phi i64 [ %389, %387 ], [ 0, %381 ]
  %394 = phi i8* [ %390, %387 ], [ null, %381 ]
  %395 = getelementptr inbounds i8, i8* %394, i64 %392
  %396 = getelementptr inbounds i8, i8* %394, i64 %393
  %397 = getelementptr inbounds i8, i8* %395, i64 %9
  %398 = icmp ult i64 %9, 32
  br i1 %398, label %484, label %399

399:                                              ; preds = %391
  %400 = icmp ult i8* %395, %3
  %401 = icmp ugt i8* %397, %2
  %402 = and i1 %400, %401
  br i1 %402, label %484, label %403

403:                                              ; preds = %399
  %404 = and i64 %9, -32
  %405 = getelementptr i8, i8* %395, i64 %404
  %406 = getelementptr i8, i8* %2, i64 %404
  %407 = add i64 %404, -32
  %408 = lshr exact i64 %407, 5
  %409 = add nuw nsw i64 %408, 1
  %410 = and i64 %409, 3
  %411 = icmp ult i64 %407, 96
  br i1 %411, label %463, label %412

412:                                              ; preds = %403
  %413 = sub nsw i64 %409, %410
  br label %414

414:                                              ; preds = %414, %412
  %415 = phi i64 [ 0, %412 ], [ %460, %414 ]
  %416 = phi i64 [ %413, %412 ], [ %461, %414 ]
  %417 = getelementptr i8, i8* %395, i64 %415
  %418 = getelementptr i8, i8* %2, i64 %415
  %419 = bitcast i8* %418 to <16 x i8>*
  %420 = load <16 x i8>, <16 x i8>* %419, align 1, !alias.scope !117
  %421 = getelementptr i8, i8* %418, i64 16
  %422 = bitcast i8* %421 to <16 x i8>*
  %423 = load <16 x i8>, <16 x i8>* %422, align 1, !alias.scope !117
  %424 = bitcast i8* %417 to <16 x i8>*
  store <16 x i8> %420, <16 x i8>* %424, align 1, !alias.scope !120, !noalias !117
  %425 = getelementptr i8, i8* %417, i64 16
  %426 = bitcast i8* %425 to <16 x i8>*
  store <16 x i8> %423, <16 x i8>* %426, align 1, !alias.scope !120, !noalias !117
  %427 = or i64 %415, 32
  %428 = getelementptr i8, i8* %395, i64 %427
  %429 = getelementptr i8, i8* %2, i64 %427
  %430 = bitcast i8* %429 to <16 x i8>*
  %431 = load <16 x i8>, <16 x i8>* %430, align 1, !alias.scope !117
  %432 = getelementptr i8, i8* %429, i64 16
  %433 = bitcast i8* %432 to <16 x i8>*
  %434 = load <16 x i8>, <16 x i8>* %433, align 1, !alias.scope !117
  %435 = bitcast i8* %428 to <16 x i8>*
  store <16 x i8> %431, <16 x i8>* %435, align 1, !alias.scope !120, !noalias !117
  %436 = getelementptr i8, i8* %428, i64 16
  %437 = bitcast i8* %436 to <16 x i8>*
  store <16 x i8> %434, <16 x i8>* %437, align 1, !alias.scope !120, !noalias !117
  %438 = or i64 %415, 64
  %439 = getelementptr i8, i8* %395, i64 %438
  %440 = getelementptr i8, i8* %2, i64 %438
  %441 = bitcast i8* %440 to <16 x i8>*
  %442 = load <16 x i8>, <16 x i8>* %441, align 1, !alias.scope !117
  %443 = getelementptr i8, i8* %440, i64 16
  %444 = bitcast i8* %443 to <16 x i8>*
  %445 = load <16 x i8>, <16 x i8>* %444, align 1, !alias.scope !117
  %446 = bitcast i8* %439 to <16 x i8>*
  store <16 x i8> %442, <16 x i8>* %446, align 1, !alias.scope !120, !noalias !117
  %447 = getelementptr i8, i8* %439, i64 16
  %448 = bitcast i8* %447 to <16 x i8>*
  store <16 x i8> %445, <16 x i8>* %448, align 1, !alias.scope !120, !noalias !117
  %449 = or i64 %415, 96
  %450 = getelementptr i8, i8* %395, i64 %449
  %451 = getelementptr i8, i8* %2, i64 %449
  %452 = bitcast i8* %451 to <16 x i8>*
  %453 = load <16 x i8>, <16 x i8>* %452, align 1, !alias.scope !117
  %454 = getelementptr i8, i8* %451, i64 16
  %455 = bitcast i8* %454 to <16 x i8>*
  %456 = load <16 x i8>, <16 x i8>* %455, align 1, !alias.scope !117
  %457 = bitcast i8* %450 to <16 x i8>*
  store <16 x i8> %453, <16 x i8>* %457, align 1, !alias.scope !120, !noalias !117
  %458 = getelementptr i8, i8* %450, i64 16
  %459 = bitcast i8* %458 to <16 x i8>*
  store <16 x i8> %456, <16 x i8>* %459, align 1, !alias.scope !120, !noalias !117
  %460 = add i64 %415, 128
  %461 = add i64 %416, -4
  %462 = icmp eq i64 %461, 0
  br i1 %462, label %463, label %414, !llvm.loop !122

463:                                              ; preds = %414, %403
  %464 = phi i64 [ 0, %403 ], [ %460, %414 ]
  %465 = icmp eq i64 %410, 0
  br i1 %465, label %482, label %466

466:                                              ; preds = %463, %466
  %467 = phi i64 [ %479, %466 ], [ %464, %463 ]
  %468 = phi i64 [ %480, %466 ], [ %410, %463 ]
  %469 = getelementptr i8, i8* %395, i64 %467
  %470 = getelementptr i8, i8* %2, i64 %467
  %471 = bitcast i8* %470 to <16 x i8>*
  %472 = load <16 x i8>, <16 x i8>* %471, align 1, !alias.scope !117
  %473 = getelementptr i8, i8* %470, i64 16
  %474 = bitcast i8* %473 to <16 x i8>*
  %475 = load <16 x i8>, <16 x i8>* %474, align 1, !alias.scope !117
  %476 = bitcast i8* %469 to <16 x i8>*
  store <16 x i8> %472, <16 x i8>* %476, align 1, !alias.scope !120, !noalias !117
  %477 = getelementptr i8, i8* %469, i64 16
  %478 = bitcast i8* %477 to <16 x i8>*
  store <16 x i8> %475, <16 x i8>* %478, align 1, !alias.scope !120, !noalias !117
  %479 = add i64 %467, 32
  %480 = add i64 %468, -1
  %481 = icmp eq i64 %480, 0
  br i1 %481, label %482, label %466, !llvm.loop !123

482:                                              ; preds = %466, %463
  %483 = icmp eq i64 %9, %404
  br i1 %483, label %494, label %484

484:                                              ; preds = %482, %399, %391
  %485 = phi i8* [ %395, %399 ], [ %395, %391 ], [ %405, %482 ]
  %486 = phi i8* [ %2, %399 ], [ %2, %391 ], [ %406, %482 ]
  br label %487

487:                                              ; preds = %484, %487
  %488 = phi i8* [ %491, %487 ], [ %485, %484 ]
  %489 = phi i8* [ %492, %487 ], [ %486, %484 ]
  %490 = load i8, i8* %489, align 1
  store i8 %490, i8* %488, align 1
  %491 = getelementptr inbounds i8, i8* %488, i64 1
  %492 = getelementptr inbounds i8, i8* %489, i64 1
  %493 = icmp eq i8* %397, %491
  br i1 %493, label %494, label %487, !llvm.loop !124

494:                                              ; preds = %487, %482
  %495 = ptrtoint i8* %396 to i64
  %496 = load i8*, i8** %7, align 8
  %497 = ptrtoint i8* %496 to i64
  %498 = sub i64 %5, %497
  %499 = sub i64 0, %498
  %500 = getelementptr inbounds i8, i8* %395, i64 %499
  %501 = ptrtoint i8* %500 to i64
  %502 = icmp sgt i64 %498, 0
  br i1 %502, label %503, label %504

503:                                              ; preds = %494
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %500, i8* align 1 %496, i64 %498, i1 false) #12
  br label %504

504:                                              ; preds = %503, %494
  %505 = load i8*, i8** %15, align 8
  %506 = icmp eq i8* %505, %1
  br i1 %506, label %612, label %507

507:                                              ; preds = %504
  %508 = ptrtoint i8* %505 to i64
  %509 = sub i64 %508, %5
  %510 = icmp ult i64 %509, 32
  br i1 %510, label %602, label %511

511:                                              ; preds = %507
  %512 = add i64 %392, %8
  %513 = sub i64 %512, %5
  %514 = sub i64 %513, %6
  %515 = getelementptr i8, i8* %505, i64 %514
  %516 = ptrtoint i8* %515 to i64
  %517 = getelementptr i8, i8* %394, i64 %516
  %518 = icmp ult i8* %397, %505
  %519 = icmp ugt i8* %517, %1
  %520 = and i1 %518, %519
  br i1 %520, label %602, label %521

521:                                              ; preds = %511
  %522 = and i64 %509, -32
  %523 = getelementptr i8, i8* %397, i64 %522
  %524 = getelementptr i8, i8* %1, i64 %522
  %525 = add i64 %522, -32
  %526 = lshr exact i64 %525, 5
  %527 = add nuw nsw i64 %526, 1
  %528 = and i64 %527, 3
  %529 = icmp ult i64 %525, 96
  br i1 %529, label %581, label %530

530:                                              ; preds = %521
  %531 = sub nsw i64 %527, %528
  br label %532

532:                                              ; preds = %532, %530
  %533 = phi i64 [ 0, %530 ], [ %578, %532 ]
  %534 = phi i64 [ %531, %530 ], [ %579, %532 ]
  %535 = getelementptr i8, i8* %397, i64 %533
  %536 = getelementptr i8, i8* %1, i64 %533
  %537 = bitcast i8* %536 to <16 x i8>*
  %538 = load <16 x i8>, <16 x i8>* %537, align 1, !alias.scope !125
  %539 = getelementptr i8, i8* %536, i64 16
  %540 = bitcast i8* %539 to <16 x i8>*
  %541 = load <16 x i8>, <16 x i8>* %540, align 1, !alias.scope !125
  %542 = bitcast i8* %535 to <16 x i8>*
  store <16 x i8> %538, <16 x i8>* %542, align 1, !alias.scope !128, !noalias !125
  %543 = getelementptr i8, i8* %535, i64 16
  %544 = bitcast i8* %543 to <16 x i8>*
  store <16 x i8> %541, <16 x i8>* %544, align 1, !alias.scope !128, !noalias !125
  %545 = or i64 %533, 32
  %546 = getelementptr i8, i8* %397, i64 %545
  %547 = getelementptr i8, i8* %1, i64 %545
  %548 = bitcast i8* %547 to <16 x i8>*
  %549 = load <16 x i8>, <16 x i8>* %548, align 1, !alias.scope !125
  %550 = getelementptr i8, i8* %547, i64 16
  %551 = bitcast i8* %550 to <16 x i8>*
  %552 = load <16 x i8>, <16 x i8>* %551, align 1, !alias.scope !125
  %553 = bitcast i8* %546 to <16 x i8>*
  store <16 x i8> %549, <16 x i8>* %553, align 1, !alias.scope !128, !noalias !125
  %554 = getelementptr i8, i8* %546, i64 16
  %555 = bitcast i8* %554 to <16 x i8>*
  store <16 x i8> %552, <16 x i8>* %555, align 1, !alias.scope !128, !noalias !125
  %556 = or i64 %533, 64
  %557 = getelementptr i8, i8* %397, i64 %556
  %558 = getelementptr i8, i8* %1, i64 %556
  %559 = bitcast i8* %558 to <16 x i8>*
  %560 = load <16 x i8>, <16 x i8>* %559, align 1, !alias.scope !125
  %561 = getelementptr i8, i8* %558, i64 16
  %562 = bitcast i8* %561 to <16 x i8>*
  %563 = load <16 x i8>, <16 x i8>* %562, align 1, !alias.scope !125
  %564 = bitcast i8* %557 to <16 x i8>*
  store <16 x i8> %560, <16 x i8>* %564, align 1, !alias.scope !128, !noalias !125
  %565 = getelementptr i8, i8* %557, i64 16
  %566 = bitcast i8* %565 to <16 x i8>*
  store <16 x i8> %563, <16 x i8>* %566, align 1, !alias.scope !128, !noalias !125
  %567 = or i64 %533, 96
  %568 = getelementptr i8, i8* %397, i64 %567
  %569 = getelementptr i8, i8* %1, i64 %567
  %570 = bitcast i8* %569 to <16 x i8>*
  %571 = load <16 x i8>, <16 x i8>* %570, align 1, !alias.scope !125
  %572 = getelementptr i8, i8* %569, i64 16
  %573 = bitcast i8* %572 to <16 x i8>*
  %574 = load <16 x i8>, <16 x i8>* %573, align 1, !alias.scope !125
  %575 = bitcast i8* %568 to <16 x i8>*
  store <16 x i8> %571, <16 x i8>* %575, align 1, !alias.scope !128, !noalias !125
  %576 = getelementptr i8, i8* %568, i64 16
  %577 = bitcast i8* %576 to <16 x i8>*
  store <16 x i8> %574, <16 x i8>* %577, align 1, !alias.scope !128, !noalias !125
  %578 = add i64 %533, 128
  %579 = add i64 %534, -4
  %580 = icmp eq i64 %579, 0
  br i1 %580, label %581, label %532, !llvm.loop !130

581:                                              ; preds = %532, %521
  %582 = phi i64 [ 0, %521 ], [ %578, %532 ]
  %583 = icmp eq i64 %528, 0
  br i1 %583, label %600, label %584

584:                                              ; preds = %581, %584
  %585 = phi i64 [ %597, %584 ], [ %582, %581 ]
  %586 = phi i64 [ %598, %584 ], [ %528, %581 ]
  %587 = getelementptr i8, i8* %397, i64 %585
  %588 = getelementptr i8, i8* %1, i64 %585
  %589 = bitcast i8* %588 to <16 x i8>*
  %590 = load <16 x i8>, <16 x i8>* %589, align 1, !alias.scope !125
  %591 = getelementptr i8, i8* %588, i64 16
  %592 = bitcast i8* %591 to <16 x i8>*
  %593 = load <16 x i8>, <16 x i8>* %592, align 1, !alias.scope !125
  %594 = bitcast i8* %587 to <16 x i8>*
  store <16 x i8> %590, <16 x i8>* %594, align 1, !alias.scope !128, !noalias !125
  %595 = getelementptr i8, i8* %587, i64 16
  %596 = bitcast i8* %595 to <16 x i8>*
  store <16 x i8> %593, <16 x i8>* %596, align 1, !alias.scope !128, !noalias !125
  %597 = add i64 %585, 32
  %598 = add i64 %586, -1
  %599 = icmp eq i64 %598, 0
  br i1 %599, label %600, label %584, !llvm.loop !131

600:                                              ; preds = %584, %581
  %601 = icmp eq i64 %509, %522
  br i1 %601, label %612, label %602

602:                                              ; preds = %600, %511, %507
  %603 = phi i8* [ %397, %511 ], [ %397, %507 ], [ %523, %600 ]
  %604 = phi i8* [ %1, %511 ], [ %1, %507 ], [ %524, %600 ]
  br label %605

605:                                              ; preds = %602, %605
  %606 = phi i8* [ %610, %605 ], [ %603, %602 ]
  %607 = phi i8* [ %609, %605 ], [ %604, %602 ]
  %608 = load i8, i8* %607, align 1
  store i8 %608, i8* %606, align 1
  %609 = getelementptr inbounds i8, i8* %607, i64 1
  %610 = getelementptr inbounds i8, i8* %606, i64 1
  %611 = icmp eq i8* %609, %505
  br i1 %611, label %612, label %605, !llvm.loop !132

612:                                              ; preds = %605, %600, %504
  %613 = phi i8* [ %397, %504 ], [ %523, %600 ], [ %610, %605 ]
  %614 = ptrtoint i8* %613 to i64
  %615 = load i8*, i8** %7, align 8
  store i64 %501, i64* %369, align 8
  store i64 %614, i64* %20, align 8
  store i64 %495, i64* %13, align 8
  %616 = icmp eq i8* %615, null
  br i1 %616, label %618, label %617

617:                                              ; preds = %612
  tail call void @_ZdlPv(i8* nonnull %615) #13
  br label %618

618:                                              ; preds = %361, %356, %617, %612, %136, %263, %4
  %619 = phi i8* [ %1, %4 ], [ %1, %263 ], [ %1, %136 ], [ %395, %612 ], [ %395, %617 ], [ %1, %356 ], [ %1, %361 ]
  ret i8* %619
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4base25CheckedContiguousIteratorIKhE15CheckComparableERKS2_(%"class.base::CheckedContiguousIterator"*, %"class.base::CheckedContiguousIterator"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %1, i64 0, i32 0
  %13 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  %14 = load i8*, i8** %11, align 8
  %15 = load i8*, i8** %12, align 8
  %16 = icmp eq i8* %14, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* null, i8** %10, align 8
  br label %29

18:                                               ; preds = %2
  %19 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i8*
  %20 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %19, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #12
  %21 = bitcast %"class.base::CheckedContiguousIterator"* %1 to i8*
  %22 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %21, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.13, i64 0, i64 0), i8* %20, i8* %22) #12
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* %24, i8** %10, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %18
  %27 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.14, i64 0, i64 0), i32 206, %"class.logging::CheckOpResult"* nonnull %5) #12
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #12
  br label %29

29:                                               ; preds = %17, %18, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  %30 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #12
  %31 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %31, align 8
  %32 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %33 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %1, i64 0, i32 2
  %34 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34)
  %35 = load i8*, i8** %32, align 8
  %36 = load i8*, i8** %33, align 8
  %37 = icmp eq i8* %35, %36
  br i1 %37, label %38, label %39

38:                                               ; preds = %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* null, i8** %31, align 8
  br label %50

39:                                               ; preds = %29
  %40 = bitcast i8** %32 to i8*
  %41 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %40, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #12
  %42 = bitcast i8** %33 to i8*
  %43 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %42, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.15, i64 0, i64 0), i8* %41, i8* %43) #12
  %44 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %45 = load i8*, i8** %44, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* %45, i8** %31, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %39
  %48 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.14, i64 0, i64 0), i32 207, %"class.logging::CheckOpResult"* nonnull %7) #12
  %49 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #12
  br label %50

50:                                               ; preds = %38, %39, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #12
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPKhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #6 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call i64 @strlen(i8* %4) #12
  %6 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* %4, i64 %5) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #12
  %7 = load i8, i8* %6, align 8, !range !4
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #12
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #12
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #12
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #12
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #12
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #12
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #12
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #12
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #13
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #12
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #12
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #13
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #12
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #12
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKhEpLEl(%"class.base::CheckedContiguousIterator"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = icmp sgt i64 %1, 0
  br i1 %9, label %10, label %32

10:                                               ; preds = %2
  %11 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %12, align 8
  %13 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %14 = bitcast i8** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %17 = bitcast i8** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %15, %18
  %20 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20)
  %21 = icmp slt i64 %19, %1
  br i1 %21, label %23, label %22

22:                                               ; preds = %10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20)
  store i8* null, i8** %12, align 8
  br label %54

23:                                               ; preds = %10
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #12
  %25 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %19) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.16, i64 0, i64 0), i8* %24, i8* %25) #12
  %26 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20)
  store i8* %27, i8** %12, align 8
  %28 = icmp eq i8* %27, null
  br i1 %28, label %54, label %29

29:                                               ; preds = %23
  %30 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.14, i64 0, i64 0), i32 135, %"class.logging::CheckOpResult"* nonnull %5) #12
  %31 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #12
  br label %54

32:                                               ; preds = %2
  %33 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #12
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = sub nsw i64 0, %1
  %36 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %37 = bitcast i8** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %38, %40
  %42 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = icmp slt i64 %41, %35
  br i1 %43, label %45, label %44

44:                                               ; preds = %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* null, i8** %34, align 8
  br label %54

45:                                               ; preds = %32
  %46 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %35) #12
  %47 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %41) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.17, i64 0, i64 0), i8* %46, i8* %47) #12
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* %49, i8** %34, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.14, i64 0, i64 0), i32 137, %"class.logging::CheckOpResult"* nonnull %7) #12
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #12
  br label %54

54:                                               ; preds = %51, %45, %44, %29, %23, %22
  %55 = phi i8* [ %11, %22 ], [ %11, %23 ], [ %11, %29 ], [ %33, %44 ], [ %33, %45 ], [ %33, %51 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #12
  %56 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %57 = load i8*, i8** %56, align 8
  %58 = getelementptr inbounds i8, i8* %57, i64 %1
  store i8* %58, i8** %56, align 8
  ret %"class.base::CheckedContiguousIterator"* %0
}

declare i8* @_ZN7logging15CheckOpValueStrEl(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(1) i8* @_ZNK4base25CheckedContiguousIteratorIKhEdeEv(%"class.base::CheckedContiguousIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load i8*, i8** %7, align 8
  %11 = load i8*, i8** %8, align 8
  %12 = icmp eq i8* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast i8** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #12
  %17 = bitcast i8** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.18, i64 0, i64 0), i8* %16, i8* %18) #12
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.14, i64 0, i64 0), i32 173, %"class.logging::CheckOpResult"* nonnull %3) #12
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #12
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %26 = load i8*, i8** %7, align 8
  ret i8* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKhEppEv(%"class.base::CheckedContiguousIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load i8*, i8** %7, align 8
  %11 = load i8*, i8** %8, align 8
  %12 = icmp eq i8* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast i8** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #12
  %17 = bitcast i8** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.18, i64 0, i64 0), i8* %16, i8* %18) #12
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.14, i64 0, i64 0), i32 110, %"class.logging::CheckOpResult"* nonnull %3) #12
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #12
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %26 = load i8*, i8** %7, align 8
  %27 = getelementptr inbounds i8, i8* %26, i64 1
  store i8* %27, i8** %7, align 8
  ret %"class.base::CheckedContiguousIterator"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base25CheckedContiguousIteratorIKhEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator"*, i8*, i8*, i8*) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca %"class.logging::CheckOpResult", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = alloca %"class.logging::CheckOpResult", align 8
  %13 = alloca %"class.logging::CheckError", align 8
  store i8* %1, i8** %7, align 8
  store i8* %2, i8** %8, align 8
  store i8* %3, i8** %9, align 8
  %14 = ptrtoint i8* %1 to i64
  %15 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %17 = ptrtoint i8* %2 to i64
  %18 = bitcast i8** %16 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %20 = ptrtoint i8* %3 to i64
  %21 = bitcast i8** %19 to i64*
  store i64 %20, i64* %21, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #12
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %10, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %23, align 8
  %24 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  %25 = icmp ugt i8* %1, %2
  br i1 %25, label %27, label %26

26:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* null, i8** %23, align 8
  br label %38

27:                                               ; preds = %4
  %28 = bitcast i8** %7 to i8*
  %29 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %28, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #12
  %30 = bitcast i8** %8 to i8*
  %31 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %30, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.19, i64 0, i64 0), i8* %29, i8* %31) #12
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* %33, i8** %23, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %27
  %36 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.14, i64 0, i64 0), i32 45, %"class.logging::CheckOpResult"* nonnull %10) #12
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #12
  br label %38

38:                                               ; preds = %26, %27, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #12
  %39 = bitcast %"class.logging::CheckOpResult"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #12
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %12, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = load i8*, i8** %8, align 8
  %43 = load i8*, i8** %9, align 8
  %44 = icmp ugt i8* %42, %43
  br i1 %44, label %46, label %45

45:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %57

46:                                               ; preds = %38
  %47 = bitcast i8** %8 to i8*
  %48 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %47, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #12
  %49 = bitcast i8** %9 to i8*
  %50 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %49, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.20, i64 0, i64 0), i8* %48, i8* %50) #12
  %51 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %52, i8** %40, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %46
  %55 = bitcast %"class.logging::CheckError"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.14, i64 0, i64 0), i32 46, %"class.logging::CheckOpResult"* nonnull %12) #12
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #12
  br label %57

57:                                               ; preds = %45, %46, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #3

declare void @_ZN4base13StringAppendFEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcz(%"class.std::__1::basic_string"*, i8*, ...) local_unnamed_addr #2

declare zeroext i1 @_ZN3net4asn122ExtractSPKIFromDERCertEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPS6_(i8*, i64, %"class.base::BasicStringPiece"*) local_unnamed_addr #2

declare { i8*, i64 } @_ZN3net9x509_util25CryptoBufferAsStringPieceEPK16crypto_buffer_st(%struct.crypto_buffer_st*) local_unnamed_addr #2

declare void @CBS_init(%struct.cbs_st*, i8*, i64) local_unnamed_addr #2

declare %struct.evp_pkey_st* @EVP_parse_public_key(%struct.cbs_st*) local_unnamed_addr #2

declare i64 @CBS_len(%struct.cbs_st*) local_unnamed_addr #2

declare i32 @EVP_PKEY_id(%struct.evp_pkey_st*) local_unnamed_addr #2

declare %struct.ec_group_st* @EC_KEY_get0_group(%struct.ec_key_st*) local_unnamed_addr #2

declare %struct.ec_key_st* @EVP_PKEY_get0_EC_KEY(%struct.evp_pkey_st*) local_unnamed_addr #2

declare i32 @EC_GROUP_get_curve_name(%struct.ec_group_st*) local_unnamed_addr #2

declare void @EVP_PKEY_free(%struct.evp_pkey_st*) local_unnamed_addr #2

declare void @_ZN6crypto17SignatureVerifierC1Ev(%"class.crypto::SignatureVerifier"*) unnamed_addr #2

declare zeroext i1 @_ZN3net9x509_util36SignatureVerifierInitWithCertificateEPN6crypto17SignatureVerifierENS2_18SignatureAlgorithmEN4base4spanIKhLm18446744073709551615EEEPK16crypto_buffer_st(%"class.crypto::SignatureVerifier"*, i32, i64, i8*, %struct.crypto_buffer_st*) local_unnamed_addr #2

declare void @_ZN6crypto17SignatureVerifier12VerifyUpdateEN4base4spanIKhLm18446744073709551615EEE(%"class.crypto::SignatureVerifier"*, i64, i8*) local_unnamed_addr #2

declare zeroext i1 @_ZN6crypto17SignatureVerifier11VerifyFinalEv(%"class.crypto::SignatureVerifier"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6crypto17SignatureVerifierD1Ev(%"class.crypto::SignatureVerifier"*) unnamed_addr #3

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #2

declare %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8*, i64, i64, i32, i32) local_unnamed_addr #2

declare void @_ZN4base13HistogramBase30AddTimeMillisecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"*, %"class.base::TimeDelta"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net15X509CertificateD1Ev(%"class.net::X509Certificate"*) unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #11

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree nounwind readonly }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN7content12_GLOBAL__N_121GenerateSignedMessageENS_21SignedExchangeVersionERKNS_22SignedExchangeEnvelopeE: argument 0"}
!7 = distinct !{!7, !"_ZN7content12_GLOBAL__N_121GenerateSignedMessageENS_21SignedExchangeVersionERKNS_22SignedExchangeEnvelopeE"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN7content12_GLOBAL__N_17HexDumpERKNSt3__16vectorIhNS1_9allocatorIhEEEE: argument 0"}
!10 = distinct !{!10, !"_ZN7content12_GLOBAL__N_17HexDumpERKNSt3__16vectorIhNS1_9allocatorIhEEEE"}
!11 = !{!12}
!12 = distinct !{!12, !13}
!13 = distinct !{!13, !"LVerDomain"}
!14 = !{!15}
!15 = distinct !{!15, !13}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.isvectorized", i32 1}
!18 = distinct !{!18, !19}
!19 = !{!"llvm.loop.unroll.disable"}
!20 = distinct !{!20, !17}
!21 = !{!22}
!22 = distinct !{!22, !23}
!23 = distinct !{!23, !"LVerDomain"}
!24 = !{!25}
!25 = distinct !{!25, !23}
!26 = distinct !{!26, !17}
!27 = distinct !{!27, !19}
!28 = distinct !{!28, !17}
!29 = !{!30}
!30 = distinct !{!30, !31}
!31 = distinct !{!31, !"LVerDomain"}
!32 = !{!33}
!33 = distinct !{!33, !31}
!34 = distinct !{!34, !17}
!35 = distinct !{!35, !19}
!36 = distinct !{!36, !17}
!37 = !{!38}
!38 = distinct !{!38, !39}
!39 = distinct !{!39, !"LVerDomain"}
!40 = !{!41}
!41 = distinct !{!41, !39}
!42 = distinct !{!42, !17}
!43 = distinct !{!43, !19}
!44 = distinct !{!44, !17}
!45 = !{!46}
!46 = distinct !{!46, !47}
!47 = distinct !{!47, !"LVerDomain"}
!48 = !{!49}
!49 = distinct !{!49, !47}
!50 = distinct !{!50, !17}
!51 = distinct !{!51, !19}
!52 = distinct !{!52, !17}
!53 = !{!54}
!54 = distinct !{!54, !55}
!55 = distinct !{!55, !"LVerDomain"}
!56 = !{!57}
!57 = distinct !{!57, !55}
!58 = distinct !{!58, !17}
!59 = distinct !{!59, !19}
!60 = distinct !{!60, !17}
!61 = !{!62}
!62 = distinct !{!62, !63}
!63 = distinct !{!63, !"LVerDomain"}
!64 = !{!65}
!65 = distinct !{!65, !63}
!66 = distinct !{!66, !17}
!67 = distinct !{!67, !19}
!68 = distinct !{!68, !17}
!69 = !{!70}
!70 = distinct !{!70, !71}
!71 = distinct !{!71, !"LVerDomain"}
!72 = !{!73}
!73 = distinct !{!73, !71}
!74 = distinct !{!74, !17}
!75 = distinct !{!75, !19}
!76 = distinct !{!76, !17}
!77 = !{!78}
!78 = distinct !{!78, !79}
!79 = distinct !{!79, !"LVerDomain"}
!80 = !{!81}
!81 = distinct !{!81, !79}
!82 = distinct !{!82, !17}
!83 = distinct !{!83, !19}
!84 = distinct !{!84, !17}
!85 = !{!86}
!86 = distinct !{!86, !87}
!87 = distinct !{!87, !"LVerDomain"}
!88 = !{!89}
!89 = distinct !{!89, !87}
!90 = distinct !{!90, !17}
!91 = distinct !{!91, !19}
!92 = distinct !{!92, !17}
!93 = !{!94}
!94 = distinct !{!94, !95}
!95 = distinct !{!95, !"LVerDomain"}
!96 = !{!97}
!97 = distinct !{!97, !95}
!98 = distinct !{!98, !17}
!99 = distinct !{!99, !19}
!100 = distinct !{!100, !17}
!101 = !{!102}
!102 = distinct !{!102, !103}
!103 = distinct !{!103, !"LVerDomain"}
!104 = !{!105}
!105 = distinct !{!105, !103}
!106 = distinct !{!106, !17}
!107 = distinct !{!107, !19}
!108 = distinct !{!108, !17}
!109 = !{!110}
!110 = distinct !{!110, !111}
!111 = distinct !{!111, !"LVerDomain"}
!112 = !{!113}
!113 = distinct !{!113, !111}
!114 = distinct !{!114, !17}
!115 = distinct !{!115, !19}
!116 = distinct !{!116, !17}
!117 = !{!118}
!118 = distinct !{!118, !119}
!119 = distinct !{!119, !"LVerDomain"}
!120 = !{!121}
!121 = distinct !{!121, !119}
!122 = distinct !{!122, !17}
!123 = distinct !{!123, !19}
!124 = distinct !{!124, !17}
!125 = !{!126}
!126 = distinct !{!126, !127}
!127 = distinct !{!127, !"LVerDomain"}
!128 = !{!129}
!129 = distinct !{!129, !127}
!130 = distinct !{!130, !17}
!131 = distinct !{!131, !19}
!132 = distinct !{!132, !17}
