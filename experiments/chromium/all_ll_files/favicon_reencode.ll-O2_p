; ModuleID = '../../chrome/utility/importer/favicon_reencode.cc'
source_filename = "../../chrome/utility/importer/favicon_reencode.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::vector" = type opaque
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.7 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.0, i32, i32 }
%class.sk_sp.0 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.7 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.gfx::Size" = type { i32, i32 }
%"class.SkBitmap::Allocator" = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>

@_ZN3gfx12kFaviconSizeE = external local_unnamed_addr constant i32, align 4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8importer15ReencodeFaviconEPKhmPNSt3__16vectorIhNS2_9allocatorIhEEEE(i8*, i64, %"class.std::__1::vector"*) local_unnamed_addr #0 {
  %4 = alloca %class.SkBitmap, align 8
  %5 = alloca %"class.gfx::Size", align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %class.SkBitmap, align 8
  %9 = bitcast %class.SkBitmap* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %9) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = bitcast %"class.gfx::Size"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #4
  %11 = load i32, i32* @_ZN3gfx12kFaviconSizeE, align 4
  %12 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %5, i64 0, i32 0
  %13 = icmp sgt i32 %11, 0
  %14 = select i1 %13, i32 %11, i32 0
  store i32 %14, i32* %12, align 4
  %15 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %5, i64 0, i32 1
  store i32 %14, i32* %15, align 4
  call void @_ZN7content11DecodeImageEPKhRKN3gfx4SizeEm(%class.SkBitmap* nonnull sret %4, i8* %0, %"class.gfx::Size"* nonnull dereferenceable(8) %5, i64 %1) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #4
  %16 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %4, i64 0, i32 1, i32 2, i32 1, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = icmp slt i32 %17, 1
  br i1 %18, label %36, label %19

19:                                               ; preds = %3
  %20 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %4, i64 0, i32 1, i32 2, i32 1, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp slt i32 %21, 1
  br i1 %22, label %36, label %23

23:                                               ; preds = %19
  %24 = icmp eq i32 %17, %11
  %25 = icmp eq i32 %21, %11
  %26 = and i1 %24, %25
  br i1 %26, label %34, label %27

27:                                               ; preds = %23
  %28 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28) #4
  store i32 %17, i32* %6, align 4
  %29 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %29) #4
  store i32 %21, i32* %7, align 4
  call void @_ZN3gfx26CalculateFaviconTargetSizeEPiS0_(i32* nonnull %6, i32* nonnull %7) #4
  %30 = bitcast %class.SkBitmap* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %30) #4
  %31 = load i32, i32* %6, align 4
  %32 = load i32, i32* %7, align 4
  call void @_ZN4skia15ImageOperations6ResizeERK8SkBitmapNS0_12ResizeMethodEiiPNS1_9AllocatorE(%class.SkBitmap* nonnull sret %8, %class.SkBitmap* nonnull dereferenceable(56) %4, i32 5, i32 %31, i32 %32, %"class.SkBitmap::Allocator"* null) #4
  %33 = call dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSEOS_(%class.SkBitmap* nonnull %4, %class.SkBitmap* nonnull dereferenceable(56) %8) #4
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %8) #4
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %30) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28) #4
  br label %34

34:                                               ; preds = %23, %27
  %35 = call zeroext i1 @_ZN3gfx8PNGCodec18EncodeBGRASkBitmapERK8SkBitmapbPNSt3__16vectorIhNS4_9allocatorIhEEEE(%class.SkBitmap* nonnull dereferenceable(56) %4, i1 zeroext false, %"class.std::__1::vector"* %2) #4
  br label %36

36:                                               ; preds = %3, %19, %34
  %37 = phi i1 [ true, %34 ], [ false, %19 ], [ false, %3 ]
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %4) #4
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %9) #4
  ret i1 %37
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN7content11DecodeImageEPKhRKN3gfx4SizeEm(%class.SkBitmap* sret, i8*, %"class.gfx::Size"* dereferenceable(8), i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN3gfx26CalculateFaviconTargetSizeEPiS0_(i32*, i32*) local_unnamed_addr #2

declare void @_ZN4skia15ImageOperations6ResizeERK8SkBitmapNS0_12ResizeMethodEiiPNS1_9AllocatorE(%class.SkBitmap* sret, %class.SkBitmap* dereferenceable(56), i32, i32, i32, %"class.SkBitmap::Allocator"*) local_unnamed_addr #2

declare dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSEOS_(%class.SkBitmap*, %class.SkBitmap* dereferenceable(56)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #3

declare zeroext i1 @_ZN3gfx8PNGCodec18EncodeBGRASkBitmapERK8SkBitmapbPNSt3__16vectorIhNS4_9allocatorIhEEEE(%class.SkBitmap* dereferenceable(56), i1 zeroext, %"class.std::__1::vector"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
