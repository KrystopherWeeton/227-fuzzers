; ModuleID = '../../base/task/sequence_manager/work_deduplicator.cc'
source_filename = "../../base/task/sequence_manager/work_deduplicator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::sequence_manager::internal::WorkDeduplicator" = type { %"struct.std::__1::atomic", %class.scoped_refptr }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr = type { %"class.base::sequence_manager::internal::AssociatedThreadId"* }
%"class.base::sequence_manager::internal::AssociatedThreadId" = type { %"class.base::RefCountedThreadSafe", %"struct.std::__1::atomic" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }

@_ZN4base16sequence_manager8internal16WorkDeduplicatorC1E13scoped_refptrINS1_18AssociatedThreadIdEE = hidden unnamed_addr alias void (%"class.base::sequence_manager::internal::WorkDeduplicator"*, %"class.base::sequence_manager::internal::AssociatedThreadId"*), void (%"class.base::sequence_manager::internal::WorkDeduplicator"*, %"class.base::sequence_manager::internal::AssociatedThreadId"*)* @_ZN4base16sequence_manager8internal16WorkDeduplicatorC2E13scoped_refptrINS1_18AssociatedThreadIdEE
@_ZN4base16sequence_manager8internal16WorkDeduplicatorD1Ev = hidden unnamed_addr alias void (%"class.base::sequence_manager::internal::WorkDeduplicator"*), void (%"class.base::sequence_manager::internal::WorkDeduplicator"*)* @_ZN4base16sequence_manager8internal16WorkDeduplicatorD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16sequence_manager8internal16WorkDeduplicatorC2E13scoped_refptrINS1_18AssociatedThreadIdEE(%"class.base::sequence_manager::internal::WorkDeduplicator"* nocapture, %"class.base::sequence_manager::internal::AssociatedThreadId"*) unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.base::sequence_manager::internal::AssociatedThreadId"* %1 to i64
  %4 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkDeduplicator", %"class.base::sequence_manager::internal::WorkDeduplicator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %4, align 4
  %5 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkDeduplicator", %"class.base::sequence_manager::internal::WorkDeduplicator"* %0, i64 0, i32 1
  %6 = bitcast %class.scoped_refptr* %5 to i64*
  store i64 %3, i64* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16sequence_manager8internal16WorkDeduplicatorD2Ev(%"class.base::sequence_manager::internal::WorkDeduplicator"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkDeduplicator", %"class.base::sequence_manager::internal::WorkDeduplicator"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.base::sequence_manager::internal::AssociatedThreadId"*, %"class.base::sequence_manager::internal::AssociatedThreadId"** %2, align 8
  %4 = icmp eq %"class.base::sequence_manager::internal::AssociatedThreadId"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.base::sequence_manager::internal::AssociatedThreadId", %"class.base::sequence_manager::internal::AssociatedThreadId"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw sub i32* %6, i32 1 acq_rel
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %11

9:                                                ; preds = %5
  tail call void @_ZN4base16sequence_manager8internal18AssociatedThreadIdD1Ev(%"class.base::sequence_manager::internal::AssociatedThreadId"* nonnull %3) #4
  %10 = bitcast %"class.base::sequence_manager::internal::AssociatedThreadId"* %3 to i8*
  tail call void @_ZdlPv(i8* %10) #5
  br label %11

11:                                               ; preds = %1, %5, %9
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN4base16sequence_manager8internal16WorkDeduplicator19BindToCurrentThreadEv(%"class.base::sequence_manager::internal::WorkDeduplicator"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkDeduplicator", %"class.base::sequence_manager::internal::WorkDeduplicator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = atomicrmw or i32* %2, i32 4 seq_cst
  %4 = lshr i32 %3, 1
  %5 = and i32 %4, 1
  %6 = xor i32 %5, 1
  ret i32 %6
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN4base16sequence_manager8internal16WorkDeduplicator15OnWorkRequestedEv(%"class.base::sequence_manager::internal::WorkDeduplicator"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkDeduplicator", %"class.base::sequence_manager::internal::WorkDeduplicator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = atomicrmw or i32* %2, i32 2 seq_cst
  %4 = icmp ne i32 %3, 4
  %5 = zext i1 %4 to i32
  ret i32 %5
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZNK4base16sequence_manager8internal16WorkDeduplicator22OnDelayedWorkRequestedEv(%"class.base::sequence_manager::internal::WorkDeduplicator"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkDeduplicator", %"class.base::sequence_manager::internal::WorkDeduplicator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load atomic i32, i32* %2 seq_cst, align 4
  %4 = icmp ne i32 %3, 4
  %5 = zext i1 %4 to i32
  ret i32 %5
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4base16sequence_manager8internal16WorkDeduplicator13OnWorkStartedEv(%"class.base::sequence_manager::internal::WorkDeduplicator"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkDeduplicator", %"class.base::sequence_manager::internal::WorkDeduplicator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i32 5, i32* %2 seq_cst, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4base16sequence_manager8internal16WorkDeduplicator20WillCheckForMoreWorkEv(%"class.base::sequence_manager::internal::WorkDeduplicator"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkDeduplicator", %"class.base::sequence_manager::internal::WorkDeduplicator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i32 5, i32* %2 seq_cst, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN4base16sequence_manager8internal16WorkDeduplicator19DidCheckForMoreWorkENS2_8NextTaskE(%"class.base::sequence_manager::internal::WorkDeduplicator"* nocapture, i32) local_unnamed_addr #1 align 2 {
  %3 = icmp eq i32 %1, 0
  %4 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkDeduplicator", %"class.base::sequence_manager::internal::WorkDeduplicator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br i1 %3, label %5, label %6

5:                                                ; preds = %2
  store atomic i32 6, i32* %4 seq_cst, align 4
  br label %11

6:                                                ; preds = %2
  %7 = atomicrmw and i32* %4, i32 -2 seq_cst
  %8 = lshr i32 %7, 1
  %9 = and i32 %8, 1
  %10 = xor i32 %9, 1
  br label %11

11:                                               ; preds = %6, %5
  %12 = phi i32 [ 0, %5 ], [ %10, %6 ]
  ret i32 %12
}

; Function Attrs: nounwind
declare void @_ZN4base16sequence_manager8internal18AssociatedThreadIdD1Ev(%"class.base::sequence_manager::internal::AssociatedThreadId"*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
