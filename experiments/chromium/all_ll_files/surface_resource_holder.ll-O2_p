; ModuleID = '../../components/viz/service/frame_sinks/surface_resource_holder.cc'
source_filename = "../../components/viz/service/frame_sinks/surface_resource_holder.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.viz::SurfaceResourceHolder" = type { %"class.viz::SurfaceResourceHolderClient"*, %"class.std::__1::unordered_map" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.4", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.11", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.0" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.0" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { float }
%"class.viz::SurfaceResourceHolderClient" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.viz::TransferableResource"*, %"struct.viz::TransferableResource"*, %"class.std::__1::__compressed_pair.21" }
%"struct.viz::TransferableResource" = type { %"class.util::IdType", i8, %"class.gfx::Size", i32, [4 x i8], %"struct.gpu::MailboxHolder", %"class.gfx::ColorSpace", %"class.absl::optional", i8, i32, i8, [7 x i8], %"class.absl::optional.16" }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i32 }
%"class.gfx::Size" = type { i32, i32 }
%"struct.gpu::MailboxHolder" = type <{ %"struct.gpu::Mailbox", %"struct.gpu::SyncToken", i32, [4 x i8] }>
%"struct.gpu::Mailbox" = type { [16 x i8] }
%"struct.gpu::SyncToken" = type { i8, i8, %"class.util::IdType.14", i64 }
%"class.util::IdType.14" = type { %"class.base::StrongAlias.15" }
%"class.base::StrongAlias.15" = type { i64 }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"struct.gfx::HDRMetadata" }
%"struct.gfx::HDRMetadata" = type { %"struct.gfx::MasteringMetadata", i32, i32 }
%"struct.gfx::MasteringMetadata" = type { %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", float, float }
%"class.gfx::PointF" = type { float, float }
%"class.absl::optional.16" = type { %"class.absl::optional_internal::optional_data.17" }
%"class.absl::optional_internal::optional_data.17" = type { %"class.absl::optional_internal::optional_data_base.18" }
%"class.absl::optional_internal::optional_data_base.18" = type { %"class.absl::optional_internal::optional_data_dtor_base.19" }
%"class.absl::optional_internal::optional_data_dtor_base.19" = type { i8, [7 x i8], %union.anon.20 }
%union.anon.20 = type { %"struct.gpu::VulkanYCbCrInfo" }
%"struct.gpu::VulkanYCbCrInfo" = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"struct.viz::TransferableResource"* }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.util::IdType"* }
%"class.std::__1::tuple.35" = type { i8 }
%"struct.viz::SurfaceResourceHolder::ResourceRefs" = type { i32, i32, %"struct.gpu::SyncToken" }
%"struct.std::__1::pair" = type { %"class.util::IdType", %"struct.viz::SurfaceResourceHolder::ResourceRefs" }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"struct.viz::ReturnedResource"*, %"struct.viz::ReturnedResource"*, %"class.std::__1::__compressed_pair.28" }
%"struct.viz::ReturnedResource" = type <{ %"class.util::IdType", [4 x i8], %"struct.gpu::SyncToken", %"struct.gfx::GpuFenceHandle", i32, i8, [3 x i8] }>
%"struct.gfx::GpuFenceHandle" = type { %"class.base::ScopedGeneric" }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"struct.viz::ReturnedResource"* }
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38", %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"struct.std::__1::__hash_node"* }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base", i64, %"struct.std::__1::__hash_value_type" }
%"struct.std::__1::__hash_value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.std::__1::__hash_node_destructor" }
%"class.std::__1::__hash_node_destructor" = type <{ %"class.std::__1::allocator.7"*, i8, [7 x i8] }>
%"class.std::__1::allocator.7" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4util6IdTypeIN3viz20ResourceIdTypeMarkerEjLj0ELj1EEENS4_21SurfaceResourceHolder12ResourceRefsEEENS_22__unordered_map_hasherIS6_S9_NS4_16ResourceIdHasherENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S9_SD_SB_Lb1EEENS_9allocatorIS9_EEE25__emplace_unique_key_argsIS6_JRKNS_21piecewise_construct_tENS_5tupleIJRKS6_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4util6IdTypeIN3viz20ResourceIdTypeMarkerEjLj0ELj1EEENS4_21SurfaceResourceHolder12ResourceRefsEEENS_22__unordered_map_hasherIS6_S9_NS4_16ResourceIdHasherENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S9_SD_SB_Lb1EEENS_9allocatorIS9_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4util6IdTypeIN3viz20ResourceIdTypeMarkerEjLj0ELj1EEENS4_21SurfaceResourceHolder12ResourceRefsEEENS_22__unordered_map_hasherIS6_S9_NS4_16ResourceIdHasherENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S9_SD_SB_Lb1EEENS_9allocatorIS9_EEE8__rehashEm = comdat any

$_ZNSt3__16vectorIN3viz16ReturnedResourceENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4util6IdTypeIN3viz20ResourceIdTypeMarkerEjLj0ELj1EEENS4_21SurfaceResourceHolder12ResourceRefsEEENS_22__unordered_map_hasherIS6_S9_NS4_16ResourceIdHasherENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S9_SD_SB_Lb1EEENS_9allocatorIS9_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS9_PvEEEE = comdat any

@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1

@_ZN3viz21SurfaceResourceHolderC1EPNS_27SurfaceResourceHolderClientE = hidden unnamed_addr alias void (%"class.viz::SurfaceResourceHolder"*, %"class.viz::SurfaceResourceHolderClient"*), void (%"class.viz::SurfaceResourceHolder"*, %"class.viz::SurfaceResourceHolderClient"*)* @_ZN3viz21SurfaceResourceHolderC2EPNS_27SurfaceResourceHolderClientE
@_ZN3viz21SurfaceResourceHolderD1Ev = hidden unnamed_addr alias void (%"class.viz::SurfaceResourceHolder"*), void (%"class.viz::SurfaceResourceHolder"*)* @_ZN3viz21SurfaceResourceHolderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz21SurfaceResourceHolderC2EPNS_27SurfaceResourceHolderClientE(%"class.viz::SurfaceResourceHolder"* nocapture, %"class.viz::SurfaceResourceHolderClient"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.viz::SurfaceResourceHolder", %"class.viz::SurfaceResourceHolder"* %0, i64 0, i32 0
  store %"class.viz::SurfaceResourceHolderClient"* %1, %"class.viz::SurfaceResourceHolderClient"** %3, align 8
  %4 = getelementptr inbounds %"class.viz::SurfaceResourceHolder", %"class.viz::SurfaceResourceHolder"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.viz::SurfaceResourceHolder", %"class.viz::SurfaceResourceHolder"* %0, i64 0, i32 1, i32 0, i32 3
  %6 = bitcast %"class.std::__1::__compressed_pair.11"* %5 to i32*
  %7 = bitcast %"class.std::__1::unordered_map"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %6, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz21SurfaceResourceHolderD2Ev(%"class.viz::SurfaceResourceHolder"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::SurfaceResourceHolder", %"class.viz::SurfaceResourceHolder"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %2, align 8
  %4 = icmp eq %"struct.std::__1::__hash_node_base"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1, %5
  %6 = phi %"struct.std::__1::__hash_node_base"* [ %8, %5 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %6, i64 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %7, align 8
  %9 = bitcast %"struct.std::__1::__hash_node_base"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #11
  %10 = icmp eq %"struct.std::__1::__hash_node_base"* %8, null
  br i1 %10, label %11, label %5

11:                                               ; preds = %5, %1
  %12 = getelementptr inbounds %"class.viz::SurfaceResourceHolder", %"class.viz::SurfaceResourceHolder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %12, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %12, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %13 to i8*
  tail call void @_ZdlPv(i8* %16) #11
  br label %17

17:                                               ; preds = %11, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz21SurfaceResourceHolder5ResetEv(%"class.viz::SurfaceResourceHolder"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::SurfaceResourceHolder", %"class.viz::SurfaceResourceHolder"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %55, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.viz::SurfaceResourceHolder", %"class.viz::SurfaceResourceHolder"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %6, align 8
  %8 = icmp eq %"struct.std::__1::__hash_node_base"* %7, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %5, %9
  %10 = phi %"struct.std::__1::__hash_node_base"* [ %12, %9 ], [ %7, %5 ]
  %11 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %10, i64 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %11, align 8
  %13 = bitcast %"struct.std::__1::__hash_node_base"* %10 to i8*
  tail call void @_ZdlPv(i8* %13) #11
  %14 = icmp eq %"struct.std::__1::__hash_node_base"* %12, null
  br i1 %14, label %15, label %9

15:                                               ; preds = %9, %5
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %6, align 8
  %16 = getelementptr inbounds %"class.viz::SurfaceResourceHolder", %"class.viz::SurfaceResourceHolder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %37, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.viz::SurfaceResourceHolder", %"class.viz::SurfaceResourceHolder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = add i64 %17, -1
  %22 = and i64 %17, 3
  %23 = icmp ult i64 %21, 3
  br i1 %23, label %26, label %24

24:                                               ; preds = %19
  %25 = sub i64 %17, %22
  br label %38

26:                                               ; preds = %38, %19
  %27 = phi i64 [ 0, %19 ], [ %52, %38 ]
  %28 = icmp eq i64 %22, 0
  br i1 %28, label %37, label %29

29:                                               ; preds = %26, %29
  %30 = phi i64 [ %34, %29 ], [ %27, %26 ]
  %31 = phi i64 [ %35, %29 ], [ %22, %26 ]
  %32 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %32, i64 %30
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %33, align 8
  %34 = add nuw i64 %30, 1
  %35 = add i64 %31, -1
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %37, label %29, !llvm.loop !2

37:                                               ; preds = %26, %29, %15
  store i64 0, i64* %2, align 8
  br label %55

38:                                               ; preds = %38, %24
  %39 = phi i64 [ 0, %24 ], [ %52, %38 ]
  %40 = phi i64 [ %25, %24 ], [ %53, %38 ]
  %41 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %42 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %41, i64 %39
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %42, align 8
  %43 = or i64 %39, 1
  %44 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %45 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %44, i64 %43
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %45, align 8
  %46 = or i64 %39, 2
  %47 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %47, i64 %46
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %48, align 8
  %49 = or i64 %39, 3
  %50 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %50, i64 %49
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %51, align 8
  %52 = add nuw i64 %39, 4
  %53 = add i64 %40, -4
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %26, label %38

55:                                               ; preds = %1, %37
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz21SurfaceResourceHolder16ReceiveFromChildERKNSt3__16vectorINS_20TransferableResourceENS1_9allocatorIS3_EEEE(%"class.viz::SurfaceResourceHolder"*, %"class.std::__1::vector"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::tuple", align 8
  %4 = alloca %"class.std::__1::tuple.35", align 1
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %6 = load %"struct.viz::TransferableResource"*, %"struct.viz::TransferableResource"** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %8 = load %"struct.viz::TransferableResource"*, %"struct.viz::TransferableResource"** %7, align 8
  %9 = icmp eq %"struct.viz::TransferableResource"* %6, %8
  br i1 %9, label %15, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.viz::SurfaceResourceHolder", %"class.viz::SurfaceResourceHolder"* %0, i64 0, i32 1, i32 0
  %12 = bitcast %"class.std::__1::tuple"* %3 to i8*
  %13 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::tuple.35", %"class.std::__1::tuple.35"* %4, i64 0, i32 0
  br label %16

15:                                               ; preds = %16, %2
  ret void

16:                                               ; preds = %10, %16
  %17 = phi %"struct.viz::TransferableResource"* [ %6, %10 ], [ %29, %16 ]
  %18 = getelementptr inbounds %"struct.viz::TransferableResource", %"struct.viz::TransferableResource"* %17, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #10
  store %"class.util::IdType"* %18, %"class.util::IdType"** %13, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %14) #10
  %19 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4util6IdTypeIN3viz20ResourceIdTypeMarkerEjLj0ELj1EEENS4_21SurfaceResourceHolder12ResourceRefsEEENS_22__unordered_map_hasherIS6_S9_NS4_16ResourceIdHasherENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S9_SD_SB_Lb1EEENS_9allocatorIS9_EEE25__emplace_unique_key_argsIS6_JRKNS_21piecewise_construct_tENS_5tupleIJRKS6_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %11, %"class.util::IdType"* dereferenceable(4) %18, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.35"* nonnull dereferenceable(1) %4) #10
  %20 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %19, 0
  %21 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %20, i64 3
  %22 = bitcast %"struct.std::__1::__hash_node_base"* %21 to %"struct.viz::SurfaceResourceHolder::ResourceRefs"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %14) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #10
  %23 = getelementptr inbounds %"struct.viz::SurfaceResourceHolder::ResourceRefs", %"struct.viz::SurfaceResourceHolder::ResourceRefs"* %22, i64 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = add nsw i32 %24, 1
  store i32 %25, i32* %23, align 4
  %26 = bitcast %"struct.std::__1::__hash_node_base"* %21 to i32*
  %27 = load i32, i32* %26, align 8
  %28 = add nsw i32 %27, 1
  store i32 %28, i32* %26, align 8
  %29 = getelementptr inbounds %"struct.viz::TransferableResource", %"struct.viz::TransferableResource"* %17, i64 1
  %30 = icmp eq %"struct.viz::TransferableResource"* %29, %8
  br i1 %30, label %15, label %16
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz21SurfaceResourceHolder12RefResourcesERKNSt3__16vectorINS_20TransferableResourceENS1_9allocatorIS3_EEEE(%"class.viz::SurfaceResourceHolder"* nocapture readonly, %"class.std::__1::vector"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %4 = load %"struct.viz::TransferableResource"*, %"struct.viz::TransferableResource"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %6 = load %"struct.viz::TransferableResource"*, %"struct.viz::TransferableResource"** %5, align 8
  %7 = icmp eq %"struct.viz::TransferableResource"* %4, %6
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.viz::SurfaceResourceHolder", %"class.viz::SurfaceResourceHolder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.viz::SurfaceResourceHolder", %"class.viz::SurfaceResourceHolder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %12

11:                                               ; preds = %75, %2
  ret void

12:                                               ; preds = %8, %75
  %13 = phi %"struct.viz::TransferableResource"* [ %4, %8 ], [ %76, %75 ]
  %14 = getelementptr inbounds %"struct.viz::TransferableResource", %"struct.viz::TransferableResource"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp ugt i32 %15, -3002
  br i1 %16, label %75, label %17

17:                                               ; preds = %12
  %18 = zext i32 %15 to i64
  %19 = load i64, i64* %9, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %68, label %21

21:                                               ; preds = %17
  %22 = tail call i64 @llvm.ctpop.i64(i64 %19) #10, !range !4
  %23 = icmp ugt i64 %22, 1
  br i1 %23, label %27, label %24

24:                                               ; preds = %21
  %25 = add i64 %19, 4294967295
  %26 = and i64 %25, %18
  br label %31

27:                                               ; preds = %21
  %28 = icmp ugt i64 %19, %18
  br i1 %28, label %31, label %29

29:                                               ; preds = %27
  %30 = urem i64 %18, %19
  br label %31

31:                                               ; preds = %29, %27, %24
  %32 = phi i64 [ %26, %24 ], [ %30, %29 ], [ %18, %27 ]
  %33 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %10, align 8
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %33, i64 %32
  %35 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %34, align 8
  %36 = icmp eq %"struct.std::__1::__hash_node_base"* %35, null
  br i1 %36, label %68, label %37

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %35, i64 0, i32 0
  %39 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base"* %39, null
  br i1 %40, label %68, label %41

41:                                               ; preds = %37
  %42 = add i64 %19, -1
  br label %43

43:                                               ; preds = %64, %41
  %44 = phi %"struct.std::__1::__hash_node_base"* [ %39, %41 ], [ %66, %64 ]
  %45 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %44, i64 1
  %46 = bitcast %"struct.std::__1::__hash_node_base"* %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = icmp eq i64 %47, %18
  br i1 %48, label %59, label %49

49:                                               ; preds = %43
  br i1 %23, label %52, label %50

50:                                               ; preds = %49
  %51 = and i64 %47, %42
  br label %56

52:                                               ; preds = %49
  %53 = icmp ult i64 %47, %19
  br i1 %53, label %56, label %54

54:                                               ; preds = %52
  %55 = urem i64 %47, %19
  br label %56

56:                                               ; preds = %54, %52, %50
  %57 = phi i64 [ %51, %50 ], [ %55, %54 ], [ %47, %52 ]
  %58 = icmp eq i64 %57, %32
  br i1 %58, label %64, label %68

59:                                               ; preds = %43
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %44, i64 2
  %61 = bitcast %"struct.std::__1::__hash_node_base"* %60 to i32*
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, %15
  br i1 %63, label %68, label %64

64:                                               ; preds = %59, %56
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %44, i64 0, i32 0
  %66 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %65, align 8
  %67 = icmp eq %"struct.std::__1::__hash_node_base"* %66, null
  br i1 %67, label %68, label %43

68:                                               ; preds = %56, %59, %64, %17, %31, %37
  %69 = phi %"struct.std::__1::__hash_node_base"* [ null, %31 ], [ null, %17 ], [ null, %37 ], [ %44, %59 ], [ null, %64 ], [ null, %56 ]
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %69, i64 2
  %71 = bitcast %"struct.std::__1::__hash_node_base"* %70 to %"struct.std::__1::pair"*
  %72 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %71, i64 0, i32 1, i32 1
  %73 = load i32, i32* %72, align 4
  %74 = add nsw i32 %73, 1
  store i32 %74, i32* %72, align 4
  br label %75

75:                                               ; preds = %12, %68
  %76 = getelementptr inbounds %"struct.viz::TransferableResource", %"struct.viz::TransferableResource"* %13, i64 1
  %77 = icmp eq %"struct.viz::TransferableResource"* %76, %6
  br i1 %77, label %11, label %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz21SurfaceResourceHolder14UnrefResourcesENSt3__16vectorINS_16ReturnedResourceENS1_9allocatorIS3_EEEE(%"class.viz::SurfaceResourceHolder"*, %"class.std::__1::vector.26"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.36", align 8
  %4 = alloca %"class.std::__1::vector.26", align 16
  %5 = alloca %"class.std::__1::vector.26", align 16
  %6 = bitcast %"class.std::__1::vector.26"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %4, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %4, i64 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 0, i64 24, i1 false) #10
  %10 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %1, i64 0, i32 0, i32 0
  %11 = load %"struct.viz::ReturnedResource"*, %"struct.viz::ReturnedResource"** %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %1, i64 0, i32 0, i32 1
  %13 = load %"struct.viz::ReturnedResource"*, %"struct.viz::ReturnedResource"** %12, align 8
  %14 = icmp eq %"struct.viz::ReturnedResource"* %11, %13
  br i1 %14, label %28, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.viz::SurfaceResourceHolder", %"class.viz::SurfaceResourceHolder"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %"class.viz::SurfaceResourceHolder", %"class.viz::SurfaceResourceHolder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = bitcast %"struct.viz::ReturnedResource"** %8 to i64*
  %20 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %16, i64 0, i32 0
  %21 = bitcast %"class.std::__1::unique_ptr.36"* %3 to i8*
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.36", %"class.std::__1::unique_ptr.36"* %3, i64 0, i32 0, i32 0, i32 0
  br label %74

23:                                               ; preds = %167
  %24 = bitcast %"class.std::__1::vector.26"* %4 to <2 x i64>*
  %25 = load <2 x i64>, <2 x i64>* %24, align 16
  %26 = bitcast %"struct.viz::ReturnedResource"** %9 to i64*
  %27 = load i64, i64* %26, align 16
  br label %28

28:                                               ; preds = %2, %23
  %29 = phi i64 [ %27, %23 ], [ 0, %2 ]
  %30 = phi <2 x i64> [ %25, %23 ], [ zeroinitializer, %2 ]
  %31 = getelementptr inbounds %"class.viz::SurfaceResourceHolder", %"class.viz::SurfaceResourceHolder"* %0, i64 0, i32 0
  %32 = load %"class.viz::SurfaceResourceHolderClient"*, %"class.viz::SurfaceResourceHolderClient"** %31, align 8
  %33 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %5, i64 0, i32 0, i32 1
  %34 = bitcast %"class.std::__1::vector.26"* %5 to <2 x i64>*
  store <2 x i64> %30, <2 x i64>* %34, align 16
  %35 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %36 = bitcast %"struct.viz::ReturnedResource"** %35 to i64*
  store i64 %29, i64* %36, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 0, i64 24, i1 false) #10
  %37 = bitcast %"class.viz::SurfaceResourceHolderClient"* %32 to void (%"class.viz::SurfaceResourceHolderClient"*, %"class.std::__1::vector.26"*)***
  %38 = load void (%"class.viz::SurfaceResourceHolderClient"*, %"class.std::__1::vector.26"*)**, void (%"class.viz::SurfaceResourceHolderClient"*, %"class.std::__1::vector.26"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.viz::SurfaceResourceHolderClient"*, %"class.std::__1::vector.26"*)*, void (%"class.viz::SurfaceResourceHolderClient"*, %"class.std::__1::vector.26"*)** %38, i64 2
  %40 = load void (%"class.viz::SurfaceResourceHolderClient"*, %"class.std::__1::vector.26"*)*, void (%"class.viz::SurfaceResourceHolderClient"*, %"class.std::__1::vector.26"*)** %39, align 8
  call void %40(%"class.viz::SurfaceResourceHolderClient"* %32, %"class.std::__1::vector.26"* nonnull %5) #10
  %41 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %5, i64 0, i32 0, i32 0
  %42 = load %"struct.viz::ReturnedResource"*, %"struct.viz::ReturnedResource"** %41, align 16
  %43 = icmp eq %"struct.viz::ReturnedResource"* %42, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %28
  %45 = bitcast %"struct.viz::ReturnedResource"* %42 to i8*
  %46 = load %"struct.viz::ReturnedResource"*, %"struct.viz::ReturnedResource"** %33, align 8
  %47 = icmp eq %"struct.viz::ReturnedResource"* %46, %42
  br i1 %47, label %55, label %48

48:                                               ; preds = %44, %48
  %49 = phi %"struct.viz::ReturnedResource"* [ %50, %48 ], [ %46, %44 ]
  %50 = getelementptr inbounds %"struct.viz::ReturnedResource", %"struct.viz::ReturnedResource"* %49, i64 -1
  call void @_ZN3viz16ReturnedResourceD1Ev(%"struct.viz::ReturnedResource"* %50) #10
  %51 = icmp eq %"struct.viz::ReturnedResource"* %50, %42
  br i1 %51, label %52, label %48

52:                                               ; preds = %48
  %53 = bitcast %"class.std::__1::vector.26"* %5 to i8**
  %54 = load i8*, i8** %53, align 16
  br label %55

55:                                               ; preds = %52, %44
  %56 = phi i8* [ %54, %52 ], [ %45, %44 ]
  store %"struct.viz::ReturnedResource"* %42, %"struct.viz::ReturnedResource"** %33, align 8
  call void @_ZdlPv(i8* %56) #11
  br label %57

57:                                               ; preds = %28, %55
  %58 = load %"struct.viz::ReturnedResource"*, %"struct.viz::ReturnedResource"** %7, align 16
  %59 = icmp eq %"struct.viz::ReturnedResource"* %58, null
  br i1 %59, label %73, label %60

60:                                               ; preds = %57
  %61 = bitcast %"struct.viz::ReturnedResource"* %58 to i8*
  %62 = load %"struct.viz::ReturnedResource"*, %"struct.viz::ReturnedResource"** %8, align 8
  %63 = icmp eq %"struct.viz::ReturnedResource"* %62, %58
  br i1 %63, label %71, label %64

64:                                               ; preds = %60, %64
  %65 = phi %"struct.viz::ReturnedResource"* [ %66, %64 ], [ %62, %60 ]
  %66 = getelementptr inbounds %"struct.viz::ReturnedResource", %"struct.viz::ReturnedResource"* %65, i64 -1
  call void @_ZN3viz16ReturnedResourceD1Ev(%"struct.viz::ReturnedResource"* %66) #10
  %67 = icmp eq %"struct.viz::ReturnedResource"* %66, %58
  br i1 %67, label %68, label %64

68:                                               ; preds = %64
  %69 = bitcast %"class.std::__1::vector.26"* %4 to i8**
  %70 = load i8*, i8** %69, align 16
  br label %71

71:                                               ; preds = %68, %60
  %72 = phi i8* [ %70, %68 ], [ %61, %60 ]
  store %"struct.viz::ReturnedResource"* %58, %"struct.viz::ReturnedResource"** %8, align 8
  call void @_ZdlPv(i8* %72) #11
  br label %73

73:                                               ; preds = %57, %71
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #10
  ret void

74:                                               ; preds = %15, %167
  %75 = phi %"struct.viz::ReturnedResource"* [ %11, %15 ], [ %168, %167 ]
  %76 = getelementptr inbounds %"struct.viz::ReturnedResource", %"struct.viz::ReturnedResource"* %75, i64 0, i32 0, i32 0, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = icmp ugt i32 %77, -3002
  br i1 %78, label %167, label %79

79:                                               ; preds = %74
  %80 = zext i32 %77 to i64
  %81 = load i64, i64* %17, align 8
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %167, label %83

83:                                               ; preds = %79
  %84 = call i64 @llvm.ctpop.i64(i64 %81) #10, !range !4
  %85 = icmp ugt i64 %84, 1
  br i1 %85, label %89, label %86

86:                                               ; preds = %83
  %87 = add i64 %81, 4294967295
  %88 = and i64 %87, %80
  br label %93

89:                                               ; preds = %83
  %90 = icmp ugt i64 %81, %80
  br i1 %90, label %93, label %91

91:                                               ; preds = %89
  %92 = urem i64 %80, %81
  br label %93

93:                                               ; preds = %91, %89, %86
  %94 = phi i64 [ %88, %86 ], [ %92, %91 ], [ %80, %89 ]
  %95 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %18, align 8
  %96 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %95, i64 %94
  %97 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, align 8
  %98 = icmp eq %"struct.std::__1::__hash_node_base"* %97, null
  br i1 %98, label %167, label %99

99:                                               ; preds = %93
  %100 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %97, i64 0, i32 0
  %101 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %100, align 8
  %102 = icmp eq %"struct.std::__1::__hash_node_base"* %101, null
  br i1 %102, label %167, label %103

103:                                              ; preds = %99
  %104 = add i64 %81, -1
  br label %105

105:                                              ; preds = %126, %103
  %106 = phi %"struct.std::__1::__hash_node_base"* [ %101, %103 ], [ %128, %126 ]
  %107 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %106, i64 1
  %108 = bitcast %"struct.std::__1::__hash_node_base"* %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = icmp eq i64 %109, %80
  br i1 %110, label %121, label %111

111:                                              ; preds = %105
  br i1 %85, label %114, label %112

112:                                              ; preds = %111
  %113 = and i64 %109, %104
  br label %118

114:                                              ; preds = %111
  %115 = icmp ult i64 %109, %81
  br i1 %115, label %118, label %116

116:                                              ; preds = %114
  %117 = urem i64 %109, %81
  br label %118

118:                                              ; preds = %116, %114, %112
  %119 = phi i64 [ %113, %112 ], [ %117, %116 ], [ %109, %114 ]
  %120 = icmp eq i64 %119, %94
  br i1 %120, label %126, label %167

121:                                              ; preds = %105
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %106, i64 2
  %123 = bitcast %"struct.std::__1::__hash_node_base"* %122 to i32*
  %124 = load i32, i32* %123, align 4
  %125 = icmp eq i32 %124, %77
  br i1 %125, label %130, label %126

126:                                              ; preds = %121, %118
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %106, i64 0, i32 0
  %128 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %127, align 8
  %129 = icmp eq %"struct.std::__1::__hash_node_base"* %128, null
  br i1 %129, label %167, label %105

130:                                              ; preds = %121
  %131 = bitcast %"struct.std::__1::__hash_node_base"* %122 to %"struct.std::__1::pair"*
  %132 = getelementptr inbounds %"struct.viz::ReturnedResource", %"struct.viz::ReturnedResource"* %75, i64 0, i32 4
  %133 = load i32, i32* %132, align 8
  %134 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %131, i64 0, i32 1, i32 1
  %135 = load i32, i32* %134, align 4
  %136 = sub nsw i32 %135, %133
  store i32 %136, i32* %134, align 4
  %137 = getelementptr inbounds %"struct.viz::ReturnedResource", %"struct.viz::ReturnedResource"* %75, i64 0, i32 2
  %138 = getelementptr inbounds %"struct.viz::ReturnedResource", %"struct.viz::ReturnedResource"* %75, i64 0, i32 2, i32 1
  %139 = load i8, i8* %138, align 1
  %140 = icmp eq i8 %139, -1
  br i1 %140, label %145, label %141

141:                                              ; preds = %130
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %106, i64 4
  %143 = bitcast %"struct.std::__1::__hash_node_base"* %142 to i8*
  %144 = getelementptr inbounds %"struct.gpu::SyncToken", %"struct.gpu::SyncToken"* %137, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %143, i8* align 8 %144, i64 24, i1 false)
  br label %145

145:                                              ; preds = %130, %141
  %146 = icmp eq i32 %136, 0
  br i1 %146, label %147, label %167

147:                                              ; preds = %145
  %148 = getelementptr inbounds %"struct.gpu::SyncToken", %"struct.gpu::SyncToken"* %137, i64 0, i32 0
  %149 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %106, i64 4
  %150 = bitcast %"struct.std::__1::__hash_node_base"* %149 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %148, i8* align 8 %150, i64 24, i1 false)
  %151 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %106, i64 3
  %152 = bitcast %"struct.std::__1::__hash_node_base"* %151 to i32*
  %153 = load i32, i32* %152, align 8
  store i32 %153, i32* %132, align 8
  %154 = load %"struct.viz::ReturnedResource"*, %"struct.viz::ReturnedResource"** %8, align 8
  %155 = load %"struct.viz::ReturnedResource"*, %"struct.viz::ReturnedResource"** %9, align 16
  %156 = icmp ult %"struct.viz::ReturnedResource"* %154, %155
  br i1 %156, label %157, label %160

157:                                              ; preds = %147
  call void @_ZN3viz16ReturnedResourceC1EOS0_(%"struct.viz::ReturnedResource"* %154, %"struct.viz::ReturnedResource"* dereferenceable(56) %75) #10
  %158 = getelementptr inbounds %"struct.viz::ReturnedResource", %"struct.viz::ReturnedResource"* %154, i64 1
  %159 = ptrtoint %"struct.viz::ReturnedResource"* %158 to i64
  store i64 %159, i64* %19, align 8
  br label %161

160:                                              ; preds = %147
  call void @_ZNSt3__16vectorIN3viz16ReturnedResourceENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.26"* nonnull %4, %"struct.viz::ReturnedResource"* dereferenceable(56) %75) #10
  br label %161

161:                                              ; preds = %157, %160
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #10
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4util6IdTypeIN3viz20ResourceIdTypeMarkerEjLj0ELj1EEENS4_21SurfaceResourceHolder12ResourceRefsEEENS_22__unordered_map_hasherIS6_S9_NS4_16ResourceIdHasherENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S9_SD_SB_Lb1EEENS_9allocatorIS9_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS9_PvEEEE(%"class.std::__1::unique_ptr.36"* nonnull sret %3, %"class.std::__1::__hash_table"* %20, %"struct.std::__1::__hash_node_base"* nonnull %106) #10
  %162 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %22, align 8
  store %"struct.std::__1::__hash_node"* null, %"struct.std::__1::__hash_node"** %22, align 8
  %163 = icmp eq %"struct.std::__1::__hash_node"* %162, null
  br i1 %163, label %166, label %164

164:                                              ; preds = %161
  %165 = bitcast %"struct.std::__1::__hash_node"* %162 to i8*
  call void @_ZdlPv(i8* %165) #11
  br label %166

166:                                              ; preds = %161, %164
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #10
  br label %167

167:                                              ; preds = %126, %118, %99, %79, %93, %166, %145, %74
  %168 = getelementptr inbounds %"struct.viz::ReturnedResource", %"struct.viz::ReturnedResource"* %75, i64 1
  %169 = icmp eq %"struct.viz::ReturnedResource"* %168, %13
  br i1 %169, label %23, label %74
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4util6IdTypeIN3viz20ResourceIdTypeMarkerEjLj0ELj1EEENS4_21SurfaceResourceHolder12ResourceRefsEEENS_22__unordered_map_hasherIS6_S9_NS4_16ResourceIdHasherENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S9_SD_SB_Lb1EEENS_9allocatorIS9_EEE25__emplace_unique_key_argsIS6_JRKNS_21piecewise_construct_tENS_5tupleIJRKS6_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, %"class.util::IdType"* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.35"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %1, i64 0, i32 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %56, label %12

12:                                               ; preds = %5
  %13 = tail call i64 @llvm.ctpop.i64(i64 %10) #10, !range !4
  %14 = icmp ugt i64 %13, 1
  br i1 %14, label %18, label %15

15:                                               ; preds = %12
  %16 = add i64 %10, 4294967295
  %17 = and i64 %16, %8
  br label %22

18:                                               ; preds = %12
  %19 = icmp ugt i64 %10, %8
  br i1 %19, label %22, label %20

20:                                               ; preds = %18
  %21 = urem i64 %8, %10
  br label %22

22:                                               ; preds = %15, %18, %20
  %23 = phi i64 [ %17, %15 ], [ %21, %20 ], [ %8, %18 ]
  %24 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %24, align 8
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %25, i64 %23
  %27 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base"* %27, null
  br i1 %28, label %56, label %29

29:                                               ; preds = %22
  %30 = add i64 %10, -1
  br label %31

31:                                               ; preds = %29, %51
  %32 = phi %"struct.std::__1::__hash_node_base"* [ %34, %51 ], [ %27, %29 ]
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 0, i32 0
  %34 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %33, align 8
  %35 = icmp eq %"struct.std::__1::__hash_node_base"* %34, null
  br i1 %35, label %56, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %34, i64 1
  %38 = bitcast %"struct.std::__1::__hash_node_base"* %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, %8
  br i1 %40, label %51, label %41

41:                                               ; preds = %36
  br i1 %14, label %44, label %42

42:                                               ; preds = %41
  %43 = and i64 %39, %30
  br label %48

44:                                               ; preds = %41
  %45 = icmp ult i64 %39, %10
  br i1 %45, label %48, label %46

46:                                               ; preds = %44
  %47 = urem i64 %39, %10
  br label %48

48:                                               ; preds = %42, %44, %46
  %49 = phi i64 [ %43, %42 ], [ %47, %46 ], [ %39, %44 ]
  %50 = icmp eq i64 %49, %23
  br i1 %50, label %51, label %56

51:                                               ; preds = %36, %48
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %34, i64 2
  %53 = bitcast %"struct.std::__1::__hash_node_base"* %52 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, %7
  br i1 %55, label %149, label %31

56:                                               ; preds = %31, %48, %22, %5
  %57 = phi i64 [ %23, %22 ], [ -6148914691236517206, %5 ], [ %23, %48 ], [ %23, %31 ]
  %58 = tail call i8* @_Znwm(i64 56) #11, !noalias !5
  %59 = getelementptr inbounds i8, i8* %58, i64 16
  %60 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  %61 = load %"class.util::IdType"*, %"class.util::IdType"** %60, align 8, !noalias !5
  %62 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %61, i64 0, i32 0, i32 0
  %63 = bitcast i8* %59 to i32*
  %64 = load i32, i32* %62, align 4, !noalias !5
  store i32 %64, i32* %63, align 8, !noalias !5
  %65 = getelementptr inbounds i8, i8* %58, i64 24
  %66 = getelementptr inbounds i8, i8* %58, i64 32
  %67 = bitcast i8* %66 to %"struct.gpu::SyncToken"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 32, i1 false) #10, !noalias !5
  tail call void @_ZN3gpu9SyncTokenC1Ev(%"struct.gpu::SyncToken"* %67) #10, !noalias !5
  %68 = getelementptr inbounds i8, i8* %58, i64 8
  %69 = bitcast i8* %68 to i64*
  store i64 %8, i64* %69, align 8, !noalias !5
  %70 = bitcast i8* %58 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %70, align 8, !noalias !5
  %71 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = add i64 %72, 1
  %74 = uitofp i64 %73 to float
  %75 = uitofp i64 %10 to float
  %76 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %77 = load float, float* %76, align 4
  %78 = fmul float %77, %75
  %79 = fcmp olt float %78, %74
  %80 = or i1 %11, %79
  br i1 %80, label %81, label %104

81:                                               ; preds = %56
  %82 = shl i64 %10, 1
  %83 = icmp ult i64 %10, 3
  %84 = tail call i64 @llvm.ctpop.i64(i64 %10) #10, !range !4
  %85 = icmp ugt i64 %84, 1
  %86 = or i1 %83, %85
  %87 = zext i1 %86 to i64
  %88 = or i64 %82, %87
  %89 = fdiv float %74, %77
  %90 = tail call float @llvm.ceil.f32(float %89) #10
  %91 = fptoui float %90 to i64
  %92 = icmp ult i64 %88, %91
  %93 = select i1 %92, i64 %91, i64 %88
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4util6IdTypeIN3viz20ResourceIdTypeMarkerEjLj0ELj1EEENS4_21SurfaceResourceHolder12ResourceRefsEEENS_22__unordered_map_hasherIS6_S9_NS4_16ResourceIdHasherENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S9_SD_SB_Lb1EEENS_9allocatorIS9_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %93)
  %94 = load i64, i64* %9, align 8
  %95 = tail call i64 @llvm.ctpop.i64(i64 %94) #10, !range !4
  %96 = icmp ugt i64 %95, 1
  br i1 %96, label %100, label %97

97:                                               ; preds = %81
  %98 = add i64 %94, 4294967295
  %99 = and i64 %98, %8
  br label %104

100:                                              ; preds = %81
  %101 = icmp ugt i64 %94, %8
  br i1 %101, label %104, label %102

102:                                              ; preds = %100
  %103 = urem i64 %8, %94
  br label %104

104:                                              ; preds = %102, %100, %97, %56
  %105 = phi i64 [ %10, %56 ], [ %94, %97 ], [ %94, %100 ], [ %94, %102 ]
  %106 = phi i64 [ %57, %56 ], [ %99, %97 ], [ %8, %100 ], [ %103, %102 ]
  %107 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %108 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %107, align 8
  %109 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %108, i64 %106
  %110 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %109, align 8
  %111 = icmp eq %"struct.std::__1::__hash_node_base"* %110, null
  br i1 %111, label %112, label %138

112:                                              ; preds = %104
  %113 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %114 = bitcast %"struct.std::__1::__hash_node_base"* %113 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = bitcast i8* %58 to i64*
  store i64 %115, i64* %116, align 8
  %117 = bitcast %"struct.std::__1::__hash_node_base"* %113 to i8**
  store i8* %58, i8** %117, align 8
  store %"struct.std::__1::__hash_node_base"* %113, %"struct.std::__1::__hash_node_base"** %109, align 8
  %118 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %70, align 8
  %119 = icmp eq %"struct.std::__1::__hash_node_base"* %118, null
  br i1 %119, label %145, label %120

120:                                              ; preds = %112
  %121 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %118, i64 1
  %122 = bitcast %"struct.std::__1::__hash_node_base"* %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = tail call i64 @llvm.ctpop.i64(i64 %105) #10, !range !4
  %125 = icmp ugt i64 %124, 1
  br i1 %125, label %129, label %126

126:                                              ; preds = %120
  %127 = add i64 %105, -1
  %128 = and i64 %123, %127
  br label %133

129:                                              ; preds = %120
  %130 = icmp ult i64 %123, %105
  br i1 %130, label %133, label %131

131:                                              ; preds = %129
  %132 = urem i64 %123, %105
  br label %133

133:                                              ; preds = %126, %129, %131
  %134 = phi i64 [ %128, %126 ], [ %132, %131 ], [ %123, %129 ]
  %135 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %107, align 8
  %136 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %135, i64 %134
  %137 = bitcast %"struct.std::__1::__hash_node_base"** %136 to i8**
  br label %143

138:                                              ; preds = %104
  %139 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = bitcast i8* %58 to i64*
  store i64 %140, i64* %141, align 8
  %142 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i8**
  br label %143

143:                                              ; preds = %133, %138
  %144 = phi i8** [ %142, %138 ], [ %137, %133 ]
  store i8* %58, i8** %144, align 8
  br label %145

145:                                              ; preds = %143, %112
  %146 = bitcast i8* %58 to %"struct.std::__1::__hash_node_base"*
  %147 = load i64, i64* %71, align 8
  %148 = add i64 %147, 1
  store i64 %148, i64* %71, align 8
  br label %149

149:                                              ; preds = %51, %145
  %150 = phi i8 [ 1, %145 ], [ 0, %51 ]
  %151 = phi %"struct.std::__1::__hash_node_base"* [ %146, %145 ], [ %34, %51 ]
  %152 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %151, 0
  %153 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %152, i8 %150, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %153
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4util6IdTypeIN3viz20ResourceIdTypeMarkerEjLj0ELj1EEENS4_21SurfaceResourceHolder12ResourceRefsEEENS_22__unordered_map_hasherIS6_S9_NS4_16ResourceIdHasherENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S9_SD_SB_Lb1EEENS_9allocatorIS9_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !4
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #10
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4util6IdTypeIN3viz20ResourceIdTypeMarkerEjLj0ELj1EEENS4_21SurfaceResourceHolder12ResourceRefsEEENS_22__unordered_map_hasherIS6_S9_NS4_16ResourceIdHasherENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S9_SD_SB_Lb1EEENS_9allocatorIS9_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #10, !range !4
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #10
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #10, !range !4
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #10
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4util6IdTypeIN3viz20ResourceIdTypeMarkerEjLj0ELj1EEENS4_21SurfaceResourceHolder12ResourceRefsEEENS_22__unordered_map_hasherIS6_S9_NS4_16ResourceIdHasherENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S9_SD_SB_Lb1EEENS_9allocatorIS9_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN3gpu9SyncTokenC1Ev(%"struct.gpu::SyncToken"*) unnamed_addr #5

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4util6IdTypeIN3viz20ResourceIdTypeMarkerEjLj0ELj1EEENS4_21SurfaceResourceHolder12ResourceRefsEEENS_22__unordered_map_hasherIS6_S9_NS4_16ResourceIdHasherENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S9_SD_SB_Lb1EEENS_9allocatorIS9_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #12
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #11
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #11
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !8

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #10, !range !4
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %107, i64 2
  %111 = load i32, i32* %102, align 4
  %112 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i32*
  %113 = load i32, i32* %112, align 4
  %114 = icmp eq i32 %111, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %135, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #11
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #6

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #6

; Function Attrs: nounwind
declare void @_ZN3viz16ReturnedResourceD1Ev(%"struct.viz::ReturnedResource"*) unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3viz16ReturnedResourceENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.26"*, %"struct.viz::ReturnedResource"* dereferenceable(56)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.viz::ReturnedResource"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.26"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 56
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 329406144173384850
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.26"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.viz::ReturnedResource"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 56
  %20 = icmp ult i64 %19, 164703072086692425
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 329406144173384850, %14 ]
  %28 = mul i64 %27, 56
  %29 = tail call i8* @_Znwm(i64 %28) #11
  %30 = bitcast i8* %29 to %"struct.viz::ReturnedResource"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.viz::ReturnedResource"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.viz::ReturnedResource", %"struct.viz::ReturnedResource"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.viz::ReturnedResource", %"struct.viz::ReturnedResource"* %33, i64 %32
  %36 = ptrtoint %"struct.viz::ReturnedResource"* %35 to i64
  tail call void @_ZN3viz16ReturnedResourceC1EOS0_(%"struct.viz::ReturnedResource"* %34, %"struct.viz::ReturnedResource"* dereferenceable(56) %1) #10
  %37 = getelementptr inbounds %"struct.viz::ReturnedResource", %"struct.viz::ReturnedResource"* %34, i64 1
  %38 = ptrtoint %"struct.viz::ReturnedResource"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %0, i64 0, i32 0, i32 0
  %40 = load %"struct.viz::ReturnedResource"*, %"struct.viz::ReturnedResource"** %39, align 8
  %41 = load %"struct.viz::ReturnedResource"*, %"struct.viz::ReturnedResource"** %3, align 8
  %42 = icmp eq %"struct.viz::ReturnedResource"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"struct.viz::ReturnedResource"* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %"struct.viz::ReturnedResource"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"struct.viz::ReturnedResource"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"struct.viz::ReturnedResource", %"struct.viz::ReturnedResource"* %46, i64 -1
  %49 = getelementptr inbounds %"struct.viz::ReturnedResource", %"struct.viz::ReturnedResource"* %47, i64 -1
  tail call void @_ZN3viz16ReturnedResourceC1EOS0_(%"struct.viz::ReturnedResource"* %48, %"struct.viz::ReturnedResource"* dereferenceable(56) %49) #10
  %50 = icmp eq %"struct.viz::ReturnedResource"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %"struct.viz::ReturnedResource"*, %"struct.viz::ReturnedResource"** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %"struct.viz::ReturnedResource"* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %"struct.viz::ReturnedResource"* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %"struct.viz::ReturnedResource"* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %"struct.viz::ReturnedResource"*
  %60 = icmp eq %"struct.viz::ReturnedResource"* %55, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %54, %61
  %62 = phi %"struct.viz::ReturnedResource"* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %"struct.viz::ReturnedResource", %"struct.viz::ReturnedResource"* %62, i64 -1
  tail call void @_ZN3viz16ReturnedResourceD1Ev(%"struct.viz::ReturnedResource"* %63) #10
  %64 = icmp eq %"struct.viz::ReturnedResource"* %63, %59
  br i1 %64, label %65, label %61

65:                                               ; preds = %61, %54
  %66 = icmp eq i64 %57, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %68) #11
  br label %69

69:                                               ; preds = %65, %67
  ret void
}

declare void @_ZN3viz16ReturnedResourceC1EOS0_(%"struct.viz::ReturnedResource"*, %"struct.viz::ReturnedResource"* dereferenceable(56)) unnamed_addr #5

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4util6IdTypeIN3viz20ResourceIdTypeMarkerEjLj0ELj1EEENS4_21SurfaceResourceHolder12ResourceRefsEEENS_22__unordered_map_hasherIS6_S9_NS4_16ResourceIdHasherENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S9_SD_SB_Lb1EEENS_9allocatorIS9_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS9_PvEEEE(%"class.std::__1::unique_ptr.36"* noalias sret, %"class.std::__1::__hash_table"*, %"struct.std::__1::__hash_node_base"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 1
  %7 = bitcast %"struct.std::__1::__hash_node_base"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @llvm.ctpop.i64(i64 %5) #10, !range !4
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = add i64 %5, -1
  %13 = and i64 %12, %8
  br label %18

14:                                               ; preds = %3
  %15 = icmp ult i64 %8, %5
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %8, %5
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %8, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %22, align 8
  br label %24

24:                                               ; preds = %24, %18
  %25 = phi %"struct.std::__1::__hash_node_base"* [ %23, %18 ], [ %27, %24 ]
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base"* %27, %2
  br i1 %28, label %29, label %24

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::__compressed_pair.4", %"class.std::__1::__compressed_pair.4"* %30, i64 0, i32 0, i32 0
  %32 = icmp eq %"struct.std::__1::__hash_node_base"* %25, %31
  br i1 %32, label %47, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  br i1 %10, label %40, label %37

37:                                               ; preds = %33
  %38 = add i64 %5, -1
  %39 = and i64 %36, %38
  br label %44

40:                                               ; preds = %33
  %41 = icmp ult i64 %36, %5
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %36, %5
  br label %44

44:                                               ; preds = %37, %40, %42
  %45 = phi i64 [ %39, %37 ], [ %43, %42 ], [ %36, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %66, label %47

47:                                               ; preds = %44, %29
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base"* %49, null
  br i1 %50, label %65, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %49, i64 1
  %53 = bitcast %"struct.std::__1::__hash_node_base"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  br i1 %10, label %58, label %55

55:                                               ; preds = %51
  %56 = add i64 %5, -1
  %57 = and i64 %54, %56
  br label %62

58:                                               ; preds = %51
  %59 = icmp ult i64 %54, %5
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %54, %5
  br label %62

62:                                               ; preds = %55, %58, %60
  %63 = phi i64 [ %57, %55 ], [ %61, %60 ], [ %54, %58 ]
  %64 = icmp eq i64 %63, %19
  br i1 %64, label %66, label %65

65:                                               ; preds = %62, %47
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %22, align 8
  br label %66

66:                                               ; preds = %62, %44, %65
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base"* %68, null
  %70 = ptrtoint %"struct.std::__1::__hash_node_base"* %68 to i64
  br i1 %69, label %90, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %68, i64 1
  %73 = bitcast %"struct.std::__1::__hash_node_base"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  br i1 %10, label %78, label %75

75:                                               ; preds = %71
  %76 = add i64 %5, -1
  %77 = and i64 %74, %76
  br label %82

78:                                               ; preds = %71
  %79 = icmp ult i64 %74, %5
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = urem i64 %74, %5
  br label %82

82:                                               ; preds = %75, %78, %80
  %83 = phi i64 [ %77, %75 ], [ %81, %80 ], [ %74, %78 ]
  %84 = icmp eq i64 %83, %19
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %86, i64 %83
  store %"struct.std::__1::__hash_node_base"* %25, %"struct.std::__1::__hash_node_base"** %87, align 8
  %88 = bitcast %"struct.std::__1::__hash_node_base"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  br label %90

90:                                               ; preds = %85, %82, %66
  %91 = phi i64 [ %89, %85 ], [ %70, %82 ], [ %70, %66 ]
  %92 = bitcast %"struct.std::__1::__hash_node_base"* %25 to i64*
  store i64 %91, i64* %92, align 8
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %67, align 8
  %93 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 2, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, -1
  store i64 %95, i64* %93, align 8
  %96 = ptrtoint %"struct.std::__1::__hash_node_base"* %2 to i64
  %97 = bitcast %"class.std::__1::unique_ptr.36"* %0 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.36", %"class.std::__1::unique_ptr.36"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %99 = bitcast %"class.std::__1::allocator.7"** %98 to %"class.std::__1::__compressed_pair.4"**
  store %"class.std::__1::__compressed_pair.4"* %30, %"class.std::__1::__compressed_pair.4"** %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.36", %"class.std::__1::unique_ptr.36"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i8 1, i8* %100, align 8
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = !{i64 0, i64 65}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4util6IdTypeIN3viz20ResourceIdTypeMarkerEjLj0ELj1EEENS4_21SurfaceResourceHolder12ResourceRefsEEENS_22__unordered_map_hasherIS6_S9_NS4_16ResourceIdHasherENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S9_SD_SB_Lb1EEENS_9allocatorIS9_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS6_EEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS9_PvEENS_22__hash_node_destructorINSH_ISW_EEEEEEmOT_DpOT0_: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4util6IdTypeIN3viz20ResourceIdTypeMarkerEjLj0ELj1EEENS4_21SurfaceResourceHolder12ResourceRefsEEENS_22__unordered_map_hasherIS6_S9_NS4_16ResourceIdHasherENS_8equal_toIS6_EELb1EEENS_21__unordered_map_equalIS6_S9_SD_SB_Lb1EEENS_9allocatorIS9_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS6_EEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS9_PvEENS_22__hash_node_destructorINSH_ISW_EEEEEEmOT_DpOT0_"}
!8 = distinct !{!8, !3}
