; ModuleID = '../../third_party/skia/src/gpu/GrStyle.cpp'
source_filename = "../../third_party/skia/src/gpu/GrStyle.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.GrStyle = type { %class.SkStrokeRec, %class.sk_sp, %"struct.GrStyle::DashInfo" }
%class.SkStrokeRec = type { float, float, float, i32 }
%class.sk_sp = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.GrStyle::DashInfo" = type { i32, float, %class.SkAutoSTArray }
%class.SkAutoSTArray = type { i32, float*, [16 x i8] }
%"struct.SkPathEffect::DashInfo" = type { float*, i32, float }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkPath = type <{ %class.sk_sp.1, i32, %"struct.std::__1::atomic.4", %"struct.std::__1::atomic.4", i8, i8 }>
%class.sk_sp.1 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.2, %class.SkTDArray.3, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.SkRect = type { float, float, float, float }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.2 = type { i8*, i32, i32 }
%class.SkTDArray.3 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.9 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.4" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.9 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.10", [3 x i8] }
%"struct.std::__1::atomic.10" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl.12" }
%"struct.std::__1::__cxx_atomic_impl.12" = type { %"struct.std::__1::__cxx_atomic_base_impl.13" }
%"struct.std::__1::__cxx_atomic_base_impl.13" = type { i8 }
%"struct.std::__1::atomic.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl.7" }
%"struct.std::__1::__cxx_atomic_impl.7" = type { %"struct.std::__1::__cxx_atomic_base_impl.8" }
%"struct.std::__1::__cxx_atomic_base_impl.8" = type { i8 }

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN7GrStyle7KeySizeERKS_NS_5ApplyEj(%class.GrStyle* dereferenceable(64), i32, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %0, i64 0, i32 2, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 1
  br i1 %6, label %7, label %11

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %0, i64 0, i32 2, i32 2, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = add nsw i32 %9, 2
  br label %15

11:                                               ; preds = %3
  %12 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %0, i64 0, i32 1, i32 0
  %13 = load %class.SkPathEffect*, %class.SkPathEffect** %12, align 8
  %14 = icmp eq %class.SkPathEffect* %13, null
  br i1 %14, label %15, label %25

15:                                               ; preds = %11, %7
  %16 = phi i32 [ %10, %7 ], [ 0, %11 ]
  %17 = icmp eq i32 %1, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %0, i64 0, i32 0
  %20 = tail call i32 @_ZNK11SkStrokeRec8getStyleEv(%class.SkStrokeRec* %19) #3
  %21 = or i32 %20, 1
  %22 = icmp eq i32 %21, 3
  %23 = add nsw i32 %16, 4
  %24 = select i1 %22, i32 %23, i32 %16
  br label %25

25:                                               ; preds = %15, %11, %18
  %26 = phi i32 [ %24, %18 ], [ -1, %11 ], [ %16, %15 ]
  ret i32 %26
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7GrStyle8WriteKeyEPjRKS_NS_5ApplyEfj(i32* nocapture, %class.GrStyle* dereferenceable(64), i32, float, i32) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %1, i64 0, i32 2, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %25

9:                                                ; preds = %5
  %10 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %1, i64 0, i32 2, i32 1
  %11 = bitcast float* %10 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = bitcast i32* %0 to float*
  store float %3, float* %13, align 4
  %14 = getelementptr inbounds i32, i32* %0, i64 1
  store i32 %12, i32* %14, align 4
  %15 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %1, i64 0, i32 2, i32 2, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %1, i64 0, i32 2, i32 2, i32 1
  %18 = bitcast float** %17 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = shl i32 %16, 2
  %21 = getelementptr inbounds i32, i32* %0, i64 2
  %22 = bitcast i32* %21 to i8*
  %23 = sext i32 %20 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %22, i8* align 4 %19, i64 %23, i1 false)
  %24 = add nsw i32 %16, 2
  br label %25

25:                                               ; preds = %5, %9
  %26 = phi i32 [ %24, %9 ], [ 0, %5 ]
  %27 = icmp eq i32 %2, 1
  br i1 %27, label %28, label %89

28:                                               ; preds = %25
  %29 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %1, i64 0, i32 0
  %30 = tail call i32 @_ZNK11SkStrokeRec8getStyleEv(%class.SkStrokeRec* %29) #3
  %31 = or i32 %30, 1
  %32 = icmp eq i32 %31, 3
  br i1 %32, label %33, label %89

33:                                               ; preds = %28
  %34 = add nsw i32 %26, 1
  %35 = sext i32 %26 to i64
  %36 = getelementptr inbounds i32, i32* %0, i64 %35
  %37 = bitcast i32* %36 to float*
  store float %3, float* %37, align 4
  %38 = and i32 %4, 1
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %44, label %40

40:                                               ; preds = %33
  %41 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %1, i64 0, i32 1, i32 0
  %42 = load %class.SkPathEffect*, %class.SkPathEffect** %41, align 8
  %43 = icmp eq %class.SkPathEffect* %42, null
  br i1 %43, label %49, label %44

44:                                               ; preds = %40, %33
  %45 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %1, i64 0, i32 0, i32 3
  %46 = load i32, i32* %45, align 4
  %47 = shl i32 %46, 4
  %48 = and i32 %47, 1048560
  br label %49

49:                                               ; preds = %40, %44
  %50 = phi i32 [ %48, %44 ], [ 0, %40 ]
  %51 = and i32 %4, 2
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %60, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %1, i64 0, i32 1, i32 0
  %55 = load %class.SkPathEffect*, %class.SkPathEffect** %54, align 8
  %56 = icmp ne %class.SkPathEffect* %55, null
  %57 = load i32, i32* %6, align 8
  %58 = icmp ne i32 %57, 1
  %59 = and i1 %56, %58
  br i1 %59, label %60, label %69

60:                                               ; preds = %53, %49
  %61 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %1, i64 0, i32 0, i32 3
  %62 = load i32, i32* %61, align 4
  %63 = lshr i32 %62, 16
  %64 = trunc i32 %63 to i8
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %66, label %69

66:                                               ; preds = %60
  %67 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %1, i64 0, i32 0, i32 2
  %68 = load float, float* %67, align 4
  br label %69

69:                                               ; preds = %53, %60, %66
  %70 = phi float [ %68, %66 ], [ -1.000000e+00, %60 ], [ -1.000000e+00, %53 ]
  %71 = phi i32 [ 0, %66 ], [ %63, %60 ], [ 0, %53 ]
  %72 = tail call i32 @_ZNK11SkStrokeRec8getStyleEv(%class.SkStrokeRec* %29) #3
  %73 = shl nuw nsw i32 %71, 2
  %74 = and i32 %73, 1020
  %75 = or i32 %72, %50
  %76 = or i32 %75, %74
  %77 = add nsw i32 %26, 2
  %78 = sext i32 %34 to i64
  %79 = getelementptr inbounds i32, i32* %0, i64 %78
  store i32 %76, i32* %79, align 4
  %80 = add nsw i32 %26, 3
  %81 = sext i32 %77 to i64
  %82 = getelementptr inbounds i32, i32* %0, i64 %81
  %83 = bitcast i32* %82 to float*
  store float %70, float* %83, align 4
  %84 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %1, i64 0, i32 0, i32 1
  %85 = bitcast float* %84 to i32*
  %86 = load i32, i32* %85, align 4
  %87 = sext i32 %80 to i64
  %88 = getelementptr inbounds i32, i32* %0, i64 %87
  store i32 %86, i32* %88, align 4
  br label %89

89:                                               ; preds = %69, %28, %25
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare i32 @_ZNK11SkStrokeRec8getStyleEv(%class.SkStrokeRec*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7GrStyle14initPathEffectE5sk_spI12SkPathEffectE(%class.GrStyle*, %class.sk_sp* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.SkPathEffect::DashInfo", align 8
  %4 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %1, i64 0, i32 0
  %5 = load %class.SkPathEffect*, %class.SkPathEffect** %4, align 8
  %6 = icmp eq %class.SkPathEffect* %5, null
  br i1 %6, label %99, label %7

7:                                                ; preds = %2
  %8 = bitcast %"struct.SkPathEffect::DashInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #3
  %9 = getelementptr inbounds %"struct.SkPathEffect::DashInfo", %"struct.SkPathEffect::DashInfo"* %3, i64 0, i32 1
  %10 = getelementptr inbounds %"struct.SkPathEffect::DashInfo", %"struct.SkPathEffect::DashInfo"* %3, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 16, i1 false) #3
  %11 = call i32 @_ZNK12SkPathEffect7asADashEPNS_8DashInfoE(%class.SkPathEffect* nonnull %5, %"struct.SkPathEffect::DashInfo"* nonnull %3) #3
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %80

13:                                               ; preds = %7
  %14 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %0, i64 0, i32 0
  %15 = call i32 @_ZNK11SkStrokeRec8getStyleEv(%class.SkStrokeRec* %14) #3
  %16 = or i32 %15, 2
  %17 = icmp eq i32 %16, 3
  br i1 %17, label %98, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %0, i64 0, i32 2, i32 0
  store i32 1, i32* %19, align 8
  %20 = load i32, i32* %9, align 8
  %21 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %0, i64 0, i32 2, i32 2, i32 1
  %22 = load float*, float** %21, align 8
  %23 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %0, i64 0, i32 2, i32 2, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds float, float* %22, i64 %25
  %27 = ptrtoint float* %22 to i64
  br label %28

28:                                               ; preds = %28, %18
  %29 = phi float* [ %26, %18 ], [ %31, %28 ]
  %30 = icmp ugt float* %29, %22
  %31 = getelementptr inbounds float, float* %29, i64 -1
  br i1 %30, label %28, label %32

32:                                               ; preds = %28
  %33 = bitcast float* %22 to i8*
  %34 = icmp eq i32 %24, %20
  br i1 %34, label %54, label %35

35:                                               ; preds = %32
  %36 = icmp sgt i32 %24, 4
  br i1 %36, label %37, label %38

37:                                               ; preds = %35
  call void @_Z7sk_freePv(i8* %33) #3
  br label %38

38:                                               ; preds = %37, %35
  %39 = icmp sgt i32 %20, 4
  br i1 %39, label %40, label %45

40:                                               ; preds = %38
  %41 = sext i32 %20 to i64
  %42 = call i8* @_Z15sk_malloc_throwmm(i64 %41, i64 4) #3
  %43 = bitcast float** %21 to i8**
  store i8* %42, i8** %43, align 8
  %44 = ptrtoint i8* %42 to i64
  br label %52

45:                                               ; preds = %38
  %46 = icmp sgt i32 %20, 0
  br i1 %46, label %47, label %51

47:                                               ; preds = %45
  %48 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %0, i64 0, i32 2, i32 2, i32 2, i64 0
  %49 = bitcast float** %21 to i8**
  store i8* %48, i8** %49, align 8
  %50 = ptrtoint i8* %48 to i64
  br label %52

51:                                               ; preds = %45
  store float* null, float** %21, align 8
  br label %52

52:                                               ; preds = %51, %47, %40
  %53 = phi i64 [ 0, %51 ], [ %50, %47 ], [ %44, %40 ]
  store i32 %20, i32* %23, align 8
  br label %54

54:                                               ; preds = %32, %52
  %55 = phi i64 [ %27, %32 ], [ %53, %52 ]
  %56 = bitcast float* %10 to i32*
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %0, i64 0, i32 2, i32 1
  %59 = bitcast float* %58 to i32*
  store i32 %57, i32* %59, align 4
  %60 = bitcast %"struct.SkPathEffect::DashInfo"* %3 to i64*
  store i64 %55, i64* %60, align 8
  %61 = load %class.SkPathEffect*, %class.SkPathEffect** %4, align 8
  %62 = call i32 @_ZNK12SkPathEffect7asADashEPNS_8DashInfoE(%class.SkPathEffect* %61, %"struct.SkPathEffect::DashInfo"* nonnull %3) #3
  %63 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %0, i64 0, i32 1
  %64 = bitcast %class.sk_sp* %1 to i64*
  %65 = load i64, i64* %64, align 8
  store %class.SkPathEffect* null, %class.SkPathEffect** %4, align 8
  %66 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %63, i64 0, i32 0
  %67 = load %class.SkPathEffect*, %class.SkPathEffect** %66, align 8
  %68 = bitcast %class.sk_sp* %63 to i64*
  store i64 %65, i64* %68, align 8
  %69 = icmp eq %class.SkPathEffect* %67, null
  br i1 %69, label %98, label %70

70:                                               ; preds = %54
  %71 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %67, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = atomicrmw add i32* %71, i32 -1 acq_rel
  %73 = icmp eq i32 %72, 1
  br i1 %73, label %74, label %98

74:                                               ; preds = %70
  %75 = bitcast %class.SkPathEffect* %67 to %class.SkRefCntBase*
  %76 = bitcast %class.SkPathEffect* %67 to void (%class.SkRefCntBase*)***
  %77 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %76, align 8
  %78 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %77, i64 2
  %79 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %78, align 8
  call void %79(%class.SkRefCntBase* nonnull %75) #3
  br label %98

80:                                               ; preds = %7
  %81 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %0, i64 0, i32 1
  %82 = bitcast %class.sk_sp* %1 to i64*
  %83 = load i64, i64* %82, align 8
  store %class.SkPathEffect* null, %class.SkPathEffect** %4, align 8
  %84 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %81, i64 0, i32 0
  %85 = load %class.SkPathEffect*, %class.SkPathEffect** %84, align 8
  %86 = bitcast %class.sk_sp* %81 to i64*
  store i64 %83, i64* %86, align 8
  %87 = icmp eq %class.SkPathEffect* %85, null
  br i1 %87, label %98, label %88

88:                                               ; preds = %80
  %89 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %85, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = atomicrmw add i32* %89, i32 -1 acq_rel
  %91 = icmp eq i32 %90, 1
  br i1 %91, label %92, label %98

92:                                               ; preds = %88
  %93 = bitcast %class.SkPathEffect* %85 to %class.SkRefCntBase*
  %94 = bitcast %class.SkPathEffect* %85 to void (%class.SkRefCntBase*)***
  %95 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %94, align 8
  %96 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %95, i64 2
  %97 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %96, align 8
  call void %97(%class.SkRefCntBase* nonnull %93) #3
  br label %98

98:                                               ; preds = %92, %88, %80, %74, %70, %54, %13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #3
  br label %99

99:                                               ; preds = %2, %98
  ret void
}

declare i32 @_ZNK12SkPathEffect7asADashEPNS_8DashInfoE(%class.SkPathEffect*, %"struct.SkPathEffect::DashInfo"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK7GrStyle15applyPathEffectEP6SkPathP11SkStrokeRecRKS0_(%class.GrStyle* nocapture readonly, %class.SkPath*, %class.SkStrokeRec*, %class.SkPath* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %5 = alloca float, align 4
  %6 = alloca i32, align 4
  %7 = alloca float, align 4
  %8 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %0, i64 0, i32 1, i32 0
  %9 = load %class.SkPathEffect*, %class.SkPathEffect** %8, align 8
  %10 = icmp eq %class.SkPathEffect* %9, null
  br i1 %10, label %35, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %0, i64 0, i32 2, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %29

15:                                               ; preds = %11
  %16 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %0, i64 0, i32 2, i32 1
  %17 = load float, float* %16, align 4
  %18 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %0, i64 0, i32 2, i32 2, i32 1
  %19 = load float*, float** %18, align 8
  %20 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %0, i64 0, i32 2, i32 2, i32 0
  %21 = load i32, i32* %20, align 8
  %22 = bitcast float* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22) #3
  store float 0xFFFFFFFFE0000000, float* %5, align 4
  %23 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %23) #3
  store i32 -1431655766, i32* %6, align 4
  %24 = bitcast float* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24) #3
  store float 0xFFFFFFFFE0000000, float* %7, align 4
  call void @_ZN10SkDashPath18CalcDashParametersEfPKfiPfPiS2_S2_(float %17, float* %19, i32 %21, float* nonnull %5, i32* nonnull %6, float* nonnull %7, float* null) #3
  %25 = load float, float* %5, align 4
  %26 = load i32, i32* %6, align 4
  %27 = load float, float* %7, align 4
  %28 = call zeroext i1 @_ZN10SkDashPath14InternalFilterEP6SkPathRKS0_P11SkStrokeRecPK6SkRectPKfififNS_20StrokeRecApplicationE(%class.SkPath* %1, %class.SkPath* dereferenceable(16) %3, %class.SkStrokeRec* %2, %struct.SkRect* null, float* %19, i32 %21, float %25, i32 %26, float %27, i32 0) #3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24) #3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %23) #3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22) #3
  br i1 %28, label %31, label %35

29:                                               ; preds = %11
  %30 = tail call zeroext i1 @_ZNK12SkPathEffect10filterPathEP6SkPathRKS0_P11SkStrokeRecPK6SkRect(%class.SkPathEffect* nonnull %9, %class.SkPath* %1, %class.SkPath* dereferenceable(16) %3, %class.SkStrokeRec* %2, %struct.SkRect* null) #3
  br i1 %30, label %31, label %35

31:                                               ; preds = %29, %15
  %32 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 4
  %33 = load i8, i8* %32, align 2
  %34 = or i8 %33, 4
  store i8 %34, i8* %32, align 2
  br label %35

35:                                               ; preds = %4, %29, %15, %31
  %36 = phi i1 [ true, %31 ], [ false, %15 ], [ false, %4 ], [ false, %29 ]
  ret i1 %36
}

declare void @_ZN10SkDashPath18CalcDashParametersEfPKfiPfPiS2_S2_(float, float*, i32, float*, i32*, float*, float*) local_unnamed_addr #2

declare zeroext i1 @_ZN10SkDashPath14InternalFilterEP6SkPathRKS0_P11SkStrokeRecPK6SkRectPKfififNS_20StrokeRecApplicationE(%class.SkPath*, %class.SkPath* dereferenceable(16), %class.SkStrokeRec*, %struct.SkRect*, float*, i32, float, i32, float, i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK12SkPathEffect10filterPathEP6SkPathRKS0_P11SkStrokeRecPK6SkRect(%class.SkPathEffect*, %class.SkPath*, %class.SkPath* dereferenceable(16), %class.SkStrokeRec*, %struct.SkRect*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK7GrStyle21applyPathEffectToPathEP6SkPathP11SkStrokeRecRKS0_f(%class.GrStyle* nocapture readonly, %class.SkPath*, %class.SkStrokeRec* nocapture, %class.SkPath* dereferenceable(16), float) local_unnamed_addr #0 align 2 {
  %6 = alloca %class.SkStrokeRec, align 4
  %7 = bitcast %class.SkStrokeRec* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #3
  %8 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %6, i64 0, i32 0
  %9 = bitcast %class.GrStyle* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %7, i8* align 8 %9, i64 16, i1 false)
  store float %4, float* %8, align 4
  %10 = call zeroext i1 @_ZNK7GrStyle15applyPathEffectEP6SkPathP11SkStrokeRecRKS0_(%class.GrStyle* %0, %class.SkPath* %1, %class.SkStrokeRec* nonnull %6, %class.SkPath* dereferenceable(16) %3)
  br i1 %10, label %11, label %13

11:                                               ; preds = %5
  %12 = bitcast %class.SkStrokeRec* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* nonnull align 4 %7, i64 16, i1 false)
  br label %13

13:                                               ; preds = %5, %11
  %14 = phi i1 [ true, %11 ], [ false, %5 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #3
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK7GrStyle11applyToPathEP6SkPathPN11SkStrokeRec9InitStyleERKS0_f(%class.GrStyle* nocapture readonly, %class.SkPath*, i32* nocapture, %class.SkPath* dereferenceable(16), float) local_unnamed_addr #0 align 2 {
  %6 = alloca %class.SkStrokeRec, align 4
  %7 = bitcast %class.SkStrokeRec* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #3
  %8 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %6, i64 0, i32 0
  %9 = bitcast %class.GrStyle* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %7, i8* align 8 %9, i64 16, i1 false)
  store float %4, float* %8, align 4
  %10 = call zeroext i1 @_ZNK7GrStyle15applyPathEffectEP6SkPathP11SkStrokeRecRKS0_(%class.GrStyle* %0, %class.SkPath* %1, %class.SkStrokeRec* nonnull %6, %class.SkPath* dereferenceable(16) %3)
  br i1 %10, label %15, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %0, i64 0, i32 1, i32 0
  %13 = load %class.SkPathEffect*, %class.SkPathEffect** %12, align 8
  %14 = icmp eq %class.SkPathEffect* %13, null
  br i1 %14, label %15, label %36

15:                                               ; preds = %11, %5
  %16 = phi %class.SkPath* [ %3, %11 ], [ %1, %5 ]
  %17 = call i32 @_ZNK11SkStrokeRec8getStyleEv(%class.SkStrokeRec* nonnull %6) #3
  %18 = or i32 %17, 1
  %19 = icmp eq i32 %18, 3
  br i1 %19, label %20, label %26

20:                                               ; preds = %15
  %21 = call zeroext i1 @_ZNK11SkStrokeRec11applyToPathEP6SkPathRKS0_(%class.SkStrokeRec* nonnull %6, %class.SkPath* %1, %class.SkPath* dereferenceable(16) %16) #3
  br i1 %21, label %22, label %36

22:                                               ; preds = %20
  %23 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 4
  %24 = load i8, i8* %23, align 2
  %25 = or i8 %24, 4
  store i8 %25, i8* %23, align 2
  br label %34

26:                                               ; preds = %15
  %27 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %0, i64 0, i32 1, i32 0
  %28 = load %class.SkPathEffect*, %class.SkPathEffect** %27, align 8
  %29 = icmp eq %class.SkPathEffect* %28, null
  br i1 %29, label %36, label %30

30:                                               ; preds = %26
  %31 = call i32 @_ZNK11SkStrokeRec8getStyleEv(%class.SkStrokeRec* nonnull %6) #3
  %32 = icmp eq i32 %31, 1
  %33 = zext i1 %32 to i32
  br label %34

34:                                               ; preds = %30, %22
  %35 = phi i32 [ %33, %30 ], [ 1, %22 ]
  store i32 %35, i32* %2, align 4
  br label %36

36:                                               ; preds = %26, %11, %20, %34
  %37 = phi i1 [ true, %34 ], [ false, %11 ], [ false, %20 ], [ false, %26 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #3
  ret i1 %37
}

declare zeroext i1 @_ZNK11SkStrokeRec11applyToPathEP6SkPathRKS0_(%class.SkStrokeRec*, %class.SkPath*, %class.SkPath* dereferenceable(16)) local_unnamed_addr #2

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
