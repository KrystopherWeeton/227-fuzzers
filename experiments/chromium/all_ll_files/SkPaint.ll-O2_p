; ModuleID = '../../third_party/skia/src/core/SkPaint.cpp'
source_filename = "../../third_party/skia/src/core/SkPaint.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.SkColorSpaceXformSteps::Flags" = type { i8, i8, i8, i8, i8 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%class.SkPaint = type <{ %class.sk_sp, %class.sk_sp.1, %class.sk_sp.2, %class.sk_sp.3, %class.sk_sp.4, %struct.SkRGBA4f, float, float, %union.anon, [4 x i8] }>
%class.sk_sp = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.1 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.2 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.3 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.4 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon = type { %struct.anon }
%struct.anon = type { i32 }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.5" }
%"struct.std::__1::atomic.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl.8" }
%"struct.std::__1::__cxx_atomic_impl.8" = type { %"struct.std::__1::__cxx_atomic_base_impl.9" }
%"struct.std::__1::__cxx_atomic_base_impl.9" = type { i8 }
%struct.SkColorSpaceXformSteps = type { %"struct.SkColorSpaceXformSteps::Flags", %struct.skcms_TransferFunction, %struct.skcms_TransferFunction, [9 x float] }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkWriteBuffer = type { i32 (...)**, %struct.SkSerialProcs }
%struct.SkSerialProcs = type { void (%class.sk_sp.14*, %class.SkPicture*, i8*)*, i8*, void (%class.sk_sp.14*, %class.SkImage*, i8*)*, i8*, void (%class.sk_sp.14*, %class.SkTypeface*, i8*)*, i8* }
%class.sk_sp.14 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.15, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.15 = type { %"struct.std::__1::atomic" }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.10", [7 x i8] }>
%"struct.std::__1::atomic.10" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl.12" }
%"struct.std::__1::__cxx_atomic_impl.12" = type { %"struct.std::__1::__cxx_atomic_base_impl.13" }
%"struct.std::__1::__cxx_atomic_base_impl.13" = type { i8 }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.16, i32, i32 }
%class.sk_sp.16 = type { %class.SkColorSpace* }
%struct.SkISize = type { i32, i32 }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkFlattenable = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkReadBuffer = type <{ i8*, i8*, i8*, %class.SkTHashMap, i32, [4 x i8], %class.sk_sp.18*, i32, [4 x i8], void (%class.sk_sp.19*, %class.SkReadBuffer*)**, i32, [4 x i8], %struct.SkDeserialProcs, i8, [7 x i8] }>
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, void (%class.sk_sp.19*, %class.SkReadBuffer*)* }
%class.sk_sp.19 = type { %class.SkFlattenable* }
%class.sk_sp.18 = type { %class.SkTypeface* }
%struct.SkDeserialProcs = type { void (%class.sk_sp.20*, i8*, i64, i8*)*, i8*, void (%class.sk_sp.21*, i8*, i64, i8*)*, i8*, void (%class.sk_sp.18*, i8*, i64, i8*)*, i8* }
%class.sk_sp.20 = type { %class.SkPicture* }
%class.sk_sp.21 = type { %class.SkImage* }
%class.SkFont = type <{ %class.sk_sp.18, float, float, float, i8, i8, i8, i8 }>
%class.SkPath = type <{ %class.sk_sp.22, i32, %"struct.std::__1::atomic.5", %"struct.std::__1::atomic.5", i8, i8 }>
%class.sk_sp.22 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt.23, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.24, %class.SkTDArray.25, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt.23 = type { %"struct.std::__1::atomic" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.24 = type { i8*, i32, i32 }
%class.SkTDArray.25 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.26 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.26 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.10", [3 x i8] }
%class.SkStrokeRec = type { float, float, float, i32 }
%class.SkPathEffectBase = type { %class.SkPathEffect.base, [4 x i8] }
%class.SkPathEffect.base = type { %class.SkFlattenable.base }
%class.SkMaskFilterBase = type { %class.SkMaskFilter.base, [4 x i8] }
%class.SkMaskFilter.base = type { %class.SkFlattenable.base }

@__const._ZN7SkPaint8setColorERK8SkRGBA4fIL11SkAlphaType3EEP12SkColorSpace.steps = private unnamed_addr constant { %"struct.SkColorSpaceXformSteps::Flags", [3 x i8], %struct.skcms_TransferFunction, %struct.skcms_TransferFunction, [9 x float] } { %"struct.SkColorSpaceXformSteps::Flags" { i8 -86, i8 -86, i8 -86, i8 -86, i8 -86 }, [3 x i8] c"\AA\AA\AA", %struct.skcms_TransferFunction { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.skcms_TransferFunction { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, align 4
@_ZN6SkOpts7hash_fnE = external local_unnamed_addr global i32 (i8*, i64, i32)*, align 8

@_ZN7SkPaintC1Ev = hidden unnamed_addr alias void (%class.SkPaint*), void (%class.SkPaint*)* @_ZN7SkPaintC2Ev
@_ZN7SkPaintC1ERK8SkRGBA4fIL11SkAlphaType3EEP12SkColorSpace = hidden unnamed_addr alias void (%class.SkPaint*, %struct.SkRGBA4f*, %class.SkColorSpace*), void (%class.SkPaint*, %struct.SkRGBA4f*, %class.SkColorSpace*)* @_ZN7SkPaintC2ERK8SkRGBA4fIL11SkAlphaType3EEP12SkColorSpace
@_ZN7SkPaintC1ERKS_ = hidden unnamed_addr alias void (%class.SkPaint*, %class.SkPaint*), void (%class.SkPaint*, %class.SkPaint*)* @_ZN7SkPaintC2ERKS_
@_ZN7SkPaintC1EOS_ = hidden unnamed_addr alias void (%class.SkPaint*, %class.SkPaint*), void (%class.SkPaint*, %class.SkPaint*)* @_ZN7SkPaintC2EOS_
@_ZN7SkPaintD1Ev = hidden unnamed_addr alias void (%class.SkPaint*), void (%class.SkPaint*)* @_ZN7SkPaintD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7SkPaintC2Ev(%class.SkPaint* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 5, i32 3
  %3 = bitcast %class.SkPaint* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 52, i1 false)
  store float 1.000000e+00, float* %2, align 4
  %4 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 6
  store float 0.000000e+00, float* %4, align 8
  %5 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 7
  store float 4.000000e+00, float* %5, align 4
  %6 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 8, i32 0, i32 0
  store i32 3072, i32* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7SkPaintC2ERK8SkRGBA4fIL11SkAlphaType3EEP12SkColorSpace(%class.SkPaint*, %struct.SkRGBA4f* nocapture readonly dereferenceable(16), %class.SkColorSpace*) unnamed_addr #1 align 2 {
  %4 = alloca %struct.SkColorSpaceXformSteps, align 4
  %5 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 5, i32 3
  %6 = bitcast %class.SkPaint* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 52, i1 false) #8
  store float 1.000000e+00, float* %5, align 4
  %7 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 6
  store float 0.000000e+00, float* %7, align 8
  %8 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 7
  store float 4.000000e+00, float* %8, align 4
  %9 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 8, i32 0, i32 0
  store i32 3072, i32* %9, align 8
  %10 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %4, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 100, i8* nonnull %10) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %10, i8* align 4 getelementptr inbounds ({ %"struct.SkColorSpaceXformSteps::Flags", [3 x i8], %struct.skcms_TransferFunction, %struct.skcms_TransferFunction, [9 x float] }, { %"struct.SkColorSpaceXformSteps::Flags", [3 x i8], %struct.skcms_TransferFunction, %struct.skcms_TransferFunction, [9 x float] }* @__const._ZN7SkPaint8setColorERK8SkRGBA4fIL11SkAlphaType3EEP12SkColorSpace.steps, i64 0, i32 0, i32 0), i64 100, i1 false) #8
  %11 = tail call %class.SkColorSpace* @_Z17sk_srgb_singletonv() #8
  call void @_ZN22SkColorSpaceXformStepsC1EPK12SkColorSpace11SkAlphaTypeS2_S3_(%struct.SkColorSpaceXformSteps* nonnull %4, %class.SkColorSpace* %2, i32 3, %class.SkColorSpace* %11, i32 3) #8
  %12 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 5
  %13 = bitcast %struct.SkRGBA4f* %12 to i8*
  %14 = bitcast %struct.SkRGBA4f* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 4 %14, i64 16, i1 false) #8
  %15 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %12, i64 0, i32 0
  call void @_ZNK22SkColorSpaceXformSteps5applyEPf(%struct.SkColorSpaceXformSteps* nonnull %4, float* %15) #8
  call void @llvm.lifetime.end.p0i8(i64 100, i8* nonnull %10) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7SkPaint8setColorERK8SkRGBA4fIL11SkAlphaType3EEP12SkColorSpace(%class.SkPaint*, %struct.SkRGBA4f* nocapture readonly dereferenceable(16), %class.SkColorSpace*) local_unnamed_addr #1 align 2 {
  %4 = alloca %struct.SkColorSpaceXformSteps, align 4
  %5 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %4, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 100, i8* nonnull %5) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %5, i8* align 4 getelementptr inbounds ({ %"struct.SkColorSpaceXformSteps::Flags", [3 x i8], %struct.skcms_TransferFunction, %struct.skcms_TransferFunction, [9 x float] }, { %"struct.SkColorSpaceXformSteps::Flags", [3 x i8], %struct.skcms_TransferFunction, %struct.skcms_TransferFunction, [9 x float] }* @__const._ZN7SkPaint8setColorERK8SkRGBA4fIL11SkAlphaType3EEP12SkColorSpace.steps, i64 0, i32 0, i32 0), i64 100, i1 false)
  %6 = tail call %class.SkColorSpace* @_Z17sk_srgb_singletonv() #8
  call void @_ZN22SkColorSpaceXformStepsC1EPK12SkColorSpace11SkAlphaTypeS2_S3_(%struct.SkColorSpaceXformSteps* nonnull %4, %class.SkColorSpace* %2, i32 3, %class.SkColorSpace* %6, i32 3) #8
  %7 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 5
  %8 = bitcast %struct.SkRGBA4f* %7 to i8*
  %9 = bitcast %struct.SkRGBA4f* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 4 %9, i64 16, i1 false)
  %10 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %7, i64 0, i32 0
  call void @_ZNK22SkColorSpaceXformSteps5applyEPf(%struct.SkColorSpaceXformSteps* nonnull %4, float* %10) #8
  call void @llvm.lifetime.end.p0i8(i64 100, i8* nonnull %5) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7SkPaintC2ERKS_(%class.SkPaint* nocapture, %class.SkPaint* nocapture readonly dereferenceable(72)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 0, i32 0
  %5 = load %class.SkPathEffect*, %class.SkPathEffect** %4, align 8
  %6 = icmp eq %class.SkPathEffect* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 1 monotonic
  br label %10

10:                                               ; preds = %2, %7
  store %class.SkPathEffect* %5, %class.SkPathEffect** %3, align 8
  %11 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 1, i32 0
  %12 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 1, i32 0
  %13 = load %class.SkShader*, %class.SkShader** %12, align 8
  %14 = icmp eq %class.SkShader* %13, null
  br i1 %14, label %18, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %class.SkShader, %class.SkShader* %13, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 1 monotonic
  br label %18

18:                                               ; preds = %10, %15
  store %class.SkShader* %13, %class.SkShader** %11, align 8
  %19 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 2, i32 0
  %20 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 2, i32 0
  %21 = load %class.SkMaskFilter*, %class.SkMaskFilter** %20, align 8
  %22 = icmp eq %class.SkMaskFilter* %21, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %21, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw add i32* %24, i32 1 monotonic
  br label %26

26:                                               ; preds = %18, %23
  store %class.SkMaskFilter* %21, %class.SkMaskFilter** %19, align 8
  %27 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 3, i32 0
  %28 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 3, i32 0
  %29 = load %class.SkColorFilter*, %class.SkColorFilter** %28, align 8
  %30 = icmp eq %class.SkColorFilter* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %29, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = atomicrmw add i32* %32, i32 1 monotonic
  br label %34

34:                                               ; preds = %26, %31
  store %class.SkColorFilter* %29, %class.SkColorFilter** %27, align 8
  %35 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 4, i32 0
  %36 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 4, i32 0
  %37 = load %class.SkImageFilter*, %class.SkImageFilter** %36, align 8
  %38 = icmp eq %class.SkImageFilter* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %37, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw add i32* %40, i32 1 monotonic
  br label %42

42:                                               ; preds = %34, %39
  store %class.SkImageFilter* %37, %class.SkImageFilter** %35, align 8
  %43 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 5
  %44 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 5
  %45 = bitcast %struct.SkRGBA4f* %43 to i8*
  %46 = bitcast %struct.SkRGBA4f* %44 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %46, i64 28, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7SkPaintC2EOS_(%class.SkPaint* nocapture, %class.SkPaint* nocapture dereferenceable(72)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 0, i32 0
  %4 = bitcast %class.SkPaint* %1 to i64*
  %5 = load i64, i64* %4, align 8
  store %class.SkPathEffect* null, %class.SkPathEffect** %3, align 8
  %6 = bitcast %class.SkPaint* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 1
  %8 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 1
  %9 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %8, i64 0, i32 0
  %10 = bitcast %class.sk_sp.1* %8 to i64*
  %11 = load i64, i64* %10, align 8
  store %class.SkShader* null, %class.SkShader** %9, align 8
  %12 = bitcast %class.sk_sp.1* %7 to i64*
  store i64 %11, i64* %12, align 8
  %13 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 2
  %14 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 2
  %15 = getelementptr inbounds %class.sk_sp.2, %class.sk_sp.2* %14, i64 0, i32 0
  %16 = bitcast %class.sk_sp.2* %14 to i64*
  %17 = load i64, i64* %16, align 8
  store %class.SkMaskFilter* null, %class.SkMaskFilter** %15, align 8
  %18 = bitcast %class.sk_sp.2* %13 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 3
  %20 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 3
  %21 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %20, i64 0, i32 0
  %22 = bitcast %class.sk_sp.3* %20 to i64*
  %23 = load i64, i64* %22, align 8
  store %class.SkColorFilter* null, %class.SkColorFilter** %21, align 8
  %24 = bitcast %class.sk_sp.3* %19 to i64*
  store i64 %23, i64* %24, align 8
  %25 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 4
  %26 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 4
  %27 = getelementptr inbounds %class.sk_sp.4, %class.sk_sp.4* %26, i64 0, i32 0
  %28 = bitcast %class.sk_sp.4* %26 to i64*
  %29 = load i64, i64* %28, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %27, align 8
  %30 = bitcast %class.sk_sp.4* %25 to i64*
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 5
  %32 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 5
  %33 = bitcast %struct.SkRGBA4f* %31 to i8*
  %34 = bitcast %struct.SkRGBA4f* %32 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %34, i64 28, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7SkPaintD2Ev(%class.SkPaint* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 4, i32 0
  %3 = load %class.SkImageFilter*, %class.SkImageFilter** %2, align 8
  %4 = icmp eq %class.SkImageFilter* %3, null
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw add i32* %6, i32 -1 acq_rel
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %15

9:                                                ; preds = %5
  %10 = bitcast %class.SkImageFilter* %3 to %class.SkRefCntBase*
  %11 = bitcast %class.SkImageFilter* %3 to void (%class.SkRefCntBase*)***
  %12 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %11, align 8
  %13 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %12, i64 2
  %14 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, align 8
  tail call void %14(%class.SkRefCntBase* nonnull %10) #8
  br label %15

15:                                               ; preds = %1, %5, %9
  %16 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 3, i32 0
  %17 = load %class.SkColorFilter*, %class.SkColorFilter** %16, align 8
  %18 = icmp eq %class.SkColorFilter* %17, null
  br i1 %18, label %29, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %17, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw add i32* %20, i32 -1 acq_rel
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %29

23:                                               ; preds = %19
  %24 = bitcast %class.SkColorFilter* %17 to %class.SkRefCntBase*
  %25 = bitcast %class.SkColorFilter* %17 to void (%class.SkRefCntBase*)***
  %26 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %25, align 8
  %27 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %26, i64 2
  %28 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, align 8
  tail call void %28(%class.SkRefCntBase* nonnull %24) #8
  br label %29

29:                                               ; preds = %15, %19, %23
  %30 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 2, i32 0
  %31 = load %class.SkMaskFilter*, %class.SkMaskFilter** %30, align 8
  %32 = icmp eq %class.SkMaskFilter* %31, null
  br i1 %32, label %43, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %31, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = atomicrmw add i32* %34, i32 -1 acq_rel
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %37, label %43

37:                                               ; preds = %33
  %38 = bitcast %class.SkMaskFilter* %31 to %class.SkRefCntBase*
  %39 = bitcast %class.SkMaskFilter* %31 to void (%class.SkRefCntBase*)***
  %40 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %39, align 8
  %41 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %40, i64 2
  %42 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %41, align 8
  tail call void %42(%class.SkRefCntBase* nonnull %38) #8
  br label %43

43:                                               ; preds = %29, %33, %37
  %44 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 1, i32 0
  %45 = load %class.SkShader*, %class.SkShader** %44, align 8
  %46 = icmp eq %class.SkShader* %45, null
  br i1 %46, label %57, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %class.SkShader, %class.SkShader* %45, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = atomicrmw add i32* %48, i32 -1 acq_rel
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %51, label %57

51:                                               ; preds = %47
  %52 = bitcast %class.SkShader* %45 to %class.SkRefCntBase*
  %53 = bitcast %class.SkShader* %45 to void (%class.SkRefCntBase*)***
  %54 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %53, align 8
  %55 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %54, i64 2
  %56 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %55, align 8
  tail call void %56(%class.SkRefCntBase* nonnull %52) #8
  br label %57

57:                                               ; preds = %43, %47, %51
  %58 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 0, i32 0
  %59 = load %class.SkPathEffect*, %class.SkPathEffect** %58, align 8
  %60 = icmp eq %class.SkPathEffect* %59, null
  br i1 %60, label %71, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %59, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = atomicrmw add i32* %62, i32 -1 acq_rel
  %64 = icmp eq i32 %63, 1
  br i1 %64, label %65, label %71

65:                                               ; preds = %61
  %66 = bitcast %class.SkPathEffect* %59 to %class.SkRefCntBase*
  %67 = bitcast %class.SkPathEffect* %59 to void (%class.SkRefCntBase*)***
  %68 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %67, align 8
  %69 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %68, i64 2
  %70 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %69, align 8
  tail call void %70(%class.SkRefCntBase* nonnull %66) #8
  br label %71

71:                                               ; preds = %57, %61, %65
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(72) %class.SkPaint* @_ZN7SkPaintaSERKS_(%class.SkPaint* returned, %class.SkPaint* readonly dereferenceable(72)) local_unnamed_addr #1 align 2 {
  %3 = icmp eq %class.SkPaint* %0, %1
  br i1 %3, label %109, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 0, i32 0
  %6 = load %class.SkPathEffect*, %class.SkPathEffect** %5, align 8
  %7 = icmp eq %class.SkPathEffect* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw add i32* %9, i32 1 monotonic
  br label %11

11:                                               ; preds = %8, %4
  %12 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 0, i32 0
  %13 = load %class.SkPathEffect*, %class.SkPathEffect** %12, align 8
  store %class.SkPathEffect* %6, %class.SkPathEffect** %12, align 8
  %14 = icmp eq %class.SkPathEffect* %13, null
  br i1 %14, label %25, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %13, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 -1 acq_rel
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %25

19:                                               ; preds = %15
  %20 = bitcast %class.SkPathEffect* %13 to %class.SkRefCntBase*
  %21 = bitcast %class.SkPathEffect* %13 to void (%class.SkRefCntBase*)***
  %22 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %22, i64 2
  %24 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %23, align 8
  tail call void %24(%class.SkRefCntBase* nonnull %20) #8
  br label %25

25:                                               ; preds = %11, %15, %19
  %26 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 1, i32 0
  %27 = load %class.SkShader*, %class.SkShader** %26, align 8
  %28 = icmp eq %class.SkShader* %27, null
  br i1 %28, label %32, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %class.SkShader, %class.SkShader* %27, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw add i32* %30, i32 1 monotonic
  br label %32

32:                                               ; preds = %29, %25
  %33 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 1, i32 0
  %34 = load %class.SkShader*, %class.SkShader** %33, align 8
  store %class.SkShader* %27, %class.SkShader** %33, align 8
  %35 = icmp eq %class.SkShader* %34, null
  br i1 %35, label %46, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %class.SkShader, %class.SkShader* %34, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = atomicrmw add i32* %37, i32 -1 acq_rel
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %40, label %46

40:                                               ; preds = %36
  %41 = bitcast %class.SkShader* %34 to %class.SkRefCntBase*
  %42 = bitcast %class.SkShader* %34 to void (%class.SkRefCntBase*)***
  %43 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %42, align 8
  %44 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %43, i64 2
  %45 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %44, align 8
  tail call void %45(%class.SkRefCntBase* nonnull %41) #8
  br label %46

46:                                               ; preds = %32, %36, %40
  %47 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 2, i32 0
  %48 = load %class.SkMaskFilter*, %class.SkMaskFilter** %47, align 8
  %49 = icmp eq %class.SkMaskFilter* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %48, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = atomicrmw add i32* %51, i32 1 monotonic
  br label %53

53:                                               ; preds = %50, %46
  %54 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 2, i32 0
  %55 = load %class.SkMaskFilter*, %class.SkMaskFilter** %54, align 8
  store %class.SkMaskFilter* %48, %class.SkMaskFilter** %54, align 8
  %56 = icmp eq %class.SkMaskFilter* %55, null
  br i1 %56, label %67, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %55, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = atomicrmw add i32* %58, i32 -1 acq_rel
  %60 = icmp eq i32 %59, 1
  br i1 %60, label %61, label %67

61:                                               ; preds = %57
  %62 = bitcast %class.SkMaskFilter* %55 to %class.SkRefCntBase*
  %63 = bitcast %class.SkMaskFilter* %55 to void (%class.SkRefCntBase*)***
  %64 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %63, align 8
  %65 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %64, i64 2
  %66 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %65, align 8
  tail call void %66(%class.SkRefCntBase* nonnull %62) #8
  br label %67

67:                                               ; preds = %53, %57, %61
  %68 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 3, i32 0
  %69 = load %class.SkColorFilter*, %class.SkColorFilter** %68, align 8
  %70 = icmp eq %class.SkColorFilter* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %69, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = atomicrmw add i32* %72, i32 1 monotonic
  br label %74

74:                                               ; preds = %71, %67
  %75 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 3, i32 0
  %76 = load %class.SkColorFilter*, %class.SkColorFilter** %75, align 8
  store %class.SkColorFilter* %69, %class.SkColorFilter** %75, align 8
  %77 = icmp eq %class.SkColorFilter* %76, null
  br i1 %77, label %88, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %76, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = atomicrmw add i32* %79, i32 -1 acq_rel
  %81 = icmp eq i32 %80, 1
  br i1 %81, label %82, label %88

82:                                               ; preds = %78
  %83 = bitcast %class.SkColorFilter* %76 to %class.SkRefCntBase*
  %84 = bitcast %class.SkColorFilter* %76 to void (%class.SkRefCntBase*)***
  %85 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %84, align 8
  %86 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %85, i64 2
  %87 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %86, align 8
  tail call void %87(%class.SkRefCntBase* nonnull %83) #8
  br label %88

88:                                               ; preds = %74, %78, %82
  %89 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 4, i32 0
  %90 = load %class.SkImageFilter*, %class.SkImageFilter** %89, align 8
  %91 = icmp eq %class.SkImageFilter* %90, null
  br i1 %91, label %95, label %92

92:                                               ; preds = %88
  %93 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %90, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = atomicrmw add i32* %93, i32 1 monotonic
  br label %95

95:                                               ; preds = %92, %88
  %96 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 4, i32 0
  %97 = load %class.SkImageFilter*, %class.SkImageFilter** %96, align 8
  store %class.SkImageFilter* %90, %class.SkImageFilter** %96, align 8
  %98 = icmp eq %class.SkImageFilter* %97, null
  br i1 %98, label %109, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %97, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = atomicrmw add i32* %100, i32 -1 acq_rel
  %102 = icmp eq i32 %101, 1
  br i1 %102, label %103, label %109

103:                                              ; preds = %99
  %104 = bitcast %class.SkImageFilter* %97 to %class.SkRefCntBase*
  %105 = bitcast %class.SkImageFilter* %97 to void (%class.SkRefCntBase*)***
  %106 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %105, align 8
  %107 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %106, i64 2
  %108 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %107, align 8
  tail call void %108(%class.SkRefCntBase* nonnull %104) #8
  br label %109

109:                                              ; preds = %2, %95, %99, %103
  %110 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 5
  %111 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 5
  %112 = bitcast %struct.SkRGBA4f* %110 to i8*
  %113 = bitcast %struct.SkRGBA4f* %111 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %112, i8* align 8 %113, i64 28, i1 false)
  ret %class.SkPaint* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(72) %class.SkPaint* @_ZN7SkPaintaSEOS_(%class.SkPaint* returned, %class.SkPaint* nocapture dereferenceable(72)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 0, i32 0
  %4 = bitcast %class.SkPaint* %1 to i64*
  %5 = load i64, i64* %4, align 8
  store %class.SkPathEffect* null, %class.SkPathEffect** %3, align 8
  %6 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 0, i32 0
  %7 = load %class.SkPathEffect*, %class.SkPathEffect** %6, align 8
  %8 = bitcast %class.SkPaint* %0 to i64*
  store i64 %5, i64* %8, align 8
  %9 = icmp eq %class.SkPathEffect* %7, null
  br i1 %9, label %20, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw add i32* %11, i32 -1 acq_rel
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %14, label %20

14:                                               ; preds = %10
  %15 = bitcast %class.SkPathEffect* %7 to %class.SkRefCntBase*
  %16 = bitcast %class.SkPathEffect* %7 to void (%class.SkRefCntBase*)***
  %17 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %16, align 8
  %18 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %17, i64 2
  %19 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %18, align 8
  tail call void %19(%class.SkRefCntBase* nonnull %15) #8
  br label %20

20:                                               ; preds = %2, %10, %14
  %21 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 1
  %22 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 1
  %23 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %22, i64 0, i32 0
  %24 = bitcast %class.sk_sp.1* %22 to i64*
  %25 = load i64, i64* %24, align 8
  store %class.SkShader* null, %class.SkShader** %23, align 8
  %26 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %21, i64 0, i32 0
  %27 = load %class.SkShader*, %class.SkShader** %26, align 8
  %28 = bitcast %class.sk_sp.1* %21 to i64*
  store i64 %25, i64* %28, align 8
  %29 = icmp eq %class.SkShader* %27, null
  br i1 %29, label %40, label %30

30:                                               ; preds = %20
  %31 = getelementptr inbounds %class.SkShader, %class.SkShader* %27, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw add i32* %31, i32 -1 acq_rel
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %40

34:                                               ; preds = %30
  %35 = bitcast %class.SkShader* %27 to %class.SkRefCntBase*
  %36 = bitcast %class.SkShader* %27 to void (%class.SkRefCntBase*)***
  %37 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %36, align 8
  %38 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %37, i64 2
  %39 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %38, align 8
  tail call void %39(%class.SkRefCntBase* nonnull %35) #8
  br label %40

40:                                               ; preds = %20, %30, %34
  %41 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 2
  %42 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 2
  %43 = getelementptr inbounds %class.sk_sp.2, %class.sk_sp.2* %42, i64 0, i32 0
  %44 = bitcast %class.sk_sp.2* %42 to i64*
  %45 = load i64, i64* %44, align 8
  store %class.SkMaskFilter* null, %class.SkMaskFilter** %43, align 8
  %46 = getelementptr inbounds %class.sk_sp.2, %class.sk_sp.2* %41, i64 0, i32 0
  %47 = load %class.SkMaskFilter*, %class.SkMaskFilter** %46, align 8
  %48 = bitcast %class.sk_sp.2* %41 to i64*
  store i64 %45, i64* %48, align 8
  %49 = icmp eq %class.SkMaskFilter* %47, null
  br i1 %49, label %60, label %50

50:                                               ; preds = %40
  %51 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %47, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = atomicrmw add i32* %51, i32 -1 acq_rel
  %53 = icmp eq i32 %52, 1
  br i1 %53, label %54, label %60

54:                                               ; preds = %50
  %55 = bitcast %class.SkMaskFilter* %47 to %class.SkRefCntBase*
  %56 = bitcast %class.SkMaskFilter* %47 to void (%class.SkRefCntBase*)***
  %57 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %56, align 8
  %58 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %57, i64 2
  %59 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %58, align 8
  tail call void %59(%class.SkRefCntBase* nonnull %55) #8
  br label %60

60:                                               ; preds = %40, %50, %54
  %61 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 3
  %62 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 3
  %63 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %62, i64 0, i32 0
  %64 = bitcast %class.sk_sp.3* %62 to i64*
  %65 = load i64, i64* %64, align 8
  store %class.SkColorFilter* null, %class.SkColorFilter** %63, align 8
  %66 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %61, i64 0, i32 0
  %67 = load %class.SkColorFilter*, %class.SkColorFilter** %66, align 8
  %68 = bitcast %class.sk_sp.3* %61 to i64*
  store i64 %65, i64* %68, align 8
  %69 = icmp eq %class.SkColorFilter* %67, null
  br i1 %69, label %80, label %70

70:                                               ; preds = %60
  %71 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %67, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = atomicrmw add i32* %71, i32 -1 acq_rel
  %73 = icmp eq i32 %72, 1
  br i1 %73, label %74, label %80

74:                                               ; preds = %70
  %75 = bitcast %class.SkColorFilter* %67 to %class.SkRefCntBase*
  %76 = bitcast %class.SkColorFilter* %67 to void (%class.SkRefCntBase*)***
  %77 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %76, align 8
  %78 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %77, i64 2
  %79 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %78, align 8
  tail call void %79(%class.SkRefCntBase* nonnull %75) #8
  br label %80

80:                                               ; preds = %60, %70, %74
  %81 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 4
  %82 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 4
  %83 = getelementptr inbounds %class.sk_sp.4, %class.sk_sp.4* %82, i64 0, i32 0
  %84 = bitcast %class.sk_sp.4* %82 to i64*
  %85 = load i64, i64* %84, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %83, align 8
  %86 = getelementptr inbounds %class.sk_sp.4, %class.sk_sp.4* %81, i64 0, i32 0
  %87 = load %class.SkImageFilter*, %class.SkImageFilter** %86, align 8
  %88 = bitcast %class.sk_sp.4* %81 to i64*
  store i64 %85, i64* %88, align 8
  %89 = icmp eq %class.SkImageFilter* %87, null
  br i1 %89, label %100, label %90

90:                                               ; preds = %80
  %91 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %87, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = atomicrmw add i32* %91, i32 -1 acq_rel
  %93 = icmp eq i32 %92, 1
  br i1 %93, label %94, label %100

94:                                               ; preds = %90
  %95 = bitcast %class.SkImageFilter* %87 to %class.SkRefCntBase*
  %96 = bitcast %class.SkImageFilter* %87 to void (%class.SkRefCntBase*)***
  %97 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %96, align 8
  %98 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %97, i64 2
  %99 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %98, align 8
  tail call void %99(%class.SkRefCntBase* nonnull %95) #8
  br label %100

100:                                              ; preds = %80, %90, %94
  %101 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 5
  %102 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 5
  %103 = bitcast %struct.SkRGBA4f* %101 to i8*
  %104 = bitcast %struct.SkRGBA4f* %102 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %103, i8* align 8 %104, i64 28, i1 false)
  ret %class.SkPaint* %0
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZeqRK7SkPaintS1_(%class.SkPaint* nocapture readonly dereferenceable(72), %class.SkPaint* nocapture readonly dereferenceable(72)) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 0, i32 0
  %4 = load %class.SkPathEffect*, %class.SkPathEffect** %3, align 8
  %5 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 0, i32 0
  %6 = load %class.SkPathEffect*, %class.SkPathEffect** %5, align 8
  %7 = icmp eq %class.SkPathEffect* %4, %6
  br i1 %7, label %8, label %74

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 1, i32 0
  %10 = load %class.SkShader*, %class.SkShader** %9, align 8
  %11 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 1, i32 0
  %12 = load %class.SkShader*, %class.SkShader** %11, align 8
  %13 = icmp eq %class.SkShader* %10, %12
  br i1 %13, label %14, label %74

14:                                               ; preds = %8
  %15 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 2, i32 0
  %16 = load %class.SkMaskFilter*, %class.SkMaskFilter** %15, align 8
  %17 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 2, i32 0
  %18 = load %class.SkMaskFilter*, %class.SkMaskFilter** %17, align 8
  %19 = icmp eq %class.SkMaskFilter* %16, %18
  br i1 %19, label %20, label %74

20:                                               ; preds = %14
  %21 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 3, i32 0
  %22 = load %class.SkColorFilter*, %class.SkColorFilter** %21, align 8
  %23 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 3, i32 0
  %24 = load %class.SkColorFilter*, %class.SkColorFilter** %23, align 8
  %25 = icmp eq %class.SkColorFilter* %22, %24
  br i1 %25, label %26, label %74

26:                                               ; preds = %20
  %27 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 4, i32 0
  %28 = load %class.SkImageFilter*, %class.SkImageFilter** %27, align 8
  %29 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 4, i32 0
  %30 = load %class.SkImageFilter*, %class.SkImageFilter** %29, align 8
  %31 = icmp eq %class.SkImageFilter* %28, %30
  br i1 %31, label %32, label %74

32:                                               ; preds = %26
  %33 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 5, i32 3
  %34 = load float, float* %33, align 4
  %35 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 5, i32 3
  %36 = load float, float* %35, align 4
  %37 = fcmp oeq float %34, %36
  br i1 %37, label %38, label %74

38:                                               ; preds = %32
  %39 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 5, i32 0
  %40 = load float, float* %39, align 4
  %41 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 5, i32 0
  %42 = load float, float* %41, align 4
  %43 = fcmp oeq float %40, %42
  br i1 %43, label %44, label %74

44:                                               ; preds = %38
  %45 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 5, i32 1
  %46 = load float, float* %45, align 4
  %47 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 5, i32 1
  %48 = load float, float* %47, align 4
  %49 = fcmp oeq float %46, %48
  br i1 %49, label %50, label %74

50:                                               ; preds = %44
  %51 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 5, i32 2
  %52 = load float, float* %51, align 4
  %53 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 5, i32 2
  %54 = load float, float* %53, align 4
  %55 = fcmp oeq float %52, %54
  br i1 %55, label %56, label %74

56:                                               ; preds = %50
  %57 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 6
  %58 = load float, float* %57, align 8
  %59 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 6
  %60 = load float, float* %59, align 8
  %61 = fcmp oeq float %58, %60
  br i1 %61, label %62, label %74

62:                                               ; preds = %56
  %63 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 7
  %64 = load float, float* %63, align 4
  %65 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 7
  %66 = load float, float* %65, align 4
  %67 = fcmp oeq float %64, %66
  br i1 %67, label %68, label %74

68:                                               ; preds = %62
  %69 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 8, i32 0, i32 0
  %70 = load i32, i32* %69, align 8
  %71 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 8, i32 0, i32 0
  %72 = load i32, i32* %71, align 8
  %73 = icmp eq i32 %70, %72
  br label %74

74:                                               ; preds = %32, %38, %44, %68, %62, %56, %50, %26, %20, %14, %8, %2
  %75 = phi i1 [ false, %62 ], [ false, %56 ], [ false, %50 ], [ false, %26 ], [ false, %20 ], [ false, %14 ], [ false, %8 ], [ false, %2 ], [ %73, %68 ], [ false, %44 ], [ false, %38 ], [ false, %32 ]
  ret i1 %75
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK7SkPaint14refColorFilterEv(%class.sk_sp.3* noalias nocapture sret, %class.SkPaint* nocapture readonly) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %0, i64 0, i32 0
  %4 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 3, i32 0
  %5 = load %class.SkColorFilter*, %class.SkColorFilter** %4, align 8
  %6 = icmp eq %class.SkColorFilter* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 1 monotonic
  br label %10

10:                                               ; preds = %2, %7
  store %class.SkColorFilter* %5, %class.SkColorFilter** %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK7SkPaint14refImageFilterEv(%class.sk_sp.4* noalias nocapture sret, %class.SkPaint* nocapture readonly) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %class.sk_sp.4, %class.sk_sp.4* %0, i64 0, i32 0
  %4 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 4, i32 0
  %5 = load %class.SkImageFilter*, %class.SkImageFilter** %4, align 8
  %6 = icmp eq %class.SkImageFilter* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 1 monotonic
  br label %10

10:                                               ; preds = %2, %7
  store %class.SkImageFilter* %5, %class.SkImageFilter** %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK7SkPaint13refMaskFilterEv(%class.sk_sp.2* noalias nocapture sret, %class.SkPaint* nocapture readonly) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %class.sk_sp.2, %class.sk_sp.2* %0, i64 0, i32 0
  %4 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 2, i32 0
  %5 = load %class.SkMaskFilter*, %class.SkMaskFilter** %4, align 8
  %6 = icmp eq %class.SkMaskFilter* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 1 monotonic
  br label %10

10:                                               ; preds = %2, %7
  store %class.SkMaskFilter* %5, %class.SkMaskFilter** %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK7SkPaint13refPathEffectEv(%class.sk_sp* noalias nocapture sret, %class.SkPaint* nocapture readonly) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  %4 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 0, i32 0
  %5 = load %class.SkPathEffect*, %class.SkPathEffect** %4, align 8
  %6 = icmp eq %class.SkPathEffect* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 1 monotonic
  br label %10

10:                                               ; preds = %2, %7
  store %class.SkPathEffect* %5, %class.SkPathEffect** %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK7SkPaint9refShaderEv(%class.sk_sp.1* noalias nocapture sret, %class.SkPaint* nocapture readonly) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %0, i64 0, i32 0
  %4 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 1, i32 0
  %5 = load %class.SkShader*, %class.SkShader** %4, align 8
  %6 = icmp eq %class.SkShader* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.SkShader, %class.SkShader* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 1 monotonic
  br label %10

10:                                               ; preds = %2, %7
  store %class.SkShader* %5, %class.SkShader** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7SkPaint5resetEv(%class.SkPaint*) local_unnamed_addr #1 align 2 {
  %2 = alloca %class.SkPaint, align 8
  %3 = bitcast %class.SkPaint* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %3) #8
  %4 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 5, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 0, i64 52, i1 false) #8
  store float 1.000000e+00, float* %4, align 4
  %5 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 6
  store float 0.000000e+00, float* %5, align 8
  %6 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 7
  store float 4.000000e+00, float* %6, align 4
  %7 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 8, i32 0, i32 0
  store i32 3072, i32* %7, align 8
  %8 = call dereferenceable(72) %class.SkPaint* @_ZN7SkPaintaSEOS_(%class.SkPaint* %0, %class.SkPaint* nonnull dereferenceable(72) %2)
  %9 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 4, i32 0
  %10 = load %class.SkImageFilter*, %class.SkImageFilter** %9, align 8
  %11 = icmp eq %class.SkImageFilter* %10, null
  br i1 %11, label %22, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = atomicrmw add i32* %13, i32 -1 acq_rel
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %22

16:                                               ; preds = %12
  %17 = bitcast %class.SkImageFilter* %10 to %class.SkRefCntBase*
  %18 = bitcast %class.SkImageFilter* %10 to void (%class.SkRefCntBase*)***
  %19 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %18, align 8
  %20 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %19, i64 2
  %21 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %20, align 8
  tail call void %21(%class.SkRefCntBase* nonnull %17) #8
  br label %22

22:                                               ; preds = %16, %12, %1
  %23 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 3, i32 0
  %24 = load %class.SkColorFilter*, %class.SkColorFilter** %23, align 8
  %25 = icmp eq %class.SkColorFilter* %24, null
  br i1 %25, label %36, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %24, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = atomicrmw add i32* %27, i32 -1 acq_rel
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %30, label %36

30:                                               ; preds = %26
  %31 = bitcast %class.SkColorFilter* %24 to %class.SkRefCntBase*
  %32 = bitcast %class.SkColorFilter* %24 to void (%class.SkRefCntBase*)***
  %33 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %32, align 8
  %34 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %33, i64 2
  %35 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %34, align 8
  tail call void %35(%class.SkRefCntBase* nonnull %31) #8
  br label %36

36:                                               ; preds = %30, %26, %22
  %37 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 2, i32 0
  %38 = load %class.SkMaskFilter*, %class.SkMaskFilter** %37, align 8
  %39 = icmp eq %class.SkMaskFilter* %38, null
  br i1 %39, label %50, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %38, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = atomicrmw add i32* %41, i32 -1 acq_rel
  %43 = icmp eq i32 %42, 1
  br i1 %43, label %44, label %50

44:                                               ; preds = %40
  %45 = bitcast %class.SkMaskFilter* %38 to %class.SkRefCntBase*
  %46 = bitcast %class.SkMaskFilter* %38 to void (%class.SkRefCntBase*)***
  %47 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %46, align 8
  %48 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %47, i64 2
  %49 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %48, align 8
  tail call void %49(%class.SkRefCntBase* nonnull %45) #8
  br label %50

50:                                               ; preds = %44, %40, %36
  %51 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 1, i32 0
  %52 = load %class.SkShader*, %class.SkShader** %51, align 8
  %53 = icmp eq %class.SkShader* %52, null
  br i1 %53, label %64, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %class.SkShader, %class.SkShader* %52, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = atomicrmw add i32* %55, i32 -1 acq_rel
  %57 = icmp eq i32 %56, 1
  br i1 %57, label %58, label %64

58:                                               ; preds = %54
  %59 = bitcast %class.SkShader* %52 to %class.SkRefCntBase*
  %60 = bitcast %class.SkShader* %52 to void (%class.SkRefCntBase*)***
  %61 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %60, align 8
  %62 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %61, i64 2
  %63 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %62, align 8
  tail call void %63(%class.SkRefCntBase* nonnull %59) #8
  br label %64

64:                                               ; preds = %58, %54, %50
  %65 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 0, i32 0
  %66 = load %class.SkPathEffect*, %class.SkPathEffect** %65, align 8
  %67 = icmp eq %class.SkPathEffect* %66, null
  br i1 %67, label %78, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %66, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = atomicrmw add i32* %69, i32 -1 acq_rel
  %71 = icmp eq i32 %70, 1
  br i1 %71, label %72, label %78

72:                                               ; preds = %68
  %73 = bitcast %class.SkPathEffect* %66 to %class.SkRefCntBase*
  %74 = bitcast %class.SkPathEffect* %66 to void (%class.SkRefCntBase*)***
  %75 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %74, align 8
  %76 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %75, i64 2
  %77 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %76, align 8
  tail call void %77(%class.SkRefCntBase* nonnull %73) #8
  br label %78

78:                                               ; preds = %64, %68, %72
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %3) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN7SkPaint8setStyleENS_5StyleE(%class.SkPaint* nocapture, i8 zeroext) local_unnamed_addr #4 align 2 {
  %3 = icmp ult i8 %1, 3
  br i1 %3, label %4, label %11

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 8, i32 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = shl i8 %1, 6
  %8 = zext i8 %7 to i32
  %9 = and i32 %6, -193
  %10 = or i32 %9, %8
  store i32 %10, i32* %5, align 8
  br label %11

11:                                               ; preds = %2, %4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN7SkPaint9setStrokeEb(%class.SkPaint* nocapture, i1 zeroext) local_unnamed_addr #4 align 2 {
  %3 = zext i1 %1 to i32
  %4 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 8, i32 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = shl nuw nsw i32 %3, 6
  %7 = and i32 %5, -193
  %8 = or i32 %7, %6
  store i32 %8, i32* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7SkPaint8setColorEj(%class.SkPaint* nocapture, i32) local_unnamed_addr #1 align 2 {
  %3 = tail call { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32 %1) #8
  %4 = extractvalue { <2 x float>, <2 x float> } %3, 0
  %5 = extractvalue { <2 x float>, <2 x float> } %3, 1
  %6 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 5
  %7 = bitcast %struct.SkRGBA4f* %6 to <2 x float>*
  store <2 x float> %4, <2 x float>* %7, align 8
  %8 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 5, i32 2
  %9 = bitcast float* %8 to <2 x float>*
  store <2 x float> %5, <2 x float>* %9, align 8
  ret void
}

declare { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32) local_unnamed_addr #5

declare %class.SkColorSpace* @_Z17sk_srgb_singletonv() local_unnamed_addr #5

declare void @_ZN22SkColorSpaceXformStepsC1EPK12SkColorSpace11SkAlphaTypeS2_S3_(%struct.SkColorSpaceXformSteps*, %class.SkColorSpace*, i32, %class.SkColorSpace*, i32) unnamed_addr #5

declare void @_ZNK22SkColorSpaceXformSteps5applyEPf(%struct.SkColorSpaceXformSteps*, float*) local_unnamed_addr #5

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7SkPaint9setAlphafEf(%class.SkPaint* nocapture, float) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 5, i32 3
  store float %1, float* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7SkPaint7setARGBEjjjj(%class.SkPaint* nocapture, i32, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %6 = shl i32 %1, 24
  %7 = shl i32 %2, 16
  %8 = or i32 %7, %6
  %9 = shl i32 %3, 8
  %10 = or i32 %8, %9
  %11 = or i32 %10, %4
  %12 = tail call { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32 %11) #8
  %13 = extractvalue { <2 x float>, <2 x float> } %12, 0
  %14 = extractvalue { <2 x float>, <2 x float> } %12, 1
  %15 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 5
  %16 = bitcast %struct.SkRGBA4f* %15 to <2 x float>*
  store <2 x float> %13, <2 x float>* %16, align 8
  %17 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 5, i32 2
  %18 = bitcast float* %17 to <2 x float>*
  store <2 x float> %14, <2 x float>* %18, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7SkPaint14setStrokeWidthEf(%class.SkPaint* nocapture, float) local_unnamed_addr #0 align 2 {
  %3 = fcmp ult float %1, 0.000000e+00
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 6
  store float %1, float* %5, align 8
  br label %6

6:                                                ; preds = %2, %4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7SkPaint14setStrokeMiterEf(%class.SkPaint* nocapture, float) local_unnamed_addr #0 align 2 {
  %3 = fcmp ult float %1, 0.000000e+00
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 7
  store float %1, float* %5, align 4
  br label %6

6:                                                ; preds = %2, %4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN7SkPaint12setStrokeCapENS_3CapE(%class.SkPaint* nocapture, i32) local_unnamed_addr #4 align 2 {
  %3 = icmp ult i32 %1, 3
  br i1 %3, label %4, label %11

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 8, i32 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = shl i32 %1, 2
  %8 = and i32 %7, 12
  %9 = and i32 %6, -13
  %10 = or i32 %9, %8
  store i32 %10, i32* %5, align 8
  br label %11

11:                                               ; preds = %2, %4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN7SkPaint13setStrokeJoinENS_4JoinE(%class.SkPaint* nocapture, i8 zeroext) local_unnamed_addr #4 align 2 {
  %3 = icmp ult i8 %1, 3
  br i1 %3, label %4, label %12

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 8, i32 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = shl i8 %1, 4
  %8 = and i8 %7, 48
  %9 = zext i8 %8 to i32
  %10 = and i32 %6, -49
  %11 = or i32 %10, %9
  store i32 %11, i32* %5, align 8
  br label %12

12:                                               ; preds = %2, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7SkPaint14setImageFilterE5sk_spI13SkImageFilterE(%class.SkPaint* nocapture, %class.sk_sp.4* nocapture) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 4
  %4 = getelementptr inbounds %class.sk_sp.4, %class.sk_sp.4* %1, i64 0, i32 0
  %5 = bitcast %class.sk_sp.4* %1 to i64*
  %6 = load i64, i64* %5, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %4, align 8
  %7 = getelementptr inbounds %class.sk_sp.4, %class.sk_sp.4* %3, i64 0, i32 0
  %8 = load %class.SkImageFilter*, %class.SkImageFilter** %7, align 8
  %9 = bitcast %class.sk_sp.4* %3 to i64*
  store i64 %6, i64* %9, align 8
  %10 = icmp eq %class.SkImageFilter* %8, null
  br i1 %10, label %21, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw add i32* %12, i32 -1 acq_rel
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %21

15:                                               ; preds = %11
  %16 = bitcast %class.SkImageFilter* %8 to %class.SkRefCntBase*
  %17 = bitcast %class.SkImageFilter* %8 to void (%class.SkRefCntBase*)***
  %18 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %17, align 8
  %19 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %18, i64 2
  %20 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %19, align 8
  tail call void %20(%class.SkRefCntBase* nonnull %16) #8
  br label %21

21:                                               ; preds = %2, %11, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7SkPaint9setShaderE5sk_spI8SkShaderE(%class.SkPaint* nocapture, %class.sk_sp.1* nocapture) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 1
  %4 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %1, i64 0, i32 0
  %5 = bitcast %class.sk_sp.1* %1 to i64*
  %6 = load i64, i64* %5, align 8
  store %class.SkShader* null, %class.SkShader** %4, align 8
  %7 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %3, i64 0, i32 0
  %8 = load %class.SkShader*, %class.SkShader** %7, align 8
  %9 = bitcast %class.sk_sp.1* %3 to i64*
  store i64 %6, i64* %9, align 8
  %10 = icmp eq %class.SkShader* %8, null
  br i1 %10, label %21, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %class.SkShader, %class.SkShader* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw add i32* %12, i32 -1 acq_rel
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %21

15:                                               ; preds = %11
  %16 = bitcast %class.SkShader* %8 to %class.SkRefCntBase*
  %17 = bitcast %class.SkShader* %8 to void (%class.SkRefCntBase*)***
  %18 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %17, align 8
  %19 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %18, i64 2
  %20 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %19, align 8
  tail call void %20(%class.SkRefCntBase* nonnull %16) #8
  br label %21

21:                                               ; preds = %2, %11, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7SkPaint14setColorFilterE5sk_spI13SkColorFilterE(%class.SkPaint* nocapture, %class.sk_sp.3* nocapture) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 3
  %4 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %1, i64 0, i32 0
  %5 = bitcast %class.sk_sp.3* %1 to i64*
  %6 = load i64, i64* %5, align 8
  store %class.SkColorFilter* null, %class.SkColorFilter** %4, align 8
  %7 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %3, i64 0, i32 0
  %8 = load %class.SkColorFilter*, %class.SkColorFilter** %7, align 8
  %9 = bitcast %class.sk_sp.3* %3 to i64*
  store i64 %6, i64* %9, align 8
  %10 = icmp eq %class.SkColorFilter* %8, null
  br i1 %10, label %21, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw add i32* %12, i32 -1 acq_rel
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %21

15:                                               ; preds = %11
  %16 = bitcast %class.SkColorFilter* %8 to %class.SkRefCntBase*
  %17 = bitcast %class.SkColorFilter* %8 to void (%class.SkRefCntBase*)***
  %18 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %17, align 8
  %19 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %18, i64 2
  %20 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %19, align 8
  tail call void %20(%class.SkRefCntBase* nonnull %16) #8
  br label %21

21:                                               ; preds = %2, %11, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7SkPaint13setPathEffectE5sk_spI12SkPathEffectE(%class.SkPaint* nocapture, %class.sk_sp* nocapture) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %1, i64 0, i32 0
  %4 = bitcast %class.sk_sp* %1 to i64*
  %5 = load i64, i64* %4, align 8
  store %class.SkPathEffect* null, %class.SkPathEffect** %3, align 8
  %6 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 0, i32 0
  %7 = load %class.SkPathEffect*, %class.SkPathEffect** %6, align 8
  %8 = bitcast %class.SkPaint* %0 to i64*
  store i64 %5, i64* %8, align 8
  %9 = icmp eq %class.SkPathEffect* %7, null
  br i1 %9, label %20, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw add i32* %11, i32 -1 acq_rel
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %14, label %20

14:                                               ; preds = %10
  %15 = bitcast %class.SkPathEffect* %7 to %class.SkRefCntBase*
  %16 = bitcast %class.SkPathEffect* %7 to void (%class.SkRefCntBase*)***
  %17 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %16, align 8
  %18 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %17, i64 2
  %19 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %18, align 8
  tail call void %19(%class.SkRefCntBase* nonnull %15) #8
  br label %20

20:                                               ; preds = %2, %10, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7SkPaint13setMaskFilterE5sk_spI12SkMaskFilterE(%class.SkPaint* nocapture, %class.sk_sp.2* nocapture) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 2
  %4 = getelementptr inbounds %class.sk_sp.2, %class.sk_sp.2* %1, i64 0, i32 0
  %5 = bitcast %class.sk_sp.2* %1 to i64*
  %6 = load i64, i64* %5, align 8
  store %class.SkMaskFilter* null, %class.SkMaskFilter** %4, align 8
  %7 = getelementptr inbounds %class.sk_sp.2, %class.sk_sp.2* %3, i64 0, i32 0
  %8 = load %class.SkMaskFilter*, %class.SkMaskFilter** %7, align 8
  %9 = bitcast %class.sk_sp.2* %3 to i64*
  store i64 %6, i64* %9, align 8
  %10 = icmp eq %class.SkMaskFilter* %8, null
  br i1 %10, label %21, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw add i32* %12, i32 -1 acq_rel
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %21

15:                                               ; preds = %11
  %16 = bitcast %class.SkMaskFilter* %8 to %class.SkRefCntBase*
  %17 = bitcast %class.SkMaskFilter* %8 to void (%class.SkRefCntBase*)***
  %18 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %17, align 8
  %19 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %18, i64 2
  %20 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %19, align 8
  tail call void %20(%class.SkRefCntBase* nonnull %16) #8
  br label %21

21:                                               ; preds = %2, %11, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkPaintPriv7FlattenERK7SkPaintR13SkWriteBuffer(%class.SkPaint* nocapture readonly dereferenceable(72), %class.SkWriteBuffer* dereferenceable(56)) local_unnamed_addr #1 align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %struct.SkRGBA4f*
  %5 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 0, i32 0
  %6 = load %class.SkPathEffect*, %class.SkPathEffect** %5, align 8
  %7 = icmp eq %class.SkPathEffect* %6, null
  br i1 %7, label %8, label %24

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 1, i32 0
  %10 = load %class.SkShader*, %class.SkShader** %9, align 8
  %11 = icmp eq %class.SkShader* %10, null
  br i1 %11, label %12, label %24

12:                                               ; preds = %8
  %13 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 2, i32 0
  %14 = load %class.SkMaskFilter*, %class.SkMaskFilter** %13, align 8
  %15 = icmp eq %class.SkMaskFilter* %14, null
  br i1 %15, label %16, label %24

16:                                               ; preds = %12
  %17 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 3, i32 0
  %18 = load %class.SkColorFilter*, %class.SkColorFilter** %17, align 8
  %19 = icmp eq %class.SkColorFilter* %18, null
  br i1 %19, label %20, label %24

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 4, i32 0
  %22 = load %class.SkImageFilter*, %class.SkImageFilter** %21, align 8
  %23 = icmp eq %class.SkImageFilter* %22, null
  br i1 %23, label %25, label %24

24:                                               ; preds = %20, %16, %12, %8, %2
  br label %25

25:                                               ; preds = %20, %24
  %26 = phi i32 [ 2, %24 ], [ 0, %20 ]
  %27 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 6
  %28 = load float, float* %27, align 8
  %29 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, float)***
  %30 = load void (%class.SkWriteBuffer*, float)**, void (%class.SkWriteBuffer*, float)*** %29, align 8
  %31 = getelementptr inbounds void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %30, i64 5
  %32 = load void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %31, align 8
  tail call void %32(%class.SkWriteBuffer* %1, float %28) #8
  %33 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 7
  %34 = load float, float* %33, align 4
  %35 = load void (%class.SkWriteBuffer*, float)**, void (%class.SkWriteBuffer*, float)*** %29, align 8
  %36 = getelementptr inbounds void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %35, i64 5
  %37 = load void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %36, align 8
  tail call void %37(%class.SkWriteBuffer* %1, float %34) #8
  %38 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #8
  %39 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 5
  %40 = bitcast %struct.SkRGBA4f* %39 to <2 x i64>*
  %41 = load <2 x i64>, <2 x i64>* %40, align 8
  store <2 x i64> %41, <2 x i64>* %3, align 16
  %42 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, %struct.SkRGBA4f*)***
  %43 = load void (%class.SkWriteBuffer*, %struct.SkRGBA4f*)**, void (%class.SkWriteBuffer*, %struct.SkRGBA4f*)*** %42, align 8
  %44 = getelementptr inbounds void (%class.SkWriteBuffer*, %struct.SkRGBA4f*)*, void (%class.SkWriteBuffer*, %struct.SkRGBA4f*)** %43, i64 14
  %45 = load void (%class.SkWriteBuffer*, %struct.SkRGBA4f*)*, void (%class.SkWriteBuffer*, %struct.SkRGBA4f*)** %44, align 8
  call void %45(%class.SkWriteBuffer* %1, %struct.SkRGBA4f* nonnull dereferenceable(16) %4) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #8
  %46 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 8, i32 0, i32 0
  %47 = load i32, i32* %46, align 8
  %48 = and i32 %47, 3
  %49 = lshr i32 %47, 2
  %50 = and i32 %49, 65280
  %51 = shl i32 %47, 14
  %52 = and i32 %51, 196608
  %53 = and i32 %51, 786432
  %54 = and i32 %51, 3145728
  %55 = and i32 %51, 12582912
  %56 = shl nuw nsw i32 %26, 24
  %57 = or i32 %48, %56
  %58 = or i32 %57, %50
  %59 = or i32 %58, %52
  %60 = or i32 %59, %53
  %61 = or i32 %60, %54
  %62 = or i32 %61, %55
  %63 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, i32)***
  %64 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %63, align 8
  %65 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %64, i64 7
  %66 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %65, align 8
  call void %66(%class.SkWriteBuffer* %1, i32 %62) #8
  %67 = icmp eq i32 %26, 0
  br i1 %67, label %102, label %68

68:                                               ; preds = %25
  %69 = bitcast %class.SkPaint* %0 to %class.SkFlattenable**
  %70 = load %class.SkFlattenable*, %class.SkFlattenable** %69, align 8
  %71 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, %class.SkFlattenable*)***
  %72 = load void (%class.SkWriteBuffer*, %class.SkFlattenable*)**, void (%class.SkWriteBuffer*, %class.SkFlattenable*)*** %71, align 8
  %73 = getelementptr inbounds void (%class.SkWriteBuffer*, %class.SkFlattenable*)*, void (%class.SkWriteBuffer*, %class.SkFlattenable*)** %72, i64 11
  %74 = load void (%class.SkWriteBuffer*, %class.SkFlattenable*)*, void (%class.SkWriteBuffer*, %class.SkFlattenable*)** %73, align 8
  call void %74(%class.SkWriteBuffer* %1, %class.SkFlattenable* %70) #8
  %75 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 1, i32 0
  %76 = bitcast %class.SkShader** %75 to %class.SkFlattenable**
  %77 = load %class.SkFlattenable*, %class.SkFlattenable** %76, align 8
  %78 = load void (%class.SkWriteBuffer*, %class.SkFlattenable*)**, void (%class.SkWriteBuffer*, %class.SkFlattenable*)*** %71, align 8
  %79 = getelementptr inbounds void (%class.SkWriteBuffer*, %class.SkFlattenable*)*, void (%class.SkWriteBuffer*, %class.SkFlattenable*)** %78, i64 11
  %80 = load void (%class.SkWriteBuffer*, %class.SkFlattenable*)*, void (%class.SkWriteBuffer*, %class.SkFlattenable*)** %79, align 8
  call void %80(%class.SkWriteBuffer* %1, %class.SkFlattenable* %77) #8
  %81 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 2, i32 0
  %82 = bitcast %class.SkMaskFilter** %81 to %class.SkFlattenable**
  %83 = load %class.SkFlattenable*, %class.SkFlattenable** %82, align 8
  %84 = load void (%class.SkWriteBuffer*, %class.SkFlattenable*)**, void (%class.SkWriteBuffer*, %class.SkFlattenable*)*** %71, align 8
  %85 = getelementptr inbounds void (%class.SkWriteBuffer*, %class.SkFlattenable*)*, void (%class.SkWriteBuffer*, %class.SkFlattenable*)** %84, i64 11
  %86 = load void (%class.SkWriteBuffer*, %class.SkFlattenable*)*, void (%class.SkWriteBuffer*, %class.SkFlattenable*)** %85, align 8
  call void %86(%class.SkWriteBuffer* %1, %class.SkFlattenable* %83) #8
  %87 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 3, i32 0
  %88 = bitcast %class.SkColorFilter** %87 to %class.SkFlattenable**
  %89 = load %class.SkFlattenable*, %class.SkFlattenable** %88, align 8
  %90 = load void (%class.SkWriteBuffer*, %class.SkFlattenable*)**, void (%class.SkWriteBuffer*, %class.SkFlattenable*)*** %71, align 8
  %91 = getelementptr inbounds void (%class.SkWriteBuffer*, %class.SkFlattenable*)*, void (%class.SkWriteBuffer*, %class.SkFlattenable*)** %90, i64 11
  %92 = load void (%class.SkWriteBuffer*, %class.SkFlattenable*)*, void (%class.SkWriteBuffer*, %class.SkFlattenable*)** %91, align 8
  call void %92(%class.SkWriteBuffer* %1, %class.SkFlattenable* %89) #8
  %93 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %63, align 8
  %94 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %93, i64 7
  %95 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %94, align 8
  call void %95(%class.SkWriteBuffer* %1, i32 0) #8
  %96 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 4, i32 0
  %97 = bitcast %class.SkImageFilter** %96 to %class.SkFlattenable**
  %98 = load %class.SkFlattenable*, %class.SkFlattenable** %97, align 8
  %99 = load void (%class.SkWriteBuffer*, %class.SkFlattenable*)**, void (%class.SkWriteBuffer*, %class.SkFlattenable*)*** %71, align 8
  %100 = getelementptr inbounds void (%class.SkWriteBuffer*, %class.SkFlattenable*)*, void (%class.SkWriteBuffer*, %class.SkFlattenable*)** %99, i64 11
  %101 = load void (%class.SkWriteBuffer*, %class.SkFlattenable*)*, void (%class.SkWriteBuffer*, %class.SkFlattenable*)** %100, align 8
  call void %101(%class.SkWriteBuffer* %1, %class.SkFlattenable* %98) #8
  br label %102

102:                                              ; preds = %25, %68
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11SkPaintPriv9UnflattenEP7SkPaintR12SkReadBufferP6SkFont(%class.SkPaint*, %class.SkReadBuffer* dereferenceable(136), %class.SkFont* nocapture readnone) local_unnamed_addr #1 align 2 {
  %4 = alloca %struct.SkColorSpaceXformSteps, align 4
  %5 = alloca %struct.SkRGBA4f, align 4
  %6 = tail call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #8
  %7 = fcmp ult float %6, 0.000000e+00
  br i1 %7, label %10, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 6
  store float %6, float* %9, align 8
  br label %10

10:                                               ; preds = %3, %8
  %11 = tail call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #8
  %12 = fcmp ult float %11, 0.000000e+00
  br i1 %12, label %15, label %13

13:                                               ; preds = %10
  %14 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 7
  store float %11, float* %14, align 4
  br label %15

15:                                               ; preds = %10, %13
  %16 = bitcast %struct.SkRGBA4f* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #8
  %17 = bitcast %struct.SkRGBA4f* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %17, i8 -1, i64 16, i1 false)
  call void @_ZN12SkReadBuffer11readColor4fEP8SkRGBA4fIL11SkAlphaType3EE(%class.SkReadBuffer* %1, %struct.SkRGBA4f* nonnull %5) #8
  %18 = call %class.SkColorSpace* @_Z17sk_srgb_singletonv() #8
  %19 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %4, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 100, i8* nonnull %19) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %19, i8* align 4 getelementptr inbounds ({ %"struct.SkColorSpaceXformSteps::Flags", [3 x i8], %struct.skcms_TransferFunction, %struct.skcms_TransferFunction, [9 x float] }, { %"struct.SkColorSpaceXformSteps::Flags", [3 x i8], %struct.skcms_TransferFunction, %struct.skcms_TransferFunction, [9 x float] }* @__const._ZN7SkPaint8setColorERK8SkRGBA4fIL11SkAlphaType3EEP12SkColorSpace.steps, i64 0, i32 0, i32 0), i64 100, i1 false) #8
  %20 = call %class.SkColorSpace* @_Z17sk_srgb_singletonv() #8
  call void @_ZN22SkColorSpaceXformStepsC1EPK12SkColorSpace11SkAlphaTypeS2_S3_(%struct.SkColorSpaceXformSteps* nonnull %4, %class.SkColorSpace* %18, i32 3, %class.SkColorSpace* %20, i32 3) #8
  %21 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 5
  %22 = bitcast %struct.SkRGBA4f* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* nonnull align 4 %16, i64 16, i1 false) #8
  %23 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %21, i64 0, i32 0
  call void @_ZNK22SkColorSpaceXformSteps5applyEPf(%struct.SkColorSpaceXformSteps* nonnull %4, float* %23) #8
  call void @llvm.lifetime.end.p0i8(i64 100, i8* nonnull %19) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #8
  %24 = call i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer* %1) #8
  %25 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 8, i32 0, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = and i32 %26, -262144
  %28 = and i32 %24, 3
  %29 = or i32 %27, %28
  %30 = lshr i32 %24, 8
  %31 = and i32 %30, 255
  %32 = icmp ugt i32 %31, 28
  %33 = shl nuw nsw i32 %31, 10
  %34 = select i1 %32, i32 0, i32 %33
  %35 = or i32 %29, %34
  %36 = lshr i32 %24, 16
  %37 = and i32 %36, 3
  %38 = icmp eq i32 %37, 3
  %39 = or i1 %38, %32
  %40 = shl nuw nsw i32 %37, 2
  %41 = select i1 %38, i32 0, i32 %40
  %42 = or i32 %35, %41
  %43 = lshr i32 %24, 18
  %44 = and i32 %43, 3
  %45 = icmp eq i32 %44, 3
  %46 = or i1 %45, %39
  %47 = shl nuw nsw i32 %44, 4
  %48 = select i1 %45, i32 0, i32 %47
  %49 = or i32 %42, %48
  %50 = lshr i32 %24, 20
  %51 = and i32 %50, 3
  %52 = icmp eq i32 %51, 3
  %53 = or i1 %52, %46
  %54 = shl nuw nsw i32 %51, 6
  %55 = select i1 %52, i32 0, i32 %54
  %56 = lshr i32 %24, 14
  %57 = and i32 %56, 768
  %58 = or i32 %55, %57
  %59 = or i32 %58, %49
  store i32 %59, i32* %25, align 8
  %60 = and i32 %24, 33554432
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %152, label %62

62:                                               ; preds = %15
  %63 = call %class.SkFlattenable* @_ZN12SkReadBuffer15readFlattenableEN13SkFlattenable4TypeE(%class.SkReadBuffer* %1, i32 5) #8, !noalias !2
  %64 = ptrtoint %class.SkFlattenable* %63 to i64
  %65 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 0, i32 0
  %66 = load %class.SkPathEffect*, %class.SkPathEffect** %65, align 8
  %67 = bitcast %class.SkPaint* %0 to i64*
  store i64 %64, i64* %67, align 8
  %68 = icmp eq %class.SkPathEffect* %66, null
  br i1 %68, label %79, label %69

69:                                               ; preds = %62
  %70 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %66, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = atomicrmw add i32* %70, i32 -1 acq_rel
  %72 = icmp eq i32 %71, 1
  br i1 %72, label %73, label %79

73:                                               ; preds = %69
  %74 = bitcast %class.SkPathEffect* %66 to %class.SkRefCntBase*
  %75 = bitcast %class.SkPathEffect* %66 to void (%class.SkRefCntBase*)***
  %76 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %75, align 8
  %77 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %76, i64 2
  %78 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %77, align 8
  call void %78(%class.SkRefCntBase* nonnull %74) #8
  br label %79

79:                                               ; preds = %73, %69, %62
  %80 = call %class.SkFlattenable* @_ZN12SkReadBuffer15readFlattenableEN13SkFlattenable4TypeE(%class.SkReadBuffer* %1, i32 8) #8, !noalias !7
  %81 = ptrtoint %class.SkFlattenable* %80 to i64
  %82 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 1
  %83 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %82, i64 0, i32 0
  %84 = load %class.SkShader*, %class.SkShader** %83, align 8
  %85 = bitcast %class.sk_sp.1* %82 to i64*
  store i64 %81, i64* %85, align 8
  %86 = icmp eq %class.SkShader* %84, null
  br i1 %86, label %97, label %87

87:                                               ; preds = %79
  %88 = getelementptr inbounds %class.SkShader, %class.SkShader* %84, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = atomicrmw add i32* %88, i32 -1 acq_rel
  %90 = icmp eq i32 %89, 1
  br i1 %90, label %91, label %97

91:                                               ; preds = %87
  %92 = bitcast %class.SkShader* %84 to %class.SkRefCntBase*
  %93 = bitcast %class.SkShader* %84 to void (%class.SkRefCntBase*)***
  %94 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %93, align 8
  %95 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %94, i64 2
  %96 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %95, align 8
  call void %96(%class.SkRefCntBase* nonnull %92) #8
  br label %97

97:                                               ; preds = %91, %87, %79
  %98 = call %class.SkFlattenable* @_ZN12SkReadBuffer15readFlattenableEN13SkFlattenable4TypeE(%class.SkReadBuffer* %1, i32 4) #8, !noalias !12
  %99 = ptrtoint %class.SkFlattenable* %98 to i64
  %100 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 2
  %101 = getelementptr inbounds %class.sk_sp.2, %class.sk_sp.2* %100, i64 0, i32 0
  %102 = load %class.SkMaskFilter*, %class.SkMaskFilter** %101, align 8
  %103 = bitcast %class.sk_sp.2* %100 to i64*
  store i64 %99, i64* %103, align 8
  %104 = icmp eq %class.SkMaskFilter* %102, null
  br i1 %104, label %115, label %105

105:                                              ; preds = %97
  %106 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %102, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = atomicrmw add i32* %106, i32 -1 acq_rel
  %108 = icmp eq i32 %107, 1
  br i1 %108, label %109, label %115

109:                                              ; preds = %105
  %110 = bitcast %class.SkMaskFilter* %102 to %class.SkRefCntBase*
  %111 = bitcast %class.SkMaskFilter* %102 to void (%class.SkRefCntBase*)***
  %112 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %111, align 8
  %113 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %112, i64 2
  %114 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %113, align 8
  call void %114(%class.SkRefCntBase* nonnull %110) #8
  br label %115

115:                                              ; preds = %109, %105, %97
  %116 = call %class.SkFlattenable* @_ZN12SkReadBuffer15readFlattenableEN13SkFlattenable4TypeE(%class.SkReadBuffer* %1, i32 0) #8, !noalias !17
  %117 = ptrtoint %class.SkFlattenable* %116 to i64
  %118 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 3
  %119 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %118, i64 0, i32 0
  %120 = load %class.SkColorFilter*, %class.SkColorFilter** %119, align 8
  %121 = bitcast %class.sk_sp.3* %118 to i64*
  store i64 %117, i64* %121, align 8
  %122 = icmp eq %class.SkColorFilter* %120, null
  br i1 %122, label %133, label %123

123:                                              ; preds = %115
  %124 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %120, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = atomicrmw add i32* %124, i32 -1 acq_rel
  %126 = icmp eq i32 %125, 1
  br i1 %126, label %127, label %133

127:                                              ; preds = %123
  %128 = bitcast %class.SkColorFilter* %120 to %class.SkRefCntBase*
  %129 = bitcast %class.SkColorFilter* %120 to void (%class.SkRefCntBase*)***
  %130 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %129, align 8
  %131 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %130, i64 2
  %132 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %131, align 8
  call void %132(%class.SkRefCntBase* nonnull %128) #8
  br label %133

133:                                              ; preds = %127, %123, %115
  %134 = call i32 @_ZN12SkReadBuffer6read32Ev(%class.SkReadBuffer* %1) #8
  %135 = call %class.SkFlattenable* @_ZN12SkReadBuffer15readFlattenableEN13SkFlattenable4TypeE(%class.SkReadBuffer* %1, i32 3) #8, !noalias !22
  %136 = ptrtoint %class.SkFlattenable* %135 to i64
  %137 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 4
  %138 = getelementptr inbounds %class.sk_sp.4, %class.sk_sp.4* %137, i64 0, i32 0
  %139 = load %class.SkImageFilter*, %class.SkImageFilter** %138, align 8
  %140 = bitcast %class.sk_sp.4* %137 to i64*
  store i64 %136, i64* %140, align 8
  %141 = icmp eq %class.SkImageFilter* %139, null
  br i1 %141, label %231, label %142

142:                                              ; preds = %133
  %143 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %139, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %144 = atomicrmw add i32* %143, i32 -1 acq_rel
  %145 = icmp eq i32 %144, 1
  br i1 %145, label %146, label %231

146:                                              ; preds = %142
  %147 = bitcast %class.SkImageFilter* %139 to %class.SkRefCntBase*
  %148 = bitcast %class.SkImageFilter* %139 to void (%class.SkRefCntBase*)***
  %149 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %148, align 8
  %150 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %149, i64 2
  %151 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %150, align 8
  call void %151(%class.SkRefCntBase* nonnull %147) #8
  br label %231

152:                                              ; preds = %15
  %153 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 0, i32 0
  %154 = load %class.SkPathEffect*, %class.SkPathEffect** %153, align 8
  %155 = bitcast %class.SkPaint* %0 to i64*
  store i64 0, i64* %155, align 8
  %156 = icmp eq %class.SkPathEffect* %154, null
  br i1 %156, label %167, label %157

157:                                              ; preds = %152
  %158 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %154, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %159 = atomicrmw add i32* %158, i32 -1 acq_rel
  %160 = icmp eq i32 %159, 1
  br i1 %160, label %161, label %167

161:                                              ; preds = %157
  %162 = bitcast %class.SkPathEffect* %154 to %class.SkRefCntBase*
  %163 = bitcast %class.SkPathEffect* %154 to void (%class.SkRefCntBase*)***
  %164 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %163, align 8
  %165 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %164, i64 2
  %166 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %165, align 8
  call void %166(%class.SkRefCntBase* nonnull %162) #8
  br label %167

167:                                              ; preds = %161, %157, %152
  %168 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 1
  %169 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %168, i64 0, i32 0
  %170 = load %class.SkShader*, %class.SkShader** %169, align 8
  %171 = bitcast %class.sk_sp.1* %168 to i64*
  store i64 0, i64* %171, align 8
  %172 = icmp eq %class.SkShader* %170, null
  br i1 %172, label %183, label %173

173:                                              ; preds = %167
  %174 = getelementptr inbounds %class.SkShader, %class.SkShader* %170, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %175 = atomicrmw add i32* %174, i32 -1 acq_rel
  %176 = icmp eq i32 %175, 1
  br i1 %176, label %177, label %183

177:                                              ; preds = %173
  %178 = bitcast %class.SkShader* %170 to %class.SkRefCntBase*
  %179 = bitcast %class.SkShader* %170 to void (%class.SkRefCntBase*)***
  %180 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %179, align 8
  %181 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %180, i64 2
  %182 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %181, align 8
  call void %182(%class.SkRefCntBase* nonnull %178) #8
  br label %183

183:                                              ; preds = %177, %173, %167
  %184 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 2
  %185 = getelementptr inbounds %class.sk_sp.2, %class.sk_sp.2* %184, i64 0, i32 0
  %186 = load %class.SkMaskFilter*, %class.SkMaskFilter** %185, align 8
  %187 = bitcast %class.sk_sp.2* %184 to i64*
  store i64 0, i64* %187, align 8
  %188 = icmp eq %class.SkMaskFilter* %186, null
  br i1 %188, label %199, label %189

189:                                              ; preds = %183
  %190 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %186, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %191 = atomicrmw add i32* %190, i32 -1 acq_rel
  %192 = icmp eq i32 %191, 1
  br i1 %192, label %193, label %199

193:                                              ; preds = %189
  %194 = bitcast %class.SkMaskFilter* %186 to %class.SkRefCntBase*
  %195 = bitcast %class.SkMaskFilter* %186 to void (%class.SkRefCntBase*)***
  %196 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %195, align 8
  %197 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %196, i64 2
  %198 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %197, align 8
  call void %198(%class.SkRefCntBase* nonnull %194) #8
  br label %199

199:                                              ; preds = %193, %189, %183
  %200 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 3
  %201 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %200, i64 0, i32 0
  %202 = load %class.SkColorFilter*, %class.SkColorFilter** %201, align 8
  %203 = bitcast %class.sk_sp.3* %200 to i64*
  store i64 0, i64* %203, align 8
  %204 = icmp eq %class.SkColorFilter* %202, null
  br i1 %204, label %215, label %205

205:                                              ; preds = %199
  %206 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %202, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %207 = atomicrmw add i32* %206, i32 -1 acq_rel
  %208 = icmp eq i32 %207, 1
  br i1 %208, label %209, label %215

209:                                              ; preds = %205
  %210 = bitcast %class.SkColorFilter* %202 to %class.SkRefCntBase*
  %211 = bitcast %class.SkColorFilter* %202 to void (%class.SkRefCntBase*)***
  %212 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %211, align 8
  %213 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %212, i64 2
  %214 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %213, align 8
  call void %214(%class.SkRefCntBase* nonnull %210) #8
  br label %215

215:                                              ; preds = %209, %205, %199
  %216 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 4
  %217 = getelementptr inbounds %class.sk_sp.4, %class.sk_sp.4* %216, i64 0, i32 0
  %218 = load %class.SkImageFilter*, %class.SkImageFilter** %217, align 8
  %219 = bitcast %class.sk_sp.4* %216 to i64*
  store i64 0, i64* %219, align 8
  %220 = icmp eq %class.SkImageFilter* %218, null
  br i1 %220, label %231, label %221

221:                                              ; preds = %215
  %222 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %218, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %223 = atomicrmw add i32* %222, i32 -1 acq_rel
  %224 = icmp eq i32 %223, 1
  br i1 %224, label %225, label %231

225:                                              ; preds = %221
  %226 = bitcast %class.SkImageFilter* %218 to %class.SkRefCntBase*
  %227 = bitcast %class.SkImageFilter* %218 to void (%class.SkRefCntBase*)***
  %228 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %227, align 8
  %229 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %228, i64 2
  %230 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %229, align 8
  call void %230(%class.SkRefCntBase* nonnull %226) #8
  br label %231

231:                                              ; preds = %215, %221, %225, %133, %142, %146
  br i1 %53, label %232, label %233

232:                                              ; preds = %231
  call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #8
  br label %233

233:                                              ; preds = %231, %232
  %234 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %235 = load i8, i8* %234, align 8, !range !27
  %236 = icmp eq i8 %235, 0
  br i1 %236, label %238, label %237

237:                                              ; preds = %233
  call void @_ZN7SkPaint5resetEv(%class.SkPaint* %0)
  br label %238

238:                                              ; preds = %233, %237
  %239 = phi i32 [ 0, %237 ], [ 1, %233 ]
  ret i32 %239
}

declare float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer*) local_unnamed_addr #5

declare void @_ZN12SkReadBuffer11readColor4fEP8SkRGBA4fIL11SkAlphaType3EE(%class.SkReadBuffer*, %struct.SkRGBA4f*) local_unnamed_addr #5

declare i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer*) local_unnamed_addr #5

declare i32 @_ZN12SkReadBuffer6read32Ev(%class.SkReadBuffer*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK7SkPaint11getFillPathERK6SkPathPS0_PK6SkRectf(%class.SkPaint*, %class.SkPath* dereferenceable(16), %class.SkPath*, %struct.SkRect*, float) local_unnamed_addr #1 align 2 {
  %6 = alloca %class.SkStrokeRec, align 4
  %7 = alloca %class.SkPath, align 8
  %8 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 0, i32 0
  %9 = load %class.SkPathRef*, %class.SkPathRef** %8, align 8
  %10 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %9, i64 0, i32 9
  %11 = load i8, i8* %10, align 8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %5
  %14 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %9, i64 0, i32 10
  %15 = load i8, i8* %14, align 1, !range !27
  br label %25

16:                                               ; preds = %5
  %17 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %9, i64 0, i32 1
  %18 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %9, i64 0, i32 3, i32 0
  %19 = load %struct.SkPoint*, %struct.SkPoint** %18, align 8
  %20 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %9, i64 0, i32 3, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = tail call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %17, %struct.SkPoint* %19, i32 %21) #8
  %23 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %9, i64 0, i32 10
  %24 = zext i1 %22 to i8
  store i8 %24, i8* %23, align 1
  store i8 0, i8* %10, align 8
  br label %25

25:                                               ; preds = %13, %16
  %26 = phi i8 [ %15, %13 ], [ %24, %16 ]
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %25
  %29 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPath5resetEv(%class.SkPath* %2) #8
  br label %80

30:                                               ; preds = %25
  %31 = bitcast %class.SkStrokeRec* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #8
  %32 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %6, i64 0, i32 0
  store float 0xFFFFFFFFE0000000, float* %32, align 4
  %33 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %6, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %33, align 4
  %34 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %6, i64 0, i32 2
  store float 0xFFFFFFFFE0000000, float* %34, align 4
  %35 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %6, i64 0, i32 3
  store i32 -1431655766, i32* %35, align 4
  call void @_ZN11SkStrokeRecC1ERK7SkPaintf(%class.SkStrokeRec* nonnull %6, %class.SkPaint* dereferenceable(72) %0, float %4) #8
  %36 = bitcast %class.SkPath* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #8
  %37 = bitcast %class.SkPath* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 16, i1 false)
  call void @_ZN6SkPathC1Ev(%class.SkPath* nonnull %7) #8
  %38 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 0, i32 0
  %39 = load %class.SkPathEffect*, %class.SkPathEffect** %38, align 8
  %40 = icmp eq %class.SkPathEffect* %39, null
  br i1 %40, label %44, label %41

41:                                               ; preds = %30
  %42 = call zeroext i1 @_ZNK12SkPathEffect10filterPathEP6SkPathRKS0_P11SkStrokeRecPK6SkRect(%class.SkPathEffect* nonnull %39, %class.SkPath* nonnull %7, %class.SkPath* dereferenceable(16) %1, %class.SkStrokeRec* nonnull %6, %struct.SkRect* %3) #8
  %43 = select i1 %42, %class.SkPath* %7, %class.SkPath* %1
  br label %44

44:                                               ; preds = %30, %41
  %45 = phi %class.SkPath* [ %1, %30 ], [ %43, %41 ]
  %46 = call zeroext i1 @_ZNK11SkStrokeRec11applyToPathEP6SkPathRKS0_(%class.SkStrokeRec* nonnull %6, %class.SkPath* %2, %class.SkPath* dereferenceable(16) %45) #8
  br i1 %46, label %52, label %47

47:                                               ; preds = %44
  %48 = icmp eq %class.SkPath* %45, %7
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  call void @_ZN6SkPath4swapERS_(%class.SkPath* %2, %class.SkPath* nonnull dereferenceable(16) %7) #8
  br label %52

50:                                               ; preds = %47
  %51 = call dereferenceable(16) %class.SkPath* @_ZN6SkPathaSERKS_(%class.SkPath* %2, %class.SkPath* dereferenceable(16) %45) #8
  br label %52

52:                                               ; preds = %49, %50, %44
  %53 = getelementptr inbounds %class.SkPath, %class.SkPath* %2, i64 0, i32 0, i32 0
  %54 = load %class.SkPathRef*, %class.SkPathRef** %53, align 8
  %55 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %54, i64 0, i32 9
  %56 = load i8, i8* %55, align 8
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %52
  %59 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %54, i64 0, i32 10
  %60 = load i8, i8* %59, align 1, !range !27
  br label %70

61:                                               ; preds = %52
  %62 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %54, i64 0, i32 1
  %63 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %54, i64 0, i32 3, i32 0
  %64 = load %struct.SkPoint*, %struct.SkPoint** %63, align 8
  %65 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %54, i64 0, i32 3, i32 2
  %66 = load i32, i32* %65, align 4
  %67 = call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %62, %struct.SkPoint* %64, i32 %66) #8
  %68 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %54, i64 0, i32 10
  %69 = zext i1 %67 to i8
  store i8 %69, i8* %68, align 1
  store i8 0, i8* %55, align 8
  br label %70

70:                                               ; preds = %58, %61
  %71 = phi i8 [ %60, %58 ], [ %69, %61 ]
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %73, label %75

73:                                               ; preds = %70
  %74 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath5resetEv(%class.SkPath* %2) #8
  br label %78

75:                                               ; preds = %70
  %76 = call i32 @_ZNK11SkStrokeRec8getStyleEv(%class.SkStrokeRec* nonnull %6) #8
  %77 = icmp ne i32 %76, 0
  br label %78

78:                                               ; preds = %75, %73
  %79 = phi i1 [ %77, %75 ], [ false, %73 ]
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #8
  br label %80

80:                                               ; preds = %78, %28
  %81 = phi i1 [ %79, %78 ], [ false, %28 ]
  ret i1 %81
}

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath5resetEv(%class.SkPath*) local_unnamed_addr #5

declare void @_ZN11SkStrokeRecC1ERK7SkPaintf(%class.SkStrokeRec*, %class.SkPaint* dereferenceable(72), float) unnamed_addr #5

declare void @_ZN6SkPathC1Ev(%class.SkPath*) unnamed_addr #5

declare zeroext i1 @_ZNK12SkPathEffect10filterPathEP6SkPathRKS0_P11SkStrokeRecPK6SkRect(%class.SkPathEffect*, %class.SkPath*, %class.SkPath* dereferenceable(16), %class.SkStrokeRec*, %struct.SkRect*) local_unnamed_addr #5

declare zeroext i1 @_ZNK11SkStrokeRec11applyToPathEP6SkPathRKS0_(%class.SkStrokeRec*, %class.SkPath*, %class.SkPath* dereferenceable(16)) local_unnamed_addr #5

declare void @_ZN6SkPath4swapERS_(%class.SkPath*, %class.SkPath* dereferenceable(16)) local_unnamed_addr #5

declare dereferenceable(16) %class.SkPath* @_ZN6SkPathaSERKS_(%class.SkPath*, %class.SkPath* dereferenceable(16)) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN6SkPathD1Ev(%class.SkPath*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK7SkPaint20canComputeFastBoundsEv(%class.SkPaint* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 4, i32 0
  %3 = load %class.SkImageFilter*, %class.SkImageFilter** %2, align 8
  %4 = icmp eq %class.SkImageFilter* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = tail call zeroext i1 @_ZNK13SkImageFilter20canComputeFastBoundsEv(%class.SkImageFilter* nonnull %3) #8
  br i1 %6, label %7, label %19

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 0, i32 0
  %9 = load %class.SkPathEffect*, %class.SkPathEffect** %8, align 8
  %10 = icmp eq %class.SkPathEffect* %9, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %7
  %12 = bitcast %class.SkPathEffect* %9 to %class.SkPathEffectBase*
  %13 = bitcast %class.SkPathEffect* %9 to i1 (%class.SkPathEffectBase*, %struct.SkRect*)***
  %14 = load i1 (%class.SkPathEffectBase*, %struct.SkRect*)**, i1 (%class.SkPathEffectBase*, %struct.SkRect*)*** %13, align 8
  %15 = getelementptr inbounds i1 (%class.SkPathEffectBase*, %struct.SkRect*)*, i1 (%class.SkPathEffectBase*, %struct.SkRect*)** %14, i64 10
  %16 = load i1 (%class.SkPathEffectBase*, %struct.SkRect*)*, i1 (%class.SkPathEffectBase*, %struct.SkRect*)** %15, align 8
  %17 = tail call zeroext i1 %16(%class.SkPathEffectBase* nonnull %12, %struct.SkRect* null) #8
  br i1 %17, label %18, label %19

18:                                               ; preds = %7, %11
  br label %19

19:                                               ; preds = %11, %5, %18
  %20 = phi i1 [ true, %18 ], [ false, %5 ], [ false, %11 ]
  ret i1 %20
}

declare zeroext i1 @_ZNK13SkImageFilter20canComputeFastBoundsEv(%class.SkImageFilter*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %struct.SkRect* @_ZNK7SkPaint19doComputeFastBoundsERK6SkRectPS0_NS_5StyleE(%class.SkPaint*, %struct.SkRect* nocapture readonly dereferenceable(16), %struct.SkRect* returned, i8 zeroext) local_unnamed_addr #1 align 2 {
  %5 = alloca %struct.SkRect, align 4
  %6 = bitcast %struct.SkRect* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #8
  %7 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 0, i32 0
  %8 = bitcast %struct.SkRect* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %8, i8 -1, i64 16, i1 false)
  %9 = load %class.SkPathEffect*, %class.SkPathEffect** %7, align 8
  %10 = icmp eq %class.SkPathEffect* %9, null
  br i1 %10, label %19, label %11

11:                                               ; preds = %4
  %12 = bitcast %struct.SkRect* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %6, i8* align 4 %12, i64 16, i1 false)
  %13 = bitcast %class.SkPathEffect* %9 to %class.SkPathEffectBase*
  %14 = bitcast %class.SkPathEffect* %9 to i1 (%class.SkPathEffectBase*, %struct.SkRect*)***
  %15 = load i1 (%class.SkPathEffectBase*, %struct.SkRect*)**, i1 (%class.SkPathEffectBase*, %struct.SkRect*)*** %14, align 8
  %16 = getelementptr inbounds i1 (%class.SkPathEffectBase*, %struct.SkRect*)*, i1 (%class.SkPathEffectBase*, %struct.SkRect*)** %15, i64 10
  %17 = load i1 (%class.SkPathEffectBase*, %struct.SkRect*)*, i1 (%class.SkPathEffectBase*, %struct.SkRect*)** %16, align 8
  %18 = call zeroext i1 %17(%class.SkPathEffectBase* nonnull %13, %struct.SkRect* nonnull %5) #8
  br label %19

19:                                               ; preds = %4, %11
  %20 = phi %struct.SkRect* [ %5, %11 ], [ %1, %4 ]
  %21 = call float @_ZN11SkStrokeRec18GetInflationRadiusERK7SkPaintNS0_5StyleE(%class.SkPaint* dereferenceable(72) %0, i8 zeroext %3) #8
  %22 = bitcast %struct.SkRect* %20 to <2 x float>*
  %23 = load <2 x float>, <2 x float>* %22, align 4
  %24 = insertelement <2 x float> undef, float %21, i32 0
  %25 = shufflevector <2 x float> %24, <2 x float> undef, <2 x i32> zeroinitializer
  %26 = fsub <2 x float> %23, %25
  %27 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %20, i64 0, i32 2
  %28 = bitcast float* %27 to <2 x float>*
  %29 = load <2 x float>, <2 x float>* %28, align 4
  %30 = fadd <2 x float> %25, %29
  %31 = bitcast %struct.SkRect* %2 to <2 x float>*
  store <2 x float> %26, <2 x float>* %31, align 4
  %32 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 2
  %33 = bitcast float* %32 to <2 x float>*
  store <2 x float> %30, <2 x float>* %33, align 4
  %34 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 2, i32 0
  %35 = load %class.SkMaskFilter*, %class.SkMaskFilter** %34, align 8
  %36 = icmp eq %class.SkMaskFilter* %35, null
  br i1 %36, label %43, label %37

37:                                               ; preds = %19
  %38 = bitcast %class.SkMaskFilter* %35 to %class.SkMaskFilterBase*
  %39 = bitcast %class.SkMaskFilter* %35 to void (%class.SkMaskFilterBase*, %struct.SkRect*, %struct.SkRect*)***
  %40 = load void (%class.SkMaskFilterBase*, %struct.SkRect*, %struct.SkRect*)**, void (%class.SkMaskFilterBase*, %struct.SkRect*, %struct.SkRect*)*** %39, align 8
  %41 = getelementptr inbounds void (%class.SkMaskFilterBase*, %struct.SkRect*, %struct.SkRect*)*, void (%class.SkMaskFilterBase*, %struct.SkRect*, %struct.SkRect*)** %40, i64 12
  %42 = load void (%class.SkMaskFilterBase*, %struct.SkRect*, %struct.SkRect*)*, void (%class.SkMaskFilterBase*, %struct.SkRect*, %struct.SkRect*)** %41, align 8
  call void %42(%class.SkMaskFilterBase* nonnull %38, %struct.SkRect* dereferenceable(16) %2, %struct.SkRect* %2) #8
  br label %43

43:                                               ; preds = %19, %37
  %44 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 4, i32 0
  %45 = load %class.SkImageFilter*, %class.SkImageFilter** %44, align 8
  %46 = icmp eq %class.SkImageFilter* %45, null
  br i1 %46, label %55, label %47

47:                                               ; preds = %43
  %48 = bitcast %class.SkImageFilter* %45 to { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)***
  %49 = load { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)**, { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)*** %48, align 8
  %50 = getelementptr inbounds { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)*, { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)** %49, i64 7
  %51 = load { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)*, { <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)** %50, align 8
  %52 = call { <2 x float>, <2 x float> } %51(%class.SkImageFilter* nonnull %45, %struct.SkRect* dereferenceable(16) %2) #8
  %53 = extractvalue { <2 x float>, <2 x float> } %52, 0
  %54 = extractvalue { <2 x float>, <2 x float> } %52, 1
  store <2 x float> %53, <2 x float>* %31, align 4
  store <2 x float> %54, <2 x float>* %33, align 4
  br label %55

55:                                               ; preds = %43, %47
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #8
  ret %struct.SkRect* %2
}

declare float @_ZN11SkStrokeRec18GetInflationRadiusERK7SkPaintNS0_5StyleE(%class.SkPaint* dereferenceable(72), i8 zeroext) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK7SkPaint13nothingToDrawEv(%class.SkPaint* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = lshr i32 %3, 10
  %5 = trunc i32 %4 to i8
  switch i8 %5, label %29 [
    i8 3, label %6
    i8 9, label %6
    i8 8, label %6
    i8 4, label %6
    i8 12, label %6
    i8 2, label %30
  ]

6:                                                ; preds = %1, %1, %1, %1, %1
  %7 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 5, i32 3
  %8 = load float, float* %7, align 4
  %9 = fmul float %8, 2.550000e+02
  %10 = fadd float %9, 5.000000e-01
  %11 = tail call float @llvm.floor.f32(float %10) #8
  %12 = fcmp olt float %11, 0x41DFFFFFE0000000
  %13 = select i1 %12, float %11, float 0x41DFFFFFE0000000
  %14 = fcmp ogt float %13, 0xC1DFFFFFE0000000
  %15 = select i1 %14, float %13, float 0xC1DFFFFFE0000000
  %16 = fptosi float %15 to i32
  %17 = trunc i32 %16 to i8
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %29

19:                                               ; preds = %6
  %20 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 3, i32 0
  %21 = load %class.SkColorFilter*, %class.SkColorFilter** %20, align 8
  %22 = icmp eq %class.SkColorFilter* %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %19
  %24 = tail call zeroext i1 @_ZNK13SkColorFilter16isAlphaUnchangedEv(%class.SkColorFilter* nonnull %21) #8
  br i1 %24, label %25, label %30

25:                                               ; preds = %23, %19
  %26 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 4, i32 0
  %27 = load %class.SkImageFilter*, %class.SkImageFilter** %26, align 8
  %28 = icmp eq %class.SkImageFilter* %27, null
  br label %30

29:                                               ; preds = %1, %6
  br label %30

30:                                               ; preds = %23, %1, %25, %29
  %31 = phi i1 [ false, %29 ], [ false, %23 ], [ %28, %25 ], [ true, %1 ]
  ret i1 %31
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK7SkPaint7getHashEv(%class.SkPaint*) local_unnamed_addr #1 align 2 {
  %2 = bitcast %class.SkPaint* %0 to i8*
  %3 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** @_ZN6SkOpts7hash_fnE, align 8
  %4 = tail call i32 %3(i8* %2, i64 68, i32 0) #8
  ret i32 %4
}

declare %class.SkFlattenable* @_ZN12SkReadBuffer15readFlattenableEN13SkFlattenable4TypeE(%class.SkReadBuffer*, i32) local_unnamed_addr #5

declare void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer*) local_unnamed_addr #5

declare zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect*, %struct.SkPoint*, i32) local_unnamed_addr #5

declare i32 @_ZNK11SkStrokeRec8getStyleEv(%class.SkStrokeRec*) local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #7

declare zeroext i1 @_ZNK13SkColorFilter16isAlphaUnchangedEv(%class.SkColorFilter*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN12SkReadBuffer15readFlattenableI12SkPathEffectEE5sk_spIT_Ev: argument 0"}
!4 = distinct !{!4, !"_ZN12SkReadBuffer15readFlattenableI12SkPathEffectEE5sk_spIT_Ev"}
!5 = distinct !{!5, !6, !"_ZN12SkReadBuffer14readPathEffectEv: argument 0"}
!6 = distinct !{!6, !"_ZN12SkReadBuffer14readPathEffectEv"}
!7 = !{!8, !10}
!8 = distinct !{!8, !9, !"_ZN12SkReadBuffer15readFlattenableI12SkShaderBaseEE5sk_spIT_Ev: argument 0"}
!9 = distinct !{!9, !"_ZN12SkReadBuffer15readFlattenableI12SkShaderBaseEE5sk_spIT_Ev"}
!10 = distinct !{!10, !11, !"_ZN12SkReadBuffer10readShaderEv: argument 0"}
!11 = distinct !{!11, !"_ZN12SkReadBuffer10readShaderEv"}
!12 = !{!13, !15}
!13 = distinct !{!13, !14, !"_ZN12SkReadBuffer15readFlattenableI16SkMaskFilterBaseEE5sk_spIT_Ev: argument 0"}
!14 = distinct !{!14, !"_ZN12SkReadBuffer15readFlattenableI16SkMaskFilterBaseEE5sk_spIT_Ev"}
!15 = distinct !{!15, !16, !"_ZN12SkReadBuffer14readMaskFilterEv: argument 0"}
!16 = distinct !{!16, !"_ZN12SkReadBuffer14readMaskFilterEv"}
!17 = !{!18, !20}
!18 = distinct !{!18, !19, !"_ZN12SkReadBuffer15readFlattenableI17SkColorFilterBaseEE5sk_spIT_Ev: argument 0"}
!19 = distinct !{!19, !"_ZN12SkReadBuffer15readFlattenableI17SkColorFilterBaseEE5sk_spIT_Ev"}
!20 = distinct !{!20, !21, !"_ZN12SkReadBuffer15readColorFilterEv: argument 0"}
!21 = distinct !{!21, !"_ZN12SkReadBuffer15readColorFilterEv"}
!22 = !{!23, !25}
!23 = distinct !{!23, !24, !"_ZN12SkReadBuffer15readFlattenableI13SkImageFilterEE5sk_spIT_Ev: argument 0"}
!24 = distinct !{!24, !"_ZN12SkReadBuffer15readFlattenableI13SkImageFilterEE5sk_spIT_Ev"}
!25 = distinct !{!25, !26, !"_ZN12SkReadBuffer15readImageFilterEv: argument 0"}
!26 = distinct !{!26, !"_ZN12SkReadBuffer15readImageFilterEv"}
!27 = !{i8 0, i8 2}
