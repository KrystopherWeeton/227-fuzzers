; ModuleID = '../../third_party/skia/src/core/SkSharedMutex.cpp'
source_filename = "../../third_party/skia/src/core/SkSharedMutex.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%class.SkSharedMutex = type { %"struct.std::__1::atomic", %class.SkSemaphore, %class.SkSemaphore }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque

@_ZN13SkSharedMutexC1Ev = hidden unnamed_addr alias void (%class.SkSharedMutex*), void (%class.SkSharedMutex*)* @_ZN13SkSharedMutexC2Ev
@_ZN13SkSharedMutexD1Ev = hidden unnamed_addr alias void (%class.SkSharedMutex*), void (%class.SkSharedMutex*)* @_ZN13SkSharedMutexD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN13SkSharedMutexC2Ev(%class.SkSharedMutex* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkSharedMutex, %class.SkSharedMutex* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %2, align 4
  %3 = getelementptr inbounds %class.SkSharedMutex, %class.SkSharedMutex* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %3, align 4
  %4 = getelementptr inbounds %class.SkSharedMutex, %class.SkSharedMutex* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %4, align 1
  %5 = getelementptr inbounds %class.SkSharedMutex, %class.SkSharedMutex* %0, i64 0, i32 1, i32 2
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %5, align 8
  %6 = getelementptr inbounds %class.SkSharedMutex, %class.SkSharedMutex* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %6, align 4
  %7 = getelementptr inbounds %class.SkSharedMutex, %class.SkSharedMutex* %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %7, align 1
  %8 = getelementptr inbounds %class.SkSharedMutex, %class.SkSharedMutex* %0, i64 0, i32 2, i32 2
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %8, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkSharedMutexD2Ev(%class.SkSharedMutex*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.SkSharedMutex, %class.SkSharedMutex* %0, i64 0, i32 2
  tail call void @_ZN11SkSemaphoreD1Ev(%class.SkSemaphore* %2) #4
  %3 = getelementptr inbounds %class.SkSharedMutex, %class.SkSharedMutex* %0, i64 0, i32 1
  tail call void @_ZN11SkSemaphoreD1Ev(%class.SkSemaphore* %3) #4
  ret void
}

; Function Attrs: nounwind
declare void @_ZN11SkSemaphoreD1Ev(%class.SkSemaphore*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkSharedMutex7acquireEv(%class.SkSharedMutex*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.SkSharedMutex, %class.SkSharedMutex* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = atomicrmw add i32* %2, i32 1024 acquire
  %4 = and i32 %3, 1048575
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkSharedMutex, %class.SkSharedMutex* %0, i64 0, i32 2
  %8 = getelementptr inbounds %class.SkSemaphore, %class.SkSemaphore* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acquire
  %10 = icmp slt i32 %9, 1
  br i1 %10, label %11, label %12

11:                                               ; preds = %6
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %7) #4
  br label %12

12:                                               ; preds = %11, %6, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkSharedMutex7releaseEv(%class.SkSharedMutex*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.SkSharedMutex, %class.SkSharedMutex* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load atomic i32, i32* %2 monotonic, align 4
  %4 = add nsw i32 %3, -1024
  %5 = lshr i32 %3, 20
  %6 = and i32 %5, 1023
  %7 = icmp ne i32 %6, 0
  %8 = and i32 %4, -1072693249
  %9 = or i32 %8, %6
  %10 = select i1 %7, i32 %9, i32 %4
  %11 = cmpxchg i32* %2, i32 %3, i32 %10 release monotonic
  %12 = extractvalue { i32, i1 } %11, 1
  br i1 %12, label %25, label %13

13:                                               ; preds = %1, %13
  %14 = phi { i32, i1 } [ %23, %13 ], [ %11, %1 ]
  %15 = extractvalue { i32, i1 } %14, 0
  %16 = add nsw i32 %15, -1024
  %17 = lshr i32 %15, 20
  %18 = and i32 %17, 1023
  %19 = icmp ne i32 %18, 0
  %20 = and i32 %16, -1072693249
  %21 = or i32 %20, %18
  %22 = select i1 %19, i32 %21, i32 %16
  %23 = cmpxchg i32* %2, i32 %15, i32 %22 release monotonic
  %24 = extractvalue { i32, i1 } %23, 1
  br i1 %24, label %25, label %13

25:                                               ; preds = %13, %1
  %26 = phi i32 [ %6, %1 ], [ %18, %13 ]
  %27 = phi i1 [ %7, %1 ], [ %19, %13 ]
  %28 = phi i32 [ %10, %1 ], [ %22, %13 ]
  br i1 %27, label %29, label %38

29:                                               ; preds = %25
  %30 = getelementptr inbounds %class.SkSharedMutex, %class.SkSharedMutex* %0, i64 0, i32 1
  %31 = getelementptr inbounds %class.SkSemaphore, %class.SkSemaphore* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw add i32* %31, i32 %26 release
  %33 = sub nsw i32 0, %32
  %34 = icmp slt i32 %26, %33
  %35 = select i1 %34, i32 %26, i32 %33
  %36 = icmp sgt i32 %35, 0
  br i1 %36, label %37, label %47

37:                                               ; preds = %29
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %30, i32 %35) #4
  br label %47

38:                                               ; preds = %25
  %39 = and i32 %28, 1047552
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %38
  %42 = getelementptr inbounds %class.SkSharedMutex, %class.SkSharedMutex* %0, i64 0, i32 2
  %43 = getelementptr inbounds %class.SkSemaphore, %class.SkSemaphore* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = atomicrmw add i32* %43, i32 1 release
  %45 = icmp slt i32 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %41
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %42, i32 1) #4
  br label %47

47:                                               ; preds = %46, %41, %37, %29, %38
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkSharedMutex13acquireSharedEv(%class.SkSharedMutex*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.SkSharedMutex, %class.SkSharedMutex* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load atomic i32, i32* %2 monotonic, align 4
  %4 = and i32 %3, 1047552
  %5 = icmp eq i32 %4, 0
  %6 = select i1 %5, i32 1, i32 1048576
  %7 = add nsw i32 %6, %3
  %8 = cmpxchg i32* %2, i32 %3, i32 %7 acquire monotonic
  %9 = extractvalue { i32, i1 } %8, 1
  br i1 %9, label %19, label %10

10:                                               ; preds = %1, %10
  %11 = phi { i32, i1 } [ %17, %10 ], [ %8, %1 ]
  %12 = extractvalue { i32, i1 } %11, 0
  %13 = and i32 %12, 1047552
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %14, i32 1, i32 1048576
  %16 = add nsw i32 %15, %12
  %17 = cmpxchg i32* %2, i32 %12, i32 %16 acquire monotonic
  %18 = extractvalue { i32, i1 } %17, 1
  br i1 %18, label %19, label %10

19:                                               ; preds = %10, %1
  %20 = phi i32 [ %7, %1 ], [ %16, %10 ]
  %21 = and i32 %20, 1047552
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %29, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %class.SkSharedMutex, %class.SkSharedMutex* %0, i64 0, i32 1
  %25 = getelementptr inbounds %class.SkSemaphore, %class.SkSemaphore* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw sub i32* %25, i32 1 acquire
  %27 = icmp slt i32 %26, 1
  br i1 %27, label %28, label %29

28:                                               ; preds = %23
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %24) #4
  br label %29

29:                                               ; preds = %28, %23, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkSharedMutex13releaseSharedEv(%class.SkSharedMutex*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.SkSharedMutex, %class.SkSharedMutex* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = atomicrmw sub i32* %2, i32 1 release
  %4 = and i32 %3, 1023
  %5 = icmp ne i32 %4, 1
  %6 = and i32 %3, 1047552
  %7 = icmp eq i32 %6, 0
  %8 = or i1 %5, %7
  br i1 %8, label %15, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %class.SkSharedMutex, %class.SkSharedMutex* %0, i64 0, i32 2
  %11 = getelementptr inbounds %class.SkSemaphore, %class.SkSemaphore* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw add i32* %11, i32 1 release
  %13 = icmp slt i32 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %10, i32 1) #4
  br label %15

15:                                               ; preds = %14, %9, %1
  ret void
}

declare void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore*) local_unnamed_addr #3

declare void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore*, i32) local_unnamed_addr #3

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
