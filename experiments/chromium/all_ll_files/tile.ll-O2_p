; ModuleID = '../../cc/tiles/tile.cc'
source_filename = "../../cc/tiles/tile.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.cc::Tile" = type { %"class.cc::TileManager"*, %"class.cc::PictureLayerTiling"*, %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::AxisTransform2d", %"class.cc::TileDrawInfo", i32, i32, i32, i32, i32, i64, i32, i8, i64, %"class.std::__1::vector.330", %"class.gfx::Rect", %class.scoped_refptr.91 }
%"class.cc::PictureLayerTiling" = type <{ %"class.gfx::AxisTransform2d", %"class.cc::PictureLayerTilingClient"*, i32, [4 x i8], %class.scoped_refptr.287, float, float, i32, i8, [3 x i8], %"class.cc::TilingData", [4 x i8], %"class.std::__1::unordered_map.290", %"class.gfx::Rect", i8, [3 x i8], %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", float, %"class.cc::Occlusion", float, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.cc::PictureLayerTilingClient" = type { i32 (...)** }
%class.scoped_refptr.287 = type { %"class.cc::RasterSource"* }
%"class.cc::RasterSource" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.288", [4 x i8], i64, %class.scoped_refptr.289, i32, i8, i8, [2 x i8], i32, %"class.gfx::Rect", %"class.gfx::Size", i32, float, [4 x i8] }>
%"class.base::RefCountedThreadSafe.288" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.289 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type opaque
%"class.gfx::Size" = type { i32, i32 }
%"class.cc::TilingData" = type { %"class.gfx::Size", %"class.gfx::Size", i32, i32, i32 }
%"class.std::__1::unordered_map.290" = type { %"class.std::__1::__hash_table.291" }
%"class.std::__1::__hash_table.291" = type <{ %"class.std::__1::unique_ptr.292", %"class.std::__1::__compressed_pair.302", %"class.std::__1::__compressed_pair.307", %"class.std::__1::__compressed_pair.310", [4 x i8] }>
%"class.std::__1::unique_ptr.292" = type { %"class.std::__1::__compressed_pair.293" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.294", %"struct.std::__1::__compressed_pair_elem.296" }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"struct.std::__1::__hash_node_base.295"** }
%"struct.std::__1::__hash_node_base.295" = type { %"struct.std::__1::__hash_node_base.295"* }
%"struct.std::__1::__compressed_pair_elem.296" = type { %"class.std::__1::__bucket_list_deallocator.297" }
%"class.std::__1::__bucket_list_deallocator.297" = type { %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { i64 }
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.303" }
%"struct.std::__1::__compressed_pair_elem.303" = type { %"struct.std::__1::__hash_node_base.295" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { float }
%"class.cc::Occlusion" = type { %"class.gfx::Transform", %"class.cc::SimpleEnclosedRegion", %"class.cc::SimpleEnclosedRegion" }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.cc::SimpleEnclosedRegion" = type { %"class.gfx::Rect" }
%"class.gfx::AxisTransform2d" = type { %"class.gfx::Vector2dF", %"class.gfx::Vector2dF" }
%"class.gfx::Vector2dF" = type { float, float }
%"class.cc::TileDrawInfo" = type <{ i32, i32, %"class.cc::ResourcePool::InUsePoolResource", i8, i8, i8, [5 x i8] }>
%"class.cc::ResourcePool::InUsePoolResource" = type { i8, %"class.cc::ResourcePool::PoolResource"* }
%"class.cc::ResourcePool::PoolResource" = type { i64, %"class.gfx::Size", i32, %"class.gfx::ColorSpace", i64, %"class.base::TimeTicks", %"class.gfx::Rect", i8, %"class.util::IdType", %"class.std::__1::unique_ptr.316", %"class.std::__1::unique_ptr.324" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i32 }
%"class.std::__1::unique_ptr.316" = type { %"class.std::__1::__compressed_pair.317" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.318" }
%"struct.std::__1::__compressed_pair_elem.318" = type { %"class.cc::ResourcePool::GpuBacking"* }
%"class.cc::ResourcePool::GpuBacking" = type { i32 (...)**, %"struct.gpu::Mailbox", %"struct.gpu::SyncToken", i32, i8, i8, %"struct.gpu::SyncToken" }
%"struct.gpu::Mailbox" = type { [16 x i8] }
%"struct.gpu::SyncToken" = type { i8, i8, %"class.util::IdType.319", i64 }
%"class.util::IdType.319" = type { %"class.base::StrongAlias.320" }
%"class.base::StrongAlias.320" = type { i64 }
%"class.std::__1::unique_ptr.324" = type { %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.cc::ResourcePool::SoftwareBacking"* }
%"class.cc::ResourcePool::SoftwareBacking" = type { i32 (...)**, %"struct.gpu::Mailbox" }
%"class.std::__1::vector.330" = type { %"class.std::__1::__vector_base.331" }
%"class.std::__1::__vector_base.331" = type { %"struct.std::__1::pair.332"*, %"struct.std::__1::pair.332"*, %"class.std::__1::__compressed_pair.333" }
%"struct.std::__1::pair.332" = type { %"class.gfx::Rect", %"class.gfx::AxisTransform2d" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"struct.std::__1::pair.332"* }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%class.scoped_refptr.91 = type { %"class.cc::TileTask"* }
%"class.cc::TileTask" = type <{ %"class.cc::Task", i32, i32, %"class.std::__1::vector.93", i8, [7 x i8] }>
%"class.cc::Task" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.92", %"class.cc::TaskState", i64 }
%"class.base::RefCountedThreadSafe.92" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.cc::TaskState" = type { i16 }
%"class.std::__1::vector.93" = type { %"class.std::__1::__vector_base.94" }
%"class.std::__1::__vector_base.94" = type { %class.scoped_refptr.91*, %class.scoped_refptr.91*, %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %class.scoped_refptr.91* }
%"class.cc::TileManager" = type { %"class.cc::CheckerImageTrackerClient", %"class.cc::TileManagerClient"*, %"class.base::SequencedTaskRunner"*, %"class.cc::ResourcePool"*, %"class.std::__1::unique_ptr.18", %"class.cc::RasterBufferProvider"*, %"class.cc::GlobalStateThatImpactsTilePriority", i64, %"struct.cc::TileManagerSettings", i8, i8, %"class.cc::RasterQueryQueue"*, %"class.std::__1::unordered_map", i8, [7 x i8], %"struct.cc::MemoryHistory::Entry", i8, i8, %"class.cc::ImageController", %"class.cc::DecodedImageTracker", %"class.cc::CheckerImageTracker", %"struct.cc::RasterTaskCompletionStats", %"struct.cc::TaskGraph", %"class.cc::UniqueNotifier", %"struct.cc::TileManager::Signals", %"class.cc::UniqueNotifier", i8, i64, i64, %"class.std::__1::unordered_set", i64, i64, i8, [7 x i8], %"class.std::__1::unordered_map.242", %"class.std::__1::vector.93", i32, %class.GURL, i8, %"class.base::internal::CancelableCallbackImpl", %"class.base::WaitableEvent", %"class.base::WeakPtrFactory.286", %"class.base::WeakPtrFactory.286" }
%"class.cc::CheckerImageTrackerClient" = type { i32 (...)** }
%"class.cc::TileManagerClient" = type { i32 (...)** }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.cc::ResourcePool" = type { %"class.base::trace_event::MemoryDumpProvider", %"class.viz::ClientResourceProvider"*, %"class.viz::ContextProvider"*, %class.scoped_refptr, %"class.base::TimeDelta", i8, i32, i64, i64, i64, i64, i64, i64, i8, i8, %"class.base::circular_deque", %"class.base::circular_deque", %"class.std::__1::map", %"class.std::__1::unique_ptr.5", %"class.base::TimeTicks", %"class.base::TickClock"*, %"class.base::WeakPtrFactory" }
%"class.base::trace_event::MemoryDumpProvider" = type { i32 (...)** }
%"class.viz::ClientResourceProvider" = type opaque
%"class.viz::ContextProvider" = type opaque
%class.scoped_refptr = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr"*, i64 }
%"class.std::__1::unique_ptr" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.base::MemoryPressureListener"* }
%"class.base::MemoryPressureListener" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback", %"class.base::Location" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.8 }
%class.scoped_refptr.8 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.9", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.9" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.11 }
%class.scoped_refptr.11 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.12", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.12" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.13" }
%"struct.std::__1::atomic.13" = type { %"struct.std::__1::__atomic_base.14" }
%"struct.std::__1::__atomic_base.14" = type { %"struct.std::__1::__atomic_base.15" }
%"struct.std::__1::__atomic_base.15" = type { %"struct.std::__1::__cxx_atomic_impl.16" }
%"struct.std::__1::__cxx_atomic_impl.16" = type { %"struct.std::__1::__cxx_atomic_base_impl.17" }
%"struct.std::__1::__cxx_atomic_base_impl.17" = type { i8 }
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.cc::TileTaskManager"* }
%"class.cc::TileTaskManager" = type { i32 (...)** }
%"class.cc::RasterBufferProvider" = type { i32 (...)** }
%"class.cc::GlobalStateThatImpactsTilePriority" = type <{ i32, [4 x i8], i64, i64, i64, i32, [4 x i8] }>
%"struct.cc::TileManagerSettings" = type { i8, i8, i64 }
%"class.cc::RasterQueryQueue" = type { i32 (...)**, %"class.viz::RasterContextProvider"*, i8, %"class.base::Lock", %"class.base::circular_deque.24" }
%"class.viz::RasterContextProvider" = type opaque
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.base::circular_deque.24" = type { %"class.base::internal::VectorBuffer.25", i64, i64 }
%"class.base::internal::VectorBuffer.25" = type { %"struct.cc::RasterQuery"*, i64 }
%"struct.cc::RasterQuery" = type <{ i32, [4 x i8], %"class.base::TimeDelta", i32, [4 x i8], %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.26", %"class.std::__1::__compressed_pair.34", %"class.std::__1::__compressed_pair.39", %"class.std::__1::__compressed_pair.41", [4 x i8] }>
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28", %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.cc::MemoryHistory::Entry" = type <{ i64, i64, i8, [7 x i8] }>
%"class.cc::ImageController" = type { i32 (...)**, %class.scoped_refptr.44, %"class.base::WeakPtr", %"class.cc::ImageDecodeCache"*, %"class.std::__1::vector", %"class.base::flat_map", %"class.base::SequencedTaskRunner"*, i64, %"class.base::Lock", %"class.std::__1::map.80", %"class.std::__1::map.80", i8, %"class.std::__1::vector.89", %"class.base::WeakPtrFactory.105" }
%class.scoped_refptr.44 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.45 }
%class.scoped_refptr.45 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.cc::ImageDecodeCache" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.cc::DrawImage"*, %"class.cc::DrawImage"*, %"class.std::__1::__compressed_pair.68" }
%"class.cc::DrawImage" = type <{ %"class.cc::PaintImage", i8, [3 x i8], %struct.SkIRect, i32, %struct.SkSize, i8, [7 x i8], %"class.absl::optional", %"class.absl::optional.63", float, [4 x i8] }>
%"class.cc::PaintImage" = type { %class.sk_sp, %class.sk_sp.47, %"class.gfx::Rect", i32, %class.sk_sp.52, %class.sk_sp.60, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp, %class.scoped_refptr.61 }
%class.sk_sp.47 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.48", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { i8* }
%class.sk_sp.52 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type { %class.SkRefCnt.base, %struct.SkImageInfo, i32, %"class.std::__1::vector.53" }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.46, i32, i32 }
%class.sk_sp.46 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.13" }
%struct.SkISize = type { i32, i32 }
%"class.std::__1::vector.53" = type { %"class.std::__1::__vector_base.54" }
%"class.std::__1::__vector_base.54" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.55" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"struct.cc::FrameMetadata"* }
%class.sk_sp.60 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type opaque
%class.sk_sp = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.scoped_refptr.61 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.62", [4 x i8] }>
%"class.base::RefCountedThreadSafe.62" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkSize = type { float, float }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i64 }
%"class.absl::optional.63" = type { %"class.absl::optional_internal::optional_data.64" }
%"class.absl::optional_internal::optional_data.64" = type { %"class.absl::optional_internal::optional_data_base.65" }
%"class.absl::optional_internal::optional_data_base.65" = type { %"class.absl::optional_internal::optional_data_dtor_base.66" }
%"class.absl::optional_internal::optional_data_dtor_base.66" = type { i8, %union.anon.67 }
%union.anon.67 = type { %"class.gfx::ColorSpace" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.cc::DrawImage"* }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.73" }
%"class.std::__1::vector.73" = type { %"class.std::__1::__vector_base.74" }
%"class.std::__1::__vector_base.74" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.75" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"struct.std::__1::pair"* }
%"class.std::__1::map.80" = type { %"class.std::__1::__tree.81" }
%"class.std::__1::__tree.81" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.82", %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::vector.89" = type { %"class.std::__1::__vector_base.90" }
%"class.std::__1::__vector_base.90" = type { %"struct.cc::ImageController::ImageDecodeRequest"*, %"struct.cc::ImageController::ImageDecodeRequest"*, %"class.std::__1::__compressed_pair.100" }
%"struct.cc::ImageController::ImageDecodeRequest" = type <{ i64, %"class.cc::DrawImage", %"class.base::OnceCallback", %class.scoped_refptr.91, i8, [7 x i8] }>
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"struct.cc::ImageController::ImageDecodeRequest"* }
%"class.base::WeakPtrFactory.105" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.cc::DecodedImageTracker" = type { %"class.cc::ImageController"*, %"class.base::flat_map.106", i8, %class.scoped_refptr.44, %"class.base::TickClock"*, %"class.base::WeakPtrFactory.116" }
%"class.base::flat_map.106" = type { %"class.base::internal::flat_tree.107" }
%"class.base::internal::flat_tree.107" = type { %"class.std::__1::vector.108" }
%"class.std::__1::vector.108" = type { %"class.std::__1::__vector_base.109" }
%"class.std::__1::__vector_base.109" = type { %"struct.std::__1::pair.110"*, %"struct.std::__1::pair.110"*, %"class.std::__1::__compressed_pair.111" }
%"struct.std::__1::pair.110" = type { i32, %"class.std::__1::unique_ptr.344" }
%"class.std::__1::unique_ptr.344" = type { %"class.std::__1::__compressed_pair.345" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.346" }
%"struct.std::__1::__compressed_pair_elem.346" = type { %"class.cc::DecodedImageTracker::ImageLock"* }
%"class.cc::DecodedImageTracker::ImageLock" = type { %"class.cc::DecodedImageTracker"*, i64, %"class.base::TimeTicks" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"struct.std::__1::pair.110"* }
%"class.base::WeakPtrFactory.116" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.cc::CheckerImageTracker" = type { %"class.cc::ImageController"*, %"class.cc::CheckerImageTrackerClient"*, i8, i64, i8, %"class.base::internal::flat_tree.117", %"class.base::internal::flat_tree.117", %"class.std::__1::vector.125", i32, %"class.absl::optional.132", %"class.std::__1::unordered_map.137", %"class.std::__1::unordered_map.165", %"class.base::flat_map.189", %"class.base::WeakPtrFactory.199" }
%"class.base::internal::flat_tree.117" = type { %"class.std::__1::vector.118" }
%"class.std::__1::vector.118" = type { %"class.std::__1::__vector_base.119" }
%"class.std::__1::__vector_base.119" = type { i32*, i32*, %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { i32* }
%"class.std::__1::vector.125" = type { %"class.std::__1::__vector_base.126" }
%"class.std::__1::__vector_base.126" = type { %"struct.cc::CheckerImageTracker::ImageDecodeRequest"*, %"struct.cc::CheckerImageTracker::ImageDecodeRequest"*, %"class.std::__1::__compressed_pair.127" }
%"struct.cc::CheckerImageTracker::ImageDecodeRequest" = type <{ %"class.cc::PaintImage", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"struct.cc::CheckerImageTracker::ImageDecodeRequest"* }
%"class.absl::optional.132" = type { %"class.absl::optional_internal::optional_data.133" }
%"class.absl::optional_internal::optional_data.133" = type { %"class.absl::optional_internal::optional_data_base.134" }
%"class.absl::optional_internal::optional_data_base.134" = type { %"class.absl::optional_internal::optional_data_dtor_base.135" }
%"class.absl::optional_internal::optional_data_dtor_base.135" = type { i8, %union.anon.136 }
%union.anon.136 = type { %"class.cc::PaintImage" }
%"class.std::__1::unordered_map.137" = type { %"class.std::__1::__hash_table.138" }
%"class.std::__1::__hash_table.138" = type <{ %"class.std::__1::unique_ptr.139", %"class.std::__1::__compressed_pair.149", %"class.std::__1::__compressed_pair.154", %"class.std::__1::__compressed_pair.159", [4 x i8] }>
%"class.std::__1::unique_ptr.139" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141", %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"struct.std::__1::__hash_node_base.142"** }
%"struct.std::__1::__hash_node_base.142" = type { %"struct.std::__1::__hash_node_base.142"* }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.std::__1::__bucket_list_deallocator.144" }
%"class.std::__1::__bucket_list_deallocator.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"struct.std::__1::__hash_node_base.142" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"class.std::__1::unordered_map.165" = type { %"class.std::__1::__hash_table.166" }
%"class.std::__1::__hash_table.166" = type <{ %"class.std::__1::unique_ptr.167", %"class.std::__1::__compressed_pair.177", %"class.std::__1::__compressed_pair.182", %"class.std::__1::__compressed_pair.185", [4 x i8] }>
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169", %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"struct.std::__1::__hash_node_base.170"** }
%"struct.std::__1::__hash_node_base.170" = type { %"struct.std::__1::__hash_node_base.170"* }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.std::__1::__bucket_list_deallocator.172" }
%"class.std::__1::__bucket_list_deallocator.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"struct.std::__1::__hash_node_base.170" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"class.base::flat_map.189" = type { %"class.base::internal::flat_tree.190" }
%"class.base::internal::flat_tree.190" = type { %"class.std::__1::vector.191" }
%"class.std::__1::vector.191" = type { %"class.std::__1::__vector_base.192" }
%"class.std::__1::__vector_base.192" = type { %"struct.std::__1::pair.193"*, %"struct.std::__1::pair.193"*, %"class.std::__1::__compressed_pair.194" }
%"struct.std::__1::pair.193" = type { i32, i32 }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"struct.std::__1::pair.193"* }
%"class.base::WeakPtrFactory.199" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"struct.cc::RasterTaskCompletionStats" = type { i64, i64 }
%"struct.cc::TaskGraph" = type { %"class.std::__1::vector.200", %"class.std::__1::vector.208" }
%"class.std::__1::vector.200" = type { %"class.std::__1::__vector_base.201" }
%"class.std::__1::__vector_base.201" = type { %"struct.cc::TaskGraph::Node"*, %"struct.cc::TaskGraph::Node"*, %"class.std::__1::__compressed_pair.203" }
%"struct.cc::TaskGraph::Node" = type { %class.scoped_refptr.202, i16, i16, i32 }
%class.scoped_refptr.202 = type { %"class.cc::Task"* }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.204" }
%"struct.std::__1::__compressed_pair_elem.204" = type { %"struct.cc::TaskGraph::Node"* }
%"class.std::__1::vector.208" = type { %"class.std::__1::__vector_base.209" }
%"class.std::__1::__vector_base.209" = type { %"struct.cc::TaskGraph::Edge"*, %"struct.cc::TaskGraph::Edge"*, %"class.std::__1::__compressed_pair.210" }
%"struct.cc::TaskGraph::Edge" = type { %"class.cc::Task"*, %"class.cc::Task"* }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"struct.std::__1::__compressed_pair_elem.211" = type { %"struct.cc::TaskGraph::Edge"* }
%"struct.cc::TileManager::Signals" = type { i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.cc::UniqueNotifier" = type { %"class.base::SequencedTaskRunner"*, %"class.base::RepeatingCallback.215", %"class.base::Lock", i8, %"class.base::WeakPtrFactory.216" }
%"class.base::RepeatingCallback.215" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.216" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.217" }
%"class.std::__1::__hash_table.217" = type <{ %"class.std::__1::unique_ptr.218", %"class.std::__1::__compressed_pair.228", %"class.std::__1::__compressed_pair.233", %"class.std::__1::__compressed_pair.237", [4 x i8] }>
%"class.std::__1::unique_ptr.218" = type { %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220", %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"struct.std::__1::__hash_node_base.221"** }
%"struct.std::__1::__hash_node_base.221" = type { %"struct.std::__1::__hash_node_base.221"* }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.std::__1::__bucket_list_deallocator.223" }
%"class.std::__1::__bucket_list_deallocator.223" = type { %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"struct.std::__1::__hash_node_base.221" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"class.std::__1::unordered_map.242" = type { %"class.std::__1::__hash_table.243" }
%"class.std::__1::__hash_table.243" = type <{ %"class.std::__1::unique_ptr.244", %"class.std::__1::__compressed_pair.254", %"class.std::__1::__compressed_pair.259", %"class.std::__1::__compressed_pair.262", [4 x i8] }>
%"class.std::__1::unique_ptr.244" = type { %"class.std::__1::__compressed_pair.245" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.246", %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.246" = type { %"struct.std::__1::__hash_node_base.247"** }
%"struct.std::__1::__hash_node_base.247" = type { %"struct.std::__1::__hash_node_base.247"* }
%"struct.std::__1::__compressed_pair_elem.248" = type { %"class.std::__1::__bucket_list_deallocator.249" }
%"class.std::__1::__bucket_list_deallocator.249" = type { %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"struct.std::__1::__hash_node_base.247" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.272" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.266" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"struct.std::__1::__compressed_pair_elem.267" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.268 }
%union.anon.268 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.272" = type { %"class.std::__1::__compressed_pair.273" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.274" }
%"struct.std::__1::__compressed_pair_elem.274" = type { %class.GURL* }
%"class.base::internal::CancelableCallbackImpl" = type { %"class.base::OnceCallback.278", %"class.base::WeakPtrFactory.279" }
%"class.base::OnceCallback.278" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.279" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.280, i8, [7 x i8] }>
%class.scoped_refptr.280 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.281", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.281" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.282" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.base::WeakPtrFactory.286" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"struct.cc::Tile::CreateInfo" = type <{ %"class.cc::PictureLayerTiling"*, i32, i32, %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::AxisTransform2d", i8, [7 x i8] }>
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.base::trace_event::TracedValue" = type { %"class.base::trace_event::ConvertableToTraceFormat", %"class.std::__1::unique_ptr.338" }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.std::__1::unique_ptr.338" = type { %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.340" }
%"struct.std::__1::__compressed_pair_elem.340" = type { %"class.base::trace_event::TracedValue::Writer"* }
%"class.base::trace_event::TracedValue::Writer" = type { i32 (...)** }

@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [9 x i8] c"cc::Tile\00", align 1
@.str.1 = private unnamed_addr constant [29 x i8] c"disabled-by-default-cc.debug\00", align 1
@.str.2 = private unnamed_addr constant [15 x i8] c"contents_scale\00", align 1
@.str.3 = private unnamed_addr constant [17 x i8] c"raster_transform\00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"scale\00", align 1
@.str.5 = private unnamed_addr constant [12 x i8] c"translation\00", align 1
@.str.6 = private unnamed_addr constant [13 x i8] c"content_rect\00", align 1
@.str.7 = private unnamed_addr constant [9 x i8] c"layer_id\00", align 1
@.str.8 = private unnamed_addr constant [10 x i8] c"draw_info\00", align 1
@.str.9 = private unnamed_addr constant [13 x i8] c"has_resource\00", align 1
@.str.10 = private unnamed_addr constant [20 x i8] c"is_using_gpu_memory\00", align 1
@.str.11 = private unnamed_addr constant [19 x i8] c"scheduled_priority\00", align 1
@.str.12 = private unnamed_addr constant [21 x i8] c"use_picture_analysis\00", align 1
@.str.13 = private unnamed_addr constant [17 x i8] c"gpu_memory_usage\00", align 1

@_ZN2cc4TileC1EPNS_11TileManagerERKNS0_10CreateInfoEiii = hidden unnamed_addr alias void (%"class.cc::Tile"*, %"class.cc::TileManager"*, %"struct.cc::Tile::CreateInfo"*, i32, i32, i32), void (%"class.cc::Tile"*, %"class.cc::TileManager"*, %"struct.cc::Tile::CreateInfo"*, i32, i32, i32)* @_ZN2cc4TileC2EPNS_11TileManagerERKNS0_10CreateInfoEiii
@_ZN2cc4TileD1Ev = hidden unnamed_addr alias void (%"class.cc::Tile"*), void (%"class.cc::Tile"*)* @_ZN2cc4TileD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc4TileC2EPNS_11TileManagerERKNS0_10CreateInfoEiii(%"class.cc::Tile"*, %"class.cc::TileManager"*, %"struct.cc::Tile::CreateInfo"* nocapture readonly dereferenceable(72), i32, i32, i32) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.cc::Tile", %"class.cc::Tile"* %0, i64 0, i32 0
  store %"class.cc::TileManager"* %1, %"class.cc::TileManager"** %7, align 8
  %8 = getelementptr inbounds %"class.cc::Tile", %"class.cc::Tile"* %0, i64 0, i32 1
  %9 = bitcast %"struct.cc::Tile::CreateInfo"* %2 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.cc::PictureLayerTiling"** %8 to i64*
  store i64 %10, i64* %11, align 8
  %12 = getelementptr inbounds %"class.cc::Tile", %"class.cc::Tile"* %0, i64 0, i32 2
  %13 = getelementptr inbounds %"struct.cc::Tile::CreateInfo", %"struct.cc::Tile::CreateInfo"* %2, i64 0, i32 4
  %14 = bitcast %"class.gfx::Rect"* %12 to i8*
  %15 = bitcast %"class.gfx::Rect"* %13 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 16, i1 false)
  %16 = getelementptr inbounds %"class.cc::Tile", %"class.cc::Tile"* %0, i64 0, i32 3
  %17 = getelementptr inbounds %"struct.cc::Tile::CreateInfo", %"struct.cc::Tile::CreateInfo"* %2, i64 0, i32 3
  %18 = bitcast %"class.gfx::Rect"* %16 to i8*
  %19 = bitcast %"class.gfx::Rect"* %17 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 16, i1 false)
  %20 = getelementptr inbounds %"class.cc::Tile", %"class.cc::Tile"* %0, i64 0, i32 4
  %21 = getelementptr inbounds %"struct.cc::Tile::CreateInfo", %"struct.cc::Tile::CreateInfo"* %2, i64 0, i32 5
  %22 = bitcast %"class.gfx::AxisTransform2d"* %20 to i8*
  %23 = bitcast %"class.gfx::AxisTransform2d"* %21 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 16, i1 false)
  %24 = getelementptr inbounds %"class.cc::Tile", %"class.cc::Tile"* %0, i64 0, i32 5
  tail call void @_ZN2cc12TileDrawInfoC1Ev(%"class.cc::TileDrawInfo"* %24) #7
  %25 = getelementptr inbounds %"class.cc::Tile", %"class.cc::Tile"* %0, i64 0, i32 6
  store i32 %3, i32* %25, align 8
  %26 = getelementptr inbounds %"class.cc::Tile", %"class.cc::Tile"* %0, i64 0, i32 7
  store i32 %4, i32* %26, align 4
  %27 = getelementptr inbounds %"class.cc::Tile", %"class.cc::Tile"* %0, i64 0, i32 8
  store i32 %5, i32* %27, align 8
  %28 = getelementptr inbounds %"class.cc::Tile", %"class.cc::Tile"* %0, i64 0, i32 9
  %29 = getelementptr inbounds %"struct.cc::Tile::CreateInfo", %"struct.cc::Tile::CreateInfo"* %2, i64 0, i32 1
  %30 = load i32, i32* %29, align 8
  store i32 %30, i32* %28, align 4
  %31 = getelementptr inbounds %"class.cc::Tile", %"class.cc::Tile"* %0, i64 0, i32 10
  %32 = getelementptr inbounds %"struct.cc::Tile::CreateInfo", %"struct.cc::Tile::CreateInfo"* %2, i64 0, i32 2
  %33 = load i32, i32* %32, align 4
  store i32 %33, i32* %31, align 8
  %34 = getelementptr inbounds %"class.cc::Tile", %"class.cc::Tile"* %0, i64 0, i32 11
  store i64 0, i64* %34, align 8
  %35 = getelementptr inbounds %"class.cc::Tile", %"class.cc::Tile"* %0, i64 0, i32 12
  store i32 0, i32* %35, align 8
  %36 = getelementptr inbounds %"class.cc::Tile", %"class.cc::Tile"* %0, i64 0, i32 13
  %37 = load i8, i8* %36, align 4
  %38 = and i8 %37, -8
  store i8 %38, i8* %36, align 4
  %39 = getelementptr inbounds %"struct.cc::Tile::CreateInfo", %"struct.cc::Tile::CreateInfo"* %2, i64 0, i32 6
  %40 = load i8, i8* %39, align 8, !range !2
  %41 = shl nuw nsw i8 %40, 3
  %42 = and i8 %37, -32
  %43 = or i8 %41, %42
  store i8 %43, i8* %36, align 4
  %44 = getelementptr inbounds %"class.cc::Tile", %"class.cc::Tile"* %0, i64 0, i32 14
  %45 = getelementptr inbounds %"class.cc::TileManager", %"class.cc::TileManager"* %1, i64 0, i32 28
  %46 = load i64, i64* %45, align 8
  %47 = add i64 %46, 1
  store i64 %47, i64* %45, align 8
  store i64 %47, i64* %44, align 8
  %48 = getelementptr inbounds %"class.cc::Tile", %"class.cc::Tile"* %0, i64 0, i32 15
  %49 = getelementptr inbounds %"class.cc::Tile", %"class.cc::Tile"* %0, i64 0, i32 15, i32 0, i32 2, i32 0, i32 0
  %50 = bitcast %"class.std::__1::vector.330"* %48 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 48, i1 false)
  %51 = getelementptr inbounds %"class.cc::Tile", %"class.cc::Tile"* %0, i64 0, i32 15, i32 0, i32 1
  %52 = bitcast %"struct.std::__1::pair.332"** %51 to i64*
  %53 = bitcast %"class.std::__1::vector.330"* %48 to i64*
  %54 = bitcast %"struct.std::__1::pair.332"** %49 to i64*
  %55 = tail call i8* @_Znwm(i64 32) #8
  %56 = getelementptr inbounds i8, i8* %55, i64 32
  %57 = ptrtoint i8* %56 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %55, i8* align 4 %15, i64 16, i1 false) #7
  %58 = getelementptr inbounds i8, i8* %55, i64 16
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %58, i8* align 4 %23, i64 16, i1 false) #7
  %59 = ptrtoint i8* %55 to i64
  store i64 %59, i64* %53, align 8
  store i64 %57, i64* %52, align 8
  store i64 %57, i64* %54, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN2cc12TileDrawInfoC1Ev(%"class.cc::TileDrawInfo"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc4TileD2Ev(%"class.cc::Tile"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::TimeTicks", align 8
  %3 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 157, i32 0), align 16
  %4 = and i8 %3, 25
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %13, label %6, !prof !3

6:                                                ; preds = %1
  %7 = ptrtoint %"class.cc::Tile"* %0 to i64
  %8 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #7
  %9 = bitcast %"class.base::TimeTicks"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #7
  %10 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 0, i32 0, i32 0
  %11 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #7
  store i64 %11, i64* %10, align 8
  %12 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 68, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 157, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i8* null, i64 %7, i64 0, i32 %8, %"class.base::TimeTicks"* nonnull dereferenceable(8) %2, %"class.base::trace_event::TraceArguments"* null, i32 2048) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #7
  br label %13

13:                                               ; preds = %1, %6
  %14 = getelementptr inbounds %"class.cc::Tile", %"class.cc::Tile"* %0, i64 0, i32 0
  %15 = load %"class.cc::TileManager"*, %"class.cc::TileManager"** %14, align 8
  call void @_ZN2cc11TileManager7ReleaseEPNS_4TileE(%"class.cc::TileManager"* %15, %"class.cc::Tile"* %0) #7
  %16 = getelementptr inbounds %"class.cc::Tile", %"class.cc::Tile"* %0, i64 0, i32 17, i32 0
  %17 = load %"class.cc::TileTask"*, %"class.cc::TileTask"** %16, align 8
  %18 = icmp eq %"class.cc::TileTask"* %17, null
  br i1 %18, label %31, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.cc::TileTask", %"class.cc::TileTask"* %17, i64 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.base::RefCountedThreadSafe.92", %"class.base::RefCountedThreadSafe.92"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw sub i32* %21, i32 1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %31

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.base::RefCountedThreadSafe.92", %"class.base::RefCountedThreadSafe.92"* %20, i64 -2
  %26 = bitcast %"class.base::RefCountedThreadSafe.92"* %25 to %"class.cc::Task"*
  %27 = bitcast %"class.base::RefCountedThreadSafe.92"* %25 to void (%"class.cc::Task"*)***
  %28 = load void (%"class.cc::Task"*)**, void (%"class.cc::Task"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.cc::Task"*)*, void (%"class.cc::Task"*)** %28, i64 2
  %30 = load void (%"class.cc::Task"*)*, void (%"class.cc::Task"*)** %29, align 8
  call void %30(%"class.cc::Task"* nonnull %26) #7
  br label %31

31:                                               ; preds = %13, %19, %24
  %32 = getelementptr inbounds %"class.cc::Tile", %"class.cc::Tile"* %0, i64 0, i32 15, i32 0, i32 0
  %33 = load %"struct.std::__1::pair.332"*, %"struct.std::__1::pair.332"** %32, align 8
  %34 = icmp eq %"struct.std::__1::pair.332"* %33, null
  br i1 %34, label %40, label %35

35:                                               ; preds = %31
  %36 = ptrtoint %"struct.std::__1::pair.332"* %33 to i64
  %37 = getelementptr inbounds %"class.cc::Tile", %"class.cc::Tile"* %0, i64 0, i32 15, i32 0, i32 1
  %38 = bitcast %"struct.std::__1::pair.332"** %37 to i64*
  store i64 %36, i64* %38, align 8
  %39 = bitcast %"struct.std::__1::pair.332"* %33 to i8*
  call void @_ZdlPv(i8* %39) #8
  br label %40

40:                                               ; preds = %31, %35
  %41 = getelementptr inbounds %"class.cc::Tile", %"class.cc::Tile"* %0, i64 0, i32 5
  call void @_ZN2cc12TileDrawInfoD1Ev(%"class.cc::TileDrawInfo"* %41) #7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN2cc11TileManager7ReleaseEPNS_4TileE(%"class.cc::TileManager"*, %"class.cc::Tile"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2cc12TileDrawInfoD1Ev(%"class.cc::TileDrawInfo"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc4Tile11AsValueIntoEPN4base11trace_event11TracedValueE(%"class.cc::Tile"*, %"class.base::trace_event::TracedValue"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.cc::Tile"* %0 to i8*
  tail call void @_ZN3viz11TracedValue40MakeDictIntoImplicitSnapshotWithCategoryEPKcPN4base11trace_event11TracedValueES2_PKv(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i64 0, i64 0), %"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i8* %3) #7
  %4 = getelementptr inbounds %"class.cc::Tile", %"class.cc::Tile"* %0, i64 0, i32 4, i32 0, i32 0
  %5 = load float, float* %4, align 4
  %6 = getelementptr inbounds %"class.cc::Tile", %"class.cc::Tile"* %0, i64 0, i32 4, i32 0, i32 1
  %7 = load float, float* %6, align 4
  %8 = fcmp olt float %5, %7
  %9 = select i1 %8, float %7, float %5
  %10 = fpext float %9 to double
  tail call void @_ZN4base11trace_event11TracedValue9SetDoubleEPKcd(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), double %10) #7
  tail call void @_ZN4base11trace_event11TracedValue15BeginDictionaryEPKc(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0)) #7
  tail call void @_ZN4base11trace_event11TracedValue10BeginArrayEPKc(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0)) #7
  %11 = load float, float* %4, align 4
  %12 = fpext float %11 to double
  tail call void @_ZN4base11trace_event11TracedValue12AppendDoubleEd(%"class.base::trace_event::TracedValue"* %1, double %12) #7
  %13 = load float, float* %6, align 4
  %14 = fpext float %13 to double
  tail call void @_ZN4base11trace_event11TracedValue12AppendDoubleEd(%"class.base::trace_event::TracedValue"* %1, double %14) #7
  tail call void @_ZN4base11trace_event11TracedValue8EndArrayEv(%"class.base::trace_event::TracedValue"* %1) #7
  tail call void @_ZN4base11trace_event11TracedValue10BeginArrayEPKc(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i64 0, i64 0)) #7
  %15 = getelementptr inbounds %"class.cc::Tile", %"class.cc::Tile"* %0, i64 0, i32 4, i32 1, i32 0
  %16 = load float, float* %15, align 4
  %17 = fpext float %16 to double
  tail call void @_ZN4base11trace_event11TracedValue12AppendDoubleEd(%"class.base::trace_event::TracedValue"* %1, double %17) #7
  %18 = getelementptr inbounds %"class.cc::Tile", %"class.cc::Tile"* %0, i64 0, i32 4, i32 1, i32 1
  %19 = load float, float* %18, align 4
  %20 = fpext float %19 to double
  tail call void @_ZN4base11trace_event11TracedValue12AppendDoubleEd(%"class.base::trace_event::TracedValue"* %1, double %20) #7
  tail call void @_ZN4base11trace_event11TracedValue8EndArrayEv(%"class.base::trace_event::TracedValue"* %1) #7
  tail call void @_ZN4base11trace_event11TracedValue13EndDictionaryEv(%"class.base::trace_event::TracedValue"* %1) #7
  %21 = getelementptr inbounds %"class.cc::Tile", %"class.cc::Tile"* %0, i64 0, i32 2
  tail call void @_ZN2cc8MathUtil16AddToTracedValueEPKcRKN3gfx4RectEPN4base11trace_event11TracedValueE(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), %"class.gfx::Rect"* dereferenceable(16) %21, %"class.base::trace_event::TracedValue"* %1) #7
  %22 = getelementptr inbounds %"class.cc::Tile", %"class.cc::Tile"* %0, i64 0, i32 6
  %23 = load i32, i32* %22, align 8
  tail call void @_ZN4base11trace_event11TracedValue10SetIntegerEPKci(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i32 %23) #7
  tail call void @_ZN4base11trace_event11TracedValue15BeginDictionaryEPKc(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0)) #7
  %24 = getelementptr inbounds %"class.cc::Tile", %"class.cc::Tile"* %0, i64 0, i32 5
  tail call void @_ZNK2cc12TileDrawInfo11AsValueIntoEPN4base11trace_event11TracedValueE(%"class.cc::TileDrawInfo"* %24, %"class.base::trace_event::TracedValue"* %1) #7
  tail call void @_ZN4base11trace_event11TracedValue13EndDictionaryEv(%"class.base::trace_event::TracedValue"* %1) #7
  %25 = getelementptr inbounds %"class.cc::Tile", %"class.cc::Tile"* %0, i64 0, i32 5, i32 2, i32 1
  %26 = load %"class.cc::ResourcePool::PoolResource"*, %"class.cc::ResourcePool::PoolResource"** %25, align 8
  %27 = icmp ne %"class.cc::ResourcePool::PoolResource"* %26, null
  tail call void @_ZN4base11trace_event11TracedValue10SetBooleanEPKcb(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0), i1 zeroext %27) #7
  %28 = load %"class.cc::ResourcePool::PoolResource"*, %"class.cc::ResourcePool::PoolResource"** %25, align 8
  %29 = icmp eq %"class.cc::ResourcePool::PoolResource"* %28, null
  br i1 %29, label %30, label %34

30:                                               ; preds = %2
  %31 = getelementptr inbounds %"class.cc::Tile", %"class.cc::Tile"* %0, i64 0, i32 17, i32 0
  %32 = load %"class.cc::TileTask"*, %"class.cc::TileTask"** %31, align 8
  %33 = icmp ne %"class.cc::TileTask"* %32, null
  br label %34

34:                                               ; preds = %2, %30
  %35 = phi i1 [ true, %2 ], [ %33, %30 ]
  tail call void @_ZN4base11trace_event11TracedValue10SetBooleanEPKcb(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.10, i64 0, i64 0), i1 zeroext %35) #7
  %36 = getelementptr inbounds %"class.cc::Tile", %"class.cc::Tile"* %0, i64 0, i32 12
  %37 = load i32, i32* %36, align 8
  tail call void @_ZN4base11trace_event11TracedValue10SetIntegerEPKci(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.11, i64 0, i64 0), i32 %37) #7
  %38 = getelementptr inbounds %"class.cc::Tile", %"class.cc::Tile"* %0, i64 0, i32 8
  %39 = load i32, i32* %38, align 8
  %40 = and i32 %39, 1
  %41 = icmp ne i32 %40, 0
  tail call void @_ZN4base11trace_event11TracedValue10SetBooleanEPKcb(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.12, i64 0, i64 0), i1 zeroext %41) #7
  %42 = load %"class.cc::ResourcePool::PoolResource"*, %"class.cc::ResourcePool::PoolResource"** %25, align 8
  %43 = icmp eq %"class.cc::ResourcePool::PoolResource"* %42, null
  br i1 %43, label %64, label %44

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %42, i64 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %42, i64 0, i32 1, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = tail call i32 @_ZN3viz12BitsPerPixelENS_14ResourceFormatE(i32 %46) #7
  %50 = sext i32 %49 to i64
  %51 = sext i32 %48 to i64
  %52 = mul nsw i64 %50, %51
  %53 = icmp eq i64 %52, 0
  %54 = add nsw i64 %52, 7
  %55 = lshr i64 %54, 3
  %56 = select i1 %53, i64 0, i64 %55
  %57 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %42, i64 0, i32 1, i32 1
  %58 = load i32, i32* %57, align 4
  %59 = sext i32 %58 to i64
  %60 = mul i64 %56, %59
  %61 = tail call i1 @llvm.is.constant.i64(i64 %60) #7
  %62 = icmp ult i64 %60, 2147483648
  %63 = trunc i64 %60 to i32
  br i1 %62, label %64, label %68

64:                                               ; preds = %34, %44
  %65 = phi i32 [ %63, %44 ], [ 0, %34 ]
  %66 = phi i1 [ %61, %44 ], [ true, %34 ]
  %67 = phi i64 [ %60, %44 ], [ 0, %34 ]
  br label %68

68:                                               ; preds = %44, %64
  %69 = phi i1 [ %66, %64 ], [ %61, %44 ]
  %70 = phi i64 [ %67, %64 ], [ %60, %44 ]
  %71 = phi i32 [ %65, %64 ], [ 2147483647, %44 ]
  %72 = icmp ult i64 %70, 2147483647
  %73 = select i1 %72, i64 %70, i64 2147483647
  %74 = trunc i64 %73 to i32
  %75 = select i1 %69, i32 %74, i32 %71
  tail call void @_ZN4base11trace_event11TracedValue10SetIntegerEPKci(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.13, i64 0, i64 0), i32 %75) #7
  ret void
}

declare void @_ZN3viz11TracedValue40MakeDictIntoImplicitSnapshotWithCategoryEPKcPN4base11trace_event11TracedValueES2_PKv(i8*, %"class.base::trace_event::TracedValue"*, i8*, i8*) local_unnamed_addr #2

declare void @_ZN4base11trace_event11TracedValue9SetDoubleEPKcd(%"class.base::trace_event::TracedValue"*, i8*, double) local_unnamed_addr #2

declare void @_ZN4base11trace_event11TracedValue15BeginDictionaryEPKc(%"class.base::trace_event::TracedValue"*, i8*) local_unnamed_addr #2

declare void @_ZN4base11trace_event11TracedValue10BeginArrayEPKc(%"class.base::trace_event::TracedValue"*, i8*) local_unnamed_addr #2

declare void @_ZN4base11trace_event11TracedValue12AppendDoubleEd(%"class.base::trace_event::TracedValue"*, double) local_unnamed_addr #2

declare void @_ZN4base11trace_event11TracedValue8EndArrayEv(%"class.base::trace_event::TracedValue"*) local_unnamed_addr #2

declare void @_ZN4base11trace_event11TracedValue13EndDictionaryEv(%"class.base::trace_event::TracedValue"*) local_unnamed_addr #2

declare void @_ZN2cc8MathUtil16AddToTracedValueEPKcRKN3gfx4RectEPN4base11trace_event11TracedValueE(i8*, %"class.gfx::Rect"* dereferenceable(16), %"class.base::trace_event::TracedValue"*) local_unnamed_addr #2

declare void @_ZN4base11trace_event11TracedValue10SetIntegerEPKci(%"class.base::trace_event::TracedValue"*, i8*, i32) local_unnamed_addr #2

declare void @_ZNK2cc12TileDrawInfo11AsValueIntoEPN4base11trace_event11TracedValueE(%"class.cc::TileDrawInfo"*, %"class.base::trace_event::TracedValue"*) local_unnamed_addr #2

declare void @_ZN4base11trace_event11TracedValue10SetBooleanEPKcb(%"class.base::trace_event::TracedValue"*, i8*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2cc4Tile21GPUMemoryUsageInBytesEv(%"class.cc::Tile"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::Tile", %"class.cc::Tile"* %0, i64 0, i32 5, i32 2, i32 1
  %3 = load %"class.cc::ResourcePool::PoolResource"*, %"class.cc::ResourcePool::PoolResource"** %2, align 8
  %4 = icmp eq %"class.cc::ResourcePool::PoolResource"* %3, null
  br i1 %4, label %22, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %3, i64 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %3, i64 0, i32 1, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = tail call i32 @_ZN3viz12BitsPerPixelENS_14ResourceFormatE(i32 %7) #7
  %11 = sext i32 %10 to i64
  %12 = sext i32 %9 to i64
  %13 = mul nsw i64 %11, %12
  %14 = icmp eq i64 %13, 0
  %15 = add nsw i64 %13, 7
  %16 = lshr i64 %15, 3
  %17 = select i1 %14, i64 0, i64 %16
  %18 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %3, i64 0, i32 1, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = sext i32 %19 to i64
  %21 = mul i64 %17, %20
  br label %22

22:                                               ; preds = %1, %5
  %23 = phi i64 [ %21, %5 ], [ 0, %1 ]
  ret i64 %23
}

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #2

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #2

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare i32 @_ZN3viz12BitsPerPixelENS_14ResourceFormatE(i32) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
