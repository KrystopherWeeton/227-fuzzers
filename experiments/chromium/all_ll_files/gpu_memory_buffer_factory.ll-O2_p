; ModuleID = '../../gpu/ipc/service/gpu_memory_buffer_factory.cc'
source_filename = "../../gpu/ipc/service/gpu_memory_buffer_factory.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gpu::GpuMemoryBufferFactory" = type { i32 (...)** }
%"class.viz::VulkanContextProvider" = type opaque
%"class.gpu::GpuMemoryBufferFactoryNativePixmap" = type { %"class.gpu::GpuMemoryBufferFactory", %"class.gpu::ImageFactory", %class.scoped_refptr, %"class.std::__1::unordered_map", %"class.base::Lock", %"class.base::WeakPtrFactory" }
%"class.gpu::ImageFactory" = type { i32 (...)** }
%class.scoped_refptr = type { %"class.viz::VulkanContextProvider"* }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.4", %"class.std::__1::__compressed_pair.11", %"class.std::__1::__compressed_pair.16", %"class.std::__1::__compressed_pair.18", [4 x i8] }>
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6", %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i64 }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { float }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.21 }
%class.scoped_refptr.21 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.22" }
%"struct.std::__1::__atomic_base.22" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.23" }
%"struct.std::__1::atomic.23" = type { %"struct.std::__1::__atomic_base.24" }
%"struct.std::__1::__atomic_base.24" = type { %"struct.std::__1::__atomic_base.25" }
%"struct.std::__1::__atomic_base.25" = type { %"struct.std::__1::__cxx_atomic_impl.26" }
%"struct.std::__1::__cxx_atomic_impl.26" = type { %"struct.std::__1::__cxx_atomic_base_impl.27" }
%"struct.std::__1::__cxx_atomic_base_impl.27" = type { i8 }
%"class.gfx::Size" = type { i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.31 }
%class.scoped_refptr.31 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.32", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.32" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.gfx::GpuMemoryBufferHandle" = type { i32, %"class.gfx::GenericSharedMemoryId", %"class.base::UnsafeSharedMemoryRegion", i32, i32, %"struct.gfx::NativePixmapHandle" }
%"class.gfx::GenericSharedMemoryId" = type { i32 }
%"class.base::UnsafeSharedMemoryRegion" = type { %"class.base::subtle::PlatformSharedMemoryRegion" }
%"class.base::subtle::PlatformSharedMemoryRegion" = type { %"struct.base::subtle::ScopedFDPair", i32, i64, %"class.base::UnguessableToken" }
%"struct.base::subtle::ScopedFDPair" = type { %"class.base::ScopedGeneric", %"class.base::ScopedGeneric" }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"struct.gfx::NativePixmapHandle" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.gfx::NativePixmapPlane"*, %"struct.gfx::NativePixmapPlane"*, %"class.std::__1::__compressed_pair.33" }
%"struct.gfx::NativePixmapPlane" = type { i32, i64, i64, %"class.base::ScopedGeneric" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.gfx::NativePixmapPlane"* }

$_ZN3gpu22GpuMemoryBufferFactoryD2Ev = comdat any

$_ZN3gpu22GpuMemoryBufferFactoryD0Ev = comdat any

@_ZTVN3gpu22GpuMemoryBufferFactoryE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gpu::GpuMemoryBufferFactory"*)* @_ZN3gpu22GpuMemoryBufferFactoryD2Ev to i8*), i8* bitcast (void (%"class.gpu::GpuMemoryBufferFactory"*)* @_ZN3gpu22GpuMemoryBufferFactoryD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.gpu::GpuMemoryBufferFactory"*, i32, %"class.gfx::Size"*, i32, i32, i32, i32, %"class.base::OnceCallback"*)* @_ZN3gpu22GpuMemoryBufferFactory26CreateGpuMemoryBufferAsyncEN3gfx21GenericSharedMemoryIdERKNS1_4SizeENS1_12BufferFormatENS1_11BufferUsageEijN4base12OnceCallbackIFvNS1_21GpuMemoryBufferHandleEEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gpu::GpuMemoryBufferFactory"* @_ZN3gpu22GpuMemoryBufferFactory16CreateNativeTypeEPN3viz21VulkanContextProviderE(%"class.viz::VulkanContextProvider"*) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 120) #6
  %3 = bitcast i8* %2 to %"class.gpu::GpuMemoryBufferFactoryNativePixmap"*
  tail call void @_ZN3gpu34GpuMemoryBufferFactoryNativePixmapC1EPN3viz21VulkanContextProviderE(%"class.gpu::GpuMemoryBufferFactoryNativePixmap"* nonnull %3, %"class.viz::VulkanContextProvider"* %0) #7
  %4 = bitcast i8* %2 to %"class.gpu::GpuMemoryBufferFactory"*
  ret %"class.gpu::GpuMemoryBufferFactory"* %4
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu22GpuMemoryBufferFactory26CreateGpuMemoryBufferAsyncEN3gfx21GenericSharedMemoryIdERKNS1_4SizeENS1_12BufferFormatENS1_11BufferUsageEijN4base12OnceCallbackIFvNS1_21GpuMemoryBufferHandleEEEE(%"class.gpu::GpuMemoryBufferFactory"*, i32, %"class.gfx::Size"* dereferenceable(8), i32, i32, i32, i32, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %9 = alloca %"class.base::OnceCallback", align 8
  %10 = alloca %"struct.gfx::GpuMemoryBufferHandle", align 8
  %11 = bitcast %"class.gpu::GpuMemoryBufferFactory"* %0 to void (%"struct.gfx::GpuMemoryBufferHandle"*, %"class.gpu::GpuMemoryBufferFactory"*, i32, %"class.gfx::Size"*, %"class.gfx::Size"*, i32, i32, i32, i32)***
  %12 = load void (%"struct.gfx::GpuMemoryBufferHandle"*, %"class.gpu::GpuMemoryBufferFactory"*, i32, %"class.gfx::Size"*, %"class.gfx::Size"*, i32, i32, i32, i32)**, void (%"struct.gfx::GpuMemoryBufferHandle"*, %"class.gpu::GpuMemoryBufferFactory"*, i32, %"class.gfx::Size"*, %"class.gfx::Size"*, i32, i32, i32, i32)*** %11, align 8
  %13 = getelementptr inbounds void (%"struct.gfx::GpuMemoryBufferHandle"*, %"class.gpu::GpuMemoryBufferFactory"*, i32, %"class.gfx::Size"*, %"class.gfx::Size"*, i32, i32, i32, i32)*, void (%"struct.gfx::GpuMemoryBufferHandle"*, %"class.gpu::GpuMemoryBufferFactory"*, i32, %"class.gfx::Size"*, %"class.gfx::Size"*, i32, i32, i32, i32)** %12, i64 2
  %14 = load void (%"struct.gfx::GpuMemoryBufferHandle"*, %"class.gpu::GpuMemoryBufferFactory"*, i32, %"class.gfx::Size"*, %"class.gfx::Size"*, i32, i32, i32, i32)*, void (%"struct.gfx::GpuMemoryBufferHandle"*, %"class.gpu::GpuMemoryBufferFactory"*, i32, %"class.gfx::Size"*, %"class.gfx::Size"*, i32, i32, i32, i32)** %13, align 8
  call void %14(%"struct.gfx::GpuMemoryBufferHandle"* nonnull sret %10, %"class.gpu::GpuMemoryBufferFactory"* %0, i32 %1, %"class.gfx::Size"* dereferenceable(8) %2, %"class.gfx::Size"* dereferenceable(8) %2, i32 %3, i32 %4, i32 %5, i32 %6) #7
  %15 = bitcast %"class.base::OnceCallback"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #7
  %16 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0, i32 0, i32 0
  %17 = bitcast %"class.base::OnceCallback"* %7 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.base::OnceCallback"* %9 to i64*
  store i64 %18, i64* %19, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %16, align 8
  %20 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %9, i64 0, i32 0
  %21 = inttoptr i64 %18 to %"class.base::internal::BindStateBase"*
  %22 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %21, i64 0, i32 1
  %23 = bitcast void ()** %22 to void (%"class.base::internal::BindStateBase"*, %"struct.gfx::GpuMemoryBufferHandle"*)**
  %24 = load void (%"class.base::internal::BindStateBase"*, %"struct.gfx::GpuMemoryBufferHandle"*)*, void (%"class.base::internal::BindStateBase"*, %"struct.gfx::GpuMemoryBufferHandle"*)** %23, align 8
  call void %24(%"class.base::internal::BindStateBase"* %21, %"struct.gfx::GpuMemoryBufferHandle"* nonnull dereferenceable(112) %10) #7
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %20) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #7
  call void @_ZN3gfx21GpuMemoryBufferHandleD1Ev(%"struct.gfx::GpuMemoryBufferHandle"* nonnull %10) #7
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3gfx21GpuMemoryBufferHandleD1Ev(%"struct.gfx::GpuMemoryBufferHandle"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3gpu22GpuMemoryBufferFactoryD2Ev(%"class.gpu::GpuMemoryBufferFactory"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3gpu22GpuMemoryBufferFactoryD0Ev(%"class.gpu::GpuMemoryBufferFactory"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #8
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN3gpu34GpuMemoryBufferFactoryNativePixmapC1EPN3viz21VulkanContextProviderE(%"class.gpu::GpuMemoryBufferFactoryNativePixmap"*, %"class.viz::VulkanContextProvider"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { builtin nounwind }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
