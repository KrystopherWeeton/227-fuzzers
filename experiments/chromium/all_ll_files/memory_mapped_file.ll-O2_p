; ModuleID = '../../base/files/memory_mapped_file.cc'
source_filename = "../../base/files/memory_mapped_file.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::MemoryMappedFile::Region" = type { i64, i64 }
%"class.base::MemoryMappedFile" = type { %"class.base::File", i8*, i64 }
%"class.base::File" = type <{ %"class.base::ScopedGeneric", %"class.base::FilePath", %"class.base::FileTracing::ScopedEnabler", [3 x i8], i32, i8, i8, [6 x i8] }>
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::FileTracing::ScopedEnabler" = type { i8 }

@_ZN4base16MemoryMappedFile6Region10kWholeFileE = hidden constant %"struct.base::MemoryMappedFile::Region" zeroinitializer, align 8

@_ZN4base16MemoryMappedFileD1Ev = hidden unnamed_addr alias void (%"class.base::MemoryMappedFile"*), void (%"class.base::MemoryMappedFile"*)* @_ZN4base16MemoryMappedFileD2Ev

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4base16MemoryMappedFile6RegioneqERKS1_(%"struct.base::MemoryMappedFile::Region"* nocapture readonly, %"struct.base::MemoryMappedFile::Region"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.base::MemoryMappedFile::Region", %"struct.base::MemoryMappedFile::Region"* %1, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"struct.base::MemoryMappedFile::Region", %"struct.base::MemoryMappedFile::Region"* %0, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %8, label %14

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.base::MemoryMappedFile::Region", %"struct.base::MemoryMappedFile::Region"* %1, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"struct.base::MemoryMappedFile::Region", %"struct.base::MemoryMappedFile::Region"* %0, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %10, %12
  br label %14

14:                                               ; preds = %8, %2
  %15 = phi i1 [ false, %2 ], [ %13, %8 ]
  ret i1 %15
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4base16MemoryMappedFile6RegionneERKS1_(%"struct.base::MemoryMappedFile::Region"* nocapture readonly, %"struct.base::MemoryMappedFile::Region"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.base::MemoryMappedFile::Region", %"struct.base::MemoryMappedFile::Region"* %1, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"struct.base::MemoryMappedFile::Region", %"struct.base::MemoryMappedFile::Region"* %0, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %8, label %14

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.base::MemoryMappedFile::Region", %"struct.base::MemoryMappedFile::Region"* %1, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"struct.base::MemoryMappedFile::Region", %"struct.base::MemoryMappedFile::Region"* %0, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp ne i64 %10, %12
  br label %14

14:                                               ; preds = %2, %8
  %15 = phi i1 [ true, %2 ], [ %13, %8 ]
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16MemoryMappedFileD2Ev(%"class.base::MemoryMappedFile"*) unnamed_addr #1 align 2 {
  tail call void @_ZN4base16MemoryMappedFile12CloseHandlesEv(%"class.base::MemoryMappedFile"* %0) #5
  %2 = getelementptr inbounds %"class.base::MemoryMappedFile", %"class.base::MemoryMappedFile"* %0, i64 0, i32 0
  tail call void @_ZN4base4FileD1Ev(%"class.base::File"* %2) #5
  ret void
}

declare void @_ZN4base16MemoryMappedFile12CloseHandlesEv(%"class.base::MemoryMappedFile"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base4FileD1Ev(%"class.base::File"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base16MemoryMappedFile10InitializeERKNS_8FilePathENS0_6AccessE(%"class.base::MemoryMappedFile"*, %"class.base::FilePath"* dereferenceable(24), i32) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.base::MemoryMappedFile", %"class.base::MemoryMappedFile"* %0, i64 0, i32 1
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %7, label %17

7:                                                ; preds = %3
  %8 = icmp eq i32 %2, 1
  %9 = select i1 %8, i32 97, i32 0
  %10 = icmp eq i32 %2, 0
  %11 = select i1 %10, i32 33, i32 %9
  %12 = getelementptr inbounds %"class.base::MemoryMappedFile", %"class.base::MemoryMappedFile"* %0, i64 0, i32 0
  tail call void @_ZN4base4File10InitializeERKNS_8FilePathEj(%"class.base::File"* %12, %"class.base::FilePath"* dereferenceable(24) %1, i32 %11) #5
  %13 = tail call zeroext i1 @_ZNK4base4File7IsValidEv(%"class.base::File"* %12) #5
  br i1 %13, label %14, label %17

14:                                               ; preds = %7
  %15 = tail call zeroext i1 @_ZN4base16MemoryMappedFile21MapFileRegionToMemoryERKNS0_6RegionENS0_6AccessE(%"class.base::MemoryMappedFile"* %0, %"struct.base::MemoryMappedFile::Region"* nonnull dereferenceable(16) @_ZN4base16MemoryMappedFile6Region10kWholeFileE, i32 %2) #5
  br i1 %15, label %17, label %16

16:                                               ; preds = %14
  tail call void @_ZN4base16MemoryMappedFile12CloseHandlesEv(%"class.base::MemoryMappedFile"* %0) #5
  br label %17

17:                                               ; preds = %3, %16, %7, %14
  %18 = phi i1 [ false, %3 ], [ false, %16 ], [ false, %7 ], [ true, %14 ]
  ret i1 %18
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4base16MemoryMappedFile7IsValidEv(%"class.base::MemoryMappedFile"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::MemoryMappedFile", %"class.base::MemoryMappedFile"* %0, i64 0, i32 1
  %3 = load i8*, i8** %2, align 8
  %4 = icmp ne i8* %3, null
  ret i1 %4
}

declare void @_ZN4base4File10InitializeERKNS_8FilePathEj(%"class.base::File"*, %"class.base::FilePath"* dereferenceable(24), i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK4base4File7IsValidEv(%"class.base::File"*) local_unnamed_addr #2

declare zeroext i1 @_ZN4base16MemoryMappedFile21MapFileRegionToMemoryERKNS0_6RegionENS0_6AccessE(%"class.base::MemoryMappedFile"*, %"struct.base::MemoryMappedFile::Region"* dereferenceable(16), i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base16MemoryMappedFile10InitializeENS_4FileENS0_6AccessE(%"class.base::MemoryMappedFile"*, %"class.base::File"*, i32) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.base::File", align 8
  call void @_ZN4base4FileC1EOS0_(%"class.base::File"* nonnull %4, %"class.base::File"* dereferenceable(56) %1) #5
  %5 = getelementptr inbounds %"class.base::MemoryMappedFile", %"class.base::MemoryMappedFile"* %0, i64 0, i32 1
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %8, label %13

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.base::MemoryMappedFile", %"class.base::MemoryMappedFile"* %0, i64 0, i32 0
  %10 = call dereferenceable(56) %"class.base::File"* @_ZN4base4FileaSEOS0_(%"class.base::File"* %9, %"class.base::File"* nonnull dereferenceable(56) %4) #5
  %11 = call zeroext i1 @_ZN4base16MemoryMappedFile21MapFileRegionToMemoryERKNS0_6RegionENS0_6AccessE(%"class.base::MemoryMappedFile"* %0, %"struct.base::MemoryMappedFile::Region"* nonnull dereferenceable(16) @_ZN4base16MemoryMappedFile6Region10kWholeFileE, i32 %2) #5
  br i1 %11, label %13, label %12

12:                                               ; preds = %8
  call void @_ZN4base16MemoryMappedFile12CloseHandlesEv(%"class.base::MemoryMappedFile"* %0) #5
  br label %13

13:                                               ; preds = %3, %8, %12
  %14 = phi i1 [ false, %12 ], [ false, %3 ], [ true, %8 ]
  call void @_ZN4base4FileD1Ev(%"class.base::File"* nonnull %4) #5
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base16MemoryMappedFile10InitializeENS_4FileERKNS0_6RegionENS0_6AccessE(%"class.base::MemoryMappedFile"*, %"class.base::File"*, %"struct.base::MemoryMappedFile::Region"* dereferenceable(16), i32) local_unnamed_addr #1 align 2 {
  switch i32 %3, label %22 [
    i32 2, label %5
    i32 0, label %18
    i32 1, label %18
  ]

5:                                                ; preds = %4
  %6 = getelementptr inbounds %"struct.base::MemoryMappedFile::Region", %"struct.base::MemoryMappedFile::Region"* %2, i64 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"struct.base::MemoryMappedFile::Region", %"struct.base::MemoryMappedFile::Region"* %2, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = sext i64 %7 to i65
  %11 = zext i64 %9 to i65
  %12 = tail call { i65, i1 } @llvm.sadd.with.overflow.i65(i65 %10, i65 %11) #5
  %13 = extractvalue { i65, i1 } %12, 1
  %14 = extractvalue { i65, i1 } %12, 0
  %15 = add i65 %14, 9223372036854775808
  %16 = icmp slt i65 %15, 0
  %17 = or i1 %13, %16
  br i1 %17, label %31, label %18

18:                                               ; preds = %5, %4, %4
  %19 = getelementptr inbounds %"struct.base::MemoryMappedFile::Region", %"struct.base::MemoryMappedFile::Region"* %2, i64 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp slt i64 %20, 0
  br i1 %21, label %31, label %22

22:                                               ; preds = %18, %4
  %23 = getelementptr inbounds %"class.base::MemoryMappedFile", %"class.base::MemoryMappedFile"* %0, i64 0, i32 1
  %24 = load i8*, i8** %23, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %26, label %31

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.base::MemoryMappedFile", %"class.base::MemoryMappedFile"* %0, i64 0, i32 0
  %28 = tail call dereferenceable(56) %"class.base::File"* @_ZN4base4FileaSEOS0_(%"class.base::File"* %27, %"class.base::File"* dereferenceable(56) %1) #5
  %29 = tail call zeroext i1 @_ZN4base16MemoryMappedFile21MapFileRegionToMemoryERKNS0_6RegionENS0_6AccessE(%"class.base::MemoryMappedFile"* %0, %"struct.base::MemoryMappedFile::Region"* dereferenceable(16) %2, i32 %3) #5
  br i1 %29, label %31, label %30

30:                                               ; preds = %26
  tail call void @_ZN4base16MemoryMappedFile12CloseHandlesEv(%"class.base::MemoryMappedFile"* %0) #5
  br label %31

31:                                               ; preds = %5, %22, %26, %18, %30
  %32 = phi i1 [ false, %30 ], [ false, %5 ], [ false, %18 ], [ false, %22 ], [ true, %26 ]
  ret i1 %32
}

declare void @_ZN4base4FileC1EOS0_(%"class.base::File"*, %"class.base::File"* dereferenceable(56)) unnamed_addr #2

declare dereferenceable(56) %"class.base::File"* @_ZN4base4FileaSEOS0_(%"class.base::File"*, %"class.base::File"* dereferenceable(56)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16MemoryMappedFile28CalculateVMAlignedBoundariesElmPlPmPi(i64, i64, i64* nocapture, i64* nocapture, i32* nocapture) local_unnamed_addr #1 align 2 {
  %6 = tail call i64 @_ZN4base7SysInfo23VMAllocationGranularityEv() #5
  %7 = add i64 %6, -1
  %8 = and i64 %7, %0
  %9 = trunc i64 %8 to i32
  store i32 %9, i32* %4, align 4
  %10 = sub i64 0, %6
  %11 = and i64 %10, %0
  store i64 %11, i64* %2, align 8
  %12 = load i32, i32* %4, align 4
  %13 = sext i32 %12 to i64
  %14 = add i64 %7, %1
  %15 = add i64 %14, %13
  %16 = and i64 %15, %10
  store i64 %16, i64* %3, align 8
  ret void
}

declare i64 @_ZN4base7SysInfo23VMAllocationGranularityEv() local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i65, i1 } @llvm.sadd.with.overflow.i65(i65, i65) #4

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
