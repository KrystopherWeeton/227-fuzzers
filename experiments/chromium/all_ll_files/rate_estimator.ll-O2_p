; ModuleID = '../../components/download/internal/common/rate_estimator.cc'
source_filename = "../../components/download/internal/common/rate_estimator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.download::RateEstimator" = type { %"class.std::__1::vector", %"class.base::TimeDelta", i64, i64, %"class.base::TimeTicks" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i32* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }

@.str = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.1 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1

@_ZN8download13RateEstimatorC1Ev = hidden unnamed_addr alias void (%"class.download::RateEstimator"*), void (%"class.download::RateEstimator"*)* @_ZN8download13RateEstimatorC2Ev
@_ZN8download13RateEstimatorC1EN4base9TimeDeltaEmNS1_9TimeTicksE = hidden unnamed_addr alias void (%"class.download::RateEstimator"*, i64, i64, i64), void (%"class.download::RateEstimator"*, i64, i64, i64)* @_ZN8download13RateEstimatorC2EN4base9TimeDeltaEmNS1_9TimeTicksE
@_ZN8download13RateEstimatorD1Ev = hidden unnamed_addr alias void (%"class.download::RateEstimator"*), void (%"class.download::RateEstimator"*)* @_ZN8download13RateEstimatorD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8download13RateEstimatorC2Ev(%"class.download::RateEstimator"* nocapture) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 40) #9
  %3 = getelementptr inbounds %"class.download::RateEstimator", %"class.download::RateEstimator"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = bitcast %"class.download::RateEstimator"* %0 to i8**
  store i8* %2, i8** %4, align 8
  %5 = getelementptr inbounds i8, i8* %2, i64 40
  %6 = getelementptr inbounds %"class.download::RateEstimator", %"class.download::RateEstimator"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %7 = bitcast i32** %6 to i8**
  store i8* %5, i8** %7, align 8
  %8 = bitcast i32** %3 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %2, i8 0, i64 40, i1 false) #10
  %9 = ptrtoint i8* %5 to i64
  store i64 %9, i64* %8, align 8
  %10 = getelementptr inbounds %"class.download::RateEstimator", %"class.download::RateEstimator"* %0, i64 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.download::RateEstimator", %"class.download::RateEstimator"* %0, i64 0, i32 2
  %12 = bitcast i64* %10 to <2 x i64>*
  store <2 x i64> <i64 1000000, i64 0>, <2 x i64>* %12, align 8
  %13 = getelementptr inbounds %"class.download::RateEstimator", %"class.download::RateEstimator"* %0, i64 0, i32 3
  %14 = getelementptr inbounds %"class.download::RateEstimator", %"class.download::RateEstimator"* %0, i64 0, i32 4, i32 0, i32 0
  %15 = bitcast i64* %13 to <2 x i64>*
  store <2 x i64> <i64 1, i64 0>, <2 x i64>* %15, align 8
  %16 = tail call i64 @_ZN4base9TimeTicks3NowEv() #10
  %17 = load i64, i64* %8, align 8
  %18 = bitcast %"class.download::RateEstimator"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %17, %19
  br i1 %20, label %32, label %21

21:                                               ; preds = %1, %21
  %22 = phi i64 [ %28, %21 ], [ %19, %1 ]
  %23 = phi i64 [ %26, %21 ], [ 0, %1 ]
  %24 = inttoptr i64 %22 to i32*
  %25 = getelementptr inbounds i32, i32* %24, i64 %23
  store i32 0, i32* %25, align 4
  %26 = add nuw i64 %23, 1
  %27 = load i64, i64* %8, align 8
  %28 = load i64, i64* %18, align 8
  %29 = sub i64 %27, %28
  %30 = ashr exact i64 %29, 2
  %31 = icmp ult i64 %26, %30
  br i1 %31, label %21, label %32

32:                                               ; preds = %21, %1
  %33 = bitcast i64* %11 to <2 x i64>*
  store <2 x i64> <i64 0, i64 1>, <2 x i64>* %33, align 8
  store i64 %16, i64* %14, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN8download13RateEstimator12ResetBucketsEN4base9TimeTicksE(%"class.download::RateEstimator"* nocapture, i64) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.download::RateEstimator", %"class.download::RateEstimator"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = bitcast i32** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.download::RateEstimator"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %5, %7
  br i1 %8, label %9, label %13

9:                                                ; preds = %13, %2
  %10 = getelementptr inbounds %"class.download::RateEstimator", %"class.download::RateEstimator"* %0, i64 0, i32 2
  %11 = bitcast i64* %10 to <2 x i64>*
  store <2 x i64> <i64 0, i64 1>, <2 x i64>* %11, align 8
  %12 = getelementptr inbounds %"class.download::RateEstimator", %"class.download::RateEstimator"* %0, i64 0, i32 4, i32 0, i32 0
  store i64 %1, i64* %12, align 8
  ret void

13:                                               ; preds = %2, %13
  %14 = phi i64 [ %20, %13 ], [ %7, %2 ]
  %15 = phi i64 [ %18, %13 ], [ 0, %2 ]
  %16 = inttoptr i64 %14 to i32*
  %17 = getelementptr inbounds i32, i32* %16, i64 %15
  store i32 0, i32* %17, align 4
  %18 = add nuw i64 %15, 1
  %19 = load i64, i64* %4, align 8
  %20 = load i64, i64* %6, align 8
  %21 = sub i64 %19, %20
  %22 = ashr exact i64 %21, 2
  %23 = icmp ult i64 %18, %22
  br i1 %23, label %13, label %9
}

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8download13RateEstimatorC2EN4base9TimeDeltaEmNS1_9TimeTicksE(%"class.download::RateEstimator"*, i64, i64, i64) unnamed_addr #0 align 2 {
  %5 = bitcast %"class.download::RateEstimator"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #10
  %6 = icmp eq i64 %2, 0
  br i1 %6, label %28, label %7

7:                                                ; preds = %4
  %8 = icmp ugt i64 %2, 4611686018427387903
  br i1 %8, label %9, label %11

9:                                                ; preds = %7
  %10 = bitcast %"class.download::RateEstimator"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %10) #11
  unreachable

11:                                               ; preds = %7
  %12 = shl i64 %2, 2
  %13 = tail call i8* @_Znwm(i64 %12) #9
  %14 = bitcast i8* %13 to i32*
  %15 = getelementptr inbounds %"class.download::RateEstimator", %"class.download::RateEstimator"* %0, i64 0, i32 0, i32 0, i32 1
  %16 = bitcast %"class.download::RateEstimator"* %0 to i8**
  store i8* %13, i8** %16, align 8
  %17 = getelementptr inbounds i32, i32* %14, i64 %2
  %18 = getelementptr inbounds %"class.download::RateEstimator", %"class.download::RateEstimator"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i32* %17, i32** %18, align 8
  %19 = bitcast i32** %15 to i64*
  %20 = ptrtoint i8* %13 to i64
  %21 = add nsw i64 %2, -1
  %22 = getelementptr i32, i32* %14, i64 %21
  %23 = ptrtoint i32* %22 to i64
  %24 = sub i64 4, %20
  %25 = add i64 %24, %23
  %26 = and i64 %25, -4
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %13, i8 0, i64 %26, i1 false) #10
  %27 = ptrtoint i32* %17 to i64
  store i64 %27, i64* %19, align 8
  br label %28

28:                                               ; preds = %4, %11
  %29 = phi i64 [ %20, %11 ], [ 0, %4 ]
  %30 = phi i64 [ %27, %11 ], [ 0, %4 ]
  %31 = getelementptr inbounds %"class.download::RateEstimator", %"class.download::RateEstimator"* %0, i64 0, i32 1, i32 0
  store i64 %1, i64* %31, align 8
  %32 = getelementptr inbounds %"class.download::RateEstimator", %"class.download::RateEstimator"* %0, i64 0, i32 2
  %33 = bitcast i64* %32 to <2 x i64>*
  store <2 x i64> <i64 0, i64 1>, <2 x i64>* %33, align 8
  %34 = getelementptr inbounds %"class.download::RateEstimator", %"class.download::RateEstimator"* %0, i64 0, i32 4, i32 0, i32 0
  store i64 0, i64* %34, align 8
  %35 = getelementptr inbounds %"class.download::RateEstimator", %"class.download::RateEstimator"* %0, i64 0, i32 0, i32 0, i32 1
  %36 = bitcast i32** %35 to i64*
  %37 = bitcast %"class.download::RateEstimator"* %0 to i64*
  %38 = icmp eq i64 %30, %29
  br i1 %38, label %50, label %39

39:                                               ; preds = %28, %39
  %40 = phi i64 [ %46, %39 ], [ %29, %28 ]
  %41 = phi i64 [ %44, %39 ], [ 0, %28 ]
  %42 = inttoptr i64 %40 to i32*
  %43 = getelementptr inbounds i32, i32* %42, i64 %41
  store i32 0, i32* %43, align 4
  %44 = add nuw i64 %41, 1
  %45 = load i64, i64* %36, align 8
  %46 = load i64, i64* %37, align 8
  %47 = sub i64 %45, %46
  %48 = ashr exact i64 %47, 2
  %49 = icmp ult i64 %44, %48
  br i1 %49, label %39, label %50

50:                                               ; preds = %39, %28
  %51 = bitcast i64* %32 to <2 x i64>*
  store <2 x i64> <i64 0, i64 1>, <2 x i64>* %51, align 8
  store i64 %3, i64* %34, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8download13RateEstimatorD2Ev(%"class.download::RateEstimator"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.download::RateEstimator", %"class.download::RateEstimator"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load i32*, i32** %2, align 8
  %4 = icmp eq i32* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint i32* %3 to i64
  %7 = getelementptr inbounds %"class.download::RateEstimator", %"class.download::RateEstimator"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast i32** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast i32* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #9
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8download13RateEstimator9IncrementEj(%"class.download::RateEstimator"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = tail call i64 @_ZN4base9TimeTicks3NowEv() #10
  tail call void @_ZN8download13RateEstimator15ClearOldBucketsEN4base9TimeTicksE(%"class.download::RateEstimator"* %0, i64 %3) #10
  %4 = getelementptr inbounds %"class.download::RateEstimator", %"class.download::RateEstimator"* %0, i64 0, i32 4, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = sub nsw i64 %3, %5
  %7 = add i64 %6, -9223372036854775807
  %8 = icmp ult i64 %7, 2
  %9 = sdiv i64 %6, 1000000
  %10 = select i1 %8, i64 %6, i64 %9
  %11 = getelementptr inbounds %"class.download::RateEstimator", %"class.download::RateEstimator"* %0, i64 0, i32 1, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, -9223372036854775807
  %14 = icmp ult i64 %13, 2
  %15 = sdiv i64 %12, 1000000
  %16 = select i1 %14, i64 %12, i64 %15
  %17 = sdiv i64 %10, %16
  %18 = getelementptr inbounds %"class.download::RateEstimator", %"class.download::RateEstimator"* %0, i64 0, i32 2
  %19 = load i64, i64* %18, align 8
  %20 = add i64 %19, %17
  %21 = getelementptr inbounds %"class.download::RateEstimator", %"class.download::RateEstimator"* %0, i64 0, i32 0, i32 0, i32 1
  %22 = bitcast i32** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.download::RateEstimator"* %0 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %23, %25
  %27 = ashr exact i64 %26, 2
  %28 = urem i64 %20, %27
  %29 = inttoptr i64 %25 to i32*
  %30 = getelementptr inbounds i32, i32* %29, i64 %28
  %31 = load i32, i32* %30, align 4
  %32 = add i32 %31, %1
  store i32 %32, i32* %30, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8download13RateEstimator9IncrementEjN4base9TimeTicksE(%"class.download::RateEstimator"* nocapture, i32, i64) local_unnamed_addr #0 align 2 {
  tail call void @_ZN8download13RateEstimator15ClearOldBucketsEN4base9TimeTicksE(%"class.download::RateEstimator"* %0, i64 %2)
  %4 = getelementptr inbounds %"class.download::RateEstimator", %"class.download::RateEstimator"* %0, i64 0, i32 4, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = sub nsw i64 %2, %5
  %7 = add i64 %6, -9223372036854775807
  %8 = icmp ult i64 %7, 2
  %9 = sdiv i64 %6, 1000000
  %10 = select i1 %8, i64 %6, i64 %9
  %11 = getelementptr inbounds %"class.download::RateEstimator", %"class.download::RateEstimator"* %0, i64 0, i32 1, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, -9223372036854775807
  %14 = icmp ult i64 %13, 2
  %15 = sdiv i64 %12, 1000000
  %16 = select i1 %14, i64 %12, i64 %15
  %17 = sdiv i64 %10, %16
  %18 = getelementptr inbounds %"class.download::RateEstimator", %"class.download::RateEstimator"* %0, i64 0, i32 2
  %19 = load i64, i64* %18, align 8
  %20 = add i64 %19, %17
  %21 = getelementptr inbounds %"class.download::RateEstimator", %"class.download::RateEstimator"* %0, i64 0, i32 0, i32 0, i32 1
  %22 = bitcast i32** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.download::RateEstimator"* %0 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %23, %25
  %27 = ashr exact i64 %26, 2
  %28 = urem i64 %20, %27
  %29 = inttoptr i64 %25 to i32*
  %30 = getelementptr inbounds i32, i32* %29, i64 %28
  %31 = load i32, i32* %30, align 4
  %32 = add i32 %31, %1
  store i32 %32, i32* %30, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8download13RateEstimator15ClearOldBucketsEN4base9TimeTicksE(%"class.download::RateEstimator"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.download::RateEstimator", %"class.download::RateEstimator"* %0, i64 0, i32 4, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = sub nsw i64 %1, %5
  %7 = add i64 %6, -9223372036854775807
  %8 = icmp ult i64 %7, 2
  %9 = sdiv i64 %6, 1000000
  %10 = select i1 %8, i64 %6, i64 %9
  %11 = getelementptr inbounds %"class.download::RateEstimator", %"class.download::RateEstimator"* %0, i64 0, i32 1, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, -9223372036854775807
  %14 = icmp ult i64 %13, 2
  %15 = sdiv i64 %12, 1000000
  %16 = select i1 %14, i64 %12, i64 %15
  %17 = sdiv i64 %10, %16
  %18 = icmp slt i64 %17, 0
  %19 = getelementptr inbounds %"class.download::RateEstimator", %"class.download::RateEstimator"* %0, i64 0, i32 0, i32 0, i32 1
  %20 = bitcast i32** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.download::RateEstimator"* %0 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = inttoptr i64 %23 to i32*
  br i1 %18, label %25, label %41

25:                                               ; preds = %2
  %26 = icmp eq i64 %21, %23
  br i1 %26, label %38, label %27

27:                                               ; preds = %25, %27
  %28 = phi i64 [ %34, %27 ], [ %23, %25 ]
  %29 = phi i64 [ %32, %27 ], [ 0, %25 ]
  %30 = inttoptr i64 %28 to i32*
  %31 = getelementptr inbounds i32, i32* %30, i64 %29
  store i32 0, i32* %31, align 4
  %32 = add nuw i64 %29, 1
  %33 = load i64, i64* %20, align 8
  %34 = load i64, i64* %22, align 8
  %35 = sub i64 %33, %34
  %36 = ashr exact i64 %35, 2
  %37 = icmp ult i64 %32, %36
  br i1 %37, label %27, label %38

38:                                               ; preds = %27, %25
  %39 = getelementptr inbounds %"class.download::RateEstimator", %"class.download::RateEstimator"* %0, i64 0, i32 2
  %40 = bitcast i64* %39 to <2 x i64>*
  store <2 x i64> <i64 0, i64 1>, <2 x i64>* %40, align 8
  store i64 %1, i64* %4, align 8
  br label %111

41:                                               ; preds = %2
  %42 = sub i64 %21, %23
  %43 = ashr exact i64 %42, 2
  %44 = icmp ult i64 %17, %43
  br i1 %44, label %45, label %48

45:                                               ; preds = %41
  %46 = add nuw i64 %17, 1
  %47 = getelementptr inbounds %"class.download::RateEstimator", %"class.download::RateEstimator"* %0, i64 0, i32 3
  store i64 %46, i64* %47, align 8
  br label %111

48:                                               ; preds = %41
  %49 = sub i64 %17, %43
  %50 = add i64 %49, 1
  %51 = icmp ugt i64 %50, %43
  br i1 %51, label %52, label %68

52:                                               ; preds = %48
  %53 = icmp eq i64 %21, %23
  br i1 %53, label %65, label %54

54:                                               ; preds = %52, %54
  %55 = phi i64 [ %61, %54 ], [ %23, %52 ]
  %56 = phi i64 [ %59, %54 ], [ 0, %52 ]
  %57 = inttoptr i64 %55 to i32*
  %58 = getelementptr inbounds i32, i32* %57, i64 %56
  store i32 0, i32* %58, align 4
  %59 = add nuw i64 %56, 1
  %60 = load i64, i64* %20, align 8
  %61 = load i64, i64* %22, align 8
  %62 = sub i64 %60, %61
  %63 = ashr exact i64 %62, 2
  %64 = icmp ult i64 %59, %63
  br i1 %64, label %54, label %65

65:                                               ; preds = %54, %52
  %66 = getelementptr inbounds %"class.download::RateEstimator", %"class.download::RateEstimator"* %0, i64 0, i32 2
  %67 = bitcast i64* %66 to <2 x i64>*
  store <2 x i64> <i64 0, i64 1>, <2 x i64>* %67, align 8
  store i64 %1, i64* %4, align 8
  br label %111

68:                                               ; preds = %48
  %69 = getelementptr inbounds %"class.download::RateEstimator", %"class.download::RateEstimator"* %0, i64 0, i32 3
  store i64 %43, i64* %69, align 8
  %70 = icmp eq i64 %50, 0
  br i1 %70, label %111, label %71

71:                                               ; preds = %68
  %72 = getelementptr inbounds %"class.download::RateEstimator", %"class.download::RateEstimator"* %0, i64 0, i32 2
  %73 = getelementptr inbounds %"class.download::RateEstimator", %"class.download::RateEstimator"* %0, i64 0, i32 0, i32 0, i32 0
  %74 = bitcast %"class.logging::CheckError"* %3 to i8*
  br label %75

75:                                               ; preds = %109, %71
  %76 = phi i32* [ %24, %71 ], [ %110, %109 ]
  %77 = phi i64 [ 0, %71 ], [ %107, %109 ]
  %78 = load i64, i64* %72, align 8
  %79 = getelementptr inbounds i32, i32* %76, i64 %78
  store i32 0, i32* %79, align 4
  %80 = load i64, i64* %72, align 8
  %81 = add i64 %80, 1
  %82 = load i64, i64* %20, align 8
  %83 = load i64, i64* %22, align 8
  %84 = sub i64 %82, %83
  %85 = ashr exact i64 %84, 2
  %86 = urem i64 %81, %85
  store i64 %86, i64* %72, align 8
  %87 = load i64, i64* %11, align 8
  %88 = load i64, i64* %4, align 8
  %89 = add i64 %87, -9223372036854775807
  %90 = icmp ult i64 %89, 2
  br i1 %90, label %98, label %91

91:                                               ; preds = %75
  %92 = icmp slt i64 %87, 0
  %93 = select i1 %92, i64 -9223372036854775808, i64 9223372036854775807
  %94 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %88, i64 %87) #10
  %95 = extractvalue { i64, i1 } %94, 1
  %96 = extractvalue { i64, i1 } %94, 0
  %97 = select i1 %95, i64 %93, i64 %96, !prof !2
  br label %105

98:                                               ; preds = %75
  %99 = add i64 %88, -9223372036854775807
  %100 = icmp ugt i64 %99, 1
  %101 = icmp eq i64 %88, %87
  %102 = or i1 %101, %100
  br i1 %102, label %105, label %103

103:                                              ; preds = %98
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0)) #10
  %104 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #10
  br label %105

105:                                              ; preds = %91, %98, %103
  %106 = phi i64 [ %97, %91 ], [ %87, %98 ], [ %87, %103 ]
  store i64 %106, i64* %4, align 8
  %107 = add nuw i64 %77, 1
  %108 = icmp eq i64 %107, %50
  br i1 %108, label %111, label %109

109:                                              ; preds = %105
  %110 = load i32*, i32** %73, align 8
  br label %75

111:                                              ; preds = %105, %68, %45, %65, %38
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK8download13RateEstimator17GetCountPerSecondEv(%"class.download::RateEstimator"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = tail call i64 @_ZN4base9TimeTicks3NowEv() #10
  tail call void @_ZN8download13RateEstimator15ClearOldBucketsEN4base9TimeTicksE(%"class.download::RateEstimator"* %0, i64 %2) #10
  %3 = getelementptr inbounds %"class.download::RateEstimator", %"class.download::RateEstimator"* %0, i64 0, i32 3
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %53, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.download::RateEstimator", %"class.download::RateEstimator"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.download::RateEstimator", %"class.download::RateEstimator"* %0, i64 0, i32 0, i32 0, i32 1
  %10 = bitcast i32** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.download::RateEstimator"* %0 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = ashr exact i64 %14, 2
  %16 = inttoptr i64 %13 to i32*
  %17 = and i64 %4, 1
  %18 = icmp eq i64 %4, 1
  br i1 %18, label %41, label %19

19:                                               ; preds = %6
  %20 = sub i64 %4, %17
  br label %21

21:                                               ; preds = %21, %19
  %22 = phi i64 [ 0, %19 ], [ %37, %21 ]
  %23 = phi i64 [ 0, %19 ], [ %38, %21 ]
  %24 = phi i64 [ %20, %19 ], [ %39, %21 ]
  %25 = add i64 %23, %8
  %26 = urem i64 %25, %15
  %27 = getelementptr inbounds i32, i32* %16, i64 %26
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i64
  %30 = add i64 %22, %29
  %31 = or i64 %23, 1
  %32 = add i64 %31, %8
  %33 = urem i64 %32, %15
  %34 = getelementptr inbounds i32, i32* %16, i64 %33
  %35 = load i32, i32* %34, align 4
  %36 = zext i32 %35 to i64
  %37 = add i64 %30, %36
  %38 = add nuw i64 %23, 2
  %39 = add i64 %24, -2
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %21

41:                                               ; preds = %21, %6
  %42 = phi i64 [ undef, %6 ], [ %37, %21 ]
  %43 = phi i64 [ 0, %6 ], [ %37, %21 ]
  %44 = phi i64 [ 0, %6 ], [ %38, %21 ]
  %45 = icmp eq i64 %17, 0
  br i1 %45, label %53, label %46

46:                                               ; preds = %41
  %47 = add i64 %44, %8
  %48 = urem i64 %47, %15
  %49 = getelementptr inbounds i32, i32* %16, i64 %48
  %50 = load i32, i32* %49, align 4
  %51 = zext i32 %50 to i64
  %52 = add i64 %43, %51
  br label %53

53:                                               ; preds = %46, %41, %1
  %54 = phi i64 [ 0, %1 ], [ %42, %41 ], [ %52, %46 ]
  %55 = getelementptr inbounds %"class.download::RateEstimator", %"class.download::RateEstimator"* %0, i64 0, i32 1, i32 0
  %56 = load i64, i64* %55, align 8
  %57 = add i64 %56, -9223372036854775807
  %58 = icmp ult i64 %57, 2
  %59 = sdiv i64 %56, 1000000
  %60 = select i1 %58, i64 %56, i64 %59
  %61 = mul i64 %60, %4
  %62 = udiv i64 %54, %61
  ret i64 %62
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK8download13RateEstimator17GetCountPerSecondEN4base9TimeTicksE(%"class.download::RateEstimator"* nocapture, i64) local_unnamed_addr #0 align 2 {
  tail call void @_ZN8download13RateEstimator15ClearOldBucketsEN4base9TimeTicksE(%"class.download::RateEstimator"* %0, i64 %1)
  %3 = getelementptr inbounds %"class.download::RateEstimator", %"class.download::RateEstimator"* %0, i64 0, i32 3
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %33, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.download::RateEstimator", %"class.download::RateEstimator"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.download::RateEstimator", %"class.download::RateEstimator"* %0, i64 0, i32 0, i32 0, i32 1
  %10 = bitcast i32** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.download::RateEstimator"* %0 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = ashr exact i64 %14, 2
  %16 = inttoptr i64 %13 to i32*
  %17 = and i64 %4, 1
  %18 = icmp eq i64 %4, 1
  br i1 %18, label %21, label %19

19:                                               ; preds = %6
  %20 = sub i64 %4, %17
  br label %43

21:                                               ; preds = %43, %6
  %22 = phi i64 [ undef, %6 ], [ %59, %43 ]
  %23 = phi i64 [ 0, %6 ], [ %59, %43 ]
  %24 = phi i64 [ 0, %6 ], [ %60, %43 ]
  %25 = icmp eq i64 %17, 0
  br i1 %25, label %33, label %26

26:                                               ; preds = %21
  %27 = add i64 %8, %24
  %28 = urem i64 %27, %15
  %29 = getelementptr inbounds i32, i32* %16, i64 %28
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i64
  %32 = add i64 %23, %31
  br label %33

33:                                               ; preds = %26, %21, %2
  %34 = phi i64 [ 0, %2 ], [ %22, %21 ], [ %32, %26 ]
  %35 = getelementptr inbounds %"class.download::RateEstimator", %"class.download::RateEstimator"* %0, i64 0, i32 1, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = add i64 %36, -9223372036854775807
  %38 = icmp ult i64 %37, 2
  %39 = sdiv i64 %36, 1000000
  %40 = select i1 %38, i64 %36, i64 %39
  %41 = mul i64 %40, %4
  %42 = udiv i64 %34, %41
  ret i64 %42

43:                                               ; preds = %43, %19
  %44 = phi i64 [ 0, %19 ], [ %59, %43 ]
  %45 = phi i64 [ 0, %19 ], [ %60, %43 ]
  %46 = phi i64 [ %20, %19 ], [ %61, %43 ]
  %47 = add i64 %8, %45
  %48 = urem i64 %47, %15
  %49 = getelementptr inbounds i32, i32* %16, i64 %48
  %50 = load i32, i32* %49, align 4
  %51 = zext i32 %50 to i64
  %52 = add i64 %44, %51
  %53 = or i64 %45, 1
  %54 = add i64 %8, %53
  %55 = urem i64 %54, %15
  %56 = getelementptr inbounds i32, i32* %16, i64 %55
  %57 = load i32, i32* %56, align 4
  %58 = zext i32 %57 to i64
  %59 = add i64 %52, %58
  %60 = add nuw i64 %45, 2
  %61 = add i64 %46, -2
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %21, label %43
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #5

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { builtin nounwind }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
