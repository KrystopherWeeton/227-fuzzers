; ModuleID = '../../media/video/h264_poc.cc'
source_filename = "../../media/video/h264_poc.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.media::H264POC" = type <{ i32, i32, i32, i32, i8, [3 x i8] }>
%"struct.media::H264SPS" = type { i32, i8, i8, i8, i8, i8, i8, i32, i32, i32, i8, i32, i32, i8, i8, [6 x [16 x i32]], [6 x [64 x i32]], i32, i32, i32, i8, i32, i32, i32, i32, [255 x i32], i32, i8, i32, i32, i8, i8, i8, i8, i32, i32, i32, i32, i8, i32, i32, i8, i32, i32, i8, i32, i32, i8, i8, i32, i8, i8, i32, i32, i32, i8, i32, i32, i32, [32 x i32], [32 x i32], [32 x i8], i32, i32, i32, i32, i8, i32 }
%"struct.media::H264SliceHeader" = type { i8, i32, i8*, i64, i64, i32, i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i8, i8, i32, i32, i8, i8, [32 x %"struct.media::H264ModificationOfPicNum"], [32 x %"struct.media::H264ModificationOfPicNum"], i32, i32, i8, i8, %"struct.media::H264WeightingFactors", i8, i8, %"struct.media::H264WeightingFactors", i8, i8, i8, [32 x %"struct.media::H264DecRefPicMarking"], i32, i32, i8, i32, i32, i32, i32, i64, i64, i8, i32 }
%"struct.media::H264ModificationOfPicNum" = type { i32, %union.anon.0 }
%union.anon.0 = type { i32 }
%"struct.media::H264WeightingFactors" = type { i8, i8, [32 x i32], [32 x i32], [32 x [2 x i32]], [32 x [2 x i32]] }
%"struct.media::H264DecRefPicMarking" = type { i32, i32, i32, i32, i32 }

@_ZN5media7H264POCC1Ev = hidden unnamed_addr alias void (%"class.media::H264POC"*), void (%"class.media::H264POC"*)* @_ZN5media7H264POCC2Ev
@_ZN5media7H264POCD1Ev = hidden unnamed_addr alias void (%"class.media::H264POC"*), void (%"class.media::H264POC"*)* @_ZN5media7H264POCD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media7H264POCC2Ev(%"class.media::H264POC"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.media::H264POC"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 17, i1 false) #4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5media7H264POC5ResetEv(%"class.media::H264POC"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = bitcast %"class.media::H264POC"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 17, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5media7H264POCD2Ev(%"class.media::H264POC"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5media7H264POC18ComputePicOrderCntEPKNS_7H264SPSERKNS_15H264SliceHeaderE(%"class.media::H264POC"* nocapture, %"struct.media::H264SPS"* nocapture readonly, %"struct.media::H264SliceHeader"* readonly dereferenceable(2864)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"struct.media::H264SliceHeader", %"struct.media::H264SliceHeader"* %2, i64 0, i32 10
  %5 = load i8, i8* %4, align 4, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %374

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"struct.media::H264SliceHeader", %"struct.media::H264SliceHeader"* %2, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %117, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"struct.media::H264SliceHeader", %"struct.media::H264SliceHeader"* %2, i64 0, i32 0
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %117

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"struct.media::H264SliceHeader", %"struct.media::H264SliceHeader"* %2, i64 0, i32 36
  %17 = load i8, i8* %16, align 2, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %117, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"struct.media::H264SliceHeader", %"struct.media::H264SliceHeader"* %2, i64 0, i32 37, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  switch i32 %21, label %22 [
    i32 5, label %117
    i32 0, label %25
  ]

22:                                               ; preds = %19
  %23 = getelementptr inbounds %"struct.media::H264SliceHeader", %"struct.media::H264SliceHeader"* %2, i64 0, i32 37, i64 1, i32 0
  %24 = load i32, i32* %23, align 4
  switch i32 %24, label %26 [
    i32 5, label %117
    i32 0, label %25
  ]

25:                                               ; preds = %110, %107, %104, %101, %98, %95, %92, %89, %86, %83, %80, %77, %74, %71, %68, %65, %62, %59, %56, %53, %50, %47, %44, %41, %38, %35, %32, %29, %26, %22, %19
  br label %117

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"struct.media::H264SliceHeader", %"struct.media::H264SliceHeader"* %2, i64 0, i32 37, i64 2, i32 0
  %28 = load i32, i32* %27, align 4
  switch i32 %28, label %29 [
    i32 5, label %117
    i32 0, label %25
  ]

29:                                               ; preds = %26
  %30 = getelementptr inbounds %"struct.media::H264SliceHeader", %"struct.media::H264SliceHeader"* %2, i64 0, i32 37, i64 3, i32 0
  %31 = load i32, i32* %30, align 4
  switch i32 %31, label %32 [
    i32 5, label %117
    i32 0, label %25
  ]

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"struct.media::H264SliceHeader", %"struct.media::H264SliceHeader"* %2, i64 0, i32 37, i64 4, i32 0
  %34 = load i32, i32* %33, align 4
  switch i32 %34, label %35 [
    i32 5, label %117
    i32 0, label %25
  ]

35:                                               ; preds = %32
  %36 = getelementptr inbounds %"struct.media::H264SliceHeader", %"struct.media::H264SliceHeader"* %2, i64 0, i32 37, i64 5, i32 0
  %37 = load i32, i32* %36, align 4
  switch i32 %37, label %38 [
    i32 5, label %117
    i32 0, label %25
  ]

38:                                               ; preds = %35
  %39 = getelementptr inbounds %"struct.media::H264SliceHeader", %"struct.media::H264SliceHeader"* %2, i64 0, i32 37, i64 6, i32 0
  %40 = load i32, i32* %39, align 4
  switch i32 %40, label %41 [
    i32 5, label %117
    i32 0, label %25
  ]

41:                                               ; preds = %38
  %42 = getelementptr inbounds %"struct.media::H264SliceHeader", %"struct.media::H264SliceHeader"* %2, i64 0, i32 37, i64 7, i32 0
  %43 = load i32, i32* %42, align 4
  switch i32 %43, label %44 [
    i32 5, label %117
    i32 0, label %25
  ]

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"struct.media::H264SliceHeader", %"struct.media::H264SliceHeader"* %2, i64 0, i32 37, i64 8, i32 0
  %46 = load i32, i32* %45, align 4
  switch i32 %46, label %47 [
    i32 5, label %117
    i32 0, label %25
  ]

47:                                               ; preds = %44
  %48 = getelementptr inbounds %"struct.media::H264SliceHeader", %"struct.media::H264SliceHeader"* %2, i64 0, i32 37, i64 9, i32 0
  %49 = load i32, i32* %48, align 4
  switch i32 %49, label %50 [
    i32 5, label %117
    i32 0, label %25
  ]

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"struct.media::H264SliceHeader", %"struct.media::H264SliceHeader"* %2, i64 0, i32 37, i64 10, i32 0
  %52 = load i32, i32* %51, align 4
  switch i32 %52, label %53 [
    i32 5, label %117
    i32 0, label %25
  ]

53:                                               ; preds = %50
  %54 = getelementptr inbounds %"struct.media::H264SliceHeader", %"struct.media::H264SliceHeader"* %2, i64 0, i32 37, i64 11, i32 0
  %55 = load i32, i32* %54, align 4
  switch i32 %55, label %56 [
    i32 5, label %117
    i32 0, label %25
  ]

56:                                               ; preds = %53
  %57 = getelementptr inbounds %"struct.media::H264SliceHeader", %"struct.media::H264SliceHeader"* %2, i64 0, i32 37, i64 12, i32 0
  %58 = load i32, i32* %57, align 4
  switch i32 %58, label %59 [
    i32 5, label %117
    i32 0, label %25
  ]

59:                                               ; preds = %56
  %60 = getelementptr inbounds %"struct.media::H264SliceHeader", %"struct.media::H264SliceHeader"* %2, i64 0, i32 37, i64 13, i32 0
  %61 = load i32, i32* %60, align 4
  switch i32 %61, label %62 [
    i32 5, label %117
    i32 0, label %25
  ]

62:                                               ; preds = %59
  %63 = getelementptr inbounds %"struct.media::H264SliceHeader", %"struct.media::H264SliceHeader"* %2, i64 0, i32 37, i64 14, i32 0
  %64 = load i32, i32* %63, align 4
  switch i32 %64, label %65 [
    i32 5, label %117
    i32 0, label %25
  ]

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"struct.media::H264SliceHeader", %"struct.media::H264SliceHeader"* %2, i64 0, i32 37, i64 15, i32 0
  %67 = load i32, i32* %66, align 4
  switch i32 %67, label %68 [
    i32 5, label %117
    i32 0, label %25
  ]

68:                                               ; preds = %65
  %69 = getelementptr inbounds %"struct.media::H264SliceHeader", %"struct.media::H264SliceHeader"* %2, i64 0, i32 37, i64 16, i32 0
  %70 = load i32, i32* %69, align 4
  switch i32 %70, label %71 [
    i32 5, label %117
    i32 0, label %25
  ]

71:                                               ; preds = %68
  %72 = getelementptr inbounds %"struct.media::H264SliceHeader", %"struct.media::H264SliceHeader"* %2, i64 0, i32 37, i64 17, i32 0
  %73 = load i32, i32* %72, align 4
  switch i32 %73, label %74 [
    i32 5, label %117
    i32 0, label %25
  ]

74:                                               ; preds = %71
  %75 = getelementptr inbounds %"struct.media::H264SliceHeader", %"struct.media::H264SliceHeader"* %2, i64 0, i32 37, i64 18, i32 0
  %76 = load i32, i32* %75, align 4
  switch i32 %76, label %77 [
    i32 5, label %117
    i32 0, label %25
  ]

77:                                               ; preds = %74
  %78 = getelementptr inbounds %"struct.media::H264SliceHeader", %"struct.media::H264SliceHeader"* %2, i64 0, i32 37, i64 19, i32 0
  %79 = load i32, i32* %78, align 4
  switch i32 %79, label %80 [
    i32 5, label %117
    i32 0, label %25
  ]

80:                                               ; preds = %77
  %81 = getelementptr inbounds %"struct.media::H264SliceHeader", %"struct.media::H264SliceHeader"* %2, i64 0, i32 37, i64 20, i32 0
  %82 = load i32, i32* %81, align 4
  switch i32 %82, label %83 [
    i32 5, label %117
    i32 0, label %25
  ]

83:                                               ; preds = %80
  %84 = getelementptr inbounds %"struct.media::H264SliceHeader", %"struct.media::H264SliceHeader"* %2, i64 0, i32 37, i64 21, i32 0
  %85 = load i32, i32* %84, align 4
  switch i32 %85, label %86 [
    i32 5, label %117
    i32 0, label %25
  ]

86:                                               ; preds = %83
  %87 = getelementptr inbounds %"struct.media::H264SliceHeader", %"struct.media::H264SliceHeader"* %2, i64 0, i32 37, i64 22, i32 0
  %88 = load i32, i32* %87, align 4
  switch i32 %88, label %89 [
    i32 5, label %117
    i32 0, label %25
  ]

89:                                               ; preds = %86
  %90 = getelementptr inbounds %"struct.media::H264SliceHeader", %"struct.media::H264SliceHeader"* %2, i64 0, i32 37, i64 23, i32 0
  %91 = load i32, i32* %90, align 4
  switch i32 %91, label %92 [
    i32 5, label %117
    i32 0, label %25
  ]

92:                                               ; preds = %89
  %93 = getelementptr inbounds %"struct.media::H264SliceHeader", %"struct.media::H264SliceHeader"* %2, i64 0, i32 37, i64 24, i32 0
  %94 = load i32, i32* %93, align 4
  switch i32 %94, label %95 [
    i32 5, label %117
    i32 0, label %25
  ]

95:                                               ; preds = %92
  %96 = getelementptr inbounds %"struct.media::H264SliceHeader", %"struct.media::H264SliceHeader"* %2, i64 0, i32 37, i64 25, i32 0
  %97 = load i32, i32* %96, align 4
  switch i32 %97, label %98 [
    i32 5, label %117
    i32 0, label %25
  ]

98:                                               ; preds = %95
  %99 = getelementptr inbounds %"struct.media::H264SliceHeader", %"struct.media::H264SliceHeader"* %2, i64 0, i32 37, i64 26, i32 0
  %100 = load i32, i32* %99, align 4
  switch i32 %100, label %101 [
    i32 5, label %117
    i32 0, label %25
  ]

101:                                              ; preds = %98
  %102 = getelementptr inbounds %"struct.media::H264SliceHeader", %"struct.media::H264SliceHeader"* %2, i64 0, i32 37, i64 27, i32 0
  %103 = load i32, i32* %102, align 4
  switch i32 %103, label %104 [
    i32 5, label %117
    i32 0, label %25
  ]

104:                                              ; preds = %101
  %105 = getelementptr inbounds %"struct.media::H264SliceHeader", %"struct.media::H264SliceHeader"* %2, i64 0, i32 37, i64 28, i32 0
  %106 = load i32, i32* %105, align 4
  switch i32 %106, label %107 [
    i32 5, label %117
    i32 0, label %25
  ]

107:                                              ; preds = %104
  %108 = getelementptr inbounds %"struct.media::H264SliceHeader", %"struct.media::H264SliceHeader"* %2, i64 0, i32 37, i64 29, i32 0
  %109 = load i32, i32* %108, align 4
  switch i32 %109, label %110 [
    i32 5, label %117
    i32 0, label %25
  ]

110:                                              ; preds = %107
  %111 = getelementptr inbounds %"struct.media::H264SliceHeader", %"struct.media::H264SliceHeader"* %2, i64 0, i32 37, i64 30, i32 0
  %112 = load i32, i32* %111, align 4
  switch i32 %112, label %113 [
    i32 5, label %117
    i32 0, label %25
  ]

113:                                              ; preds = %110
  %114 = getelementptr inbounds %"struct.media::H264SliceHeader", %"struct.media::H264SliceHeader"* %2, i64 0, i32 37, i64 31, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = icmp eq i32 %115, 5
  br label %117

117:                                              ; preds = %7, %11, %15, %19, %22, %25, %26, %29, %32, %35, %38, %41, %44, %47, %50, %53, %56, %59, %62, %65, %68, %71, %74, %77, %80, %83, %86, %89, %92, %95, %98, %101, %104, %107, %110, %113
  %118 = phi i1 [ false, %7 ], [ false, %11 ], [ false, %15 ], [ false, %25 ], [ true, %19 ], [ true, %22 ], [ true, %26 ], [ true, %29 ], [ true, %32 ], [ true, %35 ], [ true, %38 ], [ true, %41 ], [ true, %44 ], [ true, %47 ], [ true, %50 ], [ true, %53 ], [ true, %56 ], [ true, %59 ], [ true, %62 ], [ true, %65 ], [ true, %68 ], [ true, %71 ], [ true, %74 ], [ true, %77 ], [ true, %80 ], [ true, %83 ], [ true, %86 ], [ true, %89 ], [ true, %92 ], [ true, %95 ], [ true, %98 ], [ true, %101 ], [ true, %104 ], [ true, %107 ], [ true, %110 ], [ %116, %113 ]
  %119 = zext i1 %118 to i8
  %120 = getelementptr inbounds %"struct.media::H264SPS", %"struct.media::H264SPS"* %1, i64 0, i32 17
  %121 = load i32, i32* %120, align 4
  %122 = add nsw i32 %121, 4
  %123 = shl i32 1, %122
  %124 = getelementptr inbounds %"struct.media::H264SPS", %"struct.media::H264SPS"* %1, i64 0, i32 19
  %125 = load i32, i32* %124, align 4
  %126 = add nsw i32 %125, 4
  %127 = shl i32 1, %126
  %128 = getelementptr inbounds %"struct.media::H264SPS", %"struct.media::H264SPS"* %1, i64 0, i32 18
  %129 = load i32, i32* %128, align 4
  switch i32 %129, label %374 [
    i32 0, label %130
    i32 1, label %176
    i32 2, label %346
  ]

130:                                              ; preds = %117
  %131 = getelementptr inbounds %"class.media::H264POC", %"class.media::H264POC"* %0, i64 0, i32 0
  %132 = load i32, i32* %131, align 4
  %133 = getelementptr inbounds %"class.media::H264POC", %"class.media::H264POC"* %0, i64 0, i32 1
  %134 = load i32, i32* %133, align 4
  %135 = getelementptr inbounds %"struct.media::H264SliceHeader", %"struct.media::H264SliceHeader"* %2, i64 0, i32 0
  %136 = load i8, i8* %135, align 8, !range !2
  %137 = icmp eq i8 %136, 0
  %138 = select i1 %137, i32 %132, i32 0
  %139 = select i1 %137, i32 %134, i32 0
  %140 = getelementptr inbounds %"struct.media::H264SliceHeader", %"struct.media::H264SliceHeader"* %2, i64 0, i32 13
  %141 = load i32, i32* %140, align 4
  %142 = icmp sgt i32 %139, %141
  br i1 %142, label %143, label %149

143:                                              ; preds = %130
  %144 = sub nsw i32 %139, %141
  %145 = sdiv i32 %127, 2
  %146 = icmp slt i32 %144, %145
  br i1 %146, label %149, label %147

147:                                              ; preds = %143
  %148 = add nsw i32 %138, %127
  br label %157

149:                                              ; preds = %143, %130
  %150 = icmp sgt i32 %141, %139
  br i1 %150, label %151, label %157

151:                                              ; preds = %149
  %152 = sub nsw i32 %141, %139
  %153 = sdiv i32 %127, 2
  %154 = icmp sgt i32 %152, %153
  %155 = select i1 %154, i32 %127, i32 0
  %156 = sub nsw i32 %138, %155
  br label %157

157:                                              ; preds = %151, %149, %147
  %158 = phi i32 [ %148, %147 ], [ %138, %149 ], [ %156, %151 ]
  %159 = add nsw i32 %158, %141
  %160 = getelementptr inbounds %"struct.media::H264SliceHeader", %"struct.media::H264SliceHeader"* %2, i64 0, i32 14
  %161 = load i32, i32* %160, align 8
  %162 = add nsw i32 %159, %161
  %163 = icmp slt i32 %162, %159
  %164 = select i1 %163, i32 %162, i32 %159
  %165 = select i1 %118, i32 0, i32 %164
  %166 = getelementptr inbounds %"class.media::H264POC", %"class.media::H264POC"* %0, i64 0, i32 4
  store i8 %119, i8* %166, align 4
  %167 = getelementptr inbounds %"struct.media::H264SliceHeader", %"struct.media::H264SliceHeader"* %2, i64 0, i32 9
  %168 = load i32, i32* %167, align 8
  %169 = getelementptr inbounds %"class.media::H264POC", %"class.media::H264POC"* %0, i64 0, i32 2
  store i32 %168, i32* %169, align 4
  %170 = load i32, i32* %8, align 4
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %374, label %172

172:                                              ; preds = %157
  br i1 %118, label %173, label %174

173:                                              ; preds = %172
  store i32 0, i32* %131, align 4
  store i32 %159, i32* %133, align 4
  br label %374

174:                                              ; preds = %172
  store i32 %158, i32* %131, align 4
  %175 = load i32, i32* %140, align 4
  store i32 %175, i32* %133, align 4
  br label %374

176:                                              ; preds = %117
  %177 = getelementptr inbounds %"struct.media::H264SliceHeader", %"struct.media::H264SliceHeader"* %2, i64 0, i32 0
  %178 = load i8, i8* %177, align 8, !range !2
  %179 = icmp eq i8 %178, 0
  br i1 %179, label %183, label %180

180:                                              ; preds = %176
  %181 = getelementptr inbounds %"struct.media::H264SliceHeader", %"struct.media::H264SliceHeader"* %2, i64 0, i32 9
  %182 = load i32, i32* %181, align 8
  br label %193

183:                                              ; preds = %176
  %184 = getelementptr inbounds %"class.media::H264POC", %"class.media::H264POC"* %0, i64 0, i32 2
  %185 = load i32, i32* %184, align 4
  %186 = getelementptr inbounds %"struct.media::H264SliceHeader", %"struct.media::H264SliceHeader"* %2, i64 0, i32 9
  %187 = load i32, i32* %186, align 8
  %188 = icmp sgt i32 %185, %187
  %189 = getelementptr inbounds %"class.media::H264POC", %"class.media::H264POC"* %0, i64 0, i32 3
  %190 = load i32, i32* %189, align 4
  %191 = select i1 %188, i32 %123, i32 0
  %192 = add nsw i32 %191, %190
  br label %193

193:                                              ; preds = %180, %183
  %194 = phi i32 [ %182, %180 ], [ %187, %183 ]
  %195 = phi i32 [ 0, %180 ], [ %192, %183 ]
  %196 = getelementptr inbounds %"struct.media::H264SPS", %"struct.media::H264SPS"* %1, i64 0, i32 23
  %197 = load i32, i32* %196, align 4
  %198 = icmp eq i32 %197, 0
  %199 = getelementptr inbounds %"struct.media::H264SliceHeader", %"struct.media::H264SliceHeader"* %2, i64 0, i32 9
  %200 = add nsw i32 %194, %195
  %201 = select i1 %198, i32 0, i32 %200
  %202 = icmp sgt i32 %201, 0
  %203 = and i1 %10, %202
  %204 = zext i1 %203 to i32
  %205 = sub i32 %201, %204
  %206 = icmp sgt i32 %205, 0
  br i1 %206, label %207, label %317

207:                                              ; preds = %193
  br i1 %198, label %374, label %208

208:                                              ; preds = %207
  %209 = add nsw i32 %205, -1
  %210 = sdiv i32 %209, %197
  %211 = srem i32 %209, %197
  %212 = getelementptr inbounds %"struct.media::H264SPS", %"struct.media::H264SPS"* %1, i64 0, i32 24
  %213 = load i32, i32* %212, align 4
  %214 = mul nsw i32 %213, %210
  %215 = icmp slt i32 %211, 0
  br i1 %215, label %317, label %216

216:                                              ; preds = %208
  %217 = add nuw nsw i32 %211, 1
  %218 = zext i32 %217 to i64
  %219 = icmp ult i32 %217, 8
  br i1 %219, label %306, label %220

220:                                              ; preds = %216
  %221 = and i64 %218, 4294967288
  %222 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %214, i32 0
  %223 = add nsw i64 %221, -8
  %224 = lshr exact i64 %223, 3
  %225 = add nuw nsw i64 %224, 1
  %226 = and i64 %225, 3
  %227 = icmp ult i64 %223, 24
  br i1 %227, label %273, label %228

228:                                              ; preds = %220
  %229 = sub nsw i64 %225, %226
  br label %230

230:                                              ; preds = %230, %228
  %231 = phi i64 [ 0, %228 ], [ %270, %230 ]
  %232 = phi <4 x i32> [ %222, %228 ], [ %268, %230 ]
  %233 = phi <4 x i32> [ zeroinitializer, %228 ], [ %269, %230 ]
  %234 = phi i64 [ %229, %228 ], [ %271, %230 ]
  %235 = getelementptr inbounds %"struct.media::H264SPS", %"struct.media::H264SPS"* %1, i64 0, i32 25, i64 %231
  %236 = bitcast i32* %235 to <4 x i32>*
  %237 = load <4 x i32>, <4 x i32>* %236, align 4
  %238 = getelementptr inbounds i32, i32* %235, i64 4
  %239 = bitcast i32* %238 to <4 x i32>*
  %240 = load <4 x i32>, <4 x i32>* %239, align 4
  %241 = add nsw <4 x i32> %237, %232
  %242 = add nsw <4 x i32> %240, %233
  %243 = or i64 %231, 8
  %244 = getelementptr inbounds %"struct.media::H264SPS", %"struct.media::H264SPS"* %1, i64 0, i32 25, i64 %243
  %245 = bitcast i32* %244 to <4 x i32>*
  %246 = load <4 x i32>, <4 x i32>* %245, align 4
  %247 = getelementptr inbounds i32, i32* %244, i64 4
  %248 = bitcast i32* %247 to <4 x i32>*
  %249 = load <4 x i32>, <4 x i32>* %248, align 4
  %250 = add nsw <4 x i32> %246, %241
  %251 = add nsw <4 x i32> %249, %242
  %252 = or i64 %231, 16
  %253 = getelementptr inbounds %"struct.media::H264SPS", %"struct.media::H264SPS"* %1, i64 0, i32 25, i64 %252
  %254 = bitcast i32* %253 to <4 x i32>*
  %255 = load <4 x i32>, <4 x i32>* %254, align 4
  %256 = getelementptr inbounds i32, i32* %253, i64 4
  %257 = bitcast i32* %256 to <4 x i32>*
  %258 = load <4 x i32>, <4 x i32>* %257, align 4
  %259 = add nsw <4 x i32> %255, %250
  %260 = add nsw <4 x i32> %258, %251
  %261 = or i64 %231, 24
  %262 = getelementptr inbounds %"struct.media::H264SPS", %"struct.media::H264SPS"* %1, i64 0, i32 25, i64 %261
  %263 = bitcast i32* %262 to <4 x i32>*
  %264 = load <4 x i32>, <4 x i32>* %263, align 4
  %265 = getelementptr inbounds i32, i32* %262, i64 4
  %266 = bitcast i32* %265 to <4 x i32>*
  %267 = load <4 x i32>, <4 x i32>* %266, align 4
  %268 = add nsw <4 x i32> %264, %259
  %269 = add nsw <4 x i32> %267, %260
  %270 = add i64 %231, 32
  %271 = add i64 %234, -4
  %272 = icmp eq i64 %271, 0
  br i1 %272, label %273, label %230, !llvm.loop !3

273:                                              ; preds = %230, %220
  %274 = phi <4 x i32> [ undef, %220 ], [ %268, %230 ]
  %275 = phi <4 x i32> [ undef, %220 ], [ %269, %230 ]
  %276 = phi i64 [ 0, %220 ], [ %270, %230 ]
  %277 = phi <4 x i32> [ %222, %220 ], [ %268, %230 ]
  %278 = phi <4 x i32> [ zeroinitializer, %220 ], [ %269, %230 ]
  %279 = icmp eq i64 %226, 0
  br i1 %279, label %296, label %280

280:                                              ; preds = %273, %280
  %281 = phi i64 [ %293, %280 ], [ %276, %273 ]
  %282 = phi <4 x i32> [ %291, %280 ], [ %277, %273 ]
  %283 = phi <4 x i32> [ %292, %280 ], [ %278, %273 ]
  %284 = phi i64 [ %294, %280 ], [ %226, %273 ]
  %285 = getelementptr inbounds %"struct.media::H264SPS", %"struct.media::H264SPS"* %1, i64 0, i32 25, i64 %281
  %286 = bitcast i32* %285 to <4 x i32>*
  %287 = load <4 x i32>, <4 x i32>* %286, align 4
  %288 = getelementptr inbounds i32, i32* %285, i64 4
  %289 = bitcast i32* %288 to <4 x i32>*
  %290 = load <4 x i32>, <4 x i32>* %289, align 4
  %291 = add nsw <4 x i32> %287, %282
  %292 = add nsw <4 x i32> %290, %283
  %293 = add i64 %281, 8
  %294 = add i64 %284, -1
  %295 = icmp eq i64 %294, 0
  br i1 %295, label %296, label %280, !llvm.loop !5

296:                                              ; preds = %280, %273
  %297 = phi <4 x i32> [ %274, %273 ], [ %291, %280 ]
  %298 = phi <4 x i32> [ %275, %273 ], [ %292, %280 ]
  %299 = add <4 x i32> %298, %297
  %300 = shufflevector <4 x i32> %299, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %301 = add <4 x i32> %299, %300
  %302 = shufflevector <4 x i32> %301, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %303 = add <4 x i32> %301, %302
  %304 = extractelement <4 x i32> %303, i32 0
  %305 = icmp eq i64 %221, %218
  br i1 %305, label %317, label %306

306:                                              ; preds = %296, %216
  %307 = phi i64 [ 0, %216 ], [ %221, %296 ]
  %308 = phi i32 [ %214, %216 ], [ %304, %296 ]
  br label %309

309:                                              ; preds = %306, %309
  %310 = phi i64 [ %315, %309 ], [ %307, %306 ]
  %311 = phi i32 [ %314, %309 ], [ %308, %306 ]
  %312 = getelementptr inbounds %"struct.media::H264SPS", %"struct.media::H264SPS"* %1, i64 0, i32 25, i64 %310
  %313 = load i32, i32* %312, align 4
  %314 = add nsw i32 %313, %311
  %315 = add nuw nsw i64 %310, 1
  %316 = icmp eq i64 %315, %218
  br i1 %316, label %317, label %309, !llvm.loop !7

317:                                              ; preds = %309, %296, %208, %193
  %318 = phi i32 [ 0, %193 ], [ %214, %208 ], [ %304, %296 ], [ %314, %309 ]
  br i1 %10, label %319, label %323

319:                                              ; preds = %317
  %320 = getelementptr inbounds %"struct.media::H264SPS", %"struct.media::H264SPS"* %1, i64 0, i32 21
  %321 = load i32, i32* %320, align 4
  %322 = add nsw i32 %321, %318
  br label %323

323:                                              ; preds = %319, %317
  %324 = phi i32 [ %322, %319 ], [ %318, %317 ]
  %325 = getelementptr inbounds %"struct.media::H264SliceHeader", %"struct.media::H264SliceHeader"* %2, i64 0, i32 15
  %326 = load i32, i32* %325, align 4
  %327 = add nsw i32 %326, %324
  %328 = getelementptr inbounds %"struct.media::H264SPS", %"struct.media::H264SPS"* %1, i64 0, i32 22
  %329 = load i32, i32* %328, align 4
  %330 = add nsw i32 %327, %329
  %331 = getelementptr inbounds %"struct.media::H264SliceHeader", %"struct.media::H264SliceHeader"* %2, i64 0, i32 16
  %332 = load i32, i32* %331, align 8
  %333 = add nsw i32 %330, %332
  br i1 %118, label %334, label %339

334:                                              ; preds = %323
  %335 = getelementptr inbounds %"class.media::H264POC", %"class.media::H264POC"* %0, i64 0, i32 4
  store i8 %119, i8* %335, align 4
  %336 = load i32, i32* %199, align 8
  %337 = getelementptr inbounds %"class.media::H264POC", %"class.media::H264POC"* %0, i64 0, i32 2
  store i32 %336, i32* %337, align 4
  %338 = getelementptr inbounds %"class.media::H264POC", %"class.media::H264POC"* %0, i64 0, i32 3
  store i32 0, i32* %338, align 4
  br label %374

339:                                              ; preds = %323
  %340 = icmp slt i32 %333, %327
  %341 = select i1 %340, i32 %333, i32 %327
  %342 = getelementptr inbounds %"class.media::H264POC", %"class.media::H264POC"* %0, i64 0, i32 4
  store i8 %119, i8* %342, align 4
  %343 = load i32, i32* %199, align 8
  %344 = getelementptr inbounds %"class.media::H264POC", %"class.media::H264POC"* %0, i64 0, i32 2
  store i32 %343, i32* %344, align 4
  %345 = getelementptr inbounds %"class.media::H264POC", %"class.media::H264POC"* %0, i64 0, i32 3
  store i32 %195, i32* %345, align 4
  br label %374

346:                                              ; preds = %117
  %347 = getelementptr inbounds %"struct.media::H264SliceHeader", %"struct.media::H264SliceHeader"* %2, i64 0, i32 0
  %348 = load i8, i8* %347, align 8, !range !2
  %349 = icmp eq i8 %348, 0
  br i1 %349, label %350, label %364

350:                                              ; preds = %346
  %351 = getelementptr inbounds %"class.media::H264POC", %"class.media::H264POC"* %0, i64 0, i32 2
  %352 = load i32, i32* %351, align 4
  %353 = getelementptr inbounds %"struct.media::H264SliceHeader", %"struct.media::H264SliceHeader"* %2, i64 0, i32 9
  %354 = load i32, i32* %353, align 8
  %355 = icmp sgt i32 %352, %354
  %356 = getelementptr inbounds %"class.media::H264POC", %"class.media::H264POC"* %0, i64 0, i32 3
  %357 = load i32, i32* %356, align 4
  %358 = select i1 %355, i32 %123, i32 0
  %359 = add nsw i32 %358, %357
  %360 = add nsw i32 %359, %354
  %361 = shl nsw i32 %360, 1
  %362 = zext i1 %10 to i32
  %363 = sub i32 %361, %362
  br label %364

364:                                              ; preds = %346, %350
  %365 = phi i32 [ %359, %350 ], [ 0, %346 ]
  %366 = phi i32 [ %363, %350 ], [ 0, %346 ]
  %367 = getelementptr inbounds %"class.media::H264POC", %"class.media::H264POC"* %0, i64 0, i32 4
  store i8 %119, i8* %367, align 4
  %368 = getelementptr inbounds %"struct.media::H264SliceHeader", %"struct.media::H264SliceHeader"* %2, i64 0, i32 9
  %369 = load i32, i32* %368, align 8
  %370 = getelementptr inbounds %"class.media::H264POC", %"class.media::H264POC"* %0, i64 0, i32 2
  store i32 %369, i32* %370, align 4
  %371 = getelementptr inbounds %"class.media::H264POC", %"class.media::H264POC"* %0, i64 0, i32 3
  br i1 %118, label %372, label %373

372:                                              ; preds = %364
  store i32 0, i32* %371, align 4
  br label %374

373:                                              ; preds = %364
  store i32 %365, i32* %371, align 4
  br label %374

374:                                              ; preds = %207, %117, %334, %339, %174, %173, %157, %372, %373, %3
  %375 = phi i32 [ undef, %3 ], [ undef, %207 ], [ undef, %117 ], [ 0, %372 ], [ %366, %373 ], [ %165, %157 ], [ 0, %173 ], [ %164, %174 ], [ %341, %339 ], [ 0, %334 ]
  %376 = phi i64 [ 0, %3 ], [ 0, %207 ], [ 0, %117 ], [ 1, %372 ], [ 1, %373 ], [ 1, %157 ], [ 1, %173 ], [ 1, %174 ], [ 1, %339 ], [ 1, %334 ]
  %377 = zext i32 %375 to i64
  %378 = shl nuw i64 %377, 32
  %379 = or i64 %378, %376
  ret i64 %379
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.isvectorized", i32 1}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.unroll.disable"}
!7 = distinct !{!7, !8, !4}
!8 = !{!"llvm.loop.unroll.runtime.disable"}
