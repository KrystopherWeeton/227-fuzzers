; ModuleID = '../../third_party/boringssl/src/ssl/t1_lib.cc'
source_filename = "../../third_party/boringssl/src/ssl/t1_lib.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.bssl::tls_extension" = type { i16, void (%"struct.bssl::SSL_HANDSHAKE"*)*, i1 (%"struct.bssl::SSL_HANDSHAKE"*, %struct.cbb_st*)*, i1 (%"struct.bssl::SSL_HANDSHAKE"*, i8*, %struct.cbs_st*)*, i1 (%"struct.bssl::SSL_HANDSHAKE"*, i8*, %struct.cbs_st*)*, i1 (%"struct.bssl::SSL_HANDSHAKE"*, %struct.cbb_st*)* }
%"struct.bssl::SSL_HANDSHAKE" = type <{ %struct.ssl_st*, %"struct.bssl::SSL_CONFIG"*, i32, i32, i32, i16, i16, i64, [48 x i8], [48 x i8], [48 x i8], [48 x i8], [48 x i8], [48 x i8], [48 x i8], %union.anon.39, i16, [2 x i8], %"class.std::__1::unique_ptr.40", [2 x %"class.std::__1::unique_ptr.45"], %"class.bssl::SSLTranscript", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array.56", %"class.bssl::Array.56", %"class.bssl::Array.56", %"class.bssl::Array", i16, [6 x i8], %"class.bssl::internal::StackAllocated.57", %"class.bssl::Array", %"class.std::__1::unique_ptr.29", %"class.std::__1::unique_ptr.23", %struct.stack_st_X509_NAME*, %"class.bssl::Array", %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.58", %"class.std::__1::unique_ptr.58", %"class.std::__1::unique_ptr.63", %struct.ssl_cipher_st*, %"class.bssl::Array", %"class.std::__1::unique_ptr.75", i32, i16, i16, i16, i8, [32 x i8], i8, [6 x i8], [6 x i8] }>
%struct.ssl_st = type <{ %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"class.std::__1::unique_ptr.2", i16, i16, [4 x i8], %"class.std::__1::unique_ptr.96", %"class.std::__1::unique_ptr.96", i32 (%"struct.bssl::SSL_HANDSHAKE"*)*, %"struct.bssl::SSL3_STATE"*, %"struct.bssl::DTLS1_STATE"*, void (i32, i32, i32, i8*, i64, %struct.ssl_st*, i8*)*, i8*, i32, [4 x i8], %"class.std::__1::unique_ptr.58", void (%struct.ssl_st*, i32, i32)*, %"class.std::__1::unique_ptr.111", %"class.std::__1::unique_ptr.111", %struct.crypto_ex_data_st, i32, i32, i32, [4 x i8], %"class.std::__1::unique_ptr.29", %struct.ssl_quic_method_st*, i32, i8, [3 x i8] }>
%"struct.bssl::SSL_PROTOCOL_METHOD" = type { i8, i1 (%struct.ssl_st*)*, void (%struct.ssl_st*)*, i1 (%struct.ssl_st*, %"struct.bssl::SSLMessage"*)*, void (%struct.ssl_st*)*, i1 (%struct.ssl_st*)*, i32 (%struct.ssl_st*, i64*, i8*, i8*, i64)*, i32 (%struct.ssl_st*, i64*, i8*, i8*, i64)*, i32 (%struct.ssl_st*, %"class.bssl::Span"*, i64*, i8*, i8*, i64)*, i32 (%struct.ssl_st*, i8*, i8*, i32)*, i32 (%struct.ssl_st*)*, i1 (%struct.ssl_st*, %struct.cbb_st*, %struct.cbb_st*, i8)*, i1 (%struct.ssl_st*, %struct.cbb_st*, %"class.bssl::Array"*)*, i1 (%struct.ssl_st*, %"class.bssl::Array"*)*, i1 (%struct.ssl_st*)*, i32 (%struct.ssl_st*)*, void (%struct.ssl_st*)*, i1 (%struct.ssl_st*, i32, %"class.bssl::SSLAEADContext"*, i8*, i64)*, i1 (%struct.ssl_st*, i32, %"class.bssl::SSLAEADContext"*, i8*, i64)* }
%"struct.bssl::SSLMessage" = type { i8, i8, %struct.cbs_st, %struct.cbs_st }
%struct.cbs_st = type { i8*, i64 }
%"class.bssl::Span" = type { i8*, i64 }
%struct.cbb_st = type { %struct.cbb_buffer_st*, %struct.cbb_st*, i64, i8, i8, i8 }
%struct.cbb_buffer_st = type { i8*, i64, i64, i8, i8 }
%"class.bssl::SSLAEADContext" = type <{ %struct.ssl_cipher_st*, %"class.bssl::internal::StackAllocated", [12 x i8], i8, i8, i16, i8, i8, [6 x i8] }>
%"class.bssl::internal::StackAllocated" = type { %struct.evp_aead_ctx_st }
%struct.evp_aead_ctx_st = type { %struct.evp_aead_st*, %union.evp_aead_ctx_st_state, i8 }
%struct.evp_aead_st = type opaque
%union.evp_aead_ctx_st_state = type { i64, [576 x i8] }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.bssl::SSL_CONFIG"* }
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %struct.bio_st* }
%struct.bio_st = type { %struct.bio_method_st*, i32, i32, i32, i32, i32, i32, i8*, %struct.bio_st*, i64, i64 }
%struct.bio_method_st = type { i32, i8*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*)*, i32 (%struct.bio_st*, i8*, i32)*, i64 (%struct.bio_st*, i32, i64, i8*)*, i32 (%struct.bio_st*)*, i32 (%struct.bio_st*)*, i64 (%struct.bio_st*, i32, i64 (%struct.bio_st*, i32, i8*, i32, i64, i64)*)* }
%"struct.bssl::SSL3_STATE" = type <{ [8 x i8], [8 x i8], [32 x i8], [32 x i8], %"class.bssl::SSLBuffer", %"class.bssl::SSLBuffer", %"class.bssl::Span", i32, i32, i32, i32, i8*, i32, i32, %"class.std::__1::unique_ptr.40", i32, i32, i32, i32, i16, i8, i8, i8, i16, i8, %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50", i32, i32, i32, [4 x i8], %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.101", [48 x i8], [48 x i8], [48 x i8], i8, i8, i8, [12 x i8], i8, i8, [12 x i8], [2 x i8], i8, %"class.std::__1::unique_ptr.58", %"class.bssl::Array", %"class.bssl::Array", %"class.std::__1::unique_ptr.29", [64 x i8], %"class.bssl::Array", %struct.srtp_protection_profile_st* }>
%"class.bssl::SSLBuffer" = type <{ i8*, i16, i16, i16, [5 x i8], i8, [4 x i8] }>
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %struct.buf_mem_st* }
%struct.buf_mem_st = type { i64, i8*, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.bssl::SSLAEADContext"* }
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"struct.bssl::SSL_HANDSHAKE"* }
%struct.srtp_protection_profile_st = type { i8*, i64 }
%"struct.bssl::DTLS1_STATE" = type <{ i8, [256 x i8], [7 x i8], i64, i16, i16, [4 x i8], %"struct.bssl::DTLS1_BITMAP", i16, i16, [8 x i8], [4 x i8], %"class.std::__1::unique_ptr", [7 x %"class.std::__1::unique_ptr.106"], [7 x %"struct.bssl::DTLS_OUTGOING_MESSAGE"], i8, i8, [2 x i8], i32, i32, i32, %"struct.bssl::OPENSSL_timeval", i32, [4 x i8] }>
%"struct.bssl::DTLS1_BITMAP" = type { i64, i64 }
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"struct.bssl::hm_fragment"* }
%"struct.bssl::hm_fragment" = type { i8, i16, i32, i8*, i8* }
%"struct.bssl::DTLS_OUTGOING_MESSAGE" = type <{ i8*, i32, i16, i8, i8 }>
%"struct.bssl::OPENSSL_timeval" = type { i64, i32 }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %struct.ssl_ctx_st* }
%struct.ssl_ctx_st = type <{ %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_X509_METHOD"*, %union.crypto_mutex_st, i16, i16, [4 x i8], %struct.ssl_quic_method_st*, %"class.std::__1::unique_ptr.5", %struct.x509_store_st*, %struct.lhash_st_SSL_SESSION*, i64, %struct.ssl_session_st*, %struct.ssl_session_st*, i32, i32, i32, i32, i32 (%struct.ssl_st*, %struct.ssl_session_st*)*, void (%struct.ssl_ctx_st*, %struct.ssl_session_st*)*, %struct.ssl_session_st* (%struct.ssl_st*, i8*, i32, i32*)*, i32, [4 x i8], i32 (%struct.x509_store_ctx_st*, i8*)*, i8*, i32 (%struct.ssl_st*, i8*)*, i32 (i8*, i32, i32, i8*)*, i8*, i32 (%struct.ssl_st*, %struct.x509_st**, %struct.evp_pkey_st**)*, void (%struct.ssl_st*, %struct.evp_pkey_st**)*, %struct.crypto_ex_data_st, void (%struct.ssl_st*, i32, i32)*, %"class.std::__1::unique_ptr.23", %struct.stack_st_X509_NAME*, i32, i32, i32, [4 x i8], %"class.std::__1::unique_ptr.15", void (i32, i32, i32, i8*, i64, %struct.ssl_st*, i8*)*, i8*, i32, [4 x i8], i32 (i32, %struct.x509_store_ctx_st*)*, %struct.X509_VERIFY_PARAM_st*, i32 (%struct.ssl_early_callback_ctx*)*, i32 (%struct.ssl_early_callback_ctx*)*, i8, i8, i16, [4 x i8], i32 (%struct.ssl_st*, i32*, i8*)*, i8*, %"class.std::__1::unique_ptr.114", %"class.std::__1::unique_ptr.114", i32 (%struct.ssl_st*, i8*, i8*, %struct.evp_cipher_ctx_st*, %struct.hmac_ctx_st*, i32)*, %"class.std::__1::unique_ptr.29", i32 (%struct.ssl_st*, i8*, i8*, i32, i8*, i32)*, i32 (%struct.ssl_st*, i8*, i8*, i32)*, i32 (%struct.ssl_st*, i8**, i32*, i8*)*, i8*, i32 (%struct.ssl_st*, i8**, i8*, i8*, i32, i8*)*, i8*, i32 (%struct.ssl_st*, i8**, i8*, i8*, i32, i8*)*, i8*, %"class.bssl::Array", %"class.std::__1::unique_ptr.89", %"class.bssl::GrowableArray.119", %"class.bssl::Array.56", %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.63", void (%struct.ssl_st*, i8*)*, void (%struct.ssl_st*, %struct.timeval*)*, %struct.crypto_buffer_pool_st*, %struct.ssl_ticket_aead_method_st*, i32 (%struct.ssl_st*, i8*)*, i8*, %"class.bssl::Array.56", i16, [6 x i8] }>
%"struct.bssl::SSL_X509_METHOD" = type { i1 (%struct.stack_st_CRYPTO_BUFFER*)*, void (%"struct.bssl::CERT"*)*, void (%"struct.bssl::CERT"*)*, void (%"struct.bssl::CERT"*, %"struct.bssl::CERT"*)*, void (%"struct.bssl::CERT"*)*, void (%"struct.bssl::CERT"*)*, i1 (%struct.ssl_session_st*)*, i1 (%struct.ssl_session_st*, %struct.ssl_session_st*)*, void (%struct.ssl_session_st*)*, i1 (%struct.ssl_session_st*, %"struct.bssl::SSL_HANDSHAKE"*, i8*)*, void (%"struct.bssl::SSL_HANDSHAKE"*)*, i1 (%"struct.bssl::SSL_HANDSHAKE"*)*, void (%"struct.bssl::SSL_CONFIG"*)*, void (%"struct.bssl::SSL_CONFIG"*)*, i1 (%"struct.bssl::SSL_HANDSHAKE"*)*, i1 (%struct.ssl_ctx_st*)*, void (%struct.ssl_ctx_st*)*, void (%struct.ssl_ctx_st*)* }
%struct.stack_st_CRYPTO_BUFFER = type opaque
%"struct.bssl::CERT" = type { %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.23", %struct.stack_st_X509*, %struct.x509_st*, %struct.x509_st*, %struct.ssl_private_key_method_st*, %"struct.bssl::SSL_X509_METHOD"*, %"class.bssl::Array.56", i32 (%struct.ssl_st*, i8*)*, i8*, %struct.x509_store_st*, %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.34", i8, [32 x i8], %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.18", %struct.ssl_private_key_method_st* }
%struct.stack_st_X509 = type opaque
%struct.x509_st = type { %struct.x509_cinf_st*, %struct.X509_algor_st*, %struct.asn1_string_st*, i32, %struct.crypto_ex_data_st, i64, i64, i64, i64, i64, i64, %struct.asn1_string_st*, %struct.AUTHORITY_KEYID_st*, %struct.X509_POLICY_CACHE_st*, %struct.stack_st_DIST_POINT*, %struct.stack_st_GENERAL_NAME*, %struct.NAME_CONSTRAINTS_st*, [20 x i8], %struct.x509_cert_aux_st*, %struct.crypto_buffer_st*, %union.crypto_mutex_st }
%struct.x509_cinf_st = type { %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.X509_algor_st*, %struct.X509_name_st*, %struct.X509_val_st*, %struct.X509_name_st*, %struct.X509_pubkey_st*, %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.stack_st_X509_EXTENSION*, %struct.ASN1_ENCODING_st }
%struct.X509_val_st = type opaque
%struct.X509_name_st = type { %struct.stack_st_X509_NAME_ENTRY*, i32, %struct.buf_mem_st*, i8*, i32 }
%struct.stack_st_X509_NAME_ENTRY = type opaque
%struct.X509_pubkey_st = type opaque
%struct.stack_st_X509_EXTENSION = type opaque
%struct.ASN1_ENCODING_st = type { i8*, i64, i32, i8 }
%struct.X509_algor_st = type { %struct.asn1_object_st*, %struct.asn1_type_st* }
%struct.asn1_object_st = type { i8*, i8*, i32, i32, i8*, i32 }
%struct.asn1_type_st = type { i32, %union.anon.28 }
%union.anon.28 = type { i8* }
%struct.asn1_string_st = type { i32, i32, i8*, i64 }
%struct.AUTHORITY_KEYID_st = type opaque
%struct.X509_POLICY_CACHE_st = type opaque
%struct.stack_st_DIST_POINT = type opaque
%struct.stack_st_GENERAL_NAME = type opaque
%struct.NAME_CONSTRAINTS_st = type opaque
%struct.x509_cert_aux_st = type opaque
%struct.crypto_buffer_st = type opaque
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %struct.crypto_buffer_st* }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"struct.bssl::DC"* }
%"struct.bssl::DC" = type { %"class.std::__1::unique_ptr.34", i16, %"class.std::__1::unique_ptr.18" }
%struct.ssl_private_key_method_st = type { i32 (%struct.ssl_st*, i8*, i64*, i64, i16, i8*, i64)*, i32 (%struct.ssl_st*, i8*, i64*, i64, i8*, i64)*, i32 (%struct.ssl_st*, i8*, i64*, i64)* }
%union.crypto_mutex_st = type { double, [48 x i8] }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.bssl::SSLCipherPreferenceList"* }
%"struct.bssl::SSLCipherPreferenceList" = type { %"class.std::__1::unique_ptr.8", i8* }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %struct.stack_st_SSL_CIPHER* }
%struct.stack_st_SSL_CIPHER = type opaque
%struct.x509_store_st = type { i32, %struct.stack_st_X509_OBJECT*, %union.crypto_mutex_st, %struct.stack_st_X509*, %struct.stack_st_X509_LOOKUP*, %struct.X509_VERIFY_PARAM_st*, i32 (%struct.x509_store_ctx_st*)*, i32 (i32, %struct.x509_store_ctx_st*)*, i32 (%struct.x509_st**, %struct.x509_store_ctx_st*, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.x509_st*, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st**, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*, %struct.x509_st*)*, %struct.stack_st_X509* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)*, %struct.stack_st_X509_CRL* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)*, i32 (%struct.x509_store_ctx_st*)*, i32 }
%struct.stack_st_X509_OBJECT = type opaque
%struct.stack_st_X509_LOOKUP = type opaque
%struct.x509_store_ctx_st = type { %struct.x509_store_st*, %struct.x509_st*, %struct.stack_st_X509*, %struct.stack_st_X509_CRL*, %struct.X509_VERIFY_PARAM_st*, i8*, {}*, i32 (i32, %struct.x509_store_ctx_st*)*, i32 (%struct.x509_st**, %struct.x509_store_ctx_st*, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.x509_st*, %struct.x509_st*)*, {}*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st**, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*, %struct.x509_st*)*, {}*, %struct.stack_st_X509* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)*, %struct.stack_st_X509_CRL* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)*, {}*, i32, i32, %struct.stack_st_X509*, %struct.X509_POLICY_TREE_st*, i32, i32, i32, %struct.x509_st*, %struct.x509_st*, %struct.X509_crl_st*, i32, i32, %struct.x509_store_ctx_st*, %struct.crypto_ex_data_st }
%struct.stack_st_X509_CRL = type opaque
%struct.X509_POLICY_TREE_st = type opaque
%struct.X509_crl_st = type { %struct.X509_crl_info_st*, %struct.X509_algor_st*, %struct.asn1_string_st*, i32, i32, %struct.AUTHORITY_KEYID_st*, %struct.ISSUING_DIST_POINT_st*, i32, i32, %struct.asn1_string_st*, %struct.asn1_string_st*, [20 x i8], %struct.stack_st_GENERAL_NAMES*, %struct.x509_crl_method_st*, i8* }
%struct.X509_crl_info_st = type { %struct.asn1_string_st*, %struct.X509_algor_st*, %struct.X509_name_st*, %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.stack_st_X509_REVOKED*, %struct.stack_st_X509_EXTENSION*, %struct.ASN1_ENCODING_st }
%struct.stack_st_X509_REVOKED = type opaque
%struct.ISSUING_DIST_POINT_st = type opaque
%struct.stack_st_GENERAL_NAMES = type opaque
%struct.x509_crl_method_st = type opaque
%struct.lhash_st_SSL_SESSION = type opaque
%struct.ssl_session_st = type { i32, i16, i16, i16, i32, [48 x i8], i32, [32 x i8], i8, [32 x i8], %"class.std::__1::unique_ptr.29", %"class.std::__1::unique_ptr.23", %"struct.bssl::SSL_X509_METHOD"*, %struct.x509_st*, %struct.stack_st_X509*, %struct.stack_st_X509*, i64, i32, i32, i64, %struct.ssl_cipher_st*, %struct.crypto_ex_data_st, %struct.ssl_session_st*, %struct.ssl_session_st*, %"class.bssl::Array", %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.34", [32 x i8], [64 x i8], i8, i32, i32, i32, %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array", i8, %"class.bssl::Array" }
%struct.evp_pkey_st = type { i32, i32, %union.anon, %struct.evp_pkey_asn1_method_st* }
%union.anon = type { i8* }
%struct.evp_pkey_asn1_method_st = type opaque
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.bssl::CERT"* }
%struct.X509_VERIFY_PARAM_st = type { i8*, i64, i64, i64, i32, i32, i32, %struct.stack_st_ASN1_OBJECT*, %struct.X509_VERIFY_PARAM_ID_st* }
%struct.stack_st_ASN1_OBJECT = type opaque
%struct.X509_VERIFY_PARAM_ID_st = type opaque
%struct.ssl_early_callback_ctx = type { %struct.ssl_st*, i8*, i64, i16, i8*, i64, i8*, i64, i8*, i64, i8*, i64, i8*, i64 }
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"struct.bssl::TicketKey"* }
%"struct.bssl::TicketKey" = type { [16 x i8], [16 x i8], [16 x i8], i64 }
%struct.evp_cipher_ctx_st = type { %struct.evp_cipher_st*, i8*, i8*, i32, i32, i32, [16 x i8], [16 x i8], [32 x i8], i32, i32, i32, [32 x i8] }
%struct.evp_cipher_st = type { i32, i32, i32, i32, i32, i32, i8*, i32 (%struct.evp_cipher_ctx_st*, i8*, i8*, i32)*, i32 (%struct.evp_cipher_ctx_st*, i8*, i8*, i64)*, void (%struct.evp_cipher_ctx_st*)*, i32 (%struct.evp_cipher_ctx_st*, i32, i32, i8*)* }
%struct.hmac_ctx_st = type { %struct.env_md_st*, %struct.env_md_ctx_st, %struct.env_md_ctx_st, %struct.env_md_ctx_st }
%struct.env_md_st = type opaque
%struct.env_md_ctx_st = type { %struct.env_md_st*, i8*, %struct.evp_pkey_ctx_st*, %struct.evp_md_pctx_ops* }
%struct.evp_pkey_ctx_st = type opaque
%struct.evp_md_pctx_ops = type opaque
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %struct.stack_st_SRTP_PROTECTION_PROFILE* }
%struct.stack_st_SRTP_PROTECTION_PROFILE = type opaque
%"class.bssl::GrowableArray.119" = type { i64, %"class.bssl::Array.120" }
%"class.bssl::Array.120" = type { %"struct.bssl::CertCompressionAlg"*, i64 }
%"struct.bssl::CertCompressionAlg" = type <{ i32 (%struct.ssl_st*, %struct.cbb_st*, i8*, i64)*, i32 (%struct.ssl_st*, %struct.crypto_buffer_st**, i64, i8*, i64)*, i16, [6 x i8] }>
%struct.timeval = type { i64, i64 }
%struct.crypto_buffer_pool_st = type opaque
%struct.ssl_ticket_aead_method_st = type { i64 (%struct.ssl_st*)*, i32 (%struct.ssl_st*, i8*, i64*, i64, i8*, i64)*, i32 (%struct.ssl_st*, i8*, i64*, i64, i8*, i64)* }
%struct.crypto_ex_data_st = type { %struct.stack_st_void* }
%struct.stack_st_void = type opaque
%struct.ssl_quic_method_st = type { i32 (%struct.ssl_st*, i32, %struct.ssl_cipher_st*, i8*, i64)*, i32 (%struct.ssl_st*, i32, %struct.ssl_cipher_st*, i8*, i64)*, i32 (%struct.ssl_st*, i32, i8*, i64)*, i32 (%struct.ssl_st*)*, i32 (%struct.ssl_st*, i32, i8)* }
%"struct.bssl::SSL_CONFIG" = type <{ %struct.ssl_st*, i16, i16, [4 x i8], %struct.X509_VERIFY_PARAM_st*, %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.15", i32 (i32, %struct.x509_store_ctx_st*)*, i32 (%struct.ssl_st*, i8*)*, %"class.std::__1::unique_ptr.29", i32 (%struct.ssl_st*, i8*, i8*, i32, i8*, i32)*, i32 (%struct.ssl_st*, i8*, i8*, i32)*, %"class.std::__1::unique_ptr.23", %struct.stack_st_X509_NAME*, %"class.bssl::Array.56", %"class.std::__1::unique_ptr.18", %"class.bssl::Array", %"class.bssl::GrowableArray.87", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array.56", %"class.std::__1::unique_ptr.89", i8, i16, [5 x i8] }>
%"class.bssl::GrowableArray.87" = type { i64, %"class.bssl::Array.88" }
%"class.bssl::Array.88" = type { %"struct.bssl::ALPSConfig"*, i64 }
%"struct.bssl::ALPSConfig" = type { %"class.bssl::Array", %"class.bssl::Array" }
%union.anon.39 = type { i32 }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %struct.err_save_state_st* }
%struct.err_save_state_st = type opaque
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.bssl::SSLKeyShare"* }
%"class.bssl::SSLKeyShare" = type { i32 (...)** }
%"class.bssl::SSLTranscript" = type { %"class.std::__1::unique_ptr.50", %"class.bssl::internal::StackAllocated.55" }
%"class.bssl::internal::StackAllocated.55" = type { %struct.env_md_ctx_st }
%"class.bssl::Array.56" = type { i16*, i64 }
%"class.bssl::internal::StackAllocated.57" = type { %struct.evp_hpke_ctx_st }
%struct.evp_hpke_ctx_st = type { %struct.evp_hpke_aead_st*, %struct.evp_hpke_kdf_st*, %struct.evp_aead_ctx_st, [24 x i8], [64 x i8], i64, i32 }
%struct.evp_hpke_aead_st = type opaque
%struct.evp_hpke_kdf_st = type opaque
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { i8* }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %struct.stack_st_CRYPTO_BUFFER* }
%struct.stack_st_X509_NAME = type opaque
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %struct.evp_pkey_st* }
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %struct.ssl_session_st* }
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %struct.ssl_ech_server_config_list_st* }
%struct.ssl_ech_server_config_list_st = type <{ %"class.bssl::GrowableArray", i32, [4 x i8] }>
%"class.bssl::GrowableArray" = type { i64, %"class.bssl::Array.66" }
%"class.bssl::Array.66" = type { %"class.std::__1::unique_ptr.67"*, i64 }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.bssl::ECHServerConfig"* }
%"class.bssl::ECHServerConfig" = type <{ %"class.bssl::Array", %"class.bssl::Span.1", %"class.bssl::internal::StackAllocated.70", i8, i8, [6 x i8] }>
%"class.bssl::Span.1" = type { i8*, i64 }
%"class.bssl::internal::StackAllocated.70" = type { %struct.evp_hpke_key_st }
%struct.evp_hpke_key_st = type { %struct.evp_hpke_kem_st*, [32 x i8], [32 x i8] }
%struct.evp_hpke_kem_st = type opaque
%struct.ssl_cipher_st = type { i8*, i8*, i32, i32, i32, i32, i32, i32 }
%"class.bssl::Array" = type { i8*, i64 }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"struct.bssl::SSL_HANDSHAKE_HINTS"* }
%"struct.bssl::SSL_HANDSHAKE_HINTS" = type <{ %"class.bssl::Array", i16, [6 x i8], %"class.bssl::Array", %"class.bssl::Array", i16, [6 x i8], %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array", i8, [7 x i8] }>
%"class.bssl::internal::StackAllocated.152" = type { %struct.evp_cipher_ctx_st }
%"class.bssl::internal::StackAllocated.153" = type { %struct.hmac_ctx_st }
%struct.engine_st = type opaque
%struct.ec_group_st = type opaque
%struct.ecdsa_sig_st = type { %struct.bignum_st*, %struct.bignum_st* }
%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
%struct.ec_key_st = type opaque
%struct.ec_point_st = type opaque
%struct.bignum_ctx = type opaque
%struct.sha256_state_st = type { [8 x i32], i32, i32, [64 x i8], i32, i32 }
%struct.stack_st = type { i64, i8**, i32, i64, i32 (i8**, i8**)* }

@_ZN4bsslL14kDefaultGroupsE = internal constant [3 x i16] [i16 29, i16 23, i16 24], align 2
@.str = private unnamed_addr constant [46 x i8] c"../../third_party/boringssl/src/ssl/t1_lib.cc\00", align 1
@_ZN4bsslL11kExtensionsE = internal constant [25 x %"struct.bssl::tls_extension"] [%"struct.bssl::tls_extension" { i16 0, void (%"struct.bssl::SSL_HANDSHAKE"*)* null, i1 (%"struct.bssl::SSL_HANDSHAKE"*, %struct.cbb_st*)* @_ZN4bsslL23ext_sni_add_clienthelloEPNS_13SSL_HANDSHAKEEP6cbb_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, i8*, %struct.cbs_st*)* @_ZN4bsslL25ext_sni_parse_serverhelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, i8*, %struct.cbs_st*)* @_ZN4bsslL25ext_sni_parse_clienthelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, %struct.cbb_st*)* @_ZN4bsslL23ext_sni_add_serverhelloEPNS_13SSL_HANDSHAKEEP6cbb_st }, %"struct.bssl::tls_extension" { i16 -502, void (%"struct.bssl::SSL_HANDSHAKE"*)* null, i1 (%"struct.bssl::SSL_HANDSHAKE"*, %struct.cbb_st*)* @_ZN4bsslL23ext_ech_add_clienthelloEPNS_13SSL_HANDSHAKEEP6cbb_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, i8*, %struct.cbs_st*)* @_ZN4bsslL25ext_ech_parse_serverhelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, i8*, %struct.cbs_st*)* @_ZN4bsslL25ext_ech_parse_clienthelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, %struct.cbb_st*)* @_ZN4bsslL23ext_ech_add_serverhelloEPNS_13SSL_HANDSHAKEEP6cbb_st }, %"struct.bssl::tls_extension" { i16 -9719, void (%"struct.bssl::SSL_HANDSHAKE"*)* null, i1 (%"struct.bssl::SSL_HANDSHAKE"*, %struct.cbb_st*)* @_ZN4bsslL32ext_ech_is_inner_add_clienthelloEPNS_13SSL_HANDSHAKEEP6cbb_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, i8*, %struct.cbs_st*)* @_ZN4bsslL24forbid_parse_serverhelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, i8*, %struct.cbs_st*)* @_ZN4bsslL34ext_ech_is_inner_parse_clienthelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, %struct.cbb_st*)* @_ZN4bsslL20dont_add_serverhelloEPNS_13SSL_HANDSHAKEEP6cbb_st }, %"struct.bssl::tls_extension" { i16 23, void (%"struct.bssl::SSL_HANDSHAKE"*)* null, i1 (%"struct.bssl::SSL_HANDSHAKE"*, %struct.cbb_st*)* @_ZN4bsslL23ext_ems_add_clienthelloEPNS_13SSL_HANDSHAKEEP6cbb_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, i8*, %struct.cbs_st*)* @_ZN4bsslL25ext_ems_parse_serverhelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, i8*, %struct.cbs_st*)* @_ZN4bsslL25ext_ems_parse_clienthelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, %struct.cbb_st*)* @_ZN4bsslL23ext_ems_add_serverhelloEPNS_13SSL_HANDSHAKEEP6cbb_st }, %"struct.bssl::tls_extension" { i16 -255, void (%"struct.bssl::SSL_HANDSHAKE"*)* null, i1 (%"struct.bssl::SSL_HANDSHAKE"*, %struct.cbb_st*)* @_ZN4bsslL22ext_ri_add_clienthelloEPNS_13SSL_HANDSHAKEEP6cbb_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, i8*, %struct.cbs_st*)* @_ZN4bsslL24ext_ri_parse_serverhelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, i8*, %struct.cbs_st*)* @_ZN4bsslL24ext_ri_parse_clienthelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, %struct.cbb_st*)* @_ZN4bsslL22ext_ri_add_serverhelloEPNS_13SSL_HANDSHAKEEP6cbb_st }, %"struct.bssl::tls_extension" { i16 10, void (%"struct.bssl::SSL_HANDSHAKE"*)* null, i1 (%"struct.bssl::SSL_HANDSHAKE"*, %struct.cbb_st*)* @_ZN4bsslL36ext_supported_groups_add_clienthelloEPNS_13SSL_HANDSHAKEEP6cbb_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, i8*, %struct.cbs_st*)* @_ZN4bsslL38ext_supported_groups_parse_serverhelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, i8*, %struct.cbs_st*)* @_ZN4bsslL38ext_supported_groups_parse_clienthelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, %struct.cbb_st*)* @_ZN4bsslL20dont_add_serverhelloEPNS_13SSL_HANDSHAKEEP6cbb_st }, %"struct.bssl::tls_extension" { i16 11, void (%"struct.bssl::SSL_HANDSHAKE"*)* null, i1 (%"struct.bssl::SSL_HANDSHAKE"*, %struct.cbb_st*)* @_ZN4bsslL28ext_ec_point_add_clienthelloEPNS_13SSL_HANDSHAKEEP6cbb_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, i8*, %struct.cbs_st*)* @_ZN4bsslL30ext_ec_point_parse_serverhelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, i8*, %struct.cbs_st*)* @_ZN4bsslL30ext_ec_point_parse_clienthelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, %struct.cbb_st*)* @_ZN4bsslL28ext_ec_point_add_serverhelloEPNS_13SSL_HANDSHAKEEP6cbb_st }, %"struct.bssl::tls_extension" { i16 35, void (%"struct.bssl::SSL_HANDSHAKE"*)* null, i1 (%"struct.bssl::SSL_HANDSHAKE"*, %struct.cbb_st*)* @_ZN4bsslL26ext_ticket_add_clienthelloEPNS_13SSL_HANDSHAKEEP6cbb_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, i8*, %struct.cbs_st*)* @_ZN4bsslL28ext_ticket_parse_serverhelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, i8*, %struct.cbs_st*)* @_ZN4bsslL24ignore_parse_clienthelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, %struct.cbb_st*)* @_ZN4bsslL26ext_ticket_add_serverhelloEPNS_13SSL_HANDSHAKEEP6cbb_st }, %"struct.bssl::tls_extension" { i16 16, void (%"struct.bssl::SSL_HANDSHAKE"*)* null, i1 (%"struct.bssl::SSL_HANDSHAKE"*, %struct.cbb_st*)* @_ZN4bsslL24ext_alpn_add_clienthelloEPNS_13SSL_HANDSHAKEEP6cbb_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, i8*, %struct.cbs_st*)* @_ZN4bsslL26ext_alpn_parse_serverhelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, i8*, %struct.cbs_st*)* @_ZN4bsslL24ignore_parse_clienthelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, %struct.cbb_st*)* @_ZN4bsslL24ext_alpn_add_serverhelloEPNS_13SSL_HANDSHAKEEP6cbb_st }, %"struct.bssl::tls_extension" { i16 5, void (%"struct.bssl::SSL_HANDSHAKE"*)* null, i1 (%"struct.bssl::SSL_HANDSHAKE"*, %struct.cbb_st*)* @_ZN4bsslL24ext_ocsp_add_clienthelloEPNS_13SSL_HANDSHAKEEP6cbb_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, i8*, %struct.cbs_st*)* @_ZN4bsslL26ext_ocsp_parse_serverhelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, i8*, %struct.cbs_st*)* @_ZN4bsslL26ext_ocsp_parse_clienthelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, %struct.cbb_st*)* @_ZN4bsslL24ext_ocsp_add_serverhelloEPNS_13SSL_HANDSHAKEEP6cbb_st }, %"struct.bssl::tls_extension" { i16 13, void (%"struct.bssl::SSL_HANDSHAKE"*)* null, i1 (%"struct.bssl::SSL_HANDSHAKE"*, %struct.cbb_st*)* @_ZN4bsslL27ext_sigalgs_add_clienthelloEPNS_13SSL_HANDSHAKEEP6cbb_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, i8*, %struct.cbs_st*)* @_ZN4bsslL24forbid_parse_serverhelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, i8*, %struct.cbs_st*)* @_ZN4bsslL29ext_sigalgs_parse_clienthelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, %struct.cbb_st*)* @_ZN4bsslL20dont_add_serverhelloEPNS_13SSL_HANDSHAKEEP6cbb_st }, %"struct.bssl::tls_extension" { i16 13172, void (%"struct.bssl::SSL_HANDSHAKE"*)* null, i1 (%"struct.bssl::SSL_HANDSHAKE"*, %struct.cbb_st*)* @_ZN4bsslL23ext_npn_add_clienthelloEPNS_13SSL_HANDSHAKEEP6cbb_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, i8*, %struct.cbs_st*)* @_ZN4bsslL25ext_npn_parse_serverhelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, i8*, %struct.cbs_st*)* @_ZN4bsslL25ext_npn_parse_clienthelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, %struct.cbb_st*)* @_ZN4bsslL23ext_npn_add_serverhelloEPNS_13SSL_HANDSHAKEEP6cbb_st }, %"struct.bssl::tls_extension" { i16 18, void (%"struct.bssl::SSL_HANDSHAKE"*)* null, i1 (%"struct.bssl::SSL_HANDSHAKE"*, %struct.cbb_st*)* @_ZN4bsslL23ext_sct_add_clienthelloEPNS_13SSL_HANDSHAKEEP6cbb_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, i8*, %struct.cbs_st*)* @_ZN4bsslL25ext_sct_parse_serverhelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, i8*, %struct.cbs_st*)* @_ZN4bsslL25ext_sct_parse_clienthelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, %struct.cbb_st*)* @_ZN4bsslL23ext_sct_add_serverhelloEPNS_13SSL_HANDSHAKEEP6cbb_st }, %"struct.bssl::tls_extension" { i16 30032, void (%"struct.bssl::SSL_HANDSHAKE"*)* @_ZN4bsslL19ext_channel_id_initEPNS_13SSL_HANDSHAKEE, i1 (%"struct.bssl::SSL_HANDSHAKE"*, %struct.cbb_st*)* @_ZN4bsslL30ext_channel_id_add_clienthelloEPNS_13SSL_HANDSHAKEEP6cbb_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, i8*, %struct.cbs_st*)* @_ZN4bsslL32ext_channel_id_parse_serverhelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, i8*, %struct.cbs_st*)* @_ZN4bsslL32ext_channel_id_parse_clienthelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, %struct.cbb_st*)* @_ZN4bsslL30ext_channel_id_add_serverhelloEPNS_13SSL_HANDSHAKEEP6cbb_st }, %"struct.bssl::tls_extension" { i16 14, void (%"struct.bssl::SSL_HANDSHAKE"*)* @_ZN4bsslL13ext_srtp_initEPNS_13SSL_HANDSHAKEE, i1 (%"struct.bssl::SSL_HANDSHAKE"*, %struct.cbb_st*)* @_ZN4bsslL24ext_srtp_add_clienthelloEPNS_13SSL_HANDSHAKEEP6cbb_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, i8*, %struct.cbs_st*)* @_ZN4bsslL26ext_srtp_parse_serverhelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, i8*, %struct.cbs_st*)* @_ZN4bsslL26ext_srtp_parse_clienthelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, %struct.cbb_st*)* @_ZN4bsslL24ext_srtp_add_serverhelloEPNS_13SSL_HANDSHAKEEP6cbb_st }, %"struct.bssl::tls_extension" { i16 51, void (%"struct.bssl::SSL_HANDSHAKE"*)* null, i1 (%"struct.bssl::SSL_HANDSHAKE"*, %struct.cbb_st*)* @_ZN4bsslL29ext_key_share_add_clienthelloEPNS_13SSL_HANDSHAKEEP6cbb_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, i8*, %struct.cbs_st*)* @_ZN4bsslL24forbid_parse_serverhelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, i8*, %struct.cbs_st*)* @_ZN4bsslL24ignore_parse_clienthelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, %struct.cbb_st*)* @_ZN4bsslL20dont_add_serverhelloEPNS_13SSL_HANDSHAKEEP6cbb_st }, %"struct.bssl::tls_extension" { i16 45, void (%"struct.bssl::SSL_HANDSHAKE"*)* null, i1 (%"struct.bssl::SSL_HANDSHAKE"*, %struct.cbb_st*)* @_ZN4bsslL42ext_psk_key_exchange_modes_add_clienthelloEPNS_13SSL_HANDSHAKEEP6cbb_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, i8*, %struct.cbs_st*)* @_ZN4bsslL24forbid_parse_serverhelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, i8*, %struct.cbs_st*)* @_ZN4bsslL44ext_psk_key_exchange_modes_parse_clienthelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, %struct.cbb_st*)* @_ZN4bsslL20dont_add_serverhelloEPNS_13SSL_HANDSHAKEEP6cbb_st }, %"struct.bssl::tls_extension" { i16 42, void (%"struct.bssl::SSL_HANDSHAKE"*)* null, i1 (%"struct.bssl::SSL_HANDSHAKE"*, %struct.cbb_st*)* @_ZN4bsslL30ext_early_data_add_clienthelloEPNS_13SSL_HANDSHAKEEP6cbb_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, i8*, %struct.cbs_st*)* @_ZN4bsslL32ext_early_data_parse_serverhelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, i8*, %struct.cbs_st*)* @_ZN4bsslL32ext_early_data_parse_clienthelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, %struct.cbb_st*)* @_ZN4bsslL30ext_early_data_add_serverhelloEPNS_13SSL_HANDSHAKEEP6cbb_st }, %"struct.bssl::tls_extension" { i16 43, void (%"struct.bssl::SSL_HANDSHAKE"*)* null, i1 (%"struct.bssl::SSL_HANDSHAKE"*, %struct.cbb_st*)* @_ZN4bsslL38ext_supported_versions_add_clienthelloEPNS_13SSL_HANDSHAKEEP6cbb_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, i8*, %struct.cbs_st*)* @_ZN4bsslL24forbid_parse_serverhelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, i8*, %struct.cbs_st*)* @_ZN4bsslL24ignore_parse_clienthelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, %struct.cbb_st*)* @_ZN4bsslL20dont_add_serverhelloEPNS_13SSL_HANDSHAKEEP6cbb_st }, %"struct.bssl::tls_extension" { i16 44, void (%"struct.bssl::SSL_HANDSHAKE"*)* null, i1 (%"struct.bssl::SSL_HANDSHAKE"*, %struct.cbb_st*)* @_ZN4bsslL26ext_cookie_add_clienthelloEPNS_13SSL_HANDSHAKEEP6cbb_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, i8*, %struct.cbs_st*)* @_ZN4bsslL24forbid_parse_serverhelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, i8*, %struct.cbs_st*)* @_ZN4bsslL24ignore_parse_clienthelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, %struct.cbb_st*)* @_ZN4bsslL20dont_add_serverhelloEPNS_13SSL_HANDSHAKEEP6cbb_st }, %"struct.bssl::tls_extension" { i16 57, void (%"struct.bssl::SSL_HANDSHAKE"*)* null, i1 (%"struct.bssl::SSL_HANDSHAKE"*, %struct.cbb_st*)* @_ZN4bsslL41ext_quic_transport_params_add_clienthelloEPNS_13SSL_HANDSHAKEEP6cbb_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, i8*, %struct.cbs_st*)* @_ZN4bsslL43ext_quic_transport_params_parse_serverhelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, i8*, %struct.cbs_st*)* @_ZN4bsslL43ext_quic_transport_params_parse_clienthelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, %struct.cbb_st*)* @_ZN4bsslL41ext_quic_transport_params_add_serverhelloEPNS_13SSL_HANDSHAKEEP6cbb_st }, %"struct.bssl::tls_extension" { i16 -91, void (%"struct.bssl::SSL_HANDSHAKE"*)* null, i1 (%"struct.bssl::SSL_HANDSHAKE"*, %struct.cbb_st*)* @_ZN4bsslL48ext_quic_transport_params_add_clienthello_legacyEPNS_13SSL_HANDSHAKEEP6cbb_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, i8*, %struct.cbs_st*)* @_ZN4bsslL50ext_quic_transport_params_parse_serverhello_legacyEPNS_13SSL_HANDSHAKEEPhP6cbs_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, i8*, %struct.cbs_st*)* @_ZN4bsslL50ext_quic_transport_params_parse_clienthello_legacyEPNS_13SSL_HANDSHAKEEPhP6cbs_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, %struct.cbb_st*)* @_ZN4bsslL48ext_quic_transport_params_add_serverhello_legacyEPNS_13SSL_HANDSHAKEEP6cbb_st }, %"struct.bssl::tls_extension" { i16 27, void (%"struct.bssl::SSL_HANDSHAKE"*)* null, i1 (%"struct.bssl::SSL_HANDSHAKE"*, %struct.cbb_st*)* @_ZN4bsslL32cert_compression_add_clienthelloEPNS_13SSL_HANDSHAKEEP6cbb_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, i8*, %struct.cbs_st*)* @_ZN4bsslL34cert_compression_parse_serverhelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, i8*, %struct.cbs_st*)* @_ZN4bsslL34cert_compression_parse_clienthelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, %struct.cbb_st*)* @_ZN4bsslL32cert_compression_add_serverhelloEPNS_13SSL_HANDSHAKEEP6cbb_st }, %"struct.bssl::tls_extension" { i16 34, void (%"struct.bssl::SSL_HANDSHAKE"*)* null, i1 (%"struct.bssl::SSL_HANDSHAKE"*, %struct.cbb_st*)* @_ZN4bsslL40ext_delegated_credential_add_clienthelloEPNS_13SSL_HANDSHAKEEP6cbb_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, i8*, %struct.cbs_st*)* @_ZN4bsslL24forbid_parse_serverhelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, i8*, %struct.cbs_st*)* @_ZN4bsslL42ext_delegated_credential_parse_clienthelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, %struct.cbb_st*)* @_ZN4bsslL20dont_add_serverhelloEPNS_13SSL_HANDSHAKEEP6cbb_st }, %"struct.bssl::tls_extension" { i16 17513, void (%"struct.bssl::SSL_HANDSHAKE"*)* null, i1 (%"struct.bssl::SSL_HANDSHAKE"*, %struct.cbb_st*)* @_ZN4bsslL24ext_alps_add_clienthelloEPNS_13SSL_HANDSHAKEEP6cbb_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, i8*, %struct.cbs_st*)* @_ZN4bsslL26ext_alps_parse_serverhelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, i8*, %struct.cbs_st*)* @_ZN4bsslL24ignore_parse_clienthelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st, i1 (%"struct.bssl::SSL_HANDSHAKE"*, %struct.cbb_st*)* @_ZN4bsslL24ext_alps_add_serverhelloEPNS_13SSL_HANDSHAKEEP6cbb_st }], align 16
@.str.1 = private unnamed_addr constant [13 x i8] c"extension %u\00", align 1
@_ZN4bsslL24kSignSignatureAlgorithmsE = internal constant [12 x i16] [i16 2055, i16 1027, i16 2052, i16 1025, i16 1283, i16 2053, i16 1281, i16 1539, i16 2054, i16 1537, i16 515, i16 513], align 16
@_ZZN4bssl31tls1_get_peer_verify_algorithmsEPKNS_13SSL_HANDSHAKEEE22kDefaultPeerAlgorithms = internal constant [2 x i16] [i16 513, i16 515], align 2
@_ZZN4bssl20tls1_channel_id_hashEPNS_13SSL_HANDSHAKEEPhPmE14kClientIDMagic = internal constant [25 x i8] c"TLS Channel ID signature\00", align 16
@_ZZN4bssl20tls1_channel_id_hashEPNS_13SSL_HANDSHAKEEPhPmE16kResumptionMagic = internal constant [11 x i8] c"Resumption\00", align 1
@_ZN4bsslL26kVerifySignatureAlgorithmsE = internal constant [9 x i16] [i16 1027, i16 2052, i16 1025, i16 1283, i16 2053, i16 1281, i16 2054, i16 1537, i16 513], align 16
@_ZZN4bsslL27ssl_scan_clienthello_tlsextEPNS_13SSL_HANDSHAKEEPK22ssl_early_callback_ctxPiE25kFakeRenegotiateExtension = internal constant [1 x i8] zeroinitializer, align 1
@.str.3 = private unnamed_addr constant [14 x i8] c"extension :%u\00", align 1
@.str.4 = private unnamed_addr constant [47 x i8] c"../../third_party/boringssl/src/ssl/internal.h\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl21ssl_client_hello_initEPK6ssl_stP22ssl_early_callback_ctxNS_4SpanIKhEE(%struct.ssl_st*, %struct.ssl_early_callback_ctx*, i8*, i64) local_unnamed_addr #0 {
  %5 = alloca %struct.cbs_st, align 8
  %6 = alloca %struct.cbs_st, align 8
  %7 = alloca %struct.cbs_st, align 8
  %8 = alloca %struct.cbs_st, align 8
  %9 = alloca %struct.cbs_st, align 8
  %10 = alloca %struct.cbs_st, align 8
  %11 = alloca %struct.cbs_st, align 8
  %12 = getelementptr inbounds %struct.ssl_early_callback_ctx, %struct.ssl_early_callback_ctx* %1, i64 0, i32 3
  %13 = bitcast i16* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %13, i8 0, i64 88, i1 false) #11
  %14 = getelementptr inbounds %struct.ssl_early_callback_ctx, %struct.ssl_early_callback_ctx* %1, i64 0, i32 0
  store %struct.ssl_st* %0, %struct.ssl_st** %14, align 8
  %15 = getelementptr inbounds %struct.ssl_early_callback_ctx, %struct.ssl_early_callback_ctx* %1, i64 0, i32 1
  store i8* %2, i8** %15, align 8
  %16 = getelementptr inbounds %struct.ssl_early_callback_ctx, %struct.ssl_early_callback_ctx* %1, i64 0, i32 2
  store i64 %3, i64* %16, align 8
  %17 = bitcast %struct.cbs_st* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #11
  %18 = bitcast %struct.cbs_st* %6 to i8*
  %19 = bitcast %struct.cbs_st* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #11
  %20 = bitcast %struct.cbs_st* %7 to i8*
  %21 = bitcast %struct.cbs_st* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #11
  %22 = bitcast %struct.cbs_st* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 16, i1 false)
  call void @CBS_init(%struct.cbs_st* nonnull %5, i8* %2, i64 %3) #11
  %23 = getelementptr inbounds %struct.ssl_early_callback_ctx, %struct.ssl_early_callback_ctx* %1, i64 0, i32 3
  %24 = call i32 @CBS_get_u16(%struct.cbs_st* nonnull %5, i16* %23) #11
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %110, label %26

26:                                               ; preds = %4
  %27 = call i32 @CBS_get_bytes(%struct.cbs_st* nonnull %5, %struct.cbs_st* nonnull %6, i64 32) #11
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %110, label %29

29:                                               ; preds = %26
  %30 = call i32 @CBS_get_u8_length_prefixed(%struct.cbs_st* nonnull %5, %struct.cbs_st* nonnull %7) #11
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %110, label %32

32:                                               ; preds = %29
  %33 = call i64 @CBS_len(%struct.cbs_st* nonnull %7) #11
  %34 = icmp ugt i64 %33, 32
  br i1 %34, label %110, label %35

35:                                               ; preds = %32
  %36 = call i8* @CBS_data(%struct.cbs_st* nonnull %6) #11
  %37 = getelementptr inbounds %struct.ssl_early_callback_ctx, %struct.ssl_early_callback_ctx* %1, i64 0, i32 4
  store i8* %36, i8** %37, align 8
  %38 = call i64 @CBS_len(%struct.cbs_st* nonnull %6) #11
  %39 = getelementptr inbounds %struct.ssl_early_callback_ctx, %struct.ssl_early_callback_ctx* %1, i64 0, i32 5
  store i64 %38, i64* %39, align 8
  %40 = call i8* @CBS_data(%struct.cbs_st* nonnull %7) #11
  %41 = getelementptr inbounds %struct.ssl_early_callback_ctx, %struct.ssl_early_callback_ctx* %1, i64 0, i32 6
  store i8* %40, i8** %41, align 8
  %42 = call i64 @CBS_len(%struct.cbs_st* nonnull %7) #11
  %43 = getelementptr inbounds %struct.ssl_early_callback_ctx, %struct.ssl_early_callback_ctx* %1, i64 0, i32 7
  store i64 %42, i64* %43, align 8
  %44 = load %struct.ssl_st*, %struct.ssl_st** %14, align 8
  %45 = call i32 @SSL_is_dtls(%struct.ssl_st* %44) #11
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %57, label %47

47:                                               ; preds = %35
  %48 = bitcast %struct.cbs_st* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %48) #11
  %49 = bitcast %struct.cbs_st* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 16, i1 false)
  %50 = call i32 @CBS_get_u8_length_prefixed(%struct.cbs_st* nonnull %5, %struct.cbs_st* nonnull %8) #11
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = call i64 @CBS_len(%struct.cbs_st* nonnull %8) #11
  %54 = icmp ugt i64 %53, 256
  br i1 %54, label %55, label %56

55:                                               ; preds = %52, %47
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %48) #11
  br label %110

56:                                               ; preds = %52
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %48) #11
  br label %57

57:                                               ; preds = %56, %35
  %58 = bitcast %struct.cbs_st* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %58) #11
  %59 = bitcast %struct.cbs_st* %10 to i8*
  %60 = bitcast %struct.cbs_st* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %59) #11
  %61 = bitcast %struct.cbs_st* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %61, i8 -86, i64 16, i1 false)
  %62 = call i32 @CBS_get_u16_length_prefixed(%struct.cbs_st* nonnull %5, %struct.cbs_st* nonnull %9) #11
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %108, label %64

64:                                               ; preds = %57
  %65 = call i64 @CBS_len(%struct.cbs_st* nonnull %9) #11
  %66 = icmp ult i64 %65, 2
  br i1 %66, label %108, label %67

67:                                               ; preds = %64
  %68 = call i64 @CBS_len(%struct.cbs_st* nonnull %9) #11
  %69 = and i64 %68, 1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %108

71:                                               ; preds = %67
  %72 = call i32 @CBS_get_u8_length_prefixed(%struct.cbs_st* nonnull %5, %struct.cbs_st* nonnull %10) #11
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %108, label %74

74:                                               ; preds = %71
  %75 = call i64 @CBS_len(%struct.cbs_st* nonnull %10) #11
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %108, label %77

77:                                               ; preds = %74
  %78 = call i8* @CBS_data(%struct.cbs_st* nonnull %9) #11
  %79 = getelementptr inbounds %struct.ssl_early_callback_ctx, %struct.ssl_early_callback_ctx* %1, i64 0, i32 8
  store i8* %78, i8** %79, align 8
  %80 = call i64 @CBS_len(%struct.cbs_st* nonnull %9) #11
  %81 = getelementptr inbounds %struct.ssl_early_callback_ctx, %struct.ssl_early_callback_ctx* %1, i64 0, i32 9
  store i64 %80, i64* %81, align 8
  %82 = call i8* @CBS_data(%struct.cbs_st* nonnull %10) #11
  %83 = getelementptr inbounds %struct.ssl_early_callback_ctx, %struct.ssl_early_callback_ctx* %1, i64 0, i32 10
  store i8* %82, i8** %83, align 8
  %84 = call i64 @CBS_len(%struct.cbs_st* nonnull %10) #11
  %85 = getelementptr inbounds %struct.ssl_early_callback_ctx, %struct.ssl_early_callback_ctx* %1, i64 0, i32 11
  store i64 %84, i64* %85, align 8
  %86 = call i64 @CBS_len(%struct.cbs_st* nonnull %5) #11
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %88, label %91

88:                                               ; preds = %77
  %89 = getelementptr inbounds %struct.ssl_early_callback_ctx, %struct.ssl_early_callback_ctx* %1, i64 0, i32 12
  %90 = bitcast i8** %89 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %90, i8 0, i64 16, i1 false)
  br label %108

91:                                               ; preds = %77
  %92 = bitcast %struct.cbs_st* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %92) #11
  %93 = bitcast %struct.cbs_st* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %93, i8 -86, i64 16, i1 false)
  %94 = call i32 @CBS_get_u16_length_prefixed(%struct.cbs_st* nonnull %5, %struct.cbs_st* nonnull %11) #11
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %106, label %96

96:                                               ; preds = %91
  %97 = call fastcc zeroext i1 @_ZN4bsslL31tls1_check_duplicate_extensionsEPK6cbs_st(%struct.cbs_st* nonnull %11)
  br i1 %97, label %98, label %106

98:                                               ; preds = %96
  %99 = call i64 @CBS_len(%struct.cbs_st* nonnull %5) #11
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %101, label %106

101:                                              ; preds = %98
  %102 = call i8* @CBS_data(%struct.cbs_st* nonnull %11) #11
  %103 = getelementptr inbounds %struct.ssl_early_callback_ctx, %struct.ssl_early_callback_ctx* %1, i64 0, i32 12
  store i8* %102, i8** %103, align 8
  %104 = call i64 @CBS_len(%struct.cbs_st* nonnull %11) #11
  %105 = getelementptr inbounds %struct.ssl_early_callback_ctx, %struct.ssl_early_callback_ctx* %1, i64 0, i32 13
  store i64 %104, i64* %105, align 8
  br label %106

106:                                              ; preds = %96, %91, %98, %101
  %107 = phi i1 [ true, %101 ], [ false, %98 ], [ false, %91 ], [ false, %96 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %92) #11
  br label %108

108:                                              ; preds = %64, %74, %57, %67, %71, %106, %88
  %109 = phi i1 [ true, %88 ], [ %107, %106 ], [ false, %71 ], [ false, %67 ], [ false, %57 ], [ false, %74 ], [ false, %64 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %59) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %58) #11
  br label %110

110:                                              ; preds = %55, %32, %4, %26, %29, %108
  %111 = phi i1 [ %109, %108 ], [ false, %55 ], [ false, %29 ], [ false, %26 ], [ false, %4 ], [ false, %32 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #11
  ret i1 %111
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @CBS_init(%struct.cbs_st*, i8*, i64) local_unnamed_addr #2

declare i32 @CBS_get_u16(%struct.cbs_st*, i16*) local_unnamed_addr #2

declare i32 @CBS_get_bytes(%struct.cbs_st*, %struct.cbs_st*, i64) local_unnamed_addr #2

declare i32 @CBS_get_u8_length_prefixed(%struct.cbs_st*, %struct.cbs_st*) local_unnamed_addr #2

declare i64 @CBS_len(%struct.cbs_st*) local_unnamed_addr #2

declare i8* @CBS_data(%struct.cbs_st*) local_unnamed_addr #2

declare i32 @SSL_is_dtls(%struct.ssl_st*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @CBS_get_u16_length_prefixed(%struct.cbs_st*, %struct.cbs_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN4bsslL31tls1_check_duplicate_extensionsEPK6cbs_st(%struct.cbs_st* nocapture readonly) unnamed_addr #0 {
  %2 = alloca %struct.cbs_st, align 8
  %3 = alloca i16, align 2
  %4 = alloca %struct.cbs_st, align 8
  %5 = alloca %struct.cbs_st, align 8
  %6 = bitcast %struct.cbs_st* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  %7 = bitcast %struct.cbs_st* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 8 %7, i64 16, i1 false)
  %8 = bitcast i16* %3 to i8*
  %9 = bitcast %struct.cbs_st* %4 to i8*
  %10 = bitcast %struct.cbs_st* %4 to i8*
  br label %11

11:                                               ; preds = %19, %1
  %12 = phi i64 [ 0, %1 ], [ %24, %19 ]
  %13 = call i64 @CBS_len(%struct.cbs_st* nonnull %2) #11
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %25, label %15

15:                                               ; preds = %11
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %8) #11
  store i16 -21846, i16* %3, align 2
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 16, i1 false)
  %16 = call i32 @CBS_get_u16(%struct.cbs_st* nonnull %2, i16* nonnull %3) #11
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %8) #11
  br label %67

19:                                               ; preds = %15
  %20 = call i32 @CBS_get_u16_length_prefixed(%struct.cbs_st* nonnull %2, %struct.cbs_st* nonnull %4) #11
  %21 = icmp eq i32 %20, 0
  %22 = xor i1 %21, true
  %23 = zext i1 %22 to i64
  %24 = add i64 %12, %23
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %8) #11
  br i1 %21, label %67, label %11

25:                                               ; preds = %11
  %26 = icmp eq i64 %12, 0
  br i1 %26, label %67, label %27

27:                                               ; preds = %25
  call void @OPENSSL_free(i8* null) #11
  %28 = icmp slt i64 %12, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %27
  call void @ERR_put_error(i32 16, i32 0, i32 69, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.4, i64 0, i64 0), i32 319) #11
  br label %64

30:                                               ; preds = %27
  %31 = shl i64 %12, 1
  %32 = call i8* @OPENSSL_malloc(i64 %31) #11
  %33 = bitcast i8* %32 to i16*
  %34 = icmp eq i8* %32, null
  br i1 %34, label %35, label %36

35:                                               ; preds = %30
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.4, i64 0, i64 0), i32 324) #11
  br label %64

36:                                               ; preds = %30
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 8 %7, i64 16, i1 false)
  %37 = bitcast %struct.cbs_st* %5 to i8*
  %38 = bitcast %struct.cbs_st* %5 to i8*
  br label %39

39:                                               ; preds = %47, %36
  %40 = phi i64 [ 0, %36 ], [ %48, %47 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #11
  %41 = getelementptr inbounds i16, i16* %33, i64 %40
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 -86, i64 16, i1 false)
  %42 = call i32 @CBS_get_u16(%struct.cbs_st* nonnull %2, i16* %41) #11
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %50, label %44

44:                                               ; preds = %39
  %45 = call i32 @CBS_get_u16_length_prefixed(%struct.cbs_st* nonnull %2, %struct.cbs_st* nonnull %5) #11
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %44
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #11
  %48 = add nuw i64 %40, 1
  %49 = icmp eq i64 %48, %12
  br i1 %49, label %51, label %39

50:                                               ; preds = %44, %39
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #11
  br label %64

51:                                               ; preds = %47
  call void @qsort(i8* nonnull %32, i64 %12, i64 2, i32 (i8*, i8*)* nonnull @_ZN4bsslL16compare_uint16_tEPKvS1_) #11
  %52 = icmp ugt i64 %12, 1
  br i1 %52, label %53, label %64

53:                                               ; preds = %51
  %54 = load i16, i16* %33, align 2
  br label %57

55:                                               ; preds = %57
  %56 = icmp eq i64 %63, %12
  br i1 %56, label %64, label %57

57:                                               ; preds = %55, %53
  %58 = phi i16 [ %61, %55 ], [ %54, %53 ]
  %59 = phi i64 [ %63, %55 ], [ 1, %53 ]
  %60 = getelementptr inbounds i16, i16* %33, i64 %59
  %61 = load i16, i16* %60, align 2
  %62 = icmp eq i16 %58, %61
  %63 = add nuw i64 %59, 1
  br i1 %62, label %64, label %55

64:                                               ; preds = %57, %55, %51, %35, %29, %50
  %65 = phi i8* [ %32, %50 ], [ null, %35 ], [ null, %29 ], [ %32, %51 ], [ %32, %55 ], [ %32, %57 ]
  %66 = phi i1 [ false, %50 ], [ false, %35 ], [ false, %29 ], [ true, %51 ], [ false, %57 ], [ true, %55 ]
  call void @OPENSSL_free(i8* %65) #11
  br label %67

67:                                               ; preds = %19, %18, %25, %64
  %68 = phi i1 [ %66, %64 ], [ true, %25 ], [ false, %18 ], [ false, %19 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  ret i1 %68
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl30ssl_client_hello_get_extensionEPK22ssl_early_callback_ctxP6cbs_stt(%struct.ssl_early_callback_ctx* nocapture readonly, %struct.cbs_st* nocapture, i16 zeroext) local_unnamed_addr #0 {
  %4 = alloca %struct.cbs_st, align 8
  %5 = alloca i16, align 2
  %6 = alloca %struct.cbs_st, align 8
  %7 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #11
  %8 = getelementptr inbounds %struct.ssl_early_callback_ctx, %struct.ssl_early_callback_ctx* %0, i64 0, i32 12
  %9 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  %11 = getelementptr inbounds %struct.ssl_early_callback_ctx, %struct.ssl_early_callback_ctx* %0, i64 0, i32 13
  %12 = load i64, i64* %11, align 8
  call void @CBS_init(%struct.cbs_st* nonnull %4, i8* %10, i64 %12) #11
  %13 = call i64 @CBS_len(%struct.cbs_st* nonnull %4) #11
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %35, label %15

15:                                               ; preds = %3
  %16 = bitcast i16* %5 to i8*
  %17 = bitcast %struct.cbs_st* %6 to i8*
  %18 = bitcast %struct.cbs_st* %6 to i8*
  br label %19

19:                                               ; preds = %15, %32
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %16) #11
  store i16 -21846, i16* %5, align 2
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 16, i1 false)
  %20 = call i32 @CBS_get_u16(%struct.cbs_st* nonnull %4, i16* nonnull %5) #11
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %30, label %22

22:                                               ; preds = %19
  %23 = call i32 @CBS_get_u16_length_prefixed(%struct.cbs_st* nonnull %4, %struct.cbs_st* nonnull %6) #11
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %30, label %25

25:                                               ; preds = %22
  %26 = load i16, i16* %5, align 2
  %27 = icmp eq i16 %26, %2
  br i1 %27, label %28, label %32

28:                                               ; preds = %25
  %29 = bitcast %struct.cbs_st* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* nonnull align 8 %17, i64 16, i1 false)
  br label %30

30:                                               ; preds = %22, %19, %28
  %31 = phi i1 [ true, %28 ], [ false, %19 ], [ false, %22 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %16) #11
  br label %35

32:                                               ; preds = %25
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %16) #11
  %33 = call i64 @CBS_len(%struct.cbs_st* nonnull %4) #11
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %19

35:                                               ; preds = %32, %3, %30
  %36 = phi i1 [ %31, %30 ], [ false, %3 ], [ false, %32 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #11
  ret i1 %36
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { i16*, i64 } @_ZN4bssl18tls1_get_grouplistEPKNS_13SSL_HANDSHAKEE(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 1
  %3 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %2, align 8
  %4 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %3, i64 0, i32 14, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %3, i64 0, i32 14
  %9 = bitcast %"class.bssl::Array.56"* %8 to i64*
  %10 = load i64, i64* %9, align 8
  br label %11

11:                                               ; preds = %1, %7
  %12 = phi i64 [ %5, %7 ], [ 3, %1 ]
  %13 = phi i64 [ %10, %7 ], [ ptrtoint ([3 x i16]* @_ZN4bsslL14kDefaultGroupsE to i64), %1 ]
  %14 = inttoptr i64 %13 to i16*
  %15 = insertvalue { i16*, i64 } undef, i16* %14, 0
  %16 = insertvalue { i16*, i64 } %15, i64 %12, 1
  ret { i16*, i64 } %16
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl21tls1_get_shared_groupEPNS_13SSL_HANDSHAKEEPt(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly, i16* nocapture) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %4 = load %struct.ssl_st*, %struct.ssl_st** %3, align 8
  %5 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 1
  %6 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %5, align 8
  %7 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %6, i64 0, i32 14, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %14, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %6, i64 0, i32 14
  %12 = bitcast %"class.bssl::Array.56"* %11 to i64*
  %13 = load i64, i64* %12, align 8
  br label %14

14:                                               ; preds = %2, %10
  %15 = phi i64 [ %8, %10 ], [ 3, %2 ]
  %16 = phi i64 [ %13, %10 ], [ ptrtoint ([3 x i16]* @_ZN4bsslL14kDefaultGroupsE to i64), %2 ]
  %17 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %4, i64 0, i32 19
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 4194304
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 27
  %22 = bitcast %"class.bssl::Array.56"* %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 27, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = select i1 %20, i64 %25, i64 %15
  %27 = select i1 %20, i64 %23, i64 %16
  %28 = inttoptr i64 %27 to i16*
  %29 = getelementptr inbounds i16, i16* %28, i64 %26
  %30 = icmp eq i64 %26, 0
  br i1 %30, label %57, label %31

31:                                               ; preds = %14
  %32 = select i1 %20, i64 %16, i64 %23
  %33 = select i1 %20, i64 %15, i64 %25
  %34 = inttoptr i64 %32 to i16*
  %35 = getelementptr inbounds i16, i16* %34, i64 %33
  %36 = icmp eq i64 %33, 0
  br label %37

37:                                               ; preds = %31, %53
  %38 = phi i16* [ %28, %31 ], [ %54, %53 ]
  %39 = load i16, i16* %38, align 2
  br i1 %36, label %53, label %40

40:                                               ; preds = %37
  %41 = icmp eq i16 %39, 16696
  br label %42

42:                                               ; preds = %40, %50
  %43 = phi i16* [ %34, %40 ], [ %51, %50 ]
  %44 = load i16, i16* %43, align 2
  %45 = icmp eq i16 %39, %44
  br i1 %45, label %46, label %50

46:                                               ; preds = %42
  %47 = tail call zeroext i16 @_ZN4bssl20ssl_protocol_versionEPK6ssl_st(%struct.ssl_st* %4) #11
  %48 = icmp ult i16 %47, 772
  %49 = and i1 %41, %48
  br i1 %49, label %50, label %56

50:                                               ; preds = %46, %42
  %51 = getelementptr inbounds i16, i16* %43, i64 1
  %52 = icmp eq i16* %51, %35
  br i1 %52, label %53, label %42

53:                                               ; preds = %50, %37
  %54 = getelementptr inbounds i16, i16* %38, i64 1
  %55 = icmp eq i16* %54, %29
  br i1 %55, label %57, label %37

56:                                               ; preds = %46
  store i16 %39, i16* %1, align 2
  br label %57

57:                                               ; preds = %53, %14, %56
  %58 = phi i1 [ true, %56 ], [ false, %14 ], [ false, %53 ]
  ret i1 %58
}

declare zeroext i16 @_ZN4bssl20ssl_protocol_versionEPK6ssl_st(%struct.ssl_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl15tls1_set_curvesEPNS_5ArrayItEENS_4SpanIKiEE(%"class.bssl::Array.56"* nocapture, i32*, i64) local_unnamed_addr #0 {
  tail call void @OPENSSL_free(i8* null) #11
  %4 = icmp eq i64 %2, 0
  br i1 %4, label %25, label %5

5:                                                ; preds = %3
  %6 = icmp slt i64 %2, 0
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @ERR_put_error(i32 16, i32 0, i32 69, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.4, i64 0, i64 0), i32 319) #11
  br label %31

8:                                                ; preds = %5
  %9 = shl i64 %2, 1
  %10 = tail call i8* @OPENSSL_malloc(i64 %9) #11
  %11 = ptrtoint i8* %10 to i64
  %12 = icmp eq i8* %10, null
  br i1 %12, label %13, label %14

13:                                               ; preds = %8
  tail call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.4, i64 0, i64 0), i32 324) #11
  br label %31

14:                                               ; preds = %8
  %15 = bitcast i8* %10 to i16*
  br label %18

16:                                               ; preds = %18
  %17 = icmp eq i64 %24, %2
  br i1 %17, label %25, label %18

18:                                               ; preds = %16, %14
  %19 = phi i64 [ 0, %14 ], [ %24, %16 ]
  %20 = getelementptr inbounds i16, i16* %15, i64 %19
  %21 = getelementptr inbounds i32, i32* %1, i64 %19
  %22 = load i32, i32* %21, align 4
  %23 = tail call zeroext i1 @_ZN4bssl19ssl_nid_to_group_idEPti(i16* %20, i32 %22) #11
  %24 = add nuw i64 %19, 1
  br i1 %23, label %16, label %31

25:                                               ; preds = %16, %3
  %26 = phi i64 [ 0, %3 ], [ %11, %16 ]
  %27 = bitcast %"class.bssl::Array.56"* %0 to i8**
  %28 = load i8*, i8** %27, align 8
  tail call void @OPENSSL_free(i8* %28) #11
  %29 = getelementptr inbounds %"class.bssl::Array.56", %"class.bssl::Array.56"* %0, i64 0, i32 1
  %30 = bitcast %"class.bssl::Array.56"* %0 to i64*
  store i64 %26, i64* %30, align 8
  store i64 %2, i64* %29, align 8
  br label %31

31:                                               ; preds = %18, %13, %7, %25
  %32 = phi i64 [ 0, %25 ], [ %11, %13 ], [ 0, %7 ], [ %11, %18 ]
  %33 = phi i1 [ true, %25 ], [ false, %13 ], [ false, %7 ], [ false, %18 ]
  %34 = inttoptr i64 %32 to i8*
  tail call void @OPENSSL_free(i8* %34) #11
  ret i1 %33
}

declare zeroext i1 @_ZN4bssl19ssl_nid_to_group_idEPti(i16*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl20tls1_set_curves_listEPNS_5ArrayItEEPKc(%"class.bssl::Array.56"* nocapture, i8*) local_unnamed_addr #0 {
  br label %3

3:                                                ; preds = %3, %2
  %4 = phi i64 [ 0, %2 ], [ %7, %3 ]
  %5 = phi i8* [ %1, %2 ], [ %9, %3 ]
  %6 = tail call i8* @strchr(i8* %5, i32 58) #12
  %7 = add i64 %4, 1
  %8 = icmp eq i8* %6, null
  %9 = getelementptr inbounds i8, i8* %6, i64 1
  br i1 %8, label %10, label %3

10:                                               ; preds = %3
  tail call void @OPENSSL_free(i8* null) #11
  %11 = icmp eq i64 %7, 0
  br i1 %11, label %21, label %12

12:                                               ; preds = %10
  %13 = icmp slt i64 %7, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %12
  tail call void @ERR_put_error(i32 16, i32 0, i32 69, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.4, i64 0, i64 0), i32 319) #11
  br label %47

15:                                               ; preds = %12
  %16 = shl i64 %7, 1
  %17 = tail call i8* @OPENSSL_malloc(i64 %16) #11
  %18 = ptrtoint i8* %17 to i64
  %19 = icmp eq i8* %17, null
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  tail call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.4, i64 0, i64 0), i32 324) #11
  br label %47

21:                                               ; preds = %15, %10
  %22 = phi i64 [ 0, %10 ], [ %18, %15 ]
  %23 = inttoptr i64 %22 to i16*
  br label %24

24:                                               ; preds = %21, %40
  %25 = phi i8* [ %41, %40 ], [ %1, %21 ]
  %26 = phi i64 [ %28, %40 ], [ 0, %21 ]
  %27 = tail call i8* @strchr(i8* %25, i32 58) #12
  %28 = add i64 %26, 1
  %29 = getelementptr inbounds i16, i16* %23, i64 %26
  %30 = icmp ne i8* %27, null
  br i1 %30, label %31, label %35

31:                                               ; preds = %24
  %32 = ptrtoint i8* %27 to i64
  %33 = ptrtoint i8* %25 to i64
  %34 = sub i64 %32, %33
  br label %37

35:                                               ; preds = %24
  %36 = tail call i64 @strlen(i8* %25) #12
  br label %37

37:                                               ; preds = %35, %31
  %38 = phi i64 [ %34, %31 ], [ %36, %35 ]
  %39 = tail call zeroext i1 @_ZN4bssl20ssl_name_to_group_idEPtPKcm(i16* %29, i8* %25, i64 %38) #11
  br i1 %39, label %40, label %47

40:                                               ; preds = %37
  %41 = getelementptr inbounds i8, i8* %27, i64 1
  br i1 %30, label %24, label %42

42:                                               ; preds = %40
  %43 = bitcast %"class.bssl::Array.56"* %0 to i8**
  %44 = load i8*, i8** %43, align 8
  tail call void @OPENSSL_free(i8* %44) #11
  %45 = getelementptr inbounds %"class.bssl::Array.56", %"class.bssl::Array.56"* %0, i64 0, i32 1
  %46 = bitcast %"class.bssl::Array.56"* %0 to i64*
  store i64 %22, i64* %46, align 8
  store i64 %7, i64* %45, align 8
  br label %47

47:                                               ; preds = %37, %20, %14, %42
  %48 = phi i64 [ 0, %42 ], [ %18, %20 ], [ 0, %14 ], [ %22, %37 ]
  %49 = phi i1 [ true, %42 ], [ false, %20 ], [ false, %14 ], [ false, %37 ]
  %50 = inttoptr i64 %48 to i8*
  tail call void @OPENSSL_free(i8* %50) #11
  ret i1 %49
}

; Function Attrs: nofree nounwind readonly
declare i8* @strchr(i8*, i32) local_unnamed_addr #4

declare zeroext i1 @_ZN4bssl20ssl_name_to_group_idEPtPKcm(i16*, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl19tls1_check_group_idEPKNS_13SSL_HANDSHAKEEt(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly, i16 zeroext) local_unnamed_addr #0 {
  %3 = icmp eq i16 %1, 16696
  br i1 %3, label %4, label %9

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %6 = load %struct.ssl_st*, %struct.ssl_st** %5, align 8
  %7 = tail call zeroext i16 @_ZN4bssl20ssl_protocol_versionEPK6ssl_st(%struct.ssl_st* %6) #11
  %8 = icmp ult i16 %7, 772
  br i1 %8, label %31, label %9

9:                                                ; preds = %4, %2
  %10 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 1
  %11 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %10, align 8
  %12 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %11, i64 0, i32 14, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %19, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %11, i64 0, i32 14
  %17 = bitcast %"class.bssl::Array.56"* %16 to i64*
  %18 = load i64, i64* %17, align 8
  br label %19

19:                                               ; preds = %15, %9
  %20 = phi i64 [ %13, %15 ], [ 3, %9 ]
  %21 = phi i64 [ %18, %15 ], [ ptrtoint ([3 x i16]* @_ZN4bsslL14kDefaultGroupsE to i64), %9 ]
  %22 = inttoptr i64 %21 to i16*
  %23 = getelementptr inbounds i16, i16* %22, i64 %20
  br label %26

24:                                               ; preds = %26
  %25 = icmp eq i16* %30, %23
  br i1 %25, label %31, label %26

26:                                               ; preds = %19, %24
  %27 = phi i16* [ %30, %24 ], [ %22, %19 ]
  %28 = load i16, i16* %27, align 2
  %29 = icmp eq i16 %28, %1
  %30 = getelementptr inbounds i16, i16* %27, i64 1
  br i1 %29, label %31, label %24

31:                                               ; preds = %24, %26, %4
  %32 = phi i1 [ false, %4 ], [ false, %24 ], [ true, %26 ]
  ret i1 %32
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl24tls12_add_verify_sigalgsEPKNS_13SSL_HANDSHAKEEP6cbb_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly, %struct.cbb_st*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 1
  %4 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %3, align 8
  %5 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %4, i64 0, i32 20, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %4, i64 0, i32 20
  %10 = bitcast %"class.bssl::Array.56"* %9 to i64*
  %11 = load i64, i64* %10, align 8
  br label %12

12:                                               ; preds = %8, %2
  %13 = phi i64 [ %6, %8 ], [ 9, %2 ]
  %14 = phi i64 [ %11, %8 ], [ ptrtoint ([9 x i16]* @_ZN4bsslL26kVerifySignatureAlgorithmsE to i64), %2 ]
  %15 = inttoptr i64 %14 to i16*
  %16 = getelementptr inbounds i16, i16* %15, i64 %13
  br label %19

17:                                               ; preds = %19
  %18 = icmp eq i16* %24, %16
  br i1 %18, label %25, label %19

19:                                               ; preds = %12, %17
  %20 = phi i16* [ %24, %17 ], [ %15, %12 ]
  %21 = load i16, i16* %20, align 2
  %22 = tail call i32 @CBB_add_u16(%struct.cbb_st* %1, i16 zeroext %21) #11
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds i16, i16* %20, i64 1
  br i1 %23, label %25, label %17

25:                                               ; preds = %17, %19
  %26 = phi i1 [ true, %17 ], [ false, %19 ]
  ret i1 %26
}

declare i32 @CBB_add_u16(%struct.cbb_st*, i16 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl23tls12_check_peer_sigalgEPKNS_13SSL_HANDSHAKEEPht(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly, i8* nocapture, i16 zeroext) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 1
  %5 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %4, align 8
  %6 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %5, i64 0, i32 20, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %5, i64 0, i32 20
  %11 = bitcast %"class.bssl::Array.56"* %10 to i64*
  %12 = load i64, i64* %11, align 8
  br label %13

13:                                               ; preds = %9, %3
  %14 = phi i64 [ %7, %9 ], [ 9, %3 ]
  %15 = phi i64 [ %12, %9 ], [ ptrtoint ([9 x i16]* @_ZN4bsslL26kVerifySignatureAlgorithmsE to i64), %3 ]
  %16 = inttoptr i64 %15 to i16*
  %17 = getelementptr inbounds i16, i16* %16, i64 %14
  br label %20

18:                                               ; preds = %20
  %19 = icmp eq i16* %24, %17
  br i1 %19, label %25, label %20

20:                                               ; preds = %13, %18
  %21 = phi i16* [ %24, %18 ], [ %16, %13 ]
  %22 = load i16, i16* %21, align 2
  %23 = icmp eq i16 %22, %2
  %24 = getelementptr inbounds i16, i16* %21, i64 1
  br i1 %23, label %26, label %18

25:                                               ; preds = %18
  tail call void @ERR_put_error(i32 16, i32 0, i32 245, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 486) #11
  store i8 47, i8* %1, align 1
  br label %26

26:                                               ; preds = %20, %25
  %27 = phi i1 [ false, %25 ], [ true, %20 ]
  ret i1 %27
}

declare void @ERR_put_error(i32, i32, i32, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl22ssl_is_valid_alpn_listENS_4SpanIKhEE(i8*, i64) local_unnamed_addr #0 {
  %3 = alloca %struct.cbs_st, align 8
  %4 = alloca %struct.cbs_st, align 8
  %5 = bitcast %struct.cbs_st* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #11
  %6 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %3, i64 0, i32 0
  %7 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %3, i64 0, i32 1
  store i8* %0, i8** %6, align 8
  store i64 %1, i64* %7, align 8
  %8 = call i64 @CBS_len(%struct.cbs_st* nonnull %3) #11
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %26, label %10

10:                                               ; preds = %2
  %11 = call i64 @CBS_len(%struct.cbs_st* nonnull %3) #11
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %26, label %13

13:                                               ; preds = %10
  %14 = bitcast %struct.cbs_st* %4 to i8*
  %15 = bitcast %struct.cbs_st* %4 to i8*
  br label %16

16:                                               ; preds = %13, %22
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 16, i1 false)
  %17 = call i32 @CBS_get_u8_length_prefixed(%struct.cbs_st* nonnull %3, %struct.cbs_st* nonnull %4) #11
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %25, label %19

19:                                               ; preds = %16
  %20 = call i64 @CBS_len(%struct.cbs_st* nonnull %4) #11
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #11
  %23 = call i64 @CBS_len(%struct.cbs_st* nonnull %3) #11
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %26, label %16

25:                                               ; preds = %19, %16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #11
  br label %26

26:                                               ; preds = %22, %10, %25, %2
  %27 = phi i1 [ false, %25 ], [ false, %2 ], [ true, %10 ], [ true, %22 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #11
  ret i1 %27
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl28ssl_is_alpn_protocol_allowedEPKNS_13SSL_HANDSHAKEENS_4SpanIKhEE(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly, i8* readonly, i64) local_unnamed_addr #0 {
  %4 = alloca %struct.cbs_st, align 8
  %5 = alloca %struct.cbs_st, align 8
  %6 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 1
  %7 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %6, align 8
  %8 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %7, i64 0, i32 16, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %62, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %13 = load %struct.ssl_st*, %struct.ssl_st** %12, align 8
  %14 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %13, i64 0, i32 16, i32 0, i32 0, i32 0
  %15 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %14, align 8
  %16 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %15, i64 0, i32 77
  %17 = load i16, i16* %16, align 8
  %18 = and i16 %17, 64
  %19 = icmp eq i16 %18, 0
  br i1 %19, label %20, label %62

20:                                               ; preds = %11
  %21 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #11
  %22 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %4, i64 0, i32 1
  %23 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %7, i64 0, i32 16, i32 0
  %24 = bitcast i8** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %struct.cbs_st* %4 to i64*
  store i64 %25, i64* %26, align 8
  store i64 %9, i64* %22, align 8
  %27 = bitcast %struct.cbs_st* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #11
  %28 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %5, i64 0, i32 0
  %29 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %5, i64 0, i32 1
  %30 = bitcast %struct.cbs_st* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 16, i1 false)
  %31 = call i64 @CBS_len(%struct.cbs_st* nonnull %4) #11
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %60, label %33

33:                                               ; preds = %20
  %34 = icmp eq i64 %2, 0
  %35 = getelementptr inbounds i8, i8* %1, i64 %2
  br label %36

36:                                               ; preds = %33, %57
  %37 = call i32 @CBS_get_u8_length_prefixed(%struct.cbs_st* nonnull %4, %struct.cbs_st* nonnull %5) #11
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %60, label %39

39:                                               ; preds = %36
  %40 = load i8*, i8** %28, align 8
  %41 = load i64, i64* %29, align 8
  %42 = icmp eq i64 %41, %2
  br i1 %42, label %43, label %57

43:                                               ; preds = %39
  %44 = getelementptr inbounds i8, i8* %40, i64 %2
  br i1 %34, label %60, label %45

45:                                               ; preds = %43, %51
  %46 = phi i8* [ %53, %51 ], [ %1, %43 ]
  %47 = phi i8* [ %52, %51 ], [ %40, %43 ]
  %48 = load i8, i8* %47, align 1
  %49 = load i8, i8* %46, align 1
  %50 = icmp eq i8 %48, %49
  br i1 %50, label %51, label %57

51:                                               ; preds = %45
  %52 = getelementptr inbounds i8, i8* %47, i64 1
  %53 = getelementptr inbounds i8, i8* %46, i64 1
  %54 = icmp eq i8* %52, %44
  %55 = icmp eq i8* %53, %35
  %56 = or i1 %55, %54
  br i1 %56, label %60, label %45

57:                                               ; preds = %45, %39
  %58 = call i64 @CBS_len(%struct.cbs_st* nonnull %4) #11
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %60, label %36

60:                                               ; preds = %36, %57, %43, %51, %20
  %61 = phi i1 [ false, %20 ], [ true, %51 ], [ false, %36 ], [ false, %57 ], [ true, %43 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #11
  br label %62

62:                                               ; preds = %11, %3, %60
  %63 = phi i1 [ %61, %60 ], [ false, %3 ], [ true, %11 ]
  ret i1 %63
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl18ssl_negotiate_alpnEPNS_13SSL_HANDSHAKEEPhPK22ssl_early_callback_ctx(%"struct.bssl::SSL_HANDSHAKE"* nocapture, i8* nocapture, %struct.ssl_early_callback_ctx* nocapture readonly) local_unnamed_addr #0 {
  %4 = alloca <2 x i64>, align 16
  %5 = bitcast <2 x i64>* %4 to %struct.cbs_st*
  %6 = alloca %struct.cbs_st, align 8
  %7 = alloca %struct.cbs_st, align 8
  %8 = alloca <2 x i64>, align 16
  %9 = bitcast <2 x i64>* %8 to %struct.cbs_st*
  %10 = alloca i8*, align 8
  %11 = alloca i8, align 1
  %12 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %13 = load %struct.ssl_st*, %struct.ssl_st** %12, align 8
  %14 = bitcast %struct.cbs_st* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #11
  %15 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %13, i64 0, i32 16, i32 0, i32 0, i32 0
  %16 = bitcast %struct.cbs_st* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 16, i1 false)
  %17 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %15, align 8
  %18 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %17, i64 0, i32 62
  %19 = load i32 (%struct.ssl_st*, i8**, i8*, i8*, i32, i8*)*, i32 (%struct.ssl_st*, i8**, i8*, i8*, i32, i8*)** %18, align 8
  %20 = icmp eq i32 (%struct.ssl_st*, i8**, i8*, i8*, i32, i8*)* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %3
  %22 = call zeroext i1 @_ZN4bssl30ssl_client_hello_get_extensionEPK22ssl_early_callback_ctxP6cbs_stt(%struct.ssl_early_callback_ctx* %2, %struct.cbs_st* nonnull %7, i16 zeroext 16)
  br i1 %22, label %28, label %23

23:                                               ; preds = %21, %3
  %24 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %13, i64 0, i32 24
  %25 = load %struct.ssl_quic_method_st*, %struct.ssl_quic_method_st** %24, align 8
  %26 = icmp eq %struct.ssl_quic_method_st* %25, null
  br i1 %26, label %104, label %27

27:                                               ; preds = %23
  tail call void @ERR_put_error(i32 16, i32 0, i32 307, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 1559) #11
  store i8 120, i8* %1, align 1
  br label %104

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 46
  %30 = load i32, i32* %29, align 8
  %31 = and i32 %30, -131073
  store i32 %31, i32* %29, align 8
  %32 = bitcast <2 x i64>* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #11
  %33 = bitcast <2 x i64>* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %33, i8 -86, i64 16, i1 false)
  %34 = call i32 @CBS_get_u16_length_prefixed(%struct.cbs_st* nonnull %7, %struct.cbs_st* nonnull %9) #11
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %60, label %36

36:                                               ; preds = %28
  %37 = call i64 @CBS_len(%struct.cbs_st* nonnull %7) #11
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %39, label %60

39:                                               ; preds = %36
  %40 = load <2 x i64>, <2 x i64>* %8, align 16
  %41 = bitcast <2 x i64>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41) #11
  store <2 x i64> %40, <2 x i64>* %4, align 16
  %42 = call i64 @CBS_len(%struct.cbs_st* nonnull %5) #11
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %59, label %44

44:                                               ; preds = %39
  %45 = call i64 @CBS_len(%struct.cbs_st* nonnull %5) #11
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %61, label %47

47:                                               ; preds = %44
  %48 = bitcast %struct.cbs_st* %6 to i8*
  br label %49

49:                                               ; preds = %55, %47
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %48) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -86, i64 16, i1 false) #11
  %50 = call i32 @CBS_get_u8_length_prefixed(%struct.cbs_st* nonnull %5, %struct.cbs_st* nonnull %6) #11
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %58, label %52

52:                                               ; preds = %49
  %53 = call i64 @CBS_len(%struct.cbs_st* nonnull %6) #11
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %52
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %48) #11
  %56 = call i64 @CBS_len(%struct.cbs_st* nonnull %5) #11
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %61, label %49

58:                                               ; preds = %52, %49
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %48) #11
  br label %59

59:                                               ; preds = %39, %58
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #11
  br label %60

60:                                               ; preds = %59, %36, %28
  call void @ERR_put_error(i32 16, i32 0, i32 190, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 1574) #11
  store i8 50, i8* %1, align 1
  br label %102

61:                                               ; preds = %55, %44
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #11
  %62 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #11
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #11
  store i8 -86, i8* %11, align 1
  %63 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %15, align 8
  %64 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %63, i64 0, i32 62
  %65 = load i32 (%struct.ssl_st*, i8**, i8*, i8*, i32, i8*)*, i32 (%struct.ssl_st*, i8**, i8*, i8*, i32, i8*)** %64, align 8
  %66 = call i8* @CBS_data(%struct.cbs_st* nonnull %9) #11
  %67 = call i64 @CBS_len(%struct.cbs_st* nonnull %9) #11
  %68 = trunc i64 %67 to i32
  %69 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %15, align 8
  %70 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %69, i64 0, i32 63
  %71 = load i8*, i8** %70, align 8
  %72 = call i32 %65(%struct.ssl_st* %13, i8** nonnull %10, i8* nonnull %11, i8* %66, i32 %68, i8* %71) #11
  %73 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %13, i64 0, i32 24
  %74 = load %struct.ssl_quic_method_st*, %struct.ssl_quic_method_st** %73, align 8
  %75 = icmp ne %struct.ssl_quic_method_st* %74, null
  %76 = or i32 %72, 2
  %77 = icmp eq i32 %76, 3
  %78 = and i1 %75, %77
  %79 = select i1 %78, i32 2, i32 %72
  switch i32 %79, label %99 [
    i32 0, label %80
    i32 3, label %100
    i32 1, label %100
    i32 2, label %98
  ]

80:                                               ; preds = %61
  %81 = load i8, i8* %11, align 1
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  call void @ERR_put_error(i32 16, i32 0, i32 259, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 1592) #11
  store i8 80, i8* %1, align 1
  br label %100

84:                                               ; preds = %80
  %85 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %13, i64 0, i32 8
  %86 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %85, align 8
  %87 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %86, i64 0, i32 49
  %88 = load i8*, i8** %10, align 8
  %89 = zext i8 %81 to i64
  %90 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %87, i64 0, i32 0
  %91 = load i8*, i8** %90, align 8
  call void @OPENSSL_free(i8* %91) #11
  %92 = bitcast %"class.bssl::Array"* %87 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %92, i8 0, i64 16, i1 false) #11
  %93 = call i8* @OPENSSL_malloc(i64 %89) #11
  store i8* %93, i8** %90, align 8
  %94 = icmp eq i8* %93, null
  br i1 %94, label %97, label %95

95:                                               ; preds = %84
  %96 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %86, i64 0, i32 49, i32 1
  store i64 %89, i64* %96, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %93, i8* align 1 %88, i64 %89, i1 false) #11
  br label %100

97:                                               ; preds = %84
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.4, i64 0, i64 0), i32 324) #11
  store i8 80, i8* %1, align 1
  br label %100

98:                                               ; preds = %61
  store i8 120, i8* %1, align 1
  call void @ERR_put_error(i32 16, i32 0, i32 307, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 1607) #11
  br label %100

99:                                               ; preds = %61
  store i8 80, i8* %1, align 1
  call void @ERR_put_error(i32 16, i32 0, i32 68, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 1612) #11
  br label %100

100:                                              ; preds = %95, %61, %61, %99, %98, %97, %83
  %101 = phi i1 [ false, %99 ], [ false, %98 ], [ false, %83 ], [ false, %97 ], [ true, %61 ], [ true, %61 ], [ true, %95 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #11
  br label %102

102:                                              ; preds = %100, %60
  %103 = phi i1 [ false, %60 ], [ %101, %100 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #11
  br label %104

104:                                              ; preds = %23, %102, %27
  %105 = phi i1 [ false, %27 ], [ %103, %102 ], [ true, %23 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #11
  ret i1 %105
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl40ssl_ext_pre_shared_key_parse_serverhelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture readnone, i8* nocapture, %struct.cbs_st*) local_unnamed_addr #0 {
  %4 = alloca i16, align 2
  %5 = bitcast i16* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %5) #11
  store i16 -21846, i16* %4, align 2
  %6 = call i32 @CBS_get_u16(%struct.cbs_st* %2, i16* nonnull %4) #11
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %3
  %9 = call i64 @CBS_len(%struct.cbs_st* %2) #11
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %8, %3
  call void @ERR_put_error(i32 16, i32 0, i32 137, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 2000) #11
  br label %16

12:                                               ; preds = %8
  %13 = load i16, i16* %4, align 2
  %14 = icmp eq i16 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %12
  call void @ERR_put_error(i32 16, i32 0, i32 195, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 2007) #11
  br label %16

16:                                               ; preds = %11, %15
  %17 = phi i8 [ 115, %15 ], [ 50, %11 ]
  store i8 %17, i8* %1, align 1
  br label %18

18:                                               ; preds = %16, %12
  %19 = phi i1 [ true, %12 ], [ false, %16 ]
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %5) #11
  ret i1 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl40ssl_ext_pre_shared_key_parse_clienthelloEPNS_13SSL_HANDSHAKEEP6cbs_stS3_PjPhPK22ssl_early_callback_ctxS3_(%"struct.bssl::SSL_HANDSHAKE"* nocapture readnone, %struct.cbs_st*, %struct.cbs_st* nocapture, i32*, i8* nocapture, %struct.ssl_early_callback_ctx* nocapture readonly, %struct.cbs_st*) local_unnamed_addr #0 {
  %8 = alloca %struct.cbs_st, align 8
  %9 = alloca %struct.cbs_st, align 8
  %10 = alloca %struct.cbs_st, align 8
  %11 = alloca i32, align 4
  %12 = alloca %struct.cbs_st, align 8
  %13 = tail call i8* @CBS_data(%struct.cbs_st* %6) #11
  %14 = tail call i64 @CBS_len(%struct.cbs_st* %6) #11
  %15 = getelementptr inbounds i8, i8* %13, i64 %14
  %16 = getelementptr inbounds %struct.ssl_early_callback_ctx, %struct.ssl_early_callback_ctx* %5, i64 0, i32 12
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds %struct.ssl_early_callback_ctx, %struct.ssl_early_callback_ctx* %5, i64 0, i32 13
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds i8, i8* %17, i64 %19
  %21 = icmp eq i8* %15, %20
  br i1 %21, label %23, label %22

22:                                               ; preds = %7
  tail call void @ERR_put_error(i32 16, i32 0, i32 267, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 2023) #11
  store i8 47, i8* %4, align 1
  br label %88

23:                                               ; preds = %7
  %24 = bitcast %struct.cbs_st* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #11
  %25 = bitcast %struct.cbs_st* %9 to i8*
  %26 = bitcast %struct.cbs_st* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #11
  %27 = bitcast %struct.cbs_st* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 16, i1 false)
  %28 = call i32 @CBS_get_u16_length_prefixed(%struct.cbs_st* %6, %struct.cbs_st* nonnull %8) #11
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %45, label %30

30:                                               ; preds = %23
  %31 = call i32 @CBS_get_u16_length_prefixed(%struct.cbs_st* nonnull %8, %struct.cbs_st* %1) #11
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %45, label %33

33:                                               ; preds = %30
  %34 = call i32 @CBS_get_u32(%struct.cbs_st* nonnull %8, i32* %3) #11
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %45, label %36

36:                                               ; preds = %33
  %37 = call i32 @CBS_get_u16_length_prefixed(%struct.cbs_st* %6, %struct.cbs_st* nonnull %9) #11
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %45, label %39

39:                                               ; preds = %36
  %40 = call i64 @CBS_len(%struct.cbs_st* nonnull %9) #11
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %45, label %42

42:                                               ; preds = %39
  %43 = call i64 @CBS_len(%struct.cbs_st* %6) #11
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %46, label %45

45:                                               ; preds = %42, %36, %33, %30, %23, %39
  call void @ERR_put_error(i32 16, i32 0, i32 137, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 2036) #11
  store i8 50, i8* %4, align 1
  br label %86

46:                                               ; preds = %42
  %47 = bitcast %struct.cbs_st* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* nonnull align 8 %25, i64 16, i1 false)
  %48 = call i64 @CBS_len(%struct.cbs_st* nonnull %8) #11
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %54, label %50

50:                                               ; preds = %46
  %51 = bitcast %struct.cbs_st* %10 to i8*
  %52 = bitcast i32* %11 to i8*
  %53 = bitcast %struct.cbs_st* %10 to i8*
  br label %61

54:                                               ; preds = %69, %46
  %55 = phi i64 [ 1, %46 ], [ %70, %69 ]
  %56 = call i64 @CBS_len(%struct.cbs_st* nonnull %9) #11
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %82, label %58

58:                                               ; preds = %54
  %59 = bitcast %struct.cbs_st* %12 to i8*
  %60 = bitcast %struct.cbs_st* %12 to i8*
  br label %73

61:                                               ; preds = %50, %69
  %62 = phi i64 [ 1, %50 ], [ %70, %69 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %52) #11
  store i32 -1431655766, i32* %11, align 4
  %63 = call i32 @CBS_get_u16_length_prefixed(%struct.cbs_st* nonnull %8, %struct.cbs_st* nonnull %10) #11
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %68, label %65

65:                                               ; preds = %61
  %66 = call i32 @CBS_get_u32(%struct.cbs_st* nonnull %8, i32* nonnull %11) #11
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %61, %65
  call void @ERR_put_error(i32 16, i32 0, i32 137, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 2050) #11
  store i8 50, i8* %4, align 1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %52) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #11
  br label %86

69:                                               ; preds = %65
  %70 = add i64 %62, 1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %52) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #11
  %71 = call i64 @CBS_len(%struct.cbs_st* nonnull %8) #11
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %54, label %61

73:                                               ; preds = %58, %78
  %74 = phi i64 [ 0, %58 ], [ %79, %78 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %59) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 -86, i64 16, i1 false)
  %75 = call i32 @CBS_get_u8_length_prefixed(%struct.cbs_st* nonnull %9, %struct.cbs_st* nonnull %12) #11
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %78

77:                                               ; preds = %73
  call void @ERR_put_error(i32 16, i32 0, i32 137, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 2064) #11
  store i8 50, i8* %4, align 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %59) #11
  br label %86

78:                                               ; preds = %73
  %79 = add i64 %74, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %59) #11
  %80 = call i64 @CBS_len(%struct.cbs_st* nonnull %9) #11
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %73

82:                                               ; preds = %78, %54
  %83 = phi i64 [ 0, %54 ], [ %79, %78 ]
  %84 = icmp eq i64 %55, %83
  br i1 %84, label %86, label %85

85:                                               ; preds = %82
  call void @ERR_put_error(i32 16, i32 0, i32 271, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 2073) #11
  store i8 47, i8* %4, align 1
  br label %86

86:                                               ; preds = %77, %68, %82, %85, %45
  %87 = phi i1 [ false, %45 ], [ false, %85 ], [ true, %82 ], [ false, %68 ], [ false, %77 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #11
  br label %88

88:                                               ; preds = %86, %22
  %89 = phi i1 [ false, %22 ], [ %87, %86 ]
  ret i1 %89
}

declare i32 @CBS_get_u32(%struct.cbs_st*, i32*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl38ssl_ext_pre_shared_key_add_serverhelloEPNS_13SSL_HANDSHAKEEP6cbb_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly, %struct.cbb_st*) local_unnamed_addr #0 {
  %3 = alloca %struct.cbb_st, align 8
  %4 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %5 = load %struct.ssl_st*, %struct.ssl_st** %4, align 8
  %6 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %5, i64 0, i32 8
  %7 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %6, align 8
  %8 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %7, i64 0, i32 23
  %9 = load i16, i16* %8, align 1
  %10 = and i16 %9, 64
  %11 = icmp eq i16 %10, 0
  br i1 %11, label %27, label %12

12:                                               ; preds = %2
  %13 = bitcast %struct.cbb_st* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 32, i1 false)
  %14 = tail call i32 @CBB_add_u16(%struct.cbb_st* %1, i16 zeroext 41) #11
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %25, label %16

16:                                               ; preds = %12
  %17 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* %1, %struct.cbb_st* nonnull %3) #11
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %25, label %19

19:                                               ; preds = %16
  %20 = call i32 @CBB_add_u16(%struct.cbb_st* nonnull %3, i16 zeroext 0) #11
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %19
  %23 = call i32 @CBB_flush(%struct.cbb_st* %1) #11
  %24 = icmp ne i32 %23, 0
  br label %25

25:                                               ; preds = %22, %12, %16, %19
  %26 = phi i1 [ false, %19 ], [ false, %16 ], [ false, %12 ], [ %24, %22 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #11
  br label %27

27:                                               ; preds = %2, %25
  %28 = phi i1 [ %26, %25 ], [ true, %2 ]
  ret i1 %28
}

declare i32 @CBB_add_u16_length_prefixed(%struct.cbb_st*, %struct.cbb_st*) local_unnamed_addr #2

declare i32 @CBB_flush(%struct.cbb_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl35ssl_ext_key_share_parse_serverhelloEPNS_13SSL_HANDSHAKEEPNS_5ArrayIhEEPhP6cbs_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture, %"class.bssl::Array"*, i8*, %struct.cbs_st*) local_unnamed_addr #0 {
  %5 = alloca %struct.cbs_st, align 8
  %6 = alloca i16, align 2
  %7 = bitcast %struct.cbs_st* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #11
  %8 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %5, i64 0, i32 0
  %9 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %5, i64 0, i32 1
  %10 = bitcast i16* %6 to i8*
  %11 = bitcast %struct.cbs_st* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %10) #11
  store i16 -21846, i16* %6, align 2
  %12 = call i32 @CBS_get_u16(%struct.cbs_st* %3, i16* nonnull %6) #11
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %4
  %15 = call i32 @CBS_get_u16_length_prefixed(%struct.cbs_st* %3, %struct.cbs_st* nonnull %5) #11
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %14
  %18 = call i64 @CBS_len(%struct.cbs_st* %3) #11
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %21, label %20

20:                                               ; preds = %17, %14, %4
  call void @ERR_put_error(i32 16, i32 0, i32 137, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 2395) #11
  store i8 50, i8* %2, align 1
  br label %77

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 19, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.bssl::SSLKeyShare"*, %"class.bssl::SSLKeyShare"** %22, align 8
  %24 = bitcast %"class.bssl::SSLKeyShare"* %23 to i16 (%"class.bssl::SSLKeyShare"*)***
  %25 = load i16 (%"class.bssl::SSLKeyShare"*)**, i16 (%"class.bssl::SSLKeyShare"*)*** %24, align 8
  %26 = getelementptr inbounds i16 (%"class.bssl::SSLKeyShare"*)*, i16 (%"class.bssl::SSLKeyShare"*)** %25, i64 2
  %27 = load i16 (%"class.bssl::SSLKeyShare"*)*, i16 (%"class.bssl::SSLKeyShare"*)** %26, align 8
  %28 = call zeroext i16 %27(%"class.bssl::SSLKeyShare"* %23) #11
  %29 = load i16, i16* %6, align 2
  %30 = icmp eq i16 %28, %29
  br i1 %30, label %46, label %31

31:                                               ; preds = %21
  %32 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 19, i64 1, i32 0, i32 0, i32 0
  %33 = load %"class.bssl::SSLKeyShare"*, %"class.bssl::SSLKeyShare"** %32, align 8
  %34 = icmp eq %"class.bssl::SSLKeyShare"* %33, null
  br i1 %34, label %43, label %35

35:                                               ; preds = %31
  %36 = bitcast %"class.bssl::SSLKeyShare"* %33 to i16 (%"class.bssl::SSLKeyShare"*)***
  %37 = load i16 (%"class.bssl::SSLKeyShare"*)**, i16 (%"class.bssl::SSLKeyShare"*)*** %36, align 8
  %38 = getelementptr inbounds i16 (%"class.bssl::SSLKeyShare"*)*, i16 (%"class.bssl::SSLKeyShare"*)** %37, i64 2
  %39 = load i16 (%"class.bssl::SSLKeyShare"*)*, i16 (%"class.bssl::SSLKeyShare"*)** %38, align 8
  %40 = call zeroext i16 %39(%"class.bssl::SSLKeyShare"* nonnull %33) #11
  %41 = load i16, i16* %6, align 2
  %42 = icmp eq i16 %40, %41
  br i1 %42, label %44, label %43

43:                                               ; preds = %31, %35
  store i8 47, i8* %2, align 1
  call void @ERR_put_error(i32 16, i32 0, i32 243, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 2404) #11
  br label %77

44:                                               ; preds = %35
  %45 = load %"class.bssl::SSLKeyShare"*, %"class.bssl::SSLKeyShare"** %32, align 8
  br label %46

46:                                               ; preds = %21, %44
  %47 = phi %"class.bssl::SSLKeyShare"* [ %45, %44 ], [ %23, %21 ]
  %48 = load i8*, i8** %8, align 8
  %49 = load i64, i64* %9, align 8
  %50 = bitcast %"class.bssl::SSLKeyShare"* %47 to i1 (%"class.bssl::SSLKeyShare"*, %"class.bssl::Array"*, i8*, i8*, i64)***
  %51 = load i1 (%"class.bssl::SSLKeyShare"*, %"class.bssl::Array"*, i8*, i8*, i64)**, i1 (%"class.bssl::SSLKeyShare"*, %"class.bssl::Array"*, i8*, i8*, i64)*** %50, align 8
  %52 = getelementptr inbounds i1 (%"class.bssl::SSLKeyShare"*, %"class.bssl::Array"*, i8*, i8*, i64)*, i1 (%"class.bssl::SSLKeyShare"*, %"class.bssl::Array"*, i8*, i8*, i64)** %51, i64 5
  %53 = load i1 (%"class.bssl::SSLKeyShare"*, %"class.bssl::Array"*, i8*, i8*, i64)*, i1 (%"class.bssl::SSLKeyShare"*, %"class.bssl::Array"*, i8*, i8*, i64)** %52, align 8
  %54 = call zeroext i1 %53(%"class.bssl::SSLKeyShare"* %47, %"class.bssl::Array"* %1, i8* %2, i8* %48, i64 %49) #11
  br i1 %54, label %56, label %55

55:                                               ; preds = %46
  store i8 80, i8* %2, align 1
  br label %77

56:                                               ; preds = %46
  %57 = load i16, i16* %6, align 2
  %58 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 40, i32 0, i32 0, i32 0
  %59 = load %struct.ssl_session_st*, %struct.ssl_session_st** %58, align 8
  %60 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %59, i64 0, i32 2
  store i16 %57, i16* %60, align 2
  %61 = load %"class.bssl::SSLKeyShare"*, %"class.bssl::SSLKeyShare"** %22, align 8
  store %"class.bssl::SSLKeyShare"* null, %"class.bssl::SSLKeyShare"** %22, align 8
  %62 = icmp eq %"class.bssl::SSLKeyShare"* %61, null
  br i1 %62, label %68, label %63

63:                                               ; preds = %56
  %64 = bitcast %"class.bssl::SSLKeyShare"* %61 to void (%"class.bssl::SSLKeyShare"*)***
  %65 = load void (%"class.bssl::SSLKeyShare"*)**, void (%"class.bssl::SSLKeyShare"*)*** %64, align 8
  %66 = load void (%"class.bssl::SSLKeyShare"*)*, void (%"class.bssl::SSLKeyShare"*)** %65, align 8
  call void %66(%"class.bssl::SSLKeyShare"* nonnull %61) #11
  %67 = bitcast %"class.bssl::SSLKeyShare"* %61 to i8*
  call void @OPENSSL_free(i8* nonnull %67) #11
  br label %68

68:                                               ; preds = %56, %63
  %69 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 19, i64 1, i32 0, i32 0, i32 0
  %70 = load %"class.bssl::SSLKeyShare"*, %"class.bssl::SSLKeyShare"** %69, align 8
  store %"class.bssl::SSLKeyShare"* null, %"class.bssl::SSLKeyShare"** %69, align 8
  %71 = icmp eq %"class.bssl::SSLKeyShare"* %70, null
  br i1 %71, label %77, label %72

72:                                               ; preds = %68
  %73 = bitcast %"class.bssl::SSLKeyShare"* %70 to void (%"class.bssl::SSLKeyShare"*)***
  %74 = load void (%"class.bssl::SSLKeyShare"*)**, void (%"class.bssl::SSLKeyShare"*)*** %73, align 8
  %75 = load void (%"class.bssl::SSLKeyShare"*)*, void (%"class.bssl::SSLKeyShare"*)** %74, align 8
  call void %75(%"class.bssl::SSLKeyShare"* nonnull %70) #11
  %76 = bitcast %"class.bssl::SSLKeyShare"* %70 to i8*
  call void @OPENSSL_free(i8* nonnull %76) #11
  br label %77

77:                                               ; preds = %72, %68, %43, %55, %20
  %78 = phi i1 [ false, %20 ], [ false, %43 ], [ false, %55 ], [ true, %68 ], [ true, %72 ]
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #11
  ret i1 %78
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl35ssl_ext_key_share_parse_clienthelloEPNS_13SSL_HANDSHAKEEPbPNS_4SpanIKhEEPhPK22ssl_early_callback_ctx(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly, i8* nocapture, %"class.bssl::Span.1"*, i8* nocapture, %struct.ssl_early_callback_ctx* nocapture readonly) local_unnamed_addr #0 {
  %6 = alloca %struct.cbs_st, align 8
  %7 = alloca %struct.cbs_st, align 8
  %8 = alloca <2 x i64>, align 16
  %9 = bitcast <2 x i64>* %8 to %struct.cbs_st*
  %10 = alloca i16, align 2
  %11 = alloca %struct.cbs_st, align 8
  %12 = bitcast %struct.cbs_st* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #11
  %13 = bitcast %struct.cbs_st* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = call zeroext i1 @_ZN4bssl30ssl_client_hello_get_extensionEPK22ssl_early_callback_ctxP6cbs_stt(%struct.ssl_early_callback_ctx* %4, %struct.cbs_st* nonnull %6, i16 zeroext 51)
  br i1 %14, label %16, label %15

15:                                               ; preds = %5
  tail call void @ERR_put_error(i32 16, i32 0, i32 258, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 2429) #11
  store i8 109, i8* %3, align 1
  br label %72

16:                                               ; preds = %5
  %17 = bitcast %struct.cbs_st* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #11
  %18 = bitcast %struct.cbs_st* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 16, i1 false)
  %19 = call i32 @CBS_get_u16_length_prefixed(%struct.cbs_st* nonnull %6, %struct.cbs_st* nonnull %7) #11
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %24, label %21

21:                                               ; preds = %16
  %22 = call i64 @CBS_len(%struct.cbs_st* nonnull %6) #11
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %25, label %24

24:                                               ; preds = %21, %16
  call void @ERR_put_error(i32 16, i32 0, i32 137, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 2437) #11
  br label %70

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 40, i32 0, i32 0, i32 0
  %27 = load %struct.ssl_session_st*, %struct.ssl_session_st** %26, align 8
  %28 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %27, i64 0, i32 2
  %29 = load i16, i16* %28, align 2
  %30 = bitcast <2 x i64>* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #11
  %31 = bitcast <2 x i64>* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %31, i8 -86, i64 16, i1 false)
  call void @CBS_init(%struct.cbs_st* nonnull %9, i8* null, i64 0) #11
  %32 = call i64 @CBS_len(%struct.cbs_st* nonnull %7) #11
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %59, label %34

34:                                               ; preds = %25
  %35 = bitcast i16* %10 to i8*
  %36 = bitcast %struct.cbs_st* %11 to i8*
  %37 = bitcast %struct.cbs_st* %11 to i8*
  br label %38

38:                                               ; preds = %34, %56
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %35) #11
  store i16 -21846, i16* %10, align 2
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 16, i1 false)
  %39 = call i32 @CBS_get_u16(%struct.cbs_st* nonnull %7, i16* nonnull %10) #11
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %38
  %42 = call i32 @CBS_get_u16_length_prefixed(%struct.cbs_st* nonnull %7, %struct.cbs_st* nonnull %11) #11
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %47, label %44

44:                                               ; preds = %41
  %45 = call i64 @CBS_len(%struct.cbs_st* nonnull %11) #11
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %41, %38, %44
  call void @ERR_put_error(i32 16, i32 0, i32 137, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 2451) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %35) #11
  br label %68

48:                                               ; preds = %44
  %49 = load i16, i16* %10, align 2
  %50 = icmp eq i16 %49, %29
  br i1 %50, label %51, label %56

51:                                               ; preds = %48
  %52 = call i64 @CBS_len(%struct.cbs_st* nonnull %9) #11
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %55, label %54

54:                                               ; preds = %51
  call void @ERR_put_error(i32 16, i32 0, i32 264, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 2457) #11
  store i8 47, i8* %3, align 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %35) #11
  br label %68

55:                                               ; preds = %51
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %30, i8* nonnull align 8 %36, i64 16, i1 false)
  br label %56

56:                                               ; preds = %48, %55
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %35) #11
  %57 = call i64 @CBS_len(%struct.cbs_st* nonnull %7) #11
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %59, label %38

59:                                               ; preds = %56, %25
  %60 = icmp eq %"class.bssl::Span.1"* %2, null
  br i1 %60, label %64, label %61

61:                                               ; preds = %59
  %62 = load <2 x i64>, <2 x i64>* %8, align 16
  %63 = bitcast %"class.bssl::Span.1"* %2 to <2 x i64>*
  store <2 x i64> %62, <2 x i64>* %63, align 8
  br label %64

64:                                               ; preds = %59, %61
  %65 = call i64 @CBS_len(%struct.cbs_st* nonnull %9) #11
  %66 = icmp ne i64 %65, 0
  %67 = zext i1 %66 to i8
  store i8 %67, i8* %1, align 1
  br label %68

68:                                               ; preds = %54, %47, %64
  %69 = phi i1 [ true, %64 ], [ false, %47 ], [ false, %54 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #11
  br label %70

70:                                               ; preds = %68, %24
  %71 = phi i1 [ false, %24 ], [ %69, %68 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #11
  br label %72

72:                                               ; preds = %70, %15
  %73 = phi i1 [ %71, %70 ], [ false, %15 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #11
  ret i1 %73
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl33ssl_ext_key_share_add_serverhelloEPNS_13SSL_HANDSHAKEEP6cbb_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly, %struct.cbb_st*) local_unnamed_addr #0 {
  %3 = alloca %struct.cbb_st, align 8
  %4 = alloca %struct.cbb_st, align 8
  %5 = bitcast %struct.cbb_st* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 32, i1 false)
  %6 = bitcast %struct.cbb_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 32, i1 false)
  %7 = tail call i32 @CBB_add_u16(%struct.cbb_st* %1, i16 zeroext 51) #11
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %32, label %9

9:                                                ; preds = %2
  %10 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* %1, %struct.cbb_st* nonnull %3) #11
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %32, label %12

12:                                               ; preds = %9
  %13 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 40, i32 0, i32 0, i32 0
  %14 = load %struct.ssl_session_st*, %struct.ssl_session_st** %13, align 8
  %15 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %14, i64 0, i32 2
  %16 = load i16, i16* %15, align 2
  %17 = call i32 @CBB_add_u16(%struct.cbb_st* nonnull %3, i16 zeroext %16) #11
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %32, label %19

19:                                               ; preds = %12
  %20 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* nonnull %3, %struct.cbb_st* nonnull %4) #11
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %32, label %22

22:                                               ; preds = %19
  %23 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 25, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 25, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %4, i8* %24, i64 %26) #11
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %22
  %30 = call i32 @CBB_flush(%struct.cbb_st* %1) #11
  %31 = icmp ne i32 %30, 0
  br label %32

32:                                               ; preds = %29, %2, %9, %12, %19, %22
  %33 = phi i1 [ false, %22 ], [ false, %19 ], [ false, %12 ], [ false, %9 ], [ false, %2 ], [ %31, %29 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #11
  ret i1 %33
}

declare i32 @CBB_add_bytes(%struct.cbb_st*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl18ssl_negotiate_alpsEPNS_13SSL_HANDSHAKEEPhPK22ssl_early_callback_ctx(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly, i8* nocapture, %struct.ssl_early_callback_ctx* nocapture readonly) local_unnamed_addr #0 {
  %4 = alloca %struct.cbs_st, align 8
  %5 = alloca %struct.cbs_st, align 8
  %6 = alloca %struct.cbs_st, align 8
  %7 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %8 = load %struct.ssl_st*, %struct.ssl_st** %7, align 8
  %9 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %8, i64 0, i32 8
  %10 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %9, align 8
  %11 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %10, i64 0, i32 49, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %148, label %14

14:                                               ; preds = %3
  %15 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #11
  %16 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 16, i1 false)
  %17 = tail call zeroext i16 @_ZN4bssl20ssl_protocol_versionEPK6ssl_st(%struct.ssl_st* %8) #11
  %18 = icmp ugt i16 %17, 771
  br i1 %18, label %19, label %146

19:                                               ; preds = %14
  %20 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %9, align 8
  %21 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %20, i64 0, i32 49, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %20, i64 0, i32 49, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 1
  %26 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %25, align 8
  %27 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %26, i64 0, i32 17, i32 1, i32 0
  %28 = load %"struct.bssl::ALPSConfig"*, %"struct.bssl::ALPSConfig"** %27, align 8
  %29 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %26, i64 0, i32 17, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %"struct.bssl::ALPSConfig", %"struct.bssl::ALPSConfig"* %28, i64 %30
  %32 = icmp eq i64 %30, 0
  br i1 %32, label %146, label %33

33:                                               ; preds = %19
  %34 = getelementptr inbounds i8, i8* %22, i64 %24
  %35 = icmp eq i64 %24, 0
  br label %36

36:                                               ; preds = %57, %33
  %37 = phi %"struct.bssl::ALPSConfig"* [ %28, %33 ], [ %58, %57 ]
  %38 = getelementptr inbounds %"struct.bssl::ALPSConfig", %"struct.bssl::ALPSConfig"* %37, i64 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = getelementptr inbounds %"struct.bssl::ALPSConfig", %"struct.bssl::ALPSConfig"* %37, i64 0, i32 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = icmp eq i64 %41, %24
  br i1 %42, label %43, label %57

43:                                               ; preds = %36
  %44 = getelementptr inbounds i8, i8* %39, i64 %24
  br i1 %35, label %60, label %45

45:                                               ; preds = %43, %51
  %46 = phi i8* [ %53, %51 ], [ %39, %43 ]
  %47 = phi i8* [ %52, %51 ], [ %22, %43 ]
  %48 = load i8, i8* %47, align 1
  %49 = load i8, i8* %46, align 1
  %50 = icmp eq i8 %48, %49
  br i1 %50, label %51, label %57

51:                                               ; preds = %45
  %52 = getelementptr inbounds i8, i8* %47, i64 1
  %53 = getelementptr inbounds i8, i8* %46, i64 1
  %54 = icmp eq i8* %52, %34
  %55 = icmp eq i8* %53, %44
  %56 = or i1 %55, %54
  br i1 %56, label %60, label %45

57:                                               ; preds = %45, %36
  %58 = getelementptr inbounds %"struct.bssl::ALPSConfig", %"struct.bssl::ALPSConfig"* %37, i64 1
  %59 = icmp eq %"struct.bssl::ALPSConfig"* %58, %31
  br i1 %59, label %146, label %36

60:                                               ; preds = %43, %51
  %61 = getelementptr inbounds %"struct.bssl::ALPSConfig", %"struct.bssl::ALPSConfig"* %37, i64 0, i32 1, i32 0
  %62 = load i8*, i8** %61, align 8
  %63 = getelementptr inbounds %"struct.bssl::ALPSConfig", %"struct.bssl::ALPSConfig"* %37, i64 0, i32 1, i32 1
  %64 = load i64, i64* %63, align 8
  %65 = call zeroext i1 @_ZN4bssl30ssl_client_hello_get_extensionEPK22ssl_early_callback_ctxP6cbs_stt(%struct.ssl_early_callback_ctx* %2, %struct.cbs_st* nonnull %4, i16 zeroext 17513)
  br i1 %65, label %66, label %146

66:                                               ; preds = %60
  %67 = bitcast %struct.cbs_st* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %67) #11
  %68 = bitcast %struct.cbs_st* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %68, i8 -86, i64 16, i1 false)
  %69 = call i32 @CBS_get_u16_length_prefixed(%struct.cbs_st* nonnull %4, %struct.cbs_st* nonnull %5) #11
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %85, label %71

71:                                               ; preds = %66
  %72 = call i64 @CBS_len(%struct.cbs_st* nonnull %4) #11
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %74, label %85

74:                                               ; preds = %71
  %75 = call i64 @CBS_len(%struct.cbs_st* nonnull %5) #11
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %85, label %77

77:                                               ; preds = %74
  %78 = call i64 @CBS_len(%struct.cbs_st* nonnull %5) #11
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %145, label %80

80:                                               ; preds = %77
  %81 = bitcast %struct.cbs_st* %6 to i8*
  %82 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %6, i64 0, i32 0
  %83 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %6, i64 0, i32 1
  %84 = bitcast %struct.cbs_st* %6 to i8*
  br label %86

85:                                               ; preds = %71, %66, %74
  call void @ERR_put_error(i32 16, i32 0, i32 137, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 3058) #11
  store i8 50, i8* %1, align 1
  br label %144

86:                                               ; preds = %80, %119
  %87 = phi i8 [ 0, %80 ], [ %120, %119 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %81) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %84, i8 -86, i64 16, i1 false)
  %88 = call i32 @CBS_get_u8_length_prefixed(%struct.cbs_st* nonnull %5, %struct.cbs_st* nonnull %6) #11
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %93, label %90

90:                                               ; preds = %86
  %91 = call i64 @CBS_len(%struct.cbs_st* nonnull %6) #11
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %93, label %94

93:                                               ; preds = %90, %86
  call void @ERR_put_error(i32 16, i32 0, i32 137, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 3067) #11
  store i8 50, i8* %1, align 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %81) #11
  br label %144

94:                                               ; preds = %90
  %95 = load i8*, i8** %82, align 8
  %96 = load i64, i64* %83, align 8
  %97 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %9, align 8
  %98 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %97, i64 0, i32 49, i32 0
  %99 = load i8*, i8** %98, align 8
  %100 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %97, i64 0, i32 49, i32 1
  %101 = load i64, i64* %100, align 8
  %102 = icmp eq i64 %96, %101
  br i1 %102, label %103, label %119

103:                                              ; preds = %94
  %104 = getelementptr inbounds i8, i8* %95, i64 %96
  %105 = icmp eq i64 %96, 0
  %106 = getelementptr inbounds i8, i8* %99, i64 %96
  br i1 %105, label %119, label %107

107:                                              ; preds = %103, %113
  %108 = phi i8* [ %115, %113 ], [ %99, %103 ]
  %109 = phi i8* [ %114, %113 ], [ %95, %103 ]
  %110 = load i8, i8* %109, align 1
  %111 = load i8, i8* %108, align 1
  %112 = icmp eq i8 %110, %111
  br i1 %112, label %113, label %119

113:                                              ; preds = %107
  %114 = getelementptr inbounds i8, i8* %109, i64 1
  %115 = getelementptr inbounds i8, i8* %108, i64 1
  %116 = icmp eq i8* %114, %104
  %117 = icmp eq i8* %115, %106
  %118 = or i1 %117, %116
  br i1 %118, label %119, label %107

119:                                              ; preds = %107, %113, %94, %103
  %120 = phi i8 [ %87, %94 ], [ 1, %103 ], [ 1, %113 ], [ %87, %107 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %81) #11
  %121 = call i64 @CBS_len(%struct.cbs_st* nonnull %5) #11
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %123, label %86

123:                                              ; preds = %119
  %124 = and i8 %120, 1
  %125 = icmp eq i8 %124, 0
  br i1 %125, label %145, label %126

126:                                              ; preds = %123
  %127 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 40, i32 0, i32 0, i32 0
  %128 = load %struct.ssl_session_st*, %struct.ssl_session_st** %127, align 8
  %129 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %128, i64 0, i32 36
  %130 = load i8, i8* %129, align 8
  %131 = or i8 %130, 64
  store i8 %131, i8* %129, align 8
  %132 = load %struct.ssl_session_st*, %struct.ssl_session_st** %127, align 8
  %133 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %132, i64 0, i32 34
  %134 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %133, i64 0, i32 0
  %135 = load i8*, i8** %134, align 8
  call void @OPENSSL_free(i8* %135) #11
  %136 = bitcast %"class.bssl::Array"* %133 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %136, i8 0, i64 16, i1 false) #11
  %137 = icmp eq i64 %64, 0
  br i1 %137, label %145, label %138

138:                                              ; preds = %126
  %139 = call i8* @OPENSSL_malloc(i64 %64) #11
  store i8* %139, i8** %134, align 8
  %140 = icmp eq i8* %139, null
  br i1 %140, label %143, label %141

141:                                              ; preds = %138
  %142 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %132, i64 0, i32 34, i32 1
  store i64 %64, i64* %142, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %139, i8* align 1 %62, i64 %64, i1 false) #11
  br label %145

143:                                              ; preds = %138
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.4, i64 0, i64 0), i32 324) #11
  store i8 80, i8* %1, align 1
  br label %144

144:                                              ; preds = %85, %143, %93
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %67) #11
  br label %146

145:                                              ; preds = %77, %126, %141, %123
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %67) #11
  br label %146

146:                                              ; preds = %57, %19, %60, %14, %145, %144
  %147 = phi i1 [ false, %144 ], [ true, %145 ], [ true, %14 ], [ true, %60 ], [ true, %19 ], [ true, %57 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #11
  br label %148

148:                                              ; preds = %3, %146
  %149 = phi i1 [ %147, %146 ], [ true, %3 ]
  ret i1 %149
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl26ssl_add_clienthello_tlsextEPNS_13SSL_HANDSHAKEEP6cbb_stm(%"struct.bssl::SSL_HANDSHAKE"*, %struct.cbb_st*, i64) local_unnamed_addr #0 {
  %4 = alloca %"struct.bssl::OPENSSL_timeval", align 8
  %5 = alloca [64 x i8], align 16
  %6 = alloca %struct.cbb_st, align 8
  %7 = alloca %struct.cbb_st, align 8
  %8 = alloca %struct.cbb_st, align 8
  %9 = alloca %struct.cbb_st, align 8
  %10 = alloca %struct.cbb_st, align 8
  %11 = alloca %struct.cbb_st, align 8
  %12 = alloca i8*, align 8
  %13 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %14 = load %struct.ssl_st*, %struct.ssl_st** %13, align 8
  %15 = bitcast %struct.cbb_st* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 32, i1 false)
  %16 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* %1, %struct.cbb_st* nonnull %11) #11
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %3
  call void @ERR_put_error(i32 16, i32 0, i32 68, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 3323) #11
  br label %260

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 15, i32 0
  store i32 0, i32* %20, align 8
  br label %28

21:                                               ; preds = %35
  %22 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %14, i64 0, i32 16, i32 0, i32 0, i32 0
  %23 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %22, align 8
  %24 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %23, i64 0, i32 77
  %25 = load i16, i16* %24, align 8
  %26 = and i16 %25, 32
  %27 = icmp eq i16 %26, 0
  br i1 %27, label %46, label %38

28:                                               ; preds = %35, %19
  %29 = phi i64 [ 0, %19 ], [ %36, %35 ]
  %30 = add nsw i64 %29, -13
  %31 = icmp ult i64 %30, 2
  br i1 %31, label %32, label %35

32:                                               ; preds = %28
  %33 = getelementptr inbounds [25 x %"struct.bssl::tls_extension"], [25 x %"struct.bssl::tls_extension"]* @_ZN4bsslL11kExtensionsE, i64 0, i64 %29, i32 1
  %34 = load void (%"struct.bssl::SSL_HANDSHAKE"*)*, void (%"struct.bssl::SSL_HANDSHAKE"*)** %33, align 8
  call void %34(%"struct.bssl::SSL_HANDSHAKE"* %0) #11
  br label %35

35:                                               ; preds = %28, %32
  %36 = add nuw nsw i64 %29, 1
  %37 = icmp eq i64 %36, 25
  br i1 %37, label %21, label %28

38:                                               ; preds = %21
  %39 = call zeroext i16 @_ZN4bssl20ssl_get_grease_valueEPNS_13SSL_HANDSHAKEENS_18ssl_grease_index_tE(%"struct.bssl::SSL_HANDSHAKE"* %0, i32 2) #11
  %40 = call i32 @CBB_add_u16(%struct.cbb_st* nonnull %11, i16 zeroext %39) #11
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %45, label %42

42:                                               ; preds = %38
  %43 = call i32 @CBB_add_u16(%struct.cbb_st* nonnull %11, i16 zeroext 0) #11
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42, %38
  call void @ERR_put_error(i32 16, i32 0, i32 68, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 3344) #11
  br label %260

46:                                               ; preds = %42, %21
  %47 = phi i16 [ %39, %42 ], [ 0, %21 ]
  br label %48

48:                                               ; preds = %63, %46
  %49 = phi i64 [ 0, %46 ], [ %64, %63 ]
  %50 = call i64 @CBB_len(%struct.cbb_st* nonnull %11) #11
  %51 = getelementptr inbounds [25 x %"struct.bssl::tls_extension"], [25 x %"struct.bssl::tls_extension"]* @_ZN4bsslL11kExtensionsE, i64 0, i64 %49, i32 2
  %52 = load i1 (%"struct.bssl::SSL_HANDSHAKE"*, %struct.cbb_st*)*, i1 (%"struct.bssl::SSL_HANDSHAKE"*, %struct.cbb_st*)** %51, align 16
  %53 = call zeroext i1 %52(%"struct.bssl::SSL_HANDSHAKE"* %0, %struct.cbb_st* nonnull %11) #11
  br i1 %53, label %54, label %66

54:                                               ; preds = %48
  %55 = call i64 @CBB_len(%struct.cbb_st* nonnull %11) #11
  %56 = sub i64 %55, %50
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %63, label %58

58:                                               ; preds = %54
  %59 = trunc i64 %49 to i32
  %60 = shl i32 1, %59
  %61 = load i32, i32* %20, align 8
  %62 = or i32 %61, %60
  store i32 %62, i32* %20, align 8
  br label %63

63:                                               ; preds = %58, %54
  %64 = add nuw nsw i64 %49, 1
  %65 = icmp eq i64 %64, 25
  br i1 %65, label %70, label %48

66:                                               ; preds = %48
  call void @ERR_put_error(i32 16, i32 0, i32 147, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 3353) #11
  %67 = getelementptr inbounds [25 x %"struct.bssl::tls_extension"], [25 x %"struct.bssl::tls_extension"]* @_ZN4bsslL11kExtensionsE, i64 0, i64 %49, i32 0
  %68 = load i16, i16* %67, align 16
  %69 = zext i16 %68 to i32
  call void (i8*, ...) @ERR_add_error_dataf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0), i32 %69) #11
  br label %260

70:                                               ; preds = %63
  %71 = icmp eq i64 %56, 4
  %72 = zext i1 %71 to i8
  %73 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %22, align 8
  %74 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %73, i64 0, i32 77
  %75 = load i16, i16* %74, align 8
  %76 = and i16 %75, 32
  %77 = icmp eq i16 %76, 0
  br i1 %77, label %92, label %78

78:                                               ; preds = %70
  %79 = call zeroext i16 @_ZN4bssl20ssl_get_grease_valueEPNS_13SSL_HANDSHAKEENS_18ssl_grease_index_tE(%"struct.bssl::SSL_HANDSHAKE"* %0, i32 3) #11
  %80 = icmp eq i16 %47, %79
  %81 = xor i16 %79, 4112
  %82 = select i1 %80, i16 %81, i16 %79
  %83 = call i32 @CBB_add_u16(%struct.cbb_st* nonnull %11, i16 zeroext %82) #11
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %91, label %85

85:                                               ; preds = %78
  %86 = call i32 @CBB_add_u16(%struct.cbb_st* nonnull %11, i16 zeroext 1) #11
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %91, label %88

88:                                               ; preds = %85
  %89 = call i32 @CBB_add_u8(%struct.cbb_st* nonnull %11, i8 zeroext 0) #11
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %78, %85, %88
  call void @ERR_put_error(i32 16, i32 0, i32 68, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 3381) #11
  br label %260

92:                                               ; preds = %88, %70
  %93 = phi i8 [ %72, %70 ], [ 0, %88 ]
  %94 = call i32 @SSL_is_dtls(%struct.ssl_st* %14) #11
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %160

96:                                               ; preds = %92
  %97 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %14, i64 0, i32 24
  %98 = load %struct.ssl_quic_method_st*, %struct.ssl_quic_method_st** %97, align 8
  %99 = icmp eq %struct.ssl_quic_method_st* %98, null
  br i1 %99, label %100, label %160

100:                                              ; preds = %96
  %101 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 6
  %102 = load i16, i16* %101, align 2
  %103 = icmp ult i16 %102, 772
  br i1 %103, label %121, label %104

104:                                              ; preds = %100
  %105 = load %struct.ssl_st*, %struct.ssl_st** %13, align 8
  %106 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %105, i64 0, i32 14, i32 0, i32 0, i32 0
  %107 = load %struct.ssl_session_st*, %struct.ssl_session_st** %106, align 8
  %108 = icmp eq %struct.ssl_session_st* %107, null
  br i1 %108, label %121, label %109

109:                                              ; preds = %104
  %110 = call zeroext i16 @_ZN4bssl28ssl_session_protocol_versionEPK14ssl_session_st(%struct.ssl_session_st* nonnull %107) #11
  %111 = icmp ult i16 %110, 772
  br i1 %111, label %121, label %112

112:                                              ; preds = %109
  %113 = load %struct.ssl_session_st*, %struct.ssl_session_st** %106, align 8
  %114 = call %struct.env_md_st* @_ZN4bssl22ssl_session_get_digestEPK14ssl_session_st(%struct.ssl_session_st* %113) #11
  %115 = call i64 @EVP_MD_size(%struct.env_md_st* %114) #11
  %116 = load %struct.ssl_session_st*, %struct.ssl_session_st** %106, align 8
  %117 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %116, i64 0, i32 24, i32 1
  %118 = load i64, i64* %117, align 8
  %119 = add i64 %115, 15
  %120 = add i64 %119, %118
  br label %121

121:                                              ; preds = %100, %104, %109, %112
  %122 = phi i64 [ %120, %112 ], [ 0, %109 ], [ 0, %104 ], [ 0, %100 ]
  %123 = call i64 @CBB_len(%struct.cbb_st* nonnull %11) #11
  %124 = add i64 %2, 2
  %125 = add i64 %124, %122
  %126 = add i64 %125, %123
  %127 = icmp ne i8 %93, 0
  %128 = icmp eq i64 %122, 0
  %129 = and i1 %127, %128
  %130 = add i64 %126, 5
  %131 = select i1 %129, i64 %130, i64 %126
  %132 = zext i1 %129 to i64
  %133 = and i64 %131, -256
  %134 = icmp eq i64 %133, 256
  br i1 %134, label %135, label %142

135:                                              ; preds = %121
  %136 = or i64 %132, 4
  %137 = select i1 %129, i64 %136, i64 0
  %138 = sub i64 %131, %137
  %139 = sub i64 512, %138
  %140 = icmp ugt i64 %139, 4
  %141 = sub i64 508, %138
  br i1 %140, label %142, label %145

142:                                              ; preds = %135, %121
  %143 = phi i64 [ %132, %121 ], [ %141, %135 ]
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %160, label %145

145:                                              ; preds = %135, %142
  %146 = phi i64 [ %143, %142 ], [ 1, %135 ]
  %147 = bitcast i8** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %147) #11
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %12, align 8
  %148 = call i32 @CBB_add_u16(%struct.cbb_st* nonnull %11, i16 zeroext 21) #11
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %159, label %150

150:                                              ; preds = %145
  %151 = trunc i64 %146 to i16
  %152 = call i32 @CBB_add_u16(%struct.cbb_st* nonnull %11, i16 zeroext %151) #11
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %159, label %154

154:                                              ; preds = %150
  %155 = call i32 @CBB_add_space(%struct.cbb_st* nonnull %11, i8** nonnull %12, i64 %146) #11
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %159, label %157

157:                                              ; preds = %154
  %158 = load i8*, i8** %12, align 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %158, i8 0, i64 %146, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %147) #11
  br label %160

159:                                              ; preds = %154, %150, %145
  call void @ERR_put_error(i32 16, i32 0, i32 68, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 3429) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %147) #11
  br label %260

160:                                              ; preds = %142, %157, %96, %92
  %161 = load %struct.ssl_st*, %struct.ssl_st** %13, align 8
  %162 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 46
  %163 = load i32, i32* %162, align 8
  %164 = and i32 %163, -17
  store i32 %164, i32* %162, align 8
  %165 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 6
  %166 = load i16, i16* %165, align 2
  %167 = icmp ult i16 %166, 772
  br i1 %167, label %253, label %168

168:                                              ; preds = %160
  %169 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %161, i64 0, i32 14, i32 0, i32 0, i32 0
  %170 = load %struct.ssl_session_st*, %struct.ssl_session_st** %169, align 8
  %171 = icmp eq %struct.ssl_session_st* %170, null
  br i1 %171, label %253, label %172

172:                                              ; preds = %168
  %173 = call zeroext i16 @_ZN4bssl28ssl_session_protocol_versionEPK14ssl_session_st(%struct.ssl_session_st* nonnull %170) #11
  %174 = icmp ult i16 %173, 772
  br i1 %174, label %253, label %175

175:                                              ; preds = %172
  %176 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %161, i64 0, i32 8
  %177 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %176, align 8
  %178 = icmp eq %"struct.bssl::SSL3_STATE"* %177, null
  br i1 %178, label %194, label %179

179:                                              ; preds = %175
  %180 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %177, i64 0, i32 23
  %181 = load i16, i16* %180, align 1
  %182 = icmp sgt i16 %181, -1
  br i1 %182, label %194, label %183

183:                                              ; preds = %179
  %184 = load %struct.ssl_session_st*, %struct.ssl_session_st** %169, align 8
  %185 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %184, i64 0, i32 20
  %186 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %185, align 8
  %187 = getelementptr inbounds %struct.ssl_cipher_st, %struct.ssl_cipher_st* %186, i64 0, i32 7
  %188 = load i32, i32* %187, align 4
  %189 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 43
  %190 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %189, align 8
  %191 = getelementptr inbounds %struct.ssl_cipher_st, %struct.ssl_cipher_st* %190, i64 0, i32 7
  %192 = load i32, i32* %191, align 4
  %193 = icmp eq i32 %188, %192
  br i1 %193, label %194, label %253

194:                                              ; preds = %183, %179, %175
  %195 = bitcast %"struct.bssl::OPENSSL_timeval"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %195) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %195, i8 -86, i64 16, i1 false) #11
  call void @_ZN4bssl20ssl_get_current_timeEPK6ssl_stPNS_15OPENSSL_timevalE(%struct.ssl_st* %161, %"struct.bssl::OPENSSL_timeval"* nonnull %4) #11
  %196 = getelementptr inbounds %"struct.bssl::OPENSSL_timeval", %"struct.bssl::OPENSSL_timeval"* %4, i64 0, i32 0
  %197 = load i64, i64* %196, align 8
  %198 = load %struct.ssl_session_st*, %struct.ssl_session_st** %169, align 8
  %199 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %198, i64 0, i32 19
  %200 = load i64, i64* %199, align 8
  %201 = sub i64 %197, %200
  %202 = trunc i64 %201 to i32
  %203 = mul i32 %202, 1000
  %204 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %198, i64 0, i32 31
  %205 = load i32, i32* %204, align 8
  %206 = add i32 %203, %205
  %207 = getelementptr inbounds [64 x i8], [64 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %207) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %207, i8 0, i64 64, i1 false) #11
  %208 = call %struct.env_md_st* @_ZN4bssl22ssl_session_get_digestEPK14ssl_session_st(%struct.ssl_session_st* %198) #11
  %209 = call i64 @EVP_MD_size(%struct.env_md_st* %208) #11
  %210 = bitcast %struct.cbb_st* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %210) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %210, i8 -86, i64 32, i1 false) #11
  %211 = bitcast %struct.cbb_st* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %211) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %211, i8 -86, i64 32, i1 false) #11
  %212 = bitcast %struct.cbb_st* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %212) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %212, i8 -86, i64 32, i1 false) #11
  %213 = bitcast %struct.cbb_st* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %213) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %213, i8 -86, i64 32, i1 false) #11
  %214 = bitcast %struct.cbb_st* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %214) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %214, i8 -86, i64 32, i1 false) #11
  %215 = call i32 @CBB_add_u16(%struct.cbb_st* nonnull %11, i16 zeroext 41) #11
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %251, label %217

217:                                              ; preds = %194
  %218 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* nonnull %11, %struct.cbb_st* nonnull %6) #11
  %219 = icmp eq i32 %218, 0
  br i1 %219, label %251, label %220

220:                                              ; preds = %217
  %221 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* nonnull %6, %struct.cbb_st* nonnull %7) #11
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %251, label %223

223:                                              ; preds = %220
  %224 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* nonnull %7, %struct.cbb_st* nonnull %8) #11
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %251, label %226

226:                                              ; preds = %223
  %227 = load %struct.ssl_session_st*, %struct.ssl_session_st** %169, align 8
  %228 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %227, i64 0, i32 24, i32 0
  %229 = load i8*, i8** %228, align 8
  %230 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %227, i64 0, i32 24, i32 1
  %231 = load i64, i64* %230, align 8
  %232 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %8, i8* %229, i64 %231) #11
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %251, label %234

234:                                              ; preds = %226
  %235 = call i32 @CBB_add_u32(%struct.cbb_st* nonnull %7, i32 %206) #11
  %236 = icmp eq i32 %235, 0
  br i1 %236, label %251, label %237

237:                                              ; preds = %234
  %238 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* nonnull %6, %struct.cbb_st* nonnull %9) #11
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %251, label %240

240:                                              ; preds = %237
  %241 = call i32 @CBB_add_u8_length_prefixed(%struct.cbb_st* nonnull %9, %struct.cbb_st* nonnull %10) #11
  %242 = icmp eq i32 %241, 0
  br i1 %242, label %251, label %243

243:                                              ; preds = %240
  %244 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %10, i8* nonnull %207, i64 %209) #11
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %251, label %246

246:                                              ; preds = %243
  %247 = load i32, i32* %162, align 8
  %248 = or i32 %247, 16
  store i32 %248, i32* %162, align 8
  %249 = call i32 @CBB_flush(%struct.cbb_st* nonnull %11) #11
  %250 = icmp eq i32 %249, 0
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %214) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %213) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %212) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %211) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %210) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %207) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %195) #11
  br i1 %250, label %252, label %253

251:                                              ; preds = %194, %217, %220, %223, %226, %234, %237, %240, %243
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %214) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %213) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %212) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %211) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %210) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %207) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %195) #11
  br label %252

252:                                              ; preds = %251, %246
  call void @ERR_put_error(i32 16, i32 0, i32 68, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 3439) #11
  br label %260

253:                                              ; preds = %246, %183, %160, %168, %172
  %254 = call i64 @CBB_len(%struct.cbb_st* nonnull %11) #11
  %255 = icmp eq i64 %254, 0
  br i1 %255, label %256, label %257

256:                                              ; preds = %253
  call void @CBB_discard_child(%struct.cbb_st* %1) #11
  br label %257

257:                                              ; preds = %256, %253
  %258 = call i32 @CBB_flush(%struct.cbb_st* %1) #11
  %259 = icmp ne i32 %258, 0
  br label %260

260:                                              ; preds = %159, %91, %66, %45, %257, %252, %18
  %261 = phi i1 [ false, %18 ], [ false, %45 ], [ %259, %257 ], [ false, %252 ], [ false, %159 ], [ false, %91 ], [ false, %66 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #11
  ret i1 %261
}

declare zeroext i16 @_ZN4bssl20ssl_get_grease_valueEPNS_13SSL_HANDSHAKEENS_18ssl_grease_index_tE(%"struct.bssl::SSL_HANDSHAKE"*, i32) local_unnamed_addr #2

declare i64 @CBB_len(%struct.cbb_st*) local_unnamed_addr #2

declare void @ERR_add_error_dataf(i8*, ...) local_unnamed_addr #2

declare i32 @CBB_add_u8(%struct.cbb_st*, i8 zeroext) local_unnamed_addr #2

declare i32 @CBB_add_space(%struct.cbb_st*, i8**, i64) local_unnamed_addr #2

declare void @CBB_discard_child(%struct.cbb_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl26ssl_add_serverhello_tlsextEPNS_13SSL_HANDSHAKEEP6cbb_st(%"struct.bssl::SSL_HANDSHAKE"*, %struct.cbb_st*) local_unnamed_addr #0 {
  %3 = alloca %struct.cbb_st, align 8
  %4 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %5 = load %struct.ssl_st*, %struct.ssl_st** %4, align 8
  %6 = bitcast %struct.cbb_st* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 32, i1 false)
  %7 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* %1, %struct.cbb_st* nonnull %3) #11
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %39, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 15, i32 0
  br label %11

11:                                               ; preds = %22, %9
  %12 = phi i64 [ 0, %9 ], [ %23, %22 ]
  %13 = load i32, i32* %10, align 8
  %14 = trunc i64 %12 to i32
  %15 = shl i32 1, %14
  %16 = and i32 %13, %15
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %22, label %18

18:                                               ; preds = %11
  %19 = getelementptr inbounds [25 x %"struct.bssl::tls_extension"], [25 x %"struct.bssl::tls_extension"]* @_ZN4bsslL11kExtensionsE, i64 0, i64 %12, i32 5
  %20 = load i1 (%"struct.bssl::SSL_HANDSHAKE"*, %struct.cbb_st*)*, i1 (%"struct.bssl::SSL_HANDSHAKE"*, %struct.cbb_st*)** %19, align 8
  %21 = call zeroext i1 %20(%"struct.bssl::SSL_HANDSHAKE"* %0, %struct.cbb_st* nonnull %3) #11
  br i1 %21, label %22, label %25

22:                                               ; preds = %11, %18
  %23 = add nuw nsw i64 %12, 1
  %24 = icmp eq i64 %23, 25
  br i1 %24, label %29, label %11

25:                                               ; preds = %18
  call void @ERR_put_error(i32 16, i32 0, i32 147, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 3465) #11
  %26 = getelementptr inbounds [25 x %"struct.bssl::tls_extension"], [25 x %"struct.bssl::tls_extension"]* @_ZN4bsslL11kExtensionsE, i64 0, i64 %12, i32 0
  %27 = load i16, i16* %26, align 16
  %28 = zext i16 %27 to i32
  call void (i8*, ...) @ERR_add_error_dataf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0), i32 %28) #11
  br label %39

29:                                               ; preds = %22
  %30 = call zeroext i16 @_ZN4bssl20ssl_protocol_versionEPK6ssl_st(%struct.ssl_st* %5) #11
  %31 = icmp ult i16 %30, 772
  br i1 %31, label %32, label %36

32:                                               ; preds = %29
  %33 = call i64 @CBB_len(%struct.cbb_st* nonnull %3) #11
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  call void @CBB_discard_child(%struct.cbb_st* %1) #11
  br label %36

36:                                               ; preds = %35, %32, %29
  %37 = call i32 @CBB_flush(%struct.cbb_st* %1) #11
  %38 = icmp ne i32 %37, 0
  br label %40

39:                                               ; preds = %25, %2
  call void @ERR_put_error(i32 16, i32 0, i32 68, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 3480) #11
  br label %40

40:                                               ; preds = %39, %36
  %41 = phi i1 [ false, %39 ], [ %38, %36 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #11
  ret i1 %41
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl28ssl_parse_clienthello_tlsextEPNS_13SSL_HANDSHAKEEPK22ssl_early_callback_ctx(%"struct.bssl::SSL_HANDSHAKE"*, %struct.ssl_early_callback_ctx*) local_unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.cbs_st, align 8
  %5 = alloca i16, align 2
  %6 = alloca %struct.cbs_st, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8, align 1
  %9 = alloca %struct.cbs_st, align 8
  %10 = alloca i8, align 1
  %11 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %12 = load %struct.ssl_st*, %struct.ssl_st** %11, align 8
  br label %26

13:                                               ; preds = %33
  %14 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 15, i32 0
  store i32 0, i32* %14, align 8
  %15 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #11
  %16 = getelementptr inbounds %struct.ssl_early_callback_ctx, %struct.ssl_early_callback_ctx* %1, i64 0, i32 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 16, i1 false) #11
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds %struct.ssl_early_callback_ctx, %struct.ssl_early_callback_ctx* %1, i64 0, i32 13
  %19 = load i64, i64* %18, align 8
  call void @CBS_init(%struct.cbs_st* nonnull %4, i8* %17, i64 %19) #11
  %20 = call i64 @CBS_len(%struct.cbs_st* nonnull %4) #11
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %36, label %22

22:                                               ; preds = %13
  %23 = bitcast i16* %5 to i8*
  %24 = bitcast %struct.cbs_st* %6 to i8*
  %25 = bitcast i32* %7 to i8*
  br label %38

26:                                               ; preds = %33, %2
  %27 = phi i64 [ 0, %2 ], [ %34, %33 ]
  %28 = add nsw i64 %27, -13
  %29 = icmp ult i64 %28, 2
  br i1 %29, label %30, label %33

30:                                               ; preds = %26
  %31 = getelementptr inbounds [25 x %"struct.bssl::tls_extension"], [25 x %"struct.bssl::tls_extension"]* @_ZN4bsslL11kExtensionsE, i64 0, i64 %27, i32 1
  %32 = load void (%"struct.bssl::SSL_HANDSHAKE"*)*, void (%"struct.bssl::SSL_HANDSHAKE"*)** %31, align 8
  tail call void %32(%"struct.bssl::SSL_HANDSHAKE"* %0) #11
  br label %33

33:                                               ; preds = %30, %26
  %34 = add nuw nsw i64 %27, 1
  %35 = icmp eq i64 %34, 25
  br i1 %35, label %13, label %26

36:                                               ; preds = %58, %13
  %37 = bitcast %struct.cbs_st* %9 to i8*
  br label %61

38:                                               ; preds = %58, %22
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %23) #11
  store i16 -21846, i16* %5, align 2
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 16, i1 false) #11
  %39 = call i32 @CBS_get_u16(%struct.cbs_st* nonnull %4, i16* nonnull %5) #11
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %38
  %42 = call i32 @CBS_get_u16_length_prefixed(%struct.cbs_st* nonnull %4, %struct.cbs_st* nonnull %6) #11
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %41, %38
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %23) #11
  br label %93

45:                                               ; preds = %41
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %25) #11
  store i32 -1431655766, i32* %7, align 4
  %46 = load i16, i16* %5, align 2
  %47 = call fastcc %"struct.bssl::tls_extension"* @_ZN4bsslL18tls_extension_findEPjt(i32* nonnull %7, i16 zeroext %46) #11
  %48 = icmp eq %"struct.bssl::tls_extension"* %47, null
  br i1 %48, label %58, label %49

49:                                               ; preds = %45
  %50 = load i32, i32* %7, align 4
  %51 = shl i32 1, %50
  %52 = load i32, i32* %14, align 8
  %53 = or i32 %52, %51
  store i32 %53, i32* %14, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #11
  store i8 50, i8* %8, align 1
  %54 = getelementptr inbounds %"struct.bssl::tls_extension", %"struct.bssl::tls_extension"* %47, i64 0, i32 4
  %55 = load i1 (%"struct.bssl::SSL_HANDSHAKE"*, i8*, %struct.cbs_st*)*, i1 (%"struct.bssl::SSL_HANDSHAKE"*, i8*, %struct.cbs_st*)** %54, align 8
  %56 = call zeroext i1 %55(%"struct.bssl::SSL_HANDSHAKE"* %0, i8* nonnull %8, %struct.cbs_st* nonnull %6) #11
  br i1 %56, label %57, label %89

57:                                               ; preds = %49
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #11
  br label %58

58:                                               ; preds = %45, %57
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %23) #11
  %59 = call i64 @CBS_len(%struct.cbs_st* nonnull %4) #11
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %36, label %38

61:                                               ; preds = %81, %36
  %62 = phi i64 [ 0, %36 ], [ %82, %81 ]
  %63 = load i32, i32* %14, align 8
  %64 = trunc i64 %62 to i32
  %65 = shl i32 1, %64
  %66 = and i32 %65, %63
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %81

68:                                               ; preds = %61
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #11
  %69 = icmp eq i64 %62, 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 16, i1 false) #11
  br i1 %69, label %70, label %75

70:                                               ; preds = %68
  %71 = call zeroext i1 @_ZN4bssl38ssl_client_cipher_list_contains_cipherEPK22ssl_early_callback_ctxt(%struct.ssl_early_callback_ctx* %1, i16 zeroext 255) #11
  br i1 %71, label %72, label %75

72:                                               ; preds = %70
  call void @CBS_init(%struct.cbs_st* nonnull %9, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @_ZZN4bsslL27ssl_scan_clienthello_tlsextEPNS_13SSL_HANDSHAKEEPK22ssl_early_callback_ctxPiE25kFakeRenegotiateExtension, i64 0, i64 0), i64 1) #11
  %73 = load i32, i32* %14, align 8
  %74 = or i32 %73, %65
  store i32 %74, i32* %14, align 8
  br label %75

75:                                               ; preds = %72, %70, %68
  %76 = phi %struct.cbs_st* [ %9, %72 ], [ null, %70 ], [ null, %68 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #11
  store i8 50, i8* %10, align 1
  %77 = getelementptr inbounds [25 x %"struct.bssl::tls_extension"], [25 x %"struct.bssl::tls_extension"]* @_ZN4bsslL11kExtensionsE, i64 0, i64 %62, i32 4
  %78 = load i1 (%"struct.bssl::SSL_HANDSHAKE"*, i8*, %struct.cbs_st*)*, i1 (%"struct.bssl::SSL_HANDSHAKE"*, i8*, %struct.cbs_st*)** %77, align 16
  %79 = call zeroext i1 %78(%"struct.bssl::SSL_HANDSHAKE"* %0, i8* nonnull %10, %struct.cbs_st* %76) #11
  br i1 %79, label %80, label %84

80:                                               ; preds = %75
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #11
  br label %81

81:                                               ; preds = %80, %61
  %82 = add nuw nsw i64 %62, 1
  %83 = icmp eq i64 %82, 25
  br i1 %83, label %96, label %61

84:                                               ; preds = %75
  %85 = getelementptr inbounds [25 x %"struct.bssl::tls_extension"], [25 x %"struct.bssl::tls_extension"]* @_ZN4bsslL11kExtensionsE, i64 0, i64 %62, i32 0
  call void @ERR_put_error(i32 16, i32 0, i32 164, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 3546) #11
  %86 = load i16, i16* %85, align 16
  %87 = zext i16 %86 to i32
  call void (i8*, ...) @ERR_add_error_dataf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0), i32 %87) #11
  %88 = load i8, i8* %10, align 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #11
  br label %93

89:                                               ; preds = %49
  %90 = load i8, i8* %8, align 1
  call void @ERR_put_error(i32 16, i32 0, i32 149, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 3518) #11
  %91 = load i16, i16* %5, align 2
  %92 = zext i16 %91 to i32
  call void (i8*, ...) @ERR_add_error_dataf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0), i32 %92) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %23) #11
  br label %93

93:                                               ; preds = %44, %84, %89
  %94 = phi i8 [ %90, %89 ], [ 50, %44 ], [ %88, %84 ]
  %95 = zext i8 %94 to i32
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #11
  call void @_ZN4bssl14ssl_send_alertEP6ssl_stii(%struct.ssl_st* %12, i32 2, i32 %95) #11
  br label %127

96:                                               ; preds = %81
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #11
  %97 = load %struct.ssl_st*, %struct.ssl_st** %11, align 8
  %98 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %98) #11
  store i32 112, i32* %3, align 4
  %99 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %97, i64 0, i32 16, i32 0, i32 0, i32 0
  %100 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %99, align 8
  %101 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %100, i64 0, i32 50
  %102 = load i32 (%struct.ssl_st*, i32*, i8*)*, i32 (%struct.ssl_st*, i32*, i8*)** %101, align 8
  %103 = icmp eq i32 (%struct.ssl_st*, i32*, i8*)* %102, null
  br i1 %103, label %108, label %104

104:                                              ; preds = %96
  %105 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %100, i64 0, i32 51
  %106 = load i8*, i8** %105, align 8
  %107 = call i32 %102(%struct.ssl_st* %97, i32* nonnull %3, i8* %106) #11
  br label %118

108:                                              ; preds = %96
  %109 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %97, i64 0, i32 17, i32 0, i32 0, i32 0
  %110 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %109, align 8
  %111 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %110, i64 0, i32 50
  %112 = load i32 (%struct.ssl_st*, i32*, i8*)*, i32 (%struct.ssl_st*, i32*, i8*)** %111, align 8
  %113 = icmp eq i32 (%struct.ssl_st*, i32*, i8*)* %112, null
  br i1 %113, label %120, label %114

114:                                              ; preds = %108
  %115 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %110, i64 0, i32 51
  %116 = load i8*, i8** %115, align 8
  %117 = call i32 %112(%struct.ssl_st* %97, i32* nonnull %3, i8* %116) #11
  br label %118

118:                                              ; preds = %114, %104
  %119 = phi i32 [ %107, %104 ], [ %117, %114 ]
  switch i32 %119, label %124 [
    i32 2, label %125
    i32 3, label %120
  ]

120:                                              ; preds = %118, %108
  %121 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 46
  %122 = load i32, i32* %121, align 8
  %123 = and i32 %122, -2049
  store i32 %123, i32* %121, align 8
  br label %124

124:                                              ; preds = %120, %118
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %98) #11
  br label %127

125:                                              ; preds = %118
  %126 = load i32, i32* %3, align 4
  call void @_ZN4bssl14ssl_send_alertEP6ssl_stii(%struct.ssl_st* %97, i32 2, i32 %126) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %98) #11
  call void @ERR_put_error(i32 16, i32 0, i32 132, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 3566) #11
  br label %127

127:                                              ; preds = %124, %125, %93
  %128 = phi i1 [ false, %125 ], [ false, %93 ], [ true, %124 ]
  ret i1 %128
}

declare void @_ZN4bssl14ssl_send_alertEP6ssl_stii(%struct.ssl_st*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl28ssl_parse_serverhello_tlsextEPNS_13SSL_HANDSHAKEEP6cbs_st(%"struct.bssl::SSL_HANDSHAKE"*, %struct.cbs_st*) local_unnamed_addr #0 {
  %3 = alloca %struct.cbs_st, align 8
  %4 = alloca i16, align 2
  %5 = alloca %struct.cbs_st, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %9 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %10 = load %struct.ssl_st*, %struct.ssl_st** %9, align 8
  %11 = tail call i64 @CBS_len(%struct.cbs_st* %1) #11
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %2
  %14 = tail call zeroext i16 @_ZN4bssl20ssl_protocol_versionEPK6ssl_st(%struct.ssl_st* %10) #11
  %15 = icmp ult i16 %14, 772
  br i1 %15, label %96, label %16

16:                                               ; preds = %13, %2
  %17 = bitcast %struct.cbs_st* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 16, i1 false) #11
  %18 = call i32 @CBS_get_u16_length_prefixed(%struct.cbs_st* %1, %struct.cbs_st* nonnull %3) #11
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %94, label %20

20:                                               ; preds = %16
  %21 = call fastcc zeroext i1 @_ZN4bsslL31tls1_check_duplicate_extensionsEPK6cbs_st(%struct.cbs_st* nonnull %3) #11
  br i1 %21, label %22, label %94

22:                                               ; preds = %20
  %23 = bitcast i16* %4 to i8*
  %24 = bitcast %struct.cbs_st* %5 to i8*
  %25 = bitcast i32* %6 to i8*
  %26 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 15, i32 0
  br label %27

27:                                               ; preds = %68, %22
  %28 = phi i32 [ 50, %22 ], [ %69, %68 ]
  %29 = phi i32 [ 0, %22 ], [ %71, %68 ]
  %30 = call i64 @CBS_len(%struct.cbs_st* nonnull %3) #11
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %73, label %32

32:                                               ; preds = %27
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %23) #11
  store i16 -21846, i16* %4, align 2
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 16, i1 false) #11
  %33 = call i32 @CBS_get_u16(%struct.cbs_st* nonnull %3, i16* nonnull %4) #11
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %38, label %35

35:                                               ; preds = %32
  %36 = call i32 @CBS_get_u16_length_prefixed(%struct.cbs_st* nonnull %3, %struct.cbs_st* nonnull %5) #11
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %35, %32
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %23) #11
  br label %94

39:                                               ; preds = %35
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %25) #11
  store i32 -1431655766, i32* %6, align 4
  %40 = load i16, i16* %4, align 2
  %41 = call fastcc %"struct.bssl::tls_extension"* @_ZN4bsslL18tls_extension_findEPjt(i32* nonnull %6, i16 zeroext %40) #11
  %42 = icmp eq %"struct.bssl::tls_extension"* %41, null
  br i1 %42, label %43, label %46

43:                                               ; preds = %39
  call void @ERR_put_error(i32 16, i32 0, i32 222, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 3606) #11
  %44 = load i16, i16* %4, align 2
  %45 = zext i16 %44 to i32
  call void (i8*, ...) @ERR_add_error_dataf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0), i32 %45) #11
  br label %68

46:                                               ; preds = %39
  %47 = load i32, i32* %26, align 8
  %48 = load i32, i32* %6, align 4
  %49 = shl i32 1, %48
  %50 = and i32 %49, %47
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %46
  call void @ERR_put_error(i32 16, i32 0, i32 222, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 3617) #11
  %53 = load i16, i16* %4, align 2
  %54 = zext i16 %53 to i32
  call void (i8*, ...) @ERR_add_error_dataf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0), i32 %54) #11
  br label %68

55:                                               ; preds = %46
  %56 = or i32 %49, %29
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #11
  store i8 50, i8* %7, align 1
  %57 = getelementptr inbounds %"struct.bssl::tls_extension", %"struct.bssl::tls_extension"* %41, i64 0, i32 3
  %58 = load i1 (%"struct.bssl::SSL_HANDSHAKE"*, i8*, %struct.cbs_st*)*, i1 (%"struct.bssl::SSL_HANDSHAKE"*, i8*, %struct.cbs_st*)** %57, align 8
  %59 = call zeroext i1 %58(%"struct.bssl::SSL_HANDSHAKE"* %0, i8* nonnull %7, %struct.cbs_st* nonnull %5) #11
  br i1 %59, label %65, label %60

60:                                               ; preds = %55
  call void @ERR_put_error(i32 16, i32 0, i32 149, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 3627) #11
  %61 = load i16, i16* %4, align 2
  %62 = zext i16 %61 to i32
  call void (i8*, ...) @ERR_add_error_dataf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0), i32 %62) #11
  %63 = load i8, i8* %7, align 1
  %64 = zext i8 %63 to i32
  br label %65

65:                                               ; preds = %60, %55
  %66 = phi i32 [ %28, %55 ], [ %64, %60 ]
  %67 = phi i32 [ 0, %55 ], [ 1, %60 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #11
  br label %68

68:                                               ; preds = %65, %52, %43
  %69 = phi i32 [ 110, %43 ], [ 110, %52 ], [ %66, %65 ]
  %70 = phi i32 [ 1, %43 ], [ 1, %52 ], [ %67, %65 ]
  %71 = phi i32 [ %29, %43 ], [ %29, %52 ], [ %56, %65 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %23) #11
  %72 = icmp eq i32 %70, 0
  br i1 %72, label %27, label %94

73:                                               ; preds = %27, %84
  %74 = phi i64 [ %85, %84 ], [ 0, %27 ]
  %75 = trunc i64 %74 to i32
  %76 = shl i32 1, %75
  %77 = and i32 %76, %29
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %84

79:                                               ; preds = %73
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #11
  store i8 50, i8* %8, align 1
  %80 = getelementptr inbounds [25 x %"struct.bssl::tls_extension"], [25 x %"struct.bssl::tls_extension"]* @_ZN4bsslL11kExtensionsE, i64 0, i64 %74, i32 3
  %81 = load i1 (%"struct.bssl::SSL_HANDSHAKE"*, i8*, %struct.cbs_st*)*, i1 (%"struct.bssl::SSL_HANDSHAKE"*, i8*, %struct.cbs_st*)** %80, align 8
  %82 = call zeroext i1 %81(%"struct.bssl::SSL_HANDSHAKE"* %0, i8* nonnull %8, %struct.cbs_st* null) #11
  br i1 %82, label %83, label %87

83:                                               ; preds = %79
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #11
  br label %84

84:                                               ; preds = %83, %73
  %85 = add nuw nsw i64 %74, 1
  %86 = icmp eq i64 %85, 25
  br i1 %86, label %93, label %73

87:                                               ; preds = %79
  call void @ERR_put_error(i32 16, i32 0, i32 164, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 3640) #11
  %88 = getelementptr inbounds [25 x %"struct.bssl::tls_extension"], [25 x %"struct.bssl::tls_extension"]* @_ZN4bsslL11kExtensionsE, i64 0, i64 %74, i32 0
  %89 = load i16, i16* %88, align 16
  %90 = zext i16 %89 to i32
  call void (i8*, ...) @ERR_add_error_dataf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0), i32 %90) #11
  %91 = load i8, i8* %8, align 1
  %92 = zext i8 %91 to i32
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #11
  br label %94

93:                                               ; preds = %84
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #11
  br label %96

94:                                               ; preds = %68, %38, %87, %20, %16
  %95 = phi i32 [ 50, %16 ], [ 50, %20 ], [ 50, %38 ], [ %92, %87 ], [ %69, %68 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #11
  call void @_ZN4bssl14ssl_send_alertEP6ssl_stii(%struct.ssl_st* %10, i32 2, i32 %95) #11
  br label %167

96:                                               ; preds = %13, %93
  %97 = load %struct.ssl_st*, %struct.ssl_st** %9, align 8
  %98 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 40, i32 0, i32 0, i32 0
  %99 = load %struct.ssl_session_st*, %struct.ssl_session_st** %98, align 8
  %100 = icmp eq %struct.ssl_session_st* %99, null
  br i1 %100, label %167, label %101

101:                                              ; preds = %96
  %102 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %99, i64 0, i32 36
  %103 = load i8, i8* %102, align 8
  %104 = and i8 %103, 64
  %105 = icmp eq i8 %104, 0
  br i1 %105, label %167, label %106

106:                                              ; preds = %101
  %107 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %97, i64 0, i32 8
  %108 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %107, align 8
  %109 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %108, i64 0, i32 49, i32 1
  %110 = load i64, i64* %109, align 8
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %106
  call void @ERR_put_error(i32 16, i32 0, i32 308, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 3683) #11
  call void @_ZN4bssl14ssl_send_alertEP6ssl_stii(%struct.ssl_st* %97, i32 2, i32 47) #11
  br label %167

113:                                              ; preds = %106
  %114 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %108, i64 0, i32 49, i32 0
  %115 = load i8*, i8** %114, align 8
  %116 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 1
  %117 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %116, align 8
  %118 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %117, i64 0, i32 17, i32 1, i32 0
  %119 = load %"struct.bssl::ALPSConfig"*, %"struct.bssl::ALPSConfig"** %118, align 8
  %120 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %117, i64 0, i32 17, i32 0
  %121 = load i64, i64* %120, align 8
  %122 = getelementptr inbounds %"struct.bssl::ALPSConfig", %"struct.bssl::ALPSConfig"* %119, i64 %121
  %123 = icmp eq i64 %121, 0
  br i1 %123, label %150, label %124

124:                                              ; preds = %113
  %125 = getelementptr inbounds i8, i8* %115, i64 %110
  br label %126

126:                                              ; preds = %147, %124
  %127 = phi %"struct.bssl::ALPSConfig"* [ %119, %124 ], [ %148, %147 ]
  %128 = getelementptr inbounds %"struct.bssl::ALPSConfig", %"struct.bssl::ALPSConfig"* %127, i64 0, i32 0, i32 0
  %129 = load i8*, i8** %128, align 8
  %130 = getelementptr inbounds %"struct.bssl::ALPSConfig", %"struct.bssl::ALPSConfig"* %127, i64 0, i32 0, i32 1
  %131 = load i64, i64* %130, align 8
  %132 = icmp eq i64 %131, %110
  br i1 %132, label %133, label %147

133:                                              ; preds = %126
  %134 = getelementptr inbounds i8, i8* %129, i64 %110
  br label %135

135:                                              ; preds = %141, %133
  %136 = phi i8* [ %143, %141 ], [ %129, %133 ]
  %137 = phi i8* [ %142, %141 ], [ %115, %133 ]
  %138 = load i8, i8* %137, align 1
  %139 = load i8, i8* %136, align 1
  %140 = icmp eq i8 %138, %139
  br i1 %140, label %141, label %147

141:                                              ; preds = %135
  %142 = getelementptr inbounds i8, i8* %137, i64 1
  %143 = getelementptr inbounds i8, i8* %136, i64 1
  %144 = icmp eq i8* %142, %125
  %145 = icmp eq i8* %143, %134
  %146 = or i1 %145, %144
  br i1 %146, label %151, label %135

147:                                              ; preds = %135, %126
  %148 = getelementptr inbounds %"struct.bssl::ALPSConfig", %"struct.bssl::ALPSConfig"* %127, i64 1
  %149 = icmp eq %"struct.bssl::ALPSConfig"* %148, %122
  br i1 %149, label %150, label %126

150:                                              ; preds = %147, %113
  call void @ERR_put_error(i32 16, i32 0, i32 259, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 3692) #11
  call void @_ZN4bssl14ssl_send_alertEP6ssl_stii(%struct.ssl_st* %97, i32 2, i32 47) #11
  br label %167

151:                                              ; preds = %141
  %152 = getelementptr inbounds %"struct.bssl::ALPSConfig", %"struct.bssl::ALPSConfig"* %127, i64 0, i32 1, i32 0
  %153 = load i8*, i8** %152, align 8
  %154 = getelementptr inbounds %"struct.bssl::ALPSConfig", %"struct.bssl::ALPSConfig"* %127, i64 0, i32 1, i32 1
  %155 = load i64, i64* %154, align 8
  %156 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %99, i64 0, i32 34
  %157 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %156, i64 0, i32 0
  %158 = load i8*, i8** %157, align 8
  call void @OPENSSL_free(i8* %158) #11
  %159 = bitcast %"class.bssl::Array"* %156 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %159, i8 0, i64 16, i1 false) #11
  %160 = icmp eq i64 %155, 0
  br i1 %160, label %167, label %161

161:                                              ; preds = %151
  %162 = call i8* @OPENSSL_malloc(i64 %155) #11
  store i8* %162, i8** %157, align 8
  %163 = icmp eq i8* %162, null
  br i1 %163, label %166, label %164

164:                                              ; preds = %161
  %165 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %99, i64 0, i32 34, i32 1
  store i64 %155, i64* %165, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %162, i8* align 1 %153, i64 %155, i1 false) #11
  br label %167

166:                                              ; preds = %161
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.4, i64 0, i64 0), i32 324) #11
  call void @_ZN4bssl14ssl_send_alertEP6ssl_stii(%struct.ssl_st* %97, i32 2, i32 80) #11
  br label %167

167:                                              ; preds = %112, %150, %166, %101, %96, %164, %151, %94
  %168 = phi i1 [ false, %94 ], [ false, %112 ], [ false, %150 ], [ false, %166 ], [ true, %101 ], [ true, %96 ], [ true, %164 ], [ true, %151 ]
  ret i1 %168
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4bssl18ssl_process_ticketEPNS_13SSL_HANDSHAKEEPNSt3__110unique_ptrI14ssl_session_stNS_8internal7DeleterIS4_EEEEPbNS_4SpanIKhEESD_(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly, %"class.std::__1::unique_ptr.58"* nocapture, i8* nocapture, i8*, i64, %"class.bssl::Span.1"* nocapture readonly byval(%"class.bssl::Span.1") align 8) local_unnamed_addr #0 {
  %7 = alloca %"class.bssl::internal::StackAllocated.152", align 8
  %8 = alloca %"class.bssl::internal::StackAllocated.153", align 8
  %9 = alloca %"class.bssl::internal::StackAllocated.152", align 8
  %10 = alloca %"class.bssl::internal::StackAllocated.153", align 8
  %11 = alloca i64, align 8
  %12 = alloca %"class.bssl::Array", align 8
  %13 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %14 = load %struct.ssl_st*, %struct.ssl_st** %13, align 8
  store i8 0, i8* %2, align 1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.58", %"class.std::__1::unique_ptr.58"* %1, i64 0, i32 0, i32 0, i32 0
  %16 = load %struct.ssl_session_st*, %struct.ssl_session_st** %15, align 8
  store %struct.ssl_session_st* null, %struct.ssl_session_st** %15, align 8
  %17 = icmp eq %struct.ssl_session_st* %16, null
  br i1 %17, label %19, label %18

18:                                               ; preds = %6
  tail call void @SSL_SESSION_free(%struct.ssl_session_st* nonnull %16) #11
  br label %19

19:                                               ; preds = %6, %18
  %20 = load %struct.ssl_st*, %struct.ssl_st** %13, align 8
  %21 = tail call i32 @SSL_get_options(%struct.ssl_st* %20) #11
  %22 = and i32 %21, 16384
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %240

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.bssl::Span.1", %"class.bssl::Span.1"* %5, i64 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = icmp ugt i64 %26, 32
  br i1 %27, label %240, label %28

28:                                               ; preds = %24
  %29 = tail call zeroext i16 @_ZN4bssl20ssl_protocol_versionEPK6ssl_st(%struct.ssl_st* %14) #11
  %30 = icmp ugt i16 %29, 771
  %31 = bitcast %"class.bssl::Array"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #11
  %32 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %12, i64 0, i32 0
  %33 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %12, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 0, i64 16, i1 false) #11
  %34 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 45, i32 0, i32 0, i32 0
  %35 = load %"struct.bssl::SSL_HANDSHAKE_HINTS"*, %"struct.bssl::SSL_HANDSHAKE_HINTS"** %34, align 8
  %36 = icmp ne %"struct.bssl::SSL_HANDSHAKE_HINTS"* %35, null
  %37 = and i1 %30, %36
  br i1 %37, label %38, label %59

38:                                               ; preds = %28
  %39 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 46
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, 8388608
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %59

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %35, i64 0, i32 10, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %35, i64 0, i32 10, i32 0
  %49 = load i8*, i8** %48, align 8
  tail call void @OPENSSL_free(i8* null) #11
  %50 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %12, i64 0, i32 1
  store i64 0, i64* %50, align 8
  %51 = tail call i8* @OPENSSL_malloc(i64 %45) #11
  store i8* %51, i8** %32, align 8
  %52 = icmp eq i8* %51, null
  br i1 %52, label %53, label %54

53:                                               ; preds = %47
  tail call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.4, i64 0, i64 0), i32 324) #11
  br label %186

54:                                               ; preds = %47
  store i64 %45, i64* %33, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %51, i8* align 1 %49, i64 %45, i1 false) #11
  br label %186

55:                                               ; preds = %43
  %56 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %35, i64 0, i32 11
  %57 = load i8, i8* %56, align 8, !range !2
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %59, label %186

59:                                               ; preds = %38, %28, %55
  %60 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %14, i64 0, i32 17, i32 0, i32 0, i32 0
  %61 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %60, align 8
  %62 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %61, i64 0, i32 73
  %63 = load %struct.ssl_ticket_aead_method_st*, %struct.ssl_ticket_aead_method_st** %62, align 8
  %64 = icmp eq %struct.ssl_ticket_aead_method_st* %63, null
  br i1 %64, label %97, label %65

65:                                               ; preds = %59
  tail call void @OPENSSL_free(i8* null) #11
  %66 = icmp eq i64 %4, 0
  br i1 %66, label %72, label %67

67:                                               ; preds = %65
  %68 = tail call i8* @OPENSSL_malloc(i64 %4) #11
  %69 = ptrtoint i8* %68 to i64
  %70 = icmp eq i8* %68, null
  br i1 %70, label %71, label %72

71:                                               ; preds = %67
  tail call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.4, i64 0, i64 0), i32 324) #11
  tail call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 3847) #11
  br label %93

72:                                               ; preds = %67, %65
  %73 = phi i64 [ %69, %67 ], [ 0, %65 ]
  %74 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #11
  store i64 -6148914691236517206, i64* %11, align 8
  %75 = load %struct.ssl_st*, %struct.ssl_st** %13, align 8
  %76 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %75, i64 0, i32 17, i32 0, i32 0, i32 0
  %77 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %76, align 8
  %78 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %77, i64 0, i32 73
  %79 = load %struct.ssl_ticket_aead_method_st*, %struct.ssl_ticket_aead_method_st** %78, align 8
  %80 = getelementptr inbounds %struct.ssl_ticket_aead_method_st, %struct.ssl_ticket_aead_method_st* %79, i64 0, i32 2
  %81 = load i32 (%struct.ssl_st*, i8*, i64*, i64, i8*, i64)*, i32 (%struct.ssl_st*, i8*, i64*, i64, i8*, i64)** %80, align 8
  %82 = inttoptr i64 %73 to i8*
  %83 = call i32 %81(%struct.ssl_st* %75, i8* %82, i64* nonnull %11, i64 %4, i8* %3, i64 %4) #11
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %91

85:                                               ; preds = %72
  %86 = load i64, i64* %11, align 8
  %87 = icmp ugt i64 %86, %4
  br i1 %87, label %88, label %89

88:                                               ; preds = %85
  call void @abort() #13
  unreachable

89:                                               ; preds = %85
  call void @OPENSSL_free(i8* null) #11
  %90 = bitcast %"class.bssl::Array"* %12 to i64*
  store i64 %73, i64* %90, align 8
  store i64 %86, i64* %33, align 8
  br label %91

91:                                               ; preds = %89, %72
  %92 = phi i64 [ 0, %89 ], [ %73, %72 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #11
  br label %93

93:                                               ; preds = %71, %91
  %94 = phi i64 [ %92, %91 ], [ %69, %71 ]
  %95 = phi i32 [ %83, %91 ], [ 3, %71 ]
  %96 = inttoptr i64 %94 to i8*
  call void @OPENSSL_free(i8* %96) #11
  br label %184

97:                                               ; preds = %59
  %98 = icmp ult i64 %4, 32
  br i1 %98, label %184, label %99

99:                                               ; preds = %97
  %100 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %61, i64 0, i32 54
  %101 = load i32 (%struct.ssl_st*, i8*, i8*, %struct.evp_cipher_ctx_st*, %struct.hmac_ctx_st*, i32)*, i32 (%struct.ssl_st*, i8*, i8*, %struct.evp_cipher_ctx_st*, %struct.hmac_ctx_st*, i32)** %100, align 8
  %102 = icmp eq i32 (%struct.ssl_st*, i8*, i8*, %struct.evp_cipher_ctx_st*, %struct.hmac_ctx_st*, i32)* %101, null
  br i1 %102, label %123, label %103

103:                                              ; preds = %99
  %104 = bitcast %"class.bssl::internal::StackAllocated.152"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %104) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %104, i8 -86, i64 144, i1 false) #11
  %105 = getelementptr inbounds %"class.bssl::internal::StackAllocated.152", %"class.bssl::internal::StackAllocated.152"* %9, i64 0, i32 0
  call void @EVP_CIPHER_CTX_init(%struct.evp_cipher_ctx_st* nonnull %105) #11
  %106 = bitcast %"class.bssl::internal::StackAllocated.153"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %106) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %106, i8 -86, i64 104, i1 false) #11
  %107 = getelementptr inbounds %"class.bssl::internal::StackAllocated.153", %"class.bssl::internal::StackAllocated.153"* %10, i64 0, i32 0
  call void @HMAC_CTX_init(%struct.hmac_ctx_st* nonnull %107) #11
  %108 = getelementptr inbounds i8, i8* %3, i64 16
  %109 = load %struct.ssl_st*, %struct.ssl_st** %13, align 8
  %110 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %109, i64 0, i32 17, i32 0, i32 0, i32 0
  %111 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %110, align 8
  %112 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %111, i64 0, i32 54
  %113 = load i32 (%struct.ssl_st*, i8*, i8*, %struct.evp_cipher_ctx_st*, %struct.hmac_ctx_st*, i32)*, i32 (%struct.ssl_st*, i8*, i8*, %struct.evp_cipher_ctx_st*, %struct.hmac_ctx_st*, i32)** %112, align 8
  %114 = call i32 %113(%struct.ssl_st* %109, i8* %3, i8* %108, %struct.evp_cipher_ctx_st* nonnull %105, %struct.hmac_ctx_st* nonnull %107, i32 0) #11
  %115 = icmp slt i32 %114, 0
  br i1 %115, label %120, label %116

116:                                              ; preds = %103
  switch i32 %114, label %118 [
    i32 0, label %120
    i32 2, label %117
  ]

117:                                              ; preds = %116
  store i8 1, i8* %2, align 1
  br label %118

118:                                              ; preds = %117, %116
  %119 = call fastcc i32 @_ZN4bsslL30decrypt_ticket_with_cipher_ctxEPNS_5ArrayIhEEP17evp_cipher_ctx_stP11hmac_ctx_stNS_4SpanIKhEE(%"class.bssl::Array"* nonnull %12, %struct.evp_cipher_ctx_st* nonnull %105, %struct.hmac_ctx_st* nonnull %107, i8* %3, i64 %4) #11
  br label %120

120:                                              ; preds = %103, %116, %118
  %121 = phi i32 [ %119, %118 ], [ 3, %103 ], [ 2, %116 ]
  call void @HMAC_CTX_cleanup(%struct.hmac_ctx_st* nonnull %107) #11
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %106) #11
  %122 = call i32 @EVP_CIPHER_CTX_cleanup(%struct.evp_cipher_ctx_st* nonnull %105) #11
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %104) #11
  br label %184

123:                                              ; preds = %99
  %124 = load %struct.ssl_st*, %struct.ssl_st** %13, align 8
  %125 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %124, i64 0, i32 17, i32 0, i32 0, i32 0
  %126 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %125, align 8
  %127 = tail call i32 @_ZN4bssl36ssl_ctx_rotate_ticket_encryption_keyEP10ssl_ctx_st(%struct.ssl_ctx_st* %126) #11
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %184, label %129

129:                                              ; preds = %123
  %130 = tail call %struct.evp_cipher_st* @EVP_aes_128_cbc() #11
  %131 = tail call i32 @EVP_CIPHER_iv_length(%struct.evp_cipher_st* %130) #11
  %132 = getelementptr inbounds i8, i8* %3, i64 16
  %133 = bitcast %"class.bssl::internal::StackAllocated.152"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %133) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %133, i8 -86, i64 144, i1 false) #11
  %134 = getelementptr inbounds %"class.bssl::internal::StackAllocated.152", %"class.bssl::internal::StackAllocated.152"* %7, i64 0, i32 0
  call void @EVP_CIPHER_CTX_init(%struct.evp_cipher_ctx_st* nonnull %134) #11
  %135 = bitcast %"class.bssl::internal::StackAllocated.153"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %135) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %135, i8 -86, i64 104, i1 false) #11
  %136 = getelementptr inbounds %"class.bssl::internal::StackAllocated.153", %"class.bssl::internal::StackAllocated.153"* %8, i64 0, i32 0
  call void @HMAC_CTX_init(%struct.hmac_ctx_st* nonnull %136) #11
  %137 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %126, i64 0, i32 2
  call void @CRYPTO_MUTEX_lock_read(%union.crypto_mutex_st* %137) #11
  %138 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %126, i64 0, i32 52, i32 0, i32 0, i32 0
  %139 = load %"struct.bssl::TicketKey"*, %"struct.bssl::TicketKey"** %138, align 8
  %140 = icmp eq %"struct.bssl::TicketKey"* %139, null
  br i1 %140, label %152, label %141

141:                                              ; preds = %129
  %142 = getelementptr inbounds %"struct.bssl::TicketKey", %"struct.bssl::TicketKey"* %139, i64 0, i32 0, i64 0
  %143 = load i8, i8* %3, align 1
  %144 = load i8, i8* %142, align 1
  %145 = icmp eq i8 %143, %144
  br i1 %145, label %146, label %152

146:                                              ; preds = %141
  %147 = getelementptr inbounds %"struct.bssl::TicketKey", %"struct.bssl::TicketKey"* %139, i64 0, i32 0, i64 1
  %148 = getelementptr inbounds i8, i8* %3, i64 1
  %149 = load i8, i8* %148, align 1
  %150 = load i8, i8* %147, align 1
  %151 = icmp eq i8 %149, %150
  br i1 %151, label %326, label %152

152:                                              ; preds = %141, %146, %326, %332, %338, %344, %350, %356, %362, %368, %374, %380, %386, %392, %398, %404, %129
  %153 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %126, i64 0, i32 53, i32 0, i32 0, i32 0
  %154 = load %"struct.bssl::TicketKey"*, %"struct.bssl::TicketKey"** %153, align 8
  %155 = icmp eq %"struct.bssl::TicketKey"* %154, null
  br i1 %155, label %173, label %156

156:                                              ; preds = %152
  %157 = getelementptr inbounds %"struct.bssl::TicketKey", %"struct.bssl::TicketKey"* %154, i64 0, i32 0, i64 0
  %158 = load i8, i8* %3, align 1
  %159 = load i8, i8* %157, align 1
  %160 = icmp eq i8 %158, %159
  br i1 %160, label %161, label %173

161:                                              ; preds = %156
  %162 = getelementptr inbounds %"struct.bssl::TicketKey", %"struct.bssl::TicketKey"* %154, i64 0, i32 0, i64 1
  %163 = getelementptr inbounds i8, i8* %3, i64 1
  %164 = load i8, i8* %163, align 1
  %165 = load i8, i8* %162, align 1
  %166 = icmp eq i8 %164, %165
  br i1 %166, label %242, label %173

167:                                              ; preds = %404, %320
  %168 = phi %"struct.bssl::TicketKey"* [ %154, %320 ], [ %139, %404 ]
  %169 = getelementptr inbounds %"struct.bssl::TicketKey", %"struct.bssl::TicketKey"* %168, i64 0, i32 1, i64 0
  %170 = call %struct.env_md_st* @EVP_sha256() #11
  %171 = call i32 @HMAC_Init_ex(%struct.hmac_ctx_st* nonnull %136, i8* %169, i64 16, %struct.env_md_st* %170, %struct.engine_st* null) #11
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %175

173:                                              ; preds = %152, %156, %161, %242, %248, %254, %260, %266, %272, %278, %284, %290, %296, %302, %308, %314, %320, %167
  %174 = phi i32 [ 3, %167 ], [ 2, %152 ], [ 2, %320 ], [ 2, %314 ], [ 2, %308 ], [ 2, %302 ], [ 2, %296 ], [ 2, %290 ], [ 2, %284 ], [ 2, %278 ], [ 2, %272 ], [ 2, %266 ], [ 2, %260 ], [ 2, %254 ], [ 2, %248 ], [ 2, %242 ], [ 2, %161 ], [ 2, %156 ]
  call void @CRYPTO_MUTEX_unlock_read(%union.crypto_mutex_st* %137) #11
  br label %181

175:                                              ; preds = %167
  %176 = getelementptr inbounds %"struct.bssl::TicketKey", %"struct.bssl::TicketKey"* %168, i64 0, i32 2, i64 0
  %177 = call i32 @EVP_DecryptInit_ex(%struct.evp_cipher_ctx_st* nonnull %134, %struct.evp_cipher_st* %130, %struct.engine_st* null, i8* %176, i8* %132) #11
  %178 = icmp eq i32 %177, 0
  call void @CRYPTO_MUTEX_unlock_read(%union.crypto_mutex_st* %137) #11
  br i1 %178, label %181, label %179

179:                                              ; preds = %175
  %180 = call fastcc i32 @_ZN4bsslL30decrypt_ticket_with_cipher_ctxEPNS_5ArrayIhEEP17evp_cipher_ctx_stP11hmac_ctx_stNS_4SpanIKhEE(%"class.bssl::Array"* nonnull %12, %struct.evp_cipher_ctx_st* nonnull %134, %struct.hmac_ctx_st* nonnull %136, i8* %3, i64 %4) #11
  br label %181

181:                                              ; preds = %179, %175, %173
  %182 = phi i32 [ %180, %179 ], [ 3, %175 ], [ %174, %173 ]
  call void @HMAC_CTX_cleanup(%struct.hmac_ctx_st* nonnull %136) #11
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %135) #11
  %183 = call i32 @EVP_CIPHER_CTX_cleanup(%struct.evp_cipher_ctx_st* nonnull %134) #11
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %133) #11
  br label %184

184:                                              ; preds = %181, %123, %97, %120, %93
  %185 = phi i32 [ %95, %93 ], [ %121, %120 ], [ 2, %97 ], [ %182, %181 ], [ 3, %123 ]
  br i1 %37, label %186, label %209

186:                                              ; preds = %55, %53, %54, %184
  %187 = phi i32 [ %185, %184 ], [ 3, %53 ], [ 0, %54 ], [ 2, %55 ]
  %188 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 46
  %189 = load i32, i32* %188, align 8
  %190 = and i32 %189, 8388608
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %209, label %192

192:                                              ; preds = %186
  switch i32 %187, label %237 [
    i32 2, label %193
    i32 0, label %195
  ]

193:                                              ; preds = %192
  %194 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %35, i64 0, i32 11
  store i8 1, i8* %194, align 8
  br label %237

195:                                              ; preds = %192
  %196 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %35, i64 0, i32 10
  %197 = load i8*, i8** %32, align 8
  %198 = load i64, i64* %33, align 8
  %199 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %196, i64 0, i32 0
  %200 = load i8*, i8** %199, align 8
  call void @OPENSSL_free(i8* %200) #11
  %201 = bitcast %"class.bssl::Array"* %196 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %201, i8 0, i64 16, i1 false) #11
  %202 = icmp eq i64 %198, 0
  br i1 %202, label %215, label %203

203:                                              ; preds = %195
  %204 = call i8* @OPENSSL_malloc(i64 %198) #11
  store i8* %204, i8** %199, align 8
  %205 = icmp eq i8* %204, null
  br i1 %205, label %208, label %206

206:                                              ; preds = %203
  %207 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %35, i64 0, i32 10, i32 1
  store i64 %198, i64* %207, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %204, i8* align 1 %197, i64 %198, i1 false) #11
  br label %215

208:                                              ; preds = %203
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.4, i64 0, i64 0), i32 324) #11
  br label %237

209:                                              ; preds = %186, %184
  %210 = phi i32 [ %187, %186 ], [ %185, %184 ]
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %212, label %237

212:                                              ; preds = %209
  %213 = load i8*, i8** %32, align 8
  %214 = load i64, i64* %33, align 8
  br label %215

215:                                              ; preds = %212, %206, %195
  %216 = phi i64 [ %214, %212 ], [ %198, %206 ], [ 0, %195 ]
  %217 = phi i8* [ %213, %212 ], [ %197, %206 ], [ %197, %195 ]
  %218 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %14, i64 0, i32 16, i32 0, i32 0, i32 0
  %219 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %218, align 8
  %220 = call %struct.ssl_session_st* @SSL_SESSION_from_bytes(i8* %217, i64 %216, %struct.ssl_ctx_st* %219) #11
  %221 = ptrtoint %struct.ssl_session_st* %220 to i64
  %222 = icmp eq %struct.ssl_session_st* %220, null
  br i1 %222, label %236, label %223

223:                                              ; preds = %215
  %224 = icmp eq i64 %26, 0
  br i1 %224, label %229, label %225

225:                                              ; preds = %223
  %226 = getelementptr inbounds %"class.bssl::Span.1", %"class.bssl::Span.1"* %5, i64 0, i32 0
  %227 = load i8*, i8** %226, align 8
  %228 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %220, i64 0, i32 7, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %228, i8* align 1 %227, i64 %26, i1 false) #11
  br label %229

229:                                              ; preds = %223, %225
  %230 = trunc i64 %26 to i32
  %231 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %220, i64 0, i32 6
  store i32 %230, i32* %231, align 8
  %232 = load %struct.ssl_session_st*, %struct.ssl_session_st** %15, align 8
  %233 = bitcast %"class.std::__1::unique_ptr.58"* %1 to i64*
  store i64 %221, i64* %233, align 8
  %234 = icmp eq %struct.ssl_session_st* %232, null
  br i1 %234, label %237, label %235

235:                                              ; preds = %229
  call void @SSL_SESSION_free(%struct.ssl_session_st* nonnull %232) #11
  br label %237

236:                                              ; preds = %215
  call void @ERR_clear_error() #11
  br label %237

237:                                              ; preds = %236, %235, %229, %193, %208, %209, %192
  %238 = phi i32 [ 3, %208 ], [ %187, %192 ], [ %210, %209 ], [ 2, %193 ], [ 2, %236 ], [ 0, %229 ], [ 0, %235 ]
  %239 = load i8*, i8** %32, align 8
  call void @OPENSSL_free(i8* %239) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #11
  br label %240

240:                                              ; preds = %24, %19, %237
  %241 = phi i32 [ %238, %237 ], [ 2, %19 ], [ 2, %24 ]
  ret i32 %241

242:                                              ; preds = %161
  %243 = getelementptr inbounds %"struct.bssl::TicketKey", %"struct.bssl::TicketKey"* %154, i64 0, i32 0, i64 2
  %244 = getelementptr inbounds i8, i8* %3, i64 2
  %245 = load i8, i8* %244, align 1
  %246 = load i8, i8* %243, align 1
  %247 = icmp eq i8 %245, %246
  br i1 %247, label %248, label %173

248:                                              ; preds = %242
  %249 = getelementptr inbounds %"struct.bssl::TicketKey", %"struct.bssl::TicketKey"* %154, i64 0, i32 0, i64 3
  %250 = getelementptr inbounds i8, i8* %3, i64 3
  %251 = load i8, i8* %250, align 1
  %252 = load i8, i8* %249, align 1
  %253 = icmp eq i8 %251, %252
  br i1 %253, label %254, label %173

254:                                              ; preds = %248
  %255 = getelementptr inbounds %"struct.bssl::TicketKey", %"struct.bssl::TicketKey"* %154, i64 0, i32 0, i64 4
  %256 = getelementptr inbounds i8, i8* %3, i64 4
  %257 = load i8, i8* %256, align 1
  %258 = load i8, i8* %255, align 1
  %259 = icmp eq i8 %257, %258
  br i1 %259, label %260, label %173

260:                                              ; preds = %254
  %261 = getelementptr inbounds %"struct.bssl::TicketKey", %"struct.bssl::TicketKey"* %154, i64 0, i32 0, i64 5
  %262 = getelementptr inbounds i8, i8* %3, i64 5
  %263 = load i8, i8* %262, align 1
  %264 = load i8, i8* %261, align 1
  %265 = icmp eq i8 %263, %264
  br i1 %265, label %266, label %173

266:                                              ; preds = %260
  %267 = getelementptr inbounds %"struct.bssl::TicketKey", %"struct.bssl::TicketKey"* %154, i64 0, i32 0, i64 6
  %268 = getelementptr inbounds i8, i8* %3, i64 6
  %269 = load i8, i8* %268, align 1
  %270 = load i8, i8* %267, align 1
  %271 = icmp eq i8 %269, %270
  br i1 %271, label %272, label %173

272:                                              ; preds = %266
  %273 = getelementptr inbounds %"struct.bssl::TicketKey", %"struct.bssl::TicketKey"* %154, i64 0, i32 0, i64 7
  %274 = getelementptr inbounds i8, i8* %3, i64 7
  %275 = load i8, i8* %274, align 1
  %276 = load i8, i8* %273, align 1
  %277 = icmp eq i8 %275, %276
  br i1 %277, label %278, label %173

278:                                              ; preds = %272
  %279 = getelementptr inbounds %"struct.bssl::TicketKey", %"struct.bssl::TicketKey"* %154, i64 0, i32 0, i64 8
  %280 = getelementptr inbounds i8, i8* %3, i64 8
  %281 = load i8, i8* %280, align 1
  %282 = load i8, i8* %279, align 1
  %283 = icmp eq i8 %281, %282
  br i1 %283, label %284, label %173

284:                                              ; preds = %278
  %285 = getelementptr inbounds %"struct.bssl::TicketKey", %"struct.bssl::TicketKey"* %154, i64 0, i32 0, i64 9
  %286 = getelementptr inbounds i8, i8* %3, i64 9
  %287 = load i8, i8* %286, align 1
  %288 = load i8, i8* %285, align 1
  %289 = icmp eq i8 %287, %288
  br i1 %289, label %290, label %173

290:                                              ; preds = %284
  %291 = getelementptr inbounds %"struct.bssl::TicketKey", %"struct.bssl::TicketKey"* %154, i64 0, i32 0, i64 10
  %292 = getelementptr inbounds i8, i8* %3, i64 10
  %293 = load i8, i8* %292, align 1
  %294 = load i8, i8* %291, align 1
  %295 = icmp eq i8 %293, %294
  br i1 %295, label %296, label %173

296:                                              ; preds = %290
  %297 = getelementptr inbounds %"struct.bssl::TicketKey", %"struct.bssl::TicketKey"* %154, i64 0, i32 0, i64 11
  %298 = getelementptr inbounds i8, i8* %3, i64 11
  %299 = load i8, i8* %298, align 1
  %300 = load i8, i8* %297, align 1
  %301 = icmp eq i8 %299, %300
  br i1 %301, label %302, label %173

302:                                              ; preds = %296
  %303 = getelementptr inbounds %"struct.bssl::TicketKey", %"struct.bssl::TicketKey"* %154, i64 0, i32 0, i64 12
  %304 = getelementptr inbounds i8, i8* %3, i64 12
  %305 = load i8, i8* %304, align 1
  %306 = load i8, i8* %303, align 1
  %307 = icmp eq i8 %305, %306
  br i1 %307, label %308, label %173

308:                                              ; preds = %302
  %309 = getelementptr inbounds %"struct.bssl::TicketKey", %"struct.bssl::TicketKey"* %154, i64 0, i32 0, i64 13
  %310 = getelementptr inbounds i8, i8* %3, i64 13
  %311 = load i8, i8* %310, align 1
  %312 = load i8, i8* %309, align 1
  %313 = icmp eq i8 %311, %312
  br i1 %313, label %314, label %173

314:                                              ; preds = %308
  %315 = getelementptr inbounds %"struct.bssl::TicketKey", %"struct.bssl::TicketKey"* %154, i64 0, i32 0, i64 14
  %316 = getelementptr inbounds i8, i8* %3, i64 14
  %317 = load i8, i8* %316, align 1
  %318 = load i8, i8* %315, align 1
  %319 = icmp eq i8 %317, %318
  br i1 %319, label %320, label %173

320:                                              ; preds = %314
  %321 = getelementptr inbounds %"struct.bssl::TicketKey", %"struct.bssl::TicketKey"* %154, i64 0, i32 0, i64 15
  %322 = getelementptr inbounds i8, i8* %3, i64 15
  %323 = load i8, i8* %322, align 1
  %324 = load i8, i8* %321, align 1
  %325 = icmp eq i8 %323, %324
  br i1 %325, label %167, label %173

326:                                              ; preds = %146
  %327 = getelementptr inbounds %"struct.bssl::TicketKey", %"struct.bssl::TicketKey"* %139, i64 0, i32 0, i64 2
  %328 = getelementptr inbounds i8, i8* %3, i64 2
  %329 = load i8, i8* %328, align 1
  %330 = load i8, i8* %327, align 1
  %331 = icmp eq i8 %329, %330
  br i1 %331, label %332, label %152

332:                                              ; preds = %326
  %333 = getelementptr inbounds %"struct.bssl::TicketKey", %"struct.bssl::TicketKey"* %139, i64 0, i32 0, i64 3
  %334 = getelementptr inbounds i8, i8* %3, i64 3
  %335 = load i8, i8* %334, align 1
  %336 = load i8, i8* %333, align 1
  %337 = icmp eq i8 %335, %336
  br i1 %337, label %338, label %152

338:                                              ; preds = %332
  %339 = getelementptr inbounds %"struct.bssl::TicketKey", %"struct.bssl::TicketKey"* %139, i64 0, i32 0, i64 4
  %340 = getelementptr inbounds i8, i8* %3, i64 4
  %341 = load i8, i8* %340, align 1
  %342 = load i8, i8* %339, align 1
  %343 = icmp eq i8 %341, %342
  br i1 %343, label %344, label %152

344:                                              ; preds = %338
  %345 = getelementptr inbounds %"struct.bssl::TicketKey", %"struct.bssl::TicketKey"* %139, i64 0, i32 0, i64 5
  %346 = getelementptr inbounds i8, i8* %3, i64 5
  %347 = load i8, i8* %346, align 1
  %348 = load i8, i8* %345, align 1
  %349 = icmp eq i8 %347, %348
  br i1 %349, label %350, label %152

350:                                              ; preds = %344
  %351 = getelementptr inbounds %"struct.bssl::TicketKey", %"struct.bssl::TicketKey"* %139, i64 0, i32 0, i64 6
  %352 = getelementptr inbounds i8, i8* %3, i64 6
  %353 = load i8, i8* %352, align 1
  %354 = load i8, i8* %351, align 1
  %355 = icmp eq i8 %353, %354
  br i1 %355, label %356, label %152

356:                                              ; preds = %350
  %357 = getelementptr inbounds %"struct.bssl::TicketKey", %"struct.bssl::TicketKey"* %139, i64 0, i32 0, i64 7
  %358 = getelementptr inbounds i8, i8* %3, i64 7
  %359 = load i8, i8* %358, align 1
  %360 = load i8, i8* %357, align 1
  %361 = icmp eq i8 %359, %360
  br i1 %361, label %362, label %152

362:                                              ; preds = %356
  %363 = getelementptr inbounds %"struct.bssl::TicketKey", %"struct.bssl::TicketKey"* %139, i64 0, i32 0, i64 8
  %364 = getelementptr inbounds i8, i8* %3, i64 8
  %365 = load i8, i8* %364, align 1
  %366 = load i8, i8* %363, align 1
  %367 = icmp eq i8 %365, %366
  br i1 %367, label %368, label %152

368:                                              ; preds = %362
  %369 = getelementptr inbounds %"struct.bssl::TicketKey", %"struct.bssl::TicketKey"* %139, i64 0, i32 0, i64 9
  %370 = getelementptr inbounds i8, i8* %3, i64 9
  %371 = load i8, i8* %370, align 1
  %372 = load i8, i8* %369, align 1
  %373 = icmp eq i8 %371, %372
  br i1 %373, label %374, label %152

374:                                              ; preds = %368
  %375 = getelementptr inbounds %"struct.bssl::TicketKey", %"struct.bssl::TicketKey"* %139, i64 0, i32 0, i64 10
  %376 = getelementptr inbounds i8, i8* %3, i64 10
  %377 = load i8, i8* %376, align 1
  %378 = load i8, i8* %375, align 1
  %379 = icmp eq i8 %377, %378
  br i1 %379, label %380, label %152

380:                                              ; preds = %374
  %381 = getelementptr inbounds %"struct.bssl::TicketKey", %"struct.bssl::TicketKey"* %139, i64 0, i32 0, i64 11
  %382 = getelementptr inbounds i8, i8* %3, i64 11
  %383 = load i8, i8* %382, align 1
  %384 = load i8, i8* %381, align 1
  %385 = icmp eq i8 %383, %384
  br i1 %385, label %386, label %152

386:                                              ; preds = %380
  %387 = getelementptr inbounds %"struct.bssl::TicketKey", %"struct.bssl::TicketKey"* %139, i64 0, i32 0, i64 12
  %388 = getelementptr inbounds i8, i8* %3, i64 12
  %389 = load i8, i8* %388, align 1
  %390 = load i8, i8* %387, align 1
  %391 = icmp eq i8 %389, %390
  br i1 %391, label %392, label %152

392:                                              ; preds = %386
  %393 = getelementptr inbounds %"struct.bssl::TicketKey", %"struct.bssl::TicketKey"* %139, i64 0, i32 0, i64 13
  %394 = getelementptr inbounds i8, i8* %3, i64 13
  %395 = load i8, i8* %394, align 1
  %396 = load i8, i8* %393, align 1
  %397 = icmp eq i8 %395, %396
  br i1 %397, label %398, label %152

398:                                              ; preds = %392
  %399 = getelementptr inbounds %"struct.bssl::TicketKey", %"struct.bssl::TicketKey"* %139, i64 0, i32 0, i64 14
  %400 = getelementptr inbounds i8, i8* %3, i64 14
  %401 = load i8, i8* %400, align 1
  %402 = load i8, i8* %399, align 1
  %403 = icmp eq i8 %401, %402
  br i1 %403, label %404, label %152

404:                                              ; preds = %398
  %405 = getelementptr inbounds %"struct.bssl::TicketKey", %"struct.bssl::TicketKey"* %139, i64 0, i32 0, i64 15
  %406 = getelementptr inbounds i8, i8* %3, i64 15
  %407 = load i8, i8* %406, align 1
  %408 = load i8, i8* %405, align 1
  %409 = icmp eq i8 %407, %408
  br i1 %409, label %167, label %152
}

declare i32 @SSL_get_options(%struct.ssl_st*) local_unnamed_addr #2

declare %struct.ssl_session_st* @SSL_SESSION_from_bytes(i8*, i64, %struct.ssl_ctx_st*) local_unnamed_addr #2

declare void @ERR_clear_error() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl23tls1_parse_peer_sigalgsEPNS_13SSL_HANDSHAKEEPK6cbs_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture, %struct.cbs_st*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %4 = load %struct.ssl_st*, %struct.ssl_st** %3, align 8
  %5 = tail call zeroext i16 @_ZN4bssl20ssl_protocol_versionEPK6ssl_st(%struct.ssl_st* %4) #11
  %6 = icmp ult i16 %5, 771
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = tail call i64 @CBS_len(%struct.cbs_st* %1) #11
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 26
  %12 = tail call fastcc zeroext i1 @_ZN4bsslL15parse_u16_arrayEPK6cbs_stPNS_5ArrayItEE(%struct.cbs_st* %1, %"class.bssl::Array.56"* %11)
  br label %13

13:                                               ; preds = %10, %7, %2
  %14 = phi i1 [ true, %2 ], [ false, %7 ], [ %12, %10 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN4bsslL15parse_u16_arrayEPK6cbs_stPNS_5ArrayItEE(%struct.cbs_st* nocapture readonly, %"class.bssl::Array.56"* nocapture) unnamed_addr #0 {
  %3 = alloca %struct.cbs_st, align 8
  %4 = bitcast %struct.cbs_st* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #11
  %5 = bitcast %struct.cbs_st* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %5, i64 16, i1 false)
  %6 = call i64 @CBS_len(%struct.cbs_st* nonnull %3) #11
  %7 = and i64 %6, 1
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %2
  call void @ERR_put_error(i32 16, i32 0, i32 137, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 2590) #11
  br label %41

10:                                               ; preds = %2
  %11 = call i64 @CBS_len(%struct.cbs_st* nonnull %3) #11
  %12 = lshr i64 %11, 1
  call void @OPENSSL_free(i8* null) #11
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %31, label %14

14:                                               ; preds = %10
  %15 = and i64 %11, -2
  %16 = call i8* @OPENSSL_malloc(i64 %15) #11
  %17 = ptrtoint i8* %16 to i64
  %18 = icmp eq i8* %16, null
  br i1 %18, label %19, label %20

19:                                               ; preds = %14
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.4, i64 0, i64 0), i32 324) #11
  br label %37

20:                                               ; preds = %14
  %21 = bitcast i8* %16 to i16*
  br label %24

22:                                               ; preds = %24
  %23 = icmp eq i64 %29, %12
  br i1 %23, label %31, label %24

24:                                               ; preds = %22, %20
  %25 = phi i64 [ 0, %20 ], [ %29, %22 ]
  %26 = getelementptr inbounds i16, i16* %21, i64 %25
  %27 = call i32 @CBS_get_u16(%struct.cbs_st* nonnull %3, i16* %26) #11
  %28 = icmp eq i32 %27, 0
  %29 = add nuw nsw i64 %25, 1
  br i1 %28, label %30, label %22

30:                                               ; preds = %24
  call void @ERR_put_error(i32 16, i32 0, i32 68, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 2600) #11
  br label %37

31:                                               ; preds = %22, %10
  %32 = phi i64 [ 0, %10 ], [ %17, %22 ]
  %33 = bitcast %"class.bssl::Array.56"* %1 to i8**
  %34 = load i8*, i8** %33, align 8
  call void @OPENSSL_free(i8* %34) #11
  %35 = getelementptr inbounds %"class.bssl::Array.56", %"class.bssl::Array.56"* %1, i64 0, i32 1
  %36 = bitcast %"class.bssl::Array.56"* %1 to i64*
  store i64 %32, i64* %36, align 8
  store i64 %12, i64* %35, align 8
  br label %37

37:                                               ; preds = %19, %30, %31
  %38 = phi i64 [ %17, %30 ], [ 0, %31 ], [ %17, %19 ]
  %39 = phi i1 [ false, %30 ], [ true, %31 ], [ false, %19 ]
  %40 = inttoptr i64 %38 to i8*
  call void @OPENSSL_free(i8* %40) #11
  br label %41

41:                                               ; preds = %37, %9
  %42 = phi i1 [ false, %9 ], [ %39, %37 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #11
  ret i1 %42
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl35tls1_get_legacy_signature_algorithmEPtPK11evp_pkey_st(i16* nocapture, %struct.evp_pkey_st*) local_unnamed_addr #0 {
  %3 = tail call i32 @EVP_PKEY_id(%struct.evp_pkey_st* %1) #11
  switch i32 %3, label %7 [
    i32 6, label %5
    i32 408, label %4
  ]

4:                                                ; preds = %2
  br label %5

5:                                                ; preds = %2, %4
  %6 = phi i16 [ 515, %4 ], [ -255, %2 ]
  store i16 %6, i16* %0, align 2
  br label %7

7:                                                ; preds = %5, %2
  %8 = phi i1 [ false, %2 ], [ true, %5 ]
  ret i1 %8
}

declare i32 @EVP_PKEY_id(%struct.evp_pkey_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl31tls1_choose_signature_algorithmEPNS_13SSL_HANDSHAKEEPt(%"struct.bssl::SSL_HANDSHAKE"*, i16* nocapture) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %4 = load %struct.ssl_st*, %struct.ssl_st** %3, align 8
  %5 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 1
  %6 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %5, align 8
  %7 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %6, i64 0, i32 6, i32 0, i32 0, i32 0
  %8 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %7, align 8
  %9 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %8, i64 0, i32 15, i32 0, i32 0, i32 0
  %10 = load %"struct.bssl::DC"*, %"struct.bssl::DC"** %9, align 8
  %11 = tail call zeroext i16 @_ZN4bssl20ssl_protocol_versionEPK6ssl_st(%struct.ssl_st* %4) #11
  %12 = icmp ult i16 %11, 771
  br i1 %12, label %13, label %20

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 38, i32 0, i32 0, i32 0
  %15 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %14, align 8
  %16 = tail call i32 @EVP_PKEY_id(%struct.evp_pkey_st* %15) #11
  switch i32 %16, label %19 [
    i32 6, label %17
    i32 408, label %18
  ]

17:                                               ; preds = %13
  store i16 -255, i16* %1, align 2
  br label %76

18:                                               ; preds = %13
  store i16 515, i16* %1, align 2
  br label %76

19:                                               ; preds = %13
  tail call void @ERR_put_error(i32 16, i32 0, i32 253, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 3974) #11
  br label %76

20:                                               ; preds = %2
  %21 = tail call zeroext i1 @_ZN4bssl19ssl_signing_with_dcEPKNS_13SSL_HANDSHAKEE(%"struct.bssl::SSL_HANDSHAKE"* %0) #11
  br i1 %21, label %22, label %25

22:                                               ; preds = %20
  %23 = getelementptr inbounds %"struct.bssl::DC", %"struct.bssl::DC"* %10, i64 0, i32 1
  %24 = ptrtoint i16* %23 to i64
  br label %33

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %8, i64 0, i32 7, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %33, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %8, i64 0, i32 7
  %31 = bitcast %"class.bssl::Array.56"* %30 to i64*
  %32 = load i64, i64* %31, align 8
  br label %33

33:                                               ; preds = %25, %29, %22
  %34 = phi i64 [ %24, %22 ], [ ptrtoint ([12 x i16]* @_ZN4bsslL24kSignSignatureAlgorithmsE to i64), %25 ], [ %32, %29 ]
  %35 = phi i64 [ 1, %22 ], [ 12, %25 ], [ %27, %29 ]
  %36 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 26
  %37 = bitcast %"class.bssl::Array.56"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 26, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %48

42:                                               ; preds = %33
  %43 = load %struct.ssl_st*, %struct.ssl_st** %3, align 8
  %44 = tail call zeroext i16 @_ZN4bssl20ssl_protocol_versionEPK6ssl_st(%struct.ssl_st* %43) #11
  %45 = icmp ult i16 %44, 772
  %46 = select i1 %45, i64 ptrtoint ([2 x i16]* @_ZZN4bssl31tls1_get_peer_verify_algorithmsEPKNS_13SSL_HANDSHAKEEE22kDefaultPeerAlgorithms to i64), i64 %38
  %47 = select i1 %45, i64 2, i64 0
  br label %48

48:                                               ; preds = %42, %33
  %49 = phi i64 [ %38, %33 ], [ %46, %42 ]
  %50 = phi i64 [ %40, %33 ], [ %47, %42 ]
  %51 = inttoptr i64 %49 to i16*
  %52 = inttoptr i64 %34 to i16*
  %53 = getelementptr inbounds i16, i16* %52, i64 %35
  %54 = getelementptr inbounds i16, i16* %51, i64 %50
  %55 = icmp eq i64 %50, 0
  br label %56

56:                                               ; preds = %48, %71
  %57 = phi i16* [ %52, %48 ], [ %72, %71 ]
  %58 = load i16, i16* %57, align 2
  %59 = icmp eq i16 %58, -255
  br i1 %59, label %71, label %60

60:                                               ; preds = %56
  %61 = tail call zeroext i1 @_ZN4bssl44ssl_private_key_supports_signature_algorithmEPNS_13SSL_HANDSHAKEEt(%"struct.bssl::SSL_HANDSHAKE"* %0, i16 zeroext %58) #11
  %62 = xor i1 %61, true
  %63 = or i1 %55, %62
  br i1 %63, label %71, label %66

64:                                               ; preds = %66
  %65 = icmp eq i16* %70, %54
  br i1 %65, label %71, label %66

66:                                               ; preds = %60, %64
  %67 = phi i16* [ %70, %64 ], [ %51, %60 ]
  %68 = load i16, i16* %67, align 2
  %69 = icmp eq i16 %58, %68
  %70 = getelementptr inbounds i16, i16* %67, i64 1
  br i1 %69, label %74, label %64

71:                                               ; preds = %64, %60, %56
  %72 = getelementptr inbounds i16, i16* %57, i64 1
  %73 = icmp eq i16* %72, %53
  br i1 %73, label %75, label %56

74:                                               ; preds = %66
  store i16 %58, i16* %1, align 2
  br label %76

75:                                               ; preds = %71
  tail call void @ERR_put_error(i32 16, i32 0, i32 253, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 4005) #11
  br label %76

76:                                               ; preds = %17, %18, %75, %74, %19
  %77 = phi i1 [ false, %19 ], [ false, %75 ], [ true, %74 ], [ true, %18 ], [ true, %17 ]
  ret i1 %77
}

declare zeroext i1 @_ZN4bssl19ssl_signing_with_dcEPKNS_13SSL_HANDSHAKEE(%"struct.bssl::SSL_HANDSHAKE"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden { i16*, i64 } @_ZN4bssl31tls1_get_peer_verify_algorithmsEPKNS_13SSL_HANDSHAKEE(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 26
  %3 = bitcast %"class.bssl::Array.56"* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 26, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %8, label %15

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %10 = load %struct.ssl_st*, %struct.ssl_st** %9, align 8
  %11 = tail call zeroext i16 @_ZN4bssl20ssl_protocol_versionEPK6ssl_st(%struct.ssl_st* %10) #11
  %12 = icmp ult i16 %11, 772
  %13 = select i1 %12, i64 ptrtoint ([2 x i16]* @_ZZN4bssl31tls1_get_peer_verify_algorithmsEPKNS_13SSL_HANDSHAKEEE22kDefaultPeerAlgorithms to i64), i64 %4
  %14 = select i1 %12, i64 2, i64 0
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i64 [ %4, %1 ], [ %13, %8 ]
  %17 = phi i64 [ %6, %1 ], [ %14, %8 ]
  %18 = inttoptr i64 %16 to i16*
  %19 = insertvalue { i16*, i64 } undef, i16* %18, 0
  %20 = insertvalue { i16*, i64 } %19, i64 %17, 1
  ret { i16*, i64 } %20
}

declare zeroext i1 @_ZN4bssl44ssl_private_key_supports_signature_algorithmEPNS_13SSL_HANDSHAKEEt(%"struct.bssl::SSL_HANDSHAKE"*, i16 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl22tls1_verify_channel_idEPNS_13SSL_HANDSHAKEERKNS_10SSLMessageE(%"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSLMessage"* nocapture readonly dereferenceable(40)) local_unnamed_addr #0 {
  %3 = alloca i16, align 2
  %4 = alloca %struct.cbs_st, align 8
  %5 = alloca %struct.cbs_st, align 8
  %6 = alloca [64 x i8], align 16
  %7 = alloca i64, align 8
  %8 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %9 = load %struct.ssl_st*, %struct.ssl_st** %8, align 8
  %10 = bitcast i16* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %10) #11
  store i16 -21846, i16* %3, align 2
  %11 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"struct.bssl::SSLMessage", %"struct.bssl::SSLMessage"* %1, i64 0, i32 2
  %13 = bitcast %struct.cbs_st* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 8 %13, i64 16, i1 false)
  %14 = bitcast %struct.cbs_st* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #11
  %15 = bitcast %struct.cbs_st* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 16, i1 false)
  %16 = call i32 @CBS_get_u16(%struct.cbs_st* nonnull %4, i16* nonnull %3) #11
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %30, label %18

18:                                               ; preds = %2
  %19 = call i32 @CBS_get_u16_length_prefixed(%struct.cbs_st* nonnull %4, %struct.cbs_st* nonnull %5) #11
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %30, label %21

21:                                               ; preds = %18
  %22 = call i64 @CBS_len(%struct.cbs_st* nonnull %4) #11
  %23 = icmp eq i64 %22, 0
  %24 = load i16, i16* %3, align 2
  %25 = icmp eq i16 %24, 30032
  %26 = and i1 %23, %25
  br i1 %26, label %27, label %30

27:                                               ; preds = %21
  %28 = call i64 @CBS_len(%struct.cbs_st* nonnull %5) #11
  %29 = icmp eq i64 %28, 128
  br i1 %29, label %31, label %30

30:                                               ; preds = %27, %21, %18, %2
  call void @ERR_put_error(i32 16, i32 0, i32 137, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 4033) #11
  call void @_ZN4bssl14ssl_send_alertEP6ssl_stii(%struct.ssl_st* %9, i32 2, i32 50) #11
  br label %118

31:                                               ; preds = %27
  %32 = call %struct.ec_group_st* @EC_GROUP_new_by_curve_name(i32 415) #11
  %33 = icmp eq %struct.ec_group_st* %32, null
  br i1 %33, label %116, label %34

34:                                               ; preds = %31
  %35 = call %struct.ecdsa_sig_st* @ECDSA_SIG_new() #11
  %36 = call %struct.bignum_st* @BN_new() #11
  %37 = call %struct.bignum_st* @BN_new() #11
  %38 = icmp ne %struct.ecdsa_sig_st* %35, null
  %39 = icmp ne %struct.bignum_st* %36, null
  %40 = and i1 %38, %39
  %41 = icmp eq %struct.bignum_st* %37, null
  br i1 %40, label %42, label %104

42:                                               ; preds = %34
  br i1 %41, label %110, label %43

43:                                               ; preds = %42
  %44 = call i8* @CBS_data(%struct.cbs_st* nonnull %5) #11
  %45 = call %struct.bignum_st* @BN_bin2bn(i8* %44, i64 32, %struct.bignum_st* nonnull %36) #11
  %46 = icmp eq %struct.bignum_st* %45, null
  br i1 %46, label %105, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds i8, i8* %44, i64 32
  %49 = call %struct.bignum_st* @BN_bin2bn(i8* %48, i64 32, %struct.bignum_st* nonnull %37) #11
  %50 = icmp eq %struct.bignum_st* %49, null
  br i1 %50, label %105, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds i8, i8* %44, i64 64
  %53 = getelementptr inbounds %struct.ecdsa_sig_st, %struct.ecdsa_sig_st* %35, i64 0, i32 0
  %54 = load %struct.bignum_st*, %struct.bignum_st** %53, align 8
  %55 = call %struct.bignum_st* @BN_bin2bn(i8* %52, i64 32, %struct.bignum_st* %54) #11
  %56 = icmp eq %struct.bignum_st* %55, null
  br i1 %56, label %105, label %57

57:                                               ; preds = %51
  %58 = getelementptr inbounds i8, i8* %44, i64 96
  %59 = getelementptr inbounds %struct.ecdsa_sig_st, %struct.ecdsa_sig_st* %35, i64 0, i32 1
  %60 = load %struct.bignum_st*, %struct.bignum_st** %59, align 8
  %61 = call %struct.bignum_st* @BN_bin2bn(i8* %58, i64 32, %struct.bignum_st* %60) #11
  %62 = icmp eq %struct.bignum_st* %61, null
  br i1 %62, label %105, label %63

63:                                               ; preds = %57
  %64 = call %struct.ec_key_st* @EC_KEY_new() #11
  %65 = call %struct.ec_point_st* @EC_POINT_new(%struct.ec_group_st* nonnull %32) #11
  %66 = icmp eq %struct.ec_key_st* %64, null
  %67 = icmp eq %struct.ec_point_st* %65, null
  br i1 %66, label %98, label %68

68:                                               ; preds = %63
  br i1 %67, label %102, label %69

69:                                               ; preds = %68
  %70 = call i32 @EC_POINT_set_affine_coordinates_GFp(%struct.ec_group_st* nonnull %32, %struct.ec_point_st* nonnull %65, %struct.bignum_st* nonnull %36, %struct.bignum_st* nonnull %37, %struct.bignum_ctx* null) #11
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %100, label %72

72:                                               ; preds = %69
  %73 = call i32 @EC_KEY_set_group(%struct.ec_key_st* nonnull %64, %struct.ec_group_st* nonnull %32) #11
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %100, label %75

75:                                               ; preds = %72
  %76 = call i32 @EC_KEY_set_public_key(%struct.ec_key_st* nonnull %64, %struct.ec_point_st* nonnull %65) #11
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %100, label %78

78:                                               ; preds = %75
  %79 = getelementptr inbounds [64 x i8], [64 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %79) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %79, i8 -86, i64 64, i1 false)
  %80 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #11
  store i64 -6148914691236517206, i64* %7, align 8
  %81 = call zeroext i1 @_ZN4bssl20tls1_channel_id_hashEPNS_13SSL_HANDSHAKEEPhPm(%"struct.bssl::SSL_HANDSHAKE"* %0, i8* nonnull %79, i64* nonnull %7)
  br i1 %81, label %82, label %96

82:                                               ; preds = %78
  %83 = load i64, i64* %7, align 8
  %84 = call i32 @ECDSA_do_verify(i8* nonnull %79, i64 %83, %struct.ecdsa_sig_st* nonnull %35, %struct.ec_key_st* nonnull %64) #11
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %92

86:                                               ; preds = %82
  call void @ERR_put_error(i32 16, i32 0, i32 129, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 4080) #11
  call void @_ZN4bssl14ssl_send_alertEP6ssl_stii(%struct.ssl_st* %9, i32 2, i32 51) #11
  %87 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %9, i64 0, i32 8
  %88 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %87, align 8
  %89 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %88, i64 0, i32 23
  %90 = load i16, i16* %89, align 1
  %91 = and i16 %90, -513
  store i16 %91, i16* %89, align 1
  br label %96

92:                                               ; preds = %82
  %93 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %9, i64 0, i32 8
  %94 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %93, align 8
  %95 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %94, i64 0, i32 51, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %95, i8* align 1 %44, i64 64, i1 false) #11
  br label %96

96:                                               ; preds = %86, %92, %78
  %97 = phi i1 [ false, %78 ], [ true, %92 ], [ false, %86 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %79) #11
  br label %100

98:                                               ; preds = %63
  br i1 %67, label %105, label %99

99:                                               ; preds = %98
  call void @EC_POINT_free(%struct.ec_point_st* nonnull %65) #11
  br label %105

100:                                              ; preds = %69, %72, %75, %96
  %101 = phi i1 [ false, %69 ], [ false, %72 ], [ false, %75 ], [ %97, %96 ]
  call void @EC_POINT_free(%struct.ec_point_st* nonnull %65) #11
  br label %102

102:                                              ; preds = %68, %100
  %103 = phi i1 [ %101, %100 ], [ false, %68 ]
  call void @EC_KEY_free(%struct.ec_key_st* nonnull %64) #11
  br label %105

104:                                              ; preds = %34
  br i1 %41, label %107, label %105

105:                                              ; preds = %98, %43, %47, %51, %57, %99, %102, %104
  %106 = phi i1 [ false, %104 ], [ false, %99 ], [ %103, %102 ], [ false, %43 ], [ false, %47 ], [ false, %51 ], [ false, %57 ], [ false, %98 ]
  call void @BN_free(%struct.bignum_st* nonnull %37) #11
  br label %107

107:                                              ; preds = %104, %105
  %108 = phi i1 [ false, %104 ], [ %106, %105 ]
  %109 = icmp eq %struct.bignum_st* %36, null
  br i1 %109, label %112, label %110

110:                                              ; preds = %42, %107
  %111 = phi i1 [ %108, %107 ], [ false, %42 ]
  call void @BN_free(%struct.bignum_st* nonnull %36) #11
  br label %112

112:                                              ; preds = %107, %110
  %113 = phi i1 [ %108, %107 ], [ %111, %110 ]
  %114 = icmp eq %struct.ecdsa_sig_st* %35, null
  br i1 %114, label %117, label %115

115:                                              ; preds = %112
  call void @ECDSA_SIG_free(%struct.ecdsa_sig_st* nonnull %35) #11
  br label %117

116:                                              ; preds = %31
  call void @ERR_put_error(i32 16, i32 0, i32 180, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 4040) #11
  br label %118

117:                                              ; preds = %115, %112
  call void @EC_GROUP_free(%struct.ec_group_st* nonnull %32) #11
  br label %118

118:                                              ; preds = %117, %116, %30
  %119 = phi i1 [ false, %30 ], [ false, %116 ], [ %113, %117 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %10) #11
  ret i1 %119
}

declare %struct.ec_group_st* @EC_GROUP_new_by_curve_name(i32) local_unnamed_addr #2

declare %struct.ecdsa_sig_st* @ECDSA_SIG_new() local_unnamed_addr #2

declare %struct.bignum_st* @BN_new() local_unnamed_addr #2

declare %struct.bignum_st* @BN_bin2bn(i8*, i64, %struct.bignum_st*) local_unnamed_addr #2

declare %struct.ec_key_st* @EC_KEY_new() local_unnamed_addr #2

declare %struct.ec_point_st* @EC_POINT_new(%struct.ec_group_st*) local_unnamed_addr #2

declare i32 @EC_POINT_set_affine_coordinates_GFp(%struct.ec_group_st*, %struct.ec_point_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_ctx*) local_unnamed_addr #2

declare i32 @EC_KEY_set_group(%struct.ec_key_st*, %struct.ec_group_st*) local_unnamed_addr #2

declare i32 @EC_KEY_set_public_key(%struct.ec_key_st*, %struct.ec_point_st*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl20tls1_channel_id_hashEPNS_13SSL_HANDSHAKEEPhPm(%"struct.bssl::SSL_HANDSHAKE"*, i8*, i64* nocapture) local_unnamed_addr #0 {
  %4 = alloca %"class.bssl::Array", align 8
  %5 = alloca %struct.sha256_state_st, align 4
  %6 = alloca [64 x i8], align 16
  %7 = alloca i64, align 8
  %8 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %9 = load %struct.ssl_st*, %struct.ssl_st** %8, align 8
  %10 = tail call zeroext i16 @_ZN4bssl20ssl_protocol_versionEPK6ssl_st(%struct.ssl_st* %9) #11
  %11 = icmp ugt i16 %10, 771
  br i1 %11, label %12, label %24

12:                                               ; preds = %3
  %13 = bitcast %"class.bssl::Array"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #11
  %14 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %4, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 16, i1 false) #11
  %15 = call zeroext i1 @_ZN4bssl37tls13_get_cert_verify_signature_inputEPNS_13SSL_HANDSHAKEEPNS_5ArrayIhEENS_25ssl_cert_verify_context_tE(%"struct.bssl::SSL_HANDSHAKE"* %0, %"class.bssl::Array"* nonnull %4, i32 2) #11
  br i1 %15, label %16, label %21

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %4, i64 0, i32 1
  %18 = load i8*, i8** %14, align 8
  %19 = load i64, i64* %17, align 8
  %20 = call i8* @SHA256(i8* %18, i64 %19, i8* %1) #11
  store i64 32, i64* %2, align 8
  br label %21

21:                                               ; preds = %12, %16
  %22 = phi i1 [ true, %16 ], [ false, %12 ]
  %23 = load i8*, i8** %14, align 8
  call void @OPENSSL_free(i8* %23) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #11
  br label %55

24:                                               ; preds = %3
  %25 = bitcast %struct.sha256_state_st* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %25) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %25, i8 -86, i64 112, i1 false)
  %26 = call i32 @SHA256_Init(%struct.sha256_state_st* nonnull %5) #11
  %27 = call i32 @SHA256_Update(%struct.sha256_state_st* nonnull %5, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @_ZZN4bssl20tls1_channel_id_hashEPNS_13SSL_HANDSHAKEEPhPmE14kClientIDMagic, i64 0, i64 0), i64 25) #11
  %28 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %9, i64 0, i32 14, i32 0, i32 0, i32 0
  %29 = load %struct.ssl_session_st*, %struct.ssl_session_st** %28, align 8
  %30 = icmp eq %struct.ssl_session_st* %29, null
  br i1 %30, label %42, label %31

31:                                               ; preds = %24
  %32 = call i32 @SHA256_Update(%struct.sha256_state_st* nonnull %5, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_ZZN4bssl20tls1_channel_id_hashEPNS_13SSL_HANDSHAKEEPhPmE16kResumptionMagic, i64 0, i64 0), i64 11) #11
  %33 = load %struct.ssl_session_st*, %struct.ssl_session_st** %28, align 8
  %34 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %33, i64 0, i32 29
  %35 = load i8, i8* %34, align 8
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %31
  call void @ERR_put_error(i32 16, i32 0, i32 68, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 4153) #11
  br label %53

38:                                               ; preds = %31
  %39 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %33, i64 0, i32 28, i64 0
  %40 = zext i8 %35 to i64
  %41 = call i32 @SHA256_Update(%struct.sha256_state_st* nonnull %5, i8* %39, i64 %40) #11
  br label %42

42:                                               ; preds = %24, %38
  %43 = getelementptr inbounds [64 x i8], [64 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %43) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %43, i8 -86, i64 64, i1 false)
  %44 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #11
  store i64 -6148914691236517206, i64* %7, align 8
  %45 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 20
  %46 = call zeroext i1 @_ZN4bssl13SSLTranscript7GetHashEPhPm(%"class.bssl::SSLTranscript"* %45, i8* nonnull %43, i64* nonnull %7) #11
  br i1 %46, label %47, label %51

47:                                               ; preds = %42
  %48 = load i64, i64* %7, align 8
  %49 = call i32 @SHA256_Update(%struct.sha256_state_st* nonnull %5, i8* nonnull %43, i64 %48) #11
  %50 = call i32 @SHA256_Final(i8* %1, %struct.sha256_state_st* nonnull %5) #11
  store i64 32, i64* %2, align 8
  br label %51

51:                                               ; preds = %42, %47
  %52 = phi i1 [ true, %47 ], [ false, %42 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %43) #11
  br label %53

53:                                               ; preds = %51, %37
  %54 = phi i1 [ false, %37 ], [ %52, %51 ]
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %25) #11
  br label %55

55:                                               ; preds = %53, %21
  %56 = phi i1 [ %22, %21 ], [ %54, %53 ]
  ret i1 %56
}

declare i32 @ECDSA_do_verify(i8*, i64, %struct.ecdsa_sig_st*, %struct.ec_key_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl21tls1_write_channel_idEPNS_13SSL_HANDSHAKEEP6cbb_st(%"struct.bssl::SSL_HANDSHAKE"*, %struct.cbb_st*) local_unnamed_addr #0 {
  %3 = alloca [64 x i8], align 16
  %4 = alloca i64, align 8
  %5 = alloca %struct.cbb_st, align 8
  %6 = getelementptr inbounds [64 x i8], [64 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 64, i1 false)
  %7 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #11
  store i64 -6148914691236517206, i64* %4, align 8
  %8 = call zeroext i1 @_ZN4bssl20tls1_channel_id_hashEPNS_13SSL_HANDSHAKEEPhPm(%"struct.bssl::SSL_HANDSHAKE"* %0, i8* nonnull %6, i64* nonnull %4)
  br i1 %8, label %9, label %66

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 1
  %11 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %10, align 8
  %12 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %11, i64 0, i32 15, i32 0, i32 0, i32 0
  %13 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %12, align 8
  %14 = call %struct.ec_key_st* @EVP_PKEY_get0_EC_KEY(%struct.evp_pkey_st* %13) #11
  %15 = icmp eq %struct.ec_key_st* %14, null
  br i1 %15, label %16, label %17

16:                                               ; preds = %9
  call void @ERR_put_error(i32 16, i32 0, i32 68, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 4099) #11
  br label %66

17:                                               ; preds = %9
  %18 = call %struct.bignum_st* @BN_new() #11
  %19 = call %struct.bignum_st* @BN_new() #11
  %20 = icmp eq %struct.bignum_st* %18, null
  %21 = icmp eq %struct.bignum_st* %19, null
  br i1 %20, label %60, label %22

22:                                               ; preds = %17
  br i1 %21, label %64, label %23

23:                                               ; preds = %22
  %24 = call %struct.ec_group_st* @EC_KEY_get0_group(%struct.ec_key_st* nonnull %14) #11
  %25 = call %struct.ec_point_st* @EC_KEY_get0_public_key(%struct.ec_key_st* nonnull %14) #11
  %26 = call i32 @EC_POINT_get_affine_coordinates_GFp(%struct.ec_group_st* %24, %struct.ec_point_st* %25, %struct.bignum_st* nonnull %18, %struct.bignum_st* nonnull %19, %struct.bignum_ctx* null) #11
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %62, label %28

28:                                               ; preds = %23
  %29 = load i64, i64* %4, align 8
  %30 = call %struct.ecdsa_sig_st* @ECDSA_do_sign(i8* nonnull %6, i64 %29, %struct.ec_key_st* nonnull %14) #11
  %31 = icmp eq %struct.ecdsa_sig_st* %30, null
  br i1 %31, label %62, label %32

32:                                               ; preds = %28
  %33 = bitcast %struct.cbb_st* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %33) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 32, i1 false)
  %34 = call i32 @CBB_add_u16(%struct.cbb_st* %1, i16 zeroext 30032) #11
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %58, label %36

36:                                               ; preds = %32
  %37 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* %1, %struct.cbb_st* nonnull %5) #11
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %58, label %39

39:                                               ; preds = %36
  %40 = call i32 @BN_bn2cbb_padded(%struct.cbb_st* nonnull %5, i64 32, %struct.bignum_st* nonnull %18) #11
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %58, label %42

42:                                               ; preds = %39
  %43 = call i32 @BN_bn2cbb_padded(%struct.cbb_st* nonnull %5, i64 32, %struct.bignum_st* nonnull %19) #11
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %58, label %45

45:                                               ; preds = %42
  %46 = getelementptr inbounds %struct.ecdsa_sig_st, %struct.ecdsa_sig_st* %30, i64 0, i32 0
  %47 = load %struct.bignum_st*, %struct.bignum_st** %46, align 8
  %48 = call i32 @BN_bn2cbb_padded(%struct.cbb_st* nonnull %5, i64 32, %struct.bignum_st* %47) #11
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %58, label %50

50:                                               ; preds = %45
  %51 = getelementptr inbounds %struct.ecdsa_sig_st, %struct.ecdsa_sig_st* %30, i64 0, i32 1
  %52 = load %struct.bignum_st*, %struct.bignum_st** %51, align 8
  %53 = call i32 @BN_bn2cbb_padded(%struct.cbb_st* nonnull %5, i64 32, %struct.bignum_st* %52) #11
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %50
  %56 = call i32 @CBB_flush(%struct.cbb_st* %1) #11
  %57 = icmp ne i32 %56, 0
  br label %58

58:                                               ; preds = %55, %32, %36, %39, %42, %45, %50
  %59 = phi i1 [ false, %50 ], [ false, %45 ], [ false, %42 ], [ false, %39 ], [ false, %36 ], [ false, %32 ], [ %57, %55 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %33) #11
  call void @ECDSA_SIG_free(%struct.ecdsa_sig_st* nonnull %30) #11
  br label %62

60:                                               ; preds = %17
  br i1 %21, label %66, label %61

61:                                               ; preds = %60
  call void @BN_free(%struct.bignum_st* nonnull %19) #11
  br label %66

62:                                               ; preds = %28, %58, %23
  %63 = phi i1 [ %59, %58 ], [ false, %23 ], [ false, %28 ]
  call void @BN_free(%struct.bignum_st* nonnull %19) #11
  br label %64

64:                                               ; preds = %22, %62
  %65 = phi i1 [ %63, %62 ], [ false, %22 ]
  call void @BN_free(%struct.bignum_st* nonnull %18) #11
  br label %66

66:                                               ; preds = %60, %64, %61, %16, %2
  %67 = phi i1 [ false, %2 ], [ false, %16 ], [ %65, %64 ], [ false, %61 ], [ false, %60 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %6) #11
  ret i1 %67
}

declare %struct.ec_key_st* @EVP_PKEY_get0_EC_KEY(%struct.evp_pkey_st*) local_unnamed_addr #2

declare i32 @EC_POINT_get_affine_coordinates_GFp(%struct.ec_group_st*, %struct.ec_point_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_ctx*) local_unnamed_addr #2

declare %struct.ec_group_st* @EC_KEY_get0_group(%struct.ec_key_st*) local_unnamed_addr #2

declare %struct.ec_point_st* @EC_KEY_get0_public_key(%struct.ec_key_st*) local_unnamed_addr #2

declare %struct.ecdsa_sig_st* @ECDSA_do_sign(i8*, i64, %struct.ec_key_st*) local_unnamed_addr #2

declare i32 @BN_bn2cbb_padded(%struct.cbb_st*, i64, %struct.bignum_st*) local_unnamed_addr #2

declare zeroext i1 @_ZN4bssl37tls13_get_cert_verify_signature_inputEPNS_13SSL_HANDSHAKEEPNS_5ArrayIhEENS_25ssl_cert_verify_context_tE(%"struct.bssl::SSL_HANDSHAKE"*, %"class.bssl::Array"*, i32) local_unnamed_addr #2

declare i8* @SHA256(i8*, i64, i8*) local_unnamed_addr #2

declare i32 @SHA256_Init(%struct.sha256_state_st*) local_unnamed_addr #2

declare i32 @SHA256_Update(%struct.sha256_state_st*, i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN4bssl13SSLTranscript7GetHashEPhPm(%"class.bssl::SSLTranscript"*, i8*, i64*) local_unnamed_addr #2

declare i32 @SHA256_Final(i8*, %struct.sha256_state_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl43tls1_record_handshake_hashes_for_channel_idEPNS_13SSL_HANDSHAKEE(%"struct.bssl::SSL_HANDSHAKE"*) local_unnamed_addr #0 {
  %2 = alloca i64, align 8
  %3 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %4 = load %struct.ssl_st*, %struct.ssl_st** %3, align 8
  %5 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %4, i64 0, i32 14, i32 0, i32 0, i32 0
  %6 = load %struct.ssl_session_st*, %struct.ssl_session_st** %5, align 8
  %7 = icmp eq %struct.ssl_session_st* %6, null
  br i1 %7, label %8, label %22

8:                                                ; preds = %1
  %9 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  store i64 -6148914691236517206, i64* %2, align 8
  %10 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 20
  %11 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 40, i32 0, i32 0, i32 0
  %12 = load %struct.ssl_session_st*, %struct.ssl_session_st** %11, align 8
  %13 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %12, i64 0, i32 28, i64 0
  %14 = call zeroext i1 @_ZN4bssl13SSLTranscript7GetHashEPhPm(%"class.bssl::SSLTranscript"* %10, i8* %13, i64* nonnull %2) #11
  br i1 %14, label %15, label %20

15:                                               ; preds = %8
  %16 = load i64, i64* %2, align 8
  %17 = trunc i64 %16 to i8
  %18 = load %struct.ssl_session_st*, %struct.ssl_session_st** %11, align 8
  %19 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %18, i64 0, i32 29
  store i8 %17, i8* %19, align 8
  br label %20

20:                                               ; preds = %8, %15
  %21 = phi i1 [ true, %15 ], [ false, %8 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  br label %22

22:                                               ; preds = %1, %20
  %23 = phi i1 [ %21, %20 ], [ false, %1 ]
  ret i1 %23
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl26ssl_do_channel_id_callbackEPNS_13SSL_HANDSHAKEE(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly) local_unnamed_addr #0 {
  %2 = alloca %struct.evp_pkey_st*, align 8
  %3 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 1
  %4 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %3, align 8
  %5 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %4, i64 0, i32 15, i32 0, i32 0, i32 0
  %6 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %5, align 8
  %7 = icmp eq %struct.evp_pkey_st* %6, null
  br i1 %7, label %8, label %26

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %10 = load %struct.ssl_st*, %struct.ssl_st** %9, align 8
  %11 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %10, i64 0, i32 16, i32 0, i32 0, i32 0
  %12 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %11, align 8
  %13 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %12, i64 0, i32 28
  %14 = load void (%struct.ssl_st*, %struct.evp_pkey_st**)*, void (%struct.ssl_st*, %struct.evp_pkey_st**)** %13, align 8
  %15 = icmp eq void (%struct.ssl_st*, %struct.evp_pkey_st**)* %14, null
  br i1 %15, label %26, label %16

16:                                               ; preds = %8
  %17 = bitcast %struct.evp_pkey_st** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  store %struct.evp_pkey_st* null, %struct.evp_pkey_st** %2, align 8
  call void %14(%struct.ssl_st* %10, %struct.evp_pkey_st** nonnull %2) #11
  %18 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %2, align 8
  %19 = icmp eq %struct.evp_pkey_st* %18, null
  br i1 %19, label %24, label %20

20:                                               ; preds = %16
  %21 = load %struct.ssl_st*, %struct.ssl_st** %9, align 8
  %22 = call i32 @SSL_set1_tls_channel_id(%struct.ssl_st* %21, %struct.evp_pkey_st* nonnull %18) #11
  %23 = icmp ne i32 %22, 0
  call void @EVP_PKEY_free(%struct.evp_pkey_st* nonnull %18) #11
  br label %24

24:                                               ; preds = %16, %20
  %25 = phi i1 [ %23, %20 ], [ true, %16 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %26

26:                                               ; preds = %1, %8, %24
  %27 = phi i1 [ %25, %24 ], [ true, %8 ], [ true, %1 ]
  ret i1 %27
}

declare i32 @SSL_set1_tls_channel_id(%struct.ssl_st*, %struct.evp_pkey_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl21ssl_is_sct_list_validEPK6cbs_st(%struct.cbs_st* nocapture readonly) local_unnamed_addr #0 {
  %2 = alloca %struct.cbs_st, align 8
  %3 = alloca %struct.cbs_st, align 8
  %4 = alloca %struct.cbs_st, align 8
  %5 = bitcast %struct.cbs_st* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #11
  %6 = bitcast %struct.cbs_st* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 %6, i64 16, i1 false)
  %7 = bitcast %struct.cbs_st* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #11
  %8 = bitcast %struct.cbs_st* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = call i32 @CBS_get_u16_length_prefixed(%struct.cbs_st* nonnull %2, %struct.cbs_st* nonnull %3) #11
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %33, label %11

11:                                               ; preds = %1
  %12 = call i64 @CBS_len(%struct.cbs_st* nonnull %2) #11
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %14, label %33

14:                                               ; preds = %11
  %15 = call i64 @CBS_len(%struct.cbs_st* nonnull %3) #11
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %33, label %17

17:                                               ; preds = %14
  %18 = call i64 @CBS_len(%struct.cbs_st* nonnull %3) #11
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %33, label %20

20:                                               ; preds = %17
  %21 = bitcast %struct.cbs_st* %4 to i8*
  %22 = bitcast %struct.cbs_st* %4 to i8*
  br label %23

23:                                               ; preds = %20, %29
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 16, i1 false)
  %24 = call i32 @CBS_get_u16_length_prefixed(%struct.cbs_st* nonnull %3, %struct.cbs_st* nonnull %4) #11
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %23
  %27 = call i64 @CBS_len(%struct.cbs_st* nonnull %4) #11
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %26
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #11
  %30 = call i64 @CBS_len(%struct.cbs_st* nonnull %3) #11
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %33, label %23

32:                                               ; preds = %26, %23
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #11
  br label %33

33:                                               ; preds = %29, %17, %32, %14, %1, %11
  %34 = phi i1 [ false, %32 ], [ false, %11 ], [ false, %1 ], [ false, %14 ], [ true, %17 ], [ true, %29 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #11
  ret i1 %34
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_early_callback_ctx_extension_get(%struct.ssl_early_callback_ctx* nocapture readonly, i16 zeroext, i8** nocapture, i64* nocapture) local_unnamed_addr #0 {
  %5 = alloca %struct.cbs_st, align 8
  %6 = bitcast %struct.cbs_st* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  %7 = bitcast %struct.cbs_st* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false)
  %8 = call zeroext i1 @_ZN4bssl30ssl_client_hello_get_extensionEPK22ssl_early_callback_ctxP6cbs_stt(%struct.ssl_early_callback_ctx* %0, %struct.cbs_st* nonnull %5, i16 zeroext %1)
  br i1 %8, label %9, label %12

9:                                                ; preds = %4
  %10 = call i8* @CBS_data(%struct.cbs_st* nonnull %5) #11
  store i8* %10, i8** %2, align 8
  %11 = call i64 @CBS_len(%struct.cbs_st* nonnull %5) #11
  store i64 %11, i64* %3, align 8
  br label %12

12:                                               ; preds = %4, %9
  %13 = phi i32 [ 1, %9 ], [ 0, %4 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  ret i32 %13
}

; Function Attrs: nofree
declare void @qsort(i8*, i64, i64, i32 (i8*, i8*)* nocapture) local_unnamed_addr #6

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @_ZN4bsslL16compare_uint16_tEPKvS1_(i8* nocapture readonly, i8* nocapture readonly) #3 {
  %3 = bitcast i8* %0 to i16*
  %4 = load i16, i16* %3, align 2
  %5 = bitcast i8* %1 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = icmp ult i16 %4, %6
  %8 = icmp ugt i16 %4, %6
  %9 = zext i1 %8 to i32
  %10 = select i1 %7, i32 -1, i32 %9
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL23ext_sni_add_clienthelloEPNS_13SSL_HANDSHAKEEP6cbb_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly, %struct.cbb_st*) #0 {
  %3 = alloca %struct.cbb_st, align 8
  %4 = alloca %struct.cbb_st, align 8
  %5 = alloca %struct.cbb_st, align 8
  %6 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %7 = load %struct.ssl_st*, %struct.ssl_st** %6, align 8
  %8 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %7, i64 0, i32 23, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = icmp eq i8* %9, null
  br i1 %10, label %39, label %11

11:                                               ; preds = %2
  %12 = bitcast %struct.cbb_st* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 32, i1 false)
  %13 = bitcast %struct.cbb_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 32, i1 false)
  %14 = bitcast %struct.cbb_st* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 32, i1 false)
  %15 = tail call i32 @CBB_add_u16(%struct.cbb_st* %1, i16 zeroext 0) #11
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %37, label %17

17:                                               ; preds = %11
  %18 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* %1, %struct.cbb_st* nonnull %3) #11
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %37, label %20

20:                                               ; preds = %17
  %21 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* nonnull %3, %struct.cbb_st* nonnull %4) #11
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %37, label %23

23:                                               ; preds = %20
  %24 = call i32 @CBB_add_u8(%struct.cbb_st* nonnull %4, i8 zeroext 0) #11
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %37, label %26

26:                                               ; preds = %23
  %27 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* nonnull %4, %struct.cbb_st* nonnull %5) #11
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %37, label %29

29:                                               ; preds = %26
  %30 = load i8*, i8** %8, align 8
  %31 = call i64 @strlen(i8* %30) #12
  %32 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %5, i8* %30, i64 %31) #11
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %29
  %35 = call i32 @CBB_flush(%struct.cbb_st* %1) #11
  %36 = icmp ne i32 %35, 0
  br label %37

37:                                               ; preds = %34, %11, %17, %20, %23, %26, %29
  %38 = phi i1 [ false, %29 ], [ false, %26 ], [ false, %23 ], [ false, %20 ], [ false, %17 ], [ false, %11 ], [ %36, %34 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #11
  br label %39

39:                                               ; preds = %2, %37
  %40 = phi i1 [ %38, %37 ], [ true, %2 ]
  ret i1 %40
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL25ext_sni_parse_serverhelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture readnone, i8* nocapture readnone, %struct.cbs_st*) #0 {
  %4 = icmp eq %struct.cbs_st* %2, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %3
  %6 = tail call i64 @CBS_len(%struct.cbs_st* nonnull %2) #11
  %7 = icmp eq i64 %6, 0
  br label %8

8:                                                ; preds = %5, %3
  %9 = phi i1 [ true, %3 ], [ %7, %5 ]
  ret i1 %9
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZN4bsslL25ext_sni_parse_clienthelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture readnone, i8* nocapture readnone, %struct.cbs_st* nocapture readnone) #7 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL23ext_sni_add_serverhelloEPNS_13SSL_HANDSHAKEEP6cbb_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly, %struct.cbb_st*) #0 {
  %3 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %4 = load %struct.ssl_st*, %struct.ssl_st** %3, align 8
  %5 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %4, i64 0, i32 8
  %6 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %5, align 8
  %7 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %6, i64 0, i32 23
  %8 = load i16, i16* %7, align 1
  %9 = and i16 %8, 64
  %10 = icmp eq i16 %9, 0
  br i1 %10, label %11, label %22

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 46
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 2048
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %22, label %16

16:                                               ; preds = %11
  %17 = tail call i32 @CBB_add_u16(%struct.cbb_st* %1, i16 zeroext 0) #11
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %16
  %20 = tail call i32 @CBB_add_u16(%struct.cbb_st* %1, i16 zeroext 0) #11
  %21 = icmp ne i32 %20, 0
  ret i1 %21

22:                                               ; preds = %16, %2, %11
  %23 = phi i1 [ true, %11 ], [ true, %2 ], [ false, %16 ]
  ret i1 %23
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL23ext_ech_add_clienthelloEPNS_13SSL_HANDSHAKEEP6cbb_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture, %struct.cbb_st*) #0 {
  %3 = alloca i64, align 8
  %4 = alloca %struct.cbb_st, align 8
  %5 = alloca i8, align 1
  %6 = alloca [32 x i8], align 16
  %7 = alloca [32 x i8], align 16
  %8 = alloca [212 x i8], align 16
  %9 = alloca %struct.cbb_st, align 8
  %10 = alloca %struct.cbb_st, align 8
  %11 = alloca %struct.cbb_st, align 8
  %12 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 6
  %13 = load i16, i16* %12, align 2
  %14 = icmp ult i16 %13, 772
  br i1 %14, label %116, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 1
  %17 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %16, align 8
  %18 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %17, i64 0, i32 23
  %19 = load i16, i16* %18, align 1
  %20 = and i16 %19, 1
  %21 = icmp eq i16 %20, 0
  br i1 %21, label %116, label %22

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %24 = load %struct.ssl_st*, %struct.ssl_st** %23, align 8
  %25 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %24, i64 0, i32 8
  %26 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %25, align 8
  %27 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %26, i64 0, i32 23
  %28 = load i16, i16* %27, align 1
  %29 = icmp sgt i16 %28, -1
  br i1 %29, label %49, label %30

30:                                               ; preds = %22
  %31 = bitcast %struct.cbb_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %31) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 32, i1 false) #11
  %32 = tail call i32 @CBB_add_u16(%struct.cbb_st* %1, i16 zeroext -502) #11
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %47, label %34

34:                                               ; preds = %30
  %35 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* %1, %struct.cbb_st* nonnull %4) #11
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %47, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 22, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 22, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %4, i8* %39, i64 %41) #11
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %47, label %44

44:                                               ; preds = %37
  %45 = call i32 @CBB_flush(%struct.cbb_st* %1) #11
  %46 = icmp ne i32 %45, 0
  br label %47

47:                                               ; preds = %44, %37, %34, %30
  %48 = phi i1 [ false, %37 ], [ false, %34 ], [ false, %30 ], [ %46, %44 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %31) #11
  br label %116

49:                                               ; preds = %22
  %50 = tail call i32 @EVP_has_aes_hardware() #11
  %51 = icmp eq i32 %50, 0
  %52 = select i1 %51, i16 3, i16 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #11
  store i8 -86, i8* %5, align 1
  %53 = call i32 @RAND_bytes(i8* nonnull %5, i64 1) #11
  %54 = getelementptr inbounds [32 x i8], [32 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %54) #11
  %55 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %54, i8 -86, i64 32, i1 false) #11
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %55) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %55, i8 -86, i64 32, i1 false) #11
  call void @X25519_keypair(i8* nonnull %54, i8* nonnull %55) #11
  %56 = getelementptr inbounds [212 x i8], [212 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 212, i8* nonnull %56) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %56, i8 -86, i64 212, i1 false) #11
  %57 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #11
  store i64 -6148914691236517206, i64* %3, align 8
  %58 = call i32 @RAND_bytes(i8* nonnull %57, i64 8) #11
  %59 = load i64, i64* %3, align 8
  %60 = urem i64 %59, 69
  %61 = or i64 %60, 128
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #11
  %62 = add nuw nsw i64 %61, 16
  %63 = call i32 @RAND_bytes(i8* nonnull %56, i64 %62) #11
  %64 = bitcast %struct.cbb_st* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %64) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 -86, i64 32, i1 false) #11
  %65 = bitcast %struct.cbb_st* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %65) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 -86, i64 32, i1 false) #11
  %66 = bitcast %struct.cbb_st* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %66) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %66, i8 -86, i64 32, i1 false) #11
  %67 = call i32 @CBB_add_u16(%struct.cbb_st* %1, i16 zeroext -502) #11
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %114, label %69

69:                                               ; preds = %49
  %70 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* %1, %struct.cbb_st* nonnull %9) #11
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %114, label %72

72:                                               ; preds = %69
  %73 = call i32 @CBB_add_u16(%struct.cbb_st* nonnull %9, i16 zeroext 1) #11
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %114, label %75

75:                                               ; preds = %72
  %76 = call i32 @CBB_add_u16(%struct.cbb_st* nonnull %9, i16 zeroext %52) #11
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %114, label %78

78:                                               ; preds = %75
  %79 = load i8, i8* %5, align 1
  %80 = call i32 @CBB_add_u8(%struct.cbb_st* nonnull %9, i8 zeroext %79) #11
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %114, label %82

82:                                               ; preds = %78
  %83 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* nonnull %9, %struct.cbb_st* nonnull %10) #11
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %114, label %85

85:                                               ; preds = %82
  %86 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %10, i8* nonnull %54, i64 32) #11
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %114, label %88

88:                                               ; preds = %85
  %89 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* nonnull %9, %struct.cbb_st* nonnull %11) #11
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %114, label %91

91:                                               ; preds = %88
  %92 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %11, i8* nonnull %56, i64 %62) #11
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %114, label %94

94:                                               ; preds = %91
  %95 = call i32 @CBB_flush(%struct.cbb_st* nonnull %9) #11
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %114, label %97

97:                                               ; preds = %94
  %98 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 22
  %99 = call i8* @CBB_data(%struct.cbb_st* nonnull %9) #11
  %100 = call i64 @CBB_len(%struct.cbb_st* nonnull %9) #11
  %101 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %98, i64 0, i32 0
  %102 = load i8*, i8** %101, align 8
  call void @OPENSSL_free(i8* %102) #11
  %103 = bitcast %"class.bssl::Array"* %98 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %103, i8 0, i64 16, i1 false) #11
  %104 = icmp eq i64 %100, 0
  br i1 %104, label %111, label %105

105:                                              ; preds = %97
  %106 = call i8* @OPENSSL_malloc(i64 %100) #11
  store i8* %106, i8** %101, align 8
  %107 = icmp eq i8* %106, null
  br i1 %107, label %110, label %108

108:                                              ; preds = %105
  %109 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 22, i32 1
  store i64 %100, i64* %109, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %106, i8* align 1 %99, i64 %100, i1 false) #11
  br label %111

110:                                              ; preds = %105
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.4, i64 0, i64 0), i32 324) #11
  br label %114

111:                                              ; preds = %108, %97
  %112 = call i32 @CBB_flush(%struct.cbb_st* %1) #11
  %113 = icmp ne i32 %112, 0
  br label %114

114:                                              ; preds = %111, %110, %94, %91, %88, %85, %82, %78, %75, %72, %69, %49
  %115 = phi i1 [ %113, %111 ], [ false, %94 ], [ false, %91 ], [ false, %88 ], [ false, %85 ], [ false, %82 ], [ false, %78 ], [ false, %75 ], [ false, %72 ], [ false, %69 ], [ false, %49 ], [ false, %110 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %66) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %65) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %64) #11
  call void @llvm.lifetime.end.p0i8(i64 212, i8* nonnull %56) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %55) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %54) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #11
  br label %116

116:                                              ; preds = %114, %47, %15, %2
  %117 = phi i1 [ true, %2 ], [ true, %15 ], [ %48, %47 ], [ %115, %114 ]
  ret i1 %117
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL25ext_ech_parse_serverhelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture readnone, i8* nocapture, %struct.cbs_st*) #0 {
  %4 = alloca %struct.cbs_st, align 8
  %5 = alloca i16, align 2
  %6 = alloca %struct.cbs_st, align 8
  %7 = icmp eq %struct.cbs_st* %2, null
  br i1 %7, label %39, label %8

8:                                                ; preds = %3
  %9 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #11
  %10 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 16, i1 false)
  %11 = call i32 @CBS_get_u16_length_prefixed(%struct.cbs_st* nonnull %2, %struct.cbs_st* nonnull %4) #11
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %26, label %13

13:                                               ; preds = %8
  %14 = call i64 @CBS_len(%struct.cbs_st* nonnull %4) #11
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %26, label %16

16:                                               ; preds = %13
  %17 = call i64 @CBS_len(%struct.cbs_st* nonnull %2) #11
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %19, label %26

19:                                               ; preds = %16
  %20 = call i64 @CBS_len(%struct.cbs_st* nonnull %4) #11
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %37, label %22

22:                                               ; preds = %19
  %23 = bitcast i16* %5 to i8*
  %24 = bitcast %struct.cbs_st* %6 to i8*
  %25 = bitcast %struct.cbs_st* %6 to i8*
  br label %27

26:                                               ; preds = %16, %8, %13
  store i8 50, i8* %1, align 1
  br label %37

27:                                               ; preds = %22, %34
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %23) #11
  store i16 -21846, i16* %5, align 2
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 16, i1 false)
  %28 = call i32 @CBS_get_u16(%struct.cbs_st* nonnull %4, i16* nonnull %5) #11
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %27
  %31 = call i32 @CBS_get_u16_length_prefixed(%struct.cbs_st* nonnull %4, %struct.cbs_st* nonnull %6) #11
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %30, %27
  store i8 50, i8* %1, align 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %23) #11
  br label %37

34:                                               ; preds = %30
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %23) #11
  %35 = call i64 @CBS_len(%struct.cbs_st* nonnull %4) #11
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %37, label %27

37:                                               ; preds = %34, %19, %33, %26
  %38 = phi i1 [ false, %26 ], [ false, %33 ], [ true, %19 ], [ true, %34 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #11
  br label %39

39:                                               ; preds = %3, %37
  %40 = phi i1 [ %38, %37 ], [ true, %3 ]
  ret i1 %40
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL25ext_ech_parse_clienthelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture, i8* nocapture readnone, %struct.cbs_st* readnone) #8 {
  %4 = icmp eq %struct.cbs_st* %2, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 46
  %7 = load i32, i32* %6, align 8
  %8 = or i32 %7, 2
  store i32 %8, i32* %6, align 8
  br label %9

9:                                                ; preds = %3, %5
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL23ext_ech_add_serverhelloEPNS_13SSL_HANDSHAKEEP6cbb_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly, %struct.cbb_st*) #0 {
  %3 = alloca %struct.cbb_st, align 8
  %4 = alloca %struct.cbb_st, align 8
  %5 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %6 = load %struct.ssl_st*, %struct.ssl_st** %5, align 8
  %7 = tail call zeroext i16 @_ZN4bssl20ssl_protocol_versionEPK6ssl_st(%struct.ssl_st* %6) #11
  %8 = icmp ult i16 %7, 772
  br i1 %8, label %60, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 46
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %60

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 42, i32 0, i32 0, i32 0
  %16 = load %struct.ssl_ech_server_config_list_st*, %struct.ssl_ech_server_config_list_st** %15, align 8
  %17 = icmp eq %struct.ssl_ech_server_config_list_st* %16, null
  br i1 %17, label %60, label %18

18:                                               ; preds = %14
  %19 = bitcast %struct.cbb_st* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 32, i1 false)
  %20 = bitcast %struct.cbb_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 32, i1 false)
  %21 = tail call i32 @CBB_add_u16(%struct.cbb_st* %1, i16 zeroext -502) #11
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %58, label %23

23:                                               ; preds = %18
  %24 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* %1, %struct.cbb_st* nonnull %3) #11
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %58, label %26

26:                                               ; preds = %23
  %27 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* nonnull %3, %struct.cbb_st* nonnull %4) #11
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %58, label %29

29:                                               ; preds = %26
  %30 = load %struct.ssl_ech_server_config_list_st*, %struct.ssl_ech_server_config_list_st** %15, align 8
  %31 = getelementptr inbounds %struct.ssl_ech_server_config_list_st, %struct.ssl_ech_server_config_list_st* %30, i64 0, i32 0, i32 1, i32 0
  %32 = load %"class.std::__1::unique_ptr.67"*, %"class.std::__1::unique_ptr.67"** %31, align 8
  %33 = getelementptr inbounds %struct.ssl_ech_server_config_list_st, %struct.ssl_ech_server_config_list_st* %30, i64 0, i32 0, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.67"* %32, i64 %34
  %36 = icmp eq i64 %34, 0
  br i1 %36, label %55, label %37

37:                                               ; preds = %29, %52
  %38 = phi %"class.std::__1::unique_ptr.67"* [ %53, %52 ], [ %32, %29 ]
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.67"* %38, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.bssl::ECHServerConfig"*, %"class.bssl::ECHServerConfig"** %39, align 8
  %41 = getelementptr inbounds %"class.bssl::ECHServerConfig", %"class.bssl::ECHServerConfig"* %40, i64 0, i32 4
  %42 = load i8, i8* %41, align 1
  %43 = and i8 %42, 1
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %52, label %45

45:                                               ; preds = %37
  %46 = getelementptr inbounds %"class.bssl::ECHServerConfig", %"class.bssl::ECHServerConfig"* %40, i64 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds %"class.bssl::ECHServerConfig", %"class.bssl::ECHServerConfig"* %40, i64 0, i32 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %4, i8* %47, i64 %49) #11
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %58, label %52

52:                                               ; preds = %37, %45
  %53 = getelementptr inbounds %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.67"* %38, i64 1
  %54 = icmp eq %"class.std::__1::unique_ptr.67"* %53, %35
  br i1 %54, label %55, label %37

55:                                               ; preds = %52, %29
  %56 = call i32 @CBB_flush(%struct.cbb_st* %1) #11
  %57 = icmp ne i32 %56, 0
  br label %58

58:                                               ; preds = %45, %18, %23, %26, %55
  %59 = phi i1 [ %57, %55 ], [ false, %26 ], [ false, %23 ], [ false, %18 ], [ false, %45 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #11
  br label %60

60:                                               ; preds = %2, %14, %9, %58
  %61 = phi i1 [ %59, %58 ], [ true, %9 ], [ true, %14 ], [ true, %2 ]
  ret i1 %61
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZN4bsslL32ext_ech_is_inner_add_clienthelloEPNS_13SSL_HANDSHAKEEP6cbb_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture readnone, %struct.cbb_st* nocapture readnone) #7 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL24forbid_parse_serverhelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture readnone, i8* nocapture, %struct.cbs_st* readnone) #0 {
  %4 = icmp eq %struct.cbs_st* %2, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %3
  store i8 110, i8* %1, align 1
  tail call void @ERR_put_error(i32 16, i32 0, i32 222, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 524) #11
  br label %6

6:                                                ; preds = %3, %5
  %7 = phi i1 [ false, %5 ], [ true, %3 ]
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL34ext_ech_is_inner_parse_clienthelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture, i8* nocapture, %struct.cbs_st*) #0 {
  %4 = icmp eq %struct.cbs_st* %2, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %3
  %6 = tail call i64 @CBS_len(%struct.cbs_st* nonnull %2) #11
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %5
  store i8 47, i8* %1, align 1
  br label %13

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 46
  %11 = load i32, i32* %10, align 8
  %12 = or i32 %11, 4
  store i32 %12, i32* %10, align 8
  br label %13

13:                                               ; preds = %3, %9, %8
  %14 = phi i1 [ false, %8 ], [ true, %9 ], [ true, %3 ]
  ret i1 %14
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZN4bsslL20dont_add_serverhelloEPNS_13SSL_HANDSHAKEEP6cbb_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture readnone, %struct.cbb_st* nocapture readnone) #7 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL23ext_ems_add_clienthelloEPNS_13SSL_HANDSHAKEEP6cbb_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly, %struct.cbb_st*) #0 {
  %3 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 5
  %4 = load i16, i16* %3, align 4
  %5 = icmp ugt i16 %4, 771
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = tail call i32 @CBB_add_u16(%struct.cbb_st* %1, i16 zeroext 23) #11
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %6
  %10 = tail call i32 @CBB_add_u16(%struct.cbb_st* %1, i16 zeroext 0) #11
  %11 = icmp ne i32 %10, 0
  ret i1 %11

12:                                               ; preds = %6, %2
  %13 = phi i1 [ true, %2 ], [ false, %6 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL25ext_ems_parse_serverhelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture, i8* nocapture, %struct.cbs_st*) #0 {
  %4 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %5 = load %struct.ssl_st*, %struct.ssl_st** %4, align 8
  %6 = icmp eq %struct.cbs_st* %2, null
  br i1 %6, label %17, label %7

7:                                                ; preds = %3
  %8 = tail call zeroext i16 @_ZN4bssl20ssl_protocol_versionEPK6ssl_st(%struct.ssl_st* %5) #11
  %9 = icmp ugt i16 %8, 771
  br i1 %9, label %34, label %10

10:                                               ; preds = %7
  %11 = tail call i64 @CBS_len(%struct.cbs_st* nonnull %2) #11
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %13, label %34

13:                                               ; preds = %10
  %14 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 46
  %15 = load i32, i32* %14, align 8
  %16 = or i32 %15, 524288
  store i32 %16, i32* %14, align 8
  br label %17

17:                                               ; preds = %3, %13
  %18 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %5, i64 0, i32 8
  %19 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %18, align 8
  %20 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %19, i64 0, i32 47, i32 0, i32 0, i32 0
  %21 = load %struct.ssl_session_st*, %struct.ssl_session_st** %20, align 8
  %22 = icmp eq %struct.ssl_session_st* %21, null
  br i1 %22, label %34, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 46
  %25 = load i32, i32* %24, align 8
  %26 = lshr i32 %25, 19
  %27 = and i32 %26, 1
  %28 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %21, i64 0, i32 36
  %29 = load i8, i8* %28, align 8
  %30 = and i8 %29, 1
  %31 = zext i8 %30 to i32
  %32 = icmp eq i32 %27, %31
  br i1 %32, label %34, label %33

33:                                               ; preds = %23
  tail call void @ERR_put_error(i32 16, i32 0, i32 263, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 973) #11
  store i8 47, i8* %1, align 1
  br label %34

34:                                               ; preds = %17, %23, %7, %10, %33
  %35 = phi i1 [ false, %33 ], [ false, %10 ], [ false, %7 ], [ true, %23 ], [ true, %17 ]
  ret i1 %35
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL25ext_ems_parse_clienthelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture, i8* nocapture readnone, %struct.cbs_st*) #0 {
  %4 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %5 = load %struct.ssl_st*, %struct.ssl_st** %4, align 8
  %6 = tail call zeroext i16 @_ZN4bssl20ssl_protocol_versionEPK6ssl_st(%struct.ssl_st* %5) #11
  %7 = icmp ugt i16 %6, 771
  %8 = icmp eq %struct.cbs_st* %2, null
  %9 = or i1 %8, %7
  br i1 %9, label %17, label %10

10:                                               ; preds = %3
  %11 = tail call i64 @CBS_len(%struct.cbs_st* nonnull %2) #11
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %13, label %17

13:                                               ; preds = %10
  %14 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 46
  %15 = load i32, i32* %14, align 8
  %16 = or i32 %15, 524288
  store i32 %16, i32* %14, align 8
  br label %17

17:                                               ; preds = %10, %3, %13
  %18 = phi i1 [ true, %13 ], [ true, %3 ], [ false, %10 ]
  ret i1 %18
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL23ext_ems_add_serverhelloEPNS_13SSL_HANDSHAKEEP6cbb_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly, %struct.cbb_st*) #0 {
  %3 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 46
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 524288
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = tail call i32 @CBB_add_u16(%struct.cbb_st* %1, i16 zeroext 23) #11
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %7
  %11 = tail call i32 @CBB_add_u16(%struct.cbb_st* %1, i16 zeroext 0) #11
  %12 = icmp ne i32 %11, 0
  ret i1 %12

13:                                               ; preds = %7, %2
  %14 = phi i1 [ true, %2 ], [ false, %7 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL22ext_ri_add_clienthelloEPNS_13SSL_HANDSHAKEEP6cbb_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly, %struct.cbb_st*) #0 {
  %3 = alloca %struct.cbb_st, align 8
  %4 = alloca %struct.cbb_st, align 8
  %5 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %6 = load %struct.ssl_st*, %struct.ssl_st** %5, align 8
  %7 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 5
  %8 = load i16, i16* %7, align 4
  %9 = icmp ugt i16 %8, 771
  br i1 %9, label %35, label %10

10:                                               ; preds = %2
  %11 = bitcast %struct.cbb_st* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 32, i1 false)
  %12 = bitcast %struct.cbb_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 32, i1 false)
  %13 = tail call i32 @CBB_add_u16(%struct.cbb_st* %1, i16 zeroext -255) #11
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %33, label %15

15:                                               ; preds = %10
  %16 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* %1, %struct.cbb_st* nonnull %3) #11
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %33, label %18

18:                                               ; preds = %15
  %19 = call i32 @CBB_add_u8_length_prefixed(%struct.cbb_st* nonnull %3, %struct.cbb_st* nonnull %4) #11
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %33, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %6, i64 0, i32 8
  %23 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %22, align 8
  %24 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %23, i64 0, i32 41, i64 0
  %25 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %23, i64 0, i32 42
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i64
  %28 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %4, i8* %24, i64 %27) #11
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %21
  %31 = call i32 @CBB_flush(%struct.cbb_st* %1) #11
  %32 = icmp ne i32 %31, 0
  br label %33

33:                                               ; preds = %30, %10, %15, %18, %21
  %34 = phi i1 [ false, %21 ], [ false, %18 ], [ false, %15 ], [ false, %10 ], [ %32, %30 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #11
  br label %35

35:                                               ; preds = %2, %33
  %36 = phi i1 [ %34, %33 ], [ true, %2 ]
  ret i1 %36
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL24ext_ri_parse_serverhelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly, i8* nocapture, %struct.cbs_st*) #0 {
  %4 = alloca %struct.cbs_st, align 8
  %5 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %6 = load %struct.ssl_st*, %struct.ssl_st** %5, align 8
  %7 = icmp ne %struct.cbs_st* %2, null
  br i1 %7, label %8, label %12

8:                                                ; preds = %3
  %9 = tail call zeroext i16 @_ZN4bssl20ssl_protocol_versionEPK6ssl_st(%struct.ssl_st* %6) #11
  %10 = icmp ugt i16 %9, 771
  br i1 %10, label %11, label %12

11:                                               ; preds = %8
  store i8 47, i8* %1, align 1
  br label %78

12:                                               ; preds = %8, %3
  %13 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %6, i64 0, i32 8
  %14 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %13, align 8
  %15 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %14, i64 0, i32 23
  %16 = load i16, i16* %15, align 1
  %17 = and i16 %16, 32
  %18 = icmp eq i16 %17, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %12
  %20 = zext i1 %7 to i32
  %21 = lshr i16 %16, 8
  %22 = and i16 %21, 1
  %23 = zext i16 %22 to i32
  %24 = icmp eq i32 %20, %23
  br i1 %24, label %26, label %25

25:                                               ; preds = %19
  store i8 40, i8* %1, align 1
  tail call void @ERR_put_error(i32 16, i32 0, i32 202, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 813) #11
  br label %78

26:                                               ; preds = %19, %12
  %27 = icmp eq %struct.cbs_st* %2, null
  br i1 %27, label %78, label %28

28:                                               ; preds = %26
  %29 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %14, i64 0, i32 42
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %14, i64 0, i32 43
  %33 = load i8, i8* %32, align 8
  %34 = zext i8 %33 to i64
  %35 = add nuw nsw i64 %34, %31
  %36 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #11
  %37 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 16, i1 false)
  %38 = call i32 @CBS_get_u8_length_prefixed(%struct.cbs_st* nonnull %2, %struct.cbs_st* nonnull %4) #11
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %43, label %40

40:                                               ; preds = %28
  %41 = call i64 @CBS_len(%struct.cbs_st* nonnull %2) #11
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %44, label %43

43:                                               ; preds = %40, %28
  call void @ERR_put_error(i32 16, i32 0, i32 201, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 843) #11
  store i8 47, i8* %1, align 1
  br label %76

44:                                               ; preds = %40
  %45 = call i64 @CBS_len(%struct.cbs_st* nonnull %4) #11
  %46 = icmp eq i64 %45, %35
  br i1 %46, label %48, label %47

47:                                               ; preds = %44
  call void @ERR_put_error(i32 16, i32 0, i32 202, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 850) #11
  store i8 40, i8* %1, align 1
  br label %76

48:                                               ; preds = %44
  %49 = call i8* @CBS_data(%struct.cbs_st* nonnull %4) #11
  %50 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %13, align 8
  %51 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %50, i64 0, i32 41, i64 0
  %52 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %50, i64 0, i32 42
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = call i32 @CRYPTO_memcmp(i8* %49, i8* %51, i64 %54) #11
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %58, label %57

57:                                               ; preds = %48
  call void @ERR_put_error(i32 16, i32 0, i32 202, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 862) #11
  store i8 40, i8* %1, align 1
  br label %76

58:                                               ; preds = %48
  %59 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %13, align 8
  %60 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %59, i64 0, i32 42
  %61 = load i8, i8* %60, align 1
  %62 = zext i8 %61 to i64
  %63 = getelementptr inbounds i8, i8* %49, i64 %62
  %64 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %59, i64 0, i32 44, i64 0
  %65 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %59, i64 0, i32 43
  %66 = load i8, i8* %65, align 8
  %67 = zext i8 %66 to i64
  %68 = call i32 @CRYPTO_memcmp(i8* %63, i8* %64, i64 %67) #11
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %71, label %70

70:                                               ; preds = %58
  call void @ERR_put_error(i32 16, i32 0, i32 202, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 874) #11
  store i8 40, i8* %1, align 1
  br label %76

71:                                               ; preds = %58
  %72 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %13, align 8
  %73 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %72, i64 0, i32 23
  %74 = load i16, i16* %73, align 1
  %75 = or i16 %74, 256
  store i16 %75, i16* %73, align 1
  br label %76

76:                                               ; preds = %57, %70, %71, %47, %43
  %77 = phi i1 [ false, %43 ], [ false, %47 ], [ true, %71 ], [ false, %70 ], [ false, %57 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #11
  br label %78

78:                                               ; preds = %26, %76, %25, %11
  %79 = phi i1 [ false, %11 ], [ false, %25 ], [ %77, %76 ], [ true, %26 ]
  ret i1 %79
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL24ext_ri_parse_clienthelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly, i8* nocapture, %struct.cbs_st*) #0 {
  %4 = alloca %struct.cbs_st, align 8
  %5 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %6 = load %struct.ssl_st*, %struct.ssl_st** %5, align 8
  %7 = tail call zeroext i16 @_ZN4bssl20ssl_protocol_versionEPK6ssl_st(%struct.ssl_st* %6) #11
  %8 = icmp ugt i16 %7, 771
  %9 = icmp eq %struct.cbs_st* %2, null
  %10 = or i1 %9, %8
  br i1 %10, label %32, label %11

11:                                               ; preds = %3
  %12 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #11
  %13 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = call i32 @CBS_get_u8_length_prefixed(%struct.cbs_st* nonnull %2, %struct.cbs_st* nonnull %4) #11
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %11
  %17 = call i64 @CBS_len(%struct.cbs_st* nonnull %2) #11
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %20, label %19

19:                                               ; preds = %16, %11
  call void @ERR_put_error(i32 16, i32 0, i32 201, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 901) #11
  br label %30

20:                                               ; preds = %16
  %21 = call i64 @CBS_len(%struct.cbs_st* nonnull %4) #11
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %24, label %23

23:                                               ; preds = %20
  call void @ERR_put_error(i32 16, i32 0, i32 202, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 908) #11
  store i8 40, i8* %1, align 1
  br label %30

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %6, i64 0, i32 8
  %26 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %25, align 8
  %27 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %26, i64 0, i32 23
  %28 = load i16, i16* %27, align 1
  %29 = or i16 %28, 256
  store i16 %29, i16* %27, align 1
  br label %30

30:                                               ; preds = %24, %23, %19
  %31 = phi i1 [ false, %19 ], [ false, %23 ], [ true, %24 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #11
  br label %32

32:                                               ; preds = %3, %30
  %33 = phi i1 [ %31, %30 ], [ true, %3 ]
  ret i1 %33
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL22ext_ri_add_serverhelloEPNS_13SSL_HANDSHAKEEP6cbb_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly, %struct.cbb_st*) #0 {
  %3 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %4 = load %struct.ssl_st*, %struct.ssl_st** %3, align 8
  %5 = tail call zeroext i16 @_ZN4bssl20ssl_protocol_versionEPK6ssl_st(%struct.ssl_st* %4) #11
  %6 = icmp ugt i16 %5, 771
  br i1 %6, label %16, label %7

7:                                                ; preds = %2
  %8 = tail call i32 @CBB_add_u16(%struct.cbb_st* %1, i16 zeroext -255) #11
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %16, label %10

10:                                               ; preds = %7
  %11 = tail call i32 @CBB_add_u16(%struct.cbb_st* %1, i16 zeroext 1) #11
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %10
  %14 = tail call i32 @CBB_add_u8(%struct.cbb_st* %1, i8 zeroext 0) #11
  %15 = icmp ne i32 %14, 0
  ret i1 %15

16:                                               ; preds = %7, %10, %2
  %17 = phi i1 [ true, %2 ], [ false, %10 ], [ false, %7 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL36ext_supported_groups_add_clienthelloEPNS_13SSL_HANDSHAKEEP6cbb_st(%"struct.bssl::SSL_HANDSHAKE"*, %struct.cbb_st*) #0 {
  %3 = alloca %struct.cbb_st, align 8
  %4 = alloca %struct.cbb_st, align 8
  %5 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %6 = load %struct.ssl_st*, %struct.ssl_st** %5, align 8
  %7 = bitcast %struct.cbb_st* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 32, i1 false)
  %8 = bitcast %struct.cbb_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 32, i1 false)
  %9 = tail call i32 @CBB_add_u16(%struct.cbb_st* %1, i16 zeroext 10) #11
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %60, label %11

11:                                               ; preds = %2
  %12 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* %1, %struct.cbb_st* nonnull %3) #11
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %60, label %14

14:                                               ; preds = %11
  %15 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* nonnull %3, %struct.cbb_st* nonnull %4) #11
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %60, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %6, i64 0, i32 16, i32 0, i32 0, i32 0
  %19 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %18, align 8
  %20 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %19, i64 0, i32 77
  %21 = load i16, i16* %20, align 8
  %22 = and i16 %21, 32
  %23 = icmp eq i16 %22, 0
  br i1 %23, label %28, label %24

24:                                               ; preds = %17
  %25 = call zeroext i16 @_ZN4bssl20ssl_get_grease_valueEPNS_13SSL_HANDSHAKEENS_18ssl_grease_index_tE(%"struct.bssl::SSL_HANDSHAKE"* %0, i32 1) #11
  %26 = call i32 @CBB_add_u16(%struct.cbb_st* nonnull %4, i16 zeroext %25) #11
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %60, label %28

28:                                               ; preds = %24, %17
  %29 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 1
  %30 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %29, align 8
  %31 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %30, i64 0, i32 14, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %38, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %30, i64 0, i32 14
  %36 = bitcast %"class.bssl::Array.56"* %35 to i64*
  %37 = load i64, i64* %36, align 8
  br label %38

38:                                               ; preds = %34, %28
  %39 = phi i64 [ %32, %34 ], [ 3, %28 ]
  %40 = phi i64 [ %37, %34 ], [ ptrtoint ([3 x i16]* @_ZN4bsslL14kDefaultGroupsE to i64), %28 ]
  %41 = inttoptr i64 %40 to i16*
  %42 = getelementptr inbounds i16, i16* %41, i64 %39
  %43 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 6
  br label %44

44:                                               ; preds = %38, %54
  %45 = phi i16* [ %41, %38 ], [ %55, %54 ]
  %46 = load i16, i16* %45, align 2
  %47 = icmp eq i16 %46, 16696
  br i1 %47, label %48, label %51

48:                                               ; preds = %44
  %49 = load i16, i16* %43, align 2
  %50 = icmp ult i16 %49, 772
  br i1 %50, label %54, label %51

51:                                               ; preds = %48, %44
  %52 = call i32 @CBB_add_u16(%struct.cbb_st* nonnull %4, i16 zeroext %46) #11
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %60, label %54

54:                                               ; preds = %48, %51
  %55 = getelementptr inbounds i16, i16* %45, i64 1
  %56 = icmp eq i16* %55, %42
  br i1 %56, label %57, label %44

57:                                               ; preds = %54
  %58 = call i32 @CBB_flush(%struct.cbb_st* %1) #11
  %59 = icmp ne i32 %58, 0
  br label %60

60:                                               ; preds = %51, %24, %2, %11, %14, %57
  %61 = phi i1 [ %59, %57 ], [ false, %14 ], [ false, %11 ], [ false, %2 ], [ false, %24 ], [ false, %51 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #11
  ret i1 %61
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZN4bsslL38ext_supported_groups_parse_serverhelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture readnone, i8* nocapture readnone, %struct.cbs_st* nocapture readnone) #7 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL38ext_supported_groups_parse_clienthelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture, i8* nocapture readnone, %struct.cbs_st*) #0 {
  %4 = alloca %struct.cbs_st, align 8
  %5 = icmp eq %struct.cbs_st* %2, null
  br i1 %5, label %22, label %6

6:                                                ; preds = %3
  %7 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #11
  %8 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = call i32 @CBS_get_u16_length_prefixed(%struct.cbs_st* nonnull %2, %struct.cbs_st* nonnull %4) #11
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %20, label %11

11:                                               ; preds = %6
  %12 = call i64 @CBS_len(%struct.cbs_st* nonnull %4) #11
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %11
  %15 = call i64 @CBS_len(%struct.cbs_st* nonnull %2) #11
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 27
  %19 = call fastcc zeroext i1 @_ZN4bsslL15parse_u16_arrayEPK6cbs_stPNS_5ArrayItEE(%struct.cbs_st* nonnull %4, %"class.bssl::Array.56"* %18)
  br label %20

20:                                               ; preds = %17, %11, %6, %14
  %21 = phi i1 [ false, %14 ], [ false, %6 ], [ false, %11 ], [ %19, %17 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #11
  br label %22

22:                                               ; preds = %3, %20
  %23 = phi i1 [ %21, %20 ], [ true, %3 ]
  ret i1 %23
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL28ext_ec_point_add_clienthelloEPNS_13SSL_HANDSHAKEEP6cbb_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly, %struct.cbb_st*) #0 {
  %3 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 5
  %4 = load i16, i16* %3, align 4
  %5 = icmp ugt i16 %4, 771
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @_ZN4bsslL26ext_ec_point_add_extensionEPNS_13SSL_HANDSHAKEEP6cbb_st(%struct.cbb_st* %1)
  br label %8

8:                                                ; preds = %2, %6
  %9 = phi i1 [ %7, %6 ], [ true, %2 ]
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL30ext_ec_point_parse_serverhelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly, i8* nocapture, %struct.cbs_st*) #0 {
  %4 = alloca %struct.cbs_st, align 8
  %5 = icmp eq %struct.cbs_st* %2, null
  br i1 %5, label %29, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %8 = load %struct.ssl_st*, %struct.ssl_st** %7, align 8
  %9 = tail call zeroext i16 @_ZN4bssl20ssl_protocol_versionEPK6ssl_st(%struct.ssl_st* %8) #11
  %10 = icmp ugt i16 %9, 771
  br i1 %10, label %29, label %11

11:                                               ; preds = %6
  %12 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #11
  %13 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = call i32 @CBS_get_u8_length_prefixed(%struct.cbs_st* nonnull %2, %struct.cbs_st* nonnull %4) #11
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %27, label %16

16:                                               ; preds = %11
  %17 = call i64 @CBS_len(%struct.cbs_st* nonnull %2) #11
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %19, label %27

19:                                               ; preds = %16
  %20 = call i8* @CBS_data(%struct.cbs_st* nonnull %4) #11
  %21 = call i64 @CBS_len(%struct.cbs_st* nonnull %4) #11
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %19
  %24 = call i8* @memchr(i8* %20, i32 0, i64 %21) #12
  %25 = icmp eq i8* %24, null
  br i1 %25, label %26, label %27

26:                                               ; preds = %19, %23
  store i8 47, i8* %1, align 1
  br label %27

27:                                               ; preds = %23, %11, %16, %26
  %28 = phi i1 [ false, %26 ], [ false, %16 ], [ false, %11 ], [ true, %23 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #11
  br label %29

29:                                               ; preds = %6, %3, %27
  %30 = phi i1 [ %28, %27 ], [ true, %3 ], [ false, %6 ]
  ret i1 %30
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL30ext_ec_point_parse_clienthelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly, i8* nocapture, %struct.cbs_st*) #0 {
  %4 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %5 = load %struct.ssl_st*, %struct.ssl_st** %4, align 8
  %6 = tail call zeroext i16 @_ZN4bssl20ssl_protocol_versionEPK6ssl_st(%struct.ssl_st* %5) #11
  %7 = icmp ugt i16 %6, 771
  br i1 %7, label %10, label %8

8:                                                ; preds = %3
  %9 = tail call zeroext i1 @_ZN4bsslL30ext_ec_point_parse_serverhelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st(%"struct.bssl::SSL_HANDSHAKE"* %0, i8* %1, %struct.cbs_st* %2)
  br label %10

10:                                               ; preds = %3, %8
  %11 = phi i1 [ %9, %8 ], [ true, %3 ]
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL28ext_ec_point_add_serverhelloEPNS_13SSL_HANDSHAKEEP6cbb_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly, %struct.cbb_st*) #0 {
  %3 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %4 = load %struct.ssl_st*, %struct.ssl_st** %3, align 8
  %5 = tail call zeroext i16 @_ZN4bssl20ssl_protocol_versionEPK6ssl_st(%struct.ssl_st* %4) #11
  %6 = icmp ugt i16 %5, 771
  br i1 %6, label %21, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 43
  %9 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %8, align 8
  %10 = getelementptr inbounds %struct.ssl_cipher_st, %struct.ssl_cipher_st* %9, i64 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %19

14:                                               ; preds = %7
  %15 = getelementptr inbounds %struct.ssl_cipher_st, %struct.ssl_cipher_st* %9, i64 0, i32 4
  %16 = load i32, i32* %15, align 8
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %14, %7
  %20 = tail call fastcc zeroext i1 @_ZN4bsslL26ext_ec_point_add_extensionEPNS_13SSL_HANDSHAKEEP6cbb_st(%struct.cbb_st* %1)
  br label %21

21:                                               ; preds = %14, %19, %2
  %22 = phi i1 [ true, %2 ], [ %20, %19 ], [ true, %14 ]
  ret i1 %22
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL26ext_ticket_add_clienthelloEPNS_13SSL_HANDSHAKEEP6cbb_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly, %struct.cbb_st*) #0 {
  %3 = alloca %struct.cbb_st, align 8
  %4 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %5 = load %struct.ssl_st*, %struct.ssl_st** %4, align 8
  %6 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 5
  %7 = load i16, i16* %6, align 4
  %8 = icmp ugt i16 %7, 771
  br i1 %8, label %54, label %9

9:                                                ; preds = %2
  %10 = tail call i32 @SSL_get_options(%struct.ssl_st* %5) #11
  %11 = and i32 %10, 16384
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %54

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %5, i64 0, i32 8
  %15 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %14, align 8
  %16 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %15, i64 0, i32 23
  %17 = load i16, i16* %16, align 1
  %18 = and i16 %17, 32
  %19 = icmp eq i16 %18, 0
  br i1 %19, label %20, label %37

20:                                               ; preds = %13
  %21 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %5, i64 0, i32 14, i32 0, i32 0, i32 0
  %22 = load %struct.ssl_session_st*, %struct.ssl_session_st** %21, align 8
  %23 = icmp eq %struct.ssl_session_st* %22, null
  br i1 %23, label %37, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %22, i64 0, i32 24, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %37, label %28

28:                                               ; preds = %24
  %29 = tail call zeroext i16 @_ZN4bssl28ssl_session_protocol_versionEPK14ssl_session_st(%struct.ssl_session_st* nonnull %22) #11
  %30 = icmp ult i16 %29, 772
  br i1 %30, label %31, label %37

31:                                               ; preds = %28
  %32 = load %struct.ssl_session_st*, %struct.ssl_session_st** %21, align 8
  %33 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %32, i64 0, i32 24, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %32, i64 0, i32 24, i32 1
  %36 = load i64, i64* %35, align 8
  br label %37

37:                                               ; preds = %20, %13, %31, %28, %24
  %38 = phi i64 [ 0, %24 ], [ %36, %31 ], [ 0, %28 ], [ 0, %20 ], [ 0, %13 ]
  %39 = phi i8* [ null, %24 ], [ %34, %31 ], [ null, %28 ], [ null, %20 ], [ null, %13 ]
  %40 = bitcast %struct.cbb_st* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %40) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 -86, i64 32, i1 false)
  %41 = tail call i32 @CBB_add_u16(%struct.cbb_st* %1, i16 zeroext 35) #11
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %52, label %43

43:                                               ; preds = %37
  %44 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* %1, %struct.cbb_st* nonnull %3) #11
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %52, label %46

46:                                               ; preds = %43
  %47 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %3, i8* %39, i64 %38) #11
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %52, label %49

49:                                               ; preds = %46
  %50 = call i32 @CBB_flush(%struct.cbb_st* %1) #11
  %51 = icmp ne i32 %50, 0
  br label %52

52:                                               ; preds = %49, %37, %43, %46
  %53 = phi i1 [ false, %46 ], [ false, %43 ], [ false, %37 ], [ %51, %49 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %40) #11
  br label %54

54:                                               ; preds = %2, %9, %52
  %55 = phi i1 [ %53, %52 ], [ true, %9 ], [ true, %2 ]
  ret i1 %55
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL28ext_ticket_parse_serverhelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture, i8* nocapture readnone, %struct.cbs_st*) #0 {
  %4 = icmp eq %struct.cbs_st* %2, null
  br i1 %4, label %17, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %7 = load %struct.ssl_st*, %struct.ssl_st** %6, align 8
  %8 = tail call zeroext i16 @_ZN4bssl20ssl_protocol_versionEPK6ssl_st(%struct.ssl_st* %7) #11
  %9 = icmp ugt i16 %8, 771
  br i1 %9, label %17, label %10

10:                                               ; preds = %5
  %11 = tail call i64 @CBS_len(%struct.cbs_st* nonnull %2) #11
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %13, label %17

13:                                               ; preds = %10
  %14 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 46
  %15 = load i32, i32* %14, align 8
  %16 = or i32 %15, 262144
  store i32 %16, i32* %14, align 8
  br label %17

17:                                               ; preds = %10, %5, %3, %13
  %18 = phi i1 [ true, %13 ], [ true, %3 ], [ false, %5 ], [ false, %10 ]
  ret i1 %18
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZN4bsslL24ignore_parse_clienthelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture readnone, i8* nocapture readnone, %struct.cbs_st* nocapture readnone) #7 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL26ext_ticket_add_serverhelloEPNS_13SSL_HANDSHAKEEP6cbb_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly, %struct.cbb_st*) #0 {
  %3 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 46
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 262144
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = tail call i32 @CBB_add_u16(%struct.cbb_st* %1, i16 zeroext 35) #11
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %7
  %11 = tail call i32 @CBB_add_u16(%struct.cbb_st* %1, i16 zeroext 0) #11
  %12 = icmp ne i32 %11, 0
  ret i1 %12

13:                                               ; preds = %7, %2
  %14 = phi i1 [ true, %2 ], [ false, %7 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL24ext_alpn_add_clienthelloEPNS_13SSL_HANDSHAKEEP6cbb_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly, %struct.cbb_st*) #0 {
  %3 = alloca %struct.cbb_st, align 8
  %4 = alloca %struct.cbb_st, align 8
  %5 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %6 = load %struct.ssl_st*, %struct.ssl_st** %5, align 8
  %7 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 1
  %8 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %7, align 8
  %9 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %8, i64 0, i32 16, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %12, label %17

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %6, i64 0, i32 24
  %14 = load %struct.ssl_quic_method_st*, %struct.ssl_quic_method_st** %13, align 8
  %15 = icmp eq %struct.ssl_quic_method_st* %14, null
  br i1 %15, label %48, label %16

16:                                               ; preds = %12
  tail call void @ERR_put_error(i32 16, i32 0, i32 307, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 1434) #11
  br label %48

17:                                               ; preds = %2
  %18 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %6, i64 0, i32 8
  %19 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %18, align 8
  %20 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %19, i64 0, i32 23
  %21 = load i16, i16* %20, align 1
  %22 = and i16 %21, 32
  %23 = icmp eq i16 %22, 0
  br i1 %23, label %24, label %48

24:                                               ; preds = %17
  %25 = bitcast %struct.cbb_st* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %25) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 32, i1 false)
  %26 = bitcast %struct.cbb_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %26) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 32, i1 false)
  %27 = tail call i32 @CBB_add_u16(%struct.cbb_st* %1, i16 zeroext 16) #11
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %46, label %29

29:                                               ; preds = %24
  %30 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* %1, %struct.cbb_st* nonnull %3) #11
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %46, label %32

32:                                               ; preds = %29
  %33 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* nonnull %3, %struct.cbb_st* nonnull %4) #11
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %46, label %35

35:                                               ; preds = %32
  %36 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %7, align 8
  %37 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %36, i64 0, i32 16, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %36, i64 0, i32 16, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %4, i8* %38, i64 %40) #11
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %46, label %43

43:                                               ; preds = %35
  %44 = call i32 @CBB_flush(%struct.cbb_st* %1) #11
  %45 = icmp ne i32 %44, 0
  br label %46

46:                                               ; preds = %43, %24, %29, %32, %35
  %47 = phi i1 [ false, %35 ], [ false, %32 ], [ false, %29 ], [ false, %24 ], [ %45, %43 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %26) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %25) #11
  br label %48

48:                                               ; preds = %12, %17, %46, %16
  %49 = phi i1 [ false, %16 ], [ %47, %46 ], [ true, %17 ], [ true, %12 ]
  ret i1 %49
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL26ext_alpn_parse_serverhelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly, i8* nocapture, %struct.cbs_st*) #0 {
  %4 = alloca %struct.cbs_st, align 8
  %5 = alloca %struct.cbs_st, align 8
  %6 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %7 = load %struct.ssl_st*, %struct.ssl_st** %6, align 8
  %8 = icmp eq %struct.cbs_st* %2, null
  br i1 %8, label %9, label %14

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %7, i64 0, i32 24
  %11 = load %struct.ssl_quic_method_st*, %struct.ssl_quic_method_st** %10, align 8
  %12 = icmp eq %struct.ssl_quic_method_st* %11, null
  br i1 %12, label %64, label %13

13:                                               ; preds = %9
  tail call void @ERR_put_error(i32 16, i32 0, i32 307, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 1462) #11
  store i8 120, i8* %1, align 1
  br label %64

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 46
  %16 = load i32, i32* %15, align 8
  %17 = and i32 %16, 131072
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %20, label %19

19:                                               ; preds = %14
  store i8 47, i8* %1, align 1
  tail call void @ERR_put_error(i32 16, i32 0, i32 170, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 1475) #11
  br label %64

20:                                               ; preds = %14
  %21 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #11
  %22 = bitcast %struct.cbs_st* %5 to i8*
  %23 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #11
  %24 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %5, i64 0, i32 0
  %25 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %5, i64 0, i32 1
  %26 = bitcast %struct.cbs_st* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 16, i1 false)
  %27 = call i32 @CBS_get_u16_length_prefixed(%struct.cbs_st* nonnull %2, %struct.cbs_st* nonnull %4) #11
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %62, label %29

29:                                               ; preds = %20
  %30 = call i64 @CBS_len(%struct.cbs_st* nonnull %2) #11
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %32, label %62

32:                                               ; preds = %29
  %33 = call i32 @CBS_get_u8_length_prefixed(%struct.cbs_st* nonnull %4, %struct.cbs_st* nonnull %5) #11
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %62, label %35

35:                                               ; preds = %32
  %36 = call i64 @CBS_len(%struct.cbs_st* nonnull %5) #11
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %62, label %38

38:                                               ; preds = %35
  %39 = call i64 @CBS_len(%struct.cbs_st* nonnull %4) #11
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %62

41:                                               ; preds = %38
  %42 = load i8*, i8** %24, align 8
  %43 = load i64, i64* %25, align 8
  %44 = call zeroext i1 @_ZN4bssl28ssl_is_alpn_protocol_allowedEPKNS_13SSL_HANDSHAKEENS_4SpanIKhEE(%"struct.bssl::SSL_HANDSHAKE"* %0, i8* %42, i64 %43)
  br i1 %44, label %46, label %45

45:                                               ; preds = %41
  call void @ERR_put_error(i32 16, i32 0, i32 259, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 1492) #11
  store i8 47, i8* %1, align 1
  br label %62

46:                                               ; preds = %41
  %47 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %7, i64 0, i32 8
  %48 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %47, align 8
  %49 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %48, i64 0, i32 49
  %50 = load i8*, i8** %24, align 8
  %51 = load i64, i64* %25, align 8
  %52 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %49, i64 0, i32 0
  %53 = load i8*, i8** %52, align 8
  call void @OPENSSL_free(i8* %53) #11
  %54 = bitcast %"class.bssl::Array"* %49 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 16, i1 false) #11
  %55 = icmp eq i64 %51, 0
  br i1 %55, label %62, label %56

56:                                               ; preds = %46
  %57 = call i8* @OPENSSL_malloc(i64 %51) #11
  store i8* %57, i8** %52, align 8
  %58 = icmp eq i8* %57, null
  br i1 %58, label %61, label %59

59:                                               ; preds = %56
  %60 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %48, i64 0, i32 49, i32 1
  store i64 %51, i64* %60, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %57, i8* align 1 %50, i64 %51, i1 false) #11
  br label %62

61:                                               ; preds = %56
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.4, i64 0, i64 0), i32 324) #11
  store i8 80, i8* %1, align 1
  br label %62

62:                                               ; preds = %46, %59, %35, %20, %29, %32, %38, %61, %45
  %63 = phi i1 [ false, %45 ], [ false, %61 ], [ false, %38 ], [ false, %32 ], [ false, %29 ], [ false, %20 ], [ false, %35 ], [ true, %59 ], [ true, %46 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #11
  br label %64

64:                                               ; preds = %9, %62, %19, %13
  %65 = phi i1 [ false, %13 ], [ false, %19 ], [ %63, %62 ], [ true, %9 ]
  ret i1 %65
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL24ext_alpn_add_serverhelloEPNS_13SSL_HANDSHAKEEP6cbb_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly, %struct.cbb_st*) #0 {
  %3 = alloca %struct.cbb_st, align 8
  %4 = alloca %struct.cbb_st, align 8
  %5 = alloca %struct.cbb_st, align 8
  %6 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %7 = load %struct.ssl_st*, %struct.ssl_st** %6, align 8
  %8 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %7, i64 0, i32 8
  %9 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %8, align 8
  %10 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %9, i64 0, i32 49, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %41, label %13

13:                                               ; preds = %2
  %14 = bitcast %struct.cbb_st* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 32, i1 false)
  %15 = bitcast %struct.cbb_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 32, i1 false)
  %16 = bitcast %struct.cbb_st* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 32, i1 false)
  %17 = tail call i32 @CBB_add_u16(%struct.cbb_st* %1, i16 zeroext 16) #11
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %39, label %19

19:                                               ; preds = %13
  %20 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* %1, %struct.cbb_st* nonnull %3) #11
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %39, label %22

22:                                               ; preds = %19
  %23 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* nonnull %3, %struct.cbb_st* nonnull %4) #11
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %39, label %25

25:                                               ; preds = %22
  %26 = call i32 @CBB_add_u8_length_prefixed(%struct.cbb_st* nonnull %4, %struct.cbb_st* nonnull %5) #11
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %39, label %28

28:                                               ; preds = %25
  %29 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %8, align 8
  %30 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %29, i64 0, i32 49, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %29, i64 0, i32 49, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %5, i8* %31, i64 %33) #11
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %39, label %36

36:                                               ; preds = %28
  %37 = call i32 @CBB_flush(%struct.cbb_st* %1) #11
  %38 = icmp ne i32 %37, 0
  br label %39

39:                                               ; preds = %36, %13, %19, %22, %25, %28
  %40 = phi i1 [ false, %28 ], [ false, %25 ], [ false, %22 ], [ false, %19 ], [ false, %13 ], [ %38, %36 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #11
  br label %41

41:                                               ; preds = %2, %39
  %42 = phi i1 [ %40, %39 ], [ true, %2 ]
  ret i1 %42
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL24ext_ocsp_add_clienthelloEPNS_13SSL_HANDSHAKEEP6cbb_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly, %struct.cbb_st*) #0 {
  %3 = alloca %struct.cbb_st, align 8
  %4 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 1
  %5 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %4, align 8
  %6 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %5, i64 0, i32 23
  %7 = load i16, i16* %6, align 1
  %8 = and i16 %7, 4
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %31, label %10

10:                                               ; preds = %2
  %11 = bitcast %struct.cbb_st* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 32, i1 false)
  %12 = tail call i32 @CBB_add_u16(%struct.cbb_st* %1, i16 zeroext 5) #11
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %29, label %14

14:                                               ; preds = %10
  %15 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* %1, %struct.cbb_st* nonnull %3) #11
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %29, label %17

17:                                               ; preds = %14
  %18 = call i32 @CBB_add_u8(%struct.cbb_st* nonnull %3, i8 zeroext 1) #11
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %29, label %20

20:                                               ; preds = %17
  %21 = call i32 @CBB_add_u16(%struct.cbb_st* nonnull %3, i16 zeroext 0) #11
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %29, label %23

23:                                               ; preds = %20
  %24 = call i32 @CBB_add_u16(%struct.cbb_st* nonnull %3, i16 zeroext 0) #11
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %23
  %27 = call i32 @CBB_flush(%struct.cbb_st* %1) #11
  %28 = icmp ne i32 %27, 0
  br label %29

29:                                               ; preds = %26, %10, %14, %17, %20, %23
  %30 = phi i1 [ false, %23 ], [ false, %20 ], [ false, %17 ], [ false, %14 ], [ false, %10 ], [ %28, %26 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #11
  br label %31

31:                                               ; preds = %2, %29
  %32 = phi i1 [ %30, %29 ], [ true, %2 ]
  ret i1 %32
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL26ext_ocsp_parse_serverhelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture, i8* nocapture readnone, %struct.cbs_st*) #0 {
  %4 = icmp eq %struct.cbs_st* %2, null
  br i1 %4, label %21, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %7 = load %struct.ssl_st*, %struct.ssl_st** %6, align 8
  %8 = tail call zeroext i16 @_ZN4bssl20ssl_protocol_versionEPK6ssl_st(%struct.ssl_st* %7) #11
  %9 = icmp ugt i16 %8, 771
  br i1 %9, label %21, label %10

10:                                               ; preds = %5
  %11 = tail call i64 @CBS_len(%struct.cbs_st* nonnull %2) #11
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %13, label %21

13:                                               ; preds = %10
  %14 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 43
  %15 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %14, align 8
  %16 = tail call zeroext i1 @_ZN4bssl32ssl_cipher_uses_certificate_authEPK13ssl_cipher_st(%struct.ssl_cipher_st* %15) #11
  br i1 %16, label %17, label %21

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 46
  %19 = load i32, i32* %18, align 8
  %20 = or i32 %19, 256
  store i32 %20, i32* %18, align 8
  br label %21

21:                                               ; preds = %13, %10, %5, %3, %17
  %22 = phi i1 [ true, %17 ], [ true, %3 ], [ false, %5 ], [ false, %10 ], [ false, %13 ]
  ret i1 %22
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL26ext_ocsp_parse_clienthelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture, i8* nocapture readnone, %struct.cbs_st*) #0 {
  %4 = alloca i8, align 1
  %5 = icmp eq %struct.cbs_st* %2, null
  br i1 %5, label %20, label %6

6:                                                ; preds = %3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #11
  store i8 -86, i8* %4, align 1
  %7 = call i32 @CBS_get_u8(%struct.cbs_st* nonnull %2, i8* nonnull %4) #11
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %18, label %9

9:                                                ; preds = %6
  %10 = load i8, i8* %4, align 1
  %11 = icmp eq i8 %10, 1
  %12 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 46
  %13 = zext i1 %11 to i32
  %14 = load i32, i32* %12, align 8
  %15 = shl nuw nsw i32 %13, 9
  %16 = and i32 %14, -513
  %17 = or i32 %15, %16
  store i32 %17, i32* %12, align 8
  br label %18

18:                                               ; preds = %6, %9
  %19 = phi i1 [ true, %9 ], [ false, %6 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #11
  br label %20

20:                                               ; preds = %3, %18
  %21 = phi i1 [ %19, %18 ], [ true, %3 ]
  ret i1 %21
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL24ext_ocsp_add_serverhelloEPNS_13SSL_HANDSHAKEEP6cbb_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture, %struct.cbb_st*) #0 {
  %3 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %4 = load %struct.ssl_st*, %struct.ssl_st** %3, align 8
  %5 = tail call zeroext i16 @_ZN4bssl20ssl_protocol_versionEPK6ssl_st(%struct.ssl_st* %4) #11
  %6 = icmp ugt i16 %5, 771
  br i1 %6, label %39, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 46
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 512
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %39, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 1
  %14 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %13, align 8
  %15 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %14, i64 0, i32 6, i32 0, i32 0, i32 0
  %16 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %15, align 8
  %17 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %16, i64 0, i32 12, i32 0, i32 0, i32 0
  %18 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %17, align 8
  %19 = icmp eq %struct.crypto_buffer_st* %18, null
  br i1 %19, label %39, label %20

20:                                               ; preds = %12
  %21 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %4, i64 0, i32 8
  %22 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %21, align 8
  %23 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %22, i64 0, i32 23
  %24 = load i16, i16* %23, align 1
  %25 = and i16 %24, 64
  %26 = icmp eq i16 %25, 0
  br i1 %26, label %27, label %39

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 43
  %29 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %28, align 8
  %30 = tail call zeroext i1 @_ZN4bssl32ssl_cipher_uses_certificate_authEPK13ssl_cipher_st(%struct.ssl_cipher_st* %29) #11
  br i1 %30, label %31, label %39

31:                                               ; preds = %27
  %32 = load i32, i32* %8, align 8
  %33 = or i32 %32, 256
  store i32 %33, i32* %8, align 8
  %34 = tail call i32 @CBB_add_u16(%struct.cbb_st* %1, i16 zeroext 5) #11
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %39, label %36

36:                                               ; preds = %31
  %37 = tail call i32 @CBB_add_u16(%struct.cbb_st* %1, i16 zeroext 0) #11
  %38 = icmp ne i32 %37, 0
  br label %39

39:                                               ; preds = %36, %31, %2, %12, %27, %7, %20
  %40 = phi i1 [ true, %20 ], [ true, %7 ], [ true, %27 ], [ true, %12 ], [ true, %2 ], [ false, %31 ], [ %38, %36 ]
  ret i1 %40
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL27ext_sigalgs_add_clienthelloEPNS_13SSL_HANDSHAKEEP6cbb_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly, %struct.cbb_st*) #0 {
  %3 = alloca %struct.cbb_st, align 8
  %4 = alloca %struct.cbb_st, align 8
  %5 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 6
  %6 = load i16, i16* %5, align 2
  %7 = icmp ult i16 %6, 771
  br i1 %7, label %47, label %8

8:                                                ; preds = %2
  %9 = bitcast %struct.cbb_st* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 32, i1 false)
  %10 = bitcast %struct.cbb_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 32, i1 false)
  %11 = tail call i32 @CBB_add_u16(%struct.cbb_st* %1, i16 zeroext 13) #11
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %45, label %13

13:                                               ; preds = %8
  %14 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* %1, %struct.cbb_st* nonnull %3) #11
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %45, label %16

16:                                               ; preds = %13
  %17 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* nonnull %3, %struct.cbb_st* nonnull %4) #11
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %45, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 1
  %21 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %20, align 8
  %22 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %21, i64 0, i32 20, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %29, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %21, i64 0, i32 20
  %27 = bitcast %"class.bssl::Array.56"* %26 to i64*
  %28 = load i64, i64* %27, align 8
  br label %29

29:                                               ; preds = %25, %19
  %30 = phi i64 [ %23, %25 ], [ 9, %19 ]
  %31 = phi i64 [ %28, %25 ], [ ptrtoint ([9 x i16]* @_ZN4bsslL26kVerifySignatureAlgorithmsE to i64), %19 ]
  %32 = inttoptr i64 %31 to i16*
  %33 = getelementptr inbounds i16, i16* %32, i64 %30
  br label %36

34:                                               ; preds = %36
  %35 = icmp eq i16* %41, %33
  br i1 %35, label %42, label %36

36:                                               ; preds = %34, %29
  %37 = phi i16* [ %41, %34 ], [ %32, %29 ]
  %38 = load i16, i16* %37, align 2
  %39 = call i32 @CBB_add_u16(%struct.cbb_st* nonnull %4, i16 zeroext %38) #11
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds i16, i16* %37, i64 1
  br i1 %40, label %45, label %34

42:                                               ; preds = %34
  %43 = call i32 @CBB_flush(%struct.cbb_st* %1) #11
  %44 = icmp ne i32 %43, 0
  br label %45

45:                                               ; preds = %36, %42, %8, %13, %16
  %46 = phi i1 [ false, %16 ], [ false, %13 ], [ false, %8 ], [ %44, %42 ], [ false, %36 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #11
  br label %47

47:                                               ; preds = %2, %45
  %48 = phi i1 [ %46, %45 ], [ true, %2 ]
  ret i1 %48
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL29ext_sigalgs_parse_clienthelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture, i8* nocapture readnone, %struct.cbs_st*) #0 {
  %4 = alloca %struct.cbs_st, align 8
  %5 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 26
  %6 = bitcast %"class.bssl::Array.56"* %5 to i8**
  %7 = load i8*, i8** %6, align 8
  tail call void @OPENSSL_free(i8* %7) #11
  %8 = bitcast %"class.bssl::Array.56"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false) #11
  %9 = icmp eq %struct.cbs_st* %2, null
  br i1 %9, label %31, label %10

10:                                               ; preds = %3
  %11 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #11
  %12 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = call i32 @CBS_get_u16_length_prefixed(%struct.cbs_st* nonnull %2, %struct.cbs_st* nonnull %4) #11
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %29, label %15

15:                                               ; preds = %10
  %16 = call i64 @CBS_len(%struct.cbs_st* nonnull %2) #11
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %18, label %29

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %20 = load %struct.ssl_st*, %struct.ssl_st** %19, align 8
  %21 = call zeroext i16 @_ZN4bssl20ssl_protocol_versionEPK6ssl_st(%struct.ssl_st* %20) #11
  %22 = icmp ult i16 %21, 771
  br i1 %22, label %28, label %23

23:                                               ; preds = %18
  %24 = call i64 @CBS_len(%struct.cbs_st* nonnull %4) #11
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %23
  %27 = call fastcc zeroext i1 @_ZN4bsslL15parse_u16_arrayEPK6cbs_stPNS_5ArrayItEE(%struct.cbs_st* nonnull %4, %"class.bssl::Array.56"* %5) #11
  br i1 %27, label %28, label %29

28:                                               ; preds = %18, %26
  br label %29

29:                                               ; preds = %23, %28, %26, %10, %15
  %30 = phi i1 [ false, %15 ], [ false, %10 ], [ true, %28 ], [ false, %26 ], [ false, %23 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #11
  br label %31

31:                                               ; preds = %3, %29
  %32 = phi i1 [ %30, %29 ], [ true, %3 ]
  ret i1 %32
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL23ext_npn_add_clienthelloEPNS_13SSL_HANDSHAKEEP6cbb_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly, %struct.cbb_st*) #0 {
  %3 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %4 = load %struct.ssl_st*, %struct.ssl_st** %3, align 8
  %5 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %4, i64 0, i32 8
  %6 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %5, align 8
  %7 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %6, i64 0, i32 23
  %8 = load i16, i16* %7, align 1
  %9 = and i16 %8, 32
  %10 = icmp eq i16 %9, 0
  br i1 %10, label %11, label %26

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %4, i64 0, i32 16, i32 0, i32 0, i32 0
  %13 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %12, align 8
  %14 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %13, i64 0, i32 60
  %15 = load i32 (%struct.ssl_st*, i8**, i8*, i8*, i32, i8*)*, i32 (%struct.ssl_st*, i8**, i8*, i8*, i32, i8*)** %14, align 8
  %16 = icmp eq i32 (%struct.ssl_st*, i8**, i8*, i8*, i32, i8*)* %15, null
  br i1 %16, label %26, label %17

17:                                               ; preds = %11
  %18 = tail call i32 @SSL_is_dtls(%struct.ssl_st* %4) #11
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %26

20:                                               ; preds = %17
  %21 = tail call i32 @CBB_add_u16(%struct.cbb_st* %1, i16 zeroext 13172) #11
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %20
  %24 = tail call i32 @CBB_add_u16(%struct.cbb_st* %1, i16 zeroext 0) #11
  %25 = icmp ne i32 %24, 0
  ret i1 %25

26:                                               ; preds = %20, %11, %2, %17
  %27 = phi i1 [ true, %17 ], [ true, %2 ], [ true, %11 ], [ false, %20 ]
  ret i1 %27
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL25ext_npn_parse_serverhelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture, i8* nocapture, %struct.cbs_st*) #0 {
  %4 = alloca %struct.cbs_st, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8, align 1
  %7 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %8 = load %struct.ssl_st*, %struct.ssl_st** %7, align 8
  %9 = icmp eq %struct.cbs_st* %2, null
  br i1 %9, label %72, label %10

10:                                               ; preds = %3
  %11 = tail call zeroext i16 @_ZN4bssl20ssl_protocol_versionEPK6ssl_st(%struct.ssl_st* %8) #11
  %12 = icmp ugt i16 %11, 771
  br i1 %12, label %72, label %13

13:                                               ; preds = %10
  %14 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %8, i64 0, i32 8
  %15 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %14, align 8
  %16 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %15, i64 0, i32 49, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %20, label %19

19:                                               ; preds = %13
  store i8 47, i8* %1, align 1
  tail call void @ERR_put_error(i32 16, i32 0, i32 170, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 1253) #11
  br label %72

20:                                               ; preds = %13
  %21 = tail call i8* @CBS_data(%struct.cbs_st* nonnull %2) #11
  %22 = tail call i64 @CBS_len(%struct.cbs_st* nonnull %2) #11
  %23 = call i64 @CBS_len(%struct.cbs_st* nonnull %2) #11
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %38, label %25

25:                                               ; preds = %20
  %26 = bitcast %struct.cbs_st* %4 to i8*
  %27 = bitcast %struct.cbs_st* %4 to i8*
  br label %28

28:                                               ; preds = %25, %34
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 16, i1 false)
  %29 = call i32 @CBS_get_u8_length_prefixed(%struct.cbs_st* nonnull %2, %struct.cbs_st* nonnull %4) #11
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %37, label %31

31:                                               ; preds = %28
  %32 = call i64 @CBS_len(%struct.cbs_st* nonnull %4) #11
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %31
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #11
  %35 = call i64 @CBS_len(%struct.cbs_st* nonnull %2) #11
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %38, label %28

37:                                               ; preds = %31, %28
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #11
  br label %72

38:                                               ; preds = %34, %20
  %39 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #11
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #11
  store i8 -86, i8* %6, align 1
  %40 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %8, i64 0, i32 16, i32 0, i32 0, i32 0
  %41 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %40, align 8
  %42 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %41, i64 0, i32 60
  %43 = load i32 (%struct.ssl_st*, i8**, i8*, i8*, i32, i8*)*, i32 (%struct.ssl_st*, i8**, i8*, i8*, i32, i8*)** %42, align 8
  %44 = trunc i64 %22 to i32
  %45 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %41, i64 0, i32 61
  %46 = load i8*, i8** %45, align 8
  %47 = call i32 %43(%struct.ssl_st* %8, i8** nonnull %5, i8* nonnull %6, i8* %21, i32 %44, i8* %46) #11
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %65

49:                                               ; preds = %38
  %50 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %14, align 8
  %51 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %50, i64 0, i32 48
  %52 = load i8*, i8** %5, align 8
  %53 = load i8, i8* %6, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %51, i64 0, i32 0
  %56 = load i8*, i8** %55, align 8
  call void @OPENSSL_free(i8* %56) #11
  %57 = bitcast %"class.bssl::Array"* %51 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 16, i1 false) #11
  %58 = icmp eq i8 %53, 0
  br i1 %58, label %66, label %59

59:                                               ; preds = %49
  %60 = call i8* @OPENSSL_malloc(i64 %54) #11
  store i8* %60, i8** %55, align 8
  %61 = icmp eq i8* %60, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %59
  %63 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %50, i64 0, i32 48, i32 1
  store i64 %54, i64* %63, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %60, i8* align 1 %52, i64 %54, i1 false) #11
  br label %66

64:                                               ; preds = %59
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.4, i64 0, i64 0), i32 324) #11
  br label %65

65:                                               ; preds = %64, %38
  store i8 80, i8* %1, align 1
  br label %70

66:                                               ; preds = %62, %49
  %67 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 46
  %68 = load i32, i32* %67, align 8
  %69 = or i32 %68, 131072
  store i32 %69, i32* %67, align 8
  br label %70

70:                                               ; preds = %66, %65
  %71 = phi i1 [ false, %65 ], [ true, %66 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #11
  br label %72

72:                                               ; preds = %70, %37, %10, %3, %19
  %73 = phi i1 [ false, %19 ], [ true, %3 ], [ false, %10 ], [ false, %37 ], [ %71, %70 ]
  ret i1 %73
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL25ext_npn_parse_clienthelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture, i8* nocapture readnone, %struct.cbs_st*) #0 {
  %4 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %5 = load %struct.ssl_st*, %struct.ssl_st** %4, align 8
  %6 = tail call zeroext i16 @_ZN4bssl20ssl_protocol_versionEPK6ssl_st(%struct.ssl_st* %5) #11
  %7 = icmp ugt i16 %6, 771
  %8 = icmp eq %struct.cbs_st* %2, null
  %9 = or i1 %8, %7
  br i1 %9, label %33, label %10

10:                                               ; preds = %3
  %11 = tail call i64 @CBS_len(%struct.cbs_st* nonnull %2) #11
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %13, label %33

13:                                               ; preds = %10
  %14 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %5, i64 0, i32 8
  %15 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %14, align 8
  %16 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %15, i64 0, i32 23
  %17 = load i16, i16* %16, align 1
  %18 = and i16 %17, 32
  %19 = icmp eq i16 %18, 0
  br i1 %19, label %20, label %33

20:                                               ; preds = %13
  %21 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %5, i64 0, i32 16, i32 0, i32 0, i32 0
  %22 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %21, align 8
  %23 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %22, i64 0, i32 58
  %24 = load i32 (%struct.ssl_st*, i8**, i32*, i8*)*, i32 (%struct.ssl_st*, i8**, i32*, i8*)** %23, align 8
  %25 = icmp eq i32 (%struct.ssl_st*, i8**, i32*, i8*)* %24, null
  br i1 %25, label %33, label %26

26:                                               ; preds = %20
  %27 = tail call i32 @SSL_is_dtls(%struct.ssl_st* %5) #11
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %33

29:                                               ; preds = %26
  %30 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 46
  %31 = load i32, i32* %30, align 8
  %32 = or i32 %31, 131072
  store i32 %32, i32* %30, align 8
  br label %33

33:                                               ; preds = %20, %13, %26, %10, %3, %29
  %34 = phi i1 [ true, %29 ], [ true, %3 ], [ false, %10 ], [ true, %26 ], [ true, %13 ], [ true, %20 ]
  ret i1 %34
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL23ext_npn_add_serverhelloEPNS_13SSL_HANDSHAKEEP6cbb_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture, %struct.cbb_st*) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.cbb_st, align 8
  %6 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %7 = load %struct.ssl_st*, %struct.ssl_st** %6, align 8
  %8 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 46
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 131072
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %46, label %12

12:                                               ; preds = %2
  %13 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #11
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %3, align 8
  %14 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #11
  store i32 -1431655766, i32* %4, align 4
  %15 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %7, i64 0, i32 16, i32 0, i32 0, i32 0
  %16 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %15, align 8
  %17 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %16, i64 0, i32 58
  %18 = load i32 (%struct.ssl_st*, i8**, i32*, i8*)*, i32 (%struct.ssl_st*, i8**, i32*, i8*)** %17, align 8
  %19 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %16, i64 0, i32 59
  %20 = load i8*, i8** %19, align 8
  %21 = call i32 %18(%struct.ssl_st* %7, i8** nonnull %3, i32* nonnull %4, i8* %20) #11
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %12
  %24 = load i32, i32* %8, align 8
  %25 = and i32 %24, -131073
  store i32 %25, i32* %8, align 8
  br label %44

26:                                               ; preds = %12
  %27 = bitcast %struct.cbb_st* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %27) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 32, i1 false)
  %28 = call i32 @CBB_add_u16(%struct.cbb_st* %1, i16 zeroext 13172) #11
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %42, label %30

30:                                               ; preds = %26
  %31 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* %1, %struct.cbb_st* nonnull %5) #11
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %42, label %33

33:                                               ; preds = %30
  %34 = load i8*, i8** %3, align 8
  %35 = load i32, i32* %4, align 4
  %36 = zext i32 %35 to i64
  %37 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %5, i8* %34, i64 %36) #11
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %42, label %39

39:                                               ; preds = %33
  %40 = call i32 @CBB_flush(%struct.cbb_st* %1) #11
  %41 = icmp ne i32 %40, 0
  br label %42

42:                                               ; preds = %39, %26, %30, %33
  %43 = phi i1 [ false, %33 ], [ false, %30 ], [ false, %26 ], [ %41, %39 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %27) #11
  br label %44

44:                                               ; preds = %42, %23
  %45 = phi i1 [ true, %23 ], [ %43, %42 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #11
  br label %46

46:                                               ; preds = %2, %44
  %47 = phi i1 [ %45, %44 ], [ true, %2 ]
  ret i1 %47
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL23ext_sct_add_clienthelloEPNS_13SSL_HANDSHAKEEP6cbb_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly, %struct.cbb_st*) #0 {
  %3 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 1
  %4 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %3, align 8
  %5 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %4, i64 0, i32 23
  %6 = load i16, i16* %5, align 1
  %7 = and i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %15, label %9

9:                                                ; preds = %2
  %10 = tail call i32 @CBB_add_u16(%struct.cbb_st* %1, i16 zeroext 18) #11
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = tail call i32 @CBB_add_u16(%struct.cbb_st* %1, i16 zeroext 0) #11
  %14 = icmp ne i32 %13, 0
  ret i1 %14

15:                                               ; preds = %9, %2
  %16 = phi i1 [ true, %2 ], [ false, %9 ]
  ret i1 %16
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL25ext_sct_parse_serverhelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly, i8* nocapture, %struct.cbs_st*) #0 {
  %4 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %5 = load %struct.ssl_st*, %struct.ssl_st** %4, align 8
  %6 = icmp eq %struct.cbs_st* %2, null
  br i1 %6, label %39, label %7

7:                                                ; preds = %3
  %8 = tail call zeroext i16 @_ZN4bssl20ssl_protocol_versionEPK6ssl_st(%struct.ssl_st* %5) #11
  %9 = icmp ugt i16 %8, 771
  br i1 %9, label %10, label %11

10:                                               ; preds = %7
  store i8 50, i8* %1, align 1
  br label %39

11:                                               ; preds = %7
  %12 = tail call zeroext i1 @_ZN4bssl21ssl_is_sct_list_validEPK6cbs_st(%struct.cbs_st* nonnull %2)
  br i1 %12, label %14, label %13

13:                                               ; preds = %11
  store i8 50, i8* %1, align 1
  br label %39

14:                                               ; preds = %11
  %15 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %5, i64 0, i32 8
  %16 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %15, align 8
  %17 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %16, i64 0, i32 23
  %18 = load i16, i16* %17, align 1
  %19 = and i16 %18, 64
  %20 = icmp eq i16 %19, 0
  br i1 %20, label %21, label %39

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 40, i32 0, i32 0, i32 0
  %23 = load %struct.ssl_session_st*, %struct.ssl_session_st** %22, align 8
  %24 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %5, i64 0, i32 16, i32 0, i32 0, i32 0
  %25 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %24, align 8
  %26 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %25, i64 0, i32 72
  %27 = load %struct.crypto_buffer_pool_st*, %struct.crypto_buffer_pool_st** %26, align 8
  %28 = tail call %struct.crypto_buffer_st* @CRYPTO_BUFFER_new_from_CBS(%struct.cbs_st* nonnull %2, %struct.crypto_buffer_pool_st* %27) #11
  %29 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %23, i64 0, i32 25, i32 0, i32 0, i32 0
  %30 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %29, align 8
  store %struct.crypto_buffer_st* %28, %struct.crypto_buffer_st** %29, align 8
  %31 = icmp eq %struct.crypto_buffer_st* %30, null
  br i1 %31, label %33, label %32

32:                                               ; preds = %21
  tail call void @CRYPTO_BUFFER_free(%struct.crypto_buffer_st* nonnull %30) #11
  br label %33

33:                                               ; preds = %21, %32
  %34 = load %struct.ssl_session_st*, %struct.ssl_session_st** %22, align 8
  %35 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %34, i64 0, i32 25, i32 0, i32 0, i32 0
  %36 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %35, align 8
  %37 = icmp eq %struct.crypto_buffer_st* %36, null
  br i1 %37, label %38, label %39

38:                                               ; preds = %33
  store i8 80, i8* %1, align 1
  br label %39

39:                                               ; preds = %33, %14, %3, %38, %13, %10
  %40 = phi i1 [ false, %10 ], [ false, %38 ], [ false, %13 ], [ true, %3 ], [ true, %14 ], [ true, %33 ]
  ret i1 %40
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL25ext_sct_parse_clienthelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture, i8* nocapture readnone, %struct.cbs_st*) #0 {
  %4 = icmp eq %struct.cbs_st* %2, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %3
  %6 = tail call i64 @CBS_len(%struct.cbs_st* nonnull %2) #11
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %8, label %12

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 46
  %10 = load i32, i32* %9, align 8
  %11 = or i32 %10, 8
  store i32 %11, i32* %9, align 8
  br label %12

12:                                               ; preds = %5, %3, %8
  %13 = phi i1 [ true, %8 ], [ true, %3 ], [ false, %5 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL23ext_sct_add_serverhelloEPNS_13SSL_HANDSHAKEEP6cbb_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly, %struct.cbb_st*) #0 {
  %3 = alloca %struct.cbb_st, align 8
  %4 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %5 = load %struct.ssl_st*, %struct.ssl_st** %4, align 8
  %6 = tail call zeroext i16 @_ZN4bssl20ssl_protocol_versionEPK6ssl_st(%struct.ssl_st* %5) #11
  %7 = icmp ugt i16 %6, 771
  br i1 %7, label %50, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %5, i64 0, i32 8
  %10 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %9, align 8
  %11 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %10, i64 0, i32 23
  %12 = load i16, i16* %11, align 1
  %13 = and i16 %12, 64
  %14 = icmp eq i16 %13, 0
  br i1 %14, label %15, label %50

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 1
  %17 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %16, align 8
  %18 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %17, i64 0, i32 6, i32 0, i32 0, i32 0
  %19 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %18, align 8
  %20 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %19, i64 0, i32 11, i32 0, i32 0, i32 0
  %21 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %20, align 8
  %22 = icmp eq %struct.crypto_buffer_st* %21, null
  br i1 %22, label %50, label %23

23:                                               ; preds = %15
  %24 = bitcast %struct.cbb_st* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 32, i1 false)
  %25 = tail call i32 @CBB_add_u16(%struct.cbb_st* %1, i16 zeroext 18) #11
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %48, label %27

27:                                               ; preds = %23
  %28 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* %1, %struct.cbb_st* nonnull %3) #11
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %48, label %30

30:                                               ; preds = %27
  %31 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %16, align 8
  %32 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %31, i64 0, i32 6, i32 0, i32 0, i32 0
  %33 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %32, align 8
  %34 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %33, i64 0, i32 11, i32 0, i32 0, i32 0
  %35 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %34, align 8
  %36 = call i8* @CRYPTO_BUFFER_data(%struct.crypto_buffer_st* %35) #11
  %37 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %16, align 8
  %38 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %37, i64 0, i32 6, i32 0, i32 0, i32 0
  %39 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %38, align 8
  %40 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %39, i64 0, i32 11, i32 0, i32 0, i32 0
  %41 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %40, align 8
  %42 = call i64 @CRYPTO_BUFFER_len(%struct.crypto_buffer_st* %41) #11
  %43 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %3, i8* %36, i64 %42) #11
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %48, label %45

45:                                               ; preds = %30
  %46 = call i32 @CBB_flush(%struct.cbb_st* %1) #11
  %47 = icmp ne i32 %46, 0
  br label %48

48:                                               ; preds = %30, %27, %23, %45
  %49 = phi i1 [ false, %30 ], [ false, %27 ], [ false, %23 ], [ %47, %45 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #11
  br label %50

50:                                               ; preds = %2, %15, %8, %48
  %51 = phi i1 [ %49, %48 ], [ true, %8 ], [ true, %15 ], [ true, %2 ]
  ret i1 %51
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZN4bsslL19ext_channel_id_initEPNS_13SSL_HANDSHAKEE(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly) #8 {
  %2 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %3 = load %struct.ssl_st*, %struct.ssl_st** %2, align 8
  %4 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %3, i64 0, i32 8
  %5 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %4, align 8
  %6 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %5, i64 0, i32 23
  %7 = load i16, i16* %6, align 1
  %8 = and i16 %7, -513
  store i16 %8, i16* %6, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL30ext_channel_id_add_clienthelloEPNS_13SSL_HANDSHAKEEP6cbb_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly, %struct.cbb_st*) #0 {
  %3 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 1
  %4 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %3, align 8
  %5 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %4, i64 0, i32 23
  %6 = load i16, i16* %5, align 1
  %7 = and i16 %6, 8
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %20, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %11 = load %struct.ssl_st*, %struct.ssl_st** %10, align 8
  %12 = tail call i32 @SSL_is_dtls(%struct.ssl_st* %11) #11
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %20

14:                                               ; preds = %9
  %15 = tail call i32 @CBB_add_u16(%struct.cbb_st* %1, i16 zeroext 30032) #11
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %14
  %18 = tail call i32 @CBB_add_u16(%struct.cbb_st* %1, i16 zeroext 0) #11
  %19 = icmp ne i32 %18, 0
  ret i1 %19

20:                                               ; preds = %14, %2, %9
  %21 = phi i1 [ true, %9 ], [ true, %2 ], [ false, %14 ]
  ret i1 %21
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL32ext_channel_id_parse_serverhelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly, i8* nocapture readnone, %struct.cbs_st*) #0 {
  %4 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %5 = load %struct.ssl_st*, %struct.ssl_st** %4, align 8
  %6 = icmp eq %struct.cbs_st* %2, null
  br i1 %6, label %16, label %7

7:                                                ; preds = %3
  %8 = tail call i64 @CBS_len(%struct.cbs_st* nonnull %2) #11
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %5, i64 0, i32 8
  %12 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %11, align 8
  %13 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %12, i64 0, i32 23
  %14 = load i16, i16* %13, align 1
  %15 = or i16 %14, 512
  store i16 %15, i16* %13, align 1
  br label %16

16:                                               ; preds = %7, %3, %10
  %17 = phi i1 [ true, %10 ], [ true, %3 ], [ false, %7 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL32ext_channel_id_parse_clienthelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly, i8* nocapture readnone, %struct.cbs_st*) #0 {
  %4 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %5 = load %struct.ssl_st*, %struct.ssl_st** %4, align 8
  %6 = icmp eq %struct.cbs_st* %2, null
  br i1 %6, label %26, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 1
  %9 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %8, align 8
  %10 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %9, i64 0, i32 23
  %11 = load i16, i16* %10, align 1
  %12 = and i16 %11, 8
  %13 = icmp eq i16 %12, 0
  br i1 %13, label %26, label %14

14:                                               ; preds = %7
  %15 = tail call i32 @SSL_is_dtls(%struct.ssl_st* %5) #11
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %26

17:                                               ; preds = %14
  %18 = tail call i64 @CBS_len(%struct.cbs_st* nonnull %2) #11
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %20, label %26

20:                                               ; preds = %17
  %21 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %5, i64 0, i32 8
  %22 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %21, align 8
  %23 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %22, i64 0, i32 23
  %24 = load i16, i16* %23, align 1
  %25 = or i16 %24, 512
  store i16 %25, i16* %23, align 1
  br label %26

26:                                               ; preds = %17, %3, %7, %14, %20
  %27 = phi i1 [ true, %20 ], [ true, %14 ], [ true, %7 ], [ true, %3 ], [ false, %17 ]
  ret i1 %27
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL30ext_channel_id_add_serverhelloEPNS_13SSL_HANDSHAKEEP6cbb_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly, %struct.cbb_st*) #0 {
  %3 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %4 = load %struct.ssl_st*, %struct.ssl_st** %3, align 8
  %5 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %4, i64 0, i32 8
  %6 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %5, align 8
  %7 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %6, i64 0, i32 23
  %8 = load i16, i16* %7, align 1
  %9 = and i16 %8, 512
  %10 = icmp eq i16 %9, 0
  br i1 %10, label %17, label %11

11:                                               ; preds = %2
  %12 = tail call i32 @CBB_add_u16(%struct.cbb_st* %1, i16 zeroext 30032) #11
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = tail call i32 @CBB_add_u16(%struct.cbb_st* %1, i16 zeroext 0) #11
  %16 = icmp ne i32 %15, 0
  ret i1 %16

17:                                               ; preds = %11, %2
  %18 = phi i1 [ true, %2 ], [ false, %11 ]
  ret i1 %18
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZN4bsslL13ext_srtp_initEPNS_13SSL_HANDSHAKEE(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly) #8 {
  %2 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %3 = load %struct.ssl_st*, %struct.ssl_st** %2, align 8
  %4 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %3, i64 0, i32 8
  %5 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %4, align 8
  %6 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %5, i64 0, i32 53
  store %struct.srtp_protection_profile_st* null, %struct.srtp_protection_profile_st** %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL24ext_srtp_add_clienthelloEPNS_13SSL_HANDSHAKEEP6cbb_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly, %struct.cbb_st*) #0 {
  %3 = alloca %struct.cbb_st, align 8
  %4 = alloca %struct.cbb_st, align 8
  %5 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %6 = load %struct.ssl_st*, %struct.ssl_st** %5, align 8
  %7 = tail call %struct.stack_st_SRTP_PROTECTION_PROFILE* @SSL_get_srtp_profiles(%struct.ssl_st* %6) #11
  %8 = icmp eq %struct.stack_st_SRTP_PROTECTION_PROFILE* %7, null
  br i1 %8, label %47, label %9

9:                                                ; preds = %2
  %10 = bitcast %struct.stack_st_SRTP_PROTECTION_PROFILE* %7 to %struct.stack_st*
  %11 = tail call i64 @sk_num(%struct.stack_st* nonnull %10) #11
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %47, label %13

13:                                               ; preds = %9
  %14 = bitcast %struct.cbb_st* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 32, i1 false)
  %15 = bitcast %struct.cbb_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 32, i1 false)
  %16 = tail call i32 @CBB_add_u16(%struct.cbb_st* %1, i16 zeroext 14) #11
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %45, label %18

18:                                               ; preds = %13
  %19 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* %1, %struct.cbb_st* nonnull %3) #11
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %45, label %21

21:                                               ; preds = %18
  %22 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* nonnull %3, %struct.cbb_st* nonnull %4) #11
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %45, label %24

24:                                               ; preds = %21
  %25 = call i64 @sk_num(%struct.stack_st* nonnull %10) #11
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %39, label %29

27:                                               ; preds = %29
  %28 = icmp eq i64 %38, %25
  br i1 %28, label %39, label %29

29:                                               ; preds = %24, %27
  %30 = phi i64 [ %38, %27 ], [ 0, %24 ]
  %31 = call i8* @sk_value(%struct.stack_st* nonnull %10, i64 %30) #11
  %32 = getelementptr inbounds i8, i8* %31, i64 8
  %33 = bitcast i8* %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = trunc i64 %34 to i16
  %36 = call i32 @CBB_add_u16(%struct.cbb_st* nonnull %4, i16 zeroext %35) #11
  %37 = icmp eq i32 %36, 0
  %38 = add nuw i64 %30, 1
  br i1 %37, label %45, label %27

39:                                               ; preds = %27, %24
  %40 = call i32 @CBB_add_u8(%struct.cbb_st* nonnull %3, i8 zeroext 0) #11
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %45, label %42

42:                                               ; preds = %39
  %43 = call i32 @CBB_flush(%struct.cbb_st* %1) #11
  %44 = icmp ne i32 %43, 0
  br label %45

45:                                               ; preds = %29, %42, %39, %13, %18, %21
  %46 = phi i1 [ false, %21 ], [ false, %18 ], [ false, %13 ], [ false, %39 ], [ %44, %42 ], [ false, %29 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #11
  br label %47

47:                                               ; preds = %2, %9, %45
  %48 = phi i1 [ %46, %45 ], [ true, %9 ], [ true, %2 ]
  ret i1 %48
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL26ext_srtp_parse_serverhelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly, i8* nocapture, %struct.cbs_st*) #0 {
  %4 = alloca %struct.cbs_st, align 8
  %5 = alloca %struct.cbs_st, align 8
  %6 = alloca i16, align 2
  %7 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %8 = load %struct.ssl_st*, %struct.ssl_st** %7, align 8
  %9 = icmp eq %struct.cbs_st* %2, null
  br i1 %9, label %60, label %10

10:                                               ; preds = %3
  %11 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #11
  %12 = bitcast %struct.cbs_st* %5 to i8*
  %13 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #11
  %14 = bitcast i16* %6 to i8*
  %15 = bitcast %struct.cbs_st* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %14) #11
  store i16 -21846, i16* %6, align 2
  %16 = call i32 @CBS_get_u16_length_prefixed(%struct.cbs_st* nonnull %2, %struct.cbs_st* nonnull %4) #11
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %30, label %18

18:                                               ; preds = %10
  %19 = call i32 @CBS_get_u16(%struct.cbs_st* nonnull %4, i16* nonnull %6) #11
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %30, label %21

21:                                               ; preds = %18
  %22 = call i64 @CBS_len(%struct.cbs_st* nonnull %4) #11
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %24, label %30

24:                                               ; preds = %21
  %25 = call i32 @CBS_get_u8_length_prefixed(%struct.cbs_st* nonnull %2, %struct.cbs_st* nonnull %5) #11
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %24
  %28 = call i64 @CBS_len(%struct.cbs_st* nonnull %2) #11
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %31, label %30

30:                                               ; preds = %27, %24, %21, %18, %10
  call void @ERR_put_error(i32 16, i32 0, i32 116, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 1769) #11
  br label %58

31:                                               ; preds = %27
  %32 = call i64 @CBS_len(%struct.cbs_st* nonnull %5) #11
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %35, label %34

34:                                               ; preds = %31
  call void @ERR_put_error(i32 16, i32 0, i32 115, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 1775) #11
  store i8 47, i8* %1, align 1
  br label %58

35:                                               ; preds = %31
  %36 = call %struct.stack_st_SRTP_PROTECTION_PROFILE* @SSL_get_srtp_profiles(%struct.ssl_st* %8) #11
  %37 = bitcast %struct.stack_st_SRTP_PROTECTION_PROFILE* %36 to %struct.stack_st*
  %38 = call i64 @sk_num(%struct.stack_st* %37) #11
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %57, label %42

40:                                               ; preds = %42
  %41 = icmp eq i64 %51, %38
  br i1 %41, label %57, label %42

42:                                               ; preds = %35, %40
  %43 = phi i64 [ %51, %40 ], [ 0, %35 ]
  %44 = call i8* @sk_value(%struct.stack_st* %37, i64 %43) #11
  %45 = getelementptr inbounds i8, i8* %44, i64 8
  %46 = bitcast i8* %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = load i16, i16* %6, align 2
  %49 = zext i16 %48 to i64
  %50 = icmp eq i64 %47, %49
  %51 = add nuw i64 %43, 1
  br i1 %50, label %52, label %40

52:                                               ; preds = %42
  %53 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %8, i64 0, i32 8
  %54 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %53, align 8
  %55 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %54, i64 0, i32 53
  %56 = bitcast %struct.srtp_protection_profile_st** %55 to i8**
  store i8* %44, i8** %56, align 8
  br label %58

57:                                               ; preds = %40, %35
  call void @ERR_put_error(i32 16, i32 0, i32 116, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 1788) #11
  store i8 47, i8* %1, align 1
  br label %58

58:                                               ; preds = %52, %57, %34, %30
  %59 = phi i1 [ false, %30 ], [ false, %34 ], [ false, %57 ], [ true, %52 ]
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %14) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #11
  br label %60

60:                                               ; preds = %3, %58
  %61 = phi i1 [ %59, %58 ], [ true, %3 ]
  ret i1 %61
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL26ext_srtp_parse_clienthelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly, i8* nocapture readnone, %struct.cbs_st*) #0 {
  %4 = alloca %struct.cbs_st, align 8
  %5 = alloca %struct.cbs_st, align 8
  %6 = alloca %struct.cbs_st, align 8
  %7 = alloca i16, align 2
  %8 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %9 = load %struct.ssl_st*, %struct.ssl_st** %8, align 8
  %10 = icmp eq %struct.cbs_st* %2, null
  br i1 %10, label %70, label %11

11:                                               ; preds = %3
  %12 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #11
  %13 = bitcast %struct.cbs_st* %5 to i8*
  %14 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #11
  %15 = bitcast %struct.cbs_st* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 16, i1 false)
  %16 = call i32 @CBS_get_u16_length_prefixed(%struct.cbs_st* nonnull %2, %struct.cbs_st* nonnull %4) #11
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %27, label %18

18:                                               ; preds = %11
  %19 = call i64 @CBS_len(%struct.cbs_st* nonnull %4) #11
  %20 = icmp ult i64 %19, 2
  br i1 %20, label %27, label %21

21:                                               ; preds = %18
  %22 = call i32 @CBS_get_u8_length_prefixed(%struct.cbs_st* nonnull %2, %struct.cbs_st* nonnull %5) #11
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %21
  %25 = call i64 @CBS_len(%struct.cbs_st* nonnull %2) #11
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %28, label %27

27:                                               ; preds = %24, %21, %11, %18
  call void @ERR_put_error(i32 16, i32 0, i32 116, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 1805) #11
  br label %68

28:                                               ; preds = %24
  %29 = call %struct.stack_st_SRTP_PROTECTION_PROFILE* @SSL_get_srtp_profiles(%struct.ssl_st* %9) #11
  %30 = bitcast %struct.stack_st_SRTP_PROTECTION_PROFILE* %29 to %struct.stack_st*
  %31 = call i64 @sk_num(%struct.stack_st* %30) #11
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %68, label %33

33:                                               ; preds = %28
  %34 = bitcast %struct.cbs_st* %6 to i8*
  %35 = bitcast i16* %7 to i8*
  %36 = bitcast %struct.cbs_st* %6 to i8*
  br label %37

37:                                               ; preds = %33, %63
  %38 = phi i64 [ 0, %33 ], [ %64, %63 ]
  %39 = call i8* @sk_value(%struct.stack_st* %30, i64 %38) #11
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 16, i1 false)
  %40 = call i8* @CBS_data(%struct.cbs_st* nonnull %4) #11
  %41 = call i64 @CBS_len(%struct.cbs_st* nonnull %4) #11
  call void @CBS_init(%struct.cbs_st* nonnull %6, i8* %40, i64 %41) #11
  %42 = call i64 @CBS_len(%struct.cbs_st* nonnull %6) #11
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %63, label %44

44:                                               ; preds = %37
  %45 = getelementptr inbounds i8, i8* %39, i64 8
  %46 = bitcast i8* %45 to i64*
  br label %47

47:                                               ; preds = %44, %60
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %35) #11
  store i16 -21846, i16* %7, align 2
  %48 = call i32 @CBS_get_u16(%struct.cbs_st* nonnull %6, i16* nonnull %7) #11
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %66, label %50

50:                                               ; preds = %47
  %51 = load i64, i64* %46, align 8
  %52 = load i16, i16* %7, align 2
  %53 = zext i16 %52 to i64
  %54 = icmp eq i64 %51, %53
  br i1 %54, label %55, label %60

55:                                               ; preds = %50
  %56 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %9, i64 0, i32 8
  %57 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %56, align 8
  %58 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %57, i64 0, i32 53
  %59 = bitcast %struct.srtp_protection_profile_st** %58 to i8**
  store i8* %39, i8** %59, align 8
  br label %66

60:                                               ; preds = %50
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %35) #11
  %61 = call i64 @CBS_len(%struct.cbs_st* nonnull %6) #11
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %63, label %47

63:                                               ; preds = %60, %37
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #11
  %64 = add nuw i64 %38, 1
  %65 = icmp eq i64 %64, %31
  br i1 %65, label %68, label %37

66:                                               ; preds = %47, %55
  %67 = phi i1 [ true, %55 ], [ false, %47 ]
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %35) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #11
  br label %68

68:                                               ; preds = %63, %28, %66, %27
  %69 = phi i1 [ false, %27 ], [ %67, %66 ], [ true, %28 ], [ true, %63 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #11
  br label %70

70:                                               ; preds = %3, %68
  %71 = phi i1 [ %69, %68 ], [ true, %3 ]
  ret i1 %71
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL24ext_srtp_add_serverhelloEPNS_13SSL_HANDSHAKEEP6cbb_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly, %struct.cbb_st*) #0 {
  %3 = alloca %struct.cbb_st, align 8
  %4 = alloca %struct.cbb_st, align 8
  %5 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %6 = load %struct.ssl_st*, %struct.ssl_st** %5, align 8
  %7 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %6, i64 0, i32 8
  %8 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %7, align 8
  %9 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %8, i64 0, i32 53
  %10 = load %struct.srtp_protection_profile_st*, %struct.srtp_protection_profile_st** %9, align 8
  %11 = icmp eq %struct.srtp_protection_profile_st* %10, null
  br i1 %11, label %40, label %12

12:                                               ; preds = %2
  %13 = bitcast %struct.cbb_st* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 32, i1 false)
  %14 = bitcast %struct.cbb_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 32, i1 false)
  %15 = tail call i32 @CBB_add_u16(%struct.cbb_st* %1, i16 zeroext 14) #11
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %38, label %17

17:                                               ; preds = %12
  %18 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* %1, %struct.cbb_st* nonnull %3) #11
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %38, label %20

20:                                               ; preds = %17
  %21 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* nonnull %3, %struct.cbb_st* nonnull %4) #11
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %38, label %23

23:                                               ; preds = %20
  %24 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %7, align 8
  %25 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %24, i64 0, i32 53
  %26 = load %struct.srtp_protection_profile_st*, %struct.srtp_protection_profile_st** %25, align 8
  %27 = getelementptr inbounds %struct.srtp_protection_profile_st, %struct.srtp_protection_profile_st* %26, i64 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = trunc i64 %28 to i16
  %30 = call i32 @CBB_add_u16(%struct.cbb_st* nonnull %4, i16 zeroext %29) #11
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %38, label %32

32:                                               ; preds = %23
  %33 = call i32 @CBB_add_u8(%struct.cbb_st* nonnull %3, i8 zeroext 0) #11
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %38, label %35

35:                                               ; preds = %32
  %36 = call i32 @CBB_flush(%struct.cbb_st* %1) #11
  %37 = icmp ne i32 %36, 0
  br label %38

38:                                               ; preds = %35, %12, %17, %20, %23, %32
  %39 = phi i1 [ false, %32 ], [ false, %23 ], [ false, %20 ], [ false, %17 ], [ false, %12 ], [ %37, %35 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #11
  br label %40

40:                                               ; preds = %2, %38
  %41 = phi i1 [ %39, %38 ], [ true, %2 ]
  ret i1 %41
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL29ext_key_share_add_clienthelloEPNS_13SSL_HANDSHAKEEP6cbb_st(%"struct.bssl::SSL_HANDSHAKE"*, %struct.cbb_st*) #0 {
  %3 = alloca %struct.cbb_st, align 8
  %4 = alloca %struct.cbb_st, align 8
  %5 = alloca %struct.cbb_st, align 8
  %6 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %7 = load %struct.ssl_st*, %struct.ssl_st** %6, align 8
  %8 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 6
  %9 = load i16, i16* %8, align 2
  %10 = icmp ult i16 %9, 772
  br i1 %10, label %186, label %11

11:                                               ; preds = %2
  %12 = bitcast %struct.cbb_st* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 32, i1 false)
  %13 = bitcast %struct.cbb_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 32, i1 false)
  %14 = tail call i32 @CBB_add_u16(%struct.cbb_st* %1, i16 zeroext 51) #11
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %184, label %16

16:                                               ; preds = %11
  %17 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* %1, %struct.cbb_st* nonnull %3) #11
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %184, label %19

19:                                               ; preds = %16
  %20 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* nonnull %3, %struct.cbb_st* nonnull %4) #11
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %184, label %22

22:                                               ; preds = %19
  %23 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 16
  %24 = load i16, i16* %23, align 4
  %25 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %7, i64 0, i32 8
  %26 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %25, align 8
  %27 = icmp eq %"struct.bssl::SSL3_STATE"* %26, null
  br i1 %27, label %47, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %26, i64 0, i32 23
  %30 = load i16, i16* %29, align 1
  %31 = icmp sgt i16 %30, -1
  br i1 %31, label %47, label %32

32:                                               ; preds = %28
  %33 = icmp eq i16 %24, 0
  %34 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 24
  %35 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %34, i64 0, i32 0
  %36 = load i8*, i8** %35, align 8
  br i1 %33, label %37, label %85

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 24, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %4, i8* %36, i64 %39) #11
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %184, label %42

42:                                               ; preds = %37
  %43 = load i8*, i8** %35, align 8
  call void @OPENSSL_free(i8* %43) #11
  %44 = bitcast %"class.bssl::Array"* %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 16, i1 false) #11
  %45 = call i32 @CBB_flush(%struct.cbb_st* %1) #11
  %46 = icmp ne i32 %45, 0
  br label %184

47:                                               ; preds = %28, %22
  %48 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %7, i64 0, i32 16, i32 0, i32 0, i32 0
  %49 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %48, align 8
  %50 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %49, i64 0, i32 77
  %51 = load i16, i16* %50, align 8
  %52 = and i16 %51, 32
  %53 = icmp eq i16 %52, 0
  br i1 %53, label %64, label %54

54:                                               ; preds = %47
  %55 = call zeroext i16 @_ZN4bssl20ssl_get_grease_valueEPNS_13SSL_HANDSHAKEENS_18ssl_grease_index_tE(%"struct.bssl::SSL_HANDSHAKE"* %0, i32 1) #11
  %56 = call i32 @CBB_add_u16(%struct.cbb_st* nonnull %4, i16 zeroext %55) #11
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %184, label %58

58:                                               ; preds = %54
  %59 = call i32 @CBB_add_u16(%struct.cbb_st* nonnull %4, i16 zeroext 1) #11
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %184, label %61

61:                                               ; preds = %58
  %62 = call i32 @CBB_add_u8(%struct.cbb_st* nonnull %4, i8 zeroext 0) #11
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %184, label %64

64:                                               ; preds = %61, %47
  %65 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 1
  %66 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %65, align 8
  %67 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %66, i64 0, i32 14, i32 1
  %68 = load i64, i64* %67, align 8
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %74, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %66, i64 0, i32 14
  %72 = bitcast %"class.bssl::Array.56"* %71 to i64*
  %73 = load i64, i64* %72, align 8
  br label %74

74:                                               ; preds = %64, %70
  %75 = phi i64 [ %68, %70 ], [ 3, %64 ]
  %76 = phi i64 [ %73, %70 ], [ ptrtoint ([3 x i16]* @_ZN4bsslL14kDefaultGroupsE to i64), %64 ]
  %77 = inttoptr i64 %76 to i16*
  %78 = load i16, i16* %77, align 2
  %79 = icmp eq i16 %78, 16696
  br i1 %79, label %80, label %87

80:                                               ; preds = %74
  %81 = icmp ugt i64 %75, 1
  br i1 %81, label %82, label %87

82:                                               ; preds = %80
  %83 = getelementptr inbounds i16, i16* %77, i64 1
  %84 = load i16, i16* %83, align 2
  br label %87

85:                                               ; preds = %32
  call void @OPENSSL_free(i8* %36) #11
  %86 = bitcast %"class.bssl::Array"* %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %86, i8 0, i64 16, i1 false) #11
  br label %87

87:                                               ; preds = %82, %80, %74, %85
  %88 = phi i16 [ %24, %85 ], [ %78, %74 ], [ 16696, %80 ], [ 16696, %82 ]
  %89 = phi i16 [ 0, %85 ], [ 0, %74 ], [ 0, %80 ], [ %84, %82 ]
  %90 = bitcast %struct.cbb_st* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %90) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 -86, i64 32, i1 false)
  %91 = call %"class.bssl::SSLKeyShare"* @_ZN4bssl11SSLKeyShare6CreateEt(i16 zeroext %88) #11
  %92 = ptrtoint %"class.bssl::SSLKeyShare"* %91 to i64
  %93 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 19, i64 0
  %94 = getelementptr inbounds %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.45"* %93, i64 0, i32 0, i32 0, i32 0
  %95 = load %"class.bssl::SSLKeyShare"*, %"class.bssl::SSLKeyShare"** %94, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.45"* %93 to i64*
  store i64 %92, i64* %96, align 8
  %97 = icmp eq %"class.bssl::SSLKeyShare"* %95, null
  br i1 %97, label %104, label %98

98:                                               ; preds = %87
  %99 = bitcast %"class.bssl::SSLKeyShare"* %95 to void (%"class.bssl::SSLKeyShare"*)***
  %100 = load void (%"class.bssl::SSLKeyShare"*)**, void (%"class.bssl::SSLKeyShare"*)*** %99, align 8
  %101 = load void (%"class.bssl::SSLKeyShare"*)*, void (%"class.bssl::SSLKeyShare"*)** %100, align 8
  call void %101(%"class.bssl::SSLKeyShare"* nonnull %95) #11
  %102 = bitcast %"class.bssl::SSLKeyShare"* %95 to i8*
  call void @OPENSSL_free(i8* nonnull %102) #11
  %103 = load %"class.bssl::SSLKeyShare"*, %"class.bssl::SSLKeyShare"** %94, align 8
  br label %104

104:                                              ; preds = %98, %87
  %105 = phi %"class.bssl::SSLKeyShare"* [ %103, %98 ], [ %91, %87 ]
  %106 = icmp eq %"class.bssl::SSLKeyShare"* %105, null
  br i1 %106, label %182, label %107

107:                                              ; preds = %104
  %108 = call i32 @CBB_add_u16(%struct.cbb_st* nonnull %4, i16 zeroext %88) #11
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %182, label %110

110:                                              ; preds = %107
  %111 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* nonnull %4, %struct.cbb_st* nonnull %5) #11
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %182, label %113

113:                                              ; preds = %110
  %114 = load %"class.bssl::SSLKeyShare"*, %"class.bssl::SSLKeyShare"** %94, align 8
  %115 = bitcast %"class.bssl::SSLKeyShare"* %114 to i1 (%"class.bssl::SSLKeyShare"*, %struct.cbb_st*)***
  %116 = load i1 (%"class.bssl::SSLKeyShare"*, %struct.cbb_st*)**, i1 (%"class.bssl::SSLKeyShare"*, %struct.cbb_st*)*** %115, align 8
  %117 = getelementptr inbounds i1 (%"class.bssl::SSLKeyShare"*, %struct.cbb_st*)*, i1 (%"class.bssl::SSLKeyShare"*, %struct.cbb_st*)** %116, i64 3
  %118 = load i1 (%"class.bssl::SSLKeyShare"*, %struct.cbb_st*)*, i1 (%"class.bssl::SSLKeyShare"*, %struct.cbb_st*)** %117, align 8
  %119 = call zeroext i1 %118(%"class.bssl::SSLKeyShare"* %114, %struct.cbb_st* nonnull %5) #11
  br i1 %119, label %120, label %182

120:                                              ; preds = %113
  %121 = call i32 @CBB_flush(%struct.cbb_st* nonnull %4) #11
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %182, label %123

123:                                              ; preds = %120
  %124 = icmp eq i16 %89, 0
  br i1 %124, label %158, label %125

125:                                              ; preds = %123
  %126 = call %"class.bssl::SSLKeyShare"* @_ZN4bssl11SSLKeyShare6CreateEt(i16 zeroext %89) #11
  %127 = ptrtoint %"class.bssl::SSLKeyShare"* %126 to i64
  %128 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 19, i64 1
  %129 = getelementptr inbounds %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.45"* %128, i64 0, i32 0, i32 0, i32 0
  %130 = load %"class.bssl::SSLKeyShare"*, %"class.bssl::SSLKeyShare"** %129, align 8
  %131 = bitcast %"class.std::__1::unique_ptr.45"* %128 to i64*
  store i64 %127, i64* %131, align 8
  %132 = icmp eq %"class.bssl::SSLKeyShare"* %130, null
  br i1 %132, label %139, label %133

133:                                              ; preds = %125
  %134 = bitcast %"class.bssl::SSLKeyShare"* %130 to void (%"class.bssl::SSLKeyShare"*)***
  %135 = load void (%"class.bssl::SSLKeyShare"*)**, void (%"class.bssl::SSLKeyShare"*)*** %134, align 8
  %136 = load void (%"class.bssl::SSLKeyShare"*)*, void (%"class.bssl::SSLKeyShare"*)** %135, align 8
  call void %136(%"class.bssl::SSLKeyShare"* nonnull %130) #11
  %137 = bitcast %"class.bssl::SSLKeyShare"* %130 to i8*
  call void @OPENSSL_free(i8* nonnull %137) #11
  %138 = load %"class.bssl::SSLKeyShare"*, %"class.bssl::SSLKeyShare"** %129, align 8
  br label %139

139:                                              ; preds = %133, %125
  %140 = phi %"class.bssl::SSLKeyShare"* [ %138, %133 ], [ %126, %125 ]
  %141 = icmp eq %"class.bssl::SSLKeyShare"* %140, null
  br i1 %141, label %182, label %142

142:                                              ; preds = %139
  %143 = call i32 @CBB_add_u16(%struct.cbb_st* nonnull %4, i16 zeroext %89) #11
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %182, label %145

145:                                              ; preds = %142
  %146 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* nonnull %4, %struct.cbb_st* nonnull %5) #11
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %182, label %148

148:                                              ; preds = %145
  %149 = load %"class.bssl::SSLKeyShare"*, %"class.bssl::SSLKeyShare"** %129, align 8
  %150 = bitcast %"class.bssl::SSLKeyShare"* %149 to i1 (%"class.bssl::SSLKeyShare"*, %struct.cbb_st*)***
  %151 = load i1 (%"class.bssl::SSLKeyShare"*, %struct.cbb_st*)**, i1 (%"class.bssl::SSLKeyShare"*, %struct.cbb_st*)*** %150, align 8
  %152 = getelementptr inbounds i1 (%"class.bssl::SSLKeyShare"*, %struct.cbb_st*)*, i1 (%"class.bssl::SSLKeyShare"*, %struct.cbb_st*)** %151, i64 3
  %153 = load i1 (%"class.bssl::SSLKeyShare"*, %struct.cbb_st*)*, i1 (%"class.bssl::SSLKeyShare"*, %struct.cbb_st*)** %152, align 8
  %154 = call zeroext i1 %153(%"class.bssl::SSLKeyShare"* %149, %struct.cbb_st* nonnull %5) #11
  br i1 %154, label %155, label %182

155:                                              ; preds = %148
  %156 = call i32 @CBB_flush(%struct.cbb_st* nonnull %4) #11
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %182, label %158

158:                                              ; preds = %155, %123
  %159 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %25, align 8
  %160 = icmp eq %"struct.bssl::SSL3_STATE"* %159, null
  br i1 %160, label %179, label %161

161:                                              ; preds = %158
  %162 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %159, i64 0, i32 23
  %163 = load i16, i16* %162, align 1
  %164 = icmp sgt i16 %163, -1
  br i1 %164, label %165, label %179

165:                                              ; preds = %161
  %166 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 24
  %167 = call i8* @CBB_data(%struct.cbb_st* nonnull %4) #11
  %168 = call i64 @CBB_len(%struct.cbb_st* nonnull %4) #11
  %169 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %166, i64 0, i32 0
  %170 = load i8*, i8** %169, align 8
  call void @OPENSSL_free(i8* %170) #11
  %171 = bitcast %"class.bssl::Array"* %166 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %171, i8 0, i64 16, i1 false) #11
  %172 = icmp eq i64 %168, 0
  br i1 %172, label %179, label %173

173:                                              ; preds = %165
  %174 = call i8* @OPENSSL_malloc(i64 %168) #11
  store i8* %174, i8** %169, align 8
  %175 = icmp eq i8* %174, null
  br i1 %175, label %178, label %176

176:                                              ; preds = %173
  %177 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 24, i32 1
  store i64 %168, i64* %177, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %174, i8* align 1 %167, i64 %168, i1 false) #11
  br label %179

178:                                              ; preds = %173
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.4, i64 0, i64 0), i32 324) #11
  br label %182

179:                                              ; preds = %165, %176, %161, %158
  %180 = call i32 @CBB_flush(%struct.cbb_st* %1) #11
  %181 = icmp ne i32 %180, 0
  br label %182

182:                                              ; preds = %139, %104, %178, %148, %142, %145, %155, %113, %107, %110, %120, %179
  %183 = phi i1 [ %181, %179 ], [ false, %120 ], [ false, %110 ], [ false, %107 ], [ false, %113 ], [ false, %104 ], [ false, %155 ], [ false, %145 ], [ false, %142 ], [ false, %148 ], [ false, %139 ], [ false, %178 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %90) #11
  br label %184

184:                                              ; preds = %42, %182, %37, %61, %58, %54, %11, %16, %19
  %185 = phi i1 [ false, %19 ], [ false, %16 ], [ false, %11 ], [ %46, %42 ], [ %183, %182 ], [ false, %37 ], [ false, %61 ], [ false, %58 ], [ false, %54 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #11
  br label %186

186:                                              ; preds = %2, %184
  %187 = phi i1 [ %185, %184 ], [ true, %2 ]
  ret i1 %187
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL42ext_psk_key_exchange_modes_add_clienthelloEPNS_13SSL_HANDSHAKEEP6cbb_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly, %struct.cbb_st*) #0 {
  %3 = alloca %struct.cbb_st, align 8
  %4 = alloca %struct.cbb_st, align 8
  %5 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 6
  %6 = load i16, i16* %5, align 2
  %7 = icmp ult i16 %6, 772
  br i1 %7, label %27, label %8

8:                                                ; preds = %2
  %9 = bitcast %struct.cbb_st* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 32, i1 false)
  %10 = bitcast %struct.cbb_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 32, i1 false)
  %11 = tail call i32 @CBB_add_u16(%struct.cbb_st* %1, i16 zeroext 45) #11
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %25, label %13

13:                                               ; preds = %8
  %14 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* %1, %struct.cbb_st* nonnull %3) #11
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %25, label %16

16:                                               ; preds = %13
  %17 = call i32 @CBB_add_u8_length_prefixed(%struct.cbb_st* nonnull %3, %struct.cbb_st* nonnull %4) #11
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %25, label %19

19:                                               ; preds = %16
  %20 = call i32 @CBB_add_u8(%struct.cbb_st* nonnull %4, i8 zeroext 1) #11
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %19
  %23 = call i32 @CBB_flush(%struct.cbb_st* %1) #11
  %24 = icmp ne i32 %23, 0
  br label %25

25:                                               ; preds = %8, %13, %16, %19, %22
  %26 = phi i1 [ %24, %22 ], [ false, %19 ], [ false, %16 ], [ false, %13 ], [ false, %8 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #11
  br label %27

27:                                               ; preds = %2, %25
  %28 = phi i1 [ %26, %25 ], [ true, %2 ]
  ret i1 %28
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL44ext_psk_key_exchange_modes_parse_clienthelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture, i8* nocapture, %struct.cbs_st*) #0 {
  %4 = alloca %struct.cbs_st, align 8
  %5 = icmp eq %struct.cbs_st* %2, null
  br i1 %5, label %35, label %6

6:                                                ; preds = %3
  %7 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #11
  %8 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = call i32 @CBS_get_u8_length_prefixed(%struct.cbs_st* nonnull %2, %struct.cbs_st* nonnull %4) #11
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %17, label %11

11:                                               ; preds = %6
  %12 = call i64 @CBS_len(%struct.cbs_st* nonnull %4) #11
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = call i64 @CBS_len(%struct.cbs_st* nonnull %2) #11
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %18, label %17

17:                                               ; preds = %14, %6, %11
  store i8 50, i8* %1, align 1
  br label %33

18:                                               ; preds = %14
  %19 = call i8* @CBS_data(%struct.cbs_st* nonnull %4) #11
  %20 = call i64 @CBS_len(%struct.cbs_st* nonnull %4) #11
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %27, label %22

22:                                               ; preds = %18
  %23 = call i8* @memchr(i8* %19, i32 1, i64 %20) #12
  %24 = icmp ne i8* %23, null
  %25 = zext i1 %24 to i32
  %26 = shl nuw nsw i32 %25, 6
  br label %27

27:                                               ; preds = %18, %22
  %28 = phi i32 [ %26, %22 ], [ 0, %18 ]
  %29 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 46
  %30 = load i32, i32* %29, align 8
  %31 = and i32 %30, -65
  %32 = or i32 %31, %28
  store i32 %32, i32* %29, align 8
  br label %33

33:                                               ; preds = %27, %17
  %34 = phi i1 [ false, %17 ], [ true, %27 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #11
  br label %35

35:                                               ; preds = %3, %33
  %36 = phi i1 [ %34, %33 ], [ true, %3 ]
  ret i1 %36
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL30ext_early_data_add_clienthelloEPNS_13SSL_HANDSHAKEEP6cbb_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture, %struct.cbb_st*) #0 {
  %3 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %4 = load %struct.ssl_st*, %struct.ssl_st** %3, align 8
  %5 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %4, i64 0, i32 8
  %6 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %5, align 8
  %7 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %6, i64 0, i32 23
  %8 = load i16, i16* %7, align 1
  %9 = icmp sgt i16 %8, -1
  br i1 %9, label %10, label %138

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %4, i64 0, i32 26
  %12 = load i8, i8* %11, align 4
  %13 = and i8 %12, 4
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %6, i64 0, i32 30
  store i32 1, i32* %16, align 8
  br label %138

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 6
  %19 = load i16, i16* %18, align 2
  %20 = icmp ult i16 %19, 772
  br i1 %20, label %21, label %23

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %6, i64 0, i32 30
  store i32 3, i32* %22, align 8
  br label %138

23:                                               ; preds = %17
  %24 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %4, i64 0, i32 14, i32 0, i32 0, i32 0
  %25 = load %struct.ssl_session_st*, %struct.ssl_session_st** %24, align 8
  %26 = icmp eq %struct.ssl_session_st* %25, null
  br i1 %26, label %27, label %29

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %6, i64 0, i32 30
  store i32 5, i32* %28, align 8
  br label %138

29:                                               ; preds = %23
  %30 = tail call zeroext i16 @_ZN4bssl28ssl_session_protocol_versionEPK14ssl_session_st(%struct.ssl_session_st* nonnull %25) #11
  %31 = icmp ult i16 %30, 772
  br i1 %31, label %37, label %32

32:                                               ; preds = %29
  %33 = load %struct.ssl_session_st*, %struct.ssl_session_st** %24, align 8
  %34 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %33, i64 0, i32 32
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %32, %29
  %38 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %5, align 8
  %39 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %38, i64 0, i32 30
  store i32 7, i32* %39, align 8
  br label %138

40:                                               ; preds = %32
  %41 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %33, i64 0, i32 33, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %126, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %33, i64 0, i32 33, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = tail call zeroext i1 @_ZN4bssl28ssl_is_alpn_protocol_allowedEPKNS_13SSL_HANDSHAKEENS_4SpanIKhEE(%"struct.bssl::SSL_HANDSHAKE"* %0, i8* %46, i64 %42)
  br i1 %47, label %51, label %48

48:                                               ; preds = %44
  %49 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %5, align 8
  %50 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %49, i64 0, i32 30
  store i32 9, i32* %50, align 8
  br label %138

51:                                               ; preds = %44
  %52 = load %struct.ssl_session_st*, %struct.ssl_session_st** %24, align 8
  %53 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %52, i64 0, i32 36
  %54 = load i8, i8* %53, align 8
  %55 = and i8 %54, 64
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %126, label %57

57:                                               ; preds = %51
  %58 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %52, i64 0, i32 33, i32 0
  %59 = load i8*, i8** %58, align 8
  %60 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %52, i64 0, i32 33, i32 1
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 1
  %63 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %62, align 8
  %64 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %63, i64 0, i32 17, i32 1, i32 0
  %65 = load %"struct.bssl::ALPSConfig"*, %"struct.bssl::ALPSConfig"** %64, align 8
  %66 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %63, i64 0, i32 17, i32 0
  %67 = load i64, i64* %66, align 8
  %68 = getelementptr inbounds %"struct.bssl::ALPSConfig", %"struct.bssl::ALPSConfig"* %65, i64 %67
  %69 = icmp eq i64 %67, 0
  br i1 %69, label %123, label %70

70:                                               ; preds = %57
  %71 = getelementptr inbounds i8, i8* %59, i64 %61
  %72 = icmp eq i64 %61, 0
  br label %73

73:                                               ; preds = %94, %70
  %74 = phi %"struct.bssl::ALPSConfig"* [ %65, %70 ], [ %95, %94 ]
  %75 = getelementptr inbounds %"struct.bssl::ALPSConfig", %"struct.bssl::ALPSConfig"* %74, i64 0, i32 0, i32 0
  %76 = load i8*, i8** %75, align 8
  %77 = getelementptr inbounds %"struct.bssl::ALPSConfig", %"struct.bssl::ALPSConfig"* %74, i64 0, i32 0, i32 1
  %78 = load i64, i64* %77, align 8
  %79 = icmp eq i64 %78, %61
  br i1 %79, label %80, label %94

80:                                               ; preds = %73
  %81 = getelementptr inbounds i8, i8* %76, i64 %61
  br i1 %72, label %97, label %82

82:                                               ; preds = %80, %88
  %83 = phi i8* [ %90, %88 ], [ %76, %80 ]
  %84 = phi i8* [ %89, %88 ], [ %59, %80 ]
  %85 = load i8, i8* %84, align 1
  %86 = load i8, i8* %83, align 1
  %87 = icmp eq i8 %85, %86
  br i1 %87, label %88, label %94

88:                                               ; preds = %82
  %89 = getelementptr inbounds i8, i8* %84, i64 1
  %90 = getelementptr inbounds i8, i8* %83, i64 1
  %91 = icmp eq i8* %89, %71
  %92 = icmp eq i8* %90, %81
  %93 = or i1 %92, %91
  br i1 %93, label %97, label %82

94:                                               ; preds = %82, %73
  %95 = getelementptr inbounds %"struct.bssl::ALPSConfig", %"struct.bssl::ALPSConfig"* %74, i64 1
  %96 = icmp eq %"struct.bssl::ALPSConfig"* %95, %68
  br i1 %96, label %123, label %73

97:                                               ; preds = %80, %88
  %98 = getelementptr inbounds %"struct.bssl::ALPSConfig", %"struct.bssl::ALPSConfig"* %74, i64 0, i32 1, i32 0
  %99 = load i8*, i8** %98, align 8
  %100 = getelementptr inbounds %"struct.bssl::ALPSConfig", %"struct.bssl::ALPSConfig"* %74, i64 0, i32 1, i32 1
  %101 = load i64, i64* %100, align 8
  %102 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %52, i64 0, i32 34, i32 0
  %103 = load i8*, i8** %102, align 8
  %104 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %52, i64 0, i32 34, i32 1
  %105 = load i64, i64* %104, align 8
  %106 = icmp eq i64 %101, %105
  br i1 %106, label %107, label %123

107:                                              ; preds = %97
  %108 = getelementptr inbounds i8, i8* %99, i64 %101
  %109 = icmp eq i64 %101, 0
  %110 = getelementptr inbounds i8, i8* %103, i64 %101
  br i1 %109, label %126, label %111

111:                                              ; preds = %107, %117
  %112 = phi i8* [ %119, %117 ], [ %103, %107 ]
  %113 = phi i8* [ %118, %117 ], [ %99, %107 ]
  %114 = load i8, i8* %113, align 1
  %115 = load i8, i8* %112, align 1
  %116 = icmp eq i8 %114, %115
  br i1 %116, label %117, label %123

117:                                              ; preds = %111
  %118 = getelementptr inbounds i8, i8* %113, i64 1
  %119 = getelementptr inbounds i8, i8* %112, i64 1
  %120 = icmp eq i8* %118, %108
  %121 = icmp eq i8* %119, %110
  %122 = or i1 %121, %120
  br i1 %122, label %126, label %111

123:                                              ; preds = %94, %111, %97, %57
  %124 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %5, align 8
  %125 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %124, i64 0, i32 30
  store i32 14, i32* %125, align 8
  br label %138

126:                                              ; preds = %117, %107, %51, %40
  %127 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 46
  %128 = load i32, i32* %127, align 8
  %129 = or i32 %128, 16384
  store i32 %129, i32* %127, align 8
  %130 = tail call i32 @CBB_add_u16(%struct.cbb_st* %1, i16 zeroext 42) #11
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %138, label %132

132:                                              ; preds = %126
  %133 = tail call i32 @CBB_add_u16(%struct.cbb_st* %1, i16 zeroext 0) #11
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %138, label %135

135:                                              ; preds = %132
  %136 = tail call i32 @CBB_flush(%struct.cbb_st* %1) #11
  %137 = icmp ne i32 %136, 0
  ret i1 %137

138:                                              ; preds = %126, %132, %123, %2, %48, %37, %27, %21, %15
  %139 = phi i1 [ true, %21 ], [ true, %27 ], [ true, %37 ], [ true, %48 ], [ true, %15 ], [ true, %2 ], [ true, %123 ], [ false, %132 ], [ false, %126 ]
  ret i1 %139
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL32ext_early_data_parse_serverhelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly, i8* nocapture, %struct.cbs_st*) #0 {
  %4 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %5 = load %struct.ssl_st*, %struct.ssl_st** %4, align 8
  %6 = icmp eq %struct.cbs_st* %2, null
  br i1 %6, label %7, label %23

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 46
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 16384
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %41, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %5, i64 0, i32 8
  %14 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %13, align 8
  %15 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %14, i64 0, i32 23
  %16 = load i16, i16* %15, align 1
  %17 = icmp sgt i16 %16, -1
  br i1 %17, label %18, label %41

18:                                               ; preds = %12
  %19 = and i16 %16, 64
  %20 = icmp eq i16 %19, 0
  %21 = select i1 %20, i32 6, i32 4
  %22 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %14, i64 0, i32 30
  store i32 %21, i32* %22, align 8
  br label %41

23:                                               ; preds = %3
  %24 = tail call i64 @CBS_len(%struct.cbs_st* nonnull %2) #11
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %27, label %26

26:                                               ; preds = %23
  store i8 50, i8* %1, align 1
  br label %41

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %5, i64 0, i32 8
  %29 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %28, align 8
  %30 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %29, i64 0, i32 23
  %31 = load i16, i16* %30, align 1
  %32 = and i16 %31, 64
  %33 = icmp eq i16 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %27
  store i8 110, i8* %1, align 1
  tail call void @ERR_put_error(i32 16, i32 0, i32 222, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 2256) #11
  br label %41

35:                                               ; preds = %27
  %36 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %29, i64 0, i32 30
  store i32 2, i32* %36, align 8
  %37 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %28, align 8
  %38 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %37, i64 0, i32 23
  %39 = load i16, i16* %38, align 1
  %40 = or i16 %39, 4096
  store i16 %40, i16* %38, align 1
  br label %41

41:                                               ; preds = %18, %7, %12, %35, %34, %26
  %42 = phi i1 [ false, %26 ], [ true, %35 ], [ false, %34 ], [ true, %12 ], [ true, %7 ], [ true, %18 ]
  ret i1 %42
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL32ext_early_data_parse_clienthelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture, i8* nocapture, %struct.cbs_st*) #0 {
  %4 = icmp eq %struct.cbs_st* %2, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %7 = load %struct.ssl_st*, %struct.ssl_st** %6, align 8
  %8 = tail call zeroext i16 @_ZN4bssl20ssl_protocol_versionEPK6ssl_st(%struct.ssl_st* %7) #11
  %9 = icmp ult i16 %8, 772
  br i1 %9, label %18, label %10

10:                                               ; preds = %5
  %11 = tail call i64 @CBS_len(%struct.cbs_st* nonnull %2) #11
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %10
  store i8 50, i8* %1, align 1
  br label %18

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 46
  %16 = load i32, i32* %15, align 8
  %17 = or i32 %16, 16384
  store i32 %17, i32* %15, align 8
  br label %18

18:                                               ; preds = %3, %5, %14, %13
  %19 = phi i1 [ false, %13 ], [ true, %14 ], [ true, %5 ], [ true, %3 ]
  ret i1 %19
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL30ext_early_data_add_serverhelloEPNS_13SSL_HANDSHAKEEP6cbb_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly, %struct.cbb_st*) #0 {
  %3 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %4 = load %struct.ssl_st*, %struct.ssl_st** %3, align 8
  %5 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %4, i64 0, i32 8
  %6 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %5, align 8
  %7 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %6, i64 0, i32 23
  %8 = load i16, i16* %7, align 1
  %9 = and i16 %8, 4096
  %10 = icmp eq i16 %9, 0
  br i1 %10, label %20, label %11

11:                                               ; preds = %2
  %12 = tail call i32 @CBB_add_u16(%struct.cbb_st* %1, i16 zeroext 42) #11
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %11
  %15 = tail call i32 @CBB_add_u16(%struct.cbb_st* %1, i16 zeroext 0) #11
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %14
  %18 = tail call i32 @CBB_flush(%struct.cbb_st* %1) #11
  %19 = icmp ne i32 %18, 0
  ret i1 %19

20:                                               ; preds = %11, %14, %2
  %21 = phi i1 [ true, %2 ], [ false, %14 ], [ false, %11 ]
  ret i1 %21
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL38ext_supported_versions_add_clienthelloEPNS_13SSL_HANDSHAKEEP6cbb_st(%"struct.bssl::SSL_HANDSHAKE"*, %struct.cbb_st*) #0 {
  %3 = alloca %struct.cbb_st, align 8
  %4 = alloca %struct.cbb_st, align 8
  %5 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %6 = load %struct.ssl_st*, %struct.ssl_st** %5, align 8
  %7 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 6
  %8 = load i16, i16* %7, align 2
  %9 = icmp ult i16 %8, 772
  br i1 %9, label %39, label %10

10:                                               ; preds = %2
  %11 = bitcast %struct.cbb_st* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 32, i1 false)
  %12 = bitcast %struct.cbb_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 32, i1 false)
  %13 = tail call i32 @CBB_add_u16(%struct.cbb_st* %1, i16 zeroext 43) #11
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %37, label %15

15:                                               ; preds = %10
  %16 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* %1, %struct.cbb_st* nonnull %3) #11
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %37, label %18

18:                                               ; preds = %15
  %19 = call i32 @CBB_add_u8_length_prefixed(%struct.cbb_st* nonnull %3, %struct.cbb_st* nonnull %4) #11
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %37, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %6, i64 0, i32 16, i32 0, i32 0, i32 0
  %23 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %22, align 8
  %24 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %23, i64 0, i32 77
  %25 = load i16, i16* %24, align 8
  %26 = and i16 %25, 32
  %27 = icmp eq i16 %26, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %21
  %29 = call zeroext i16 @_ZN4bssl20ssl_get_grease_valueEPNS_13SSL_HANDSHAKEENS_18ssl_grease_index_tE(%"struct.bssl::SSL_HANDSHAKE"* %0, i32 4) #11
  %30 = call i32 @CBB_add_u16(%struct.cbb_st* nonnull %4, i16 zeroext %29) #11
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %37, label %32

32:                                               ; preds = %28, %21
  %33 = call zeroext i1 @_ZN4bssl26ssl_add_supported_versionsEPNS_13SSL_HANDSHAKEEP6cbb_st(%"struct.bssl::SSL_HANDSHAKE"* %0, %struct.cbb_st* nonnull %4) #11
  br i1 %33, label %34, label %37

34:                                               ; preds = %32
  %35 = call i32 @CBB_flush(%struct.cbb_st* %1) #11
  %36 = icmp ne i32 %35, 0
  br label %37

37:                                               ; preds = %34, %32, %28, %10, %15, %18
  %38 = phi i1 [ false, %18 ], [ false, %15 ], [ false, %10 ], [ false, %28 ], [ false, %32 ], [ %36, %34 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #11
  br label %39

39:                                               ; preds = %2, %37
  %40 = phi i1 [ %38, %37 ], [ true, %2 ]
  ret i1 %40
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL26ext_cookie_add_clienthelloEPNS_13SSL_HANDSHAKEEP6cbb_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture, %struct.cbb_st*) #0 {
  %3 = alloca %struct.cbb_st, align 8
  %4 = alloca %struct.cbb_st, align 8
  %5 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 21
  %6 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 21, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %34, label %9

9:                                                ; preds = %2
  %10 = bitcast %struct.cbb_st* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 32, i1 false)
  %11 = bitcast %struct.cbb_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 32, i1 false)
  %12 = tail call i32 @CBB_add_u16(%struct.cbb_st* %1, i16 zeroext 44) #11
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %32, label %14

14:                                               ; preds = %9
  %15 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* %1, %struct.cbb_st* nonnull %3) #11
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %32, label %17

17:                                               ; preds = %14
  %18 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* nonnull %3, %struct.cbb_st* nonnull %4) #11
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %32, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %5, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = load i64, i64* %6, align 8
  %24 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %4, i8* %22, i64 %23) #11
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %20
  %27 = call i32 @CBB_flush(%struct.cbb_st* %1) #11
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %26
  %30 = load i8*, i8** %21, align 8
  call void @OPENSSL_free(i8* %30) #11
  %31 = bitcast %"class.bssl::Array"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 16, i1 false) #11
  br label %32

32:                                               ; preds = %9, %14, %17, %20, %26, %29
  %33 = phi i1 [ true, %29 ], [ false, %26 ], [ false, %20 ], [ false, %17 ], [ false, %14 ], [ false, %9 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #11
  br label %34

34:                                               ; preds = %2, %32
  %35 = phi i1 [ %33, %32 ], [ true, %2 ]
  ret i1 %35
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL41ext_quic_transport_params_add_clienthelloEPNS_13SSL_HANDSHAKEEP6cbb_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly, %struct.cbb_st*) #0 {
  %3 = tail call fastcc zeroext i1 @_ZN4bsslL46ext_quic_transport_params_add_clienthello_implEPNS_13SSL_HANDSHAKEEP6cbb_stb(%"struct.bssl::SSL_HANDSHAKE"* %0, %struct.cbb_st* %1, i1 zeroext false)
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL43ext_quic_transport_params_parse_serverhelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly, i8* nocapture, %struct.cbs_st* readonly) #0 {
  %4 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %5 = load %struct.ssl_st*, %struct.ssl_st** %4, align 8
  %6 = icmp eq %struct.cbs_st* %2, null
  br i1 %6, label %7, label %19

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 1
  %9 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %8, align 8
  %10 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %9, i64 0, i32 23
  %11 = load i16, i16* %10, align 1
  %12 = and i16 %11, 512
  %13 = icmp eq i16 %12, 0
  br i1 %13, label %14, label %37

14:                                               ; preds = %7
  %15 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %5, i64 0, i32 24
  %16 = load %struct.ssl_quic_method_st*, %struct.ssl_quic_method_st** %15, align 8
  %17 = icmp eq %struct.ssl_quic_method_st* %16, null
  br i1 %17, label %37, label %18

18:                                               ; preds = %14
  store i8 109, i8* %1, align 1
  br label %37

19:                                               ; preds = %3
  %20 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %5, i64 0, i32 8
  %21 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %20, align 8
  %22 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %21, i64 0, i32 52
  %23 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %2, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %2, i64 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %22, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  tail call void @OPENSSL_free(i8* %28) #11
  %29 = bitcast %"class.bssl::Array"* %22 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false) #11
  %30 = icmp eq i64 %26, 0
  br i1 %30, label %37, label %31

31:                                               ; preds = %19
  %32 = tail call i8* @OPENSSL_malloc(i64 %26) #11
  store i8* %32, i8** %27, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.4, i64 0, i64 0), i32 324) #11
  br label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %21, i64 0, i32 52, i32 1
  store i64 %26, i64* %36, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %32, i8* align 1 %24, i64 %26, i1 false) #11
  br label %37

37:                                               ; preds = %7, %14, %18, %19, %34, %35
  %38 = phi i1 [ false, %18 ], [ true, %7 ], [ true, %14 ], [ false, %34 ], [ true, %35 ], [ true, %19 ]
  ret i1 %38
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL43ext_quic_transport_params_parse_clienthelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly, i8* nocapture, %struct.cbs_st* readonly) #0 {
  %4 = tail call fastcc zeroext i1 @_ZN4bsslL48ext_quic_transport_params_parse_clienthello_implEPNS_13SSL_HANDSHAKEEPhP6cbs_stb(%"struct.bssl::SSL_HANDSHAKE"* %0, i8* %1, %struct.cbs_st* %2, i1 zeroext false)
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL41ext_quic_transport_params_add_serverhelloEPNS_13SSL_HANDSHAKEEP6cbb_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly, %struct.cbb_st*) #0 {
  %3 = tail call fastcc zeroext i1 @_ZN4bsslL46ext_quic_transport_params_add_serverhello_implEPNS_13SSL_HANDSHAKEEP6cbb_stb(%"struct.bssl::SSL_HANDSHAKE"* %0, %struct.cbb_st* %1, i1 zeroext false)
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL48ext_quic_transport_params_add_clienthello_legacyEPNS_13SSL_HANDSHAKEEP6cbb_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly, %struct.cbb_st*) #0 {
  %3 = tail call fastcc zeroext i1 @_ZN4bsslL46ext_quic_transport_params_add_clienthello_implEPNS_13SSL_HANDSHAKEEP6cbb_stb(%"struct.bssl::SSL_HANDSHAKE"* %0, %struct.cbb_st* %1, i1 zeroext true)
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL50ext_quic_transport_params_parse_serverhello_legacyEPNS_13SSL_HANDSHAKEEPhP6cbs_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly, i8* nocapture, %struct.cbs_st* readonly) #0 {
  %4 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %5 = load %struct.ssl_st*, %struct.ssl_st** %4, align 8
  %6 = icmp eq %struct.cbs_st* %2, null
  br i1 %6, label %7, label %19

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 1
  %9 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %8, align 8
  %10 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %9, i64 0, i32 23
  %11 = load i16, i16* %10, align 1
  %12 = and i16 %11, 512
  %13 = icmp eq i16 %12, 0
  br i1 %13, label %37, label %14

14:                                               ; preds = %7
  %15 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %5, i64 0, i32 24
  %16 = load %struct.ssl_quic_method_st*, %struct.ssl_quic_method_st** %15, align 8
  %17 = icmp eq %struct.ssl_quic_method_st* %16, null
  br i1 %17, label %37, label %18

18:                                               ; preds = %14
  store i8 109, i8* %1, align 1
  br label %37

19:                                               ; preds = %3
  %20 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %5, i64 0, i32 8
  %21 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %20, align 8
  %22 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %21, i64 0, i32 52
  %23 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %2, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %2, i64 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %22, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  tail call void @OPENSSL_free(i8* %28) #11
  %29 = bitcast %"class.bssl::Array"* %22 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false) #11
  %30 = icmp eq i64 %26, 0
  br i1 %30, label %37, label %31

31:                                               ; preds = %19
  %32 = tail call i8* @OPENSSL_malloc(i64 %26) #11
  store i8* %32, i8** %27, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.4, i64 0, i64 0), i32 324) #11
  br label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %21, i64 0, i32 52, i32 1
  store i64 %26, i64* %36, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %32, i8* align 1 %24, i64 %26, i1 false) #11
  br label %37

37:                                               ; preds = %7, %14, %18, %19, %34, %35
  %38 = phi i1 [ false, %18 ], [ true, %7 ], [ true, %14 ], [ false, %34 ], [ true, %35 ], [ true, %19 ]
  ret i1 %38
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL50ext_quic_transport_params_parse_clienthello_legacyEPNS_13SSL_HANDSHAKEEPhP6cbs_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly, i8* nocapture, %struct.cbs_st* readonly) #0 {
  %4 = tail call fastcc zeroext i1 @_ZN4bsslL48ext_quic_transport_params_parse_clienthello_implEPNS_13SSL_HANDSHAKEEPhP6cbs_stb(%"struct.bssl::SSL_HANDSHAKE"* %0, i8* %1, %struct.cbs_st* %2, i1 zeroext true)
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL48ext_quic_transport_params_add_serverhello_legacyEPNS_13SSL_HANDSHAKEEP6cbb_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly, %struct.cbb_st*) #0 {
  %3 = tail call fastcc zeroext i1 @_ZN4bsslL46ext_quic_transport_params_add_serverhello_implEPNS_13SSL_HANDSHAKEEP6cbb_stb(%"struct.bssl::SSL_HANDSHAKE"* %0, %struct.cbb_st* %1, i1 zeroext true)
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL32cert_compression_add_clienthelloEPNS_13SSL_HANDSHAKEEP6cbb_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly, %struct.cbb_st*) #0 {
  %3 = alloca %struct.cbb_st, align 8
  %4 = alloca %struct.cbb_st, align 8
  %5 = bitcast %struct.cbb_st* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 32, i1 false)
  %6 = bitcast %struct.cbb_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 32, i1 false)
  %7 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %8 = load %struct.ssl_st*, %struct.ssl_st** %7, align 8
  %9 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %8, i64 0, i32 16, i32 0, i32 0, i32 0
  %10 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %9, align 8
  %11 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %10, i64 0, i32 66, i32 1, i32 0
  %12 = load %"struct.bssl::CertCompressionAlg"*, %"struct.bssl::CertCompressionAlg"** %11, align 8
  %13 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %10, i64 0, i32 66, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"struct.bssl::CertCompressionAlg", %"struct.bssl::CertCompressionAlg"* %12, i64 %14
  %16 = icmp eq i64 %14, 0
  br i1 %16, label %50, label %17

17:                                               ; preds = %2, %40
  %18 = phi %"struct.bssl::CertCompressionAlg"* [ %42, %40 ], [ %12, %2 ]
  %19 = phi i8 [ %41, %40 ], [ 1, %2 ]
  %20 = getelementptr inbounds %"struct.bssl::CertCompressionAlg", %"struct.bssl::CertCompressionAlg"* %18, i64 0, i32 1
  %21 = load i32 (%struct.ssl_st*, %struct.crypto_buffer_st**, i64, i8*, i64)*, i32 (%struct.ssl_st*, %struct.crypto_buffer_st**, i64, i8*, i64)** %20, align 8
  %22 = icmp eq i32 (%struct.ssl_st*, %struct.crypto_buffer_st**, i64, i8*, i64)* %21, null
  br i1 %22, label %40, label %23

23:                                               ; preds = %17
  %24 = and i8 %19, 1
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %35, label %26

26:                                               ; preds = %23
  %27 = call i32 @CBB_add_u16(%struct.cbb_st* %1, i16 zeroext 27) #11
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %50, label %29

29:                                               ; preds = %26
  %30 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* %1, %struct.cbb_st* nonnull %3) #11
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %50, label %32

32:                                               ; preds = %29
  %33 = call i32 @CBB_add_u8_length_prefixed(%struct.cbb_st* nonnull %3, %struct.cbb_st* nonnull %4) #11
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %50, label %35

35:                                               ; preds = %32, %23
  %36 = getelementptr inbounds %"struct.bssl::CertCompressionAlg", %"struct.bssl::CertCompressionAlg"* %18, i64 0, i32 2
  %37 = load i16, i16* %36, align 8
  %38 = call i32 @CBB_add_u16(%struct.cbb_st* nonnull %4, i16 zeroext %37) #11
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %50, label %40

40:                                               ; preds = %17, %35
  %41 = phi i8 [ %19, %17 ], [ 0, %35 ]
  %42 = getelementptr inbounds %"struct.bssl::CertCompressionAlg", %"struct.bssl::CertCompressionAlg"* %18, i64 1
  %43 = icmp eq %"struct.bssl::CertCompressionAlg"* %42, %15
  br i1 %43, label %44, label %17

44:                                               ; preds = %40
  %45 = and i8 %41, 1
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %47, label %50

47:                                               ; preds = %44
  %48 = call i32 @CBB_flush(%struct.cbb_st* %1) #11
  %49 = icmp ne i32 %48, 0
  br label %50

50:                                               ; preds = %35, %26, %29, %32, %2, %47, %44
  %51 = phi i1 [ true, %44 ], [ %49, %47 ], [ true, %2 ], [ false, %32 ], [ false, %29 ], [ false, %26 ], [ false, %35 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #11
  ret i1 %51
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZN4bsslL34cert_compression_parse_serverhelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture readnone, i8* nocapture readnone, %struct.cbs_st* readnone) #7 {
  %4 = icmp eq %struct.cbs_st* %2, null
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL34cert_compression_parse_clienthelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture, i8* nocapture readnone, %struct.cbs_st*) #0 {
  %4 = alloca %struct.cbs_st, align 8
  %5 = alloca i16, align 2
  %6 = icmp eq %struct.cbs_st* %2, null
  br i1 %6, label %113, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %9 = load %struct.ssl_st*, %struct.ssl_st** %8, align 8
  %10 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %9, i64 0, i32 16, i32 0, i32 0, i32 0
  %11 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %10, align 8
  %12 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %11, i64 0, i32 66, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #11
  %15 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 16, i1 false)
  %16 = call i32 @CBS_get_u8_length_prefixed(%struct.cbs_st* nonnull %2, %struct.cbs_st* nonnull %4) #11
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %111, label %18

18:                                               ; preds = %7
  %19 = call i64 @CBS_len(%struct.cbs_st* nonnull %2) #11
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %21, label %111

21:                                               ; preds = %18
  %22 = call i64 @CBS_len(%struct.cbs_st* nonnull %4) #11
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %111, label %24

24:                                               ; preds = %21
  %25 = call i64 @CBS_len(%struct.cbs_st* nonnull %4) #11
  %26 = and i64 %25, 1
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %28, label %111

28:                                               ; preds = %24
  %29 = call i64 @CBS_len(%struct.cbs_st* nonnull %4) #11
  %30 = lshr i64 %29, 1
  call void @OPENSSL_free(i8* null) #11
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %38, label %32

32:                                               ; preds = %28
  %33 = and i64 %29, -2
  %34 = call i8* @OPENSSL_malloc(i64 %33) #11
  %35 = bitcast i8* %34 to i16*
  %36 = icmp eq i8* %34, null
  br i1 %36, label %37, label %38

37:                                               ; preds = %32
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.4, i64 0, i64 0), i32 324) #11
  br label %108

38:                                               ; preds = %32, %28
  %39 = phi i8* [ null, %28 ], [ %34, %32 ]
  %40 = phi i16* [ null, %28 ], [ %35, %32 ]
  %41 = call i64 @CBS_len(%struct.cbs_st* nonnull %4) #11
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %79, label %43

43:                                               ; preds = %38
  %44 = bitcast i16* %5 to i8*
  %45 = icmp eq i64 %13, 0
  %46 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %11, i64 0, i32 66, i32 1, i32 0
  br label %47

47:                                               ; preds = %43, %75
  %48 = phi i64 [ 0, %43 ], [ %55, %75 ]
  %49 = phi i64 [ %13, %43 ], [ %76, %75 ]
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %44) #11
  store i16 -21846, i16* %5, align 2
  %50 = call i32 @CBS_get_u16(%struct.cbs_st* nonnull %4, i16* nonnull %5) #11
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %47
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %44) #11
  br label %108

53:                                               ; preds = %47
  %54 = load i16, i16* %5, align 2
  %55 = add i64 %48, 1
  %56 = getelementptr inbounds i16, i16* %40, i64 %48
  store i16 %54, i16* %56, align 2
  br i1 %45, label %75, label %57

57:                                               ; preds = %53
  %58 = load %"struct.bssl::CertCompressionAlg"*, %"struct.bssl::CertCompressionAlg"** %46, align 8
  %59 = load i16, i16* %5, align 2
  br label %60

60:                                               ; preds = %72, %57
  %61 = phi i64 [ 0, %57 ], [ %73, %72 ]
  %62 = getelementptr inbounds %"struct.bssl::CertCompressionAlg", %"struct.bssl::CertCompressionAlg"* %58, i64 %61, i32 2
  %63 = load i16, i16* %62, align 8
  %64 = icmp eq i16 %63, %59
  br i1 %64, label %65, label %72

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"struct.bssl::CertCompressionAlg", %"struct.bssl::CertCompressionAlg"* %58, i64 %61, i32 0
  %67 = load i32 (%struct.ssl_st*, %struct.cbb_st*, i8*, i64)*, i32 (%struct.ssl_st*, %struct.cbb_st*, i8*, i64)** %66, align 8
  %68 = icmp eq i32 (%struct.ssl_st*, %struct.cbb_st*, i8*, i64)* %67, null
  br i1 %68, label %72, label %69

69:                                               ; preds = %65
  %70 = icmp ult i64 %61, %49
  %71 = select i1 %70, i64 %61, i64 %49
  br label %75

72:                                               ; preds = %65, %60
  %73 = add nuw i64 %61, 1
  %74 = icmp eq i64 %73, %13
  br i1 %74, label %75, label %60

75:                                               ; preds = %72, %53, %69
  %76 = phi i64 [ %71, %69 ], [ %49, %53 ], [ %49, %72 ]
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %44) #11
  %77 = call i64 @CBS_len(%struct.cbs_st* nonnull %4) #11
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %79, label %47

79:                                               ; preds = %75, %38
  %80 = phi i64 [ %13, %38 ], [ %76, %75 ]
  call void @qsort(i8* %39, i64 %30, i64 2, i32 (i8*, i8*)* nonnull @_ZN4bsslL16compare_uint16_tEPKvS1_) #11
  %81 = icmp ugt i64 %29, 3
  br i1 %81, label %82, label %93

82:                                               ; preds = %79
  %83 = load i16, i16* %40, align 2
  br label %86

84:                                               ; preds = %86
  %85 = icmp ult i64 %92, %30
  br i1 %85, label %86, label %93

86:                                               ; preds = %82, %84
  %87 = phi i16 [ %90, %84 ], [ %83, %82 ]
  %88 = phi i64 [ %92, %84 ], [ 1, %82 ]
  %89 = getelementptr inbounds i16, i16* %40, i64 %88
  %90 = load i16, i16* %89, align 2
  %91 = icmp eq i16 %87, %90
  %92 = add nuw nsw i64 %88, 1
  br i1 %91, label %108, label %84

93:                                               ; preds = %84, %79
  %94 = icmp ult i64 %80, %13
  br i1 %94, label %95, label %108

95:                                               ; preds = %93
  %96 = load %struct.ssl_st*, %struct.ssl_st** %8, align 8
  %97 = call zeroext i16 @_ZN4bssl20ssl_protocol_versionEPK6ssl_st(%struct.ssl_st* %96) #11
  %98 = icmp ugt i16 %97, 771
  br i1 %98, label %99, label %108

99:                                               ; preds = %95
  %100 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 46
  %101 = load i32, i32* %100, align 8
  %102 = or i32 %101, 16777216
  store i32 %102, i32* %100, align 8
  %103 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %11, i64 0, i32 66, i32 1, i32 0
  %104 = load %"struct.bssl::CertCompressionAlg"*, %"struct.bssl::CertCompressionAlg"** %103, align 8
  %105 = getelementptr inbounds %"struct.bssl::CertCompressionAlg", %"struct.bssl::CertCompressionAlg"* %104, i64 %80, i32 2
  %106 = load i16, i16* %105, align 8
  %107 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 30
  store i16 %106, i16* %107, align 8
  br label %108

108:                                              ; preds = %86, %52, %37, %99, %95, %93
  %109 = phi i8* [ %39, %99 ], [ %39, %95 ], [ %39, %93 ], [ null, %37 ], [ %39, %52 ], [ %39, %86 ]
  %110 = phi i1 [ true, %99 ], [ true, %95 ], [ true, %93 ], [ false, %37 ], [ false, %52 ], [ false, %86 ]
  call void @OPENSSL_free(i8* %109) #11
  br label %111

111:                                              ; preds = %21, %7, %18, %24, %108
  %112 = phi i1 [ %110, %108 ], [ false, %24 ], [ false, %18 ], [ false, %7 ], [ false, %21 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #11
  br label %113

113:                                              ; preds = %3, %111
  %114 = phi i1 [ %112, %111 ], [ true, %3 ]
  ret i1 %114
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZN4bsslL32cert_compression_add_serverhelloEPNS_13SSL_HANDSHAKEEP6cbb_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture readnone, %struct.cbb_st* nocapture readnone) #7 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZN4bsslL40ext_delegated_credential_add_clienthelloEPNS_13SSL_HANDSHAKEEP6cbb_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture readnone, %struct.cbb_st* nocapture readnone) #7 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL42ext_delegated_credential_parse_clienthelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture, i8* nocapture readnone, %struct.cbs_st*) #0 {
  %4 = alloca %struct.cbs_st, align 8
  %5 = icmp eq %struct.cbs_st* %2, null
  br i1 %5, label %31, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %8 = load %struct.ssl_st*, %struct.ssl_st** %7, align 8
  %9 = tail call zeroext i16 @_ZN4bssl20ssl_protocol_versionEPK6ssl_st(%struct.ssl_st* %8) #11
  %10 = icmp ult i16 %9, 772
  br i1 %10, label %31, label %11

11:                                               ; preds = %6
  %12 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #11
  %13 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = call i32 @CBS_get_u16_length_prefixed(%struct.cbs_st* nonnull %2, %struct.cbs_st* nonnull %4) #11
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %29, label %16

16:                                               ; preds = %11
  %17 = call i64 @CBS_len(%struct.cbs_st* nonnull %4) #11
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %29, label %19

19:                                               ; preds = %16
  %20 = call i64 @CBS_len(%struct.cbs_st* nonnull %2) #11
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %22, label %29

22:                                               ; preds = %19
  %23 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 28
  %24 = call fastcc zeroext i1 @_ZN4bsslL15parse_u16_arrayEPK6cbs_stPNS_5ArrayItEE(%struct.cbs_st* nonnull %4, %"class.bssl::Array.56"* %23)
  br i1 %24, label %25, label %29

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 46
  %27 = load i32, i32* %26, align 8
  %28 = or i32 %27, 1024
  store i32 %28, i32* %26, align 8
  br label %29

29:                                               ; preds = %16, %22, %11, %19, %25
  %30 = phi i1 [ true, %25 ], [ false, %19 ], [ false, %11 ], [ false, %22 ], [ false, %16 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #11
  br label %31

31:                                               ; preds = %3, %6, %29
  %32 = phi i1 [ %30, %29 ], [ true, %6 ], [ true, %3 ]
  ret i1 %32
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL24ext_alps_add_clienthelloEPNS_13SSL_HANDSHAKEEP6cbb_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly, %struct.cbb_st*) #0 {
  %3 = alloca %struct.cbb_st, align 8
  %4 = alloca %struct.cbb_st, align 8
  %5 = alloca %struct.cbb_st, align 8
  %6 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %7 = load %struct.ssl_st*, %struct.ssl_st** %6, align 8
  %8 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 6
  %9 = load i16, i16* %8, align 2
  %10 = icmp ult i16 %9, 772
  br i1 %10, label %67, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 1
  %13 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %12, align 8
  %14 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %13, i64 0, i32 16, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %67, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %13, i64 0, i32 17, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %67, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %7, i64 0, i32 8
  %23 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %22, align 8
  %24 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %23, i64 0, i32 23
  %25 = load i16, i16* %24, align 1
  %26 = and i16 %25, 32
  %27 = icmp eq i16 %26, 0
  br i1 %27, label %28, label %67

28:                                               ; preds = %21
  %29 = bitcast %struct.cbb_st* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %29) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 32, i1 false)
  %30 = bitcast %struct.cbb_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 32, i1 false)
  %31 = bitcast %struct.cbb_st* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %31) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 32, i1 false)
  %32 = tail call i32 @CBB_add_u16(%struct.cbb_st* %1, i16 zeroext 17513) #11
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %65, label %34

34:                                               ; preds = %28
  %35 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* %1, %struct.cbb_st* nonnull %3) #11
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %65, label %37

37:                                               ; preds = %34
  %38 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* nonnull %3, %struct.cbb_st* nonnull %4) #11
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %65, label %40

40:                                               ; preds = %37
  %41 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %12, align 8
  %42 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %41, i64 0, i32 17, i32 1, i32 0
  %43 = load %"struct.bssl::ALPSConfig"*, %"struct.bssl::ALPSConfig"** %42, align 8
  %44 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %41, i64 0, i32 17, i32 0
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds %"struct.bssl::ALPSConfig", %"struct.bssl::ALPSConfig"* %43, i64 %45
  %47 = icmp eq i64 %45, 0
  br i1 %47, label %62, label %50

48:                                               ; preds = %54
  %49 = icmp eq %"struct.bssl::ALPSConfig"* %61, %46
  br i1 %49, label %62, label %50

50:                                               ; preds = %40, %48
  %51 = phi %"struct.bssl::ALPSConfig"* [ %61, %48 ], [ %43, %40 ]
  %52 = call i32 @CBB_add_u8_length_prefixed(%struct.cbb_st* nonnull %4, %struct.cbb_st* nonnull %5) #11
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %65, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"struct.bssl::ALPSConfig", %"struct.bssl::ALPSConfig"* %51, i64 0, i32 0, i32 0
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds %"struct.bssl::ALPSConfig", %"struct.bssl::ALPSConfig"* %51, i64 0, i32 0, i32 1
  %58 = load i64, i64* %57, align 8
  %59 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %5, i8* %56, i64 %58) #11
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"struct.bssl::ALPSConfig", %"struct.bssl::ALPSConfig"* %51, i64 1
  br i1 %60, label %65, label %48

62:                                               ; preds = %48, %40
  %63 = call i32 @CBB_flush(%struct.cbb_st* %1) #11
  %64 = icmp ne i32 %63, 0
  br label %65

65:                                               ; preds = %54, %50, %28, %34, %37, %62
  %66 = phi i1 [ %64, %62 ], [ false, %37 ], [ false, %34 ], [ false, %28 ], [ false, %50 ], [ false, %54 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %31) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %29) #11
  br label %67

67:                                               ; preds = %2, %11, %17, %21, %65
  %68 = phi i1 [ %66, %65 ], [ true, %21 ], [ true, %17 ], [ true, %11 ], [ true, %2 ]
  ret i1 %68
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL26ext_alps_parse_serverhelloEPNS_13SSL_HANDSHAKEEPhP6cbs_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly, i8* nocapture, %struct.cbs_st* readonly) #0 {
  %4 = icmp eq %struct.cbs_st* %2, null
  br i1 %4, label %34, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %7 = load %struct.ssl_st*, %struct.ssl_st** %6, align 8
  %8 = tail call zeroext i16 @_ZN4bssl20ssl_protocol_versionEPK6ssl_st(%struct.ssl_st* %7) #11
  %9 = icmp ult i16 %8, 772
  br i1 %9, label %10, label %11

10:                                               ; preds = %5
  store i8 110, i8* %1, align 1
  tail call void @ERR_put_error(i32 16, i32 0, i32 222, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 2999) #11
  br label %34

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 40, i32 0, i32 0, i32 0
  %13 = load %struct.ssl_session_st*, %struct.ssl_session_st** %12, align 8
  %14 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %13, i64 0, i32 35
  %15 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %2, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %2, i64 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %14, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  tail call void @OPENSSL_free(i8* %20) #11
  %21 = bitcast %"class.bssl::Array"* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #11
  %22 = icmp eq i64 %18, 0
  br i1 %22, label %29, label %23

23:                                               ; preds = %11
  %24 = tail call i8* @OPENSSL_malloc(i64 %18) #11
  store i8* %24, i8** %19, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %13, i64 0, i32 35, i32 1
  store i64 %18, i64* %27, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %24, i8* align 1 %16, i64 %18, i1 false) #11
  br label %29

28:                                               ; preds = %23
  tail call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.4, i64 0, i64 0), i32 324) #11
  store i8 80, i8* %1, align 1
  br label %34

29:                                               ; preds = %26, %11
  %30 = load %struct.ssl_session_st*, %struct.ssl_session_st** %12, align 8
  %31 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %30, i64 0, i32 36
  %32 = load i8, i8* %31, align 8
  %33 = or i8 %32, 64
  store i8 %33, i8* %31, align 8
  br label %34

34:                                               ; preds = %3, %29, %28, %10
  %35 = phi i1 [ false, %10 ], [ false, %28 ], [ true, %29 ], [ true, %3 ]
  ret i1 %35
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL24ext_alps_add_serverhelloEPNS_13SSL_HANDSHAKEEP6cbb_st(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly, %struct.cbb_st*) #0 {
  %3 = alloca %struct.cbb_st, align 8
  %4 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %5 = load %struct.ssl_st*, %struct.ssl_st** %4, align 8
  %6 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 40, i32 0, i32 0, i32 0
  %7 = load %struct.ssl_session_st*, %struct.ssl_session_st** %6, align 8
  %8 = icmp eq %struct.ssl_session_st* %7, null
  br i1 %8, label %41, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %7, i64 0, i32 36
  %11 = load i8, i8* %10, align 8
  %12 = and i8 %11, 64
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %41, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %5, i64 0, i32 8
  %16 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %15, align 8
  %17 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %16, i64 0, i32 23
  %18 = load i16, i16* %17, align 1
  %19 = and i16 %18, 4096
  %20 = icmp eq i16 %19, 0
  br i1 %20, label %21, label %41

21:                                               ; preds = %14
  %22 = bitcast %struct.cbb_st* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %22) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 32, i1 false)
  %23 = tail call i32 @CBB_add_u16(%struct.cbb_st* %1, i16 zeroext 17513) #11
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %39, label %25

25:                                               ; preds = %21
  %26 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* %1, %struct.cbb_st* nonnull %3) #11
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %39, label %28

28:                                               ; preds = %25
  %29 = load %struct.ssl_session_st*, %struct.ssl_session_st** %6, align 8
  %30 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %29, i64 0, i32 34, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %29, i64 0, i32 34, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %3, i8* %31, i64 %33) #11
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %39, label %36

36:                                               ; preds = %28
  %37 = call i32 @CBB_flush(%struct.cbb_st* %1) #11
  %38 = icmp ne i32 %37, 0
  br label %39

39:                                               ; preds = %36, %21, %25, %28
  %40 = phi i1 [ false, %28 ], [ false, %25 ], [ false, %21 ], [ %38, %36 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %22) #11
  br label %41

41:                                               ; preds = %2, %9, %14, %39
  %42 = phi i1 [ %40, %39 ], [ true, %14 ], [ true, %9 ], [ true, %2 ]
  ret i1 %42
}

declare i32 @EVP_has_aes_hardware() local_unnamed_addr #2

declare i32 @RAND_bytes(i8*, i64) local_unnamed_addr #2

declare void @X25519_keypair(i8*, i8*) local_unnamed_addr #2

declare i8* @CBB_data(%struct.cbb_st*) local_unnamed_addr #2

declare i32 @CBB_add_u8_length_prefixed(%struct.cbb_st*, %struct.cbb_st*) local_unnamed_addr #2

declare i32 @CRYPTO_memcmp(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN4bsslL26ext_ec_point_add_extensionEPNS_13SSL_HANDSHAKEEP6cbb_st(%struct.cbb_st*) unnamed_addr #0 {
  %2 = alloca %struct.cbb_st, align 8
  %3 = alloca %struct.cbb_st, align 8
  %4 = bitcast %struct.cbb_st* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 32, i1 false)
  %5 = bitcast %struct.cbb_st* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 32, i1 false)
  %6 = tail call i32 @CBB_add_u16(%struct.cbb_st* %0, i16 zeroext 11) #11
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %20, label %8

8:                                                ; preds = %1
  %9 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* %0, %struct.cbb_st* nonnull %2) #11
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %20, label %11

11:                                               ; preds = %8
  %12 = call i32 @CBB_add_u8_length_prefixed(%struct.cbb_st* nonnull %2, %struct.cbb_st* nonnull %3) #11
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %11
  %15 = call i32 @CBB_add_u8(%struct.cbb_st* nonnull %3, i8 zeroext 0) #11
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %14
  %18 = call i32 @CBB_flush(%struct.cbb_st* %0) #11
  %19 = icmp ne i32 %18, 0
  br label %20

20:                                               ; preds = %17, %1, %8, %11, %14
  %21 = phi i1 [ false, %14 ], [ false, %11 ], [ false, %8 ], [ false, %1 ], [ %19, %17 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #11
  ret i1 %21
}

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #4

declare zeroext i16 @_ZN4bssl28ssl_session_protocol_versionEPK14ssl_session_st(%struct.ssl_session_st*) local_unnamed_addr #2

declare zeroext i1 @_ZN4bssl32ssl_cipher_uses_certificate_authEPK13ssl_cipher_st(%struct.ssl_cipher_st*) local_unnamed_addr #2

declare i32 @CBS_get_u8(%struct.cbs_st*, i8*) local_unnamed_addr #2

declare void @OPENSSL_free(i8*) local_unnamed_addr #2

declare %struct.crypto_buffer_st* @CRYPTO_BUFFER_new_from_CBS(%struct.cbs_st*, %struct.crypto_buffer_pool_st*) local_unnamed_addr #2

declare void @CRYPTO_BUFFER_free(%struct.crypto_buffer_st*) local_unnamed_addr #2

declare i8* @CRYPTO_BUFFER_data(%struct.crypto_buffer_st*) local_unnamed_addr #2

declare i64 @CRYPTO_BUFFER_len(%struct.crypto_buffer_st*) local_unnamed_addr #2

declare %struct.stack_st_SRTP_PROTECTION_PROFILE* @SSL_get_srtp_profiles(%struct.ssl_st*) local_unnamed_addr #2

declare i64 @sk_num(%struct.stack_st*) local_unnamed_addr #2

declare i8* @sk_value(%struct.stack_st*, i64) local_unnamed_addr #2

declare %"class.bssl::SSLKeyShare"* @_ZN4bssl11SSLKeyShare6CreateEt(i16 zeroext) local_unnamed_addr #2

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

declare zeroext i1 @_ZN4bssl26ssl_add_supported_versionsEPNS_13SSL_HANDSHAKEEP6cbb_st(%"struct.bssl::SSL_HANDSHAKE"*, %struct.cbb_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN4bsslL46ext_quic_transport_params_add_clienthello_implEPNS_13SSL_HANDSHAKEEP6cbb_stb(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly, %struct.cbb_st*, i1 zeroext) unnamed_addr #0 {
  %4 = alloca %struct.cbb_st, align 8
  %5 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 1
  %6 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %5, align 8
  %7 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %6, i64 0, i32 18, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  %10 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %11 = load %struct.ssl_st*, %struct.ssl_st** %10, align 8
  %12 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %11, i64 0, i32 24
  %13 = load %struct.ssl_quic_method_st*, %struct.ssl_quic_method_st** %12, align 8
  %14 = icmp eq %struct.ssl_quic_method_st* %13, null
  br i1 %9, label %15, label %16

15:                                               ; preds = %3
  br i1 %14, label %48, label %17

16:                                               ; preds = %3
  br i1 %14, label %17, label %18

17:                                               ; preds = %15, %16
  tail call void @ERR_put_error(i32 16, i32 0, i32 305, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 2640) #11
  br label %48

18:                                               ; preds = %16
  %19 = zext i1 %2 to i32
  %20 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %6, i64 0, i32 23
  %21 = load i16, i16* %20, align 1
  %22 = and i16 %21, 512
  %23 = lshr exact i16 %22, 9
  %24 = zext i16 %23 to i32
  %25 = icmp eq i32 %19, %24
  br i1 %25, label %26, label %48

26:                                               ; preds = %18
  %27 = icmp eq i16 %22, 0
  %28 = select i1 %27, i16 57, i16 -91
  %29 = bitcast %struct.cbb_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %29) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 32, i1 false)
  %30 = tail call i32 @CBB_add_u16(%struct.cbb_st* %1, i16 zeroext %28) #11
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %46, label %32

32:                                               ; preds = %26
  %33 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* %1, %struct.cbb_st* nonnull %4) #11
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %46, label %35

35:                                               ; preds = %32
  %36 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %5, align 8
  %37 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %36, i64 0, i32 18, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %36, i64 0, i32 18, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %4, i8* %38, i64 %40) #11
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %46, label %43

43:                                               ; preds = %35
  %44 = call i32 @CBB_flush(%struct.cbb_st* %1) #11
  %45 = icmp ne i32 %44, 0
  br label %46

46:                                               ; preds = %43, %26, %32, %35
  %47 = phi i1 [ false, %35 ], [ false, %32 ], [ false, %26 ], [ %45, %43 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %29) #11
  br label %48

48:                                               ; preds = %18, %15, %46, %17
  %49 = phi i1 [ false, %17 ], [ %47, %46 ], [ true, %15 ], [ true, %18 ]
  ret i1 %49
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN4bsslL48ext_quic_transport_params_parse_clienthello_implEPNS_13SSL_HANDSHAKEEPhP6cbs_stb(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly, i8* nocapture, %struct.cbs_st* readonly, i1 zeroext) unnamed_addr #0 {
  %5 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %6 = load %struct.ssl_st*, %struct.ssl_st** %5, align 8
  %7 = icmp eq %struct.cbs_st* %2, null
  %8 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %6, i64 0, i32 24
  %9 = load %struct.ssl_quic_method_st*, %struct.ssl_quic_method_st** %8, align 8
  %10 = icmp ne %struct.ssl_quic_method_st* %9, null
  br i1 %7, label %11, label %30

11:                                               ; preds = %4
  br i1 %10, label %19, label %12

12:                                               ; preds = %11
  %13 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 1
  %14 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %13, align 8
  %15 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %14, i64 0, i32 18, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %61, label %18

18:                                               ; preds = %12
  tail call void @ERR_put_error(i32 16, i32 0, i32 305, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 2724) #11
  store i8 80, i8* %1, align 1
  br label %61

19:                                               ; preds = %11
  %20 = zext i1 %3 to i32
  %21 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 1
  %22 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %21, align 8
  %23 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %22, i64 0, i32 23
  %24 = load i16, i16* %23, align 1
  %25 = lshr i16 %24, 9
  %26 = and i16 %25, 1
  %27 = zext i16 %26 to i32
  %28 = icmp eq i32 %20, %27
  br i1 %28, label %29, label %61

29:                                               ; preds = %19
  store i8 109, i8* %1, align 1
  br label %61

30:                                               ; preds = %4
  br i1 %10, label %33, label %31

31:                                               ; preds = %30
  br i1 %3, label %61, label %32

32:                                               ; preds = %31
  store i8 110, i8* %1, align 1
  br label %61

33:                                               ; preds = %30
  %34 = zext i1 %3 to i32
  %35 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 1
  %36 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %35, align 8
  %37 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %36, i64 0, i32 23
  %38 = load i16, i16* %37, align 1
  %39 = lshr i16 %38, 9
  %40 = and i16 %39, 1
  %41 = zext i16 %40 to i32
  %42 = icmp eq i32 %34, %41
  br i1 %42, label %43, label %61

43:                                               ; preds = %33
  %44 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %6, i64 0, i32 8
  %45 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %44, align 8
  %46 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %45, i64 0, i32 52
  %47 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %2, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %2, i64 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %46, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  tail call void @OPENSSL_free(i8* %52) #11
  %53 = bitcast %"class.bssl::Array"* %46 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 16, i1 false) #11
  %54 = icmp eq i64 %50, 0
  br i1 %54, label %61, label %55

55:                                               ; preds = %43
  %56 = tail call i8* @OPENSSL_malloc(i64 %50) #11
  store i8* %56, i8** %51, align 8
  %57 = icmp eq i8* %56, null
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  tail call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.4, i64 0, i64 0), i32 324) #11
  br label %61

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %45, i64 0, i32 52, i32 1
  store i64 %50, i64* %60, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %56, i8* align 1 %48, i64 %50, i1 false) #11
  br label %61

61:                                               ; preds = %59, %58, %43, %33, %31, %19, %12, %32, %29, %18
  %62 = phi i1 [ false, %32 ], [ false, %29 ], [ false, %18 ], [ true, %12 ], [ true, %19 ], [ true, %31 ], [ true, %33 ], [ false, %58 ], [ true, %59 ], [ true, %43 ]
  ret i1 %62
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN4bsslL46ext_quic_transport_params_add_serverhello_implEPNS_13SSL_HANDSHAKEEP6cbb_stb(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly, %struct.cbb_st*, i1 zeroext) unnamed_addr #0 {
  %4 = alloca %struct.cbb_st, align 8
  %5 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %6 = load %struct.ssl_st*, %struct.ssl_st** %5, align 8
  %7 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %6, i64 0, i32 24
  %8 = load %struct.ssl_quic_method_st*, %struct.ssl_quic_method_st** %7, align 8
  %9 = icmp ne %struct.ssl_quic_method_st* %8, null
  %10 = xor i1 %2, true
  %11 = or i1 %9, %10
  br i1 %11, label %12, label %49

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 1
  %14 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %13, align 8
  %15 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %14, i64 0, i32 18, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %12
  tail call void @ERR_put_error(i32 16, i32 0, i32 305, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 2777) #11
  br label %49

19:                                               ; preds = %12
  %20 = zext i1 %2 to i32
  %21 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %14, i64 0, i32 23
  %22 = load i16, i16* %21, align 1
  %23 = and i16 %22, 512
  %24 = lshr exact i16 %23, 9
  %25 = zext i16 %24 to i32
  %26 = icmp eq i32 %20, %25
  br i1 %26, label %27, label %49

27:                                               ; preds = %19
  %28 = icmp eq i16 %23, 0
  %29 = select i1 %28, i16 57, i16 -91
  %30 = bitcast %struct.cbb_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 32, i1 false)
  %31 = tail call i32 @CBB_add_u16(%struct.cbb_st* %1, i16 zeroext %29) #11
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %47, label %33

33:                                               ; preds = %27
  %34 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* %1, %struct.cbb_st* nonnull %4) #11
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %47, label %36

36:                                               ; preds = %33
  %37 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %13, align 8
  %38 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %37, i64 0, i32 18, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %37, i64 0, i32 18, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %4, i8* %39, i64 %41) #11
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %47, label %44

44:                                               ; preds = %36
  %45 = call i32 @CBB_flush(%struct.cbb_st* %1) #11
  %46 = icmp ne i32 %45, 0
  br label %47

47:                                               ; preds = %44, %27, %33, %36
  %48 = phi i1 [ false, %36 ], [ false, %33 ], [ false, %27 ], [ %46, %44 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #11
  br label %49

49:                                               ; preds = %19, %3, %47, %18
  %50 = phi i1 [ false, %18 ], [ %48, %47 ], [ true, %3 ], [ true, %19 ]
  ret i1 %50
}

declare i64 @EVP_MD_size(%struct.env_md_st*) local_unnamed_addr #2

declare %struct.env_md_st* @_ZN4bssl22ssl_session_get_digestEPK14ssl_session_st(%struct.ssl_session_st*) local_unnamed_addr #2

declare void @_ZN4bssl20ssl_get_current_timeEPK6ssl_stPNS_15OPENSSL_timevalE(%struct.ssl_st*, %"struct.bssl::OPENSSL_timeval"*) local_unnamed_addr #2

declare i32 @CBB_add_u32(%struct.cbb_st*, i32) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define internal fastcc %"struct.bssl::tls_extension"* @_ZN4bsslL18tls_extension_findEPjt(i32* nocapture, i16 zeroext) unnamed_addr #10 {
  switch i16 %1, label %30 [
    i16 0, label %27
    i16 -502, label %3
    i16 -9719, label %4
    i16 23, label %5
    i16 -255, label %6
    i16 10, label %7
    i16 11, label %8
    i16 35, label %9
    i16 16, label %10
    i16 5, label %11
    i16 13, label %12
    i16 13172, label %13
    i16 18, label %14
    i16 30032, label %15
    i16 14, label %16
    i16 51, label %17
    i16 45, label %18
    i16 42, label %19
    i16 43, label %20
    i16 44, label %21
    i16 57, label %22
    i16 -91, label %23
    i16 27, label %24
    i16 34, label %25
    i16 17513, label %26
  ]

3:                                                ; preds = %2
  br label %27

4:                                                ; preds = %2
  br label %27

5:                                                ; preds = %2
  br label %27

6:                                                ; preds = %2
  br label %27

7:                                                ; preds = %2
  br label %27

8:                                                ; preds = %2
  br label %27

9:                                                ; preds = %2
  br label %27

10:                                               ; preds = %2
  br label %27

11:                                               ; preds = %2
  br label %27

12:                                               ; preds = %2
  br label %27

13:                                               ; preds = %2
  br label %27

14:                                               ; preds = %2
  br label %27

15:                                               ; preds = %2
  br label %27

16:                                               ; preds = %2
  br label %27

17:                                               ; preds = %2
  br label %27

18:                                               ; preds = %2
  br label %27

19:                                               ; preds = %2
  br label %27

20:                                               ; preds = %2
  br label %27

21:                                               ; preds = %2
  br label %27

22:                                               ; preds = %2
  br label %27

23:                                               ; preds = %2
  br label %27

24:                                               ; preds = %2
  br label %27

25:                                               ; preds = %2
  br label %27

26:                                               ; preds = %2
  br label %27

27:                                               ; preds = %2, %26, %25, %24, %23, %22, %21, %20, %19, %18, %17, %16, %15, %14, %13, %12, %11, %10, %9, %8, %7, %6, %5, %4, %3
  %28 = phi i32 [ 0, %2 ], [ 1, %3 ], [ 2, %4 ], [ 3, %5 ], [ 4, %6 ], [ 5, %7 ], [ 6, %8 ], [ 7, %9 ], [ 8, %10 ], [ 9, %11 ], [ 10, %12 ], [ 11, %13 ], [ 12, %14 ], [ 13, %15 ], [ 14, %16 ], [ 15, %17 ], [ 16, %18 ], [ 17, %19 ], [ 18, %20 ], [ 19, %21 ], [ 20, %22 ], [ 21, %23 ], [ 22, %24 ], [ 23, %25 ], [ 24, %26 ]
  %29 = phi %"struct.bssl::tls_extension"* [ getelementptr inbounds ([25 x %"struct.bssl::tls_extension"], [25 x %"struct.bssl::tls_extension"]* @_ZN4bsslL11kExtensionsE, i64 0, i64 0), %2 ], [ getelementptr inbounds ([25 x %"struct.bssl::tls_extension"], [25 x %"struct.bssl::tls_extension"]* @_ZN4bsslL11kExtensionsE, i64 0, i64 1), %3 ], [ getelementptr inbounds ([25 x %"struct.bssl::tls_extension"], [25 x %"struct.bssl::tls_extension"]* @_ZN4bsslL11kExtensionsE, i64 0, i64 2), %4 ], [ getelementptr inbounds ([25 x %"struct.bssl::tls_extension"], [25 x %"struct.bssl::tls_extension"]* @_ZN4bsslL11kExtensionsE, i64 0, i64 3), %5 ], [ getelementptr inbounds ([25 x %"struct.bssl::tls_extension"], [25 x %"struct.bssl::tls_extension"]* @_ZN4bsslL11kExtensionsE, i64 0, i64 4), %6 ], [ getelementptr inbounds ([25 x %"struct.bssl::tls_extension"], [25 x %"struct.bssl::tls_extension"]* @_ZN4bsslL11kExtensionsE, i64 0, i64 5), %7 ], [ getelementptr inbounds ([25 x %"struct.bssl::tls_extension"], [25 x %"struct.bssl::tls_extension"]* @_ZN4bsslL11kExtensionsE, i64 0, i64 6), %8 ], [ getelementptr inbounds ([25 x %"struct.bssl::tls_extension"], [25 x %"struct.bssl::tls_extension"]* @_ZN4bsslL11kExtensionsE, i64 0, i64 7), %9 ], [ getelementptr inbounds ([25 x %"struct.bssl::tls_extension"], [25 x %"struct.bssl::tls_extension"]* @_ZN4bsslL11kExtensionsE, i64 0, i64 8), %10 ], [ getelementptr inbounds ([25 x %"struct.bssl::tls_extension"], [25 x %"struct.bssl::tls_extension"]* @_ZN4bsslL11kExtensionsE, i64 0, i64 9), %11 ], [ getelementptr inbounds ([25 x %"struct.bssl::tls_extension"], [25 x %"struct.bssl::tls_extension"]* @_ZN4bsslL11kExtensionsE, i64 0, i64 10), %12 ], [ getelementptr inbounds ([25 x %"struct.bssl::tls_extension"], [25 x %"struct.bssl::tls_extension"]* @_ZN4bsslL11kExtensionsE, i64 0, i64 11), %13 ], [ getelementptr inbounds ([25 x %"struct.bssl::tls_extension"], [25 x %"struct.bssl::tls_extension"]* @_ZN4bsslL11kExtensionsE, i64 0, i64 12), %14 ], [ getelementptr inbounds ([25 x %"struct.bssl::tls_extension"], [25 x %"struct.bssl::tls_extension"]* @_ZN4bsslL11kExtensionsE, i64 0, i64 13), %15 ], [ getelementptr inbounds ([25 x %"struct.bssl::tls_extension"], [25 x %"struct.bssl::tls_extension"]* @_ZN4bsslL11kExtensionsE, i64 0, i64 14), %16 ], [ getelementptr inbounds ([25 x %"struct.bssl::tls_extension"], [25 x %"struct.bssl::tls_extension"]* @_ZN4bsslL11kExtensionsE, i64 0, i64 15), %17 ], [ getelementptr inbounds ([25 x %"struct.bssl::tls_extension"], [25 x %"struct.bssl::tls_extension"]* @_ZN4bsslL11kExtensionsE, i64 0, i64 16), %18 ], [ getelementptr inbounds ([25 x %"struct.bssl::tls_extension"], [25 x %"struct.bssl::tls_extension"]* @_ZN4bsslL11kExtensionsE, i64 0, i64 17), %19 ], [ getelementptr inbounds ([25 x %"struct.bssl::tls_extension"], [25 x %"struct.bssl::tls_extension"]* @_ZN4bsslL11kExtensionsE, i64 0, i64 18), %20 ], [ getelementptr inbounds ([25 x %"struct.bssl::tls_extension"], [25 x %"struct.bssl::tls_extension"]* @_ZN4bsslL11kExtensionsE, i64 0, i64 19), %21 ], [ getelementptr inbounds ([25 x %"struct.bssl::tls_extension"], [25 x %"struct.bssl::tls_extension"]* @_ZN4bsslL11kExtensionsE, i64 0, i64 20), %22 ], [ getelementptr inbounds ([25 x %"struct.bssl::tls_extension"], [25 x %"struct.bssl::tls_extension"]* @_ZN4bsslL11kExtensionsE, i64 0, i64 21), %23 ], [ getelementptr inbounds ([25 x %"struct.bssl::tls_extension"], [25 x %"struct.bssl::tls_extension"]* @_ZN4bsslL11kExtensionsE, i64 0, i64 22), %24 ], [ getelementptr inbounds ([25 x %"struct.bssl::tls_extension"], [25 x %"struct.bssl::tls_extension"]* @_ZN4bsslL11kExtensionsE, i64 0, i64 23), %25 ], [ getelementptr inbounds ([25 x %"struct.bssl::tls_extension"], [25 x %"struct.bssl::tls_extension"]* @_ZN4bsslL11kExtensionsE, i64 0, i64 24), %26 ]
  store i32 %28, i32* %0, align 4
  br label %30

30:                                               ; preds = %2, %27
  %31 = phi %"struct.bssl::tls_extension"* [ %29, %27 ], [ null, %2 ]
  ret %"struct.bssl::tls_extension"* %31
}

declare zeroext i1 @_ZN4bssl38ssl_client_cipher_list_contains_cipherEPK22ssl_early_callback_ctxt(%struct.ssl_early_callback_ctx*, i16 zeroext) local_unnamed_addr #2

declare i8* @OPENSSL_malloc(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZN4bsslL30decrypt_ticket_with_cipher_ctxEPNS_5ArrayIhEEP17evp_cipher_ctx_stP11hmac_ctx_stNS_4SpanIKhEE(%"class.bssl::Array"* nocapture, %struct.evp_cipher_ctx_st*, %struct.hmac_ctx_st*, i8*, i64) unnamed_addr #0 {
  %6 = alloca [64 x i8], align 16
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = tail call i32 @EVP_CIPHER_CTX_iv_length(%struct.evp_cipher_ctx_st* %1) #11
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds [64 x i8], [64 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %11) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -86, i64 64, i1 false)
  %12 = tail call i64 @HMAC_size(%struct.hmac_ctx_st* %2) #11
  %13 = add nuw nsw i64 %10, 16
  %14 = add nuw nsw i64 %10, 17
  %15 = add i64 %14, %12
  %16 = icmp ugt i64 %15, %4
  br i1 %16, label %78, label %17

17:                                               ; preds = %5
  %18 = sub i64 %4, %12
  %19 = icmp ugt i64 %12, %4
  br i1 %19, label %20, label %21

20:                                               ; preds = %17
  tail call void @abort() #13
  unreachable

21:                                               ; preds = %17
  %22 = getelementptr inbounds i8, i8* %3, i64 %18
  %23 = icmp ult i64 %18, %4
  %24 = select i1 %23, i64 %18, i64 %4
  %25 = tail call i32 @HMAC_Update(%struct.hmac_ctx_st* %2, i8* %3, i64 %24) #11
  %26 = call i32 @HMAC_Final(%struct.hmac_ctx_st* %2, i8* nonnull %11, i32* null) #11
  %27 = call i32 @CRYPTO_memcmp(i8* nonnull %11, i8* %22, i64 %12) #11
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %78

29:                                               ; preds = %21
  %30 = icmp ult i64 %24, %13
  br i1 %30, label %31, label %32

31:                                               ; preds = %29
  call void @abort() #13
  unreachable

32:                                               ; preds = %29
  %33 = getelementptr inbounds i8, i8* %3, i64 %13
  %34 = sub i64 %24, %13
  %35 = icmp ugt i64 %34, 2147483646
  br i1 %35, label %74, label %36

36:                                               ; preds = %32
  call void @OPENSSL_free(i8* null) #11
  %37 = icmp eq i64 %34, 0
  br i1 %37, label %43, label %38

38:                                               ; preds = %36
  %39 = call i8* @OPENSSL_malloc(i64 %34) #11
  %40 = ptrtoint i8* %39 to i64
  %41 = icmp eq i8* %39, null
  br i1 %41, label %42, label %43

42:                                               ; preds = %38
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.4, i64 0, i64 0), i32 324) #11
  br label %74

43:                                               ; preds = %36, %38
  %44 = phi i64 [ %40, %38 ], [ 0, %36 ]
  %45 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %45) #11
  store i32 -1431655766, i32* %7, align 4
  %46 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %46) #11
  store i32 -1431655766, i32* %8, align 4
  %47 = inttoptr i64 %44 to i8*
  %48 = trunc i64 %34 to i32
  %49 = call i32 @EVP_DecryptUpdate(%struct.evp_cipher_ctx_st* %1, i8* %47, i32* nonnull %7, i8* %33, i32 %48) #11
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %57, label %51

51:                                               ; preds = %43
  %52 = load i32, i32* %7, align 4
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds i8, i8* %47, i64 %53
  %55 = call i32 @EVP_DecryptFinal_ex(%struct.evp_cipher_ctx_st* %1, i8* %54, i32* nonnull %8) #11
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %51, %43
  call void @ERR_clear_error() #11
  br label %71

58:                                               ; preds = %51
  %59 = load i32, i32* %7, align 4
  %60 = sext i32 %59 to i64
  %61 = load i32, i32* %8, align 4
  %62 = sext i32 %61 to i64
  %63 = add nsw i64 %62, %60
  %64 = icmp ult i64 %34, %63
  br i1 %64, label %65, label %66

65:                                               ; preds = %58
  call void @abort() #13
  unreachable

66:                                               ; preds = %58
  %67 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %0, i64 0, i32 0
  %68 = load i8*, i8** %67, align 8
  call void @OPENSSL_free(i8* %68) #11
  %69 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %0, i64 0, i32 1
  %70 = bitcast %"class.bssl::Array"* %0 to i64*
  store i64 %44, i64* %70, align 8
  store i64 %63, i64* %69, align 8
  br label %71

71:                                               ; preds = %66, %57
  %72 = phi i64 [ %44, %57 ], [ 0, %66 ]
  %73 = phi i32 [ 2, %57 ], [ 0, %66 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %46) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %45) #11
  br label %74

74:                                               ; preds = %42, %32, %71
  %75 = phi i64 [ 0, %32 ], [ %72, %71 ], [ %40, %42 ]
  %76 = phi i32 [ 2, %32 ], [ %73, %71 ], [ 3, %42 ]
  %77 = inttoptr i64 %75 to i8*
  call void @OPENSSL_free(i8* %77) #11
  br label %78

78:                                               ; preds = %74, %21, %5
  %79 = phi i32 [ 2, %5 ], [ %76, %74 ], [ 2, %21 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %11) #11
  ret i32 %79
}

declare void @EVP_CIPHER_CTX_init(%struct.evp_cipher_ctx_st*) local_unnamed_addr #2

declare void @HMAC_CTX_init(%struct.hmac_ctx_st*) local_unnamed_addr #2

declare i32 @EVP_CIPHER_CTX_iv_length(%struct.evp_cipher_ctx_st*) local_unnamed_addr #2

declare i64 @HMAC_size(%struct.hmac_ctx_st*) local_unnamed_addr #2

declare i32 @HMAC_Update(%struct.hmac_ctx_st*, i8*, i64) local_unnamed_addr #2

declare i32 @HMAC_Final(%struct.hmac_ctx_st*, i8*, i32*) local_unnamed_addr #2

declare i32 @EVP_DecryptUpdate(%struct.evp_cipher_ctx_st*, i8*, i32*, i8*, i32) local_unnamed_addr #2

declare i32 @EVP_DecryptFinal_ex(%struct.evp_cipher_ctx_st*, i8*, i32*) local_unnamed_addr #2

declare void @HMAC_CTX_cleanup(%struct.hmac_ctx_st*) local_unnamed_addr #2

declare i32 @EVP_CIPHER_CTX_cleanup(%struct.evp_cipher_ctx_st*) local_unnamed_addr #2

declare i32 @_ZN4bssl36ssl_ctx_rotate_ticket_encryption_keyEP10ssl_ctx_st(%struct.ssl_ctx_st*) local_unnamed_addr #2

declare %struct.evp_cipher_st* @EVP_aes_128_cbc() local_unnamed_addr #2

declare i32 @EVP_CIPHER_iv_length(%struct.evp_cipher_st*) local_unnamed_addr #2

declare i32 @HMAC_Init_ex(%struct.hmac_ctx_st*, i8*, i64, %struct.env_md_st*, %struct.engine_st*) local_unnamed_addr #2

declare %struct.env_md_st* @EVP_sha256() local_unnamed_addr #2

declare i32 @EVP_DecryptInit_ex(%struct.evp_cipher_ctx_st*, %struct.evp_cipher_st*, %struct.engine_st*, i8*, i8*) local_unnamed_addr #2

declare void @CRYPTO_MUTEX_lock_read(%union.crypto_mutex_st*) local_unnamed_addr #2

declare void @CRYPTO_MUTEX_unlock_read(%union.crypto_mutex_st*) local_unnamed_addr #2

declare void @EVP_PKEY_free(%struct.evp_pkey_st*) local_unnamed_addr #2

declare void @EC_KEY_free(%struct.ec_key_st*) local_unnamed_addr #2

declare void @SSL_SESSION_free(%struct.ssl_session_st*) local_unnamed_addr #2

declare void @EC_GROUP_free(%struct.ec_group_st*) local_unnamed_addr #2

declare void @ECDSA_SIG_free(%struct.ecdsa_sig_st*) local_unnamed_addr #2

declare void @BN_free(%struct.bignum_st*) local_unnamed_addr #2

declare void @EC_POINT_free(%struct.ec_point_st*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { nounwind readonly }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
