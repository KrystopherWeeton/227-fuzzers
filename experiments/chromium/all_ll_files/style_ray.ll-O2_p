; ModuleID = '../../third_party/blink/renderer/core/style/style_ray.cc'
source_filename = "../../third_party/blink/renderer/core/style/style_ray.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::StyleRay" = type <{ %"class.blink::BasicShape.base", float, i32, i8, [3 x i8] }>
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted" }>
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted", [4 x i8] }>
%"class.blink::Path" = type opaque
%"class.blink::FloatRect" = type opaque

$_ZN5blink10BasicShapeD2Ev = comdat any

$_ZN5blink8StyleRayD0Ev = comdat any

$_ZNK5blink10BasicShape11GetWindRuleEv = comdat any

$_ZNK5blink8StyleRay7GetTypeEv = comdat any

@_ZTVN5blink8StyleRayE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::BasicShape"*)* @_ZN5blink10BasicShapeD2Ev to i8*), i8* bitcast (void (%"class.blink::StyleRay"*)* @_ZN5blink8StyleRayD0Ev to i8*), i8* bitcast (void (%"class.blink::StyleRay"*, %"class.blink::Path"*, %"class.blink::FloatRect"*, float)* @_ZN5blink8StyleRay7GetPathERNS_4PathERKNS_9FloatRectEf to i8*), i8* bitcast (i32 (%"class.blink::BasicShape"*)* @_ZNK5blink10BasicShape11GetWindRuleEv to i8*), i8* bitcast (i1 (%"class.blink::StyleRay"*, %"class.blink::BasicShape"*)* @_ZNK5blink8StyleRayeqERKNS_10BasicShapeE to i8*), i8* bitcast (i32 (%"class.blink::StyleRay"*)* @_ZNK5blink8StyleRay7GetTypeEv to i8*)] }, align 8

@_ZN5blink8StyleRayC1EfNS0_7RaySizeEb = hidden unnamed_addr alias void (%"class.blink::StyleRay"*, float, i32, i1), void (%"class.blink::StyleRay"*, float, i32, i1)* @_ZN5blink8StyleRayC2EfNS0_7RaySizeEb

; Function Attrs: nofree nounwind ssp uwtable
define hidden noalias %"class.blink::StyleRay"* @_ZN5blink8StyleRay6CreateEfNS0_7RaySizeEb(float, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = tail call noalias i8* @malloc(i64 24) #6
  %5 = bitcast i8* %4 to %"class.blink::StyleRay"*
  %6 = zext i1 %2 to i8
  %7 = getelementptr inbounds i8, i8* %4, i64 8
  %8 = bitcast i8* %7 to i32*
  store i32 1, i32* %8, align 4
  %9 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink8StyleRayE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds i8, i8* %4, i64 12
  %11 = bitcast i8* %10 to float*
  store float %0, float* %11, align 4
  %12 = getelementptr inbounds i8, i8* %4, i64 16
  %13 = bitcast i8* %12 to i32*
  store i32 %1, i32* %13, align 8
  %14 = getelementptr inbounds i8, i8* %4, i64 20
  store i8 %6, i8* %14, align 4
  ret %"class.blink::StyleRay"* %5
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink8StyleRayC2EfNS0_7RaySizeEb(%"class.blink::StyleRay"* nocapture, float, i32, i1 zeroext) unnamed_addr #1 align 2 {
  %5 = zext i1 %3 to i8
  %6 = getelementptr inbounds %"class.blink::StyleRay", %"class.blink::StyleRay"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store i32 1, i32* %6, align 4
  %7 = getelementptr inbounds %"class.blink::StyleRay", %"class.blink::StyleRay"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink8StyleRayE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.blink::StyleRay", %"class.blink::StyleRay"* %0, i64 0, i32 1
  store float %1, float* %8, align 4
  %9 = getelementptr inbounds %"class.blink::StyleRay", %"class.blink::StyleRay"* %0, i64 0, i32 2
  store i32 %2, i32* %9, align 8
  %10 = getelementptr inbounds %"class.blink::StyleRay", %"class.blink::StyleRay"* %0, i64 0, i32 3
  store i8 %5, i8* %10, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8StyleRayeqERKNS_10BasicShapeE(%"class.blink::StyleRay"*, %"class.blink::BasicShape"* dereferenceable(16)) unnamed_addr #2 align 2 {
  %3 = bitcast %"class.blink::StyleRay"* %0 to %"class.blink::BasicShape"*
  %4 = bitcast %"class.blink::StyleRay"* %0 to i32 (%"class.blink::BasicShape"*)***
  %5 = load i32 (%"class.blink::BasicShape"*)**, i32 (%"class.blink::BasicShape"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.blink::BasicShape"*)*, i32 (%"class.blink::BasicShape"*)** %5, i64 5
  %7 = load i32 (%"class.blink::BasicShape"*)*, i32 (%"class.blink::BasicShape"*)** %6, align 8
  %8 = tail call i32 %7(%"class.blink::BasicShape"* %3) #6
  %9 = bitcast %"class.blink::BasicShape"* %1 to i32 (%"class.blink::BasicShape"*)***
  %10 = load i32 (%"class.blink::BasicShape"*)**, i32 (%"class.blink::BasicShape"*)*** %9, align 8
  %11 = getelementptr inbounds i32 (%"class.blink::BasicShape"*)*, i32 (%"class.blink::BasicShape"*)** %10, i64 5
  %12 = load i32 (%"class.blink::BasicShape"*)*, i32 (%"class.blink::BasicShape"*)** %11, align 8
  %13 = tail call i32 %12(%"class.blink::BasicShape"* %1) #6
  %14 = icmp eq i32 %8, %13
  br i1 %14, label %15, label %36

15:                                               ; preds = %2
  %16 = bitcast %"class.blink::BasicShape"* %1 to %"class.blink::StyleRay"*
  %17 = getelementptr inbounds %"class.blink::StyleRay", %"class.blink::StyleRay"* %0, i64 0, i32 1
  %18 = load float, float* %17, align 4
  %19 = getelementptr inbounds %"class.blink::BasicShape", %"class.blink::BasicShape"* %1, i64 0, i32 2
  %20 = bitcast [4 x i8]* %19 to float*
  %21 = load float, float* %20, align 4
  %22 = fcmp oeq float %18, %21
  br i1 %22, label %23, label %36

23:                                               ; preds = %15
  %24 = getelementptr inbounds %"class.blink::StyleRay", %"class.blink::StyleRay"* %0, i64 0, i32 2
  %25 = load i32, i32* %24, align 8
  %26 = getelementptr inbounds %"class.blink::BasicShape", %"class.blink::BasicShape"* %1, i64 1
  %27 = bitcast %"class.blink::BasicShape"* %26 to i32*
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %25, %28
  br i1 %29, label %30, label %36

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.blink::StyleRay", %"class.blink::StyleRay"* %0, i64 0, i32 3
  %32 = load i8, i8* %31, align 4, !range !2
  %33 = getelementptr inbounds %"class.blink::StyleRay", %"class.blink::StyleRay"* %16, i64 0, i32 3
  %34 = load i8, i8* %33, align 4, !range !2
  %35 = icmp eq i8 %32, %34
  br label %36

36:                                               ; preds = %15, %23, %30, %2
  %37 = phi i1 [ false, %2 ], [ false, %23 ], [ false, %15 ], [ %35, %30 ]
  ret i1 %37
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink8StyleRay7GetPathERNS_4PathERKNS_9FloatRectEf(%"class.blink::StyleRay"* nocapture, %"class.blink::Path"* nocapture, %"class.blink::FloatRect"* nocapture, float) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10BasicShapeD2Ev(%"class.blink::BasicShape"*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8StyleRayD0Ev(%"class.blink::StyleRay"*) unnamed_addr #2 comdat align 2 {
  %2 = bitcast %"class.blink::StyleRay"* %0 to i8*
  tail call void @free(i8* %2) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink10BasicShape11GetWindRuleEv(%"class.blink::BasicShape"*) unnamed_addr #2 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink8StyleRay7GetTypeEv(%"class.blink::StyleRay"*) unnamed_addr #2 comdat align 2 {
  ret i32 4
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #5

attributes #0 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
