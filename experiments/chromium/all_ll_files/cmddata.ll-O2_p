; ModuleID = '../../third_party/unrar/src/cmddata.cpp'
source_filename = "../../third_party/unrar/src/cmddata.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"
module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%class.ErrorHandler = type <{ i32, i32, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%class.CommandData = type { %class.RAROptions.base, i8, i8, i32, i8, [2064 x i32], [2048 x i32], %class.StringList, %class.StringList, %class.StringList, %class.StringList, %class.StringList }
%class.RAROptions.base = type <{ i32, i32, i8, i8, i8, [5 x i8], i64, [2048 x i32], [2048 x i32], i32, i8, [3 x i8], [2048 x i32], [2048 x i32], i32, i32, i32, i32, [2048 x i32], %class.SecPassword, i8, i8, [2 x i8], [2048 x i32], i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, [3 x i8], i32, i32, i8, i8, i8, i8, i8, [3 x i8], i32, i32, [4 x i8], i64, %class.Array, i32, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, [128 x i32], [128 x i32], i8, i8, i8, i8, i8, [3 x i8], %class.RarTime, %class.RarTime, %class.RarTime, i8, i8, i8, [5 x i8], %class.RarTime, %class.RarTime, %class.RarTime, i8, i8, i8, [5 x i8], i64, i64, i8, i8, i8, i8, [16 x %struct.FilterMode], [2048 x i32], i32, i32, i32, i32, i32, i32, i8, [3 x i8], [2048 x i32], i32 }>
%class.SecPassword = type <{ [128 x i32], i8, i8, [2 x i8] }>
%class.Array = type <{ i64*, i64, i64, i64, i8, [7 x i8] }>
%class.RarTime = type { i64 }
%struct.FilterMode = type { i32, i32, i32 }
%class.StringList = type { %class.Array.0, i64, i64, [16 x i64], i64 }
%class.Array.0 = type <{ i32*, i64, i64, i64, i8, [7 x i8] }>
%struct.FileHeader = type { %struct.BlockHeader, i8, i32, i8, %union.anon, [2048 x i32], %class.Array.2, %class.RarTime, %class.RarTime, %class.RarTime, i64, i64, i64, %struct.HashValue, i32, i8, i8, i8, i8, i32, i8, [16 x i8], [16 x i8], i8, [8 x i8], i8, [32 x i8], i32, i8, i8, i8, i8, i64, i8, i8, i8, i32, i32, [2048 x i32], i8, i8, i8, i8, [256 x i8], [256 x i8], i32, i32 }
%struct.BlockHeader = type { %struct.BaseBlock, i32 }
%struct.BaseBlock = type { i32, i32, i32, i32, i8 }
%union.anon = type { i32 }
%class.Array.2 = type <{ i8*, i64, i64, i64, i8, [7 x i8] }>
%struct.HashValue = type { i32, %union.anon.4 }
%union.anon.4 = type { i32, [28 x i8] }
%class.RAROptions = type <{ i32, i32, i8, i8, i8, [5 x i8], i64, [2048 x i32], [2048 x i32], i32, i8, [3 x i8], [2048 x i32], [2048 x i32], i32, i32, i32, i32, [2048 x i32], %class.SecPassword, i8, i8, [2 x i8], [2048 x i32], i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, [3 x i8], i32, i32, i8, i8, i8, i8, i8, [3 x i8], i32, i32, [4 x i8], i64, %class.Array, i32, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, [128 x i32], [128 x i32], i8, i8, i8, i8, i8, [3 x i8], %class.RarTime, %class.RarTime, %class.RarTime, i8, i8, i8, [5 x i8], %class.RarTime, %class.RarTime, %class.RarTime, i8, i8, i8, [5 x i8], i64, i64, i8, i8, i8, i8, [16 x %struct.FilterMode], [2048 x i32], i32, i32, i32, i32, i32, i32, i8, [3 x i8], [2048 x i32], i32, [4 x i8] }>
%struct.FindData = type <{ [2048 x i32], i64, i32, i8, i8, [2 x i8], %class.RarTime, %class.RarTime, %class.RarTime, i32, i8, [3 x i8] }>
%class.ScanTree = type { [1024 x %class.FindFile*], i32, i32, %class.StringList*, i32, i8, i32, i32, i8, [2048 x i32], [2048 x i32], %class.StringList, %class.StringList, %class.StringList*, %class.Array.5*, i8, i8, i64, [2048 x i32], %class.CommandData* }
%class.FindFile = type { [2048 x i32], i8, %struct.__dirstream* }
%struct.__dirstream = type opaque
%class.Array.5 = type opaque
%class.CmdExtract = type <{ %class.RarTime, %class.CommandData*, %class.ComprDataIO, %class.Unpack*, i64, i64, i64, i8, i8, i8, i8, i8, [3 x i8], [2048 x i32], i8, i8, [2 x i8], [2048 x i32], i8, [3 x i8] }>
%class.ComprDataIO = type <{ i8, [7 x i8], i64, i8*, i8, [7 x i8], i64, i8*, i64, i8*, i64, i8, i8, i8, i8, [4 x i8], %class.File*, %class.File*, %class.CmdAdd*, %struct.FileHeader*, i64*, %class.CryptData*, %class.CryptData*, i32, i32, i8, i8, i8, [5 x i8], i64, i64, i64, i64, i64, i64, i64, %class.DataHash, %class.DataHash, %class.DataHash, i8, i8, [6 x i8] }>
%class.File = type { i32 (...)**, i64, i8, i32, i8, i32, i8, i8, i8, i8, i8, i8, [2048 x i32], i32, i64 }
%class.CmdAdd = type opaque
%class.CryptData = type { [4 x %"struct.CryptData::KDF3CacheItem"], i32, [4 x %"struct.CryptData::KDF5CacheItem"], i32, i32, %class.Rijndael, [256 x i32], [256 x i8], [4 x i32], [3 x i8], [4 x i16] }
%"struct.CryptData::KDF3CacheItem" = type { %class.SecPassword, [8 x i8], [16 x i8], [16 x i8], i8, [3 x i8] }
%"struct.CryptData::KDF5CacheItem" = type { %class.SecPassword, [16 x i8], [32 x i8], i32, [32 x i8], [32 x i8] }
%class.Rijndael = type { i8, i32, [16 x i8], [15 x [4 x [4 x i8]]] }
%class.DataHash = type <{ i32, i32, %struct.blake2sp_state*, %class.ThreadPool*, i32, [4 x i8] }>
%struct.blake2sp_state = type <{ [8 x %struct.blake2s_state], %struct.blake2s_state, [512 x i8], i64, %class.ThreadPool*, i32, [4 x i8] }>
%struct.blake2s_state = type <{ [240 x i8], i8*, i32*, i32*, i32*, i64, i8, [7 x i8] }>
%class.ThreadPool = type { i32, [64 x i64], i32, i32, [64 x %"struct.ThreadPool::QueueEntry"], i32, i32, i8, i32, %union.pthread_cond_t, %union.pthread_mutex_t, i8, %union.pthread_cond_t, %union.pthread_mutex_t, %union.pthread_mutex_t }
%"struct.ThreadPool::QueueEntry" = type { void (i8*)*, i8* }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.6, %union.anon.7, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.6 = type { i64 }
%union.anon.7 = type { i64 }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%class.Unpack = type { %class.ComprDataIO*, %class.BitInput, %class.ThreadPool*, %struct.UnpackThreadData*, i32, i8*, %class.Array.2, %class.Array.2, %class.Array.10, [4 x i32], i32, i32, i32, i64, i64, i32, i32, %struct.UnpackBlockHeader, %struct.UnpackBlockTables, i64, i8*, %class.FragmentedWindow, i8, i64, i8, i8, i8, i64, i8, [256 x i16], [256 x i16], [256 x i16], [256 x i16], [256 x i8], [256 x i8], [256 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x %struct.DecodeTable], [1028 x i8], i8, i32, i32, i32, [4 x %struct.AudioVariables], i32, i32, %class.ModelPPM, i32, [404 x i8], i32, i8, i8, i8, %class.RarVM, %class.BitInput, %class.Array.13, %class.Array.13, %class.Array.15, i32, i64, i64 }
%struct.UnpackThreadData = type <{ %class.Unpack*, %class.BitInput, i8, [3 x i8], %struct.UnpackBlockHeader, i8, [3 x i8], %struct.UnpackBlockTables, i32, i8, i8, i8, i8, %struct.UnpackDecodedItem*, i32, i32, i32, [4 x i8] }>
%struct.UnpackDecodedItem = type { i32, i16, %union.anon.9 }
%union.anon.9 = type { i32 }
%class.Array.10 = type <{ %struct.UnpackFilter*, i64, i64, i64, i8, [7 x i8] }>
%struct.UnpackFilter = type { i8, i32, i32, i8, i8 }
%struct.UnpackBlockHeader = type { i32, i32, i32, i32, i8, i8 }
%struct.UnpackBlockTables = type { %struct.DecodeTable, %struct.DecodeTable, %struct.DecodeTable, %struct.DecodeTable, %struct.DecodeTable }
%struct.DecodeTable = type { i32, [16 x i32], [16 x i32], i32, [1024 x i8], [1024 x i16], [306 x i16] }
%class.FragmentedWindow = type { [32 x i8*], [32 x i64] }
%struct.AudioVariables = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [11 x i32], i32, i32 }
%class.ModelPPM = type <{ i8, [25 x [16 x %struct.RARPPM_SEE2_CONTEXT]], %struct.RARPPM_SEE2_CONTEXT, [3 x i8], %struct.RARPPM_CONTEXT*, %struct.RARPPM_CONTEXT*, %struct.RARPPM_CONTEXT*, %struct.RARPPM_STATE*, i32, i32, i32, i32, i32, i32, [256 x i8], [256 x i8], [256 x i8], [256 x i8], i8, i8, i8, i8, [128 x [64 x i16]], [4 x i8], %class.RangeCoder, %class.SubAllocator }>
%struct.RARPPM_SEE2_CONTEXT = type { i16, i8, i8 }
%struct.RARPPM_CONTEXT = type <{ i16, %union.anon.12, %struct.RARPPM_CONTEXT* }>
%union.anon.12 = type { %"struct.RARPPM_CONTEXT::FreqData" }
%"struct.RARPPM_CONTEXT::FreqData" = type <{ i16, %struct.RARPPM_STATE* }>
%struct.RARPPM_STATE = type <{ i8, i8, %struct.RARPPM_CONTEXT* }>
%class.RangeCoder = type { i32, i32, i32, %"struct.RangeCoder::SUBRANGE", %class.Unpack* }
%"struct.RangeCoder::SUBRANGE" = type { i32, i32, i32 }
%class.SubAllocator = type { i64, [38 x i8], [128 x i8], i8, i8*, i8*, i8*, [38 x %"struct.SubAllocator::RAR_NODE"], i8*, i8*, i8*, i8* }
%"struct.SubAllocator::RAR_NODE" = type { %"struct.SubAllocator::RAR_NODE"* }
%class.RarVM = type { i8*, [8 x i32] }
%class.BitInput = type { i32, i32, i8, i8* }
%class.Array.13 = type <{ %struct.UnpackFilter30**, i64, i64, i64, i8, [7 x i8] }>
%struct.UnpackFilter30 = type { i32, i32, i8, i32, %struct.VM_PreparedProgram }
%struct.VM_PreparedProgram = type <{ i32, [7 x i32], i8*, i32, [4 x i8] }>
%class.Array.15 = type <{ i32*, i64, i64, i64, i8, [7 x i8] }>
%class.uiMsgStore = type <{ [8 x i32*], [8 x i32], i32, i32, i32, [4 x i8] }>

$_ZN5ArrayIwE3AddEm = comdat any

@.str = private unnamed_addr constant [2 x i32] [i32 42, i32 0], align 4
@.str.1 = private unnamed_addr constant [9 x i32] [i32 77, i32 67, i32 65, i32 79, i32 109, i32 99, i32 97, i32 111, i32 0], align 4
@.str.2 = private unnamed_addr constant [2 x i32] [i32 109, i32 0], align 4
@.str.3 = private unnamed_addr constant [5 x i32] [i32 65, i32 70, i32 85, i32 77, i32 0], align 4
@.str.4 = private unnamed_addr constant [4 x i8] c"RAR\00", align 1
@.str.5 = private unnamed_addr constant [5 x i32] [i32 99, i32 102, i32 103, i32 45, i32 0], align 4
@.str.6 = private unnamed_addr constant [5 x i32] [i32 105, i32 108, i32 111, i32 103, i32 0], align 4
@.str.7 = private unnamed_addr constant [3 x i32] [i32 115, i32 99, i32 0], align 4
@.str.8 = private unnamed_addr constant [7 x i32] [i32 46, i32 114, i32 97, i32 114, i32 114, i32 99, i32 0], align 4
@.str.9 = private unnamed_addr constant [10 x i32] [i32 115, i32 119, i32 105, i32 116, i32 99, i32 104, i32 101, i32 115, i32 61, i32 0], align 4
@.str.10 = private unnamed_addr constant [14 x i32] [i32 115, i32 119, i32 105, i32 116, i32 99, i32 104, i32 101, i32 115, i32 95, i32 37, i32 108, i32 115, i32 61, i32 0], align 4
@.str.12 = private unnamed_addr constant [4 x i32] [i32 76, i32 79, i32 71, i32 0], align 4
@.str.13 = private unnamed_addr constant [8 x i32] [i32 46, i32 114, i32 97, i32 114, i32 108, i32 111, i32 103, i32 0], align 4
@.str.14 = private unnamed_addr constant [4 x i32] [i32 83, i32 78, i32 68, i32 0], align 4
@.str.15 = private unnamed_addr constant [4 x i32] [i32 69, i32 82, i32 82, i32 0], align 4
@.str.16 = private unnamed_addr constant [4 x i32] [i32 69, i32 77, i32 76, i32 0], align 4
@.str.17 = private unnamed_addr constant [2 x i32] [i32 64, i32 0], align 4
@.str.18 = private unnamed_addr constant [2 x i32] [i32 77, i32 0], align 4
@.str.19 = private unnamed_addr constant [4 x i32] [i32 78, i32 85, i32 76, i32 0], align 4
@.str.20 = private unnamed_addr constant [4 x i32] [i32 79, i32 70, i32 70, i32 0], align 4
@.str.21 = private unnamed_addr constant [4 x i32] [i32 86, i32 69, i32 82, i32 0], align 4
@.str.22 = private unnamed_addr constant [72 x i32] [i32 55, i32 122, i32 59, i32 97, i32 99, i32 101, i32 59, i32 97, i32 114, i32 106, i32 59, i32 98, i32 122, i32 50, i32 59, i32 99, i32 97, i32 98, i32 59, i32 103, i32 122, i32 59, i32 106, i32 112, i32 101, i32 103, i32 59, i32 106, i32 112, i32 103, i32 59, i32 108, i32 104, i32 97, i32 59, i32 108, i32 122, i32 59, i32 108, i32 122, i32 104, i32 59, i32 109, i32 112, i32 51, i32 59, i32 114, i32 97, i32 114, i32 59, i32 116, i32 97, i32 122, i32 59, i32 116, i32 103, i32 122, i32 59, i32 120, i32 122, i32 59, i32 122, i32 59, i32 122, i32 105, i32 112, i32 59, i32 122, i32 105, i32 112, i32 120, i32 0], align 4
@.str.23 = private unnamed_addr constant [4 x i32] [i32 42, i32 63, i32 46, i32 0], align 4
@.str.24 = private unnamed_addr constant [6 x i32] [i32 42, i32 46, i32 37, i32 108, i32 115, i32 0], align 4
@.str.25 = private unnamed_addr constant [6 x i32] [i32 115, i32 116, i32 100, i32 105, i32 110, i32 0], align 4
@.str.26 = private unnamed_addr constant [27 x i32] [i32 10, i32 69, i32 82, i32 82, i32 79, i32 82, i32 58, i32 32, i32 85, i32 110, i32 107, i32 110, i32 111, i32 119, i32 110, i32 32, i32 111, i32 112, i32 116, i32 105, i32 111, i32 110, i32 58, i32 32, i32 37, i32 115, i32 0], align 4
@ErrHandler = external global %class.ErrorHandler, align 4
@.str.28 = private unnamed_addr constant [5 x i32] [i32 46, i32 114, i32 97, i32 114, i32 0], align 4
@.str.29 = private unnamed_addr constant [6 x i32] [i32 46, i32 112, i32 97, i32 114, i32 116, i32 0], align 4
@.str.30 = private unnamed_addr constant [6 x i32] [i32 65, i32 70, i32 85, i32 77, i32 68, i32 0], align 4
@.str.31 = private unnamed_addr constant [4 x i32] [i32 45, i32 104, i32 116, i32 0], align 4
@.str.32 = private unnamed_addr constant [4 x i32] [i32 45, i32 111, i32 104, i32 0], align 4
@.str.33 = private unnamed_addr constant [4 x i32] [i32 45, i32 113, i32 111, i32 0], align 4
@.str.34 = private unnamed_addr constant [44 x i32] [i32 77, i32 97, i32 120, i32 105, i32 109, i32 117, i32 109, i32 32, i32 97, i32 108, i32 108, i32 111, i32 119, i32 101, i32 100, i32 32, i32 97, i32 114, i32 114, i32 97, i32 121, i32 32, i32 115, i32 105, i32 122, i32 101, i32 32, i32 40, i32 37, i32 117, i32 41, i32 32, i32 105, i32 115, i32 32, i32 101, i32 120, i32 99, i32 101, i32 101, i32 100, i32 101, i32 100, i32 0], align 4
@.str.35 = private unnamed_addr constant [1 x i32] zeroinitializer, align 4

@_ZN11CommandDataC1Ev = hidden unnamed_addr alias void (%class.CommandData*), void (%class.CommandData*)* @_ZN11CommandDataC2Ev

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN11CommandData9ExclCheckEPKwbbb(%class.CommandData*, i32*, i1 zeroext, i1 zeroext, i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 8
  %7 = tail call zeroext i1 @_ZN11CommandData9CheckArgsEP10StringListbPKwbi(%class.StringList* %6, i1 zeroext %2, i32* %1, i1 zeroext %3, i32 6)
  %8 = xor i1 %4, true
  %9 = or i1 %7, %8
  br i1 %9, label %18, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 9, i32 2
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %18, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 9
  %16 = tail call zeroext i1 @_ZN11CommandData9CheckArgsEP10StringListbPKwbi(%class.StringList* %15, i1 zeroext %2, i32* %1, i1 zeroext %3, i32 6)
  %17 = xor i1 %16, true
  br label %18

18:                                               ; preds = %5, %14, %10
  %19 = phi i1 [ %7, %5 ], [ false, %10 ], [ %17, %14 ]
  ret i1 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN11CommandData9CheckArgsEP10StringListbPKwbi(%class.StringList*, i1 zeroext, i32*, i1 zeroext, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca [2048 x i32], align 16
  %7 = alloca [2048 x i32], align 16
  %8 = alloca [2050 x i32], align 16
  %9 = tail call i32* @_Z11ConvertPathPKwPwm(i32* %2, i32* null, i64 0) #11
  %10 = bitcast [2048 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8192, i8* nonnull %10) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %10, i8 -86, i64 8192, i1 false)
  %11 = bitcast [2048 x i32]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8192, i8* nonnull %11) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -86, i64 8192, i1 false)
  %12 = getelementptr inbounds [2048 x i32], [2048 x i32]* %6, i64 0, i64 0
  store i32 0, i32* %12, align 16
  tail call void @_ZN10StringList6RewindEv(%class.StringList* %0) #11
  %13 = getelementptr inbounds [2048 x i32], [2048 x i32]* %7, i64 0, i64 0
  %14 = call zeroext i1 @_ZN10StringList9GetStringEPwm(%class.StringList* %0, i32* nonnull %13, i64 2048) #11
  br i1 %14, label %15, label %51

15:                                               ; preds = %5
  %16 = bitcast [2050 x i32]* %8 to i8*
  %17 = getelementptr inbounds [2050 x i32], [2050 x i32]* %8, i64 0, i64 0
  %18 = getelementptr inbounds [2050 x i32], [2050 x i32]* %8, i64 0, i64 1
  %19 = getelementptr inbounds [2050 x i32], [2050 x i32]* %8, i64 0, i64 2
  br label %20

20:                                               ; preds = %15, %49
  %21 = call i32* @_Z15PointToLastCharPKw(i32* nonnull %13) #11
  %22 = load i32, i32* %21, align 4
  %23 = call zeroext i1 @_Z9IsPathDivi(i32 %22) #11
  br i1 %1, label %24, label %26

24:                                               ; preds = %20
  br i1 %23, label %25, label %28

25:                                               ; preds = %24
  store i32 0, i32* %21, align 4
  br label %28

26:                                               ; preds = %20
  br i1 %23, label %27, label %28

27:                                               ; preds = %26
  call void @_Z8wcsncatzPwPKwm(i32* nonnull %13, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @.str, i64 0, i64 0), i64 2048) #11
  br label %28

28:                                               ; preds = %26, %27, %25, %24
  br i1 %3, label %29, label %37

29:                                               ; preds = %28
  %30 = call zeroext i1 @_Z10IsFullPathPKw(i32* nonnull %13) #11
  br i1 %30, label %31, label %37

31:                                               ; preds = %29
  %32 = load i32, i32* %12, align 16
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  call void @_Z17ConvertNameToFullPKwPwm(i32* %2, i32* nonnull %12, i64 2048) #11
  br label %35

35:                                               ; preds = %34, %31
  %36 = call zeroext i1 @_Z7CmpNamePKwS0_i(i32* nonnull %13, i32* nonnull %12, i32 %4) #11
  br i1 %36, label %51, label %49

37:                                               ; preds = %29, %28
  call void @llvm.lifetime.start.p0i8(i64 8200, i8* nonnull %16) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %16, i8 -86, i64 8200, i1 false)
  %38 = call i32* @_Z11ConvertPathPKwPwm(i32* nonnull %13, i32* null, i64 0) #11
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 42
  br i1 %40, label %41, label %46

41:                                               ; preds = %37
  %42 = getelementptr inbounds i32, i32* %38, i64 1
  %43 = load i32, i32* %42, align 4
  %44 = call zeroext i1 @_Z9IsPathDivi(i32 %43) #11
  br i1 %44, label %45, label %46

45:                                               ; preds = %41
  store i32 46, i32* %17, align 16
  store i32 47, i32* %18, align 4
  call void @_Z8wcsncpyzPwPKwm(i32* %19, i32* %9, i64 2048) #11
  br label %46

46:                                               ; preds = %45, %41, %37
  %47 = phi i32* [ %17, %45 ], [ %9, %41 ], [ %9, %37 ]
  %48 = call zeroext i1 @_Z7CmpNamePKwS0_i(i32* %38, i32* %47, i32 %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8200, i8* nonnull %16) #11
  br i1 %48, label %51, label %49

49:                                               ; preds = %46, %35
  %50 = call zeroext i1 @_ZN10StringList9GetStringEPwm(%class.StringList* %0, i32* nonnull %13, i64 2048) #11
  br i1 %50, label %20, label %51

51:                                               ; preds = %49, %35, %46, %5
  %52 = phi i1 [ false, %5 ], [ true, %46 ], [ true, %35 ], [ false, %49 ]
  call void @llvm.lifetime.end.p0i8(i64 8192, i8* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 8192, i8* nonnull %10) #11
  ret i1 %52
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i32* @_Z11ConvertPathPKwPwm(i32*, i32*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN10StringList6RewindEv(%class.StringList*) local_unnamed_addr #2

declare zeroext i1 @_ZN10StringList9GetStringEPwm(%class.StringList*, i32*, i64) local_unnamed_addr #2

declare i32* @_Z15PointToLastCharPKw(i32*) local_unnamed_addr #2

declare zeroext i1 @_Z9IsPathDivi(i32) local_unnamed_addr #2

declare void @_Z8wcsncatzPwPKwm(i32*, i32*, i64) local_unnamed_addr #2

declare zeroext i1 @_Z10IsFullPathPKw(i32*) local_unnamed_addr #2

declare void @_Z17ConvertNameToFullPKwPwm(i32*, i32*, i64) local_unnamed_addr #2

declare zeroext i1 @_Z7CmpNamePKwS0_i(i32*, i32*, i32) local_unnamed_addr #2

declare void @_Z8wcsncpyzPwPKwm(i32*, i32*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN11CommandData13ExclDirByAttrEj(%class.CommandData* nocapture readnone, i32) local_unnamed_addr #3 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CommandData14SetTimeFiltersEPKwbb(%class.CommandData*, i32*, i1 zeroext, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = load i32, i32* %1, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %22, label %7

7:                                                ; preds = %4, %16
  %8 = phi i32 [ %20, %16 ], [ %5, %4 ]
  %9 = phi i32* [ %19, %16 ], [ %1, %4 ]
  %10 = phi i8 [ %18, %16 ], [ 0, %4 ]
  %11 = phi i8 [ %17, %16 ], [ 0, %4 ]
  %12 = tail call i32* @wcschr(i32* getelementptr inbounds ([9 x i32], [9 x i32]* @.str.1, i64 0, i64 0), i32 signext %8) #12
  %13 = icmp eq i32* %12, null
  br i1 %13, label %22, label %14

14:                                               ; preds = %7
  switch i32 %8, label %15 [
    i32 111, label %16
    i32 79, label %16
  ]

15:                                               ; preds = %14
  br label %16

16:                                               ; preds = %14, %14, %15
  %17 = phi i8 [ %11, %15 ], [ 1, %14 ], [ 1, %14 ]
  %18 = phi i8 [ 1, %15 ], [ %10, %14 ], [ %10, %14 ]
  %19 = getelementptr inbounds i32, i32* %9, i64 1
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %7

22:                                               ; preds = %16, %7, %4
  %23 = phi i8 [ 0, %4 ], [ %11, %7 ], [ %17, %16 ]
  %24 = phi i8 [ 0, %4 ], [ %10, %7 ], [ %18, %16 ]
  %25 = phi i32* [ %1, %4 ], [ %9, %7 ], [ %19, %16 ]
  %26 = and i8 %24, 1
  %27 = icmp eq i8 %26, 0
  %28 = select i1 %27, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @.str.2, i64 0, i64 0), i32* %1
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %83, label %31

31:                                               ; preds = %22
  %32 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 84
  %33 = and i8 %23, 1
  %34 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 87
  %35 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 77
  %36 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 80
  %37 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 83
  %38 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 86
  %39 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 76
  %40 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 79
  %41 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 82
  %42 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 85
  %43 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 75
  %44 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 78
  br label %45

45:                                               ; preds = %31, %79
  %46 = phi i32 [ %29, %31 ], [ %81, %79 ]
  %47 = phi i32* [ %28, %31 ], [ %80, %79 ]
  %48 = tail call i32* @wcschr(i32* getelementptr inbounds ([9 x i32], [9 x i32]* @.str.1, i64 0, i64 0), i32 signext %46) #12
  %49 = icmp eq i32* %48, null
  br i1 %49, label %83, label %50

50:                                               ; preds = %45
  %51 = tail call i32 @_Z8toupperwi(i32 %46) #11
  switch i32 %51, label %79 [
    i32 77, label %52
    i32 67, label %61
    i32 65, label %70
  ]

52:                                               ; preds = %50
  br i1 %2, label %53, label %57

53:                                               ; preds = %52
  br i1 %3, label %54, label %55

54:                                               ; preds = %53
  tail call void @_ZN7RarTime10SetAgeTextEPKw(%class.RarTime* %43, i32* %25) #11
  br label %56

55:                                               ; preds = %53
  tail call void @_ZN7RarTime10SetIsoTextEPKw(%class.RarTime* %43, i32* %25) #11
  br label %56

56:                                               ; preds = %55, %54
  store i8 %33, i8* %44, align 8
  br label %79

57:                                               ; preds = %52
  br i1 %3, label %58, label %59

58:                                               ; preds = %57
  tail call void @_ZN7RarTime10SetAgeTextEPKw(%class.RarTime* %41, i32* %25) #11
  br label %60

59:                                               ; preds = %57
  tail call void @_ZN7RarTime10SetIsoTextEPKw(%class.RarTime* %41, i32* %25) #11
  br label %60

60:                                               ; preds = %59, %58
  store i8 %33, i8* %42, align 8
  br label %79

61:                                               ; preds = %50
  br i1 %2, label %62, label %66

62:                                               ; preds = %61
  br i1 %3, label %63, label %64

63:                                               ; preds = %62
  tail call void @_ZN7RarTime10SetAgeTextEPKw(%class.RarTime* %39, i32* %25) #11
  br label %65

64:                                               ; preds = %62
  tail call void @_ZN7RarTime10SetIsoTextEPKw(%class.RarTime* %39, i32* %25) #11
  br label %65

65:                                               ; preds = %64, %63
  store i8 %33, i8* %40, align 1
  br label %79

66:                                               ; preds = %61
  br i1 %3, label %67, label %68

67:                                               ; preds = %66
  tail call void @_ZN7RarTime10SetAgeTextEPKw(%class.RarTime* %37, i32* %25) #11
  br label %69

68:                                               ; preds = %66
  tail call void @_ZN7RarTime10SetIsoTextEPKw(%class.RarTime* %37, i32* %25) #11
  br label %69

69:                                               ; preds = %68, %67
  store i8 %33, i8* %38, align 1
  br label %79

70:                                               ; preds = %50
  br i1 %2, label %71, label %75

71:                                               ; preds = %70
  br i1 %3, label %72, label %73

72:                                               ; preds = %71
  tail call void @_ZN7RarTime10SetAgeTextEPKw(%class.RarTime* %35, i32* %25) #11
  br label %74

73:                                               ; preds = %71
  tail call void @_ZN7RarTime10SetIsoTextEPKw(%class.RarTime* %35, i32* %25) #11
  br label %74

74:                                               ; preds = %73, %72
  store i8 %33, i8* %36, align 2
  br label %79

75:                                               ; preds = %70
  br i1 %3, label %76, label %77

76:                                               ; preds = %75
  tail call void @_ZN7RarTime10SetAgeTextEPKw(%class.RarTime* %32, i32* %25) #11
  br label %78

77:                                               ; preds = %75
  tail call void @_ZN7RarTime10SetIsoTextEPKw(%class.RarTime* %32, i32* %25) #11
  br label %78

78:                                               ; preds = %77, %76
  store i8 %33, i8* %34, align 2
  br label %79

79:                                               ; preds = %50, %60, %56, %69, %65, %78, %74
  %80 = getelementptr inbounds i32, i32* %47, i64 1
  %81 = load i32, i32* %80, align 4
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %45

83:                                               ; preds = %79, %45, %22
  ret void
}

; Function Attrs: nounwind readonly
declare i32* @wcschr(i32*, i32 signext) local_unnamed_addr #4

declare i32 @_Z8toupperwi(i32) local_unnamed_addr #2

declare void @_ZN7RarTime10SetAgeTextEPKw(%class.RarTime*, i32*) local_unnamed_addr #2

declare void @_ZN7RarTime10SetIsoTextEPKw(%class.RarTime*, i32*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN11CommandData9TimeCheckER7RarTimeS1_S1_(%class.CommandData* nocapture readonly, %class.RarTime* nocapture readonly dereferenceable(8), %class.RarTime* nocapture readonly dereferenceable(8), %class.RarTime* nocapture readonly dereferenceable(8)) local_unnamed_addr #5 align 2 {
  %5 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 75, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %17, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %class.RarTime, %class.RarTime* %1, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp ult i64 %10, %6
  %12 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 78
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp ne i8 %13, 0
  br i1 %11, label %16, label %15

15:                                               ; preds = %8
  br i1 %14, label %17, label %91

16:                                               ; preds = %8
  br i1 %14, label %91, label %17

17:                                               ; preds = %4, %15, %16
  %18 = phi i8 [ 0, %16 ], [ 0, %4 ], [ 1, %15 ]
  %19 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 82, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %31, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %class.RarTime, %class.RarTime* %1, i64 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = icmp ult i64 %24, %20
  %26 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 85
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp ne i8 %27, 0
  br i1 %25, label %29, label %30

29:                                               ; preds = %22
  br i1 %28, label %31, label %91

30:                                               ; preds = %22
  br i1 %28, label %91, label %31

31:                                               ; preds = %17, %29, %30
  %32 = phi i8 [ %18, %30 ], [ %18, %17 ], [ 1, %29 ]
  %33 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 76, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %45, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %class.RarTime, %class.RarTime* %2, i64 0, i32 0
  %38 = load i64, i64* %37, align 8
  %39 = icmp ult i64 %38, %34
  %40 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 79
  %41 = load i8, i8* %40, align 1, !range !2
  %42 = icmp ne i8 %41, 0
  br i1 %39, label %44, label %43

43:                                               ; preds = %36
  br i1 %42, label %45, label %91

44:                                               ; preds = %36
  br i1 %42, label %91, label %45

45:                                               ; preds = %31, %43, %44
  %46 = phi i8 [ %32, %44 ], [ %32, %31 ], [ 1, %43 ]
  %47 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 83, i32 0
  %48 = load i64, i64* %47, align 8
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %59, label %50

50:                                               ; preds = %45
  %51 = getelementptr inbounds %class.RarTime, %class.RarTime* %2, i64 0, i32 0
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %48
  %54 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 86
  %55 = load i8, i8* %54, align 1, !range !2
  %56 = icmp ne i8 %55, 0
  br i1 %53, label %57, label %58

57:                                               ; preds = %50
  br i1 %56, label %59, label %91

58:                                               ; preds = %50
  br i1 %56, label %91, label %59

59:                                               ; preds = %45, %57, %58
  %60 = phi i8 [ %46, %58 ], [ %46, %45 ], [ 1, %57 ]
  %61 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 77, i32 0
  %62 = load i64, i64* %61, align 8
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %73, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %class.RarTime, %class.RarTime* %3, i64 0, i32 0
  %66 = load i64, i64* %65, align 8
  %67 = icmp ult i64 %66, %62
  %68 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 80
  %69 = load i8, i8* %68, align 2, !range !2
  %70 = icmp ne i8 %69, 0
  br i1 %67, label %72, label %71

71:                                               ; preds = %64
  br i1 %70, label %73, label %91

72:                                               ; preds = %64
  br i1 %70, label %91, label %73

73:                                               ; preds = %59, %71, %72
  %74 = phi i8 [ %60, %72 ], [ %60, %59 ], [ 1, %71 ]
  %75 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 84, i32 0
  %76 = load i64, i64* %75, align 8
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %87, label %78

78:                                               ; preds = %73
  %79 = getelementptr inbounds %class.RarTime, %class.RarTime* %3, i64 0, i32 0
  %80 = load i64, i64* %79, align 8
  %81 = icmp ult i64 %80, %76
  %82 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 87
  %83 = load i8, i8* %82, align 2, !range !2
  %84 = icmp ne i8 %83, 0
  br i1 %81, label %85, label %86

85:                                               ; preds = %78
  br i1 %84, label %87, label %91

86:                                               ; preds = %78
  br i1 %84, label %91, label %87

87:                                               ; preds = %73, %85, %86
  %88 = phi i8 [ %74, %86 ], [ %74, %73 ], [ 1, %85 ]
  %89 = and i8 %88, 1
  %90 = icmp ne i8 %89, 0
  br label %91

91:                                               ; preds = %86, %85, %72, %71, %58, %57, %44, %43, %30, %29, %16, %15, %87
  %92 = phi i1 [ %90, %87 ], [ true, %15 ], [ false, %16 ], [ true, %29 ], [ false, %30 ], [ true, %43 ], [ false, %44 ], [ true, %57 ], [ false, %58 ], [ true, %71 ], [ false, %72 ], [ true, %85 ], [ false, %86 ]
  ret i1 %92
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN11CommandData9SizeCheckEl(%class.CommandData* nocapture readonly, i64) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 89
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 9223372034707292159
  %6 = icmp sgt i64 %4, %1
  %7 = or i1 %5, %6
  br i1 %7, label %8, label %14

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 90
  %10 = load i64, i64* %9, align 8
  %11 = icmp ne i64 %10, 9223372034707292159
  %12 = icmp sge i64 %10, %1
  %13 = and i1 %12, %11
  ret i1 %13

14:                                               ; preds = %2
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11CommandData13IsProcessFileER10FileHeaderPbibPwj(%class.CommandData*, %struct.FileHeader* dereferenceable(17192), i8*, i32, i1 zeroext, i32*, i32) local_unnamed_addr #0 align 2 {
  %8 = icmp ne i32* %5, null
  %9 = icmp ne i32 %6, 0
  %10 = and i1 %8, %9
  br i1 %10, label %11, label %12

11:                                               ; preds = %7
  store i32 0, i32* %5, align 4
  br label %12

12:                                               ; preds = %11, %7
  %13 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %1, i64 0, i32 29
  %14 = load i8, i8* %13, align 1, !range !2
  %15 = icmp ne i8 %14, 0
  %16 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %1, i64 0, i32 5, i64 0
  %17 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 8
  %18 = tail call zeroext i1 @_ZN11CommandData9CheckArgsEP10StringListbPKwbi(%class.StringList* %17, i1 zeroext %15, i32* %16, i1 zeroext false, i32 6) #11
  br i1 %18, label %95, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 9, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 9
  %25 = tail call zeroext i1 @_ZN11CommandData9CheckArgsEP10StringListbPKwbi(%class.StringList* %24, i1 zeroext %15, i32* %16, i1 zeroext false, i32 6) #11
  br i1 %25, label %26, label %95

26:                                               ; preds = %23, %19
  %27 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %1, i64 0, i32 7
  %28 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %1, i64 0, i32 8
  %29 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %1, i64 0, i32 9
  %30 = tail call zeroext i1 @_ZN11CommandData9TimeCheckER7RarTimeS1_S1_(%class.CommandData* %0, %class.RarTime* dereferenceable(8) %27, %class.RarTime* dereferenceable(8) %28, %class.RarTime* dereferenceable(8) %29)
  br i1 %30, label %95, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %1, i64 0, i32 4, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 0
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, %33
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %95

38:                                               ; preds = %31
  %39 = load i8, i8* %13, align 1, !range !2
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %45, label %41

41:                                               ; preds = %38
  %42 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 2
  %43 = load i8, i8* %42, align 8, !range !2
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %45, label %95

45:                                               ; preds = %41, %38
  %46 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 4
  %47 = load i8, i8* %46, align 2, !range !2
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %59, label %49

49:                                               ; preds = %45
  br i1 %40, label %50, label %55

50:                                               ; preds = %49
  %51 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = and i32 %52, %33
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %95, label %59

55:                                               ; preds = %49
  %56 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 3
  %57 = load i8, i8* %56, align 1, !range !2
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %95, label %59

59:                                               ; preds = %50, %55, %45
  br i1 %15, label %74, label %60

60:                                               ; preds = %59
  %61 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %1, i64 0, i32 11
  %62 = load i64, i64* %61, align 8
  %63 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 89
  %64 = load i64, i64* %63, align 8
  %65 = icmp eq i64 %64, 9223372034707292159
  %66 = icmp sgt i64 %64, %62
  %67 = or i1 %65, %66
  br i1 %67, label %68, label %95

68:                                               ; preds = %60
  %69 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 90
  %70 = load i64, i64* %69, align 8
  %71 = icmp ne i64 %70, 9223372034707292159
  %72 = icmp sge i64 %70, %62
  %73 = and i1 %72, %71
  br i1 %73, label %95, label %74

74:                                               ; preds = %68, %59
  %75 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 7
  tail call void @_ZN10StringList6RewindEv(%class.StringList* %75) #11
  %76 = tail call i32* @_ZN10StringList9GetStringEv(%class.StringList* %75) #11
  %77 = icmp eq i32* %76, null
  br i1 %77, label %95, label %78

78:                                               ; preds = %74, %91
  %79 = phi i32* [ %93, %91 ], [ %76, %74 ]
  %80 = phi i32 [ %92, %91 ], [ 1, %74 ]
  %81 = tail call zeroext i1 @_Z7CmpNamePKwS0_i(i32* nonnull %79, i32* %16, i32 %3) #11
  br i1 %81, label %82, label %91

82:                                               ; preds = %78
  %83 = icmp eq i8* %2, null
  br i1 %83, label %88, label %84

84:                                               ; preds = %82
  %85 = tail call i32 @_Z9wcsicompcPKwS0_(i32* nonnull %79, i32* %16) #11
  %86 = icmp eq i32 %85, 0
  %87 = zext i1 %86 to i8
  store i8 %87, i8* %2, align 1
  br label %88

88:                                               ; preds = %82, %84
  br i1 %8, label %89, label %95

89:                                               ; preds = %88
  %90 = zext i32 %6 to i64
  tail call void @_Z8wcsncpyzPwPKwm(i32* nonnull %5, i32* nonnull %79, i64 %90) #11
  br label %95

91:                                               ; preds = %78
  %92 = add nuw nsw i32 %80, 1
  %93 = tail call i32* @_ZN10StringList9GetStringEv(%class.StringList* %75) #11
  %94 = icmp eq i32* %93, null
  br i1 %94, label %95, label %78

95:                                               ; preds = %91, %74, %23, %88, %89, %60, %12, %68, %50, %55, %31, %41, %26
  %96 = phi i32 [ 0, %23 ], [ 0, %26 ], [ 0, %41 ], [ 0, %31 ], [ 0, %55 ], [ 0, %50 ], [ 0, %68 ], [ 0, %12 ], [ 0, %60 ], [ %80, %89 ], [ %80, %88 ], [ 0, %74 ], [ 0, %91 ]
  ret i32 %96
}

declare i32* @_ZN10StringList9GetStringEv(%class.StringList*) local_unnamed_addr #2

declare i32 @_Z9wcsicompcPKwS0_(i32*, i32*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CommandData16SetStoreTimeModeEPKw(%class.CommandData* nocapture, i32* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = load i32, i32* %1, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %14, label %5

5:                                                ; preds = %2
  %6 = tail call zeroext i1 @_Z7IsDigiti(i32 %3) #11
  %7 = load i32, i32* %1, align 4
  br i1 %6, label %9, label %8

8:                                                ; preds = %5
  switch i32 %7, label %21 [
    i32 45, label %9
    i32 43, label %9
  ]

9:                                                ; preds = %5, %8, %8
  %10 = icmp eq i32 %7, 49
  %11 = select i1 %10, i32 1, i32 2
  %12 = icmp eq i32 %7, 45
  %13 = select i1 %12, i32 0, i32 %11
  br label %14

14:                                               ; preds = %9, %2
  %15 = phi i32 [ 2, %2 ], [ %13, %9 ]
  %16 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 102
  store i32 %15, i32* %16, align 8
  %17 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 101
  store i32 %15, i32* %17, align 4
  %18 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 100
  store i32 %15, i32* %18, align 8
  %19 = getelementptr inbounds i32, i32* %1, i64 1
  %20 = load i32, i32* %19, align 4
  br label %21

21:                                               ; preds = %8, %14
  %22 = phi i32 [ %20, %14 ], [ %7, %8 ]
  %23 = phi i32* [ %19, %14 ], [ %1, %8 ]
  %24 = icmp eq i32 %22, 0
  br i1 %24, label %47, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 103
  %27 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 102
  %28 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 101
  %29 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 100
  br label %30

30:                                               ; preds = %25, %44
  %31 = phi i32 [ %22, %25 ], [ %45, %44 ]
  %32 = phi i32* [ %23, %25 ], [ %33, %44 ]
  %33 = getelementptr inbounds i32, i32* %32, i64 1
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 45
  %36 = select i1 %35, i32 0, i32 2
  %37 = icmp eq i32 %34, 49
  %38 = select i1 %37, i32 1, i32 %36
  %39 = tail call i32 @_Z8toupperwi(i32 %31) #11
  switch i32 %39, label %44 [
    i32 77, label %40
    i32 67, label %41
    i32 65, label %42
    i32 80, label %43
  ]

40:                                               ; preds = %30
  store i32 %38, i32* %29, align 8
  br label %44

41:                                               ; preds = %30
  store i32 %38, i32* %28, align 4
  br label %44

42:                                               ; preds = %30
  store i32 %38, i32* %27, align 8
  br label %44

43:                                               ; preds = %30
  store i8 1, i8* %26, align 4
  br label %44

44:                                               ; preds = %30, %43, %42, %41, %40
  %45 = load i32, i32* %33, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %30

47:                                               ; preds = %44, %21
  ret void
}

declare zeroext i1 @_Z7IsDigiti(i32) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN11CommandData8OutTitleEv(%class.CommandData* nocapture) local_unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN11CommandData7OutHelpE8RAR_EXIT(%class.CommandData* nocapture, i32) local_unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CommandDataC2Ev(%class.CommandData*) unnamed_addr #0 align 2 {
  %2 = bitcast %class.CommandData* %0 to %class.RAROptions*
  tail call void @_ZN10RAROptionsC2Ev(%class.RAROptions* %2) #11
  %3 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 7
  tail call void @_ZN10StringListC1Ev(%class.StringList* %3) #11
  %4 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 8
  tail call void @_ZN10StringListC1Ev(%class.StringList* %4) #11
  %5 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 9
  tail call void @_ZN10StringListC1Ev(%class.StringList* %5) #11
  %6 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 10
  tail call void @_ZN10StringListC1Ev(%class.StringList* %6) #11
  %7 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 11
  tail call void @_ZN10StringListC1Ev(%class.StringList* %7) #11
  tail call void @_ZN11CommandData4InitEv(%class.CommandData* %0)
  ret void
}

declare void @_ZN10RAROptionsC2Ev(%class.RAROptions*) unnamed_addr #2

declare void @_ZN10StringListC1Ev(%class.StringList*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CommandData4InitEv(%class.CommandData*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %class.CommandData* %0 to %class.RAROptions*
  tail call void @_ZN10RAROptions4InitEv(%class.RAROptions* %2) #11
  %3 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 5, i64 0
  store i32 0, i32* %3, align 8
  %4 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 6, i64 0
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 1
  store i8 0, i8* %5, align 4
  %6 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 2
  store i8 0, i8* %6, align 1
  %7 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 3
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 4
  store i8 0, i8* %8, align 4
  %9 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 7
  tail call void @_ZN10StringList5ResetEv(%class.StringList* %9) #11
  %10 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 8
  tail call void @_ZN10StringList5ResetEv(%class.StringList* %10) #11
  %11 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 9
  tail call void @_ZN10StringList5ResetEv(%class.StringList* %11) #11
  %12 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 11
  tail call void @_ZN10StringList5ResetEv(%class.StringList* %12) #11
  %13 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 10
  tail call void @_ZN10StringList5ResetEv(%class.StringList* %13) #11
  %14 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 49, i32 0
  %15 = load i64*, i64** %14, align 8
  %16 = icmp eq i64* %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %1
  %18 = bitcast i64* %15 to i8*
  tail call void @free(i8* %18) #11
  store i64* null, i64** %14, align 8
  br label %19

19:                                               ; preds = %1, %17
  %20 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 49, i32 1
  %21 = bitcast i64* %20 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #11
  ret void
}

declare void @_ZN10RAROptions4InitEv(%class.RAROptions*) local_unnamed_addr #2

declare void @_ZN10StringList5ResetEv(%class.StringList*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CommandData16ParseCommandLineEbiPPc(%class.CommandData*, i1 zeroext, i32, i8** nocapture readonly) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.Array.0, align 8
  %6 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 5, i64 0
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 2
  store i8 0, i8* %7, align 1
  %8 = bitcast %class.Array.0* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %8) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 40, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 33, i1 false) #11
  %9 = icmp sgt i32 %2, 1
  br i1 %9, label %10, label %15

10:                                               ; preds = %4
  %11 = getelementptr inbounds %class.Array.0, %class.Array.0* %5, i64 0, i32 2
  %12 = getelementptr inbounds %class.Array.0, %class.Array.0* %5, i64 0, i32 1
  %13 = getelementptr inbounds %class.Array.0, %class.Array.0* %5, i64 0, i32 0
  %14 = zext i32 %2 to i64
  br label %16

15:                                               ; preds = %38, %4
  br i1 %1, label %68, label %43

16:                                               ; preds = %41, %10
  %17 = phi i64 [ 0, %10 ], [ %42, %41 ]
  %18 = phi i64 [ 1, %10 ], [ %39, %41 ]
  %19 = getelementptr inbounds i8*, i8** %3, i64 %18
  %20 = load i8*, i8** %19, align 8
  %21 = call i64 @strlen(i8* %20) #12
  %22 = add i64 %21, 1
  %23 = icmp ult i64 %17, %22
  br i1 %23, label %24, label %29

24:                                               ; preds = %16
  %25 = load i64, i64* %12, align 8
  %26 = sub i64 %22, %25
  call void @_ZN5ArrayIwE3AddEm(%class.Array.0* nonnull %5, i64 %26) #11
  %27 = load i8*, i8** %19, align 8
  %28 = load i64, i64* %12, align 8
  br label %30

29:                                               ; preds = %16
  store i64 %22, i64* %12, align 8
  br label %30

30:                                               ; preds = %24, %29
  %31 = phi i64 [ %28, %24 ], [ %22, %29 ]
  %32 = phi i8* [ %27, %24 ], [ %20, %29 ]
  %33 = load i32*, i32** %13, align 8
  %34 = call zeroext i1 @_Z10CharToWidePKcPwm(i8* %32, i32* %33, i64 %31) #11
  %35 = load i32*, i32** %13, align 8
  br i1 %1, label %36, label %37

36:                                               ; preds = %30
  call void @_ZN11CommandData13PreprocessArgEPKw(%class.CommandData* %0, i32* %35)
  br label %38

37:                                               ; preds = %30
  call void @_ZN11CommandData8ParseArgEPw(%class.CommandData* %0, i32* %35)
  br label %38

38:                                               ; preds = %36, %37
  %39 = add nuw nsw i64 %18, 1
  %40 = icmp eq i64 %39, %14
  br i1 %40, label %15, label %41

41:                                               ; preds = %38
  %42 = load i64, i64* %11, align 8
  br label %16

43:                                               ; preds = %15
  %44 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 7
  %45 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 7, i32 2
  %46 = load i64, i64* %45, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %53

48:                                               ; preds = %43
  %49 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 1
  %50 = load i8, i8* %49, align 4, !range !2
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %48
  call void @_ZN10StringList9AddStringEPKw(%class.StringList* %44, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @.str, i64 0, i64 0)) #11
  br label %53

53:                                               ; preds = %52, %48, %43
  %54 = load i32, i32* %6, align 8
  %55 = call i32 @_Z8toupperwi(i32 %54) #11
  switch i32 %55, label %68 [
    i32 88, label %56
    i32 69, label %56
    i32 80, label %56
    i32 86, label %62
    i32 76, label %62
  ]

56:                                               ; preds = %53, %53, %53
  %57 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 92
  %58 = load i8, i8* %57, align 1, !range !2
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %61, label %60

60:                                               ; preds = %56
  store i8 0, i8* %57, align 1
  br label %61

61:                                               ; preds = %60, %56
  switch i32 %55, label %68 [
    i32 86, label %62
    i32 76, label %62
  ]

62:                                               ; preds = %61, %61, %53, %53
  %63 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 5, i64 1
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, 66
  br i1 %65, label %66, label %68

66:                                               ; preds = %62
  %67 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 4
  store i8 1, i8* %67, align 4
  br label %68

68:                                               ; preds = %66, %62, %61, %53, %15
  %69 = getelementptr inbounds %class.Array.0, %class.Array.0* %5, i64 0, i32 0
  %70 = load i32*, i32** %69, align 8
  %71 = icmp eq i32* %70, null
  %72 = bitcast i32* %70 to i8*
  br i1 %71, label %85, label %73

73:                                               ; preds = %68
  %74 = getelementptr inbounds %class.Array.0, %class.Array.0* %5, i64 0, i32 4
  %75 = load i8, i8* %74, align 8, !range !2
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %83, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds %class.Array.0, %class.Array.0* %5, i64 0, i32 2
  %79 = load i64, i64* %78, align 8
  %80 = shl i64 %79, 2
  call void @_Z9cleandataPvm(i8* nonnull %72, i64 %80) #11
  %81 = bitcast %class.Array.0* %5 to i8**
  %82 = load i8*, i8** %81, align 8
  br label %83

83:                                               ; preds = %77, %73
  %84 = phi i8* [ %82, %77 ], [ %72, %73 ]
  call void @free(i8* %84) #11
  br label %85

85:                                               ; preds = %68, %83
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %8) #11
  ret void
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

declare zeroext i1 @_Z10CharToWidePKcPwm(i8*, i32*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CommandData13PreprocessArgEPKw(%class.CommandData*, i32*) local_unnamed_addr #0 align 2 {
  %3 = load i32, i32* %1, align 4
  %4 = icmp eq i32 %3, 45
  br i1 %4, label %5, label %40

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 2
  %7 = load i8, i8* %6, align 1, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %40

9:                                                ; preds = %5
  %10 = getelementptr inbounds i32, i32* %1, i64 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 45
  br i1 %12, label %13, label %18

13:                                               ; preds = %9
  %14 = getelementptr inbounds i32, i32* %1, i64 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %13
  store i8 1, i8* %6, align 1
  br label %18

18:                                               ; preds = %17, %13, %9
  %19 = tail call i32 @_Z8wcsicompPKwS0_(i32* %10, i32* getelementptr inbounds ([5 x i32], [5 x i32]* @.str.5, i64 0, i64 0)) #11
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %18
  %22 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 10
  store i8 1, i8* %22, align 4
  br label %23

23:                                               ; preds = %21, %18
  %24 = tail call i32 @_Z9wcsnicompPKwS0_m(i32* %10, i32* getelementptr inbounds ([5 x i32], [5 x i32]* @.str.6, i64 0, i64 0), i64 4) #11
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %30

26:                                               ; preds = %23
  tail call void @_ZN11CommandData13ProcessSwitchEPKw(%class.CommandData* %0, i32* %10)
  %27 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 23, i64 0
  %28 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 16
  %29 = load i32, i32* %28, align 8
  tail call void @_Z14InitLogOptionsPKw11RAR_CHARSET(i32* %27, i32 %29) #11
  br label %30

30:                                               ; preds = %26, %23
  %31 = tail call i32 @_Z9wcsnicompPKwS0_m(i32* %10, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @.str.7, i64 0, i64 0), i64 2) #11
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %46

33:                                               ; preds = %30
  tail call void @_ZN11CommandData13ProcessSwitchEPKw(%class.CommandData* %0, i32* %10)
  %34 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 23, i64 0
  %35 = load i32, i32* %34, align 8
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %46, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 16
  %39 = load i32, i32* %38, align 8
  tail call void @_Z14InitLogOptionsPKw11RAR_CHARSET(i32* %34, i32 %39) #11
  br label %46

40:                                               ; preds = %5, %2
  %41 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 5, i64 0
  %42 = load i32, i32* %41, align 8
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %40
  %45 = tail call i32* @wcsncpy(i32* %41, i32* %1, i64 2064) #11
  br label %46

46:                                               ; preds = %33, %40, %44, %30, %37
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CommandData8ParseArgEPw(%class.CommandData*, i32*) local_unnamed_addr #0 align 2 {
  %3 = alloca %struct.FindData, align 8
  %4 = load i32, i32* %1, align 4
  %5 = icmp eq i32 %4, 45
  br i1 %5, label %6, label %20

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 2
  %8 = load i8, i8* %7, align 1, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %20

10:                                               ; preds = %6
  %11 = getelementptr inbounds i32, i32* %1, i64 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 45
  br i1 %13, label %14, label %19

14:                                               ; preds = %10
  %15 = getelementptr inbounds i32, i32* %1, i64 2
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %14
  store i8 1, i8* %7, align 1
  br label %113

19:                                               ; preds = %14, %10
  tail call void @_ZN11CommandData13ProcessSwitchEPKw(%class.CommandData* %0, i32* %11)
  br label %113

20:                                               ; preds = %6, %2
  %21 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 5, i64 0
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %29

24:                                               ; preds = %20
  tail call void @_Z8wcsncpyzPwPKwm(i32* %21, i32* %1, i64 2064) #11
  %25 = load i32, i32* %21, align 8
  %26 = tail call i32 @_Z8toupperwi(i32 %25) #11
  store i32 %26, i32* %21, align 8
  switch i32 %26, label %27 [
    i32 73, label %113
    i32 83, label %113
  ]

27:                                               ; preds = %24
  %28 = tail call i32* @_Z8wcsupperPw(i32* %21) #11
  br label %113

29:                                               ; preds = %20
  %30 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 6, i64 0
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %29
  tail call void @_Z8wcsncpyzPwPKwm(i32* %30, i32* %1, i64 2048) #11
  br label %113

34:                                               ; preds = %29
  %35 = tail call i64 @wcslen(i32* %1) #12
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %41, label %37

37:                                               ; preds = %34
  %38 = add i64 %35, -1
  %39 = getelementptr inbounds i32, i32* %1, i64 %38
  %40 = load i32, i32* %39, align 4
  br label %41

41:                                               ; preds = %34, %37
  %42 = phi i32 [ %40, %37 ], [ 0, %34 ]
  %43 = tail call zeroext i1 @_Z10IsDriveDivi(i32 %42) #11
  br i1 %43, label %47, label %44

44:                                               ; preds = %41
  %45 = tail call zeroext i1 @_Z9IsPathDivi(i32 %42) #11
  %46 = xor i1 %45, true
  br label %47

47:                                               ; preds = %44, %41
  %48 = phi i1 [ false, %41 ], [ %46, %44 ]
  %49 = load i32, i32* %21, align 8
  %50 = tail call i32 @_Z8toupperwi(i32 %49) #11
  %51 = tail call i32* @wcschr(i32* getelementptr inbounds ([5 x i32], [5 x i32]* @.str.3, i64 0, i64 0), i32 signext %50) #12
  %52 = icmp ne i32* %51, null
  %53 = icmp eq i32 %50, 82
  br i1 %53, label %54, label %58

54:                                               ; preds = %47
  %55 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 5, i64 1
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 0
  br label %58

58:                                               ; preds = %54, %47
  %59 = phi i1 [ false, %47 ], [ %57, %54 ]
  %60 = or i1 %48, %52
  br i1 %60, label %63, label %61

61:                                               ; preds = %58
  %62 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 12, i64 0
  tail call void @_Z8wcsncpyzPwPKwm(i32* %62, i32* %1, i64 2048) #11
  br label %113

63:                                               ; preds = %58
  %64 = icmp eq i32 %50, 84
  %65 = or i1 %64, %52
  br i1 %65, label %66, label %75

66:                                               ; preds = %63
  %67 = load i32, i32* %1, align 4
  %68 = icmp eq i32 %67, 64
  br i1 %68, label %69, label %73

69:                                               ; preds = %66
  %70 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 3
  %71 = load i32, i32* %70, align 8
  %72 = icmp eq i32 %71, 1
  br i1 %72, label %73, label %75

73:                                               ; preds = %66, %69
  %74 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 7
  tail call void @_ZN10StringList9AddStringEPKw(%class.StringList* %74, i32* %1) #11
  br label %113

75:                                               ; preds = %63, %69
  %76 = bitcast %struct.FindData* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8240, i8* nonnull %76) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %76, i8 -86, i64 8240, i1 false)
  %77 = getelementptr inbounds %struct.FindData, %struct.FindData* %3, i64 0, i32 6, i32 0
  %78 = bitcast i64* %77 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 24, i1 false) #11
  %79 = call zeroext i1 @_ZN8FindFile8FastFindEPKwP8FindDatab(i32* %1, %struct.FindData* nonnull %3, i1 zeroext false) #11
  %80 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = icmp eq i32 %81, 2
  br i1 %83, label %86, label %99

84:                                               ; preds = %75
  %85 = icmp eq i32 %81, 1
  br i1 %85, label %110, label %86

86:                                               ; preds = %82, %84
  %87 = load i32, i32* %1, align 4
  %88 = icmp eq i32 %87, 64
  br i1 %88, label %89, label %98

89:                                               ; preds = %86
  %90 = getelementptr inbounds i32, i32* %1, i64 1
  %91 = call zeroext i1 @_Z10IsWildcardPKw(i32* %90) #11
  br i1 %91, label %98, label %92

92:                                               ; preds = %89
  %93 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 1
  store i8 1, i8* %93, align 4
  %94 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 7
  %95 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 15
  %96 = load i32, i32* %95, align 4
  %97 = call zeroext i1 @_Z12ReadTextFilePKwP10StringListbb11RAR_CHARSETbbb(i32* %90, %class.StringList* %94, i1 zeroext false, i1 zeroext true, i32 %96, i1 zeroext true, i1 zeroext true, i1 zeroext true) #11
  br label %112

98:                                               ; preds = %89, %86
  br i1 %79, label %99, label %110

99:                                               ; preds = %82, %98
  %100 = getelementptr inbounds %struct.FindData, %struct.FindData* %3, i64 0, i32 3
  %101 = load i8, i8* %100, align 4, !range !2
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %110, label %103

103:                                              ; preds = %99
  switch i32 %50, label %104 [
    i32 88, label %105
    i32 69, label %105
  ]

104:                                              ; preds = %103
  br i1 %59, label %105, label %110

105:                                              ; preds = %103, %103, %104
  %106 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 12, i64 0
  %107 = load i32, i32* %106, align 8
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %110

109:                                              ; preds = %105
  call void @_Z8wcsncpyzPwPKwm(i32* %106, i32* %1, i64 2048) #11
  call void @_Z11AddEndSlashPwm(i32* %106, i64 2048) #11
  br label %112

110:                                              ; preds = %84, %99, %105, %104, %98
  %111 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 7
  call void @_ZN10StringList9AddStringEPKw(%class.StringList* %111, i32* %1) #11
  br label %112

112:                                              ; preds = %109, %110, %92
  call void @llvm.lifetime.end.p0i8(i64 8240, i8* nonnull %76) #11
  br label %113

113:                                              ; preds = %61, %112, %73, %24, %24, %27, %33, %18, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CommandData9ParseDoneEv(%class.CommandData*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 7
  %3 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 7, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %6, label %11

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 1
  %8 = load i8, i8* %7, align 4, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %11

10:                                               ; preds = %6
  tail call void @_ZN10StringList9AddStringEPKw(%class.StringList* %2, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @.str, i64 0, i64 0)) #11
  br label %11

11:                                               ; preds = %6, %10, %1
  %12 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 5, i64 0
  %13 = load i32, i32* %12, align 8
  %14 = tail call i32 @_Z8toupperwi(i32 %13) #11
  switch i32 %14, label %27 [
    i32 88, label %15
    i32 69, label %15
    i32 80, label %15
    i32 86, label %21
    i32 76, label %21
  ]

15:                                               ; preds = %11, %11, %11
  %16 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 92
  %17 = load i8, i8* %16, align 1, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %20, label %19

19:                                               ; preds = %15
  store i8 0, i8* %16, align 1
  br label %20

20:                                               ; preds = %15, %19
  switch i32 %14, label %27 [
    i32 86, label %21
    i32 76, label %21
  ]

21:                                               ; preds = %11, %11, %20, %20
  %22 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 5, i64 1
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 66
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  %26 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 4
  store i8 1, i8* %26, align 4
  br label %27

27:                                               ; preds = %11, %20, %25, %21
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN11CommandData8IsSwitchEi(%class.CommandData* nocapture readnone, i32) local_unnamed_addr #3 align 2 {
  %3 = icmp eq i32 %1, 45
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CommandData13ProcessSwitchEPKw(%class.CommandData*, i32*) local_unnamed_addr #0 align 2 {
  %3 = alloca [1024 x i32], align 16
  %4 = alloca [2048 x i32], align 16
  %5 = load i32, i32* %1, align 4
  %6 = tail call i32 @_Z8toupperwi(i32 %5) #11
  switch i32 %6, label %687 [
    i32 64, label %7
    i32 65, label %13
    i32 67, label %58
    i32 68, label %72
    i32 69, label %86
    i32 70, label %162
    i32 72, label %170
    i32 73, label %193
    i32 75, label %286
    i32 77, label %294
    i32 78, label %419
    i32 88, label %419
    i32 79, label %440
    i32 80, label %466
    i32 81, label %477
    i32 82, label %496
    i32 83, label %528
    i32 84, label %623
    i32 85, label %647
    i32 86, label %655
    i32 87, label %675
    i32 89, label %678
    i32 90, label %680
    i32 63, label %689
  ]

7:                                                ; preds = %2
  %8 = getelementptr inbounds i32, i32* %1, i64 1
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 43
  %11 = select i1 %10, i32 2, i32 1
  %12 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 3
  store i32 %11, i32* %12, align 8
  br label %689

13:                                               ; preds = %2
  %14 = getelementptr inbounds i32, i32* %1, i64 1
  %15 = load i32, i32* %14, align 4
  %16 = tail call i32 @_Z8toupperwi(i32 %15) #11
  switch i32 %16, label %56 [
    i32 67, label %17
    i32 68, label %19
    i32 71, label %28
    i32 73, label %47
    i32 78, label %689
    i32 79, label %49
    i32 80, label %51
    i32 83, label %54
  ]

17:                                               ; preds = %13
  %18 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 39
  store i8 1, i8* %18, align 4
  br label %689

19:                                               ; preds = %13
  %20 = getelementptr inbounds i32, i32* %1, i64 2
  %21 = load i32, i32* %20, align 4
  switch i32 %21, label %689 [
    i32 0, label %22
    i32 49, label %24
    i32 50, label %26
  ]

22:                                               ; preds = %19
  %23 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 98
  store i32 1, i32* %23, align 8
  br label %689

24:                                               ; preds = %19
  %25 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 98
  store i32 2, i32* %25, align 8
  br label %689

26:                                               ; preds = %19
  %27 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 98
  store i32 3, i32* %27, align 8
  br label %689

28:                                               ; preds = %13
  %29 = getelementptr inbounds i32, i32* %1, i64 2
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 45
  br i1 %31, label %32, label %38

32:                                               ; preds = %28
  %33 = getelementptr inbounds i32, i32* %1, i64 3
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %38

36:                                               ; preds = %32
  %37 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 66
  store i8 0, i8* %37, align 1
  br label %689

38:                                               ; preds = %32, %28
  %39 = tail call i32 @_Z8toupperwi(i32 %30) #11
  %40 = icmp eq i32 %39, 70
  br i1 %40, label %41, label %44

41:                                               ; preds = %38
  %42 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 68, i64 0
  %43 = getelementptr inbounds i32, i32* %1, i64 3
  tail call void @_Z8wcsncpyzPwPKwm(i32* %42, i32* %43, i64 128) #11
  br label %689

44:                                               ; preds = %38
  %45 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 66
  store i8 1, i8* %45, align 1
  %46 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 67, i64 0
  tail call void @_Z8wcsncpyzPwPKwm(i32* %46, i32* %29, i64 128) #11
  br label %689

47:                                               ; preds = %13
  %48 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 73
  store i8 1, i8* %48, align 4
  br label %689

49:                                               ; preds = %13
  %50 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 40
  store i8 1, i8* %50, align 1
  br label %689

51:                                               ; preds = %13
  %52 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 18, i64 0
  %53 = getelementptr inbounds i32, i32* %1, i64 2
  tail call void @_Z8wcsncpyzPwPKwm(i32* %52, i32* %53, i64 2048) #11
  br label %689

54:                                               ; preds = %13
  %55 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 69
  store i8 1, i8* %55, align 8
  br label %689

56:                                               ; preds = %13
  %57 = tail call i32* @_Z2StPKw(i32* getelementptr inbounds ([27 x i32], [27 x i32]* @.str.26, i64 0, i64 0)) #11
  tail call void @_ZN12ErrorHandler4ExitE8RAR_EXIT(%class.ErrorHandler* nonnull @ErrHandler, i32 7) #11
  br label %689

58:                                               ; preds = %2
  %59 = getelementptr inbounds i32, i32* %1, i64 2
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %689

62:                                               ; preds = %58
  %63 = getelementptr inbounds i32, i32* %1, i64 1
  %64 = load i32, i32* %63, align 4
  %65 = tail call i32 @_Z8toupperwi(i32 %64) #11
  switch i32 %65, label %689 [
    i32 45, label %66
    i32 85, label %68
    i32 76, label %70
  ]

66:                                               ; preds = %62
  %67 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 41
  store i8 1, i8* %67, align 2
  br label %689

68:                                               ; preds = %62
  %69 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 56
  store i32 1, i32* %69, align 4
  br label %689

70:                                               ; preds = %62
  %71 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 56
  store i32 2, i32* %71, align 4
  br label %689

72:                                               ; preds = %2
  %73 = getelementptr inbounds i32, i32* %1, i64 2
  %74 = load i32, i32* %73, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %689

76:                                               ; preds = %72
  %77 = getelementptr inbounds i32, i32* %1, i64 1
  %78 = load i32, i32* %77, align 4
  %79 = tail call i32 @_Z8toupperwi(i32 %78) #11
  switch i32 %79, label %689 [
    i32 83, label %80
    i32 72, label %82
    i32 70, label %84
  ]

80:                                               ; preds = %76
  %81 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 53
  store i8 1, i8* %81, align 2
  br label %689

82:                                               ; preds = %76
  %83 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 64
  store i8 1, i8* %83, align 1
  br label %689

84:                                               ; preds = %76
  %85 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 65
  store i8 1, i8* %85, align 2
  br label %689

86:                                               ; preds = %2
  %87 = getelementptr inbounds i32, i32* %1, i64 1
  %88 = load i32, i32* %87, align 4
  %89 = tail call i32 @_Z8toupperwi(i32 %88) #11
  %90 = icmp eq i32 %89, 80
  br i1 %90, label %91, label %102

91:                                               ; preds = %86
  %92 = getelementptr inbounds i32, i32* %1, i64 2
  %93 = load i32, i32* %92, align 4
  switch i32 %93, label %689 [
    i32 0, label %94
    i32 49, label %96
    i32 50, label %98
    i32 51, label %100
  ]

94:                                               ; preds = %91
  %95 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 45
  store i32 1, i32* %95, align 4
  br label %689

96:                                               ; preds = %91
  %97 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 45
  store i32 2, i32* %97, align 4
  br label %689

98:                                               ; preds = %91
  %99 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 45
  store i32 3, i32* %99, align 4
  br label %689

100:                                              ; preds = %91
  %101 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 45
  store i32 4, i32* %101, align 4
  br label %689

102:                                              ; preds = %86
  %103 = load i32, i32* %87, align 4
  %104 = icmp eq i32 %103, 43
  br i1 %104, label %105, label %135

105:                                              ; preds = %102
  %106 = getelementptr inbounds i32, i32* %1, i64 2
  %107 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 3
  %108 = load i32, i32* %106, align 4
  %109 = tail call zeroext i1 @_Z7IsDigiti(i32 %108) #11
  br i1 %109, label %113, label %110

110:                                              ; preds = %105
  %111 = load i32, i32* %106, align 4
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %129, label %116

113:                                              ; preds = %105
  %114 = tail call i64 @wcstol(i32* %106, i32** null, i32 0) #11
  %115 = trunc i64 %114 to i32
  br label %129

116:                                              ; preds = %110, %124
  %117 = phi i32 [ %127, %124 ], [ %111, %110 ]
  %118 = phi i32 [ %125, %124 ], [ 0, %110 ]
  %119 = phi i32* [ %126, %124 ], [ %106, %110 ]
  %120 = tail call i32 @_Z8toupperwi(i32 %117) #11
  switch i32 %120, label %124 [
    i32 68, label %121
    i32 86, label %122
  ]

121:                                              ; preds = %116
  store i8 1, i8* %107, align 1
  br label %124

122:                                              ; preds = %116
  %123 = or i32 %118, 8192
  br label %124

124:                                              ; preds = %122, %121, %116
  %125 = phi i32 [ %118, %116 ], [ %123, %122 ], [ %118, %121 ]
  %126 = getelementptr inbounds i32, i32* %119, i64 1
  %127 = load i32, i32* %126, align 4
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %116

129:                                              ; preds = %124, %110, %113
  %130 = phi i32 [ %115, %113 ], [ 0, %110 ], [ %125, %124 ]
  %131 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 1
  %132 = load i32, i32* %131, align 4
  %133 = or i32 %132, %130
  store i32 %133, i32* %131, align 4
  %134 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 4
  store i8 1, i8* %134, align 2
  br label %689

135:                                              ; preds = %102
  %136 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 2
  %137 = tail call zeroext i1 @_Z7IsDigiti(i32 %103) #11
  br i1 %137, label %141, label %138

138:                                              ; preds = %135
  %139 = load i32, i32* %87, align 4
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %157, label %144

141:                                              ; preds = %135
  %142 = tail call i64 @wcstol(i32* %87, i32** null, i32 0) #11
  %143 = trunc i64 %142 to i32
  br label %157

144:                                              ; preds = %138, %152
  %145 = phi i32 [ %155, %152 ], [ %139, %138 ]
  %146 = phi i32 [ %153, %152 ], [ 0, %138 ]
  %147 = phi i32* [ %154, %152 ], [ %87, %138 ]
  %148 = tail call i32 @_Z8toupperwi(i32 %145) #11
  switch i32 %148, label %152 [
    i32 68, label %149
    i32 86, label %150
  ]

149:                                              ; preds = %144
  store i8 1, i8* %136, align 1
  br label %152

150:                                              ; preds = %144
  %151 = or i32 %146, 8192
  br label %152

152:                                              ; preds = %150, %149, %144
  %153 = phi i32 [ %146, %144 ], [ %151, %150 ], [ %146, %149 ]
  %154 = getelementptr inbounds i32, i32* %147, i64 1
  %155 = load i32, i32* %154, align 4
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %144

157:                                              ; preds = %152, %138, %141
  %158 = phi i32 [ %143, %141 ], [ 0, %138 ], [ %153, %152 ]
  %159 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 0
  %160 = load i32, i32* %159, align 8
  %161 = or i32 %160, %158
  store i32 %161, i32* %159, align 8
  br label %689

162:                                              ; preds = %2
  %163 = getelementptr inbounds i32, i32* %1, i64 1
  %164 = load i32, i32* %163, align 4
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %168

166:                                              ; preds = %162
  %167 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 42
  store i8 1, i8* %167, align 1
  br label %689

168:                                              ; preds = %162
  %169 = tail call i32* @_Z2StPKw(i32* getelementptr inbounds ([27 x i32], [27 x i32]* @.str.26, i64 0, i64 0)) #11
  tail call void @_ZN12ErrorHandler4ExitE8RAR_EXIT(%class.ErrorHandler* nonnull @ErrHandler, i32 7) #11
  br label %689

170:                                              ; preds = %2
  %171 = getelementptr inbounds i32, i32* %1, i64 1
  %172 = load i32, i32* %171, align 4
  %173 = tail call i32 @_Z8toupperwi(i32 %172) #11
  %174 = icmp eq i32 %173, 80
  br i1 %174, label %175, label %191

175:                                              ; preds = %170
  %176 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 20
  store i8 1, i8* %176, align 4
  %177 = getelementptr inbounds i32, i32* %1, i64 2
  %178 = load i32, i32* %177, align 4
  %179 = icmp eq i32 %178, 0
  %180 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 19
  br i1 %179, label %185, label %181

181:                                              ; preds = %175
  tail call void @_ZN11SecPassword3SetEPKw(%class.SecPassword* %180, i32* %177) #11
  %182 = bitcast i32* %1 to i8*
  %183 = tail call i64 @wcslen(i32* %1) #12
  %184 = shl i64 %183, 2
  tail call void @_Z9cleandataPvm(i8* %182, i64 %184) #11
  br label %689

185:                                              ; preds = %175
  %186 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 19, i32 1
  %187 = load i8, i8* %186, align 4, !range !2
  %188 = icmp eq i8 %187, 0
  br i1 %188, label %189, label %689

189:                                              ; preds = %185
  %190 = tail call zeroext i1 @_Z13uiGetPassword15UIPASSWORD_TYPEPKwP11SecPassword(i32 0, i32* null, %class.SecPassword* %180) #11
  br label %689

191:                                              ; preds = %170
  %192 = tail call i32* @_Z2StPKw(i32* getelementptr inbounds ([27 x i32], [27 x i32]* @.str.26, i64 0, i64 0)) #11
  tail call void @_ZN12ErrorHandler4ExitE8RAR_EXIT(%class.ErrorHandler* nonnull @ErrHandler, i32 7) #11
  br label %689

193:                                              ; preds = %2
  %194 = getelementptr inbounds i32, i32* %1, i64 1
  %195 = tail call i32 @_Z9wcsnicompPKwS0_m(i32* %194, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @.str.12, i64 0, i64 0), i64 3) #11
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %197, label %203

197:                                              ; preds = %193
  %198 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 23, i64 0
  %199 = getelementptr inbounds i32, i32* %1, i64 4
  %200 = load i32, i32* %199, align 4
  %201 = icmp eq i32 %200, 0
  %202 = select i1 %201, i32* getelementptr inbounds ([8 x i32], [8 x i32]* @.str.13, i64 0, i64 0), i32* %199
  tail call void @_Z8wcsncpyzPwPKwm(i32* %198, i32* %202, i64 2048) #11
  br label %689

203:                                              ; preds = %193
  %204 = tail call i32 @_Z9wcsnicompPKwS0_m(i32* %194, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @.str.14, i64 0, i64 0), i64 3) #11
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %206, label %212

206:                                              ; preds = %203
  %207 = getelementptr inbounds i32, i32* %1, i64 4
  %208 = load i32, i32* %207, align 4
  %209 = icmp eq i32 %208, 45
  %210 = select i1 %209, i32 2, i32 1
  %211 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 25
  store i32 %210, i32* %211, align 4
  br label %689

212:                                              ; preds = %203
  %213 = tail call i32 @_Z8wcsicompPKwS0_(i32* %194, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @.str.15, i64 0, i64 0)) #11
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %215, label %217

215:                                              ; preds = %212
  %216 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 24
  store i32 1, i32* %216, align 8
  tail call void @_Z19SetConsoleMsgStream12MESSAGE_TYPE(i32 1) #11
  br label %689

217:                                              ; preds = %212
  %218 = tail call i32 @_Z9wcsnicompPKwS0_m(i32* %194, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @.str.16, i64 0, i64 0), i64 3) #11
  %219 = icmp eq i32 %218, 0
  br i1 %219, label %220, label %226

220:                                              ; preds = %217
  %221 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 96, i64 0
  %222 = getelementptr inbounds i32, i32* %1, i64 4
  %223 = load i32, i32* %222, align 4
  %224 = icmp eq i32 %223, 0
  %225 = select i1 %224, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @.str.17, i64 0, i64 0), i32* %222
  tail call void @_Z8wcsncpyzPwPKwm(i32* %221, i32* %225, i64 2048) #11
  br label %689

226:                                              ; preds = %217
  %227 = tail call i32 @_Z8wcsicompPKwS0_(i32* %194, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @.str.18, i64 0, i64 0)) #11
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %229, label %231

229:                                              ; preds = %226
  %230 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 52
  store i8 1, i8* %230, align 1
  br label %689

231:                                              ; preds = %226
  %232 = tail call i32 @_Z8wcsicompPKwS0_(i32* %194, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @.str.19, i64 0, i64 0)) #11
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %234, label %236

234:                                              ; preds = %231
  %235 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 24
  store i32 3, i32* %235, align 8
  tail call void @_Z19SetConsoleMsgStream12MESSAGE_TYPE(i32 3) #11
  br label %689

236:                                              ; preds = %231
  %237 = load i32, i32* %194, align 4
  %238 = tail call i32 @_Z8toupperwi(i32 %237) #11
  %239 = icmp eq i32 %238, 68
  br i1 %239, label %240, label %267

240:                                              ; preds = %236
  %241 = getelementptr inbounds i32, i32* %1, i64 2
  %242 = load i32, i32* %241, align 4
  %243 = icmp eq i32 %242, 0
  br i1 %243, label %689, label %244

244:                                              ; preds = %240
  %245 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 52
  %246 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 34
  %247 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 31
  %248 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 33
  %249 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 32
  %250 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 24
  br label %251

251:                                              ; preds = %244, %261
  %252 = phi i32 [ %242, %244 ], [ %265, %261 ]
  %253 = phi i32 [ 2, %244 ], [ %262, %261 ]
  %254 = tail call i32 @_Z8toupperwi(i32 %252) #11
  switch i32 %254, label %261 [
    i32 81, label %255
    i32 67, label %256
    i32 68, label %257
    i32 80, label %258
    i32 78, label %259
    i32 86, label %260
  ]

255:                                              ; preds = %251
  store i32 2, i32* %250, align 8
  tail call void @_Z19SetConsoleMsgStream12MESSAGE_TYPE(i32 2) #11
  br label %261

256:                                              ; preds = %251
  store i8 1, i8* %249, align 1
  br label %261

257:                                              ; preds = %251
  store i8 1, i8* %248, align 2
  br label %261

258:                                              ; preds = %251
  store i8 1, i8* %247, align 4
  br label %261

259:                                              ; preds = %251
  store i8 1, i8* %246, align 1
  br label %261

260:                                              ; preds = %251
  store i8 1, i8* %245, align 1
  br label %261

261:                                              ; preds = %255, %256, %257, %258, %259, %260, %251
  %262 = add i32 %253, 1
  %263 = zext i32 %262 to i64
  %264 = getelementptr inbounds i32, i32* %1, i64 %263
  %265 = load i32, i32* %264, align 4
  %266 = icmp eq i32 %265, 0
  br i1 %266, label %689, label %251

267:                                              ; preds = %236
  %268 = tail call i32 @_Z9wcsnicompPKwS0_m(i32* %194, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @.str.20, i64 0, i64 0), i64 3) #11
  %269 = icmp eq i32 %268, 0
  br i1 %269, label %270, label %281

270:                                              ; preds = %267
  %271 = getelementptr inbounds i32, i32* %1, i64 4
  %272 = load i32, i32* %271, align 4
  switch i32 %272, label %689 [
    i32 0, label %273
    i32 49, label %273
    i32 50, label %275
    i32 51, label %277
    i32 52, label %279
  ]

273:                                              ; preds = %270, %270
  %274 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 99
  store i32 1, i32* %274, align 4
  br label %689

275:                                              ; preds = %270
  %276 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 99
  store i32 2, i32* %276, align 4
  br label %689

277:                                              ; preds = %270
  %278 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 99
  store i32 3, i32* %278, align 4
  br label %689

279:                                              ; preds = %270
  %280 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 99
  store i32 4, i32* %280, align 4
  br label %689

281:                                              ; preds = %267
  %282 = tail call i32 @_Z8wcsicompPKwS0_(i32* %194, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @.str.21, i64 0, i64 0)) #11
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %284, label %689

284:                                              ; preds = %281
  %285 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 35
  store i8 1, i8* %285, align 8
  br label %689

286:                                              ; preds = %2
  %287 = getelementptr inbounds i32, i32* %1, i64 1
  %288 = load i32, i32* %287, align 4
  %289 = tail call i32 @_Z8toupperwi(i32 %288) #11
  switch i32 %289, label %689 [
    i32 66, label %290
    i32 0, label %292
  ]

290:                                              ; preds = %286
  %291 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 63
  store i8 1, i8* %291, align 4
  br label %689

292:                                              ; preds = %286
  %293 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 91
  store i8 1, i8* %293, align 8
  br label %689

294:                                              ; preds = %2
  %295 = getelementptr inbounds i32, i32* %1, i64 1
  %296 = load i32, i32* %295, align 4
  %297 = tail call i32 @_Z8toupperwi(i32 %296) #11
  switch i32 %297, label %412 [
    i32 67, label %298
    i32 77, label %689
    i32 68, label %689
    i32 83, label %372
    i32 84, label %404
  ]

298:                                              ; preds = %294
  %299 = getelementptr inbounds i32, i32* %1, i64 2
  %300 = load i32, i32* %299, align 4
  switch i32 %300, label %318 [
    i32 45, label %301
    i32 0, label %689
  ]

301:                                              ; preds = %298
  %302 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 95, i64 0, i32 0
  store i32 3, i32* %302, align 4
  %303 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 95, i64 1, i32 0
  store i32 3, i32* %303, align 4
  %304 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 95, i64 2, i32 0
  store i32 3, i32* %304, align 4
  %305 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 95, i64 3, i32 0
  store i32 3, i32* %305, align 4
  %306 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 95, i64 4, i32 0
  store i32 3, i32* %306, align 4
  %307 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 95, i64 5, i32 0
  store i32 3, i32* %307, align 4
  %308 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 95, i64 6, i32 0
  store i32 3, i32* %308, align 4
  %309 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 95, i64 7, i32 0
  store i32 3, i32* %309, align 4
  %310 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 95, i64 8, i32 0
  store i32 3, i32* %310, align 4
  %311 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 95, i64 9, i32 0
  store i32 3, i32* %311, align 4
  %312 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 95, i64 10, i32 0
  store i32 3, i32* %312, align 4
  %313 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 95, i64 11, i32 0
  store i32 3, i32* %313, align 4
  %314 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 95, i64 12, i32 0
  store i32 3, i32* %314, align 4
  %315 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 95, i64 13, i32 0
  store i32 3, i32* %315, align 4
  %316 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 95, i64 14, i32 0
  store i32 3, i32* %316, align 4
  %317 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 95, i64 15, i32 0
  store i32 3, i32* %317, align 4
  br label %689

318:                                              ; preds = %298, %364
  %319 = phi i32* [ %365, %364 ], [ %299, %298 ]
  %320 = phi i32 [ %370, %364 ], [ %300, %298 ]
  %321 = tail call zeroext i1 @_Z7IsDigiti(i32 %320) #11
  br i1 %321, label %322, label %329

322:                                              ; preds = %318
  %323 = tail call i32 @_Z5atoiwPKw(i32* %319) #11
  br label %324

324:                                              ; preds = %324, %322
  %325 = phi i32* [ %319, %322 ], [ %328, %324 ]
  %326 = load i32, i32* %325, align 4
  %327 = tail call zeroext i1 @_Z7IsDigiti(i32 %326) #11
  %328 = getelementptr inbounds i32, i32* %325, i64 1
  br i1 %327, label %324, label %329

329:                                              ; preds = %324, %318
  %330 = phi i32* [ %319, %318 ], [ %325, %324 ]
  %331 = phi i32 [ 0, %318 ], [ %323, %324 ]
  %332 = load i32, i32* %330, align 4
  %333 = icmp eq i32 %332, 58
  br i1 %333, label %334, label %345

334:                                              ; preds = %329
  %335 = getelementptr inbounds i32, i32* %330, i64 1
  %336 = load i32, i32* %335, align 4
  %337 = tail call zeroext i1 @_Z7IsDigiti(i32 %336) #11
  br i1 %337, label %338, label %345

338:                                              ; preds = %334
  %339 = tail call i32 @_Z5atoiwPKw(i32* %335) #11
  br label %340

340:                                              ; preds = %340, %338
  %341 = phi i32* [ %335, %338 ], [ %344, %340 ]
  %342 = load i32, i32* %341, align 4
  %343 = tail call zeroext i1 @_Z7IsDigiti(i32 %342) #11
  %344 = getelementptr inbounds i32, i32* %341, i64 1
  br i1 %343, label %340, label %345

345:                                              ; preds = %340, %334, %329
  %346 = phi i32* [ %330, %334 ], [ %330, %329 ], [ %341, %340 ]
  %347 = phi i32 [ 0, %334 ], [ 0, %329 ], [ %339, %340 ]
  %348 = getelementptr inbounds i32, i32* %346, i64 1
  %349 = load i32, i32* %346, align 4
  %350 = tail call i32 @_Z8toupperwi(i32 %349) #11
  switch i32 %350, label %357 [
    i32 84, label %351
    i32 69, label %352
    i32 68, label %353
    i32 65, label %354
    i32 67, label %355
    i32 82, label %356
  ]

351:                                              ; preds = %345
  br label %357

352:                                              ; preds = %345
  br label %357

353:                                              ; preds = %345
  br label %357

354:                                              ; preds = %345
  br label %357

355:                                              ; preds = %345
  br label %357

356:                                              ; preds = %345
  br label %357

357:                                              ; preds = %345, %356, %355, %354, %353, %352, %351
  %358 = phi i64 [ 8, %345 ], [ 3, %356 ], [ 5, %355 ], [ 4, %354 ], [ 0, %353 ], [ 1, %352 ], [ 7, %351 ]
  %359 = load i32, i32* %348, align 4
  switch i32 %359, label %364 [
    i32 43, label %360
    i32 45, label %360
  ]

360:                                              ; preds = %357, %357
  %361 = getelementptr inbounds i32, i32* %346, i64 2
  %362 = icmp eq i32 %359, 43
  %363 = select i1 %362, i32 2, i32 3
  br label %364

364:                                              ; preds = %357, %360
  %365 = phi i32* [ %361, %360 ], [ %348, %357 ]
  %366 = phi i32 [ %363, %360 ], [ 1, %357 ]
  %367 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 95, i64 %358, i32 0
  store i32 %366, i32* %367, align 4
  %368 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 95, i64 %358, i32 1
  store i32 %331, i32* %368, align 4
  %369 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 95, i64 %358, i32 2
  store i32 %347, i32* %369, align 4
  %370 = load i32, i32* %365, align 4
  %371 = icmp eq i32 %370, 0
  br i1 %371, label %689, label %318

372:                                              ; preds = %294
  %373 = bitcast [1024 x i32]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4096, i8* nonnull %373) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %373, i8 -86, i64 4096, i1 false)
  %374 = getelementptr inbounds [1024 x i32], [1024 x i32]* %3, i64 0, i64 0
  %375 = getelementptr inbounds i32, i32* %1, i64 2
  %376 = load i32, i32* %375, align 4
  %377 = icmp eq i32 %376, 0
  %378 = select i1 %377, i32* getelementptr inbounds ([72 x i32], [72 x i32]* @.str.22, i64 0, i64 0), i32* %375
  call void @_Z8wcsncpyzPwPKwm(i32* nonnull %374, i32* %378, i64 1024) #11
  %379 = bitcast [2048 x i32]* %4 to i8*
  %380 = getelementptr inbounds [2048 x i32], [2048 x i32]* %4, i64 0, i64 0
  %381 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 11
  br label %382

382:                                              ; preds = %401, %372
  %383 = phi i32* [ %374, %372 ], [ %402, %401 ]
  %384 = load i32, i32* %383, align 4
  %385 = icmp eq i32 %384, 0
  br i1 %385, label %403, label %386

386:                                              ; preds = %382
  %387 = call i32* @wcschr(i32* %383, i32 signext 59) #12
  %388 = icmp eq i32* %387, null
  br i1 %388, label %391, label %389

389:                                              ; preds = %386
  store i32 0, i32* %387, align 4
  %390 = load i32, i32* %383, align 4
  br label %391

391:                                              ; preds = %386, %389
  %392 = phi i32 [ %384, %386 ], [ %390, %389 ]
  %393 = icmp eq i32 %392, 46
  %394 = getelementptr inbounds i32, i32* %383, i64 1
  %395 = select i1 %393, i32* %394, i32* %383
  call void @llvm.lifetime.start.p0i8(i64 8192, i8* nonnull %379) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %379, i8 -86, i64 8192, i1 false)
  %396 = call i32* @wcspbrk(i32* %395, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @.str.23, i64 0, i64 0)) #12
  %397 = icmp eq i32* %396, null
  br i1 %397, label %398, label %400

398:                                              ; preds = %391
  %399 = call i32 (i32*, i64, i32*, ...) @swprintf(i32* nonnull %380, i64 2048, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @.str.24, i64 0, i64 0), i32* %395) #11
  br label %401

400:                                              ; preds = %391
  call void @_Z8wcsncpyzPwPKwm(i32* nonnull %380, i32* %395, i64 2048) #11
  br label %401

401:                                              ; preds = %400, %398
  call void @_ZN10StringList9AddStringEPKw(%class.StringList* %381, i32* nonnull %380) #11
  %402 = getelementptr inbounds i32, i32* %387, i64 1
  call void @llvm.lifetime.end.p0i8(i64 8192, i8* nonnull %379) #11
  br i1 %388, label %403, label %382

403:                                              ; preds = %401, %382
  call void @llvm.lifetime.end.p0i8(i64 4096, i8* nonnull %373) #11
  br label %689

404:                                              ; preds = %294
  %405 = getelementptr inbounds i32, i32* %1, i64 2
  %406 = tail call i32 @_Z5atoiwPKw(i32* %405) #11
  %407 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 106
  store i32 %406, i32* %407, align 8
  %408 = add i32 %406, -1
  %409 = icmp ugt i32 %408, 63
  br i1 %409, label %410, label %689

410:                                              ; preds = %404
  %411 = tail call i32* @_Z2StPKw(i32* getelementptr inbounds ([27 x i32], [27 x i32]* @.str.26, i64 0, i64 0)) #11
  tail call void @_ZN12ErrorHandler4ExitE8RAR_EXIT(%class.ErrorHandler* nonnull @ErrHandler, i32 7) #11
  br label %689

412:                                              ; preds = %294
  %413 = load i32, i32* %295, align 4
  %414 = add nsw i32 %413, -48
  %415 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 27
  store i32 %414, i32* %415, align 4
  %416 = icmp ugt i32 %414, 5
  br i1 %416, label %417, label %689

417:                                              ; preds = %412
  %418 = tail call i32* @_Z2StPKw(i32* getelementptr inbounds ([27 x i32], [27 x i32]* @.str.26, i64 0, i64 0)) #11
  tail call void @_ZN12ErrorHandler4ExitE8RAR_EXIT(%class.ErrorHandler* nonnull @ErrHandler, i32 7) #11
  br label %689

419:                                              ; preds = %2, %2
  %420 = getelementptr inbounds i32, i32* %1, i64 1
  %421 = load i32, i32* %420, align 4
  %422 = icmp eq i32 %421, 0
  br i1 %422, label %689, label %423

423:                                              ; preds = %419
  %424 = load i32, i32* %1, align 4
  %425 = tail call i32 @_Z8toupperwi(i32 %424) #11
  %426 = icmp eq i32 %425, 78
  %427 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 9
  %428 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 8
  %429 = select i1 %426, %class.StringList* %427, %class.StringList* %428
  %430 = load i32, i32* %420, align 4
  %431 = icmp eq i32 %430, 64
  br i1 %431, label %432, label %439

432:                                              ; preds = %423
  %433 = tail call zeroext i1 @_Z10IsWildcardPKw(i32* %1) #11
  br i1 %433, label %439, label %434

434:                                              ; preds = %432
  %435 = getelementptr inbounds i32, i32* %1, i64 2
  %436 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 15
  %437 = load i32, i32* %436, align 4
  %438 = tail call zeroext i1 @_Z12ReadTextFilePKwP10StringListbb11RAR_CHARSETbbb(i32* %435, %class.StringList* %429, i1 zeroext false, i1 zeroext true, i32 %437, i1 zeroext true, i1 zeroext true, i1 zeroext true) #11
  br label %689

439:                                              ; preds = %432, %423
  tail call void @_ZN10StringList9AddStringEPKw(%class.StringList* %429, i32* %420) #11
  br label %689

440:                                              ; preds = %2
  %441 = getelementptr inbounds i32, i32* %1, i64 1
  %442 = load i32, i32* %441, align 4
  %443 = tail call i32 @_Z8toupperwi(i32 %442) #11
  switch i32 %443, label %464 [
    i32 43, label %444
    i32 45, label %446
    i32 0, label %448
    i32 72, label %450
    i32 76, label %452
    i32 82, label %460
    i32 87, label %462
  ]

444:                                              ; preds = %440
  %445 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 26
  store i32 1, i32* %445, align 8
  br label %689

446:                                              ; preds = %440
  %447 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 26
  store i32 2, i32* %447, align 8
  br label %689

448:                                              ; preds = %440
  %449 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 26
  store i32 4, i32* %449, align 8
  br label %689

450:                                              ; preds = %440
  %451 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 59
  store i8 1, i8* %451, align 2
  br label %689

452:                                              ; preds = %440
  %453 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 58
  store i8 1, i8* %453, align 1
  %454 = getelementptr inbounds i32, i32* %1, i64 2
  %455 = load i32, i32* %454, align 4
  %456 = tail call i32 @_Z8toupperwi(i32 %455) #11
  %457 = icmp eq i32 %456, 65
  br i1 %457, label %458, label %689

458:                                              ; preds = %452
  %459 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 60
  store i8 1, i8* %459, align 1
  br label %689

460:                                              ; preds = %440
  %461 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 26
  store i32 3, i32* %461, align 8
  br label %689

462:                                              ; preds = %440
  %463 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 57
  store i8 1, i8* %463, align 8
  br label %689

464:                                              ; preds = %440
  %465 = tail call i32* @_Z2StPKw(i32* getelementptr inbounds ([27 x i32], [27 x i32]* @.str.26, i64 0, i64 0)) #11
  tail call void @_ZN12ErrorHandler4ExitE8RAR_EXIT(%class.ErrorHandler* nonnull @ErrHandler, i32 7) #11
  br label %689

466:                                              ; preds = %2
  %467 = getelementptr inbounds i32, i32* %1, i64 1
  %468 = load i32, i32* %467, align 4
  %469 = icmp eq i32 %468, 0
  %470 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 19
  br i1 %469, label %471, label %473

471:                                              ; preds = %466
  %472 = tail call zeroext i1 @_Z13uiGetPassword15UIPASSWORD_TYPEPKwP11SecPassword(i32 0, i32* null, %class.SecPassword* %470) #11
  br label %689

473:                                              ; preds = %466
  tail call void @_ZN11SecPassword3SetEPKw(%class.SecPassword* %470, i32* %467) #11
  %474 = bitcast i32* %1 to i8*
  %475 = tail call i64 @wcslen(i32* %1) #12
  %476 = shl i64 %475, 2
  tail call void @_Z9cleandataPvm(i8* %474, i64 %476) #11
  br label %689

477:                                              ; preds = %2
  %478 = getelementptr inbounds i32, i32* %1, i64 1
  %479 = load i32, i32* %478, align 4
  %480 = tail call i32 @_Z8toupperwi(i32 %479) #11
  %481 = icmp eq i32 %480, 79
  br i1 %481, label %482, label %494

482:                                              ; preds = %477
  %483 = getelementptr inbounds i32, i32* %1, i64 2
  %484 = load i32, i32* %483, align 4
  %485 = tail call i32 @_Z8toupperwi(i32 %484) #11
  switch i32 %485, label %492 [
    i32 0, label %486
    i32 45, label %488
    i32 43, label %490
  ]

486:                                              ; preds = %482
  %487 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 9
  store i32 1, i32* %487, align 8
  br label %689

488:                                              ; preds = %482
  %489 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 9
  store i32 0, i32* %489, align 8
  br label %689

490:                                              ; preds = %482
  %491 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 9
  store i32 2, i32* %491, align 8
  br label %689

492:                                              ; preds = %482
  %493 = tail call i32* @_Z2StPKw(i32* getelementptr inbounds ([27 x i32], [27 x i32]* @.str.26, i64 0, i64 0)) #11
  tail call void @_ZN12ErrorHandler4ExitE8RAR_EXIT(%class.ErrorHandler* nonnull @ErrHandler, i32 7) #11
  br label %689

494:                                              ; preds = %477
  %495 = tail call i32* @_Z2StPKw(i32* getelementptr inbounds ([27 x i32], [27 x i32]* @.str.26, i64 0, i64 0)) #11
  tail call void @_ZN12ErrorHandler4ExitE8RAR_EXIT(%class.ErrorHandler* nonnull @ErrHandler, i32 7) #11
  br label %689

496:                                              ; preds = %2
  %497 = getelementptr inbounds i32, i32* %1, i64 1
  %498 = load i32, i32* %497, align 4
  %499 = tail call i32 @_Z8toupperwi(i32 %498) #11
  switch i32 %499, label %689 [
    i32 0, label %500
    i32 45, label %502
    i32 48, label %504
    i32 73, label %506
  ]

500:                                              ; preds = %496
  %501 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 46
  store i32 2, i32* %501, align 8
  br label %689

502:                                              ; preds = %496
  %503 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 46
  store i32 1, i32* %503, align 8
  br label %689

504:                                              ; preds = %496
  %505 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 46
  store i32 3, i32* %505, align 8
  br label %689

506:                                              ; preds = %496
  %507 = getelementptr inbounds i32, i32* %1, i64 2
  %508 = tail call i32 @_Z5atoiwPKw(i32* %507) #11
  %509 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 61
  store i32 %508, i32* %509, align 4
  %510 = icmp ugt i32 %508, 15
  br i1 %510, label %511, label %513

511:                                              ; preds = %506
  %512 = tail call i32* @_Z2StPKw(i32* getelementptr inbounds ([27 x i32], [27 x i32]* @.str.26, i64 0, i64 0)) #11
  tail call void @_ZN12ErrorHandler4ExitE8RAR_EXIT(%class.ErrorHandler* nonnull @ErrHandler, i32 7) #11
  br label %513

513:                                              ; preds = %506, %511
  %514 = tail call i32* @wcschr(i32* %507, i32 signext 58) #12
  %515 = icmp eq i32* %514, null
  br i1 %515, label %526, label %516

516:                                              ; preds = %513
  %517 = getelementptr inbounds i32, i32* %514, i64 1
  %518 = tail call i32 @_Z5atoiwPKw(i32* %517) #11
  %519 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 62
  store i32 %518, i32* %519, align 8
  %520 = icmp sgt i32 %518, 1000
  br i1 %520, label %521, label %524

521:                                              ; preds = %516
  %522 = tail call i32* @_Z2StPKw(i32* getelementptr inbounds ([27 x i32], [27 x i32]* @.str.26, i64 0, i64 0)) #11
  tail call void @_ZN12ErrorHandler4ExitE8RAR_EXIT(%class.ErrorHandler* nonnull @ErrHandler, i32 7) #11
  %523 = load i32, i32* %519, align 8
  br label %524

524:                                              ; preds = %521, %516
  %525 = phi i32 [ %523, %521 ], [ %518, %516 ]
  tail call void @_Z17InitSystemOptionsi(i32 %525) #11
  br label %526

526:                                              ; preds = %513, %524
  %527 = load i32, i32* %509, align 4
  tail call void @_Z11SetPriorityi(i32 %527) #11
  br label %689

528:                                              ; preds = %2
  %529 = getelementptr inbounds i32, i32* %1, i64 1
  %530 = load i32, i32* %529, align 4
  %531 = tail call zeroext i1 @_Z7IsDigiti(i32 %530) #11
  br i1 %531, label %532, label %538

532:                                              ; preds = %528
  %533 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 37
  %534 = load i32, i32* %533, align 4
  %535 = or i32 %534, 2
  store i32 %535, i32* %533, align 4
  %536 = tail call i32 @_Z5atoiwPKw(i32* %529) #11
  %537 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 38
  store i32 %536, i32* %537, align 8
  br label %689

538:                                              ; preds = %528
  %539 = load i32, i32* %529, align 4
  %540 = tail call i32 @_Z8toupperwi(i32 %539) #11
  switch i32 %540, label %689 [
    i32 0, label %541
    i32 45, label %545
    i32 69, label %547
    i32 86, label %551
    i32 68, label %559
    i32 76, label %563
    i32 77, label %570
    i32 67, label %577
  ]

541:                                              ; preds = %538
  %542 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 37
  %543 = load i32, i32* %542, align 4
  %544 = or i32 %543, 1
  store i32 %544, i32* %542, align 4
  br label %689

545:                                              ; preds = %538
  %546 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 37
  store i32 0, i32* %546, align 4
  br label %689

547:                                              ; preds = %538
  %548 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 37
  %549 = load i32, i32* %548, align 4
  %550 = or i32 %549, 4
  store i32 %550, i32* %548, align 4
  br label %689

551:                                              ; preds = %538
  %552 = getelementptr inbounds i32, i32* %1, i64 2
  %553 = load i32, i32* %552, align 4
  %554 = icmp eq i32 %553, 45
  %555 = select i1 %554, i32 8, i32 16
  %556 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 37
  %557 = load i32, i32* %556, align 4
  %558 = or i32 %555, %557
  store i32 %558, i32* %556, align 4
  br label %689

559:                                              ; preds = %538
  %560 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 37
  %561 = load i32, i32* %560, align 4
  %562 = or i32 %561, 8
  store i32 %562, i32* %560, align 4
  br label %689

563:                                              ; preds = %538
  %564 = getelementptr inbounds i32, i32* %1, i64 2
  %565 = load i32, i32* %564, align 4
  %566 = tail call zeroext i1 @_Z7IsDigiti(i32 %565) #11
  br i1 %566, label %567, label %689

567:                                              ; preds = %563
  %568 = tail call i64 @_Z6atoilwPKw(i32* %564) #11
  %569 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 89
  store i64 %568, i64* %569, align 8
  br label %689

570:                                              ; preds = %538
  %571 = getelementptr inbounds i32, i32* %1, i64 2
  %572 = load i32, i32* %571, align 4
  %573 = tail call zeroext i1 @_Z7IsDigiti(i32 %572) #11
  br i1 %573, label %574, label %689

574:                                              ; preds = %570
  %575 = tail call i64 @_Z6atoilwPKw(i32* %571) #11
  %576 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 90
  store i64 %575, i64* %576, align 8
  br label %689

577:                                              ; preds = %538
  %578 = getelementptr inbounds i32, i32* %1, i64 2
  %579 = load i32, i32* %578, align 4
  %580 = tail call i32 @_Z8toupperwi(i32 %579) #11
  switch i32 %580, label %584 [
    i32 65, label %586
    i32 79, label %581
    i32 85, label %582
    i32 70, label %583
  ]

581:                                              ; preds = %577
  br label %586

582:                                              ; preds = %577
  br label %586

583:                                              ; preds = %577
  br label %586

584:                                              ; preds = %577
  %585 = tail call i32* @_Z2StPKw(i32* getelementptr inbounds ([27 x i32], [27 x i32]* @.str.26, i64 0, i64 0)) #11
  tail call void @_ZN12ErrorHandler4ExitE8RAR_EXIT(%class.ErrorHandler* nonnull @ErrHandler, i32 7) #11
  br label %620

586:                                              ; preds = %583, %582, %581, %577
  %587 = phi i32 [ 1, %577 ], [ 2, %581 ], [ 3, %582 ], [ 4, %583 ]
  %588 = getelementptr inbounds i32, i32* %1, i64 3
  %589 = load i32, i32* %588, align 4
  %590 = icmp eq i32 %589, 0
  %591 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 17
  br i1 %590, label %595, label %592

592:                                              ; preds = %586
  %593 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 15
  %594 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 14
  br label %600

595:                                              ; preds = %586
  %596 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 14
  %597 = insertelement <4 x i32> undef, i32 %587, i32 0
  %598 = shufflevector <4 x i32> %597, <4 x i32> undef, <4 x i32> zeroinitializer
  %599 = bitcast i32* %596 to <4 x i32>*
  store <4 x i32> %598, <4 x i32>* %599, align 8
  br label %620

600:                                              ; preds = %592, %610
  %601 = phi i32 [ %589, %592 ], [ %615, %610 ]
  %602 = phi i32 [ 3, %592 ], [ %612, %610 ]
  %603 = phi i8 [ 0, %592 ], [ %611, %610 ]
  %604 = tail call i32 @_Z8toupperwi(i32 %601) #11
  switch i32 %604, label %608 [
    i32 67, label %605
    i32 76, label %606
    i32 82, label %607
  ]

605:                                              ; preds = %600
  store i32 %587, i32* %594, align 8
  br label %610

606:                                              ; preds = %600
  store i32 %587, i32* %593, align 4
  br label %610

607:                                              ; preds = %600
  store i32 %587, i32* %591, align 4
  br label %610

608:                                              ; preds = %600
  %609 = tail call i32* @_Z2StPKw(i32* getelementptr inbounds ([27 x i32], [27 x i32]* @.str.26, i64 0, i64 0)) #11
  tail call void @_ZN12ErrorHandler4ExitE8RAR_EXIT(%class.ErrorHandler* nonnull @ErrHandler, i32 7) #11
  br label %610

610:                                              ; preds = %605, %606, %607, %608
  %611 = phi i8 [ 1, %608 ], [ %603, %607 ], [ %603, %606 ], [ %603, %605 ]
  %612 = add i32 %602, 1
  %613 = zext i32 %612 to i64
  %614 = getelementptr inbounds i32, i32* %1, i64 %613
  %615 = load i32, i32* %614, align 4
  %616 = icmp ne i32 %615, 0
  %617 = and i8 %611, 1
  %618 = icmp eq i8 %617, 0
  %619 = and i1 %618, %616
  br i1 %619, label %600, label %620

620:                                              ; preds = %610, %584, %595
  %621 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 17
  %622 = load i32, i32* %621, align 4
  tail call void @_Z25SetConsoleRedirectCharset11RAR_CHARSET(i32 %622) #11
  br label %689

623:                                              ; preds = %2
  %624 = getelementptr inbounds i32, i32* %1, i64 1
  %625 = load i32, i32* %624, align 4
  %626 = tail call i32 @_Z8toupperwi(i32 %625) #11
  switch i32 %626, label %645 [
    i32 75, label %627
    i32 76, label %629
    i32 79, label %631
    i32 78, label %633
    i32 66, label %635
    i32 65, label %637
    i32 83, label %639
    i32 45, label %641
    i32 0, label %643
  ]

627:                                              ; preds = %623
  %628 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 55
  store i32 1, i32* %628, align 8
  br label %689

629:                                              ; preds = %623
  %630 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 55
  store i32 2, i32* %630, align 8
  br label %689

631:                                              ; preds = %623
  %632 = getelementptr inbounds i32, i32* %1, i64 2
  tail call void @_ZN11CommandData14SetTimeFiltersEPKwbb(%class.CommandData* %0, i32* %632, i1 zeroext true, i1 zeroext true)
  br label %689

633:                                              ; preds = %623
  %634 = getelementptr inbounds i32, i32* %1, i64 2
  tail call void @_ZN11CommandData14SetTimeFiltersEPKwbb(%class.CommandData* %0, i32* %634, i1 zeroext false, i1 zeroext true)
  br label %689

635:                                              ; preds = %623
  %636 = getelementptr inbounds i32, i32* %1, i64 2
  tail call void @_ZN11CommandData14SetTimeFiltersEPKwbb(%class.CommandData* %0, i32* %636, i1 zeroext true, i1 zeroext false)
  br label %689

637:                                              ; preds = %623
  %638 = getelementptr inbounds i32, i32* %1, i64 2
  tail call void @_ZN11CommandData14SetTimeFiltersEPKwbb(%class.CommandData* %0, i32* %638, i1 zeroext false, i1 zeroext false)
  br label %689

639:                                              ; preds = %623
  %640 = getelementptr inbounds i32, i32* %1, i64 2
  tail call void @_ZN11CommandData16SetStoreTimeModeEPKw(%class.CommandData* %0, i32* %640)
  br label %689

641:                                              ; preds = %623
  %642 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 92
  store i8 0, i8* %642, align 1
  br label %689

643:                                              ; preds = %623
  %644 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 92
  store i8 1, i8* %644, align 1
  br label %689

645:                                              ; preds = %623
  %646 = tail call i32* @_Z2StPKw(i32* getelementptr inbounds ([27 x i32], [27 x i32]* @.str.26, i64 0, i64 0)) #11
  tail call void @_ZN12ErrorHandler4ExitE8RAR_EXIT(%class.ErrorHandler* nonnull @ErrHandler, i32 7) #11
  br label %689

647:                                              ; preds = %2
  %648 = getelementptr inbounds i32, i32* %1, i64 1
  %649 = load i32, i32* %648, align 4
  %650 = icmp eq i32 %649, 0
  br i1 %650, label %651, label %653

651:                                              ; preds = %647
  %652 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 43
  store i8 1, i8* %652, align 8
  br label %689

653:                                              ; preds = %647
  %654 = tail call i32* @_Z2StPKw(i32* getelementptr inbounds ([27 x i32], [27 x i32]* @.str.26, i64 0, i64 0)) #11
  tail call void @_ZN12ErrorHandler4ExitE8RAR_EXIT(%class.ErrorHandler* nonnull @ErrHandler, i32 7) #11
  br label %689

655:                                              ; preds = %2
  %656 = getelementptr inbounds i32, i32* %1, i64 1
  %657 = load i32, i32* %656, align 4
  %658 = tail call i32 @_Z8toupperwi(i32 %657) #11
  switch i32 %658, label %673 [
    i32 80, label %659
    i32 69, label %661
    i32 45, label %671
  ]

659:                                              ; preds = %655
  %660 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 93
  store i8 1, i8* %660, align 2
  br label %689

661:                                              ; preds = %655
  %662 = getelementptr inbounds i32, i32* %1, i64 2
  %663 = load i32, i32* %662, align 4
  %664 = tail call i32 @_Z8toupperwi(i32 %663) #11
  %665 = icmp eq i32 %664, 82
  br i1 %665, label %666, label %689

666:                                              ; preds = %661
  %667 = getelementptr inbounds i32, i32* %1, i64 3
  %668 = tail call i32 @_Z5atoiwPKw(i32* %667) #11
  %669 = add nsw i32 %668, 1
  %670 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 97
  store i32 %669, i32* %670, align 4
  br label %689

671:                                              ; preds = %655
  %672 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 48
  store i64 0, i64* %672, align 8
  br label %689

673:                                              ; preds = %655
  %674 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 48
  store i64 9223372034707292159, i64* %674, align 8
  br label %689

675:                                              ; preds = %2
  %676 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 7, i64 0
  %677 = getelementptr inbounds i32, i32* %1, i64 1
  tail call void @_Z8wcsncpyzPwPKwm(i32* %676, i32* %677, i64 2048) #11
  tail call void @_Z11AddEndSlashPwm(i32* %676, i64 2048) #11
  br label %689

678:                                              ; preds = %2
  %679 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 51
  store i8 1, i8* %679, align 4
  br label %689

680:                                              ; preds = %2
  %681 = getelementptr inbounds i32, i32* %1, i64 1
  %682 = load i32, i32* %681, align 4
  %683 = icmp eq i32 %682, 0
  %684 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 13, i64 0
  br i1 %683, label %685, label %686

685:                                              ; preds = %680
  tail call void @_Z8wcsncpyzPwPKwm(i32* %684, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @.str.25, i64 0, i64 0), i64 2048) #11
  br label %689

686:                                              ; preds = %680
  tail call void @_Z8wcsncpyzPwPKwm(i32* %684, i32* %681, i64 2048) #11
  br label %689

687:                                              ; preds = %2
  %688 = tail call i32* @_Z2StPKw(i32* getelementptr inbounds ([27 x i32], [27 x i32]* @.str.26, i64 0, i64 0)) #11
  tail call void @_ZN12ErrorHandler4ExitE8RAR_EXIT(%class.ErrorHandler* nonnull @ErrHandler, i32 7) #11
  br label %689

689:                                              ; preds = %364, %261, %301, %298, %240, %185, %2, %434, %439, %412, %404, %19, %419, %685, %686, %659, %671, %673, %666, %661, %651, %653, %627, %629, %631, %633, %635, %637, %639, %641, %643, %645, %532, %570, %574, %563, %567, %538, %620, %559, %551, %547, %545, %541, %500, %502, %504, %526, %496, %494, %492, %490, %488, %486, %471, %473, %444, %446, %448, %450, %460, %462, %464, %458, %452, %294, %294, %403, %410, %417, %290, %292, %286, %281, %273, %275, %277, %279, %270, %191, %189, %181, %166, %168, %91, %100, %98, %96, %94, %157, %129, %72, %76, %84, %82, %80, %58, %62, %70, %68, %66, %17, %47, %13, %49, %51, %54, %56, %24, %26, %22, %41, %44, %36, %687, %678, %675, %284, %234, %229, %220, %215, %206, %197, %7
  ret void
}

declare i32* @_Z8wcsupperPw(i32*) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @wcslen(i32* nocapture) local_unnamed_addr #6

declare zeroext i1 @_Z10IsDriveDivi(i32) local_unnamed_addr #2

declare void @_ZN10StringList9AddStringEPKw(%class.StringList*, i32*) local_unnamed_addr #2

declare zeroext i1 @_ZN8FindFile8FastFindEPKwP8FindDatab(i32*, %struct.FindData*, i1 zeroext) local_unnamed_addr #2

declare zeroext i1 @_Z10IsWildcardPKw(i32*) local_unnamed_addr #2

declare zeroext i1 @_Z12ReadTextFilePKwP10StringListbb11RAR_CHARSETbbb(i32*, %class.StringList*, i1 zeroext, i1 zeroext, i32, i1 zeroext, i1 zeroext, i1 zeroext) local_unnamed_addr #2

declare void @_Z11AddEndSlashPwm(i32*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CommandData11ParseEnvVarEv(%class.CommandData*) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.Array.0, align 8
  %3 = tail call i8* @getenv(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0)) #11
  %4 = icmp eq i8* %3, null
  br i1 %4, label %31, label %5

5:                                                ; preds = %1
  %6 = bitcast %class.Array.0* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 40, i1 false)
  %7 = tail call i64 @strlen(i8* nonnull %3) #12
  %8 = add i64 %7, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 33, i1 false) #11
  call void @_ZN5ArrayIwE3AddEm(%class.Array.0* nonnull %2, i64 %8) #11
  %9 = getelementptr inbounds %class.Array.0, %class.Array.0* %2, i64 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = getelementptr inbounds %class.Array.0, %class.Array.0* %2, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = call zeroext i1 @_Z10CharToWidePKcPwm(i8* nonnull %3, i32* %10, i64 %12) #11
  %14 = load i32*, i32** %9, align 8
  call void @_ZN11CommandData21ProcessSwitchesStringEPKw(%class.CommandData* %0, i32* %14)
  %15 = load i32*, i32** %9, align 8
  %16 = icmp eq i32* %15, null
  %17 = bitcast i32* %15 to i8*
  br i1 %16, label %30, label %18

18:                                               ; preds = %5
  %19 = getelementptr inbounds %class.Array.0, %class.Array.0* %2, i64 0, i32 4
  %20 = load i8, i8* %19, align 8, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %28, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %class.Array.0, %class.Array.0* %2, i64 0, i32 2
  %24 = load i64, i64* %23, align 8
  %25 = shl i64 %24, 2
  call void @_Z9cleandataPvm(i8* nonnull %17, i64 %25) #11
  %26 = bitcast %class.Array.0* %2 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %22, %18
  %29 = phi i8* [ %27, %22 ], [ %17, %18 ]
  call void @free(i8* %29) #11
  br label %30

30:                                               ; preds = %5, %28
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #11
  br label %31

31:                                               ; preds = %1, %30
  ret void
}

; Function Attrs: nofree nounwind readonly
declare i8* @getenv(i8* nocapture) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CommandData21ProcessSwitchesStringEPKw(%class.CommandData*, i32*) local_unnamed_addr #0 align 2 {
  %3 = tail call i32* @_Z11GetCmdParamPKwPwm(i32* %1, i32* null, i64 0) #11
  %4 = icmp eq i32* %3, null
  br i1 %4, label %29, label %5

5:                                                ; preds = %2, %26
  %6 = phi i32* [ %27, %26 ], [ %3, %2 ]
  %7 = phi i32* [ %18, %26 ], [ %1, %2 ]
  %8 = ptrtoint i32* %6 to i64
  %9 = ptrtoint i32* %7 to i64
  %10 = sub i64 %8, %9
  %11 = ashr exact i64 %10, 2
  %12 = add nsw i64 %11, 2
  %13 = shl i64 %12, 2
  %14 = tail call noalias i8* @malloc(i64 %13) #11
  %15 = bitcast i8* %14 to i32*
  %16 = icmp eq i8* %14, null
  br i1 %16, label %29, label %17

17:                                               ; preds = %5
  %18 = tail call i32* @_Z11GetCmdParamPKwPwm(i32* %7, i32* nonnull %15, i64 %12) #11
  %19 = icmp eq i32* %18, null
  br i1 %19, label %29, label %20

20:                                               ; preds = %17
  %21 = load i32, i32* %15, align 4
  %22 = icmp eq i32 %21, 45
  br i1 %22, label %23, label %26

23:                                               ; preds = %20
  %24 = getelementptr inbounds i8, i8* %14, i64 4
  %25 = bitcast i8* %24 to i32*
  tail call void @_ZN11CommandData13ProcessSwitchEPKw(%class.CommandData* %0, i32* %25)
  br label %26

26:                                               ; preds = %23, %20
  tail call void @free(i8* nonnull %14) #11
  %27 = tail call i32* @_Z11GetCmdParamPKwPwm(i32* nonnull %18, i32* null, i64 0) #11
  %28 = icmp eq i32* %27, null
  br i1 %28, label %29, label %5

29:                                               ; preds = %17, %26, %5, %2
  ret void
}

declare i32 @_Z8wcsicompPKwS0_(i32*, i32*) local_unnamed_addr #2

declare i32 @_Z9wcsnicompPKwS0_m(i32*, i32*, i64) local_unnamed_addr #2

declare void @_Z14InitLogOptionsPKw11RAR_CHARSET(i32*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32* @wcsncpy(i32*, i32*, i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CommandData10ReadConfigEv(%class.CommandData*) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.StringList, align 8
  %3 = alloca [16 x i32], align 16
  %4 = alloca [32 x i32], align 16
  %5 = bitcast %class.StringList* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 192, i8* nonnull %5) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 192, i1 false)
  call void @_ZN10StringListC1Ev(%class.StringList* nonnull %2) #11
  %6 = call zeroext i1 @_Z12ReadTextFilePKwP10StringListbb11RAR_CHARSETbbb(i32* getelementptr inbounds ([7 x i32], [7 x i32]* @.str.8, i64 0, i64 0), %class.StringList* nonnull %2, i1 zeroext true, i1 zeroext false, i32 0, i1 zeroext false, i1 zeroext false, i1 zeroext false) #11
  br i1 %6, label %7, label %55

7:                                                ; preds = %1
  %8 = call i32* @_ZN10StringList9GetStringEv(%class.StringList* nonnull %2) #11
  %9 = icmp eq i32* %8, null
  br i1 %9, label %55, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 5, i64 0
  %12 = bitcast [16 x i32]* %3 to i8*
  %13 = getelementptr inbounds [16 x i32], [16 x i32]* %3, i64 0, i64 0
  %14 = getelementptr inbounds [16 x i32], [16 x i32]* %3, i64 0, i64 1
  %15 = getelementptr inbounds [16 x i32], [16 x i32]* %3, i64 0, i64 2
  %16 = bitcast [32 x i32]* %4 to i8*
  %17 = getelementptr inbounds [32 x i32], [32 x i32]* %4, i64 0, i64 0
  br label %18

18:                                               ; preds = %23, %10
  %19 = phi i32* [ %8, %10 ], [ %24, %23 ]
  %20 = load i32, i32* %19, align 4
  %21 = call zeroext i1 @_Z7IsSpacei(i32 %20) #11
  %22 = getelementptr inbounds i32, i32* %19, i64 1
  br i1 %21, label %23, label %25

23:                                               ; preds = %18, %52
  %24 = phi i32* [ %22, %18 ], [ %53, %52 ]
  br label %18

25:                                               ; preds = %18
  %26 = call i32 @_Z9wcsnicompPKwS0_m(i32* %19, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @.str.9, i64 0, i64 0), i64 9) #11
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %25
  %29 = getelementptr inbounds i32, i32* %19, i64 9
  call void @_ZN11CommandData21ProcessSwitchesStringEPKw(%class.CommandData* %0, i32* %29)
  br label %30

30:                                               ; preds = %28, %25
  %31 = load i32, i32* %11, align 8
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %52, label %33

33:                                               ; preds = %30
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %12) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %12, i8 -86, i64 64, i1 false)
  call void @_Z8wcsncpyzPwPKwm(i32* nonnull %13, i32* %11, i64 16) #11
  %34 = load i32, i32* %13, align 16
  %35 = call i32 @_Z8toupperwi(i32 %34) #11
  %36 = load i32, i32* %14, align 4
  %37 = call i32 @_Z8toupperwi(i32 %36) #11
  switch i32 %35, label %44 [
    i32 86, label %38
    i32 83, label %38
    i32 77, label %38
    i32 76, label %38
    i32 73, label %38
    i32 82, label %40
  ]

38:                                               ; preds = %33, %33, %33, %33, %33
  store i32 0, i32* %14, align 4
  %39 = icmp eq i32 %35, 82
  br i1 %39, label %40, label %44

40:                                               ; preds = %33, %38
  %41 = or i32 %37, 4
  %42 = icmp eq i32 %41, 86
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  store i32 0, i32* %15, align 8
  br label %44

44:                                               ; preds = %33, %40, %43, %38
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %16) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %16, i8 -86, i64 128, i1 false)
  %45 = call i32 (i32*, i64, i32*, ...) @swprintf(i32* nonnull %17, i64 32, i32* getelementptr inbounds ([14 x i32], [14 x i32]* @.str.10, i64 0, i64 0), i32* nonnull %13) #11
  %46 = call i64 @wcslen(i32* nonnull %17) #12
  %47 = call i32 @_Z9wcsnicompPKwS0_m(i32* %19, i32* nonnull %17, i64 %46) #11
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %44
  %50 = getelementptr inbounds i32, i32* %19, i64 %46
  call void @_ZN11CommandData21ProcessSwitchesStringEPKw(%class.CommandData* %0, i32* %50)
  br label %51

51:                                               ; preds = %49, %44
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %16) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %12) #11
  br label %52

52:                                               ; preds = %30, %51
  %53 = call i32* @_ZN10StringList9GetStringEv(%class.StringList* nonnull %2) #11
  %54 = icmp eq i32* %53, null
  br i1 %54, label %55, label %23

55:                                               ; preds = %52, %7, %1
  %56 = getelementptr inbounds %class.StringList, %class.StringList* %2, i64 0, i32 0, i32 0
  %57 = load i32*, i32** %56, align 8
  %58 = icmp eq i32* %57, null
  %59 = bitcast i32* %57 to i8*
  br i1 %58, label %72, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %class.StringList, %class.StringList* %2, i64 0, i32 0, i32 4
  %62 = load i8, i8* %61, align 8, !range !2
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %70, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %class.StringList, %class.StringList* %2, i64 0, i32 0, i32 2
  %66 = load i64, i64* %65, align 8
  %67 = shl i64 %66, 2
  call void @_Z9cleandataPvm(i8* nonnull %59, i64 %67) #11
  %68 = bitcast %class.StringList* %2 to i8**
  %69 = load i8*, i8** %68, align 8
  br label %70

70:                                               ; preds = %64, %60
  %71 = phi i8* [ %69, %64 ], [ %59, %60 ]
  call void @free(i8* %71) #11
  br label %72

72:                                               ; preds = %55, %70
  call void @llvm.lifetime.end.p0i8(i64 192, i8* nonnull %5) #11
  ret void
}

declare zeroext i1 @_Z7IsSpacei(i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @swprintf(i32*, i64, i32*, ...) local_unnamed_addr #8

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CommandData9BadSwitchEPKw(%class.CommandData* nocapture readnone, i32* nocapture readnone) local_unnamed_addr #0 align 2 {
  %3 = tail call i32* @_Z2StPKw(i32* getelementptr inbounds ([27 x i32], [27 x i32]* @.str.26, i64 0, i64 0)) #11
  tail call void @_ZN12ErrorHandler4ExitE8RAR_EXIT(%class.ErrorHandler* nonnull @ErrHandler, i32 7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11CommandData11GetExclAttrEPKwRb(%class.CommandData* nocapture readnone, i32*, i8* nocapture dereferenceable(1)) local_unnamed_addr #0 align 2 {
  %4 = load i32, i32* %1, align 4
  %5 = tail call zeroext i1 @_Z7IsDigiti(i32 %4) #11
  br i1 %5, label %9, label %6

6:                                                ; preds = %3
  %7 = load i32, i32* %1, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %25, label %12

9:                                                ; preds = %3
  %10 = tail call i64 @wcstol(i32* %1, i32** null, i32 0) #11
  %11 = trunc i64 %10 to i32
  br label %25

12:                                               ; preds = %6, %20
  %13 = phi i32 [ %23, %20 ], [ %7, %6 ]
  %14 = phi i32 [ %21, %20 ], [ 0, %6 ]
  %15 = phi i32* [ %22, %20 ], [ %1, %6 ]
  %16 = tail call i32 @_Z8toupperwi(i32 %13) #11
  switch i32 %16, label %20 [
    i32 68, label %17
    i32 86, label %18
  ]

17:                                               ; preds = %12
  store i8 1, i8* %2, align 1
  br label %20

18:                                               ; preds = %12
  %19 = or i32 %14, 8192
  br label %20

20:                                               ; preds = %12, %18, %17
  %21 = phi i32 [ %14, %12 ], [ %19, %18 ], [ %14, %17 ]
  %22 = getelementptr inbounds i32, i32* %15, i64 1
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %12

25:                                               ; preds = %20, %6, %9
  %26 = phi i32 [ %11, %9 ], [ 0, %6 ], [ %21, %20 ]
  ret i32 %26
}

declare void @_ZN11SecPassword3SetEPKw(%class.SecPassword*, i32*) local_unnamed_addr #2

declare void @_Z9cleandataPvm(i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_Z13uiGetPassword15UIPASSWORD_TYPEPKwP11SecPassword(i32, i32*, %class.SecPassword*) local_unnamed_addr #2

declare void @_Z19SetConsoleMsgStream12MESSAGE_TYPE(i32) local_unnamed_addr #2

declare i32 @_Z5atoiwPKw(i32*) local_unnamed_addr #2

; Function Attrs: nounwind readonly
declare i32* @wcspbrk(i32*, i32*) local_unnamed_addr #4

declare void @_Z17InitSystemOptionsi(i32) local_unnamed_addr #2

declare void @_Z11SetPriorityi(i32) local_unnamed_addr #2

declare i64 @_Z6atoilwPKw(i32*) local_unnamed_addr #2

declare void @_Z25SetConsoleRedirectCharset11RAR_CHARSET(i32) local_unnamed_addr #2

declare i32* @_Z2StPKw(i32*) local_unnamed_addr #2

declare void @_ZN12ErrorHandler4ExitE8RAR_EXIT(%class.ErrorHandler*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CommandData14ProcessCommandEv(%class.CommandData*) local_unnamed_addr #0 align 2 {
  %2 = alloca [2048 x i32], align 16
  %3 = alloca %class.StringList, align 8
  %4 = alloca %class.ScanTree, align 8
  %5 = alloca %struct.FindData, align 8
  %6 = alloca %class.CmdExtract, align 8
  %7 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 5, i64 0
  %8 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 6, i64 0
  %9 = tail call i32* @_Z6GetExtPKw(i32* %8) #11
  %10 = icmp eq i32* %9, null
  br i1 %10, label %11, label %17

11:                                               ; preds = %1
  %12 = tail call zeroext i1 @_Z9FileExistPKw(i32* %8) #11
  br i1 %12, label %13, label %16

13:                                               ; preds = %11
  %14 = tail call i32 @_Z11GetFileAttrPKw(i32* %8) #11
  %15 = tail call zeroext i1 @_Z5IsDirj(i32 %14) #11
  br i1 %15, label %16, label %32

16:                                               ; preds = %13, %11
  tail call void @_Z8wcsncatzPwPKwm(i32* %8, i32* getelementptr inbounds ([5 x i32], [5 x i32]* @.str.28, i64 0, i64 0), i64 2048) #11
  br label %32

17:                                               ; preds = %1
  %18 = tail call i32 @_Z9wcsnicompPKwS0_m(i32* nonnull %9, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @.str.29, i64 0, i64 0), i64 5) #11
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %32

20:                                               ; preds = %17
  %21 = getelementptr inbounds i32, i32* %9, i64 5
  %22 = load i32, i32* %21, align 4
  %23 = tail call zeroext i1 @_Z7IsDigiti(i32 %22) #11
  br i1 %23, label %24, label %32

24:                                               ; preds = %20
  %25 = tail call zeroext i1 @_Z9FileExistPKw(i32* %8) #11
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = bitcast [2048 x i32]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8192, i8* nonnull %27) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %27, i8 -86, i64 8192, i1 false)
  %28 = getelementptr inbounds [2048 x i32], [2048 x i32]* %2, i64 0, i64 0
  call void @_Z8wcsncpyzPwPKwm(i32* nonnull %28, i32* %8, i64 2048) #11
  call void @_Z8wcsncatzPwPKwm(i32* nonnull %28, i32* getelementptr inbounds ([5 x i32], [5 x i32]* @.str.28, i64 0, i64 0), i64 2048) #11
  %29 = call zeroext i1 @_Z9FileExistPKw(i32* nonnull %28) #11
  br i1 %29, label %30, label %31

30:                                               ; preds = %26
  call void @_Z8wcsncpyzPwPKwm(i32* %8, i32* nonnull %28, i64 2048) #11
  br label %31

31:                                               ; preds = %30, %26
  call void @llvm.lifetime.end.p0i8(i64 8192, i8* nonnull %27) #11
  br label %32

32:                                               ; preds = %13, %16, %31, %24, %20, %17
  %33 = load i32, i32* %7, align 8
  %34 = call i32* @wcschr(i32* getelementptr inbounds ([6 x i32], [6 x i32]* @.str.30, i64 0, i64 0), i32 signext %33) #12
  %35 = icmp eq i32* %34, null
  br i1 %35, label %36, label %85

36:                                               ; preds = %32
  %37 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 66
  %38 = load i8, i8* %37, align 1, !range !2
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %48, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 67
  %42 = getelementptr inbounds [128 x i32], [128 x i32]* %41, i64 0, i64 0
  %43 = load i32, i32* %42, align 8
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 68
  %46 = select i1 %44, [128 x i32]* %45, [128 x i32]* %41
  %47 = getelementptr inbounds [128 x i32], [128 x i32]* %46, i64 0, i64 0
  call void @_Z19GenerateArchiveNamePwmPKwb(i32* %8, i64 2048, i32* %47, i1 zeroext false) #11
  br label %48

48:                                               ; preds = %36, %40
  %49 = bitcast %class.StringList* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 192, i8* nonnull %49) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 192, i1 false)
  call void @_ZN10StringListC1Ev(%class.StringList* nonnull %3) #11
  call void @_ZN10StringList9AddStringEPKw(%class.StringList* nonnull %3, i32* %8) #11
  %50 = bitcast %class.ScanTree* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 33232, i8* nonnull %50) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 -86, i64 33232, i1 false)
  %51 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 46
  %52 = load i32, i32* %51, align 8
  %53 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 58
  %54 = load i8, i8* %53, align 1, !range !2
  %55 = icmp ne i8 %54, 0
  call void @_ZN8ScanTreeC1EP10StringList12RECURSE_MODEb9SCAN_DIRS(%class.ScanTree* nonnull %4, %class.StringList* nonnull %3, i32 %52, i1 zeroext %55, i32 0) #11
  %56 = bitcast %struct.FindData* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8240, i8* nonnull %56) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 -86, i64 8240, i1 false)
  %57 = getelementptr inbounds %struct.FindData, %struct.FindData* %5, i64 0, i32 6, i32 0
  %58 = bitcast i64* %57 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 24, i1 false) #11
  %59 = call i32 @_ZN8ScanTree7GetNextEP8FindData(%class.ScanTree* nonnull %4, %struct.FindData* nonnull %5) #11
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %67

61:                                               ; preds = %48
  %62 = getelementptr inbounds %struct.FindData, %struct.FindData* %5, i64 0, i32 0, i64 0
  %63 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 10
  br label %64

64:                                               ; preds = %61, %64
  call void @_ZN10StringList9AddStringEPKw(%class.StringList* %63, i32* nonnull %62) #11
  %65 = call i32 @_ZN8ScanTree7GetNextEP8FindData(%class.ScanTree* nonnull %4, %struct.FindData* nonnull %5) #11
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %64, label %67

67:                                               ; preds = %64, %48
  call void @llvm.lifetime.end.p0i8(i64 8240, i8* nonnull %56) #11
  call void @_ZN8ScanTreeD1Ev(%class.ScanTree* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 33232, i8* nonnull %50) #11
  %68 = getelementptr inbounds %class.StringList, %class.StringList* %3, i64 0, i32 0, i32 0
  %69 = load i32*, i32** %68, align 8
  %70 = icmp eq i32* %69, null
  %71 = bitcast i32* %69 to i8*
  br i1 %70, label %84, label %72

72:                                               ; preds = %67
  %73 = getelementptr inbounds %class.StringList, %class.StringList* %3, i64 0, i32 0, i32 4
  %74 = load i8, i8* %73, align 8, !range !2
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %82, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %class.StringList, %class.StringList* %3, i64 0, i32 0, i32 2
  %78 = load i64, i64* %77, align 8
  %79 = shl i64 %78, 2
  call void @_Z9cleandataPvm(i8* nonnull %71, i64 %79) #11
  %80 = bitcast %class.StringList* %3 to i8**
  %81 = load i8*, i8** %80, align 8
  br label %82

82:                                               ; preds = %76, %72
  %83 = phi i8* [ %81, %76 ], [ %71, %72 ]
  call void @free(i8* %83) #11
  br label %84

84:                                               ; preds = %67, %82
  call void @llvm.lifetime.end.p0i8(i64 192, i8* nonnull %49) #11
  br label %87

85:                                               ; preds = %32
  %86 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 10
  call void @_ZN10StringList9AddStringEPKw(%class.StringList* %86, i32* %8) #11
  br label %87

87:                                               ; preds = %85, %84
  %88 = load i32, i32* %7, align 8
  switch i32 %88, label %91 [
    i32 80, label %89
    i32 88, label %89
    i32 69, label %89
    i32 84, label %89
  ]

89:                                               ; preds = %87, %87, %87, %87
  %90 = bitcast %class.CmdExtract* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16760, i8* nonnull %90) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 -86, i64 16760, i1 false)
  call void @_ZN10CmdExtractC1EP11CommandData(%class.CmdExtract* nonnull %6, %class.CommandData* %0) #11
  call void @_ZN10CmdExtract9DoExtractEv(%class.CmdExtract* nonnull %6) #11
  call void @_ZN10CmdExtractD1Ev(%class.CmdExtract* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 16760, i8* nonnull %90) #11
  br label %91

91:                                               ; preds = %89, %87
  ret void
}

declare i32* @_Z6GetExtPKw(i32*) local_unnamed_addr #2

declare zeroext i1 @_Z9FileExistPKw(i32*) local_unnamed_addr #2

declare zeroext i1 @_Z5IsDirj(i32) local_unnamed_addr #2

declare i32 @_Z11GetFileAttrPKw(i32*) local_unnamed_addr #2

declare void @_Z19GenerateArchiveNamePwmPKwb(i32*, i64, i32*, i1 zeroext) local_unnamed_addr #2

declare void @_ZN8ScanTreeC1EP10StringList12RECURSE_MODEb9SCAN_DIRS(%class.ScanTree*, %class.StringList*, i32, i1 zeroext, i32) unnamed_addr #2

declare i32 @_ZN8ScanTree7GetNextEP8FindData(%class.ScanTree*, %struct.FindData*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CommandData10AddArcNameEPKw(%class.CommandData*, i32*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 10
  tail call void @_ZN10StringList9AddStringEPKw(%class.StringList* %3, i32* %1) #11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN8ScanTreeD1Ev(%class.ScanTree*) unnamed_addr #8

declare void @_ZN10CmdExtractC1EP11CommandData(%class.CmdExtract*, %class.CommandData*) unnamed_addr #2

declare void @_ZN10CmdExtract9DoExtractEv(%class.CmdExtract*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN10CmdExtractD1Ev(%class.CmdExtract*) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN11CommandData10GetArcNameEPwi(%class.CommandData*, i32*, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 10
  %5 = sext i32 %2 to i64
  %6 = tail call zeroext i1 @_ZN10StringList9GetStringEPwm(%class.StringList* %4, i32* %1, i64 %5) #11
  ret i1 %6
}

; Function Attrs: nounwind
declare i64 @wcstol(i32*, i32**, i32) local_unnamed_addr #8

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN11CommandData12CheckWinSizeEv(%class.CommandData* nocapture) local_unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 6
  %3 = load i64, i64* %2, align 8
  switch i64 %3, label %6 [
    i64 65536, label %4
    i64 131072, label %4
    i64 262144, label %4
    i64 524288, label %4
    i64 1048576, label %4
    i64 2097152, label %4
    i64 4194304, label %4
    i64 8388608, label %4
    i64 16777216, label %4
    i64 33554432, label %4
    i64 67108864, label %4
    i64 134217728, label %4
    i64 268435456, label %4
    i64 536870912, label %4
    i64 1073741824, label %4
    i64 2147483648, label %4
    i64 4294967296, label %4
  ]

4:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %6
  %5 = phi i1 [ false, %6 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ]
  ret i1 %5

6:                                                ; preds = %1
  store i64 4194304, i64* %2, align 8
  br label %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CommandData19ReportWrongSwitchesE9RARFORMAT(%class.CommandData* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.uiMsgStore, align 8
  %4 = alloca %class.uiMsgStore, align 8
  %5 = alloca %class.uiMsgStore, align 8
  %6 = icmp eq i32 %1, 2
  br i1 %6, label %7, label %64

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 28
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 2
  br i1 %10, label %26, label %11

11:                                               ; preds = %7
  %12 = bitcast %class.uiMsgStore* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %12) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 112, i1 false) #11
  %13 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %5, i64 0, i32 0, i64 0
  %14 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %5, i64 0, i32 0, i64 1
  %15 = bitcast i32** %14 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.35, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.35, i64 0, i64 0)>, <2 x i32*>* %15, align 8
  %16 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %5, i64 0, i32 0, i64 3
  %17 = bitcast i32** %16 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.35, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.35, i64 0, i64 0)>, <2 x i32*>* %17, align 8
  %18 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %5, i64 0, i32 0, i64 5
  %19 = bitcast i32** %18 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.35, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.35, i64 0, i64 0)>, <2 x i32*>* %19, align 8
  %20 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %5, i64 0, i32 0, i64 7
  store i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.35, i64 0, i64 0), i32** %20, align 8
  %21 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %5, i64 0, i32 1, i64 0
  %22 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %5, i64 0, i32 4
  %23 = bitcast i32* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 32, i1 false) #11
  store i32 85, i32* %22, align 8
  %24 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %5, i64 0, i32 2
  store i32 1, i32* %24, align 8
  store i32* getelementptr inbounds ([4 x i32], [4 x i32]* @.str.31, i64 0, i64 0), i32** %13, align 8
  %25 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %5, i64 0, i32 3
  store i32 1, i32* %25, align 4
  store i32 4, i32* %21, align 8
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %12) #11
  br label %26

26:                                               ; preds = %7, %11
  %27 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 59
  %28 = load i8, i8* %27, align 2, !range !2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %45, label %30

30:                                               ; preds = %26
  %31 = bitcast %class.uiMsgStore* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %31) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 112, i1 false) #11
  %32 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %4, i64 0, i32 0, i64 0
  %33 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %4, i64 0, i32 0, i64 1
  %34 = bitcast i32** %33 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.35, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.35, i64 0, i64 0)>, <2 x i32*>* %34, align 8
  %35 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %4, i64 0, i32 0, i64 3
  %36 = bitcast i32** %35 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.35, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.35, i64 0, i64 0)>, <2 x i32*>* %36, align 8
  %37 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %4, i64 0, i32 0, i64 5
  %38 = bitcast i32** %37 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.35, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.35, i64 0, i64 0)>, <2 x i32*>* %38, align 8
  %39 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %4, i64 0, i32 0, i64 7
  store i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.35, i64 0, i64 0), i32** %39, align 8
  %40 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %4, i64 0, i32 1, i64 0
  %41 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %4, i64 0, i32 4
  %42 = bitcast i32* %40 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 32, i1 false) #11
  store i32 85, i32* %41, align 8
  %43 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %4, i64 0, i32 2
  store i32 1, i32* %43, align 8
  store i32* getelementptr inbounds ([4 x i32], [4 x i32]* @.str.32, i64 0, i64 0), i32** %32, align 8
  %44 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %4, i64 0, i32 3
  store i32 1, i32* %44, align 4
  store i32 4, i32* %40, align 8
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %31) #11
  br label %45

45:                                               ; preds = %26, %30
  %46 = getelementptr inbounds %class.CommandData, %class.CommandData* %0, i64 0, i32 0, i32 9
  %47 = load i32, i32* %46, align 8
  %48 = icmp eq i32 %47, 1
  br i1 %48, label %64, label %49

49:                                               ; preds = %45
  %50 = bitcast %class.uiMsgStore* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %50) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 -86, i64 112, i1 false) #11
  %51 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 0, i64 0
  %52 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 0, i64 1
  %53 = bitcast i32** %52 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.35, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.35, i64 0, i64 0)>, <2 x i32*>* %53, align 8
  %54 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 0, i64 3
  %55 = bitcast i32** %54 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.35, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.35, i64 0, i64 0)>, <2 x i32*>* %55, align 8
  %56 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 0, i64 5
  %57 = bitcast i32** %56 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.35, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.35, i64 0, i64 0)>, <2 x i32*>* %57, align 8
  %58 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 0, i64 7
  store i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.35, i64 0, i64 0), i32** %58, align 8
  %59 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 1, i64 0
  %60 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 4
  %61 = bitcast i32* %59 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 32, i1 false) #11
  store i32 85, i32* %60, align 8
  %62 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 2
  store i32 1, i32* %62, align 8
  store i32* getelementptr inbounds ([4 x i32], [4 x i32]* @.str.33, i64 0, i64 0), i32** %51, align 8
  %63 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 3
  store i32 1, i32* %63, align 4
  store i32 4, i32* %59, align 8
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %50) #11
  br label %64

64:                                               ; preds = %45, %49, %2
  ret void
}

declare i32* @_Z11GetCmdParamPKwPwm(i32*, i32*, i64) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5ArrayIwE3AddEm(%class.Array.0*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.Array.0, %class.Array.0* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, %1
  store i64 %5, i64* %3, align 8
  %6 = getelementptr inbounds %class.Array.0, %class.Array.0* %0, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = icmp ugt i64 %5, %7
  br i1 %8, label %9, label %56

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.Array.0, %class.Array.0* %0, i64 0, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = icmp ne i64 %11, 0
  %13 = icmp ugt i64 %5, %11
  %14 = and i1 %12, %13
  br i1 %14, label %15, label %18

15:                                               ; preds = %9
  tail call void (%class.ErrorHandler*, i32*, ...) @_ZN12ErrorHandler13GeneralErrMsgEPKwz(%class.ErrorHandler* nonnull @ErrHandler, i32* getelementptr inbounds ([44 x i32], [44 x i32]* @.str.34, i64 0, i64 0), i64 %11) #11
  tail call void @_ZN12ErrorHandler11MemoryErrorEv(%class.ErrorHandler* nonnull @ErrHandler) #11
  %16 = load i64, i64* %6, align 8
  %17 = load i64, i64* %3, align 8
  br label %18

18:                                               ; preds = %9, %15
  %19 = phi i64 [ %5, %9 ], [ %17, %15 ]
  %20 = phi i64 [ %7, %9 ], [ %16, %15 ]
  %21 = lshr i64 %20, 2
  %22 = add i64 %20, 32
  %23 = add i64 %22, %21
  %24 = icmp ugt i64 %19, %23
  %25 = select i1 %24, i64 %19, i64 %23
  %26 = getelementptr inbounds %class.Array.0, %class.Array.0* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %45, label %29

29:                                               ; preds = %18
  %30 = shl i64 %25, 2
  %31 = tail call noalias i8* @malloc(i64 %30) #11
  %32 = bitcast i8* %31 to i32*
  %33 = icmp eq i8* %31, null
  br i1 %33, label %34, label %35

34:                                               ; preds = %29
  tail call void @_ZN12ErrorHandler11MemoryErrorEv(%class.ErrorHandler* nonnull @ErrHandler) #11
  br label %35

35:                                               ; preds = %34, %29
  %36 = getelementptr inbounds %class.Array.0, %class.Array.0* %0, i64 0, i32 0
  %37 = load i32*, i32** %36, align 8
  %38 = icmp eq i32* %37, null
  %39 = bitcast i32* %37 to i8*
  br i1 %38, label %53, label %40

40:                                               ; preds = %35
  %41 = load i64, i64* %6, align 8
  %42 = shl i64 %41, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %31, i8* nonnull align 4 %39, i64 %42, i1 false)
  %43 = bitcast %class.Array.0* %0 to i8**
  tail call void @_Z9cleandataPvm(i8* nonnull %39, i64 %42) #11
  %44 = load i8*, i8** %43, align 8
  tail call void @free(i8* %44) #11
  br label %53

45:                                               ; preds = %18
  %46 = bitcast %class.Array.0* %0 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = shl i64 %25, 2
  %49 = tail call i8* @realloc(i8* %47, i64 %48) #11
  %50 = bitcast i8* %49 to i32*
  %51 = icmp eq i8* %49, null
  br i1 %51, label %52, label %53

52:                                               ; preds = %45
  tail call void @_ZN12ErrorHandler11MemoryErrorEv(%class.ErrorHandler* nonnull @ErrHandler) #11
  br label %53

53:                                               ; preds = %35, %45, %52, %40
  %54 = phi i32* [ %32, %40 ], [ %32, %35 ], [ null, %52 ], [ %50, %45 ]
  %55 = getelementptr inbounds %class.Array.0, %class.Array.0* %0, i64 0, i32 0
  store i32* %54, i32** %55, align 8
  store i64 %25, i64* %6, align 8
  br label %56

56:                                               ; preds = %53, %2
  ret void
}

declare void @_ZN12ErrorHandler13GeneralErrMsgEPKwz(%class.ErrorHandler*, i32*, ...) local_unnamed_addr #2

declare void @_ZN12ErrorHandler11MemoryErrorEv(%class.ErrorHandler*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind
declare noalias i8* @realloc(i8* nocapture, i64) local_unnamed_addr #8

declare void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
