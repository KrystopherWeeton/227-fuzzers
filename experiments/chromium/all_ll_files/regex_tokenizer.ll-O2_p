; ModuleID = '../../third_party/tflite-support/src/tensorflow_lite_support/cc/text/tokenizers/regex_tokenizer.cc'
source_filename = "../../third_party/tflite-support/src/tensorflow_lite_support/cc/text/tokenizers/regex_tokenizer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.tflite::support::text::tokenizer::RegexTokenizer" = type { %"class.tflite::support::text::tokenizer::Tokenizer", %"class.re2::RE2", %"class.absl::node_hash_map", %"class.absl::node_hash_map.8" }
%"class.tflite::support::text::tokenizer::Tokenizer" = type { i32 (...)** }
%"class.re2::RE2" = type { %"class.std::__1::basic_string", %"class.re2::RE2::Options", %"class.re2::Regexp"*, %"class.std::__1::basic_string"*, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, %"class.re2::Regexp"*, %"class.re2::Prog"*, i32, i8, %"class.re2::Prog"*, %"class.std::__1::map"*, %"class.std::__1::map.1"*, %"struct.std::__1::once_flag", %"struct.std::__1::once_flag", %"struct.std::__1::once_flag" }
%"class.re2::RE2::Options" = type { i32, i8, i8, i8, i64, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.re2::Regexp" = type opaque
%"class.re2::Prog" = type opaque
%"class.std::__1::map" = type opaque
%"class.std::__1::map.1" = type opaque
%"struct.std::__1::once_flag" = type { i64 }
%"class.absl::node_hash_map" = type { %"class.absl::container_internal::raw_hash_map" }
%"class.absl::container_internal::raw_hash_map" = type { %"class.absl::container_internal::raw_hash_set" }
%"class.absl::container_internal::raw_hash_set" = type { i8*, %"struct.std::__1::pair"**, i64, i64, %"class.absl::container_internal::CompressedTuple" }
%"struct.std::__1::pair" = type <{ %"class.std::__1::basic_string", i32, [4 x i8] }>
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage" = type { i64 }
%"class.absl::node_hash_map.8" = type { %"class.absl::container_internal::raw_hash_map.9" }
%"class.absl::container_internal::raw_hash_map.9" = type { %"class.absl::container_internal::raw_hash_set.10" }
%"class.absl::container_internal::raw_hash_set.10" = type { i8*, %"struct.std::__1::pair.11"**, i64, i64, %"class.absl::container_internal::CompressedTuple.12" }
%"struct.std::__1::pair.11" = type { i32, %"class.absl::string_view" }
%"class.absl::string_view" = type { i8*, i64 }
%"class.absl::container_internal::CompressedTuple.12" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.13" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.13" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.std::__1::pair.28" = type <{ %"class.absl::container_internal::raw_hash_set<absl::container_internal::NodeHashMapPolicy<int, absl::string_view>, absl::hash_internal::Hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, absl::string_view> > >::iterator", i8, [7 x i8] }>
%"class.absl::container_internal::raw_hash_set<absl::container_internal::NodeHashMapPolicy<int, absl::string_view>, absl::hash_internal::Hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, absl::string_view> > >::iterator" = type { i8*, %union.anon.25 }
%union.anon.25 = type { %"struct.std::__1::pair.11"** }
%"struct.tflite::support::text::tokenizer::TokenizerResult" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.std::__1::basic_string"* }
%"class.re2::RE2::Arg" = type { i8*, i1 (i8*, i64, i8*)* }
%"class.re2::StringPiece" = type { i8*, i64 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN6tflite7support4text9tokenizer14RegexTokenizerD2Ev = comdat any

$_ZN6tflite7support4text9tokenizer14RegexTokenizerD0Ev = comdat any

$_ZN4absl18container_internal12raw_hash_mapINS0_17NodeHashMapPolicyIiNS_11string_viewEEENS_13hash_internal4HashIiEENSt3__18equal_toIiEENS8_9allocatorINS8_4pairIKiS3_EEEEE16try_emplace_implIRSD_JEEENSC_INS0_12raw_hash_setIS4_S7_SA_SF_E8iteratorEbEEOT_DpOT0_ = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyIiNS_11string_viewEEENS_13hash_internal4HashIiEENSt3__18equal_toIiEENS8_9allocatorINS8_4pairIKiS3_EEEEE14prepare_insertEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyIiNS_11string_viewEEENS_13hash_internal4HashIiEENSt3__18equal_toIiEENS8_9allocatorINS8_4pairIKiS3_EEEEE6resizeEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyIiNS_11string_viewEEENS_13hash_internal4HashIiEENSt3__18equal_toIiEENS8_9allocatorINS8_4pairIKiS3_EEEEE27drop_deletes_without_resizeEv = comdat any

$_ZN3re23RE23Arg11DoParse3aryINS_11StringPieceEEEbPKcmPv = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

$_ZN4absl13hash_internal15MixingHashState18combine_contiguousES1_PKhm = comdat any

$_ZTSN6tflite7support4text9tokenizer9TokenizerE = comdat any

$_ZTIN6tflite7support4text9tokenizer9TokenizerE = comdat any

$_ZZN4absl18container_internal10EmptyGroupEvE11empty_group = comdat any

@_ZTVN6tflite7support4text9tokenizer14RegexTokenizerE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6tflite7support4text9tokenizer14RegexTokenizerE to i8*), i8* bitcast (void (%"struct.tflite::support::text::tokenizer::TokenizerResult"*, %"class.tflite::support::text::tokenizer::RegexTokenizer"*, %"class.std::__1::basic_string"*)* @_ZN6tflite7support4text9tokenizer14RegexTokenizer8TokenizeERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE to i8*), i8* bitcast (i1 (%"class.tflite::support::text::tokenizer::RegexTokenizer"*, i8*, i64, i32*)* @_ZNK6tflite7support4text9tokenizer14RegexTokenizer8LookupIdEN4absl11string_viewEPi to i8*), i8* bitcast (i1 (%"class.tflite::support::text::tokenizer::RegexTokenizer"*, i32, %"class.absl::string_view"*)* @_ZNK6tflite7support4text9tokenizer14RegexTokenizer10LookupWordEiPN4absl11string_viewE to i8*), i8* bitcast (void (%"class.tflite::support::text::tokenizer::RegexTokenizer"*)* @_ZN6tflite7support4text9tokenizer14RegexTokenizerD2Ev to i8*), i8* bitcast (void (%"class.tflite::support::text::tokenizer::RegexTokenizer"*)* @_ZN6tflite7support4text9tokenizer14RegexTokenizerD0Ev to i8*)] }, align 8
@.str = private unnamed_addr constant [5 x i8] c"($0)\00", align 1
@_ZN6tflite7support4text9tokenizer12_GLOBAL__N_16kStartE = internal constant [8 x i8] c"<START>\00", align 1
@_ZN6tflite7support4text9tokenizer12_GLOBAL__N_14kPadE = internal constant [6 x i8] c"<PAD>\00", align 1
@_ZN6tflite7support4text9tokenizer12_GLOBAL__N_18kUnknownE = internal constant [10 x i8] c"<UNKNOWN>\00", align 1
@_ZTVN10__cxxabiv120__si_class_type_infoE = external global i8*
@_ZTSN6tflite7support4text9tokenizer14RegexTokenizerE = hidden constant [49 x i8] c"N6tflite7support4text9tokenizer14RegexTokenizerE\00", align 1
@_ZTVN10__cxxabiv117__class_type_infoE = external global i8*
@_ZTSN6tflite7support4text9tokenizer9TokenizerE = linkonce_odr hidden constant [43 x i8] c"N6tflite7support4text9tokenizer9TokenizerE\00", comdat, align 1
@_ZTIN6tflite7support4text9tokenizer9TokenizerE = linkonce_odr hidden constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @_ZTSN6tflite7support4text9tokenizer9TokenizerE, i32 0, i32 0) }, comdat, align 8
@_ZTIN6tflite7support4text9tokenizer14RegexTokenizerE = hidden constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @_ZTSN6tflite7support4text9tokenizer14RegexTokenizerE, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTIN6tflite7support4text9tokenizer9TokenizerE to i8*) }, align 8
@_ZN4absl13hash_internal15MixingHashState5kSeedE = external local_unnamed_addr constant i8*, align 8
@_ZZN4absl18container_internal10EmptyGroupEvE11empty_group = linkonce_odr hidden constant [16 x i8] c"\FF\80\80\80\80\80\80\80\80\80\80\80\80\80\80\80", comdat, align 16

@_ZN6tflite7support4text9tokenizer14RegexTokenizerC1ERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESC_ = hidden unnamed_addr alias void (%"class.tflite::support::text::tokenizer::RegexTokenizer"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*), void (%"class.tflite::support::text::tokenizer::RegexTokenizer"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)* @_ZN6tflite7support4text9tokenizer14RegexTokenizerC2ERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESC_
@_ZN6tflite7support4text9tokenizer14RegexTokenizerC1ERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEPKcm = hidden unnamed_addr alias void (%"class.tflite::support::text::tokenizer::RegexTokenizer"*, %"class.std::__1::basic_string"*, i8*, i64), void (%"class.tflite::support::text::tokenizer::RegexTokenizer"*, %"class.std::__1::basic_string"*, i8*, i64)* @_ZN6tflite7support4text9tokenizer14RegexTokenizerC2ERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEPKcm

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6tflite7support4text9tokenizer14RegexTokenizerC2ERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESC_(%"class.tflite::support::text::tokenizer::RegexTokenizer"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = alloca [1 x %"class.absl::string_view"], align 16
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %"class.tflite::support::text::tokenizer::RegexTokenizer", %"class.tflite::support::text::tokenizer::RegexTokenizer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN6tflite7support4text9tokenizer14RegexTokenizerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.tflite::support::text::tokenizer::RegexTokenizer", %"class.tflite::support::text::tokenizer::RegexTokenizer"* %0, i64 0, i32 1
  %8 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #7
  %9 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %3
  %14 = zext i8 %11 to i64
  %15 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  br label %23

16:                                               ; preds = %3
  %17 = bitcast %"class.std::__1::basic_string"* %1 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = icmp sgt i64 %20, -1
  br i1 %21, label %23, label %22, !prof !2

22:                                               ; preds = %16
  tail call void @llvm.trap() #7
  unreachable

23:                                               ; preds = %13, %16
  %24 = phi i64 [ %18, %16 ], [ %15, %13 ]
  %25 = phi i64 [ %20, %16 ], [ %14, %13 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #7, !alias.scope !3
  %26 = bitcast [1 x %"class.absl::string_view"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #7, !noalias !3
  %27 = getelementptr inbounds [1 x %"class.absl::string_view"], [1 x %"class.absl::string_view"]* %4, i64 0, i64 0
  %28 = getelementptr inbounds [1 x %"class.absl::string_view"], [1 x %"class.absl::string_view"]* %4, i64 0, i64 0, i32 1
  %29 = bitcast [1 x %"class.absl::string_view"]* %4 to i64*
  store i64 %24, i64* %29, align 16, !noalias !3
  store i64 %25, i64* %28, align 8, !noalias !3
  call void @_ZN4absl19substitute_internal24SubstituteAndAppendArrayEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_11string_viewEPKS9_m(%"class.std::__1::basic_string"* nonnull %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64 4, %"class.absl::string_view"* nonnull %27, i64 1) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #7, !noalias !3
  call void @_ZN3re23RE2C1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.re2::RE2"* %7, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #7
  %30 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %23
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  call void @_ZdlPv(i8* %36) #15
  br label %37

37:                                               ; preds = %23, %34
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #7
  %38 = getelementptr inbounds %"class.tflite::support::text::tokenizer::RegexTokenizer", %"class.tflite::support::text::tokenizer::RegexTokenizer"* %0, i64 0, i32 2
  call void @_ZN6tflite7support5utils25LoadVocabAndIndexFromFileERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.absl::node_hash_map"* sret %38, %"class.std::__1::basic_string"* dereferenceable(24) %2) #7
  %39 = getelementptr inbounds %"class.tflite::support::text::tokenizer::RegexTokenizer", %"class.tflite::support::text::tokenizer::RegexTokenizer"* %0, i64 0, i32 3
  %40 = getelementptr inbounds %"class.absl::node_hash_map.8", %"class.absl::node_hash_map.8"* %39, i64 0, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %40, align 8
  %41 = getelementptr inbounds %"class.tflite::support::text::tokenizer::RegexTokenizer", %"class.tflite::support::text::tokenizer::RegexTokenizer"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %42 = bitcast %"struct.std::__1::pair.11"*** %41 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 32, i1 false) #7
  call fastcc void @_ZN6tflite7support4text9tokenizer12_GLOBAL__N_118buildIndexTokenMapERKN4absl13node_hash_mapINSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEiNS4_18container_internal10StringHashENSD_12StringHashEq2EqENSA_INS6_4pairIKSC_iEEEEEEPNS5_IiNS4_11string_viewENS4_13hash_internal4HashIiEENS6_8equal_toIiEENSA_INSH_IKiSO_EEEEEE(%"class.absl::node_hash_map"* dereferenceable(40) %38, %"class.absl::node_hash_map.8"* %39)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN3re23RE2C1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.re2::RE2"*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN6tflite7support5utils25LoadVocabAndIndexFromFileERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.absl::node_hash_map"* sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN6tflite7support4text9tokenizer12_GLOBAL__N_118buildIndexTokenMapERKN4absl13node_hash_mapINSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEiNS4_18container_internal10StringHashENSD_12StringHashEq2EqENSA_INS6_4pairIKSC_iEEEEEEPNS5_IiNS4_11string_viewENS4_13hash_internal4HashIiEENS6_8equal_toIiEENSA_INSH_IKiSO_EEEEEE(%"class.absl::node_hash_map"* nocapture readonly dereferenceable(40), %"class.absl::node_hash_map.8"*) unnamed_addr #3 {
  %3 = alloca %"struct.std::__1::pair.28", align 8
  %4 = getelementptr inbounds %"class.absl::node_hash_map", %"class.absl::node_hash_map"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load i8*, i8** %4, align 8, !nonnull !6
  %6 = getelementptr inbounds %"class.absl::node_hash_map", %"class.absl::node_hash_map"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load %"struct.std::__1::pair"**, %"struct.std::__1::pair"*** %6, align 8
  %8 = load i8, i8* %5, align 1
  %9 = icmp slt i8 %8, -1
  br i1 %9, label %10, label %25

10:                                               ; preds = %2, %10
  %11 = phi %"struct.std::__1::pair"** [ %22, %10 ], [ %7, %2 ]
  %12 = phi i8* [ %21, %10 ], [ %5, %2 ]
  %13 = bitcast i8* %12 to <16 x i8>*
  %14 = load <16 x i8>, <16 x i8>* %13, align 1
  %15 = icmp slt <16 x i8> %14, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %16 = bitcast <16 x i1> %15 to i16
  %17 = zext i16 %16 to i32
  %18 = add nuw nsw i32 %17, 1
  %19 = tail call i32 @llvm.cttz.i32(i32 %18, i1 true) #7, !range !7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds i8, i8* %12, i64 %20
  %22 = getelementptr inbounds %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %11, i64 %20
  %23 = load i8, i8* %21, align 1
  %24 = icmp slt i8 %23, -1
  br i1 %24, label %10, label %25

25:                                               ; preds = %10, %2
  %26 = phi %"struct.std::__1::pair"** [ %7, %2 ], [ %22, %10 ]
  %27 = phi i8* [ %5, %2 ], [ %21, %10 ]
  %28 = phi i8 [ %8, %2 ], [ %23, %10 ]
  %29 = icmp eq i8 %28, -1
  %30 = icmp eq i8* %27, null
  %31 = or i1 %29, %30
  br i1 %31, label %39, label %32

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"class.absl::node_hash_map.8", %"class.absl::node_hash_map.8"* %1, i64 0, i32 0
  %34 = bitcast %"struct.std::__1::pair.28"* %3 to i8*
  %35 = getelementptr inbounds %"struct.std::__1::pair.28", %"struct.std::__1::pair.28"* %3, i64 0, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::__1::pair.28", %"struct.std::__1::pair.28"* %3, i64 0, i32 0, i32 1, i32 0
  %37 = icmp sgt i8 %28, -1
  br i1 %37, label %40, label %38, !prof !2

38:                                               ; preds = %104, %32
  call void @llvm.trap() #7
  unreachable

39:                                               ; preds = %97, %25
  ret void

40:                                               ; preds = %32, %104
  %41 = phi i8* [ %102, %104 ], [ %27, %32 ]
  %42 = phi %"struct.std::__1::pair"** [ %99, %104 ], [ %26, %32 ]
  %43 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %42, align 8
  %44 = bitcast %"struct.std::__1::pair"* %43 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %51, label %48

48:                                               ; preds = %40
  %49 = zext i8 %46 to i64
  %50 = ptrtoint %"struct.std::__1::pair"* %43 to i64
  br label %58

51:                                               ; preds = %40
  %52 = bitcast %"struct.std::__1::pair"* %43 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %55 = load i64, i64* %54, align 8
  %56 = icmp sgt i64 %55, -1
  br i1 %56, label %58, label %57, !prof !2

57:                                               ; preds = %51
  call void @llvm.trap() #7
  unreachable

58:                                               ; preds = %48, %51
  %59 = phi i64 [ %53, %51 ], [ %50, %48 ]
  %60 = phi i64 [ %55, %51 ], [ %49, %48 ]
  %61 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %43, i64 0, i32 1
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #7
  call void @_ZN4absl18container_internal12raw_hash_mapINS0_17NodeHashMapPolicyIiNS_11string_viewEEENS_13hash_internal4HashIiEENSt3__18equal_toIiEENS8_9allocatorINS8_4pairIKiS3_EEEEE16try_emplace_implIRSD_JEEENSC_INS0_12raw_hash_setIS4_S7_SA_SF_E8iteratorEbEEOT_DpOT0_(%"struct.std::__1::pair.28"* nonnull sret %3, %"class.absl::container_internal::raw_hash_map.9"* %33, i32* dereferenceable(4) %61) #7
  %62 = load i8*, i8** %35, align 8
  %63 = icmp eq i8* %62, null
  br i1 %63, label %67, label %64, !prof !8

64:                                               ; preds = %58
  %65 = load i8, i8* %62, align 1
  %66 = icmp sgt i8 %65, -1
  br i1 %66, label %68, label %67, !prof !2

67:                                               ; preds = %64, %58
  call void @llvm.trap() #7
  unreachable

68:                                               ; preds = %64
  %69 = load %"struct.std::__1::pair.11"**, %"struct.std::__1::pair.11"*** %36, align 8
  %70 = load %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %69, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #7
  %71 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %70, i64 0, i32 1
  %72 = bitcast %"class.absl::string_view"* %71 to i64*
  store i64 %59, i64* %72, align 8
  %73 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %70, i64 0, i32 1, i32 1
  store i64 %60, i64* %73, align 8
  %74 = load i8, i8* %41, align 1
  %75 = icmp sgt i8 %74, -1
  br i1 %75, label %77, label %76, !prof !2

76:                                               ; preds = %68
  call void @llvm.trap() #7
  unreachable

77:                                               ; preds = %68
  %78 = getelementptr inbounds i8, i8* %41, i64 1
  %79 = getelementptr inbounds %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %42, i64 1
  %80 = load i8, i8* %78, align 1
  %81 = icmp slt i8 %80, -1
  br i1 %81, label %82, label %97

82:                                               ; preds = %77, %82
  %83 = phi %"struct.std::__1::pair"** [ %94, %82 ], [ %79, %77 ]
  %84 = phi i8* [ %93, %82 ], [ %78, %77 ]
  %85 = bitcast i8* %84 to <16 x i8>*
  %86 = load <16 x i8>, <16 x i8>* %85, align 1
  %87 = icmp slt <16 x i8> %86, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %88 = bitcast <16 x i1> %87 to i16
  %89 = zext i16 %88 to i32
  %90 = add nuw nsw i32 %89, 1
  %91 = call i32 @llvm.cttz.i32(i32 %90, i1 true) #7, !range !7
  %92 = zext i32 %91 to i64
  %93 = getelementptr inbounds i8, i8* %84, i64 %92
  %94 = getelementptr inbounds %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %83, i64 %92
  %95 = load i8, i8* %93, align 1
  %96 = icmp slt i8 %95, -1
  br i1 %96, label %82, label %97

97:                                               ; preds = %82, %77
  %98 = phi i8* [ %78, %77 ], [ %93, %82 ]
  %99 = phi %"struct.std::__1::pair"** [ %79, %77 ], [ %94, %82 ]
  %100 = phi i8 [ %80, %77 ], [ %95, %82 ]
  %101 = icmp eq i8 %100, -1
  %102 = select i1 %101, i8* null, i8* %98, !prof !8
  %103 = icmp eq i8* %102, null
  br i1 %103, label %39, label %104

104:                                              ; preds = %97
  %105 = load i8, i8* %102, align 1
  %106 = icmp sgt i8 %105, -1
  br i1 %106, label %40, label %38, !prof !2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6tflite7support4text9tokenizer14RegexTokenizerC2ERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEPKcm(%"class.tflite::support::text::tokenizer::RegexTokenizer"*, %"class.std::__1::basic_string"* dereferenceable(24), i8*, i64) unnamed_addr #0 align 2 {
  %5 = alloca [1 x %"class.absl::string_view"], align 16
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = getelementptr inbounds %"class.tflite::support::text::tokenizer::RegexTokenizer", %"class.tflite::support::text::tokenizer::RegexTokenizer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN6tflite7support4text9tokenizer14RegexTokenizerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.tflite::support::text::tokenizer::RegexTokenizer", %"class.tflite::support::text::tokenizer::RegexTokenizer"* %0, i64 0, i32 1
  %9 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #7
  %10 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %4
  %15 = zext i8 %12 to i64
  %16 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  br label %24

17:                                               ; preds = %4
  %18 = bitcast %"class.std::__1::basic_string"* %1 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = icmp sgt i64 %21, -1
  br i1 %22, label %24, label %23, !prof !2

23:                                               ; preds = %17
  tail call void @llvm.trap() #7
  unreachable

24:                                               ; preds = %14, %17
  %25 = phi i64 [ %19, %17 ], [ %16, %14 ]
  %26 = phi i64 [ %21, %17 ], [ %15, %14 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 24, i1 false) #7, !alias.scope !9
  %27 = bitcast [1 x %"class.absl::string_view"]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #7, !noalias !9
  %28 = getelementptr inbounds [1 x %"class.absl::string_view"], [1 x %"class.absl::string_view"]* %5, i64 0, i64 0
  %29 = getelementptr inbounds [1 x %"class.absl::string_view"], [1 x %"class.absl::string_view"]* %5, i64 0, i64 0, i32 1
  %30 = bitcast [1 x %"class.absl::string_view"]* %5 to i64*
  store i64 %25, i64* %30, align 16, !noalias !9
  store i64 %26, i64* %29, align 8, !noalias !9
  call void @_ZN4absl19substitute_internal24SubstituteAndAppendArrayEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_11string_viewEPKS9_m(%"class.std::__1::basic_string"* nonnull %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64 4, %"class.absl::string_view"* nonnull %28, i64 1) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #7, !noalias !9
  call void @_ZN3re23RE2C1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.re2::RE2"* %8, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #7
  %31 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %24
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @_ZdlPv(i8* %37) #15
  br label %38

38:                                               ; preds = %24, %35
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #7
  %39 = getelementptr inbounds %"class.tflite::support::text::tokenizer::RegexTokenizer", %"class.tflite::support::text::tokenizer::RegexTokenizer"* %0, i64 0, i32 2
  call void @_ZN6tflite7support5utils27LoadVocabAndIndexFromBufferEPKcm(%"class.absl::node_hash_map"* sret %39, i8* %2, i64 %3) #7
  %40 = getelementptr inbounds %"class.tflite::support::text::tokenizer::RegexTokenizer", %"class.tflite::support::text::tokenizer::RegexTokenizer"* %0, i64 0, i32 3
  %41 = getelementptr inbounds %"class.absl::node_hash_map.8", %"class.absl::node_hash_map.8"* %40, i64 0, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %41, align 8
  %42 = getelementptr inbounds %"class.tflite::support::text::tokenizer::RegexTokenizer", %"class.tflite::support::text::tokenizer::RegexTokenizer"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %43 = bitcast %"struct.std::__1::pair.11"*** %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 32, i1 false) #7
  call fastcc void @_ZN6tflite7support4text9tokenizer12_GLOBAL__N_118buildIndexTokenMapERKN4absl13node_hash_mapINSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEiNS4_18container_internal10StringHashENSD_12StringHashEq2EqENSA_INS6_4pairIKSC_iEEEEEEPNS5_IiNS4_11string_viewENS4_13hash_internal4HashIiEENS6_8equal_toIiEENSA_INSH_IKiSO_EEEEEE(%"class.absl::node_hash_map"* dereferenceable(40) %39, %"class.absl::node_hash_map.8"* %40)
  ret void
}

declare void @_ZN6tflite7support5utils27LoadVocabAndIndexFromBufferEPKcm(%"class.absl::node_hash_map"* sret, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6tflite7support4text9tokenizer14RegexTokenizer8TokenizeERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"struct.tflite::support::text::tokenizer::TokenizerResult"* noalias sret, %"class.tflite::support::text::tokenizer::RegexTokenizer"*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = alloca [1 x %"class.re2::RE2::Arg"*], align 8
  %5 = alloca %"class.re2::RE2::Arg", align 8
  %6 = alloca %"class.re2::StringPiece", align 8
  %7 = alloca %"class.re2::StringPiece", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = bitcast %"class.re2::StringPiece"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #7
  %11 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %6, i64 0, i32 0
  %12 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %6, i64 0, i32 1
  %13 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %6, i64 0, i32 1
  store i64 -6148914691236517206, i64* %15, align 8
  %16 = load i8, i8* %14, align 1
  %17 = icmp slt i8 %16, 0
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %21 = select i1 %17, i8* %19, i8* %20
  store i8* %21, i8** %11, align 8
  %22 = icmp eq i8* %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %3
  %24 = tail call i64 @strlen(i8* nonnull %21) #16
  br label %25

25:                                               ; preds = %3, %23
  %26 = phi i64 [ %24, %23 ], [ 0, %3 ]
  store i64 %26, i64* %12, align 8
  %27 = getelementptr inbounds %"struct.tflite::support::text::tokenizer::TokenizerResult", %"struct.tflite::support::text::tokenizer::TokenizerResult"* %0, i64 0, i32 0
  %28 = getelementptr inbounds %"struct.tflite::support::text::tokenizer::TokenizerResult", %"struct.tflite::support::text::tokenizer::TokenizerResult"* %0, i64 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"struct.tflite::support::text::tokenizer::TokenizerResult", %"struct.tflite::support::text::tokenizer::TokenizerResult"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %30 = bitcast %"struct.tflite::support::text::tokenizer::TokenizerResult"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 24, i1 false) #7
  %31 = bitcast %"class.re2::StringPiece"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 0, i64 16, i1 false) #7
  %32 = getelementptr inbounds %"class.tflite::support::text::tokenizer::RegexTokenizer", %"class.tflite::support::text::tokenizer::RegexTokenizer"* %1, i64 0, i32 1
  %33 = ptrtoint %"class.re2::StringPiece"* %7 to i64
  %34 = bitcast %"class.re2::RE2::Arg"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #7
  %35 = bitcast %"class.re2::RE2::Arg"* %5 to i64*
  store i64 %33, i64* %35, align 8
  %36 = getelementptr inbounds %"class.re2::RE2::Arg", %"class.re2::RE2::Arg"* %5, i64 0, i32 1
  store i1 (i8*, i64, i8*)* @_ZN3re23RE23Arg11DoParse3aryINS_11StringPieceEEEbPKcmPv, i1 (i8*, i64, i8*)** %36, align 8
  %37 = bitcast [1 x %"class.re2::RE2::Arg"*]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #7
  %38 = getelementptr inbounds [1 x %"class.re2::RE2::Arg"*], [1 x %"class.re2::RE2::Arg"*]* %4, i64 0, i64 0
  store %"class.re2::RE2::Arg"* %5, %"class.re2::RE2::Arg"** %38, align 8
  %39 = call zeroext i1 @_ZN3re23RE215FindAndConsumeNEPNS_11StringPieceERKS0_PKPKNS0_3ArgEi(%"class.re2::StringPiece"* nonnull %6, %"class.re2::RE2"* dereferenceable(200) %32, %"class.re2::RE2::Arg"** nonnull %38, i32 1) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #7
  br i1 %39, label %40, label %91

40:                                               ; preds = %25
  %41 = bitcast %"class.re2::StringPiece"* %7 to i64*
  %42 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %46 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  %48 = bitcast %"class.std::__1::basic_string"** %28 to i64*
  br label %49

49:                                               ; preds = %40, %89
  %50 = phi i8* [ %21, %40 ], [ %55, %89 ]
  %51 = load i64, i64* %41, align 8
  %52 = ptrtoint i8* %50 to i64
  %53 = sub i64 %51, %52
  %54 = icmp eq i64 %53, 0
  %55 = load i8*, i8** %11, align 8
  br i1 %54, label %89, label %56

56:                                               ; preds = %49
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #7
  %57 = icmp eq i8* %50, null
  br i1 %57, label %58, label %59

58:                                               ; preds = %56
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 0, i64 24, i1 false) #7, !alias.scope !12
  br label %75

59:                                               ; preds = %56
  %60 = icmp ugt i64 %53, -17
  br i1 %60, label %61, label %63

61:                                               ; preds = %59
  %62 = bitcast %"class.std::__1::basic_string"* %8 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %62) #17
  unreachable

63:                                               ; preds = %59
  %64 = icmp ult i64 %53, 23
  br i1 %64, label %70, label %65

65:                                               ; preds = %63
  %66 = add nuw i64 %53, 16
  %67 = and i64 %66, -16
  %68 = call i8* @_Znwm(i64 %67) #15
  store i8* %68, i8** %43, align 8, !alias.scope !12
  %69 = or i64 %67, -9223372036854775808
  store i64 %69, i64* %44, align 8, !alias.scope !12
  store i64 %53, i64* %45, align 8, !alias.scope !12
  br label %72

70:                                               ; preds = %63
  %71 = trunc i64 %53 to i8
  store i8 %71, i8* %47, align 1, !alias.scope !12
  br label %72

72:                                               ; preds = %65, %70
  %73 = phi i8* [ %68, %65 ], [ %42, %70 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %73, i8* nonnull align 1 %50, i64 %53, i1 false) #7
  %74 = getelementptr inbounds i8, i8* %73, i64 %53
  store i8 0, i8* %74, align 1
  br label %75

75:                                               ; preds = %58, %72
  %76 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %28, align 8
  %77 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %29, align 8
  %78 = icmp ult %"class.std::__1::basic_string"* %76, %77
  br i1 %78, label %79, label %83

79:                                               ; preds = %75
  %80 = bitcast %"class.std::__1::basic_string"* %76 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %80, i8* nonnull align 8 %42, i64 24, i1 false) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 0, i64 24, i1 false) #7
  %81 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %76, i64 1
  %82 = ptrtoint %"class.std::__1::basic_string"* %81 to i64
  store i64 %82, i64* %48, align 8
  br label %88

83:                                               ; preds = %75
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"* %27, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8) #7
  %84 = load i8, i8* %47, align 1
  %85 = icmp slt i8 %84, 0
  br i1 %85, label %86, label %88

86:                                               ; preds = %83
  %87 = load i8*, i8** %43, align 8
  call void @_ZdlPv(i8* %87) #15
  br label %88

88:                                               ; preds = %79, %83, %86
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #7
  br label %89

89:                                               ; preds = %49, %88
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #7
  store i64 %33, i64* %35, align 8
  store i1 (i8*, i64, i8*)* @_ZN3re23RE23Arg11DoParse3aryINS_11StringPieceEEEbPKcmPv, i1 (i8*, i64, i8*)** %36, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #7
  store %"class.re2::RE2::Arg"* %5, %"class.re2::RE2::Arg"** %38, align 8
  %90 = call zeroext i1 @_ZN3re23RE215FindAndConsumeNEPNS_11StringPieceERKS0_PKPKNS0_3ArgEi(%"class.re2::StringPiece"* nonnull %6, %"class.re2::RE2"* dereferenceable(200) %32, %"class.re2::RE2::Arg"** nonnull %38, i32 1) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #7
  br i1 %90, label %49, label %91

91:                                               ; preds = %89, %25
  %92 = load i64, i64* %12, align 8
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %138, label %94

94:                                               ; preds = %91
  %95 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %95) #7
  %96 = load i8*, i8** %11, align 8, !noalias !15
  %97 = icmp eq i8* %96, null
  br i1 %97, label %98, label %99

98:                                               ; preds = %94
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %95, i8 0, i64 24, i1 false) #7, !alias.scope !15
  br label %120

99:                                               ; preds = %94
  %100 = icmp ugt i64 %92, -17
  br i1 %100, label %101, label %103

101:                                              ; preds = %99
  %102 = bitcast %"class.std::__1::basic_string"* %9 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %102) #17
  unreachable

103:                                              ; preds = %99
  %104 = icmp ult i64 %92, 23
  br i1 %104, label %113, label %105

105:                                              ; preds = %103
  %106 = add nuw i64 %92, 16
  %107 = and i64 %106, -16
  %108 = call i8* @_Znwm(i64 %107) #15
  %109 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %108, i8** %109, align 8, !alias.scope !15
  %110 = or i64 %107, -9223372036854775808
  %111 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %110, i64* %111, align 8, !alias.scope !15
  %112 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %92, i64* %112, align 8, !alias.scope !15
  br label %117

113:                                              ; preds = %103
  %114 = trunc i64 %92 to i8
  %115 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %116 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %115, i64 0, i32 1, i32 0
  store i8 %114, i8* %116, align 1, !alias.scope !15
  br label %117

117:                                              ; preds = %105, %113
  %118 = phi i8* [ %108, %105 ], [ %95, %113 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %118, i8* nonnull align 1 %96, i64 %92, i1 false) #7
  %119 = getelementptr inbounds i8, i8* %118, i64 %92
  store i8 0, i8* %119, align 1
  br label %120

120:                                              ; preds = %98, %117
  %121 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %28, align 8
  %122 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %29, align 8
  %123 = icmp ult %"class.std::__1::basic_string"* %121, %122
  br i1 %123, label %124, label %129

124:                                              ; preds = %120
  %125 = bitcast %"class.std::__1::basic_string"* %121 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %125, i8* nonnull align 8 %95, i64 24, i1 false) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %95, i8 0, i64 24, i1 false) #7
  %126 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %121, i64 1
  %127 = ptrtoint %"class.std::__1::basic_string"* %126 to i64
  %128 = bitcast %"class.std::__1::basic_string"** %28 to i64*
  store i64 %127, i64* %128, align 8
  br label %137

129:                                              ; preds = %120
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"* %27, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %9) #7
  %130 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %131 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %130, i64 0, i32 1, i32 0
  %132 = load i8, i8* %131, align 1
  %133 = icmp slt i8 %132, 0
  br i1 %133, label %134, label %137

134:                                              ; preds = %129
  %135 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load i8*, i8** %135, align 8
  call void @_ZdlPv(i8* %136) #15
  br label %137

137:                                              ; preds = %124, %129, %134
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %95) #7
  br label %138

138:                                              ; preds = %137, %91
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK6tflite7support4text9tokenizer14RegexTokenizer8LookupIdEN4absl11string_viewEPi(%"class.tflite::support::text::tokenizer::RegexTokenizer"* nocapture readonly, i8*, i64, i32* nocapture) unnamed_addr #3 align 2 {
  %5 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %6 = tail call i64 @_ZN4absl13hash_internal15MixingHashState18combine_contiguousES1_PKhm(i64 %5, i8* %1, i64 %2) #7
  %7 = add i64 %6, %2
  %8 = zext i64 %7 to i128
  %9 = mul nuw i128 %8, 11376068507788127593
  %10 = lshr i128 %9, 64
  %11 = xor i128 %10, %9
  %12 = trunc i128 %11 to i64
  %13 = getelementptr inbounds %"class.tflite::support::text::tokenizer::RegexTokenizer", %"class.tflite::support::text::tokenizer::RegexTokenizer"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %"class.tflite::support::text::tokenizer::RegexTokenizer", %"class.tflite::support::text::tokenizer::RegexTokenizer"* %0, i64 0, i32 2, i32 0, i32 0, i32 3
  %16 = load i64, i64* %15, align 8
  %17 = lshr i64 %12, 7
  %18 = ptrtoint i8* %14 to i64
  %19 = lshr i64 %18, 12
  %20 = xor i64 %17, %19
  %21 = trunc i128 %11 to i8
  %22 = and i8 %21, 127
  %23 = insertelement <16 x i8> undef, i8 %22, i32 0
  %24 = shufflevector <16 x i8> %23, <16 x i8> undef, <16 x i32> zeroinitializer
  %25 = getelementptr inbounds %"class.tflite::support::text::tokenizer::RegexTokenizer", %"class.tflite::support::text::tokenizer::RegexTokenizer"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %26 = icmp eq i64 %2, 0
  br label %27

27:                                               ; preds = %79, %4
  %28 = phi i64 [ %20, %4 ], [ %81, %79 ]
  %29 = phi i64 [ 0, %4 ], [ %80, %79 ]
  %30 = and i64 %28, %16
  %31 = getelementptr inbounds i8, i8* %14, i64 %30
  %32 = bitcast i8* %31 to <16 x i8>*
  %33 = load <16 x i8>, <16 x i8>* %32, align 1
  %34 = icmp eq <16 x i8> %24, %33
  %35 = bitcast <16 x i1> %34 to i16
  %36 = icmp eq i16 %35, 0
  br i1 %36, label %75, label %37

37:                                               ; preds = %27
  %38 = zext i16 %35 to i32
  %39 = load %"struct.std::__1::pair"**, %"struct.std::__1::pair"*** %25, align 8
  br label %40

40:                                               ; preds = %71, %37
  %41 = phi i32 [ %38, %37 ], [ %73, %71 ]
  %42 = tail call i32 @llvm.cttz.i32(i32 %41, i1 false) #7, !range !7
  %43 = zext i32 %42 to i64
  %44 = add i64 %30, %43
  %45 = and i64 %44, %16
  %46 = getelementptr inbounds %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %39, i64 %45
  %47 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %46, align 8
  %48 = bitcast %"struct.std::__1::pair"* %47 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %40
  %53 = zext i8 %50 to i64
  %54 = ptrtoint %"struct.std::__1::pair"* %47 to i64
  br label %62

55:                                               ; preds = %40
  %56 = bitcast %"struct.std::__1::pair"* %47 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %59 = load i64, i64* %58, align 8
  %60 = icmp sgt i64 %59, -1
  br i1 %60, label %62, label %61, !prof !2

61:                                               ; preds = %55
  tail call void @llvm.trap() #7
  unreachable

62:                                               ; preds = %55, %52
  %63 = phi i64 [ %57, %55 ], [ %54, %52 ]
  %64 = phi i64 [ %59, %55 ], [ %53, %52 ]
  %65 = inttoptr i64 %63 to i8*
  %66 = icmp eq i64 %64, %2
  br i1 %66, label %67, label %71, !prof !18

67:                                               ; preds = %62
  br i1 %26, label %82, label %68

68:                                               ; preds = %67
  %69 = tail call i32 @bcmp(i8* %65, i8* %1, i64 %2) #7
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %82, label %71, !prof !2

71:                                               ; preds = %68, %62
  %72 = add i32 %41, -1
  %73 = and i32 %72, %41
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %40

75:                                               ; preds = %71, %27
  %76 = icmp eq <16 x i8> %33, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %77 = bitcast <16 x i1> %76 to i16
  %78 = icmp eq i16 %77, 0
  br i1 %78, label %79, label %91, !prof !8

79:                                               ; preds = %75
  %80 = add i64 %29, 16
  %81 = add i64 %80, %30
  br label %27

82:                                               ; preds = %68, %67
  %83 = getelementptr inbounds i8, i8* %14, i64 %45
  %84 = icmp ne i8* %83, null
  tail call void @llvm.assume(i1 %84) #7
  %85 = load i8, i8* %83, align 1
  %86 = icmp sgt i8 %85, -1
  br i1 %86, label %88, label %87, !prof !2

87:                                               ; preds = %82
  tail call void @llvm.trap() #7
  unreachable

88:                                               ; preds = %82
  %89 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %47, i64 0, i32 1
  %90 = load i32, i32* %89, align 8
  store i32 %90, i32* %3, align 4
  br label %91

91:                                               ; preds = %75, %88
  %92 = phi i1 [ true, %88 ], [ false, %75 ]
  ret i1 %92
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK6tflite7support4text9tokenizer14RegexTokenizer10LookupWordEiPN4absl11string_viewE(%"class.tflite::support::text::tokenizer::RegexTokenizer"* nocapture readonly, i32, %"class.absl::string_view"* nocapture) unnamed_addr #3 align 2 {
  %4 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %5 = sext i32 %1 to i64
  %6 = add i64 %4, %5
  %7 = zext i64 %6 to i128
  %8 = mul nuw i128 %7, 11376068507788127593
  %9 = lshr i128 %8, 64
  %10 = xor i128 %9, %8
  %11 = trunc i128 %10 to i64
  %12 = getelementptr inbounds %"class.tflite::support::text::tokenizer::RegexTokenizer", %"class.tflite::support::text::tokenizer::RegexTokenizer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"class.tflite::support::text::tokenizer::RegexTokenizer", %"class.tflite::support::text::tokenizer::RegexTokenizer"* %0, i64 0, i32 3, i32 0, i32 0, i32 3
  %15 = load i64, i64* %14, align 8
  %16 = lshr i64 %11, 7
  %17 = ptrtoint i8* %13 to i64
  %18 = lshr i64 %17, 12
  %19 = xor i64 %16, %18
  %20 = trunc i128 %10 to i8
  %21 = and i8 %20, 127
  %22 = insertelement <16 x i8> undef, i8 %21, i32 0
  %23 = shufflevector <16 x i8> %22, <16 x i8> undef, <16 x i32> zeroinitializer
  %24 = getelementptr inbounds %"class.tflite::support::text::tokenizer::RegexTokenizer", %"class.tflite::support::text::tokenizer::RegexTokenizer"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  br label %25

25:                                               ; preds = %57, %3
  %26 = phi i64 [ %19, %3 ], [ %59, %57 ]
  %27 = phi i64 [ 0, %3 ], [ %58, %57 ]
  %28 = and i64 %26, %15
  %29 = getelementptr inbounds i8, i8* %13, i64 %28
  %30 = bitcast i8* %29 to <16 x i8>*
  %31 = load <16 x i8>, <16 x i8>* %30, align 1
  %32 = icmp eq <16 x i8> %23, %31
  %33 = bitcast <16 x i1> %32 to i16
  %34 = icmp eq i16 %33, 0
  br i1 %34, label %53, label %35

35:                                               ; preds = %25
  %36 = zext i16 %33 to i32
  %37 = load %"struct.std::__1::pair.11"**, %"struct.std::__1::pair.11"*** %24, align 8
  br label %38

38:                                               ; preds = %49, %35
  %39 = phi i32 [ %36, %35 ], [ %51, %49 ]
  %40 = tail call i32 @llvm.cttz.i32(i32 %39, i1 false) #7, !range !7
  %41 = zext i32 %40 to i64
  %42 = add i64 %28, %41
  %43 = and i64 %42, %15
  %44 = getelementptr inbounds %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %37, i64 %43
  %45 = load %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %44, align 8
  %46 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %45, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, %1
  br i1 %48, label %60, label %49, !prof !2

49:                                               ; preds = %38
  %50 = add i32 %39, -1
  %51 = and i32 %50, %39
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %38

53:                                               ; preds = %49, %25
  %54 = icmp eq <16 x i8> %31, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %55 = bitcast <16 x i1> %54 to i16
  %56 = icmp eq i16 %55, 0
  br i1 %56, label %57, label %70, !prof !8

57:                                               ; preds = %53
  %58 = add i64 %27, 16
  %59 = add i64 %58, %28
  br label %25

60:                                               ; preds = %38
  %61 = getelementptr inbounds i8, i8* %13, i64 %43
  %62 = icmp ne i8* %61, null
  tail call void @llvm.assume(i1 %62) #7
  %63 = load i8, i8* %61, align 1
  %64 = icmp sgt i8 %63, -1
  br i1 %64, label %66, label %65, !prof !2

65:                                               ; preds = %60
  tail call void @llvm.trap() #7
  unreachable

66:                                               ; preds = %60
  %67 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %45, i64 0, i32 1
  %68 = bitcast %"class.absl::string_view"* %2 to i8*
  %69 = bitcast %"class.absl::string_view"* %67 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* align 8 %69, i64 16, i1 false)
  br label %70

70:                                               ; preds = %53, %66
  %71 = phi i1 [ true, %66 ], [ false, %53 ]
  ret i1 %71
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6tflite7support4text9tokenizer14RegexTokenizer13GetStartTokenEPi(%"class.tflite::support::text::tokenizer::RegexTokenizer"*, i32*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.tflite::support::text::tokenizer::RegexTokenizer"* %0 to i1 (%"class.tflite::support::text::tokenizer::RegexTokenizer"*, i8*, i64, i32*)***
  %4 = load i1 (%"class.tflite::support::text::tokenizer::RegexTokenizer"*, i8*, i64, i32*)**, i1 (%"class.tflite::support::text::tokenizer::RegexTokenizer"*, i8*, i64, i32*)*** %3, align 8
  %5 = getelementptr inbounds i1 (%"class.tflite::support::text::tokenizer::RegexTokenizer"*, i8*, i64, i32*)*, i1 (%"class.tflite::support::text::tokenizer::RegexTokenizer"*, i8*, i64, i32*)** %4, i64 1
  %6 = load i1 (%"class.tflite::support::text::tokenizer::RegexTokenizer"*, i8*, i64, i32*)*, i1 (%"class.tflite::support::text::tokenizer::RegexTokenizer"*, i8*, i64, i32*)** %5, align 8
  %7 = tail call zeroext i1 %6(%"class.tflite::support::text::tokenizer::RegexTokenizer"* %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZN6tflite7support4text9tokenizer12_GLOBAL__N_16kStartE, i64 0, i64 0), i64 7, i32* %1) #7
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6tflite7support4text9tokenizer14RegexTokenizer11GetPadTokenEPi(%"class.tflite::support::text::tokenizer::RegexTokenizer"*, i32*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.tflite::support::text::tokenizer::RegexTokenizer"* %0 to i1 (%"class.tflite::support::text::tokenizer::RegexTokenizer"*, i8*, i64, i32*)***
  %4 = load i1 (%"class.tflite::support::text::tokenizer::RegexTokenizer"*, i8*, i64, i32*)**, i1 (%"class.tflite::support::text::tokenizer::RegexTokenizer"*, i8*, i64, i32*)*** %3, align 8
  %5 = getelementptr inbounds i1 (%"class.tflite::support::text::tokenizer::RegexTokenizer"*, i8*, i64, i32*)*, i1 (%"class.tflite::support::text::tokenizer::RegexTokenizer"*, i8*, i64, i32*)** %4, i64 1
  %6 = load i1 (%"class.tflite::support::text::tokenizer::RegexTokenizer"*, i8*, i64, i32*)*, i1 (%"class.tflite::support::text::tokenizer::RegexTokenizer"*, i8*, i64, i32*)** %5, align 8
  %7 = tail call zeroext i1 %6(%"class.tflite::support::text::tokenizer::RegexTokenizer"* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @_ZN6tflite7support4text9tokenizer12_GLOBAL__N_14kPadE, i64 0, i64 0), i64 5, i32* %1) #7
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6tflite7support4text9tokenizer14RegexTokenizer15GetUnknownTokenEPi(%"class.tflite::support::text::tokenizer::RegexTokenizer"*, i32*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.tflite::support::text::tokenizer::RegexTokenizer"* %0 to i1 (%"class.tflite::support::text::tokenizer::RegexTokenizer"*, i8*, i64, i32*)***
  %4 = load i1 (%"class.tflite::support::text::tokenizer::RegexTokenizer"*, i8*, i64, i32*)**, i1 (%"class.tflite::support::text::tokenizer::RegexTokenizer"*, i8*, i64, i32*)*** %3, align 8
  %5 = getelementptr inbounds i1 (%"class.tflite::support::text::tokenizer::RegexTokenizer"*, i8*, i64, i32*)*, i1 (%"class.tflite::support::text::tokenizer::RegexTokenizer"*, i8*, i64, i32*)** %4, i64 1
  %6 = load i1 (%"class.tflite::support::text::tokenizer::RegexTokenizer"*, i8*, i64, i32*)*, i1 (%"class.tflite::support::text::tokenizer::RegexTokenizer"*, i8*, i64, i32*)** %5, align 8
  %7 = tail call zeroext i1 %6(%"class.tflite::support::text::tokenizer::RegexTokenizer"* %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @_ZN6tflite7support4text9tokenizer12_GLOBAL__N_18kUnknownE, i64 0, i64 0), i64 9, i32* %1) #7
  ret i1 %7
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite7support4text9tokenizer14RegexTokenizerD2Ev(%"class.tflite::support::text::tokenizer::RegexTokenizer"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.tflite::support::text::tokenizer::RegexTokenizer", %"class.tflite::support::text::tokenizer::RegexTokenizer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN6tflite7support4text9tokenizer14RegexTokenizerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.tflite::support::text::tokenizer::RegexTokenizer", %"class.tflite::support::text::tokenizer::RegexTokenizer"* %0, i64 0, i32 3, i32 0, i32 0, i32 3
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %29, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.tflite::support::text::tokenizer::RegexTokenizer", %"class.tflite::support::text::tokenizer::RegexTokenizer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.tflite::support::text::tokenizer::RegexTokenizer", %"class.tflite::support::text::tokenizer::RegexTokenizer"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  br label %12

9:                                                ; preds = %25
  %10 = load i8*, i8** %7, align 8
  tail call void @_ZdlPv(i8* %10) #15
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %7, align 8
  %11 = bitcast %"struct.std::__1::pair.11"*** %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 32, i1 false) #7
  br label %29

12:                                               ; preds = %25, %6
  %13 = phi i64 [ %4, %6 ], [ %26, %25 ]
  %14 = phi i64 [ 0, %6 ], [ %27, %25 ]
  %15 = load i8*, i8** %7, align 8
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = load i8, i8* %16, align 1
  %18 = icmp sgt i8 %17, -1
  br i1 %18, label %19, label %25

19:                                               ; preds = %12
  %20 = load %"struct.std::__1::pair.11"**, %"struct.std::__1::pair.11"*** %8, align 8
  %21 = getelementptr inbounds %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %20, i64 %14
  %22 = bitcast %"struct.std::__1::pair.11"** %21 to i8**
  %23 = load i8*, i8** %22, align 8
  tail call void @_ZdlPv(i8* %23) #15
  %24 = load i64, i64* %3, align 8
  br label %25

25:                                               ; preds = %19, %12
  %26 = phi i64 [ %13, %12 ], [ %24, %19 ]
  %27 = add i64 %14, 1
  %28 = icmp eq i64 %27, %26
  br i1 %28, label %9, label %12

29:                                               ; preds = %1, %9
  %30 = getelementptr inbounds %"class.tflite::support::text::tokenizer::RegexTokenizer", %"class.tflite::support::text::tokenizer::RegexTokenizer"* %0, i64 0, i32 2, i32 0, i32 0, i32 3
  %31 = load i64, i64* %30, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %64, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.tflite::support::text::tokenizer::RegexTokenizer", %"class.tflite::support::text::tokenizer::RegexTokenizer"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.tflite::support::text::tokenizer::RegexTokenizer", %"class.tflite::support::text::tokenizer::RegexTokenizer"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  br label %39

36:                                               ; preds = %60
  %37 = load i8*, i8** %34, align 8
  tail call void @_ZdlPv(i8* %37) #15
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %34, align 8
  %38 = bitcast %"struct.std::__1::pair"*** %35 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 32, i1 false) #7
  br label %64

39:                                               ; preds = %60, %33
  %40 = phi i64 [ %31, %33 ], [ %61, %60 ]
  %41 = phi i64 [ 0, %33 ], [ %62, %60 ]
  %42 = load i8*, i8** %34, align 8
  %43 = getelementptr inbounds i8, i8* %42, i64 %41
  %44 = load i8, i8* %43, align 1
  %45 = icmp sgt i8 %44, -1
  br i1 %45, label %46, label %60

46:                                               ; preds = %39
  %47 = load %"struct.std::__1::pair"**, %"struct.std::__1::pair"*** %35, align 8
  %48 = getelementptr inbounds %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %47, i64 %41
  %49 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %48, align 8
  %50 = bitcast %"struct.std::__1::pair"* %49 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  br i1 %53, label %54, label %57

54:                                               ; preds = %46
  %55 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load i8*, i8** %55, align 8
  tail call void @_ZdlPv(i8* %56) #15
  br label %57

57:                                               ; preds = %54, %46
  %58 = bitcast %"struct.std::__1::pair"* %49 to i8*
  tail call void @_ZdlPv(i8* %58) #15
  %59 = load i64, i64* %30, align 8
  br label %60

60:                                               ; preds = %57, %39
  %61 = phi i64 [ %40, %39 ], [ %59, %57 ]
  %62 = add i64 %41, 1
  %63 = icmp eq i64 %62, %61
  br i1 %63, label %36, label %39

64:                                               ; preds = %29, %36
  %65 = getelementptr inbounds %"class.tflite::support::text::tokenizer::RegexTokenizer", %"class.tflite::support::text::tokenizer::RegexTokenizer"* %0, i64 0, i32 1
  tail call void @_ZN3re23RE2D1Ev(%"class.re2::RE2"* %65) #7
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite7support4text9tokenizer14RegexTokenizerD0Ev(%"class.tflite::support::text::tokenizer::RegexTokenizer"*) unnamed_addr #4 comdat align 2 {
  tail call void @_ZN6tflite7support4text9tokenizer14RegexTokenizerD2Ev(%"class.tflite::support::text::tokenizer::RegexTokenizer"* %0) #7
  %2 = bitcast %"class.tflite::support::text::tokenizer::RegexTokenizer"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #15
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare void @_ZN4absl19substitute_internal24SubstituteAndAppendArrayEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_11string_viewEPKS9_m(%"class.std::__1::basic_string"*, i8*, i64, %"class.absl::string_view"*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @llvm.assume(i1) #7

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.cttz.i32(i32, i1 immarg) #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_mapINS0_17NodeHashMapPolicyIiNS_11string_viewEEENS_13hash_internal4HashIiEENSt3__18equal_toIiEENS8_9allocatorINS8_4pairIKiS3_EEEEE16try_emplace_implIRSD_JEEENSC_INS0_12raw_hash_setIS4_S7_SA_SF_E8iteratorEbEEOT_DpOT0_(%"struct.std::__1::pair.28"* noalias sret, %"class.absl::container_internal::raw_hash_map.9"*, i32* dereferenceable(4)) local_unnamed_addr #3 comdat align 2 {
  %4 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.9", %"class.absl::container_internal::raw_hash_map.9"* %1, i64 0, i32 0
  %5 = load i32, i32* %2, align 4
  %6 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %7 = sext i32 %5 to i64
  %8 = add i64 %6, %7
  %9 = zext i64 %8 to i128
  %10 = mul nuw i128 %9, 11376068507788127593
  %11 = lshr i128 %10, 64
  %12 = xor i128 %11, %10
  %13 = trunc i128 %12 to i64
  %14 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.9", %"class.absl::container_internal::raw_hash_map.9"* %1, i64 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.9", %"class.absl::container_internal::raw_hash_map.9"* %1, i64 0, i32 0, i32 3
  %17 = load i64, i64* %16, align 8
  %18 = lshr i64 %13, 7
  %19 = ptrtoint i8* %15 to i64
  %20 = lshr i64 %19, 12
  %21 = xor i64 %18, %20
  %22 = trunc i128 %12 to i8
  %23 = and i8 %22, 127
  %24 = insertelement <16 x i8> undef, i8 %23, i32 0
  %25 = shufflevector <16 x i8> %24, <16 x i8> undef, <16 x i32> zeroinitializer
  %26 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.9", %"class.absl::container_internal::raw_hash_map.9"* %1, i64 0, i32 0, i32 1
  br label %27

27:                                               ; preds = %59, %3
  %28 = phi i64 [ %21, %3 ], [ %61, %59 ]
  %29 = phi i64 [ 0, %3 ], [ %60, %59 ]
  %30 = and i64 %28, %17
  %31 = getelementptr inbounds i8, i8* %15, i64 %30
  %32 = bitcast i8* %31 to <16 x i8>*
  %33 = load <16 x i8>, <16 x i8>* %32, align 1
  %34 = icmp eq <16 x i8> %25, %33
  %35 = bitcast <16 x i1> %34 to i16
  %36 = icmp eq i16 %35, 0
  br i1 %36, label %55, label %37

37:                                               ; preds = %27
  %38 = zext i16 %35 to i32
  %39 = load %"struct.std::__1::pair.11"**, %"struct.std::__1::pair.11"*** %26, align 8
  br label %40

40:                                               ; preds = %51, %37
  %41 = phi i32 [ %38, %37 ], [ %53, %51 ]
  %42 = tail call i32 @llvm.cttz.i32(i32 %41, i1 false) #7, !range !7
  %43 = zext i32 %42 to i64
  %44 = add i64 %30, %43
  %45 = and i64 %44, %17
  %46 = getelementptr inbounds %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %39, i64 %45
  %47 = load %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %46, align 8
  %48 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %47, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, %5
  br i1 %50, label %73, label %51, !prof !2

51:                                               ; preds = %40
  %52 = add i32 %41, -1
  %53 = and i32 %52, %41
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %40

55:                                               ; preds = %51, %27
  %56 = icmp eq <16 x i8> %33, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %57 = bitcast <16 x i1> %56 to i16
  %58 = icmp eq i16 %57, 0
  br i1 %58, label %59, label %62, !prof !8

59:                                               ; preds = %55
  %60 = add i64 %29, 16
  %61 = add i64 %60, %30
  br label %27

62:                                               ; preds = %55
  %63 = tail call i64 @_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyIiNS_11string_viewEEENS_13hash_internal4HashIiEENSt3__18equal_toIiEENS8_9allocatorINS8_4pairIKiS3_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.10"* %4, i64 %13) #7
  %64 = load %"struct.std::__1::pair.11"**, %"struct.std::__1::pair.11"*** %26, align 8
  %65 = getelementptr inbounds %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %64, i64 %63
  %66 = tail call i8* @_Znwm(i64 24) #15
  %67 = bitcast i8* %66 to i32*
  %68 = load i32, i32* %2, align 4
  store i32 %68, i32* %67, align 8
  %69 = getelementptr inbounds i8, i8* %66, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 16, i1 false) #7
  %70 = bitcast %"struct.std::__1::pair.11"** %65 to i8**
  store i8* %66, i8** %70, align 8
  %71 = load i8*, i8** %14, align 8
  %72 = load %"struct.std::__1::pair.11"**, %"struct.std::__1::pair.11"*** %26, align 8
  br label %73

73:                                               ; preds = %40, %62
  %74 = phi %"struct.std::__1::pair.11"** [ %72, %62 ], [ %39, %40 ]
  %75 = phi i8* [ %71, %62 ], [ %15, %40 ]
  %76 = phi i8 [ 1, %62 ], [ 0, %40 ]
  %77 = phi i64 [ %63, %62 ], [ %45, %40 ]
  %78 = getelementptr inbounds i8, i8* %75, i64 %77
  %79 = getelementptr inbounds %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %74, i64 %77
  %80 = icmp ne i8* %78, null
  tail call void @llvm.assume(i1 %80) #7
  %81 = getelementptr inbounds %"struct.std::__1::pair.28", %"struct.std::__1::pair.28"* %0, i64 0, i32 0, i32 0
  store i8* %78, i8** %81, align 8
  %82 = getelementptr inbounds %"struct.std::__1::pair.28", %"struct.std::__1::pair.28"* %0, i64 0, i32 0, i32 1, i32 0
  store %"struct.std::__1::pair.11"** %79, %"struct.std::__1::pair.11"*** %82, align 8
  %83 = getelementptr inbounds %"struct.std::__1::pair.28", %"struct.std::__1::pair.28"* %0, i64 0, i32 1
  store i8 %76, i8* %83, align 8
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyIiNS_11string_viewEEENS_13hash_internal4HashIiEENSt3__18equal_toIiEENS8_9allocatorINS8_4pairIKiS3_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.10"*, i64) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.10", %"class.absl::container_internal::raw_hash_set.10"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.10", %"class.absl::container_internal::raw_hash_set.10"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = lshr i64 %1, 7
  %8 = ptrtoint i8* %4 to i64
  %9 = lshr i64 %8, 12
  %10 = xor i64 %9, %7
  %11 = and i64 %10, %6
  %12 = getelementptr inbounds i8, i8* %4, i64 %11
  %13 = bitcast i8* %12 to <16 x i8>*
  %14 = load <16 x i8>, <16 x i8>* %13, align 1
  %15 = icmp slt <16 x i8> %14, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %16 = bitcast <16 x i1> %15 to i16
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %2, %18
  %19 = phi i64 [ %23, %18 ], [ %11, %2 ]
  %20 = phi i64 [ %21, %18 ], [ 0, %2 ]
  %21 = add i64 %20, 16
  %22 = add i64 %21, %19
  %23 = and i64 %22, %6
  %24 = getelementptr inbounds i8, i8* %4, i64 %23
  %25 = bitcast i8* %24 to <16 x i8>*
  %26 = load <16 x i8>, <16 x i8>* %25, align 1
  %27 = icmp slt <16 x i8> %26, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %28 = bitcast <16 x i1> %27 to i16
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %18, label %30

30:                                               ; preds = %18, %2
  %31 = phi i64 [ %11, %2 ], [ %23, %18 ]
  %32 = phi i16 [ %16, %2 ], [ %28, %18 ]
  %33 = zext i16 %32 to i32
  %34 = tail call i32 @llvm.cttz.i32(i32 %33, i1 false) #7, !range !7
  %35 = zext i32 %34 to i64
  %36 = add i64 %31, %35
  %37 = and i64 %36, %6
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.10", %"class.absl::container_internal::raw_hash_set.10"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %93

41:                                               ; preds = %30
  %42 = getelementptr inbounds i8, i8* %4, i64 %37
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, -2
  br i1 %44, label %93, label %45, !prof !2

45:                                               ; preds = %41
  %46 = icmp eq i64 %6, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyIiNS_11string_viewEEENS_13hash_internal4HashIiEENSt3__18equal_toIiEENS8_9allocatorINS8_4pairIKiS3_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.10"* %0, i64 1) #7
  br label %59

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.10", %"class.absl::container_internal::raw_hash_set.10"* %0, i64 0, i32 2
  %50 = load i64, i64* %49, align 8
  %51 = lshr i64 %6, 3
  %52 = sub i64 %6, %51
  %53 = lshr i64 %52, 1
  %54 = icmp ugt i64 %50, %53
  br i1 %54, label %56, label %55

55:                                               ; preds = %48
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyIiNS_11string_viewEEENS_13hash_internal4HashIiEENSt3__18equal_toIiEENS8_9allocatorINS8_4pairIKiS3_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.10"* %0) #7
  br label %59

56:                                               ; preds = %48
  %57 = shl i64 %6, 1
  %58 = or i64 %57, 1
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyIiNS_11string_viewEEENS_13hash_internal4HashIiEENSt3__18equal_toIiEENS8_9allocatorINS8_4pairIKiS3_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.10"* %0, i64 %58) #7
  br label %59

59:                                               ; preds = %47, %55, %56
  %60 = load i8*, i8** %3, align 8
  %61 = load i64, i64* %5, align 8
  %62 = ptrtoint i8* %60 to i64
  %63 = lshr i64 %62, 12
  %64 = xor i64 %63, %7
  %65 = and i64 %64, %61
  %66 = getelementptr inbounds i8, i8* %60, i64 %65
  %67 = bitcast i8* %66 to <16 x i8>*
  %68 = load <16 x i8>, <16 x i8>* %67, align 1
  %69 = icmp slt <16 x i8> %68, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %70 = bitcast <16 x i1> %69 to i16
  %71 = icmp eq i16 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %59, %72
  %73 = phi i64 [ %77, %72 ], [ %65, %59 ]
  %74 = phi i64 [ %75, %72 ], [ 0, %59 ]
  %75 = add i64 %74, 16
  %76 = add i64 %75, %73
  %77 = and i64 %76, %61
  %78 = getelementptr inbounds i8, i8* %60, i64 %77
  %79 = bitcast i8* %78 to <16 x i8>*
  %80 = load <16 x i8>, <16 x i8>* %79, align 1
  %81 = icmp slt <16 x i8> %80, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %82 = bitcast <16 x i1> %81 to i16
  %83 = icmp eq i16 %82, 0
  br i1 %83, label %72, label %84

84:                                               ; preds = %72, %59
  %85 = phi i64 [ %65, %59 ], [ %77, %72 ]
  %86 = phi i16 [ %70, %59 ], [ %82, %72 ]
  %87 = zext i16 %86 to i32
  %88 = tail call i32 @llvm.cttz.i32(i32 %87, i1 false) #7, !range !7
  %89 = zext i32 %88 to i64
  %90 = add i64 %85, %89
  %91 = and i64 %90, %61
  %92 = load i64, i64* %38, align 8
  br label %93

93:                                               ; preds = %41, %30, %84
  %94 = phi i64 [ %92, %84 ], [ 0, %41 ], [ %39, %30 ]
  %95 = phi i8* [ %60, %84 ], [ %4, %41 ], [ %4, %30 ]
  %96 = phi i64 [ %91, %84 ], [ %37, %41 ], [ %37, %30 ]
  %97 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.10", %"class.absl::container_internal::raw_hash_set.10"* %0, i64 0, i32 2
  %98 = load i64, i64* %97, align 8
  %99 = add i64 %98, 1
  store i64 %99, i64* %97, align 8
  %100 = getelementptr inbounds i8, i8* %95, i64 %96
  %101 = load i8, i8* %100, align 1
  %102 = icmp eq i8 %101, -128
  %103 = zext i1 %102 to i64
  %104 = sub i64 %94, %103
  store i64 %104, i64* %38, align 8
  %105 = trunc i64 %1 to i8
  %106 = and i8 %105, 127
  store i8 %106, i8* %100, align 1
  %107 = load i8*, i8** %3, align 8
  %108 = add i64 %96, -15
  %109 = load i64, i64* %5, align 8
  %110 = and i64 %109, %108
  %111 = and i64 %109, 15
  %112 = add i64 %110, %111
  %113 = getelementptr inbounds i8, i8* %107, i64 %112
  store i8 %106, i8* %113, align 1
  ret i64 %96
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyIiNS_11string_viewEEENS_13hash_internal4HashIiEENSt3__18equal_toIiEENS8_9allocatorINS8_4pairIKiS3_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.10"*, i64) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.10", %"class.absl::container_internal::raw_hash_set.10"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.10", %"class.absl::container_internal::raw_hash_set.10"* %0, i64 0, i32 1
  %6 = load %"struct.std::__1::pair.11"**, %"struct.std::__1::pair.11"*** %5, align 8
  %7 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.10", %"class.absl::container_internal::raw_hash_set.10"* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  store i64 %1, i64* %7, align 8
  %9 = add i64 %1, 16
  %10 = add i64 %1, 23
  %11 = and i64 %10, -8
  %12 = shl i64 %1, 3
  %13 = add i64 %11, %12
  %14 = tail call i8* @_Znwm(i64 %13) #15
  store i8* %14, i8** %3, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %11
  %16 = bitcast %"struct.std::__1::pair.11"*** %5 to i8**
  store i8* %15, i8** %16, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %14, i8 -128, i64 %9, i1 false) #7
  %17 = getelementptr inbounds i8, i8* %14, i64 %1
  store i8 -1, i8* %17, align 1
  %18 = lshr i64 %1, 3
  %19 = sub i64 %1, %18
  %20 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.10", %"class.absl::container_internal::raw_hash_set.10"* %0, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.10", %"class.absl::container_internal::raw_hash_set.10"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %22, i64* %23, align 8
  %24 = icmp eq i64 %8, 0
  br i1 %24, label %97, label %25

25:                                               ; preds = %2
  %26 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %28

27:                                               ; preds = %93
  br i1 %24, label %97, label %96

28:                                               ; preds = %25, %93
  %29 = phi i64 [ 0, %25 ], [ %94, %93 ]
  %30 = getelementptr inbounds i8, i8* %4, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = icmp sgt i8 %31, -1
  br i1 %32, label %33, label %93

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %6, i64 %29
  %35 = load %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %35, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = sext i32 %37 to i64
  %39 = add i64 %26, %38
  %40 = zext i64 %39 to i128
  %41 = mul nuw i128 %40, 11376068507788127593
  %42 = lshr i128 %41, 64
  %43 = xor i128 %42, %41
  %44 = trunc i128 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = load i64, i64* %7, align 8
  %47 = lshr i64 %44, 7
  %48 = ptrtoint i8* %45 to i64
  %49 = lshr i64 %48, 12
  %50 = xor i64 %47, %49
  %51 = and i64 %50, %46
  %52 = getelementptr inbounds i8, i8* %45, i64 %51
  %53 = bitcast i8* %52 to <16 x i8>*
  %54 = load <16 x i8>, <16 x i8>* %53, align 1
  %55 = icmp slt <16 x i8> %54, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %56 = bitcast <16 x i1> %55 to i16
  %57 = icmp eq i16 %56, 0
  br i1 %57, label %58, label %70

58:                                               ; preds = %33, %58
  %59 = phi i64 [ %63, %58 ], [ %51, %33 ]
  %60 = phi i64 [ %61, %58 ], [ 0, %33 ]
  %61 = add i64 %60, 16
  %62 = add i64 %61, %59
  %63 = and i64 %62, %46
  %64 = getelementptr inbounds i8, i8* %45, i64 %63
  %65 = bitcast i8* %64 to <16 x i8>*
  %66 = load <16 x i8>, <16 x i8>* %65, align 1
  %67 = icmp slt <16 x i8> %66, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %68 = bitcast <16 x i1> %67 to i16
  %69 = icmp eq i16 %68, 0
  br i1 %69, label %58, label %70

70:                                               ; preds = %58, %33
  %71 = phi i64 [ %51, %33 ], [ %63, %58 ]
  %72 = phi i16 [ %56, %33 ], [ %68, %58 ]
  %73 = zext i16 %72 to i32
  %74 = tail call i32 @llvm.cttz.i32(i32 %73, i1 false) #7, !range !7
  %75 = zext i32 %74 to i64
  %76 = add i64 %71, %75
  %77 = and i64 %76, %46
  %78 = trunc i128 %43 to i8
  %79 = and i8 %78, 127
  %80 = getelementptr inbounds i8, i8* %45, i64 %77
  store i8 %79, i8* %80, align 1
  %81 = load i8*, i8** %3, align 8
  %82 = add i64 %77, -15
  %83 = load i64, i64* %7, align 8
  %84 = and i64 %82, %83
  %85 = and i64 %83, 15
  %86 = add i64 %84, %85
  %87 = getelementptr inbounds i8, i8* %81, i64 %86
  store i8 %79, i8* %87, align 1
  %88 = load %"struct.std::__1::pair.11"**, %"struct.std::__1::pair.11"*** %5, align 8
  %89 = getelementptr inbounds %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %88, i64 %77
  %90 = bitcast %"struct.std::__1::pair.11"** %34 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = bitcast %"struct.std::__1::pair.11"** %89 to i64*
  store i64 %91, i64* %92, align 8
  br label %93

93:                                               ; preds = %28, %70
  %94 = add nuw i64 %29, 1
  %95 = icmp eq i64 %94, %8
  br i1 %95, label %27, label %28

96:                                               ; preds = %27
  tail call void @_ZdlPv(i8* %4) #15
  br label %97

97:                                               ; preds = %2, %27, %96
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyIiNS_11string_viewEEENS_13hash_internal4HashIiEENSt3__18equal_toIiEENS8_9allocatorINS8_4pairIKiS3_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.10"*) local_unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.10", %"class.absl::container_internal::raw_hash_set.10"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.10", %"class.absl::container_internal::raw_hash_set.10"* %0, i64 0, i32 3
  %5 = load i64, i64* %4, align 8
  tail call void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8* %3, i64 %5) #7
  %6 = load i64, i64* %4, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.10", %"class.absl::container_internal::raw_hash_set.10"* %0, i64 0, i32 1
  %10 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %19

11:                                               ; preds = %125, %1
  %12 = phi i64 [ 0, %1 ], [ %127, %125 ]
  %13 = lshr i64 %12, 3
  %14 = sub i64 %12, %13
  %15 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.10", %"class.absl::container_internal::raw_hash_set.10"* %0, i64 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.10", %"class.absl::container_internal::raw_hash_set.10"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %17, i64* %18, align 8
  ret void

19:                                               ; preds = %8, %125
  %20 = phi i64 [ %6, %8 ], [ %128, %125 ]
  %21 = phi i64 [ 0, %8 ], [ %127, %125 ]
  %22 = load i8*, i8** %2, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 %21
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, -2
  br i1 %25, label %26, label %125

26:                                               ; preds = %19
  %27 = ptrtoint i8* %22 to i64
  %28 = load %"struct.std::__1::pair.11"**, %"struct.std::__1::pair.11"*** %9, align 8
  %29 = getelementptr inbounds %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %28, i64 %21
  %30 = load %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %29, align 8
  %31 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %30, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = sext i32 %32 to i64
  %34 = add i64 %10, %33
  %35 = zext i64 %34 to i128
  %36 = mul nuw i128 %35, 11376068507788127593
  %37 = lshr i128 %36, 64
  %38 = xor i128 %37, %36
  %39 = trunc i128 %38 to i64
  %40 = lshr i64 %39, 7
  %41 = lshr i64 %27, 12
  %42 = xor i64 %40, %41
  %43 = and i64 %42, %20
  %44 = getelementptr inbounds i8, i8* %22, i64 %43
  %45 = bitcast i8* %44 to <16 x i8>*
  %46 = load <16 x i8>, <16 x i8>* %45, align 1
  %47 = icmp slt <16 x i8> %46, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %48 = bitcast <16 x i1> %47 to i16
  %49 = icmp eq i16 %48, 0
  br i1 %49, label %50, label %62

50:                                               ; preds = %26, %50
  %51 = phi i64 [ %55, %50 ], [ %43, %26 ]
  %52 = phi i64 [ %53, %50 ], [ 0, %26 ]
  %53 = add i64 %52, 16
  %54 = add i64 %53, %51
  %55 = and i64 %54, %20
  %56 = getelementptr inbounds i8, i8* %22, i64 %55
  %57 = bitcast i8* %56 to <16 x i8>*
  %58 = load <16 x i8>, <16 x i8>* %57, align 1
  %59 = icmp slt <16 x i8> %58, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %60 = bitcast <16 x i1> %59 to i16
  %61 = icmp eq i16 %60, 0
  br i1 %61, label %50, label %62

62:                                               ; preds = %50, %26
  %63 = phi i64 [ %43, %26 ], [ %55, %50 ]
  %64 = phi i16 [ %48, %26 ], [ %60, %50 ]
  %65 = zext i16 %64 to i32
  %66 = tail call i32 @llvm.cttz.i32(i32 %65, i1 false) #7, !range !7
  %67 = zext i32 %66 to i64
  %68 = add i64 %63, %67
  %69 = and i64 %68, %20
  %70 = sub i64 %69, %43
  %71 = sub i64 %21, %43
  %72 = xor i64 %70, %71
  %73 = and i64 %72, %20
  %74 = icmp ult i64 %73, 16
  br i1 %74, label %75, label %85, !prof !2

75:                                               ; preds = %62
  %76 = trunc i128 %38 to i8
  %77 = and i8 %76, 127
  store i8 %77, i8* %23, align 1
  %78 = load i8*, i8** %2, align 8
  %79 = add i64 %21, -15
  %80 = load i64, i64* %4, align 8
  %81 = and i64 %80, %79
  %82 = and i64 %80, 15
  %83 = add i64 %81, %82
  %84 = getelementptr inbounds i8, i8* %78, i64 %83
  store i8 %77, i8* %84, align 1
  br label %125

85:                                               ; preds = %62
  %86 = getelementptr inbounds i8, i8* %22, i64 %69
  %87 = load i8, i8* %86, align 1
  %88 = icmp eq i8 %87, -128
  %89 = trunc i128 %38 to i8
  %90 = and i8 %89, 127
  store i8 %90, i8* %86, align 1
  %91 = load i8*, i8** %2, align 8
  %92 = add i64 %69, -15
  %93 = load i64, i64* %4, align 8
  %94 = and i64 %93, %92
  %95 = and i64 %93, 15
  %96 = add i64 %94, %95
  %97 = getelementptr inbounds i8, i8* %91, i64 %96
  store i8 %90, i8* %97, align 1
  %98 = load %"struct.std::__1::pair.11"**, %"struct.std::__1::pair.11"*** %9, align 8
  br i1 %88, label %99, label %114

99:                                               ; preds = %85
  %100 = getelementptr inbounds %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %98, i64 %69
  %101 = getelementptr inbounds %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %98, i64 %21
  %102 = bitcast %"struct.std::__1::pair.11"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"struct.std::__1::pair.11"** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = load i8*, i8** %2, align 8
  %106 = getelementptr inbounds i8, i8* %105, i64 %21
  store i8 -128, i8* %106, align 1
  %107 = load i8*, i8** %2, align 8
  %108 = add i64 %21, -15
  %109 = load i64, i64* %4, align 8
  %110 = and i64 %109, %108
  %111 = and i64 %109, 15
  %112 = add i64 %110, %111
  %113 = getelementptr inbounds i8, i8* %107, i64 %112
  store i8 -128, i8* %113, align 1
  br label %125

114:                                              ; preds = %85
  %115 = getelementptr inbounds %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %98, i64 %21
  %116 = bitcast %"struct.std::__1::pair.11"** %115 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = getelementptr inbounds %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %98, i64 %69
  %119 = bitcast %"struct.std::__1::pair.11"** %118 to i64*
  %120 = load i64, i64* %119, align 8
  store i64 %120, i64* %116, align 8
  %121 = load %"struct.std::__1::pair.11"**, %"struct.std::__1::pair.11"*** %9, align 8
  %122 = getelementptr inbounds %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %121, i64 %69
  %123 = bitcast %"struct.std::__1::pair.11"** %122 to i64*
  store i64 %117, i64* %123, align 8
  %124 = add i64 %21, -1
  br label %125

125:                                              ; preds = %75, %114, %99, %19
  %126 = phi i64 [ %21, %19 ], [ %21, %75 ], [ %21, %99 ], [ %124, %114 ]
  %127 = add i64 %126, 1
  %128 = load i64, i64* %4, align 8
  %129 = icmp eq i64 %127, %128
  br i1 %129, label %11, label %19
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #11

declare void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3re23RE2D1Ev(%"class.re2::RE2"*) unnamed_addr #12

declare zeroext i1 @_ZN3re23RE215FindAndConsumeNEPNS_11StringPieceERKS0_PKPKNS0_3ArgEi(%"class.re2::StringPiece"*, %"class.re2::RE2"* dereferenceable(200), %"class.re2::RE2::Arg"**, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3re23RE23Arg11DoParse3aryINS_11StringPieceEEEbPKcmPv(i8*, i64, i8*) #0 comdat align 2 {
  %4 = bitcast i8* %2 to %"class.re2::StringPiece"*
  %5 = tail call zeroext i1 @_ZN3re212re2_internal5ParseINS_11StringPieceEEEbPKcmPT_(i8* %0, i64 %1, %"class.re2::StringPiece"* %4) #7
  ret i1 %5
}

declare zeroext i1 @_ZN3re212re2_internal5ParseINS_11StringPieceEEEbPKcmPT_(i8*, i64, %"class.re2::StringPiece"*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #13

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #17
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #15
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %38 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false) #7
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #7
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %40 = ptrtoint %"class.std::__1::basic_string"* %39 to i64
  %41 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %42 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %41, align 8
  %43 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %44 = icmp eq %"class.std::__1::basic_string"* %43, %42
  br i1 %44, label %45, label %47

45:                                               ; preds = %31
  %46 = ptrtoint %"class.std::__1::basic_string"* %42 to i64
  br label %58

47:                                               ; preds = %31, %47
  %48 = phi %"class.std::__1::basic_string"* [ %50, %47 ], [ %34, %31 ]
  %49 = phi %"class.std::__1::basic_string"* [ %51, %47 ], [ %43, %31 ]
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 -1
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 -1
  %52 = bitcast %"class.std::__1::basic_string"* %50 to i8*
  %53 = bitcast %"class.std::__1::basic_string"* %51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 24, i1 false) #7
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #7
  %54 = icmp eq %"class.std::__1::basic_string"* %51, %42
  br i1 %54, label %55, label %47

55:                                               ; preds = %47
  %56 = load i64, i64* %6, align 8
  %57 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %58

58:                                               ; preds = %45, %55
  %59 = phi %"class.std::__1::basic_string"* [ %42, %45 ], [ %57, %55 ]
  %60 = phi %"class.std::__1::basic_string"* [ %34, %45 ], [ %50, %55 ]
  %61 = phi i64 [ %46, %45 ], [ %56, %55 ]
  %62 = ptrtoint %"class.std::__1::basic_string"* %60 to i64
  store i64 %62, i64* %6, align 8
  store i64 %40, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %63 = inttoptr i64 %61 to %"class.std::__1::basic_string"*
  %64 = icmp eq %"class.std::__1::basic_string"* %59, %63
  br i1 %64, label %77, label %65

65:                                               ; preds = %58, %75
  %66 = phi %"class.std::__1::basic_string"* [ %67, %75 ], [ %59, %58 ]
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 -1
  %68 = bitcast %"class.std::__1::basic_string"* %67 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %65
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  tail call void @_ZdlPv(i8* %74) #15
  br label %75

75:                                               ; preds = %72, %65
  %76 = icmp eq %"class.std::__1::basic_string"* %67, %63
  br i1 %76, label %77, label %65

77:                                               ; preds = %75, %58
  %78 = icmp eq i64 %61, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %77
  %80 = inttoptr i64 %61 to i8*
  tail call void @_ZdlPv(i8* %80) #15
  br label %81

81:                                               ; preds = %77, %79
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #13

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4absl13hash_internal15MixingHashState18combine_contiguousES1_PKhm(i64, i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp ugt i64 %2, 16
  br i1 %4, label %5, label %11

5:                                                ; preds = %3
  %6 = icmp ugt i64 %2, 1024
  br i1 %6, label %7, label %9, !prof !8

7:                                                ; preds = %5
  %8 = tail call i64 @_ZN4absl13hash_internal15MixingHashState28CombineLargeContiguousImpl64EmPKhm(i64 %0, i8* %1, i64 %2) #7
  br label %75

9:                                                ; preds = %5
  %10 = tail call i64 @_ZN4absl13hash_internal15MixingHashState10WyhashImplEPKhm(i8* %1, i64 %2) #7
  br label %66

11:                                               ; preds = %3
  %12 = icmp ugt i64 %2, 8
  br i1 %12, label %13, label %29

13:                                               ; preds = %11
  %14 = bitcast i8* %1 to i64*
  %15 = load i64, i64* %14, align 1
  %16 = getelementptr inbounds i8, i8* %1, i64 %2
  %17 = getelementptr inbounds i8, i8* %16, i64 -8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = shl i64 %2, 3
  %21 = sub nuw nsw i64 128, %20
  %22 = lshr i64 %19, %21
  %23 = add i64 %15, %0
  %24 = zext i64 %23 to i128
  %25 = mul nuw i128 %24, 11376068507788127593
  %26 = lshr i128 %25, 64
  %27 = xor i128 %26, %25
  %28 = trunc i128 %27 to i64
  br label %66

29:                                               ; preds = %11
  %30 = icmp ugt i64 %2, 3
  br i1 %30, label %31, label %44

31:                                               ; preds = %29
  %32 = bitcast i8* %1 to i32*
  %33 = load i32, i32* %32, align 1
  %34 = getelementptr inbounds i8, i8* %1, i64 %2
  %35 = getelementptr inbounds i8, i8* %34, i64 -4
  %36 = bitcast i8* %35 to i32*
  %37 = load i32, i32* %36, align 1
  %38 = zext i32 %37 to i64
  %39 = shl i64 %2, 3
  %40 = add nsw i64 %39, -32
  %41 = shl i64 %38, %40
  %42 = zext i32 %33 to i64
  %43 = or i64 %41, %42
  br label %66

44:                                               ; preds = %29
  %45 = icmp eq i64 %2, 0
  br i1 %45, label %75, label %46

46:                                               ; preds = %44
  %47 = load i8, i8* %1, align 1
  %48 = lshr i64 %2, 1
  %49 = getelementptr inbounds i8, i8* %1, i64 %48
  %50 = load i8, i8* %49, align 1
  %51 = add nsw i64 %2, -1
  %52 = getelementptr inbounds i8, i8* %1, i64 %51
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %47 to i32
  %55 = zext i8 %50 to i32
  %56 = shl i64 %48, 3
  %57 = trunc i64 %56 to i32
  %58 = shl i32 %55, %57
  %59 = or i32 %58, %54
  %60 = zext i8 %53 to i32
  %61 = trunc i64 %51 to i32
  %62 = shl i32 %61, 3
  %63 = shl i32 %60, %62
  %64 = or i32 %59, %63
  %65 = zext i32 %64 to i64
  br label %66

66:                                               ; preds = %46, %31, %13, %9
  %67 = phi i64 [ %10, %9 ], [ %22, %13 ], [ %43, %31 ], [ %65, %46 ]
  %68 = phi i64 [ %0, %9 ], [ %28, %13 ], [ %0, %31 ], [ %0, %46 ]
  %69 = add i64 %68, %67
  %70 = zext i64 %69 to i128
  %71 = mul nuw i128 %70, 11376068507788127593
  %72 = lshr i128 %71, 64
  %73 = xor i128 %72, %71
  %74 = trunc i128 %73 to i64
  br label %75

75:                                               ; preds = %7, %44, %66
  %76 = phi i64 [ %8, %7 ], [ %74, %66 ], [ %0, %44 ]
  ret i64 %76
}

declare i64 @_ZN4absl13hash_internal15MixingHashState28CombineLargeContiguousImpl64EmPKhm(i64, i8*, i64) local_unnamed_addr #2

declare i64 @_ZN4absl13hash_internal15MixingHashState10WyhashImplEPKhm(i8*, i64) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #14

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nofree nounwind readonly }
attributes #15 = { builtin nounwind }
attributes #16 = { nounwind readonly }
attributes #17 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN4absl10SubstituteENS_11string_viewERKNS_19substitute_internal3ArgE: argument 0"}
!5 = distinct !{!5, !"_ZN4absl10SubstituteENS_11string_viewERKNS_19substitute_internal3ArgE"}
!6 = !{}
!7 = !{i32 0, i32 33}
!8 = !{!"branch_weights", i32 1, i32 2000}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN4absl10SubstituteENS_11string_viewERKNS_19substitute_internal3ArgE: argument 0"}
!11 = distinct !{!11, !"_ZN4absl10SubstituteENS_11string_viewERKNS_19substitute_internal3ArgE"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNK3re211StringPiececvNSt3__112basic_stringIcNS1_11char_traitsIcEET_EEINS1_9allocatorIcEEEEv: argument 0"}
!14 = distinct !{!14, !"_ZNK3re211StringPiececvNSt3__112basic_stringIcNS1_11char_traitsIcEET_EEINS1_9allocatorIcEEEEv"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNK3re211StringPiececvNSt3__112basic_stringIcNS1_11char_traitsIcEET_EEINS1_9allocatorIcEEEEv: argument 0"}
!17 = distinct !{!17, !"_ZNK3re211StringPiececvNSt3__112basic_stringIcNS1_11char_traitsIcEET_EEINS1_9allocatorIcEEEEv"}
!18 = !{!"branch_weights", i32 2146410443, i32 1073205}
