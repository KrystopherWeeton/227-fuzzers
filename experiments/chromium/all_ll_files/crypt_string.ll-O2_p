; ModuleID = '../../third_party/webrtc/rtc_base/crypt_string.cc'
source_filename = "../../third_party/webrtc/rtc_base/crypt_string.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.rtc::CryptString" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.rtc::CryptStringImpl"* }
%"class.rtc::CryptStringImpl" = type { i32 (...)** }
%"class.rtc::EmptyCryptStringImpl" = type { %"class.rtc::CryptStringImpl" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i8* }

$_ZN3rtc15CryptStringImplD2Ev = comdat any

$_ZN3rtc20EmptyCryptStringImplD0Ev = comdat any

@_ZTVN3rtc20EmptyCryptStringImplE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.rtc::CryptStringImpl"*)* @_ZN3rtc15CryptStringImplD2Ev to i8*), i8* bitcast (void (%"class.rtc::EmptyCryptStringImpl"*)* @_ZN3rtc20EmptyCryptStringImplD0Ev to i8*), i8* bitcast (i64 (%"class.rtc::EmptyCryptStringImpl"*)* @_ZNK3rtc20EmptyCryptStringImpl9GetLengthEv to i8*), i8* bitcast (void (%"class.rtc::EmptyCryptStringImpl"*, i8*, i1)* @_ZNK3rtc20EmptyCryptStringImpl6CopyToEPcb to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.rtc::EmptyCryptStringImpl"*)* @_ZNK3rtc20EmptyCryptStringImpl9UrlEncodeEv to i8*), i8* bitcast (%"class.rtc::CryptStringImpl"* (%"class.rtc::EmptyCryptStringImpl"*)* @_ZNK3rtc20EmptyCryptStringImpl4CopyEv to i8*), i8* bitcast (void (%"class.rtc::EmptyCryptStringImpl"*, %"class.std::__1::vector"*)* @_ZNK3rtc20EmptyCryptStringImpl9CopyRawToEPNSt3__16vectorIhNS1_9allocatorIhEEEE to i8*)] }, align 8

@_ZN3rtc11CryptStringC1Ev = hidden unnamed_addr alias void (%"class.rtc::CryptString"*), void (%"class.rtc::CryptString"*)* @_ZN3rtc11CryptStringC2Ev
@_ZN3rtc11CryptStringC1ERKS0_ = hidden unnamed_addr alias void (%"class.rtc::CryptString"*, %"class.rtc::CryptString"*), void (%"class.rtc::CryptString"*, %"class.rtc::CryptString"*)* @_ZN3rtc11CryptStringC2ERKS0_
@_ZN3rtc11CryptStringC1ERKNS_15CryptStringImplE = hidden unnamed_addr alias void (%"class.rtc::CryptString"*, %"class.rtc::CryptStringImpl"*), void (%"class.rtc::CryptString"*, %"class.rtc::CryptStringImpl"*)* @_ZN3rtc11CryptStringC2ERKNS_15CryptStringImplE
@_ZN3rtc11CryptStringD1Ev = hidden unnamed_addr alias void (%"class.rtc::CryptString"*), void (%"class.rtc::CryptString"*)* @_ZN3rtc11CryptStringD2Ev

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZNK3rtc20EmptyCryptStringImpl9GetLengthEv(%"class.rtc::EmptyCryptStringImpl"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i64 0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZNK3rtc20EmptyCryptStringImpl6CopyToEPcb(%"class.rtc::EmptyCryptStringImpl"* nocapture readnone, i8* nocapture, i1 zeroext) unnamed_addr #1 align 2 {
  br i1 %2, label %4, label %5

4:                                                ; preds = %3
  store i8 0, i8* %1, align 1
  br label %5

5:                                                ; preds = %4, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3rtc20EmptyCryptStringImpl9UrlEncodeEv(%"class.std::__1::basic_string"* noalias sret, %"class.rtc::EmptyCryptStringImpl"* nocapture readnone) unnamed_addr #2 align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  store i8 0, i8* %4, align 1
  %5 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  store i8 0, i8* %5, align 8
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden noalias nonnull %"class.rtc::CryptStringImpl"* @_ZNK3rtc20EmptyCryptStringImpl4CopyEv(%"class.rtc::EmptyCryptStringImpl"* nocapture readnone) unnamed_addr #3 align 2 {
  %2 = tail call i8* @_Znwm(i64 8) #7
  %3 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN3rtc20EmptyCryptStringImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = bitcast i8* %2 to %"class.rtc::CryptStringImpl"*
  ret %"class.rtc::CryptStringImpl"* %4
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK3rtc20EmptyCryptStringImpl9CopyRawToEPNSt3__16vectorIhNS1_9allocatorIhEEEE(%"class.rtc::EmptyCryptStringImpl"* nocapture readnone, %"class.std::__1::vector"* nocapture) unnamed_addr #5 align 2 {
  %3 = bitcast %"class.std::__1::vector"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %6 = bitcast i8** %5 to i64*
  store i64 %4, i64* %6, align 8
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN3rtc11CryptStringC2Ev(%"class.rtc::CryptString"* nocapture) unnamed_addr #3 align 2 {
  %2 = tail call i8* @_Znwm(i64 8) #7
  %3 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN3rtc20EmptyCryptStringImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = ptrtoint i8* %2 to i64
  %5 = bitcast %"class.rtc::CryptString"* %0 to i64*
  store i64 %4, i64* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3rtc11CryptStringC2ERKS0_(%"class.rtc::CryptString"* nocapture, %"class.rtc::CryptString"* nocapture readonly dereferenceable(8)) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.rtc::CryptString", %"class.rtc::CryptString"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.rtc::CryptStringImpl"*, %"class.rtc::CryptStringImpl"** %3, align 8
  %5 = bitcast %"class.rtc::CryptStringImpl"* %4 to %"class.rtc::CryptStringImpl"* (%"class.rtc::CryptStringImpl"*)***
  %6 = load %"class.rtc::CryptStringImpl"* (%"class.rtc::CryptStringImpl"*)**, %"class.rtc::CryptStringImpl"* (%"class.rtc::CryptStringImpl"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.rtc::CryptStringImpl"* (%"class.rtc::CryptStringImpl"*)*, %"class.rtc::CryptStringImpl"* (%"class.rtc::CryptStringImpl"*)** %6, i64 5
  %8 = load %"class.rtc::CryptStringImpl"* (%"class.rtc::CryptStringImpl"*)*, %"class.rtc::CryptStringImpl"* (%"class.rtc::CryptStringImpl"*)** %7, align 8
  %9 = tail call %"class.rtc::CryptStringImpl"* %8(%"class.rtc::CryptStringImpl"* %4) #8
  %10 = ptrtoint %"class.rtc::CryptStringImpl"* %9 to i64
  %11 = bitcast %"class.rtc::CryptString"* %0 to i64*
  store i64 %10, i64* %11, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3rtc11CryptStringC2ERKNS_15CryptStringImplE(%"class.rtc::CryptString"* nocapture, %"class.rtc::CryptStringImpl"* dereferenceable(8)) unnamed_addr #2 align 2 {
  %3 = bitcast %"class.rtc::CryptStringImpl"* %1 to %"class.rtc::CryptStringImpl"* (%"class.rtc::CryptStringImpl"*)***
  %4 = load %"class.rtc::CryptStringImpl"* (%"class.rtc::CryptStringImpl"*)**, %"class.rtc::CryptStringImpl"* (%"class.rtc::CryptStringImpl"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.rtc::CryptStringImpl"* (%"class.rtc::CryptStringImpl"*)*, %"class.rtc::CryptStringImpl"* (%"class.rtc::CryptStringImpl"*)** %4, i64 5
  %6 = load %"class.rtc::CryptStringImpl"* (%"class.rtc::CryptStringImpl"*)*, %"class.rtc::CryptStringImpl"* (%"class.rtc::CryptStringImpl"*)** %5, align 8
  %7 = tail call %"class.rtc::CryptStringImpl"* %6(%"class.rtc::CryptStringImpl"* %1) #8
  %8 = ptrtoint %"class.rtc::CryptStringImpl"* %7 to i64
  %9 = bitcast %"class.rtc::CryptString"* %0 to i64*
  store i64 %8, i64* %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3rtc11CryptStringD2Ev(%"class.rtc::CryptString"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.rtc::CryptString", %"class.rtc::CryptString"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.rtc::CryptStringImpl"*, %"class.rtc::CryptStringImpl"** %2, align 8
  store %"class.rtc::CryptStringImpl"* null, %"class.rtc::CryptStringImpl"** %2, align 8
  %4 = icmp eq %"class.rtc::CryptStringImpl"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.rtc::CryptStringImpl"* %3 to void (%"class.rtc::CryptStringImpl"*)***
  %7 = load void (%"class.rtc::CryptStringImpl"*)**, void (%"class.rtc::CryptStringImpl"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.rtc::CryptStringImpl"*)*, void (%"class.rtc::CryptStringImpl"*)** %7, i64 1
  %9 = load void (%"class.rtc::CryptStringImpl"*)*, void (%"class.rtc::CryptStringImpl"*)** %8, align 8
  tail call void %9(%"class.rtc::CryptStringImpl"* nonnull %3) #8
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3rtc15CryptStringImplD2Ev(%"class.rtc::CryptStringImpl"*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3rtc20EmptyCryptStringImplD0Ev(%"class.rtc::EmptyCryptStringImpl"*) unnamed_addr #2 comdat align 2 {
  %2 = bitcast %"class.rtc::EmptyCryptStringImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { builtin nounwind }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
