; ModuleID = '../../third_party/skia/modules/skottie/src/animator/VectorKeyframeAnimator.cpp'
source_filename = "../../third_party/skia/modules/skottie/src/animator/VectorKeyframeAnimator.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.skottie::internal::VectorKeyframeAnimatorBuilder" = type { %"class.skottie::internal::KeyframeAnimatorBuilder", i1 (%"class.skjson::Value"*, i64*)*, i1 (%"class.skjson::Value"*, i64, float*)*, %"class.std::__1::vector", i64, i64, %"class.std::__1::vector"* }
%"class.skottie::internal::KeyframeAnimatorBuilder" = type { i32 (...)**, %"class.std::__1::vector.1", %"class.std::__1::vector.8", %struct.SkPoint, %struct.SkPoint }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"struct.skottie::internal::Keyframe"*, %"struct.skottie::internal::Keyframe"*, %"class.std::__1::__compressed_pair.3" }
%"struct.skottie::internal::Keyframe" = type { float, %"struct.skottie::internal::Keyframe::Value", i32 }
%"struct.skottie::internal::Keyframe::Value" = type { %union.anon }
%union.anon = type { i32 }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.skottie::internal::Keyframe"* }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { %class.SkCubicMap*, %class.SkCubicMap*, %"class.std::__1::__compressed_pair.10" }
%class.SkCubicMap = type { [3 x %struct.SkPoint], i32 }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %class.SkCubicMap* }
%struct.SkPoint = type { float, float }
%"class.skjson::Value" = type { [8 x i8] }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { float*, float*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { float* }
%"class.skottie::VectorValue" = type { %"class.std::__1::vector" }
%struct.SkRGBA4f = type { float, float, float, float }
%class.sk_sp = type { %"class.skottie::internal::KeyframeAnimator"* }
%"class.skottie::internal::KeyframeAnimator" = type { %"class.skottie::internal::Animator.base", %"class.std::__1::vector.1", %"class.std::__1::vector.8", %"struct.skottie::internal::KeyframeAnimator::KFSegment" }
%"class.skottie::internal::Animator.base" = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.15" }
%"struct.std::__1::__atomic_base.15" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.skottie::internal::KeyframeAnimator::KFSegment" = type { %"struct.skottie::internal::Keyframe"*, %"struct.skottie::internal::Keyframe"* }
%"class.skottie::internal::AnimationBuilder" = type opaque
%"class.skjson::ArrayValue" = type { %"class.skjson::VectorValue" }
%"class.skjson::VectorValue" = type { %"class.skjson::Value" }
%"class.skjson::ObjectValue" = type { %"class.skjson::VectorValue.16" }
%"class.skjson::VectorValue.16" = type { %"class.skjson::Value" }
%"class.skottie::internal::AnimatablePropertyContainer" = type <{ %"class.skottie::internal::Animator.base", [4 x i8], %"class.std::__1::vector.18", i8, [7 x i8] }>
%"class.std::__1::vector.18" = type { %"class.std::__1::__vector_base.19" }
%"class.std::__1::__vector_base.19" = type { %class.sk_sp.20*, %class.sk_sp.20*, %"class.std::__1::__compressed_pair.21" }
%class.sk_sp.20 = type opaque
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %class.sk_sp.20* }
%"class.skottie::internal::(anonymous namespace)::VectorKeyframeAnimator" = type { %"class.skottie::internal::KeyframeAnimator", %"class.std::__1::vector", i64, %"class.std::__1::vector"* }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN7skottie8internal29VectorKeyframeAnimatorBuilderD2Ev = comdat any

$_ZN7skottie8internal29VectorKeyframeAnimatorBuilderD0Ev = comdat any

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNSt3__16vectorIfNS_9allocatorIfEEE8__appendEm = comdat any

@_ZTVN7skottie8internal29VectorKeyframeAnimatorBuilderE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.skottie::internal::VectorKeyframeAnimatorBuilder"*)* @_ZN7skottie8internal29VectorKeyframeAnimatorBuilderD2Ev to i8*), i8* bitcast (void (%"class.skottie::internal::VectorKeyframeAnimatorBuilder"*)* @_ZN7skottie8internal29VectorKeyframeAnimatorBuilderD0Ev to i8*), i8* bitcast (void (%class.sk_sp*, %"class.skottie::internal::VectorKeyframeAnimatorBuilder"*, %"class.skottie::internal::AnimationBuilder"*, %"class.skjson::ArrayValue"*)* @_ZN7skottie8internal29VectorKeyframeAnimatorBuilder4makeERKNS0_16AnimationBuilderERKN6skjson10ArrayValueE to i8*), i8* bitcast (i1 (%"class.skottie::internal::VectorKeyframeAnimatorBuilder"*, %"class.skottie::internal::AnimationBuilder"*, %"class.skjson::Value"*)* @_ZNK7skottie8internal29VectorKeyframeAnimatorBuilder10parseValueERKNS0_16AnimationBuilderERKN6skjson5ValueE to i8*), i8* bitcast (i1 (%"class.skottie::internal::VectorKeyframeAnimatorBuilder"*, %"class.skottie::internal::AnimationBuilder"*, %"class.skjson::ObjectValue"*, %"class.skjson::Value"*, %"struct.skottie::internal::Keyframe::Value"*)* @_ZN7skottie8internal29VectorKeyframeAnimatorBuilder12parseKFValueERKNS0_16AnimationBuilderERKN6skjson11ObjectValueERKNS5_5ValueEPNS0_8Keyframe5ValueE to i8*)] }, align 8
@.str = private unnamed_addr constant [2 x i8] c"s\00", align 1
@__const._ZN7skottie8internal27AnimatablePropertyContainer4bindINS_11VectorValueEEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_.builder = private unnamed_addr constant %"class.skottie::internal::VectorKeyframeAnimatorBuilder" { %"class.skottie::internal::KeyframeAnimatorBuilder" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), %"class.std::__1::vector.1" { %"class.std::__1::__vector_base.2" { %"struct.skottie::internal::Keyframe"* inttoptr (i64 -6148914691236517206 to %"struct.skottie::internal::Keyframe"*), %"struct.skottie::internal::Keyframe"* inttoptr (i64 -6148914691236517206 to %"struct.skottie::internal::Keyframe"*), %"class.std::__1::__compressed_pair.3" { %"struct.std::__1::__compressed_pair_elem.4" { %"struct.skottie::internal::Keyframe"* inttoptr (i64 -6148914691236517206 to %"struct.skottie::internal::Keyframe"*) } } } }, %"class.std::__1::vector.8" { %"class.std::__1::__vector_base.9" { %class.SkCubicMap* inttoptr (i64 -6148914691236517206 to %class.SkCubicMap*), %class.SkCubicMap* inttoptr (i64 -6148914691236517206 to %class.SkCubicMap*), %"class.std::__1::__compressed_pair.10" { %"struct.std::__1::__compressed_pair_elem.11" { %class.SkCubicMap* inttoptr (i64 -6148914691236517206 to %class.SkCubicMap*) } } } }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, i1 (%"class.skjson::Value"*, i64*)* inttoptr (i64 -6148914691236517206 to i1 (%"class.skjson::Value"*, i64*)*), i1 (%"class.skjson::Value"*, i64, float*)* inttoptr (i64 -6148914691236517206 to i1 (%"class.skjson::Value"*, i64, float*)*), %"class.std::__1::vector" { %"class.std::__1::__vector_base" { float* inttoptr (i64 -6148914691236517206 to float*), float* inttoptr (i64 -6148914691236517206 to float*), %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { float* inttoptr (i64 -6148914691236517206 to float*) } } } }, i64 -6148914691236517206, i64 -6148914691236517206, %"class.std::__1::vector"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::vector"*) }, align 8
@.str.1 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"y\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"z\00", align 1
@_ZTVN7skottie8internal12_GLOBAL__N_122VectorKeyframeAnimatorE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.skottie::internal::(anonymous namespace)::VectorKeyframeAnimator"*)* @_ZN7skottie8internal12_GLOBAL__N_122VectorKeyframeAnimatorD2Ev to i8*), i8* bitcast (void (%"class.skottie::internal::(anonymous namespace)::VectorKeyframeAnimator"*)* @_ZN7skottie8internal12_GLOBAL__N_122VectorKeyframeAnimatorD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i1 (%"class.skottie::internal::(anonymous namespace)::VectorKeyframeAnimator"*, float)* @_ZN7skottie8internal12_GLOBAL__N_122VectorKeyframeAnimator6onSeekEf to i8*)] }, align 8

@_ZN7skottie8internal29VectorKeyframeAnimatorBuilderC1EPNSt3__16vectorIfNS2_9allocatorIfEEEEPFbRKN6skjson5ValueEPmEPFbSB_mPfE = hidden unnamed_addr alias void (%"class.skottie::internal::VectorKeyframeAnimatorBuilder"*, %"class.std::__1::vector"*, i1 (%"class.skjson::Value"*, i64*)*, i1 (%"class.skjson::Value"*, i64, float*)*), void (%"class.skottie::internal::VectorKeyframeAnimatorBuilder"*, %"class.std::__1::vector"*, i1 (%"class.skjson::Value"*, i64*)*, i1 (%"class.skjson::Value"*, i64, float*)*)* @_ZN7skottie8internal29VectorKeyframeAnimatorBuilderC2EPNSt3__16vectorIfNS2_9allocatorIfEEEEPFbRKN6skjson5ValueEPmEPFbSB_mPfE

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { <2 x float>, float } @_ZNK7skottie11VectorValuecv4SkV3Ev(%"class.skottie::VectorValue"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.skottie::VectorValue", %"class.skottie::VectorValue"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = bitcast float** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.skottie::VectorValue"* %0 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = sub i64 %4, %6
  %8 = icmp eq i64 %7, 0
  %9 = inttoptr i64 %6 to float*
  br i1 %8, label %15, label %10

10:                                               ; preds = %1
  %11 = ashr exact i64 %7, 2
  %12 = load float, float* %9, align 4
  %13 = insertelement <2 x float> undef, float %12, i32 0
  %14 = icmp ugt i64 %11, 1
  br i1 %14, label %18, label %15

15:                                               ; preds = %10, %1
  %16 = phi <2 x float> [ %13, %10 ], [ <float 0.000000e+00, float undef>, %1 ]
  %17 = insertelement <2 x float> %16, float 0.000000e+00, i32 1
  br label %26

18:                                               ; preds = %10
  %19 = getelementptr inbounds float, float* %9, i64 1
  %20 = load float, float* %19, align 4
  %21 = insertelement <2 x float> %13, float %20, i32 1
  %22 = icmp eq i64 %7, 8
  br i1 %22, label %26, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds float, float* %9, i64 2
  %25 = load float, float* %24, align 4
  br label %26

26:                                               ; preds = %18, %15, %23
  %27 = phi <2 x float> [ %21, %23 ], [ %21, %18 ], [ %17, %15 ]
  %28 = phi float [ %25, %23 ], [ 0.000000e+00, %18 ], [ 0.000000e+00, %15 ]
  %29 = insertvalue { <2 x float>, float } undef, <2 x float> %27, 0
  %30 = insertvalue { <2 x float>, float } %29, float %28, 1
  ret { <2 x float>, float } %30
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK7skottie11VectorValuecvjEv(%"class.skottie::VectorValue"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = alloca float, align 4
  %3 = alloca float, align 4
  %4 = alloca float, align 4
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = bitcast { <2 x float>, <2 x float> }* %5 to %struct.SkRGBA4f*
  %7 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #14
  %8 = getelementptr inbounds %"class.skottie::VectorValue", %"class.skottie::VectorValue"* %0, i64 0, i32 0, i32 0, i32 1
  %9 = bitcast float** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.skottie::VectorValue"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp eq i64 %13, 0
  %16 = inttoptr i64 %12 to float*
  br i1 %15, label %17, label %19

17:                                               ; preds = %1
  %18 = bitcast float* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #14
  br label %27

19:                                               ; preds = %1
  %20 = load float, float* %16, align 4
  %21 = fcmp ogt float %20, 1.000000e+00
  %22 = select i1 %21, float 1.000000e+00, float %20
  %23 = fcmp ogt float %22, 0.000000e+00
  %24 = select i1 %23, float %22, float 0.000000e+00
  %25 = icmp ugt i64 %14, 1
  %26 = bitcast float* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %26) #14
  br i1 %25, label %31, label %27

27:                                               ; preds = %19, %17
  %28 = phi i8* [ %18, %17 ], [ %26, %19 ]
  %29 = phi float [ 0.000000e+00, %17 ], [ %24, %19 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28) #14
  %30 = bitcast float* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %30) #14
  br label %40

31:                                               ; preds = %19
  %32 = getelementptr inbounds float, float* %16, i64 1
  %33 = load float, float* %32, align 4
  %34 = fcmp ogt float %33, 1.000000e+00
  %35 = select i1 %34, float 1.000000e+00, float %33
  %36 = fcmp ogt float %35, 0.000000e+00
  %37 = select i1 %36, float %35, float 0.000000e+00
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %26) #14
  %38 = icmp eq i64 %13, 8
  %39 = bitcast float* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %39) #14
  br i1 %38, label %40, label %45

40:                                               ; preds = %31, %27
  %41 = phi i8* [ %30, %27 ], [ %39, %31 ]
  %42 = phi float [ 0.000000e+00, %27 ], [ %37, %31 ]
  %43 = phi float [ %29, %27 ], [ %24, %31 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %41) #14
  %44 = bitcast float* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %44) #14
  br label %61

45:                                               ; preds = %31
  %46 = getelementptr inbounds float, float* %16, i64 2
  %47 = load float, float* %46, align 4
  %48 = fcmp ogt float %47, 1.000000e+00
  %49 = select i1 %48, float 1.000000e+00, float %47
  %50 = fcmp ogt float %49, 0.000000e+00
  %51 = select i1 %50, float %49, float 0.000000e+00
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %39) #14
  %52 = icmp ugt i64 %14, 3
  %53 = bitcast float* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %53) #14
  br i1 %52, label %54, label %61

54:                                               ; preds = %45
  %55 = getelementptr inbounds float, float* %16, i64 3
  store float 1.000000e+00, float* %4, align 4
  %56 = load float, float* %55, align 4
  %57 = fcmp ogt float %56, 1.000000e+00
  %58 = select i1 %57, float 1.000000e+00, float %56
  %59 = fcmp ogt float %58, 0.000000e+00
  %60 = select i1 %59, float %58, float 0.000000e+00
  br label %61

61:                                               ; preds = %40, %45, %54
  %62 = phi i8* [ %53, %54 ], [ %53, %45 ], [ %44, %40 ]
  %63 = phi float [ %51, %54 ], [ %51, %45 ], [ 0.000000e+00, %40 ]
  %64 = phi float [ %24, %54 ], [ %24, %45 ], [ %43, %40 ]
  %65 = phi float [ %37, %54 ], [ %37, %45 ], [ %42, %40 ]
  %66 = phi float [ %60, %54 ], [ 1.000000e+00, %45 ], [ 1.000000e+00, %40 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %62) #14
  %67 = insertelement <2 x float> undef, float %64, i32 0
  %68 = insertelement <2 x float> %67, float %65, i32 1
  %69 = insertelement <2 x float> undef, float %63, i32 0
  %70 = insertelement <2 x float> %69, float %66, i32 1
  %71 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  store <2 x float> %68, <2 x float>* %71, align 8
  %72 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  store <2 x float> %70, <2 x float>* %72, align 8
  %73 = call i32 @_ZNK8SkRGBA4fIL11SkAlphaType3EE9toSkColorEv(%struct.SkRGBA4f* nonnull %6) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #14
  ret i32 %73
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind readonly ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK7skottie11VectorValuecv8SkRGBA4fIL11SkAlphaType3EEEv(%"class.skottie::VectorValue"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = alloca float, align 4
  %3 = alloca float, align 4
  %4 = alloca float, align 4
  %5 = getelementptr inbounds %"class.skottie::VectorValue", %"class.skottie::VectorValue"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = bitcast float** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.skottie::VectorValue"* %0 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = ashr exact i64 %10, 2
  %12 = icmp eq i64 %10, 0
  %13 = inttoptr i64 %9 to float*
  br i1 %12, label %14, label %16

14:                                               ; preds = %1
  %15 = bitcast float* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15)
  br label %24

16:                                               ; preds = %1
  %17 = load float, float* %13, align 4
  %18 = fcmp ogt float %17, 1.000000e+00
  %19 = select i1 %18, float 1.000000e+00, float %17
  %20 = fcmp ogt float %19, 0.000000e+00
  %21 = select i1 %20, float %19, float 0.000000e+00
  %22 = icmp ugt i64 %11, 1
  %23 = bitcast float* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %23)
  br i1 %22, label %28, label %24

24:                                               ; preds = %14, %16
  %25 = phi i8* [ %15, %14 ], [ %23, %16 ]
  %26 = phi float [ 0.000000e+00, %14 ], [ %21, %16 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25)
  %27 = bitcast float* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27)
  br label %37

28:                                               ; preds = %16
  %29 = getelementptr inbounds float, float* %13, i64 1
  %30 = load float, float* %29, align 4
  %31 = fcmp ogt float %30, 1.000000e+00
  %32 = select i1 %31, float 1.000000e+00, float %30
  %33 = fcmp ogt float %32, 0.000000e+00
  %34 = select i1 %33, float %32, float 0.000000e+00
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %23)
  %35 = icmp eq i64 %10, 8
  %36 = bitcast float* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %36)
  br i1 %35, label %37, label %42

37:                                               ; preds = %28, %24
  %38 = phi i8* [ %27, %24 ], [ %36, %28 ]
  %39 = phi float [ 0.000000e+00, %24 ], [ %34, %28 ]
  %40 = phi float [ %26, %24 ], [ %21, %28 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %38)
  %41 = bitcast float* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %41)
  br label %58

42:                                               ; preds = %28
  %43 = getelementptr inbounds float, float* %13, i64 2
  %44 = load float, float* %43, align 4
  %45 = fcmp ogt float %44, 1.000000e+00
  %46 = select i1 %45, float 1.000000e+00, float %44
  %47 = fcmp ogt float %46, 0.000000e+00
  %48 = select i1 %47, float %46, float 0.000000e+00
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %36)
  %49 = icmp ugt i64 %11, 3
  %50 = bitcast float* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %50)
  br i1 %49, label %51, label %58

51:                                               ; preds = %42
  %52 = getelementptr inbounds float, float* %13, i64 3
  store float 1.000000e+00, float* %4, align 4
  %53 = load float, float* %52, align 4
  %54 = fcmp ogt float %53, 1.000000e+00
  %55 = select i1 %54, float 1.000000e+00, float %53
  %56 = fcmp ogt float %55, 0.000000e+00
  %57 = select i1 %56, float %55, float 0.000000e+00
  br label %58

58:                                               ; preds = %37, %42, %51
  %59 = phi i8* [ %50, %51 ], [ %50, %42 ], [ %41, %37 ]
  %60 = phi float [ %48, %51 ], [ %48, %42 ], [ 0.000000e+00, %37 ]
  %61 = phi float [ %21, %51 ], [ %21, %42 ], [ %40, %37 ]
  %62 = phi float [ %34, %51 ], [ %34, %42 ], [ %39, %37 ]
  %63 = phi float [ %57, %51 ], [ 1.000000e+00, %42 ], [ 1.000000e+00, %37 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %59)
  %64 = insertelement <2 x float> undef, float %61, i32 0
  %65 = insertelement <2 x float> %64, float %62, i32 1
  %66 = insertelement <2 x float> undef, float %60, i32 0
  %67 = insertelement <2 x float> %66, float %63, i32 1
  %68 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %65, 0
  %69 = insertvalue { <2 x float>, <2 x float> } %68, <2 x float> %67, 1
  ret { <2 x float>, <2 x float> } %69
}

declare i32 @_ZNK8SkRGBA4fIL11SkAlphaType3EE9toSkColorEv(%struct.SkRGBA4f*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7skottie8internal29VectorKeyframeAnimatorBuilderC2EPNSt3__16vectorIfNS2_9allocatorIfEEEEPFbRKN6skjson5ValueEPmEPFbSB_mPfE(%"class.skottie::internal::VectorKeyframeAnimatorBuilder"* nocapture, %"class.std::__1::vector"*, i1 (%"class.skjson::Value"*, i64*)*, i1 (%"class.skjson::Value"*, i64, float*)*) unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %"class.skottie::internal::VectorKeyframeAnimatorBuilder", %"class.skottie::internal::VectorKeyframeAnimatorBuilder"* %0, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.skottie::internal::VectorKeyframeAnimatorBuilder", %"class.skottie::internal::VectorKeyframeAnimatorBuilder"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.std::__1::vector.1"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 64, i1 false) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal29VectorKeyframeAnimatorBuilderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %8 = getelementptr inbounds %"class.skottie::internal::VectorKeyframeAnimatorBuilder", %"class.skottie::internal::VectorKeyframeAnimatorBuilder"* %0, i64 0, i32 1
  store i1 (%"class.skjson::Value"*, i64*)* %2, i1 (%"class.skjson::Value"*, i64*)** %8, align 8
  %9 = getelementptr inbounds %"class.skottie::internal::VectorKeyframeAnimatorBuilder", %"class.skottie::internal::VectorKeyframeAnimatorBuilder"* %0, i64 0, i32 2
  store i1 (%"class.skjson::Value"*, i64, float*)* %3, i1 (%"class.skjson::Value"*, i64, float*)** %9, align 8
  %10 = getelementptr inbounds %"class.skottie::internal::VectorKeyframeAnimatorBuilder", %"class.skottie::internal::VectorKeyframeAnimatorBuilder"* %0, i64 0, i32 3
  %11 = bitcast %"class.std::__1::vector"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #14
  %12 = getelementptr inbounds %"class.skottie::internal::VectorKeyframeAnimatorBuilder", %"class.skottie::internal::VectorKeyframeAnimatorBuilder"* %0, i64 0, i32 5
  store i64 0, i64* %12, align 8
  %13 = getelementptr inbounds %"class.skottie::internal::VectorKeyframeAnimatorBuilder", %"class.skottie::internal::VectorKeyframeAnimatorBuilder"* %0, i64 0, i32 6
  store %"class.std::__1::vector"* %1, %"class.std::__1::vector"** %13, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7skottie8internal29VectorKeyframeAnimatorBuilder4makeERKNS0_16AnimationBuilderERKN6skjson10ArrayValueE(%class.sk_sp* noalias nocapture sret, %"class.skottie::internal::VectorKeyframeAnimatorBuilder"*, %"class.skottie::internal::AnimationBuilder"*, %"class.skjson::ArrayValue"* dereferenceable(8)) unnamed_addr #2 align 2 {
  %5 = bitcast %"class.skjson::ArrayValue"* %3 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, -8
  %8 = inttoptr i64 %7 to i64*
  %9 = getelementptr inbounds i64, i64* %8, i64 1
  %10 = bitcast i64* %9 to i8*
  %11 = load i8, i8* %10, align 8
  %12 = and i8 %11, 7
  %13 = icmp ne i8 %12, 7
  %14 = icmp eq i64* %9, null
  %15 = or i1 %13, %14
  br i1 %15, label %23, label %16

16:                                               ; preds = %4
  %17 = bitcast i64* %9 to %"class.skjson::ObjectValue"*
  %18 = getelementptr inbounds %"class.skottie::internal::VectorKeyframeAnimatorBuilder", %"class.skottie::internal::VectorKeyframeAnimatorBuilder"* %1, i64 0, i32 1
  %19 = load i1 (%"class.skjson::Value"*, i64*)*, i1 (%"class.skjson::Value"*, i64*)** %18, align 8
  %20 = tail call dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"* nonnull %17, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0)) #14
  %21 = getelementptr inbounds %"class.skottie::internal::VectorKeyframeAnimatorBuilder", %"class.skottie::internal::VectorKeyframeAnimatorBuilder"* %1, i64 0, i32 4
  %22 = tail call zeroext i1 %19(%"class.skjson::Value"* dereferenceable(8) %20, i64* %21) #14
  br i1 %22, label %25, label %23

23:                                               ; preds = %4, %16
  %24 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %"class.skottie::internal::KeyframeAnimator"* null, %"class.skottie::internal::KeyframeAnimator"** %24, align 8
  br label %200

25:                                               ; preds = %16
  %26 = load i64, i64* %21, align 8
  %27 = load i64, i64* %5, align 8
  %28 = and i64 %27, -8
  %29 = inttoptr i64 %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = or i64 %30, %26
  %32 = icmp ugt i64 %31, 4294967295
  br i1 %32, label %35, label %33

33:                                               ; preds = %25
  %34 = mul i64 %30, %26
  br label %57

35:                                               ; preds = %25
  %36 = and i64 %26, 4294967295
  %37 = and i64 %30, 4294967295
  %38 = mul nuw i64 %37, %36
  %39 = lshr i64 %26, 32
  %40 = mul nuw i64 %37, %39
  %41 = lshr i64 %30, 32
  %42 = mul nuw i64 %41, %36
  %43 = mul nuw i64 %41, %39
  %44 = shl i64 %40, 32
  %45 = add i64 %44, %38
  %46 = icmp uge i64 %45, %38
  %47 = shl i64 %42, 32
  %48 = add i64 %45, %47
  %49 = icmp uge i64 %48, %45
  %50 = lshr i64 %40, 32
  %51 = add nuw i64 %50, %43
  %52 = lshr i64 %42, 32
  %53 = sub nsw i64 0, %52
  %54 = icmp eq i64 %51, %53
  %55 = and i1 %54, %46
  %56 = and i1 %55, %49
  br i1 %56, label %57, label %60

57:                                               ; preds = %33, %35
  %58 = phi i64 [ %34, %33 ], [ %48, %35 ]
  %59 = icmp ult i64 %58, 4294967296
  br i1 %59, label %62, label %60

60:                                               ; preds = %57, %35
  %61 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %"class.skottie::internal::KeyframeAnimator"* null, %"class.skottie::internal::KeyframeAnimator"** %61, align 8
  br label %200

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.skottie::internal::VectorKeyframeAnimatorBuilder", %"class.skottie::internal::VectorKeyframeAnimatorBuilder"* %1, i64 0, i32 3
  %64 = getelementptr inbounds %"class.skottie::internal::VectorKeyframeAnimatorBuilder", %"class.skottie::internal::VectorKeyframeAnimatorBuilder"* %1, i64 0, i32 3, i32 0, i32 1
  %65 = bitcast float** %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = bitcast %"class.std::__1::vector"* %63 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = sub i64 %66, %68
  %70 = ashr exact i64 %69, 2
  %71 = icmp ugt i64 %58, %70
  %72 = inttoptr i64 %68 to float*
  br i1 %71, label %73, label %75

73:                                               ; preds = %62
  %74 = sub nsw i64 %58, %70
  tail call void @_ZNSt3__16vectorIfNS_9allocatorIfEEE8__appendEm(%"class.std::__1::vector"* %63, i64 %74) #14
  br label %79

75:                                               ; preds = %62
  %76 = icmp ult i64 %58, %70
  br i1 %76, label %77, label %79

77:                                               ; preds = %75
  %78 = getelementptr inbounds float, float* %72, i64 %58
  store float* %78, float** %64, align 8
  br label %79

79:                                               ; preds = %73, %75, %77
  %80 = getelementptr inbounds %"class.skottie::internal::VectorKeyframeAnimatorBuilder", %"class.skottie::internal::VectorKeyframeAnimatorBuilder"* %1, i64 0, i32 0
  %81 = tail call zeroext i1 @_ZN7skottie8internal23KeyframeAnimatorBuilder14parseKeyframesERKNS0_16AnimationBuilderERKN6skjson10ArrayValueE(%"class.skottie::internal::KeyframeAnimatorBuilder"* %80, %"class.skottie::internal::AnimationBuilder"* %2, %"class.skjson::ArrayValue"* dereferenceable(8) %3) #14
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %"class.skottie::internal::KeyframeAnimator"* null, %"class.skottie::internal::KeyframeAnimator"** %83, align 8
  br label %200

84:                                               ; preds = %79
  %85 = getelementptr inbounds %"class.skottie::internal::VectorKeyframeAnimatorBuilder", %"class.skottie::internal::VectorKeyframeAnimatorBuilder"* %1, i64 0, i32 5
  %86 = load i64, i64* %85, align 8
  %87 = load i64, i64* %21, align 8
  %88 = mul i64 %87, %86
  %89 = load i64, i64* %65, align 8
  %90 = load i64, i64* %67, align 8
  %91 = sub i64 %89, %90
  %92 = ashr exact i64 %91, 2
  %93 = icmp ugt i64 %88, %92
  %94 = inttoptr i64 %90 to float*
  br i1 %93, label %95, label %100

95:                                               ; preds = %84
  %96 = sub i64 %88, %92
  tail call void @_ZNSt3__16vectorIfNS_9allocatorIfEEE8__appendEm(%"class.std::__1::vector"* %63, i64 %96) #14
  %97 = load i64, i64* %67, align 8
  %98 = load i64, i64* %65, align 8
  %99 = inttoptr i64 %97 to float*
  br label %105

100:                                              ; preds = %84
  %101 = icmp ult i64 %88, %92
  br i1 %101, label %102, label %105

102:                                              ; preds = %100
  %103 = getelementptr inbounds float, float* %94, i64 %88
  store float* %103, float** %64, align 8
  %104 = ptrtoint float* %103 to i64
  br label %105

105:                                              ; preds = %95, %100, %102
  %106 = phi float* [ %99, %95 ], [ %94, %100 ], [ %94, %102 ]
  %107 = phi i64 [ %98, %95 ], [ %89, %100 ], [ %104, %102 ]
  %108 = phi i64 [ %97, %95 ], [ %90, %100 ], [ %90, %102 ]
  %109 = getelementptr inbounds %"class.skottie::internal::VectorKeyframeAnimatorBuilder", %"class.skottie::internal::VectorKeyframeAnimatorBuilder"* %1, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %110 = bitcast float** %109 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = sub i64 %111, %108
  %113 = ashr exact i64 %112, 2
  %114 = sub i64 %107, %108
  %115 = ashr exact i64 %114, 2
  %116 = icmp ugt i64 %113, %115
  br i1 %116, label %117, label %140

117:                                              ; preds = %105
  %118 = icmp eq i64 %114, 0
  br i1 %118, label %119, label %122

119:                                              ; preds = %117
  %120 = getelementptr inbounds float, float* null, i64 %115
  %121 = ptrtoint float* %120 to i64
  br label %134

122:                                              ; preds = %117
  %123 = icmp ugt i64 %115, 4611686018427387903
  br i1 %123, label %124, label %125

124:                                              ; preds = %122
  tail call void @abort() #15
  unreachable

125:                                              ; preds = %122
  %126 = tail call i8* @_Znwm(i64 %114) #16
  %127 = bitcast i8* %126 to float*
  %128 = getelementptr inbounds float, float* %127, i64 %115
  %129 = ptrtoint float* %128 to i64
  %130 = ptrtoint i8* %126 to i64
  %131 = icmp sgt i64 %114, 0
  br i1 %131, label %132, label %134

132:                                              ; preds = %125
  %133 = inttoptr i64 %108 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %126, i8* align 4 %133, i64 %114, i1 false) #14
  br label %134

134:                                              ; preds = %132, %125, %119
  %135 = phi i64 [ %130, %125 ], [ %130, %132 ], [ 0, %119 ]
  %136 = phi i64 [ %129, %125 ], [ %129, %132 ], [ %121, %119 ]
  store i64 %135, i64* %67, align 8
  store i64 %136, i64* %65, align 8
  store i64 %136, i64* %110, align 8
  %137 = icmp eq float* %106, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast float* %106 to i8*
  tail call void @_ZdlPv(i8* %139) #16
  br label %140

140:                                              ; preds = %105, %134, %138
  %141 = tail call i8* @_Znwm(i64 120) #16
  %142 = getelementptr inbounds %"class.skottie::internal::VectorKeyframeAnimatorBuilder", %"class.skottie::internal::VectorKeyframeAnimatorBuilder"* %1, i64 0, i32 0, i32 1
  %143 = bitcast %"class.std::__1::vector.1"* %142 to <2 x i64>*
  %144 = load <2 x i64>, <2 x i64>* %143, align 8
  %145 = getelementptr inbounds %"class.skottie::internal::VectorKeyframeAnimatorBuilder", %"class.skottie::internal::VectorKeyframeAnimatorBuilder"* %1, i64 0, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %146 = bitcast %"struct.skottie::internal::Keyframe"** %145 to i64*
  %147 = load i64, i64* %146, align 8
  %148 = bitcast %"class.std::__1::vector.1"* %142 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %148, i8 0, i64 24, i1 false) #14
  %149 = getelementptr inbounds %"class.skottie::internal::VectorKeyframeAnimatorBuilder", %"class.skottie::internal::VectorKeyframeAnimatorBuilder"* %1, i64 0, i32 0, i32 2
  %150 = bitcast %"class.std::__1::vector.8"* %149 to <2 x i64>*
  %151 = load <2 x i64>, <2 x i64>* %150, align 8
  %152 = getelementptr inbounds %"class.skottie::internal::VectorKeyframeAnimatorBuilder", %"class.skottie::internal::VectorKeyframeAnimatorBuilder"* %1, i64 0, i32 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %153 = bitcast %class.SkCubicMap** %152 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = bitcast %"class.std::__1::vector.8"* %149 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %155, i8 0, i64 24, i1 false) #14
  %156 = bitcast %"class.std::__1::vector"* %63 to <2 x i64>*
  %157 = load <2 x i64>, <2 x i64>* %156, align 8
  %158 = load i64, i64* %110, align 8
  %159 = bitcast %"class.std::__1::vector"* %63 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %159, i8 0, i64 24, i1 false) #14
  %160 = load i64, i64* %21, align 8
  %161 = getelementptr inbounds %"class.skottie::internal::VectorKeyframeAnimatorBuilder", %"class.skottie::internal::VectorKeyframeAnimatorBuilder"* %1, i64 0, i32 6
  %162 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %161, align 8
  %163 = getelementptr inbounds i8, i8* %141, i64 8
  %164 = bitcast i8* %163 to i32*
  store i32 1, i32* %164, align 4
  %165 = bitcast i8* %141 to i32 (...)***
  %166 = getelementptr inbounds i8, i8* %141, i64 16
  %167 = bitcast i8* %166 to <2 x i64>*
  store <2 x i64> %144, <2 x i64>* %167, align 8
  %168 = getelementptr inbounds i8, i8* %141, i64 32
  %169 = bitcast i8* %168 to i64*
  store i64 %147, i64* %169, align 8
  %170 = getelementptr inbounds i8, i8* %141, i64 40
  %171 = bitcast i8* %170 to <2 x i64>*
  store <2 x i64> %151, <2 x i64>* %171, align 8
  %172 = getelementptr inbounds i8, i8* %141, i64 56
  %173 = bitcast i8* %172 to i64*
  store i64 %154, i64* %173, align 8
  %174 = getelementptr inbounds i8, i8* %141, i64 64
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %174, i8 0, i64 16, i1 false) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN7skottie8internal12_GLOBAL__N_122VectorKeyframeAnimatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %165, align 8
  %175 = getelementptr inbounds i8, i8* %141, i64 80
  %176 = bitcast i8* %175 to <2 x i64>*
  store <2 x i64> %157, <2 x i64>* %176, align 8
  %177 = getelementptr inbounds i8, i8* %141, i64 96
  %178 = bitcast i8* %177 to i64*
  store i64 %158, i64* %178, align 8
  %179 = getelementptr inbounds i8, i8* %141, i64 104
  %180 = bitcast i8* %179 to i64*
  store i64 %160, i64* %180, align 8
  %181 = getelementptr inbounds i8, i8* %141, i64 112
  %182 = bitcast i8* %181 to %"class.std::__1::vector"**
  store %"class.std::__1::vector"* %162, %"class.std::__1::vector"** %182, align 8
  %183 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %162, i64 0, i32 0, i32 1
  %184 = bitcast float** %183 to i64*
  %185 = load i64, i64* %184, align 8
  %186 = bitcast %"class.std::__1::vector"* %162 to i64*
  %187 = load i64, i64* %186, align 8
  %188 = sub i64 %185, %187
  %189 = ashr exact i64 %188, 2
  %190 = icmp ugt i64 %160, %189
  %191 = inttoptr i64 %187 to float*
  br i1 %190, label %192, label %194

192:                                              ; preds = %140
  %193 = sub i64 %160, %189
  tail call void @_ZNSt3__16vectorIfNS_9allocatorIfEEE8__appendEm(%"class.std::__1::vector"* %162, i64 %193) #14
  br label %198

194:                                              ; preds = %140
  %195 = icmp ult i64 %160, %189
  br i1 %195, label %196, label %198

196:                                              ; preds = %194
  %197 = getelementptr inbounds float, float* %191, i64 %160
  store float* %197, float** %183, align 8
  br label %198

198:                                              ; preds = %192, %194, %196
  %199 = bitcast %class.sk_sp* %0 to i8**
  store i8* %141, i8** %199, align 8
  br label %200

200:                                              ; preds = %60, %82, %198, %23
  ret void
}

declare dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"*, i8*) local_unnamed_addr #4

declare zeroext i1 @_ZN7skottie8internal23KeyframeAnimatorBuilder14parseKeyframesERKNS0_16AnimationBuilderERKN6skjson10ArrayValueE(%"class.skottie::internal::KeyframeAnimatorBuilder"*, %"class.skottie::internal::AnimationBuilder"*, %"class.skjson::ArrayValue"* dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK7skottie8internal29VectorKeyframeAnimatorBuilder10parseValueERKNS0_16AnimationBuilderERKN6skjson5ValueE(%"class.skottie::internal::VectorKeyframeAnimatorBuilder"* nocapture readonly, %"class.skottie::internal::AnimationBuilder"* nocapture readnone, %"class.skjson::Value"* dereferenceable(8)) unnamed_addr #2 align 2 {
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  store i64 -6148914691236517206, i64* %4, align 8
  %6 = getelementptr inbounds %"class.skottie::internal::VectorKeyframeAnimatorBuilder", %"class.skottie::internal::VectorKeyframeAnimatorBuilder"* %0, i64 0, i32 1
  %7 = load i1 (%"class.skjson::Value"*, i64*)*, i1 (%"class.skjson::Value"*, i64*)** %6, align 8
  %8 = call zeroext i1 %7(%"class.skjson::Value"* dereferenceable(8) %2, i64* nonnull %4) #14
  br i1 %8, label %9, label %37

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.skottie::internal::VectorKeyframeAnimatorBuilder", %"class.skottie::internal::VectorKeyframeAnimatorBuilder"* %0, i64 0, i32 6
  %11 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %10, align 8
  %12 = load i64, i64* %4, align 8
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 1
  %14 = bitcast float** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::vector"* %11 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %15, %17
  %19 = ashr exact i64 %18, 2
  %20 = icmp ugt i64 %12, %19
  %21 = inttoptr i64 %17 to float*
  br i1 %20, label %22, label %25

22:                                               ; preds = %9
  %23 = sub i64 %12, %19
  call void @_ZNSt3__16vectorIfNS_9allocatorIfEEE8__appendEm(%"class.std::__1::vector"* %11, i64 %23) #14
  %24 = load i64, i64* %4, align 8
  br label %29

25:                                               ; preds = %9
  %26 = icmp ult i64 %12, %19
  br i1 %26, label %27, label %29

27:                                               ; preds = %25
  %28 = getelementptr inbounds float, float* %21, i64 %12
  store float* %28, float** %13, align 8
  br label %29

29:                                               ; preds = %22, %25, %27
  %30 = phi i64 [ %24, %22 ], [ %12, %25 ], [ %12, %27 ]
  %31 = getelementptr inbounds %"class.skottie::internal::VectorKeyframeAnimatorBuilder", %"class.skottie::internal::VectorKeyframeAnimatorBuilder"* %0, i64 0, i32 2
  %32 = load i1 (%"class.skjson::Value"*, i64, float*)*, i1 (%"class.skjson::Value"*, i64, float*)** %31, align 8
  %33 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %10, align 8
  %34 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %33, i64 0, i32 0, i32 0
  %35 = load float*, float** %34, align 8
  %36 = call zeroext i1 %32(%"class.skjson::Value"* dereferenceable(8) %2, i64 %30, float* %35) #14
  br label %37

37:                                               ; preds = %3, %29
  %38 = phi i1 [ %36, %29 ], [ false, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  ret i1 %38
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7skottie8internal29VectorKeyframeAnimatorBuilder12parseKFValueERKNS0_16AnimationBuilderERKN6skjson11ObjectValueERKNS5_5ValueEPNS0_8Keyframe5ValueE(%"class.skottie::internal::VectorKeyframeAnimatorBuilder"* nocapture, %"class.skottie::internal::AnimationBuilder"* nocapture readnone, %"class.skjson::ObjectValue"* nocapture readnone dereferenceable(8), %"class.skjson::Value"* dereferenceable(8), %"struct.skottie::internal::Keyframe::Value"* nocapture) unnamed_addr #2 align 2 {
  %6 = getelementptr inbounds %"class.skottie::internal::VectorKeyframeAnimatorBuilder", %"class.skottie::internal::VectorKeyframeAnimatorBuilder"* %0, i64 0, i32 5
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.skottie::internal::VectorKeyframeAnimatorBuilder", %"class.skottie::internal::VectorKeyframeAnimatorBuilder"* %0, i64 0, i32 4
  %9 = load i64, i64* %8, align 8
  %10 = mul i64 %9, %7
  %11 = getelementptr inbounds %"class.skottie::internal::VectorKeyframeAnimatorBuilder", %"class.skottie::internal::VectorKeyframeAnimatorBuilder"* %0, i64 0, i32 2
  %12 = load i1 (%"class.skjson::Value"*, i64, float*)*, i1 (%"class.skjson::Value"*, i64, float*)** %11, align 8
  %13 = getelementptr inbounds %"class.skottie::internal::VectorKeyframeAnimatorBuilder", %"class.skottie::internal::VectorKeyframeAnimatorBuilder"* %0, i64 0, i32 3, i32 0, i32 0
  %14 = load float*, float** %13, align 8
  %15 = getelementptr inbounds float, float* %14, i64 %10
  %16 = tail call zeroext i1 %12(%"class.skjson::Value"* dereferenceable(8) %3, i64 %9, float* %15) #14
  br i1 %16, label %17, label %39

17:                                               ; preds = %5
  %18 = load i64, i64* %6, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %33, label %20

20:                                               ; preds = %17
  %21 = load float*, float** %13, align 8
  %22 = getelementptr inbounds float, float* %21, i64 %10
  %23 = bitcast float* %22 to i8*
  %24 = load i64, i64* %8, align 8
  %25 = sub i64 0, %24
  %26 = getelementptr inbounds float, float* %22, i64 %25
  %27 = bitcast float* %26 to i8*
  %28 = shl i64 %24, 2
  %29 = tail call i32 @bcmp(i8* %23, i8* %27, i64 %28)
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %33

31:                                               ; preds = %20
  %32 = sub i64 %10, %24
  br label %35

33:                                               ; preds = %20, %17
  %34 = add i64 %18, 1
  store i64 %34, i64* %6, align 8
  br label %35

35:                                               ; preds = %33, %31
  %36 = phi i64 [ %10, %33 ], [ %32, %31 ]
  %37 = trunc i64 %36 to i32
  %38 = getelementptr inbounds %"struct.skottie::internal::Keyframe::Value", %"struct.skottie::internal::Keyframe::Value"* %4, i64 0, i32 0, i32 0
  store i32 %37, i32* %38, align 4
  br label %39

39:                                               ; preds = %5, %35
  %40 = phi i1 [ true, %35 ], [ false, %5 ]
  ret i1 %40
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindINS_11VectorValueEEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"*, %"class.skottie::internal::AnimationBuilder"*, %"class.skjson::ObjectValue"*, %"class.skottie::VectorValue"*) local_unnamed_addr #2 align 2 {
  %5 = alloca i8, align 1
  %6 = alloca %"class.skottie::internal::VectorKeyframeAnimatorBuilder", align 8
  %7 = icmp eq %"class.skjson::ObjectValue"* %2, null
  br i1 %7, label %89, label %8

8:                                                ; preds = %4
  %9 = tail call dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"* nonnull %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0)) #14
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #14
  store i8 -86, i8* %5, align 1
  %10 = call zeroext i1 @_ZN7skottie5ParseIbEEbRKN6skjson5ValueEPT_(%"class.skjson::Value"* dereferenceable(8) %9, i8* nonnull %5) #14
  br i1 %10, label %12, label %11

11:                                               ; preds = %8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #14
  br label %15

12:                                               ; preds = %8
  %13 = load i8, i8* %5, align 1, !range !2
  %14 = icmp eq i8 %13, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #14
  br i1 %14, label %15, label %38

15:                                               ; preds = %12, %11
  %16 = bitcast %"class.skottie::internal::VectorKeyframeAnimatorBuilder"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %16) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %16, i8* align 8 bitcast (%"class.skottie::internal::VectorKeyframeAnimatorBuilder"* @__const._ZN7skottie8internal27AnimatablePropertyContainer4bindINS_11VectorValueEEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_.builder to i8*), i64 120, i1 false)
  %17 = getelementptr inbounds %"class.skottie::VectorValue", %"class.skottie::VectorValue"* %3, i64 0, i32 0
  %18 = getelementptr inbounds %"class.skottie::internal::VectorKeyframeAnimatorBuilder", %"class.skottie::internal::VectorKeyframeAnimatorBuilder"* %6, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.skottie::internal::VectorKeyframeAnimatorBuilder", %"class.skottie::internal::VectorKeyframeAnimatorBuilder"* %6, i64 0, i32 0, i32 1
  %20 = bitcast %"class.std::__1::vector.1"* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 64, i1 false) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal29VectorKeyframeAnimatorBuilderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8
  %21 = getelementptr inbounds %"class.skottie::internal::VectorKeyframeAnimatorBuilder", %"class.skottie::internal::VectorKeyframeAnimatorBuilder"* %6, i64 0, i32 1
  store i1 (%"class.skjson::Value"*, i64*)* @"_ZZN7skottie8internal27AnimatablePropertyContainer4bindINS_11VectorValueEEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_EN3$_08__invokeERKNS7_5ValueEPm", i1 (%"class.skjson::Value"*, i64*)** %21, align 8
  %22 = getelementptr inbounds %"class.skottie::internal::VectorKeyframeAnimatorBuilder", %"class.skottie::internal::VectorKeyframeAnimatorBuilder"* %6, i64 0, i32 2
  store i1 (%"class.skjson::Value"*, i64, float*)* @"_ZZN7skottie8internal27AnimatablePropertyContainer4bindINS_11VectorValueEEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_EN3$_18__invokeERKNS7_5ValueEmPf", i1 (%"class.skjson::Value"*, i64, float*)** %22, align 8
  %23 = getelementptr inbounds %"class.skottie::internal::VectorKeyframeAnimatorBuilder", %"class.skottie::internal::VectorKeyframeAnimatorBuilder"* %6, i64 0, i32 3
  %24 = bitcast %"class.std::__1::vector"* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false) #14
  %25 = getelementptr inbounds %"class.skottie::internal::VectorKeyframeAnimatorBuilder", %"class.skottie::internal::VectorKeyframeAnimatorBuilder"* %6, i64 0, i32 5
  store i64 0, i64* %25, align 8
  %26 = getelementptr inbounds %"class.skottie::internal::VectorKeyframeAnimatorBuilder", %"class.skottie::internal::VectorKeyframeAnimatorBuilder"* %6, i64 0, i32 6
  store %"class.std::__1::vector"* %17, %"class.std::__1::vector"** %26, align 8
  %27 = getelementptr inbounds %"class.skottie::internal::VectorKeyframeAnimatorBuilder", %"class.skottie::internal::VectorKeyframeAnimatorBuilder"* %6, i64 0, i32 0
  %28 = call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer8bindImplERKNS0_16AnimationBuilderEPKN6skjson11ObjectValueERNS0_23KeyframeAnimatorBuilderE(%"class.skottie::internal::AnimatablePropertyContainer"* %0, %"class.skottie::internal::AnimationBuilder"* %1, %"class.skjson::ObjectValue"* nonnull %2, %"class.skottie::internal::KeyframeAnimatorBuilder"* nonnull dereferenceable(72) %27) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal29VectorKeyframeAnimatorBuilderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8
  %29 = getelementptr inbounds %"class.skottie::internal::VectorKeyframeAnimatorBuilder", %"class.skottie::internal::VectorKeyframeAnimatorBuilder"* %6, i64 0, i32 3, i32 0, i32 0
  %30 = load float*, float** %29, align 8
  %31 = icmp eq float* %30, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %15
  %33 = ptrtoint float* %30 to i64
  %34 = getelementptr inbounds %"class.skottie::internal::VectorKeyframeAnimatorBuilder", %"class.skottie::internal::VectorKeyframeAnimatorBuilder"* %6, i64 0, i32 3, i32 0, i32 1
  %35 = bitcast float** %34 to i64*
  store i64 %33, i64* %35, align 8
  %36 = bitcast float* %30 to i8*
  call void @_ZdlPv(i8* %36) #16
  br label %37

37:                                               ; preds = %15, %32
  call void @_ZN7skottie8internal23KeyframeAnimatorBuilderD2Ev(%"class.skottie::internal::KeyframeAnimatorBuilder"* nonnull %27) #14
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %16) #14
  br label %89

38:                                               ; preds = %12
  %39 = call i8* @_Znwm(i64 12) #16
  %40 = ptrtoint i8* %39 to i64
  %41 = getelementptr inbounds i8, i8* %39, i64 12
  %42 = ptrtoint i8* %41 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %39, i8 0, i64 12, i1 false)
  %43 = getelementptr inbounds %"class.skottie::VectorValue", %"class.skottie::VectorValue"* %3, i64 0, i32 0, i32 0, i32 0
  %44 = load float*, float** %43, align 8
  %45 = icmp eq float* %44, null
  br i1 %45, label %52, label %46

46:                                               ; preds = %38
  %47 = ptrtoint float* %44 to i64
  %48 = getelementptr inbounds %"class.skottie::VectorValue", %"class.skottie::VectorValue"* %3, i64 0, i32 0, i32 0, i32 1
  %49 = bitcast float** %48 to i64*
  store i64 %47, i64* %49, align 8
  %50 = bitcast float* %44 to i8*
  call void @_ZdlPv(i8* %50) #16
  %51 = bitcast %"class.skottie::VectorValue"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 24, i1 false) #14
  br label %52

52:                                               ; preds = %38, %46
  %53 = bitcast %"class.skottie::VectorValue"* %3 to i64*
  store i64 %40, i64* %53, align 8
  %54 = getelementptr inbounds %"class.skottie::VectorValue", %"class.skottie::VectorValue"* %3, i64 0, i32 0, i32 0, i32 1
  %55 = bitcast float** %54 to i64*
  store i64 %42, i64* %55, align 8
  %56 = getelementptr inbounds %"class.skottie::VectorValue", %"class.skottie::VectorValue"* %3, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %57 = bitcast float** %56 to i64*
  store i64 %42, i64* %57, align 8
  %58 = call dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"* nonnull %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #14
  %59 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %58, i64 0, i32 0, i64 0
  %60 = load i8, i8* %59, align 8
  %61 = and i8 %60, 7
  %62 = icmp eq i8 %61, 7
  %63 = bitcast %"class.skjson::Value"* %58 to %"class.skjson::ObjectValue"*
  %64 = select i1 %62, %"class.skjson::ObjectValue"* %63, %"class.skjson::ObjectValue"* null
  %65 = load float*, float** %43, align 8
  %66 = call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* %0, %"class.skottie::internal::AnimationBuilder"* %1, %"class.skjson::ObjectValue"* %64, float* %65) #14
  %67 = call dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"* nonnull %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #14
  %68 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %67, i64 0, i32 0, i64 0
  %69 = load i8, i8* %68, align 8
  %70 = and i8 %69, 7
  %71 = icmp eq i8 %70, 7
  %72 = bitcast %"class.skjson::Value"* %67 to %"class.skjson::ObjectValue"*
  %73 = select i1 %71, %"class.skjson::ObjectValue"* %72, %"class.skjson::ObjectValue"* null
  %74 = load float*, float** %43, align 8
  %75 = getelementptr inbounds float, float* %74, i64 1
  %76 = call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* %0, %"class.skottie::internal::AnimationBuilder"* %1, %"class.skjson::ObjectValue"* %73, float* %75) #14
  %77 = or i1 %66, %76
  %78 = call dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"* nonnull %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #14
  %79 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %78, i64 0, i32 0, i64 0
  %80 = load i8, i8* %79, align 8
  %81 = and i8 %80, 7
  %82 = icmp eq i8 %81, 7
  %83 = bitcast %"class.skjson::Value"* %78 to %"class.skjson::ObjectValue"*
  %84 = select i1 %82, %"class.skjson::ObjectValue"* %83, %"class.skjson::ObjectValue"* null
  %85 = load float*, float** %43, align 8
  %86 = getelementptr inbounds float, float* %85, i64 2
  %87 = call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* %0, %"class.skottie::internal::AnimationBuilder"* %1, %"class.skjson::ObjectValue"* %84, float* %86) #14
  %88 = or i1 %77, %87
  br label %89

89:                                               ; preds = %4, %52, %37
  %90 = phi i1 [ %28, %37 ], [ %88, %52 ], [ false, %4 ]
  ret i1 %90
}

declare zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer8bindImplERKNS0_16AnimationBuilderEPKN6skjson11ObjectValueERNS0_23KeyframeAnimatorBuilderE(%"class.skottie::internal::AnimatablePropertyContainer"*, %"class.skottie::internal::AnimationBuilder"*, %"class.skjson::ObjectValue"*, %"class.skottie::internal::KeyframeAnimatorBuilder"* dereferenceable(72)) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7skottie8internal29VectorKeyframeAnimatorBuilderD2Ev(%"class.skottie::internal::VectorKeyframeAnimatorBuilder"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.skottie::internal::VectorKeyframeAnimatorBuilder", %"class.skottie::internal::VectorKeyframeAnimatorBuilder"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal29VectorKeyframeAnimatorBuilderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.skottie::internal::VectorKeyframeAnimatorBuilder", %"class.skottie::internal::VectorKeyframeAnimatorBuilder"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load float*, float** %3, align 8
  %5 = icmp eq float* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint float* %4 to i64
  %8 = getelementptr inbounds %"class.skottie::internal::VectorKeyframeAnimatorBuilder", %"class.skottie::internal::VectorKeyframeAnimatorBuilder"* %0, i64 0, i32 3, i32 0, i32 1
  %9 = bitcast float** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast float* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #16
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.skottie::internal::VectorKeyframeAnimatorBuilder", %"class.skottie::internal::VectorKeyframeAnimatorBuilder"* %0, i64 0, i32 0
  tail call void @_ZN7skottie8internal23KeyframeAnimatorBuilderD2Ev(%"class.skottie::internal::KeyframeAnimatorBuilder"* %12) #14
  ret void
}

declare zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"*, %"class.skottie::internal::AnimationBuilder"*, %"class.skjson::ObjectValue"*, float*) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7skottie8internal29VectorKeyframeAnimatorBuilderD0Ev(%"class.skottie::internal::VectorKeyframeAnimatorBuilder"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.skottie::internal::VectorKeyframeAnimatorBuilder", %"class.skottie::internal::VectorKeyframeAnimatorBuilder"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal29VectorKeyframeAnimatorBuilderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.skottie::internal::VectorKeyframeAnimatorBuilder", %"class.skottie::internal::VectorKeyframeAnimatorBuilder"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load float*, float** %3, align 8
  %5 = icmp eq float* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint float* %4 to i64
  %8 = getelementptr inbounds %"class.skottie::internal::VectorKeyframeAnimatorBuilder", %"class.skottie::internal::VectorKeyframeAnimatorBuilder"* %0, i64 0, i32 3, i32 0, i32 1
  %9 = bitcast float** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast float* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #16
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.skottie::internal::VectorKeyframeAnimatorBuilder", %"class.skottie::internal::VectorKeyframeAnimatorBuilder"* %0, i64 0, i32 0
  tail call void @_ZN7skottie8internal23KeyframeAnimatorBuilderD2Ev(%"class.skottie::internal::KeyframeAnimatorBuilder"* %12) #14
  %13 = bitcast %"class.skottie::internal::VectorKeyframeAnimatorBuilder"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #16
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN7skottie8internal12_GLOBAL__N_122VectorKeyframeAnimatorD2Ev(%"class.skottie::internal::(anonymous namespace)::VectorKeyframeAnimator"*) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::VectorKeyframeAnimator", %"class.skottie::internal::(anonymous namespace)::VectorKeyframeAnimator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN7skottie8internal12_GLOBAL__N_122VectorKeyframeAnimatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::VectorKeyframeAnimator", %"class.skottie::internal::(anonymous namespace)::VectorKeyframeAnimator"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load float*, float** %3, align 8
  %5 = icmp eq float* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint float* %4 to i64
  %8 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::VectorKeyframeAnimator", %"class.skottie::internal::(anonymous namespace)::VectorKeyframeAnimator"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast float** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast float* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #16
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::VectorKeyframeAnimator", %"class.skottie::internal::(anonymous namespace)::VectorKeyframeAnimator"* %0, i64 0, i32 0
  tail call void @_ZN7skottie8internal16KeyframeAnimatorD2Ev(%"class.skottie::internal::KeyframeAnimator"* %12) #14
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN7skottie8internal12_GLOBAL__N_122VectorKeyframeAnimatorD0Ev(%"class.skottie::internal::(anonymous namespace)::VectorKeyframeAnimator"*) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::VectorKeyframeAnimator", %"class.skottie::internal::(anonymous namespace)::VectorKeyframeAnimator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN7skottie8internal12_GLOBAL__N_122VectorKeyframeAnimatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::VectorKeyframeAnimator", %"class.skottie::internal::(anonymous namespace)::VectorKeyframeAnimator"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load float*, float** %3, align 8
  %5 = icmp eq float* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint float* %4 to i64
  %8 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::VectorKeyframeAnimator", %"class.skottie::internal::(anonymous namespace)::VectorKeyframeAnimator"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast float** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast float* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #16
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::VectorKeyframeAnimator", %"class.skottie::internal::(anonymous namespace)::VectorKeyframeAnimator"* %0, i64 0, i32 0
  tail call void @_ZN7skottie8internal16KeyframeAnimatorD2Ev(%"class.skottie::internal::KeyframeAnimator"* %12) #14
  %13 = bitcast %"class.skottie::internal::(anonymous namespace)::VectorKeyframeAnimator"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #2 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #14
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN7skottie8internal12_GLOBAL__N_122VectorKeyframeAnimator6onSeekEf(%"class.skottie::internal::(anonymous namespace)::VectorKeyframeAnimator"*, float) unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::VectorKeyframeAnimator", %"class.skottie::internal::(anonymous namespace)::VectorKeyframeAnimator"* %0, i64 0, i32 0
  %4 = tail call { i64, i32 } @_ZNK7skottie8internal16KeyframeAnimator11getLERPInfoEf(%"class.skottie::internal::KeyframeAnimator"* %3, float %1) #14
  %5 = extractvalue { i64, i32 } %4, 0
  %6 = extractvalue { i64, i32 } %4, 1
  %7 = trunc i64 %5 to i32
  %8 = bitcast i32 %7 to float
  %9 = lshr i64 %5, 32
  %10 = trunc i64 %9 to i32
  %11 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::VectorKeyframeAnimator", %"class.skottie::internal::(anonymous namespace)::VectorKeyframeAnimator"* %0, i64 0, i32 1, i32 0, i32 0
  %12 = load float*, float** %11, align 8
  %13 = getelementptr inbounds float, float* %12, i64 %9
  %14 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::VectorKeyframeAnimator", %"class.skottie::internal::(anonymous namespace)::VectorKeyframeAnimator"* %0, i64 0, i32 3
  %15 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %15, i64 0, i32 0, i32 0
  %17 = load float*, float** %16, align 8
  %18 = icmp eq i32 %6, %10
  br i1 %18, label %23, label %19

19:                                               ; preds = %2
  %20 = bitcast i32 %6 to float
  %21 = bitcast i32 %10 to float
  %22 = fcmp oeq float %21, %20
  br i1 %22, label %23, label %34

23:                                               ; preds = %2, %19
  %24 = bitcast float* %17 to i8*
  %25 = bitcast float* %13 to i8*
  %26 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::VectorKeyframeAnimator", %"class.skottie::internal::(anonymous namespace)::VectorKeyframeAnimator"* %0, i64 0, i32 2
  %27 = load i64, i64* %26, align 8
  %28 = shl i64 %27, 2
  %29 = tail call i32 @bcmp(i8* %24, i8* %25, i64 %28)
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %196, label %31

31:                                               ; preds = %23
  %32 = icmp eq i64 %27, 0
  br i1 %32, label %196, label %33

33:                                               ; preds = %31
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %24, i8* align 4 %25, i64 %28, i1 false) #14
  br label %196

34:                                               ; preds = %19
  %35 = zext i32 %6 to i64
  %36 = getelementptr inbounds float, float* %12, i64 %35
  %37 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::VectorKeyframeAnimator", %"class.skottie::internal::(anonymous namespace)::VectorKeyframeAnimator"* %0, i64 0, i32 2
  %38 = load i64, i64* %37, align 8
  %39 = icmp ugt i64 %38, 3
  br i1 %39, label %40, label %84

40:                                               ; preds = %34
  %41 = insertelement <4 x float> undef, float %8, i32 0
  %42 = shufflevector <4 x float> %41, <4 x float> undef, <4 x i32> zeroinitializer
  %43 = add i64 %38, -4
  %44 = lshr i64 %43, 2
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 1
  %47 = icmp eq i64 %44, 0
  br i1 %47, label %50, label %48

48:                                               ; preds = %40
  %49 = sub nuw nsw i64 %45, %46
  br label %117

50:                                               ; preds = %117, %40
  %51 = phi i8 [ undef, %40 ], [ %153, %117 ]
  %52 = phi float* [ undef, %40 ], [ %154, %117 ]
  %53 = phi float* [ undef, %40 ], [ %155, %117 ]
  %54 = phi float* [ undef, %40 ], [ %156, %117 ]
  %55 = phi i8 [ 0, %40 ], [ %153, %117 ]
  %56 = phi float* [ %17, %40 ], [ %156, %117 ]
  %57 = phi float* [ %36, %40 ], [ %155, %117 ]
  %58 = phi float* [ %13, %40 ], [ %154, %117 ]
  %59 = icmp eq i64 %46, 0
  br i1 %59, label %78, label %60

60:                                               ; preds = %50
  %61 = bitcast float* %56 to <4 x float>*
  %62 = load <4 x float>, <4 x float>* %61, align 1
  %63 = bitcast float* %58 to <4 x float>*
  %64 = load <4 x float>, <4 x float>* %63, align 1
  %65 = bitcast float* %57 to <4 x float>*
  %66 = load <4 x float>, <4 x float>* %65, align 1
  %67 = fsub <4 x float> %66, %64
  %68 = fmul <4 x float> %42, %67
  %69 = fadd <4 x float> %64, %68
  store <4 x float> %69, <4 x float>* %61, align 1
  %70 = getelementptr inbounds float, float* %56, i64 4
  %71 = getelementptr inbounds float, float* %57, i64 4
  %72 = getelementptr inbounds float, float* %58, i64 4
  %73 = fcmp une <4 x float> %69, %62
  %74 = bitcast <4 x i1> %73 to i4
  %75 = icmp ne i4 %74, 0
  %76 = zext i1 %75 to i8
  %77 = or i8 %55, %76
  br label %78

78:                                               ; preds = %50, %60
  %79 = phi i8 [ %51, %50 ], [ %77, %60 ]
  %80 = phi float* [ %52, %50 ], [ %72, %60 ]
  %81 = phi float* [ %53, %50 ], [ %71, %60 ]
  %82 = phi float* [ %54, %50 ], [ %70, %60 ]
  %83 = and i64 %38, 3
  br label %84

84:                                               ; preds = %78, %34
  %85 = phi float* [ %13, %34 ], [ %80, %78 ]
  %86 = phi float* [ %36, %34 ], [ %81, %78 ]
  %87 = phi float* [ %17, %34 ], [ %82, %78 ]
  %88 = phi i64 [ %38, %34 ], [ %83, %78 ]
  %89 = phi i8 [ 0, %34 ], [ %79, %78 ]
  %90 = icmp eq i64 %88, 0
  br i1 %90, label %192, label %91

91:                                               ; preds = %84
  %92 = and i64 %88, 1
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %109, label %94

94:                                               ; preds = %91
  %95 = add i64 %88, -1
  %96 = getelementptr inbounds float, float* %85, i64 1
  %97 = getelementptr inbounds float, float* %86, i64 1
  %98 = load float, float* %85, align 4
  %99 = load float, float* %86, align 4
  %100 = fsub float %99, %98
  %101 = fmul float %100, %8
  %102 = fadd float %98, %101
  %103 = load float, float* %87, align 4
  %104 = fcmp une float %102, %103
  %105 = zext i1 %104 to i8
  %106 = and i8 %89, 1
  %107 = or i8 %106, %105
  %108 = getelementptr inbounds float, float* %87, i64 1
  store float %102, float* %87, align 4
  br label %109

109:                                              ; preds = %91, %94
  %110 = phi i8 [ undef, %91 ], [ %107, %94 ]
  %111 = phi i8 [ %89, %91 ], [ %107, %94 ]
  %112 = phi i64 [ %88, %91 ], [ %95, %94 ]
  %113 = phi float* [ %87, %91 ], [ %108, %94 ]
  %114 = phi float* [ %86, %91 ], [ %97, %94 ]
  %115 = phi float* [ %85, %91 ], [ %96, %94 ]
  %116 = icmp eq i64 %88, 1
  br i1 %116, label %192, label %159

117:                                              ; preds = %117, %48
  %118 = phi i8 [ 0, %48 ], [ %153, %117 ]
  %119 = phi float* [ %17, %48 ], [ %156, %117 ]
  %120 = phi float* [ %36, %48 ], [ %155, %117 ]
  %121 = phi float* [ %13, %48 ], [ %154, %117 ]
  %122 = phi i64 [ %49, %48 ], [ %157, %117 ]
  %123 = bitcast float* %119 to <4 x float>*
  %124 = load <4 x float>, <4 x float>* %123, align 1
  %125 = bitcast float* %121 to <4 x float>*
  %126 = load <4 x float>, <4 x float>* %125, align 1
  %127 = bitcast float* %120 to <4 x float>*
  %128 = load <4 x float>, <4 x float>* %127, align 1
  %129 = fsub <4 x float> %128, %126
  %130 = fmul <4 x float> %42, %129
  %131 = fadd <4 x float> %126, %130
  %132 = fcmp une <4 x float> %131, %124
  %133 = bitcast <4 x i1> %132 to i4
  %134 = icmp ne i4 %133, 0
  %135 = zext i1 %134 to i8
  %136 = or i8 %118, %135
  store <4 x float> %131, <4 x float>* %123, align 1
  %137 = getelementptr inbounds float, float* %121, i64 4
  %138 = getelementptr inbounds float, float* %120, i64 4
  %139 = getelementptr inbounds float, float* %119, i64 4
  %140 = bitcast float* %139 to <4 x float>*
  %141 = load <4 x float>, <4 x float>* %140, align 1
  %142 = bitcast float* %137 to <4 x float>*
  %143 = load <4 x float>, <4 x float>* %142, align 1
  %144 = bitcast float* %138 to <4 x float>*
  %145 = load <4 x float>, <4 x float>* %144, align 1
  %146 = fsub <4 x float> %145, %143
  %147 = fmul <4 x float> %42, %146
  %148 = fadd <4 x float> %143, %147
  %149 = fcmp une <4 x float> %148, %141
  %150 = bitcast <4 x i1> %149 to i4
  %151 = icmp ne i4 %150, 0
  %152 = zext i1 %151 to i8
  %153 = or i8 %136, %152
  store <4 x float> %148, <4 x float>* %140, align 1
  %154 = getelementptr inbounds float, float* %121, i64 8
  %155 = getelementptr inbounds float, float* %120, i64 8
  %156 = getelementptr inbounds float, float* %119, i64 8
  %157 = add i64 %122, -2
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %50, label %117

159:                                              ; preds = %109, %159
  %160 = phi i8 [ %189, %159 ], [ %111, %109 ]
  %161 = phi i64 [ %176, %159 ], [ %112, %109 ]
  %162 = phi float* [ %190, %159 ], [ %113, %109 ]
  %163 = phi float* [ %178, %159 ], [ %114, %109 ]
  %164 = phi float* [ %177, %159 ], [ %115, %109 ]
  %165 = getelementptr inbounds float, float* %164, i64 1
  %166 = getelementptr inbounds float, float* %163, i64 1
  %167 = load float, float* %164, align 4
  %168 = load float, float* %163, align 4
  %169 = fsub float %168, %167
  %170 = fmul float %169, %8
  %171 = fadd float %167, %170
  %172 = load float, float* %162, align 4
  %173 = fcmp une float %171, %172
  %174 = zext i1 %173 to i8
  %175 = getelementptr inbounds float, float* %162, i64 1
  store float %171, float* %162, align 4
  %176 = add i64 %161, -2
  %177 = getelementptr inbounds float, float* %164, i64 2
  %178 = getelementptr inbounds float, float* %163, i64 2
  %179 = load float, float* %165, align 4
  %180 = load float, float* %166, align 4
  %181 = fsub float %180, %179
  %182 = fmul float %181, %8
  %183 = fadd float %179, %182
  %184 = load float, float* %175, align 4
  %185 = fcmp une float %183, %184
  %186 = zext i1 %185 to i8
  %187 = and i8 %160, 1
  %188 = or i8 %187, %174
  %189 = or i8 %188, %186
  %190 = getelementptr inbounds float, float* %162, i64 2
  store float %183, float* %175, align 4
  %191 = icmp eq i64 %176, 0
  br i1 %191, label %192, label %159

192:                                              ; preds = %109, %159, %84
  %193 = phi i8 [ %89, %84 ], [ %110, %109 ], [ %189, %159 ]
  %194 = and i8 %193, 1
  %195 = icmp ne i8 %194, 0
  br label %196

196:                                              ; preds = %33, %31, %23, %192
  %197 = phi i1 [ %195, %192 ], [ false, %23 ], [ true, %31 ], [ true, %33 ]
  ret i1 %197
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN7skottie8internal16KeyframeAnimatorD2Ev(%"class.skottie::internal::KeyframeAnimator"*) unnamed_addr #9

declare { i64, i32 } @_ZNK7skottie8internal16KeyframeAnimator11getLERPInfoEf(%"class.skottie::internal::KeyframeAnimator"*, float) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: inlinehint nofree norecurse nounwind ssp uwtable
define internal zeroext i1 @"_ZZN7skottie8internal27AnimatablePropertyContainer4bindINS_11VectorValueEEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_EN3$_08__invokeERKNS7_5ValueEPm"(%"class.skjson::Value"* readonly dereferenceable(8), i64* nocapture) #10 align 2 {
  %3 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %0, i64 0, i32 0, i64 0
  %4 = load i8, i8* %3, align 8
  %5 = and i8 %4, 7
  %6 = icmp ne i8 %5, 6
  %7 = icmp eq %"class.skjson::Value"* %0, null
  %8 = or i1 %7, %6
  br i1 %8, label %15, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.skjson::Value"* %0 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = and i64 %11, -8
  %13 = inttoptr i64 %12 to i64*
  %14 = load i64, i64* %13, align 8
  store i64 %14, i64* %1, align 8
  br label %15

15:                                               ; preds = %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ]
  ret i1 %16
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal zeroext i1 @"_ZZN7skottie8internal27AnimatablePropertyContainer4bindINS_11VectorValueEEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_EN3$_18__invokeERKNS7_5ValueEmPf"(%"class.skjson::Value"* readonly dereferenceable(8), i64, float*) #6 align 2 {
  %4 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %0, i64 0, i32 0, i64 0
  %5 = load i8, i8* %4, align 8
  %6 = and i8 %5, 7
  %7 = icmp ne i8 %6, 6
  %8 = icmp eq %"class.skjson::Value"* %0, null
  %9 = or i1 %8, %7
  br i1 %9, label %36, label %10

10:                                               ; preds = %3
  %11 = bitcast %"class.skjson::Value"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = and i64 %12, -8
  %14 = inttoptr i64 %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, %1
  br i1 %16, label %17, label %36

17:                                               ; preds = %10
  %18 = icmp eq i64 %1, 0
  br i1 %18, label %36, label %19

19:                                               ; preds = %17
  %20 = getelementptr inbounds i64, i64* %14, i64 1
  %21 = bitcast i64* %20 to %"class.skjson::Value"*
  %22 = tail call zeroext i1 @_ZN7skottie5ParseIfEEbRKN6skjson5ValueEPT_(%"class.skjson::Value"* dereferenceable(8) %21, float* %2) #14
  br i1 %22, label %23, label %36

23:                                               ; preds = %19, %26
  %24 = phi i64 [ %35, %26 ], [ 1, %19 ]
  %25 = icmp eq i64 %24, %1
  br i1 %25, label %36, label %26

26:                                               ; preds = %23
  %27 = load i64, i64* %11, align 8
  %28 = and i64 %27, -8
  %29 = inttoptr i64 %28 to i64*
  %30 = getelementptr inbounds i64, i64* %29, i64 1
  %31 = getelementptr inbounds i64, i64* %30, i64 %24
  %32 = bitcast i64* %31 to %"class.skjson::Value"*
  %33 = getelementptr inbounds float, float* %2, i64 %24
  %34 = tail call zeroext i1 @_ZN7skottie5ParseIfEEbRKN6skjson5ValueEPT_(%"class.skjson::Value"* dereferenceable(8) %32, float* %33) #14
  %35 = add nuw i64 %24, 1
  br i1 %34, label %23, label %36

36:                                               ; preds = %23, %26, %3, %10, %17, %19
  %37 = phi i1 [ false, %3 ], [ false, %10 ], [ true, %17 ], [ false, %19 ], [ true, %23 ], [ false, %26 ]
  ret i1 %37
}

declare zeroext i1 @_ZN7skottie5ParseIfEEbRKN6skjson5ValueEPT_(%"class.skjson::Value"* dereferenceable(8), float*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7skottie8internal23KeyframeAnimatorBuilderD2Ev(%"class.skottie::internal::KeyframeAnimatorBuilder"*) unnamed_addr #9

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #11

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIfNS_9allocatorIfEEE8__appendEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast float** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %7 = bitcast float** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 2
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to float*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds float, float* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr float, float* %13, i64 %18
  %20 = bitcast float* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 4
  %25 = and i64 %24, -4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %25, i1 false) #14
  %26 = ptrtoint float* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 2
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 4611686018427387903
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #15
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 2
  %41 = icmp ult i64 %40, 2305843009213693951
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 1
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 4611686018427387903
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #15
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 4611686018427387903, %38 ]
  %52 = shl i64 %51, 2
  %53 = tail call i8* @_Znwm(i64 %52) #16
  %54 = bitcast i8* %53 to float*
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi float* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds float, float* %57, i64 %33
  %59 = getelementptr inbounds float, float* %57, i64 %56
  %60 = getelementptr inbounds float, float* %58, i64 %1
  %61 = bitcast float* %58 to i8*
  %62 = shl i64 %1, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %61, i8 0, i64 %62, i1 false) #14
  %63 = ptrtoint float* %59 to i64
  %64 = ptrtoint float* %60 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %66 = load float*, float** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint float* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 2
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds float, float* %58, i64 %71
  %73 = ptrtoint float* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast float* %72 to i8*
  %77 = bitcast float* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 %69, i1 false) #14
  %78 = load float*, float** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi float* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq float* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast float* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #16
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare zeroext i1 @_ZN7skottie5ParseIbEEbRKN6skjson5ValueEPT_(%"class.skjson::Value"* dereferenceable(8), i8*) local_unnamed_addr #4

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #13

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nofree nounwind readonly }
attributes #14 = { nounwind }
attributes #15 = { noreturn nounwind }
attributes #16 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
