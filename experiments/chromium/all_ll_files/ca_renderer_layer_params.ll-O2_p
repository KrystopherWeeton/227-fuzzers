; ModuleID = '../../ui/gl/ca_renderer_layer_params.cc'
source_filename = "../../ui/gl/ca_renderer_layer_params.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.ui::CARendererLayerParams" = type { i8, %"class.gfx::Rect", %"class.gfx::RRectF", i32, %"class.gfx::Transform", %"class.gl::GLImage"*, %"class.gfx::RectF", %"class.gfx::Rect", i32, i32, float, i32, i32, %"class.std::__1::vector" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkRect = type { float, float, float, float }
%struct.SkPoint = type { float, float }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.ui::CARendererLayerParams::FilterEffect"*, %"struct.ui::CARendererLayerParams::FilterEffect"*, %"class.std::__1::__compressed_pair" }
%"struct.ui::CARendererLayerParams::FilterEffect" = type { i32, float, %"class.gfx::Point", i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.ui::CARendererLayerParams::FilterEffect"* }
%"class.gl::GLImage" = type opaque
%"class.std::__1::__vector_base_common" = type { i8 }

@_ZN2ui21CARendererLayerParamsC1EbN3gfx4RectENS1_6RRectFEjRKNS1_9TransformEPN2gl7GLImageERKNS1_5RectFERKS2_jjfjNS1_18ProtectedVideoTypeE = hidden unnamed_addr alias void (%"struct.ui::CARendererLayerParams"*, i1, i64, i64, %"class.gfx::RRectF"*, i32, %"class.gfx::Transform"*, %"class.gl::GLImage"*, %"class.gfx::RectF"*, %"class.gfx::Rect"*, i32, i32, float, i32, i32), void (%"struct.ui::CARendererLayerParams"*, i1, i64, i64, %"class.gfx::RRectF"*, i32, %"class.gfx::Transform"*, %"class.gl::GLImage"*, %"class.gfx::RectF"*, %"class.gfx::Rect"*, i32, i32, float, i32, i32)* @_ZN2ui21CARendererLayerParamsC2EbN3gfx4RectENS1_6RRectFEjRKNS1_9TransformEPN2gl7GLImageERKNS1_5RectFERKS2_jjfjNS1_18ProtectedVideoTypeE
@_ZN2ui21CARendererLayerParamsC1ERKS0_ = hidden unnamed_addr alias void (%"struct.ui::CARendererLayerParams"*, %"struct.ui::CARendererLayerParams"*), void (%"struct.ui::CARendererLayerParams"*, %"struct.ui::CARendererLayerParams"*)* @_ZN2ui21CARendererLayerParamsC2ERKS0_
@_ZN2ui21CARendererLayerParamsD1Ev = hidden unnamed_addr alias void (%"struct.ui::CARendererLayerParams"*), void (%"struct.ui::CARendererLayerParams"*)* @_ZN2ui21CARendererLayerParamsD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui21CARendererLayerParamsC2EbN3gfx4RectENS1_6RRectFEjRKNS1_9TransformEPN2gl7GLImageERKNS1_5RectFERKS2_jjfjNS1_18ProtectedVideoTypeE(%"struct.ui::CARendererLayerParams"* nocapture, i1 zeroext, i64, i64, %"class.gfx::RRectF"* nocapture readonly byval(%"class.gfx::RRectF") align 8, i32, %"class.gfx::Transform"* nocapture readonly dereferenceable(68), %"class.gl::GLImage"*, %"class.gfx::RectF"* nocapture readonly dereferenceable(16), %"class.gfx::Rect"* nocapture readonly dereferenceable(16), i32, i32, float, i32, i32) unnamed_addr #0 align 2 {
  %16 = zext i1 %1 to i8
  %17 = getelementptr inbounds %"struct.ui::CARendererLayerParams", %"struct.ui::CARendererLayerParams"* %0, i64 0, i32 0
  store i8 %16, i8* %17, align 8
  %18 = getelementptr inbounds %"struct.ui::CARendererLayerParams", %"struct.ui::CARendererLayerParams"* %0, i64 0, i32 1
  %19 = bitcast %"class.gfx::Rect"* %18 to i64*
  store i64 %2, i64* %19, align 4
  %20 = getelementptr inbounds %"struct.ui::CARendererLayerParams", %"struct.ui::CARendererLayerParams"* %0, i64 0, i32 1, i32 1
  %21 = bitcast %"class.gfx::Size"* %20 to i64*
  store i64 %3, i64* %21, align 4
  %22 = getelementptr inbounds %"struct.ui::CARendererLayerParams", %"struct.ui::CARendererLayerParams"* %0, i64 0, i32 2
  %23 = bitcast %"class.gfx::RRectF"* %22 to i8*
  %24 = bitcast %"class.gfx::RRectF"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %23, i8* nonnull align 8 %24, i64 52, i1 false)
  %25 = getelementptr inbounds %"struct.ui::CARendererLayerParams", %"struct.ui::CARendererLayerParams"* %0, i64 0, i32 3
  store i32 %5, i32* %25, align 8
  %26 = getelementptr inbounds %"struct.ui::CARendererLayerParams", %"struct.ui::CARendererLayerParams"* %0, i64 0, i32 4
  %27 = bitcast %"class.gfx::Transform"* %26 to i8*
  %28 = bitcast %"class.gfx::Transform"* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %27, i8* align 4 %28, i64 68, i1 false) #5
  %29 = getelementptr inbounds %"struct.ui::CARendererLayerParams", %"struct.ui::CARendererLayerParams"* %0, i64 0, i32 5
  store %"class.gl::GLImage"* %7, %"class.gl::GLImage"** %29, align 8
  %30 = getelementptr inbounds %"struct.ui::CARendererLayerParams", %"struct.ui::CARendererLayerParams"* %0, i64 0, i32 6
  %31 = bitcast %"class.gfx::RectF"* %30 to i8*
  %32 = bitcast %"class.gfx::RectF"* %8 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 4 %32, i64 16, i1 false)
  %33 = getelementptr inbounds %"struct.ui::CARendererLayerParams", %"struct.ui::CARendererLayerParams"* %0, i64 0, i32 7
  %34 = bitcast %"class.gfx::Rect"* %33 to i8*
  %35 = bitcast %"class.gfx::Rect"* %9 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 4 %35, i64 16, i1 false)
  %36 = getelementptr inbounds %"struct.ui::CARendererLayerParams", %"struct.ui::CARendererLayerParams"* %0, i64 0, i32 8
  store i32 %10, i32* %36, align 8
  %37 = getelementptr inbounds %"struct.ui::CARendererLayerParams", %"struct.ui::CARendererLayerParams"* %0, i64 0, i32 9
  store i32 %11, i32* %37, align 4
  %38 = getelementptr inbounds %"struct.ui::CARendererLayerParams", %"struct.ui::CARendererLayerParams"* %0, i64 0, i32 10
  store float %12, float* %38, align 8
  %39 = getelementptr inbounds %"struct.ui::CARendererLayerParams", %"struct.ui::CARendererLayerParams"* %0, i64 0, i32 11
  store i32 %13, i32* %39, align 4
  %40 = getelementptr inbounds %"struct.ui::CARendererLayerParams", %"struct.ui::CARendererLayerParams"* %0, i64 0, i32 12
  store i32 %14, i32* %40, align 8
  %41 = getelementptr inbounds %"struct.ui::CARendererLayerParams", %"struct.ui::CARendererLayerParams"* %0, i64 0, i32 13
  %42 = bitcast %"class.std::__1::vector"* %41 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 24, i1 false) #5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui21CARendererLayerParamsC2ERKS0_(%"struct.ui::CARendererLayerParams"*, %"struct.ui::CARendererLayerParams"* nocapture readonly dereferenceable(232)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.ui::CARendererLayerParams", %"struct.ui::CARendererLayerParams"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.ui::CARendererLayerParams", %"struct.ui::CARendererLayerParams"* %1, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 76, i1 false)
  %5 = getelementptr inbounds %"struct.ui::CARendererLayerParams", %"struct.ui::CARendererLayerParams"* %0, i64 0, i32 4
  %6 = getelementptr inbounds %"struct.ui::CARendererLayerParams", %"struct.ui::CARendererLayerParams"* %1, i64 0, i32 4
  %7 = bitcast %"class.gfx::Transform"* %5 to i8*
  %8 = bitcast %"class.gfx::Transform"* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 68, i1 false) #5
  %9 = getelementptr inbounds %"struct.ui::CARendererLayerParams", %"struct.ui::CARendererLayerParams"* %0, i64 0, i32 5
  %10 = getelementptr inbounds %"struct.ui::CARendererLayerParams", %"struct.ui::CARendererLayerParams"* %1, i64 0, i32 5
  %11 = bitcast %"class.gl::GLImage"** %9 to i8*
  %12 = bitcast %"class.gl::GLImage"** %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 60, i1 false)
  %13 = getelementptr inbounds %"struct.ui::CARendererLayerParams", %"struct.ui::CARendererLayerParams"* %0, i64 0, i32 13
  %14 = getelementptr inbounds %"struct.ui::CARendererLayerParams", %"struct.ui::CARendererLayerParams"* %1, i64 0, i32 13
  %15 = bitcast %"class.std::__1::vector"* %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 24, i1 false) #5
  %16 = getelementptr inbounds %"struct.ui::CARendererLayerParams", %"struct.ui::CARendererLayerParams"* %1, i64 0, i32 13, i32 0, i32 1
  %17 = bitcast %"struct.ui::CARendererLayerParams::FilterEffect"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.std::__1::vector"* %14 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %18, %20
  %22 = sdiv exact i64 %21, 20
  %23 = icmp eq i64 %21, 0
  br i1 %23, label %51, label %24

24:                                               ; preds = %2
  %25 = icmp ugt i64 %22, 922337203685477580
  br i1 %25, label %26, label %28

26:                                               ; preds = %24
  %27 = bitcast %"class.std::__1::vector"* %13 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %27) #6
  unreachable

28:                                               ; preds = %24
  %29 = tail call i8* @_Znwm(i64 %21) #7
  %30 = bitcast i8* %29 to %"struct.ui::CARendererLayerParams::FilterEffect"*
  %31 = getelementptr inbounds %"struct.ui::CARendererLayerParams", %"struct.ui::CARendererLayerParams"* %0, i64 0, i32 13, i32 0, i32 1
  %32 = bitcast %"struct.ui::CARendererLayerParams::FilterEffect"** %31 to i8**
  store i8* %29, i8** %32, align 8
  %33 = bitcast %"class.std::__1::vector"* %13 to i8**
  store i8* %29, i8** %33, align 8
  %34 = getelementptr inbounds %"struct.ui::CARendererLayerParams::FilterEffect", %"struct.ui::CARendererLayerParams::FilterEffect"* %30, i64 %22
  %35 = getelementptr inbounds %"struct.ui::CARendererLayerParams", %"struct.ui::CARendererLayerParams"* %0, i64 0, i32 13, i32 0, i32 2, i32 0, i32 0
  store %"struct.ui::CARendererLayerParams::FilterEffect"* %34, %"struct.ui::CARendererLayerParams::FilterEffect"** %35, align 8
  %36 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %14, i64 0, i32 0, i32 0
  %37 = load %"struct.ui::CARendererLayerParams::FilterEffect"*, %"struct.ui::CARendererLayerParams::FilterEffect"** %36, align 8
  %38 = load i64, i64* %17, align 8
  %39 = bitcast %"struct.ui::CARendererLayerParams::FilterEffect"** %31 to i64*
  %40 = ptrtoint i8* %29 to i64
  %41 = ptrtoint %"struct.ui::CARendererLayerParams::FilterEffect"* %37 to i64
  %42 = sub i64 %38, %41
  %43 = icmp sgt i64 %42, 0
  br i1 %43, label %44, label %49

44:                                               ; preds = %28
  %45 = udiv exact i64 %42, 20
  %46 = bitcast %"struct.ui::CARendererLayerParams::FilterEffect"* %37 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %29, i8* align 4 %46, i64 %42, i1 false) #5
  %47 = getelementptr inbounds %"struct.ui::CARendererLayerParams::FilterEffect", %"struct.ui::CARendererLayerParams::FilterEffect"* %30, i64 %45
  %48 = ptrtoint %"struct.ui::CARendererLayerParams::FilterEffect"* %47 to i64
  br label %49

49:                                               ; preds = %44, %28
  %50 = phi i64 [ %48, %44 ], [ %40, %28 ]
  store i64 %50, i64* %39, align 8
  br label %51

51:                                               ; preds = %2, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui21CARendererLayerParamsD2Ev(%"struct.ui::CARendererLayerParams"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.ui::CARendererLayerParams", %"struct.ui::CARendererLayerParams"* %0, i64 0, i32 13, i32 0, i32 0
  %3 = load %"struct.ui::CARendererLayerParams::FilterEffect"*, %"struct.ui::CARendererLayerParams::FilterEffect"** %2, align 8
  %4 = icmp eq %"struct.ui::CARendererLayerParams::FilterEffect"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"struct.ui::CARendererLayerParams::FilterEffect"* %3 to i64
  %7 = getelementptr inbounds %"struct.ui::CARendererLayerParams", %"struct.ui::CARendererLayerParams"* %0, i64 0, i32 13, i32 0, i32 1
  %8 = bitcast %"struct.ui::CARendererLayerParams::FilterEffect"** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"struct.ui::CARendererLayerParams::FilterEffect"* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #7
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { noreturn nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
