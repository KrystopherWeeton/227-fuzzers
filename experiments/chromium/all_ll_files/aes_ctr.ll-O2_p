; ModuleID = '../../components/webcrypto/algorithms/aes_ctr.cc'
source_filename = "../../components/webcrypto/algorithms/aes_ctr.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.webcrypto::AlgorithmImplementation" = type { i32 (...)** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.webcrypto::AesAlgorithm" = type { %"class.webcrypto::AlgorithmImplementation", i32, %"class.std::__1::basic_string" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.webcrypto::(anonymous namespace)::AesCtrImplementation" = type { %"class.webcrypto::AesAlgorithm" }
%"class.webcrypto::Status" = type { i32, i32, %"class.std::__1::basic_string" }
%"class.blink::WebCryptoAlgorithm" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.blink::WebCryptoKey" = type { %"class.blink::WebPrivatePtr.10" }
%"class.blink::WebPrivatePtr.10" = type { i8* }
%"class.webcrypto::CryptoData" = type <{ i8*, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { i8* }
%"class.webcrypto::GenerateKeyResult" = type opaque
%"class.blink::WebCryptoKeyAlgorithm" = type opaque
%"class.blink::WebCryptoAesCtrParams" = type <{ %"class.blink::WebCryptoAlgorithmParams", %"class.blink::WebVector", i8, [7 x i8] }>
%"class.blink::WebCryptoAlgorithmParams" = type { i32 (...)** }
%"class.blink::WebVector" = type { %"class.std::__1::vector" }
%struct.evp_cipher_st = type { i32, i32, i32, i32, i32, i32, i8*, i32 (%struct.evp_cipher_ctx_st*, i8*, i8*, i32)*, i32 (%struct.evp_cipher_ctx_st*, i8*, i8*, i64)*, void (%struct.evp_cipher_ctx_st*)*, i32 (%struct.evp_cipher_ctx_st*, i32, i32, i8*)* }
%struct.evp_cipher_ctx_st = type { %struct.evp_cipher_st*, i8*, i8*, i32, i32, i32, [16 x i8], [16 x i8], [32 x i8], i32, i32, i32, [32 x i8] }
%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
%"class.crypto::OpenSSLErrStackTracer" = type { %"class.base::Location" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.bssl::internal::StackAllocated" = type { %struct.evp_cipher_ctx_st }
%struct.engine_st = type opaque
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN9webcrypto12AesAlgorithmD2Ev = comdat any

$_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm = comdat any

@.str = private unnamed_addr constant [4 x i8] c"CTR\00", align 1
@_ZTVN9webcrypto12_GLOBAL__N_120AesCtrImplementationE = internal unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webcrypto::AesAlgorithm"*)* @_ZN9webcrypto12AesAlgorithmD2Ev to i8*), i8* bitcast (void (%"class.webcrypto::(anonymous namespace)::AesCtrImplementation"*)* @_ZN9webcrypto12_GLOBAL__N_120AesCtrImplementationD0Ev to i8*), i8* bitcast (void (%"class.webcrypto::Status"*, %"class.webcrypto::(anonymous namespace)::AesCtrImplementation"*, %"class.blink::WebCryptoAlgorithm"*, %"class.blink::WebCryptoKey"*, %"class.webcrypto::CryptoData"*, %"class.std::__1::vector"*)* @_ZNK9webcrypto12_GLOBAL__N_120AesCtrImplementation7EncryptERKN5blink18WebCryptoAlgorithmERKNS2_12WebCryptoKeyERKNS_10CryptoDataEPNSt3__16vectorIhNSC_9allocatorIhEEEE to i8*), i8* bitcast (void (%"class.webcrypto::Status"*, %"class.webcrypto::(anonymous namespace)::AesCtrImplementation"*, %"class.blink::WebCryptoAlgorithm"*, %"class.blink::WebCryptoKey"*, %"class.webcrypto::CryptoData"*, %"class.std::__1::vector"*)* @_ZNK9webcrypto12_GLOBAL__N_120AesCtrImplementation7DecryptERKN5blink18WebCryptoAlgorithmERKNS2_12WebCryptoKeyERKNS_10CryptoDataEPNSt3__16vectorIhNSC_9allocatorIhEEEE to i8*), i8* bitcast (void (%"class.webcrypto::Status"*, %"class.webcrypto::AlgorithmImplementation"*, %"class.blink::WebCryptoAlgorithm"*, %"class.blink::WebCryptoKey"*, %"class.webcrypto::CryptoData"*, %"class.std::__1::vector"*)* @_ZNK9webcrypto23AlgorithmImplementation4SignERKN5blink18WebCryptoAlgorithmERKNS1_12WebCryptoKeyERKNS_10CryptoDataEPNSt3__16vectorIhNSB_9allocatorIhEEEE to i8*), i8* bitcast (void (%"class.webcrypto::Status"*, %"class.webcrypto::AlgorithmImplementation"*, %"class.blink::WebCryptoAlgorithm"*, %"class.blink::WebCryptoKey"*, %"class.webcrypto::CryptoData"*, %"class.webcrypto::CryptoData"*, i8*)* @_ZNK9webcrypto23AlgorithmImplementation6VerifyERKN5blink18WebCryptoAlgorithmERKNS1_12WebCryptoKeyERKNS_10CryptoDataESA_Pb to i8*), i8* bitcast (void (%"class.webcrypto::Status"*, %"class.webcrypto::AlgorithmImplementation"*, %"class.blink::WebCryptoAlgorithm"*, %"class.webcrypto::CryptoData"*, %"class.std::__1::vector"*)* @_ZNK9webcrypto23AlgorithmImplementation6DigestERKN5blink18WebCryptoAlgorithmERKNS_10CryptoDataEPNSt3__16vectorIhNS8_9allocatorIhEEEE to i8*), i8* bitcast (void (%"class.webcrypto::Status"*, %"class.webcrypto::AesAlgorithm"*, %"class.blink::WebCryptoAlgorithm"*, i1, i32, %"class.webcrypto::GenerateKeyResult"*)* @_ZNK9webcrypto12AesAlgorithm11GenerateKeyERKN5blink18WebCryptoAlgorithmEbiPNS_17GenerateKeyResultE to i8*), i8* bitcast (void (%"class.webcrypto::Status"*, %"class.webcrypto::AlgorithmImplementation"*, %"class.blink::WebCryptoAlgorithm"*, %"class.blink::WebCryptoKey"*, i1, i32, %"class.std::__1::vector"*)* @_ZNK9webcrypto23AlgorithmImplementation10DeriveBitsERKN5blink18WebCryptoAlgorithmERKNS1_12WebCryptoKeyEbjPNSt3__16vectorIhNS8_9allocatorIhEEEE to i8*), i8* bitcast (void (%"class.webcrypto::Status"*, %"class.webcrypto::AesAlgorithm"*, %"class.blink::WebCryptoAlgorithm"*, i8*, i32*)* @_ZNK9webcrypto12AesAlgorithm12GetKeyLengthERKN5blink18WebCryptoAlgorithmEPbPj to i8*), i8* bitcast (void (%"class.webcrypto::Status"*, %"class.webcrypto::AesAlgorithm"*, i32, %"class.webcrypto::CryptoData"*, %"class.blink::WebCryptoAlgorithm"*, i1, i32, %"class.blink::WebCryptoKey"*)* @_ZNK9webcrypto12AesAlgorithm9ImportKeyEN5blink18WebCryptoKeyFormatERKNS_10CryptoDataERKNS1_18WebCryptoAlgorithmEbiPNS1_12WebCryptoKeyE to i8*), i8* bitcast (void (%"class.webcrypto::Status"*, %"class.webcrypto::AesAlgorithm"*, i32, %"class.blink::WebCryptoKey"*, %"class.std::__1::vector"*)* @_ZNK9webcrypto12AesAlgorithm9ExportKeyEN5blink18WebCryptoKeyFormatERKNS1_12WebCryptoKeyEPNSt3__16vectorIhNS6_9allocatorIhEEEE to i8*), i8* bitcast (void (%"class.webcrypto::Status"*, %"class.webcrypto::AesAlgorithm"*, %"class.blink::WebCryptoKeyAlgorithm"*, i32, i1, i32, %"class.webcrypto::CryptoData"*, %"class.blink::WebCryptoKey"*)* @_ZNK9webcrypto12AesAlgorithm22DeserializeKeyForCloneERKN5blink21WebCryptoKeyAlgorithmENS1_16WebCryptoKeyTypeEbiRKNS_10CryptoDataEPNS1_12WebCryptoKeyE to i8*)] }, align 8
@_ZTVN9webcrypto12AesAlgorithmE = external unnamed_addr constant { [15 x i8*] }, align 8
@.str.2 = private unnamed_addr constant [27 x i8] c"AesCtrEncrypt128BitCounter\00", align 1
@.str.3 = private unnamed_addr constant [49 x i8] c"../../components/webcrypto/algorithms/aes_ctr.cc\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.webcrypto::AlgorithmImplementation"* @_ZN9webcrypto26CreateAesCtrImplementationEv() local_unnamed_addr #0 {
  %1 = alloca %"class.std::__1::basic_string", align 8
  %2 = tail call i8* @_Znwm(i64 40) #8
  %3 = bitcast i8* %2 to %"class.webcrypto::AesAlgorithm"*
  %4 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #9
  %5 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  store i8 3, i8* %6, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3, i1 false) #9
  %7 = getelementptr inbounds i8, i8* %4, i64 3
  store i8 0, i8* %7, align 1
  call void @_ZN9webcrypto12AesAlgorithmC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.webcrypto::AesAlgorithm"* nonnull %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %1) #9
  %8 = load i8, i8* %6, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %0
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  call void @_ZdlPv(i8* %12) #8
  br label %13

13:                                               ; preds = %10, %0
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #9
  %14 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN9webcrypto12_GLOBAL__N_120AesCtrImplementationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %15 = bitcast i8* %2 to %"class.webcrypto::AlgorithmImplementation"*
  ret %"class.webcrypto::AlgorithmImplementation"* %15
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

declare void @_ZN9webcrypto12AesAlgorithmC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.webcrypto::AesAlgorithm"*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9webcrypto12AesAlgorithmD2Ev(%"class.webcrypto::AesAlgorithm"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.webcrypto::AesAlgorithm", %"class.webcrypto::AesAlgorithm"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN9webcrypto12AesAlgorithmE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webcrypto::AesAlgorithm", %"class.webcrypto::AesAlgorithm"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #8
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.webcrypto::AesAlgorithm", %"class.webcrypto::AesAlgorithm"* %0, i64 0, i32 0
  tail call void @_ZN9webcrypto23AlgorithmImplementationD2Ev(%"class.webcrypto::AlgorithmImplementation"* %12) #9
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN9webcrypto12_GLOBAL__N_120AesCtrImplementationD0Ev(%"class.webcrypto::(anonymous namespace)::AesCtrImplementation"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.webcrypto::(anonymous namespace)::AesCtrImplementation", %"class.webcrypto::(anonymous namespace)::AesCtrImplementation"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN9webcrypto12AesAlgorithmE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webcrypto::(anonymous namespace)::AesCtrImplementation", %"class.webcrypto::(anonymous namespace)::AesCtrImplementation"* %0, i64 0, i32 0, i32 2
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #8
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.webcrypto::(anonymous namespace)::AesCtrImplementation", %"class.webcrypto::(anonymous namespace)::AesCtrImplementation"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN9webcrypto23AlgorithmImplementationD2Ev(%"class.webcrypto::AlgorithmImplementation"* %12) #9
  %13 = bitcast %"class.webcrypto::(anonymous namespace)::AesCtrImplementation"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK9webcrypto12_GLOBAL__N_120AesCtrImplementation7EncryptERKN5blink18WebCryptoAlgorithmERKNS2_12WebCryptoKeyERKNS_10CryptoDataEPNSt3__16vectorIhNSC_9allocatorIhEEEE(%"class.webcrypto::Status"* noalias sret, %"class.webcrypto::(anonymous namespace)::AesCtrImplementation"* nocapture readnone, %"class.blink::WebCryptoAlgorithm"* dereferenceable(8), %"class.blink::WebCryptoKey"* dereferenceable(8), %"class.webcrypto::CryptoData"* nocapture readonly dereferenceable(16), %"class.std::__1::vector"*) unnamed_addr #0 align 2 {
  tail call fastcc void @_ZN9webcrypto12_GLOBAL__N_120AesCtrEncryptDecryptERKN5blink18WebCryptoAlgorithmERKNS1_12WebCryptoKeyERKNS_10CryptoDataEPNSt3__16vectorIhNSB_9allocatorIhEEEE(%"class.webcrypto::Status"* sret %0, %"class.blink::WebCryptoAlgorithm"* dereferenceable(8) %2, %"class.blink::WebCryptoKey"* dereferenceable(8) %3, %"class.webcrypto::CryptoData"* dereferenceable(16) %4, %"class.std::__1::vector"* %5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK9webcrypto12_GLOBAL__N_120AesCtrImplementation7DecryptERKN5blink18WebCryptoAlgorithmERKNS2_12WebCryptoKeyERKNS_10CryptoDataEPNSt3__16vectorIhNSC_9allocatorIhEEEE(%"class.webcrypto::Status"* noalias sret, %"class.webcrypto::(anonymous namespace)::AesCtrImplementation"* nocapture readnone, %"class.blink::WebCryptoAlgorithm"* dereferenceable(8), %"class.blink::WebCryptoKey"* dereferenceable(8), %"class.webcrypto::CryptoData"* nocapture readonly dereferenceable(16), %"class.std::__1::vector"*) unnamed_addr #0 align 2 {
  tail call fastcc void @_ZN9webcrypto12_GLOBAL__N_120AesCtrEncryptDecryptERKN5blink18WebCryptoAlgorithmERKNS1_12WebCryptoKeyERKNS_10CryptoDataEPNSt3__16vectorIhNSB_9allocatorIhEEEE(%"class.webcrypto::Status"* sret %0, %"class.blink::WebCryptoAlgorithm"* dereferenceable(8) %2, %"class.blink::WebCryptoKey"* dereferenceable(8) %3, %"class.webcrypto::CryptoData"* dereferenceable(16) %4, %"class.std::__1::vector"* %5)
  ret void
}

declare void @_ZNK9webcrypto23AlgorithmImplementation4SignERKN5blink18WebCryptoAlgorithmERKNS1_12WebCryptoKeyERKNS_10CryptoDataEPNSt3__16vectorIhNSB_9allocatorIhEEEE(%"class.webcrypto::Status"* sret, %"class.webcrypto::AlgorithmImplementation"*, %"class.blink::WebCryptoAlgorithm"* dereferenceable(8), %"class.blink::WebCryptoKey"* dereferenceable(8), %"class.webcrypto::CryptoData"* dereferenceable(16), %"class.std::__1::vector"*) unnamed_addr #3

declare void @_ZNK9webcrypto23AlgorithmImplementation6VerifyERKN5blink18WebCryptoAlgorithmERKNS1_12WebCryptoKeyERKNS_10CryptoDataESA_Pb(%"class.webcrypto::Status"* sret, %"class.webcrypto::AlgorithmImplementation"*, %"class.blink::WebCryptoAlgorithm"* dereferenceable(8), %"class.blink::WebCryptoKey"* dereferenceable(8), %"class.webcrypto::CryptoData"* dereferenceable(16), %"class.webcrypto::CryptoData"* dereferenceable(16), i8*) unnamed_addr #3

declare void @_ZNK9webcrypto23AlgorithmImplementation6DigestERKN5blink18WebCryptoAlgorithmERKNS_10CryptoDataEPNSt3__16vectorIhNS8_9allocatorIhEEEE(%"class.webcrypto::Status"* sret, %"class.webcrypto::AlgorithmImplementation"*, %"class.blink::WebCryptoAlgorithm"* dereferenceable(8), %"class.webcrypto::CryptoData"* dereferenceable(16), %"class.std::__1::vector"*) unnamed_addr #3

declare void @_ZNK9webcrypto12AesAlgorithm11GenerateKeyERKN5blink18WebCryptoAlgorithmEbiPNS_17GenerateKeyResultE(%"class.webcrypto::Status"* sret, %"class.webcrypto::AesAlgorithm"*, %"class.blink::WebCryptoAlgorithm"* dereferenceable(8), i1 zeroext, i32, %"class.webcrypto::GenerateKeyResult"*) unnamed_addr #3

declare void @_ZNK9webcrypto23AlgorithmImplementation10DeriveBitsERKN5blink18WebCryptoAlgorithmERKNS1_12WebCryptoKeyEbjPNSt3__16vectorIhNS8_9allocatorIhEEEE(%"class.webcrypto::Status"* sret, %"class.webcrypto::AlgorithmImplementation"*, %"class.blink::WebCryptoAlgorithm"* dereferenceable(8), %"class.blink::WebCryptoKey"* dereferenceable(8), i1 zeroext, i32, %"class.std::__1::vector"*) unnamed_addr #3

declare void @_ZNK9webcrypto12AesAlgorithm12GetKeyLengthERKN5blink18WebCryptoAlgorithmEPbPj(%"class.webcrypto::Status"* sret, %"class.webcrypto::AesAlgorithm"*, %"class.blink::WebCryptoAlgorithm"* dereferenceable(8), i8*, i32*) unnamed_addr #3

declare void @_ZNK9webcrypto12AesAlgorithm9ImportKeyEN5blink18WebCryptoKeyFormatERKNS_10CryptoDataERKNS1_18WebCryptoAlgorithmEbiPNS1_12WebCryptoKeyE(%"class.webcrypto::Status"* sret, %"class.webcrypto::AesAlgorithm"*, i32, %"class.webcrypto::CryptoData"* dereferenceable(16), %"class.blink::WebCryptoAlgorithm"* dereferenceable(8), i1 zeroext, i32, %"class.blink::WebCryptoKey"*) unnamed_addr #3

declare void @_ZNK9webcrypto12AesAlgorithm9ExportKeyEN5blink18WebCryptoKeyFormatERKNS1_12WebCryptoKeyEPNSt3__16vectorIhNS6_9allocatorIhEEEE(%"class.webcrypto::Status"* sret, %"class.webcrypto::AesAlgorithm"*, i32, %"class.blink::WebCryptoKey"* dereferenceable(8), %"class.std::__1::vector"*) unnamed_addr #3

declare void @_ZNK9webcrypto12AesAlgorithm22DeserializeKeyForCloneERKN5blink21WebCryptoKeyAlgorithmENS1_16WebCryptoKeyTypeEbiRKNS_10CryptoDataEPNS1_12WebCryptoKeyE(%"class.webcrypto::Status"* sret, %"class.webcrypto::AesAlgorithm"*, %"class.blink::WebCryptoKeyAlgorithm"*, i32, i1 zeroext, i32, %"class.webcrypto::CryptoData"* dereferenceable(16), %"class.blink::WebCryptoKey"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN9webcrypto23AlgorithmImplementationD2Ev(%"class.webcrypto::AlgorithmImplementation"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN9webcrypto12_GLOBAL__N_120AesCtrEncryptDecryptERKN5blink18WebCryptoAlgorithmERKNS1_12WebCryptoKeyERKNS_10CryptoDataEPNSt3__16vectorIhNSB_9allocatorIhEEEE(%"class.webcrypto::Status"* noalias sret, %"class.blink::WebCryptoAlgorithm"* dereferenceable(8), %"class.blink::WebCryptoKey"* dereferenceable(8), %"class.webcrypto::CryptoData"* nocapture readonly dereferenceable(16), %"class.std::__1::vector"*) unnamed_addr #0 {
  %6 = alloca %"class.webcrypto::CryptoData", align 8
  %7 = alloca %"class.webcrypto::CryptoData", align 8
  %8 = alloca %"class.webcrypto::Status", align 8
  %9 = alloca %"class.webcrypto::CryptoData", align 8
  %10 = alloca %"class.webcrypto::CryptoData", align 8
  %11 = alloca %"class.std::__1::vector", align 8
  %12 = alloca %"class.webcrypto::CryptoData", align 8
  %13 = alloca %"class.webcrypto::CryptoData", align 8
  %14 = alloca %"class.webcrypto::CryptoData", align 8
  %15 = tail call %"class.blink::WebCryptoAesCtrParams"* @_ZNK5blink18WebCryptoAlgorithm12AesCtrParamsEv(%"class.blink::WebCryptoAlgorithm"* %1) #9
  %16 = tail call dereferenceable(24) %"class.std::__1::vector"* @_ZN9webcrypto19GetSymmetricKeyDataERKN5blink12WebCryptoKeyE(%"class.blink::WebCryptoKey"* dereferenceable(8) %2) #9
  %17 = getelementptr inbounds %"class.blink::WebCryptoAesCtrParams", %"class.blink::WebCryptoAesCtrParams"* %15, i64 0, i32 1
  %18 = getelementptr inbounds %"class.blink::WebCryptoAesCtrParams", %"class.blink::WebCryptoAesCtrParams"* %15, i64 0, i32 1, i32 0, i32 0, i32 1
  %19 = bitcast i8** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.blink::WebVector"* %17 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %20, %22
  %24 = icmp eq i64 %23, 16
  br i1 %24, label %26, label %25

25:                                               ; preds = %5
  tail call void @_ZN9webcrypto6Status31ErrorIncorrectSizeAesCtrCounterEv(%"class.webcrypto::Status"* sret %0) #9
  br label %233

26:                                               ; preds = %5
  %27 = getelementptr inbounds %"class.blink::WebCryptoAesCtrParams", %"class.blink::WebCryptoAesCtrParams"* %15, i64 0, i32 2
  %28 = load i8, i8* %27, align 8
  %29 = zext i8 %28 to i32
  %30 = add i8 %28, -1
  %31 = icmp slt i8 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %26
  tail call void @_ZN9webcrypto6Status31ErrorInvalidAesCtrCounterLengthEv(%"class.webcrypto::Status"* sret %0) #9
  br label %233

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"class.webcrypto::CryptoData", %"class.webcrypto::CryptoData"* %3, i64 0, i32 1
  %35 = load i32, i32* %34, align 8
  %36 = icmp slt i32 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @_ZN9webcrypto6Status17ErrorDataTooLargeEv(%"class.webcrypto::Status"* sret %0) #9
  br label %233

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %16, i64 0, i32 0, i32 1
  %40 = bitcast i8** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.std::__1::vector"* %16 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = sub i64 %41, %43
  switch i64 %44, label %52 [
    i64 16, label %45
    i64 32, label %47
  ]

45:                                               ; preds = %38
  %46 = tail call %struct.evp_cipher_st* @EVP_aes_128_ctr() #9
  br label %49

47:                                               ; preds = %38
  %48 = tail call %struct.evp_cipher_st* @EVP_aes_256_ctr() #9
  br label %49

49:                                               ; preds = %45, %47
  %50 = phi %struct.evp_cipher_st* [ %48, %47 ], [ %46, %45 ]
  %51 = icmp eq %struct.evp_cipher_st* %50, null
  br i1 %51, label %52, label %53

52:                                               ; preds = %38, %49
  tail call void @_ZN9webcrypto6Status15ErrorUnexpectedEv(%"class.webcrypto::Status"* sret %0) #9
  br label %233

53:                                               ; preds = %49
  %54 = bitcast %"class.webcrypto::CryptoData"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54) #9
  %55 = getelementptr inbounds %"class.webcrypto::CryptoData", %"class.webcrypto::CryptoData"* %6, i64 0, i32 0
  %56 = getelementptr inbounds %"class.webcrypto::CryptoData", %"class.webcrypto::CryptoData"* %6, i64 0, i32 1
  %57 = bitcast %"class.webcrypto::CryptoData"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 -86, i64 16, i1 false)
  call void @_ZN9webcrypto10CryptoDataC1ERKN5blink9WebVectorIhEE(%"class.webcrypto::CryptoData"* nonnull %6, %"class.blink::WebVector"* dereferenceable(24) %17) #9
  %58 = sext i32 %35 to i64
  %59 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %60 = bitcast i8** %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = bitcast %"class.std::__1::vector"* %4 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = sub i64 %61, %63
  %65 = icmp ult i64 %64, %58
  %66 = inttoptr i64 %63 to i8*
  br i1 %65, label %67, label %69

67:                                               ; preds = %53
  %68 = sub i64 %58, %64
  call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %4, i64 %68) #9
  br label %73

69:                                               ; preds = %53
  %70 = icmp ugt i64 %64, %58
  br i1 %70, label %71, label %73

71:                                               ; preds = %69
  %72 = getelementptr inbounds i8, i8* %66, i64 %58
  store i8* %72, i8** %59, align 8
  br label %73

73:                                               ; preds = %67, %69, %71
  %74 = call %struct.bignum_st* @BN_new() #9
  %75 = call %struct.bignum_st* @BN_value_one() #9
  %76 = call i32 @BN_lshift(%struct.bignum_st* %74, %struct.bignum_st* %75, i32 %29) #9
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %73
  call void @_ZN9webcrypto6Status15ErrorUnexpectedEv(%"class.webcrypto::Status"* sret %0) #9
  br label %229

79:                                               ; preds = %73
  %80 = and i32 %29, 7
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %92

82:                                               ; preds = %79
  %83 = lshr i32 %29, 3
  %84 = load i8*, i8** %55, align 8
  %85 = load i32, i32* %56, align 8
  %86 = zext i32 %85 to i64
  %87 = getelementptr inbounds i8, i8* %84, i64 %86
  %88 = zext i32 %83 to i64
  %89 = sub nsw i64 0, %88
  %90 = getelementptr inbounds i8, i8* %87, i64 %89
  %91 = call %struct.bignum_st* @BN_bin2bn(i8* %90, i64 %88, %struct.bignum_st* null) #9
  br label %110

92:                                               ; preds = %79
  %93 = add nsw i32 %29, -1
  %94 = lshr i32 %93, 3
  %95 = add nuw nsw i32 %94, 1
  %96 = zext i32 %95 to i64
  %97 = sub nsw i64 0, %96
  %98 = load i32, i32* %56, align 8
  %99 = load i8*, i8** %55, align 8
  %100 = zext i32 %98 to i64
  %101 = getelementptr inbounds i8, i8* %99, i64 %100
  %102 = getelementptr inbounds i8, i8* %101, i64 %97
  %103 = call i8* @_Znwm(i64 %96) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %103, i8* align 1 %102, i64 %96, i1 false) #9
  %104 = shl i32 255, %80
  %105 = load i8, i8* %103, align 1
  %106 = trunc i32 %104 to i8
  %107 = xor i8 %106, -1
  %108 = and i8 %105, %107
  store i8 %108, i8* %103, align 1
  %109 = call %struct.bignum_st* @BN_bin2bn(i8* nonnull %103, i64 %96, %struct.bignum_st* null) #9
  call void @_ZdlPv(i8* nonnull %103) #8
  br label %110

110:                                              ; preds = %92, %82
  %111 = phi %struct.bignum_st* [ %91, %82 ], [ %109, %92 ]
  %112 = call %struct.bignum_st* @BN_new() #9
  %113 = load i64, i64* %60, align 8
  %114 = load i64, i64* %62, align 8
  %115 = sub i64 %113, %114
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %121, label %117

117:                                              ; preds = %110
  %118 = add i64 %115, -1
  %119 = lshr i64 %118, 4
  %120 = add nuw nsw i64 %119, 1
  br label %121

121:                                              ; preds = %110, %117
  %122 = phi i64 [ %120, %117 ], [ 0, %110 ]
  %123 = call i32 @BN_set_word(%struct.bignum_st* %112, i64 %122) #9
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %126

125:                                              ; preds = %121
  call void @_ZN9webcrypto6Status15ErrorUnexpectedEv(%"class.webcrypto::Status"* sret %0) #9
  br label %223

126:                                              ; preds = %121
  %127 = call i32 @BN_cmp(%struct.bignum_st* %112, %struct.bignum_st* %74) #9
  %128 = icmp sgt i32 %127, 0
  br i1 %128, label %129, label %130

129:                                              ; preds = %126
  call void @_ZN9webcrypto6Status38ErrorAesCtrInputTooLongCounterRepeatedEv(%"class.webcrypto::Status"* sret %0) #9
  br label %223

130:                                              ; preds = %126
  %131 = call %struct.bignum_st* @BN_new() #9
  %132 = call i32 @BN_sub(%struct.bignum_st* %131, %struct.bignum_st* %74, %struct.bignum_st* %111) #9
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %135

134:                                              ; preds = %130
  call void @_ZN9webcrypto6Status15ErrorUnexpectedEv(%"class.webcrypto::Status"* sret %0) #9
  br label %220

135:                                              ; preds = %130
  %136 = call i32 @BN_cmp(%struct.bignum_st* %131, %struct.bignum_st* %112) #9
  %137 = icmp sgt i32 %136, -1
  br i1 %137, label %138, label %142

138:                                              ; preds = %135
  %139 = bitcast %"class.webcrypto::CryptoData"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %139) #9
  call void @_ZN9webcrypto10CryptoDataC1ERKNSt3__16vectorIhNS1_9allocatorIhEEEE(%"class.webcrypto::CryptoData"* nonnull %7, %"class.std::__1::vector"* dereferenceable(24) %16) #9
  %140 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %141 = load i8*, i8** %140, align 8
  call fastcc void @_ZN9webcrypto12_GLOBAL__N_126AesCtrEncrypt128BitCounterEPK13evp_cipher_stRKNS_10CryptoDataES6_S6_Ph(%"class.webcrypto::Status"* sret %0, %struct.evp_cipher_st* nonnull %50, %"class.webcrypto::CryptoData"* nonnull dereferenceable(16) %7, %"class.webcrypto::CryptoData"* dereferenceable(16) %3, %"class.webcrypto::CryptoData"* nonnull dereferenceable(16) %6, i8* %141)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %139) #9
  br label %220

142:                                              ; preds = %135
  %143 = call i64 @BN_get_word(%struct.bignum_st* %131) #9
  %144 = shl i64 %143, 4
  %145 = bitcast %"class.webcrypto::Status"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %145) #9
  %146 = bitcast %"class.webcrypto::CryptoData"* %9 to i8*
  %147 = bitcast %"class.webcrypto::Status"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %147, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %146) #9
  call void @_ZN9webcrypto10CryptoDataC1ERKNSt3__16vectorIhNS1_9allocatorIhEEEE(%"class.webcrypto::CryptoData"* nonnull %9, %"class.std::__1::vector"* dereferenceable(24) %16) #9
  %148 = bitcast %"class.webcrypto::CryptoData"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %148) #9
  %149 = getelementptr inbounds %"class.webcrypto::CryptoData", %"class.webcrypto::CryptoData"* %3, i64 0, i32 0
  %150 = load i8*, i8** %149, align 8
  %151 = trunc i64 %144 to i32
  call void @_ZN9webcrypto10CryptoDataC1EPKhj(%"class.webcrypto::CryptoData"* nonnull %10, i8* %150, i32 %151) #9
  %152 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %153 = load i8*, i8** %152, align 8
  call fastcc void @_ZN9webcrypto12_GLOBAL__N_126AesCtrEncrypt128BitCounterEPK13evp_cipher_stRKNS_10CryptoDataES6_S6_Ph(%"class.webcrypto::Status"* nonnull sret %8, %struct.evp_cipher_st* nonnull %50, %"class.webcrypto::CryptoData"* nonnull dereferenceable(16) %9, %"class.webcrypto::CryptoData"* nonnull dereferenceable(16) %10, %"class.webcrypto::CryptoData"* nonnull dereferenceable(16) %6, i8* %153)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %148) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %146) #9
  %154 = call zeroext i1 @_ZNK9webcrypto6Status7IsErrorEv(%"class.webcrypto::Status"* nonnull %8) #9
  br i1 %154, label %155, label %163

155:                                              ; preds = %142
  %156 = bitcast %"class.webcrypto::Status"* %8 to i64*
  %157 = bitcast %"class.webcrypto::Status"* %0 to i64*
  %158 = load i64, i64* %156, align 8
  store i64 %158, i64* %157, align 8
  %159 = getelementptr inbounds %"class.webcrypto::Status", %"class.webcrypto::Status"* %0, i64 0, i32 2
  %160 = getelementptr inbounds %"class.webcrypto::Status", %"class.webcrypto::Status"* %8, i64 0, i32 2
  %161 = bitcast %"class.std::__1::basic_string"* %159 to i8*
  %162 = bitcast %"class.std::__1::basic_string"* %160 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %161, i8* align 8 %162, i64 24, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* align 8 %162, i8 0, i64 24, i1 false) #9
  br label %219

163:                                              ; preds = %142
  %164 = bitcast %"class.std::__1::vector"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %164) #9
  %165 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 0
  %166 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 1
  %167 = lshr i32 %29, 3
  %168 = load i8*, i8** %55, align 8, !noalias !2
  %169 = load i32, i32* %56, align 8, !noalias !2
  %170 = zext i32 %169 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %164, i8 0, i64 24, i1 false) #9, !alias.scope !2
  %171 = icmp eq i32 %169, 0
  br i1 %171, label %179, label %172

172:                                              ; preds = %163
  %173 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 2, i32 0, i32 0
  %174 = call i8* @_Znwm(i64 %170) #8, !noalias !2
  store i8* %174, i8** %165, align 8, !alias.scope !2
  %175 = getelementptr inbounds i8, i8* %174, i64 %170
  store i8* %175, i8** %173, align 8, !alias.scope !2
  %176 = bitcast i8** %166 to i64*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %174, i8* align 1 %168, i64 %170, i1 false) #9, !noalias !2
  %177 = ptrtoint i8* %175 to i64
  store i64 %177, i64* %176, align 8, !alias.scope !2
  %178 = ptrtoint i8* %174 to i64
  br label %179

179:                                              ; preds = %172, %163
  %180 = phi i8* [ %174, %172 ], [ null, %163 ]
  %181 = phi i64 [ %178, %172 ], [ 0, %163 ]
  %182 = phi i64 [ %177, %172 ], [ 0, %163 ]
  %183 = sub i64 %182, %181
  %184 = zext i32 %167 to i64
  %185 = sub i64 %183, %184
  %186 = inttoptr i64 %181 to i8*
  %187 = getelementptr inbounds i8, i8* %186, i64 %185
  call void @llvm.memset.p0i8.i64(i8* align 1 %187, i8 0, i64 %184, i1 false) #9, !noalias !2
  br i1 %81, label %195, label %188

188:                                              ; preds = %179
  %189 = shl i32 255, %80
  %190 = add i64 %185, -1
  %191 = getelementptr inbounds i8, i8* %180, i64 %190
  %192 = load i8, i8* %191, align 1, !noalias !2
  %193 = trunc i32 %189 to i8
  %194 = and i8 %192, %193
  store i8 %194, i8* %191, align 1, !noalias !2
  br label %195

195:                                              ; preds = %179, %188
  %196 = bitcast %"class.webcrypto::CryptoData"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %196) #9
  call void @_ZN9webcrypto10CryptoDataC1ERKNSt3__16vectorIhNS1_9allocatorIhEEEE(%"class.webcrypto::CryptoData"* nonnull %12, %"class.std::__1::vector"* dereferenceable(24) %16) #9
  %197 = bitcast %"class.webcrypto::CryptoData"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %197) #9
  %198 = load i8*, i8** %149, align 8
  %199 = getelementptr inbounds i8, i8* %198, i64 %144
  %200 = load i32, i32* %34, align 8
  %201 = sub i32 %200, %151
  call void @_ZN9webcrypto10CryptoDataC1EPKhj(%"class.webcrypto::CryptoData"* nonnull %13, i8* %199, i32 %201) #9
  %202 = bitcast %"class.webcrypto::CryptoData"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %202) #9
  call void @_ZN9webcrypto10CryptoDataC1ERKNSt3__16vectorIhNS1_9allocatorIhEEEE(%"class.webcrypto::CryptoData"* nonnull %14, %"class.std::__1::vector"* nonnull dereferenceable(24) %11) #9
  %203 = load i8*, i8** %152, align 8
  %204 = getelementptr inbounds i8, i8* %203, i64 %144
  call fastcc void @_ZN9webcrypto12_GLOBAL__N_126AesCtrEncrypt128BitCounterEPK13evp_cipher_stRKNS_10CryptoDataES6_S6_Ph(%"class.webcrypto::Status"* sret %0, %struct.evp_cipher_st* nonnull %50, %"class.webcrypto::CryptoData"* nonnull dereferenceable(16) %12, %"class.webcrypto::CryptoData"* nonnull dereferenceable(16) %13, %"class.webcrypto::CryptoData"* nonnull dereferenceable(16) %14, i8* %204)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %202) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %197) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %196) #9
  %205 = load i8*, i8** %165, align 8
  %206 = icmp eq i8* %205, null
  br i1 %206, label %210, label %207

207:                                              ; preds = %195
  %208 = ptrtoint i8* %205 to i64
  %209 = bitcast i8** %166 to i64*
  store i64 %208, i64* %209, align 8
  call void @_ZdlPv(i8* nonnull %205) #8
  br label %210

210:                                              ; preds = %207, %195
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %164) #9
  %211 = getelementptr inbounds %"class.webcrypto::Status", %"class.webcrypto::Status"* %8, i64 0, i32 2
  %212 = bitcast %"class.std::__1::basic_string"* %211 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %213 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %212, i64 0, i32 1, i32 0
  %214 = load i8, i8* %213, align 1
  %215 = icmp slt i8 %214, 0
  br i1 %215, label %216, label %219

216:                                              ; preds = %210
  %217 = getelementptr inbounds %"class.webcrypto::Status", %"class.webcrypto::Status"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %218 = load i8*, i8** %217, align 8
  call void @_ZdlPv(i8* %218) #8
  br label %219

219:                                              ; preds = %155, %210, %216
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %145) #9
  br label %220

220:                                              ; preds = %219, %138, %134
  %221 = icmp eq %struct.bignum_st* %131, null
  br i1 %221, label %223, label %222

222:                                              ; preds = %220
  call void @BN_free(%struct.bignum_st* nonnull %131) #9
  br label %223

223:                                              ; preds = %222, %220, %129, %125
  %224 = icmp eq %struct.bignum_st* %112, null
  br i1 %224, label %226, label %225

225:                                              ; preds = %223
  call void @BN_free(%struct.bignum_st* nonnull %112) #9
  br label %226

226:                                              ; preds = %223, %225
  %227 = icmp eq %struct.bignum_st* %111, null
  br i1 %227, label %229, label %228

228:                                              ; preds = %226
  call void @BN_free(%struct.bignum_st* nonnull %111) #9
  br label %229

229:                                              ; preds = %228, %226, %78
  %230 = icmp eq %struct.bignum_st* %74, null
  br i1 %230, label %232, label %231

231:                                              ; preds = %229
  call void @BN_free(%struct.bignum_st* nonnull %74) #9
  br label %232

232:                                              ; preds = %229, %231
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54) #9
  br label %233

233:                                              ; preds = %37, %232, %52, %32, %25
  ret void
}

declare %"class.blink::WebCryptoAesCtrParams"* @_ZNK5blink18WebCryptoAlgorithm12AesCtrParamsEv(%"class.blink::WebCryptoAlgorithm"*) local_unnamed_addr #3

declare dereferenceable(24) %"class.std::__1::vector"* @_ZN9webcrypto19GetSymmetricKeyDataERKN5blink12WebCryptoKeyE(%"class.blink::WebCryptoKey"* dereferenceable(8)) local_unnamed_addr #3

declare void @_ZN9webcrypto6Status31ErrorIncorrectSizeAesCtrCounterEv(%"class.webcrypto::Status"* sret) local_unnamed_addr #3

declare void @_ZN9webcrypto6Status31ErrorInvalidAesCtrCounterLengthEv(%"class.webcrypto::Status"* sret) local_unnamed_addr #3

declare void @_ZN9webcrypto6Status17ErrorDataTooLargeEv(%"class.webcrypto::Status"* sret) local_unnamed_addr #3

declare void @_ZN9webcrypto6Status15ErrorUnexpectedEv(%"class.webcrypto::Status"* sret) local_unnamed_addr #3

declare void @_ZN9webcrypto10CryptoDataC1ERKN5blink9WebVectorIhEE(%"class.webcrypto::CryptoData"*, %"class.blink::WebVector"* dereferenceable(24)) unnamed_addr #3

declare %struct.bignum_st* @BN_new() local_unnamed_addr #3

declare i32 @BN_lshift(%struct.bignum_st*, %struct.bignum_st*, i32) local_unnamed_addr #3

declare %struct.bignum_st* @BN_value_one() local_unnamed_addr #3

declare i32 @BN_set_word(%struct.bignum_st*, i64) local_unnamed_addr #3

declare i32 @BN_cmp(%struct.bignum_st*, %struct.bignum_st*) local_unnamed_addr #3

declare void @_ZN9webcrypto6Status38ErrorAesCtrInputTooLongCounterRepeatedEv(%"class.webcrypto::Status"* sret) local_unnamed_addr #3

declare i32 @BN_sub(%struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN9webcrypto12_GLOBAL__N_126AesCtrEncrypt128BitCounterEPK13evp_cipher_stRKNS_10CryptoDataES6_S6_Ph(%"class.webcrypto::Status"* noalias sret, %struct.evp_cipher_st*, %"class.webcrypto::CryptoData"* nocapture readonly dereferenceable(16), %"class.webcrypto::CryptoData"* nocapture readonly dereferenceable(16), %"class.webcrypto::CryptoData"* nocapture readonly dereferenceable(16), i8*) unnamed_addr #0 {
  %7 = alloca %"class.crypto::OpenSSLErrStackTracer", align 8
  %8 = alloca %"class.base::Location", align 8
  %9 = alloca %"class.bssl::internal::StackAllocated", align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = bitcast %"class.crypto::OpenSSLErrStackTracer"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 32, i1 false)
  %13 = bitcast %"class.base::Location"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #9
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %8, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.3, i64 0, i64 0), i32 53) #9
  %14 = getelementptr inbounds %"class.crypto::OpenSSLErrStackTracer", %"class.crypto::OpenSSLErrStackTracer"* %7, i64 0, i32 0
  call void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"* nonnull %14, %"class.base::Location"* nonnull dereferenceable(32) %8) #9
  call void @_ZN6crypto17EnsureOpenSSLInitEv() #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #9
  %15 = bitcast %"class.bssl::internal::StackAllocated"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %15) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 144, i1 false)
  %16 = getelementptr inbounds %"class.bssl::internal::StackAllocated", %"class.bssl::internal::StackAllocated"* %9, i64 0, i32 0
  call void @EVP_CIPHER_CTX_init(%struct.evp_cipher_ctx_st* nonnull %16) #9
  %17 = getelementptr inbounds %"class.webcrypto::CryptoData", %"class.webcrypto::CryptoData"* %2, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds %"class.webcrypto::CryptoData", %"class.webcrypto::CryptoData"* %4, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = call i32 @EVP_CipherInit_ex(%struct.evp_cipher_ctx_st* nonnull %16, %struct.evp_cipher_st* %1, %struct.engine_st* null, i8* %18, i8* %20, i32 1) #9
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %6
  call void @_ZN9webcrypto6Status14OperationErrorEv(%"class.webcrypto::Status"* sret %0) #9
  br label %51

24:                                               ; preds = %6
  %25 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %25) #9
  store i32 0, i32* %10, align 4
  %26 = getelementptr inbounds %"class.webcrypto::CryptoData", %"class.webcrypto::CryptoData"* %3, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.webcrypto::CryptoData", %"class.webcrypto::CryptoData"* %3, i64 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = call i32 @EVP_CipherUpdate(%struct.evp_cipher_ctx_st* nonnull %16, i8* %5, i32* nonnull %10, i8* %27, i32 %29) #9
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %24
  call void @_ZN9webcrypto6Status14OperationErrorEv(%"class.webcrypto::Status"* sret %0) #9
  br label %50

33:                                               ; preds = %24
  %34 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %34) #9
  store i32 0, i32* %11, align 4
  %35 = load i32, i32* %10, align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %5, i64 %36
  %38 = call i32 @EVP_CipherFinal_ex(%struct.evp_cipher_ctx_st* nonnull %16, i8* %37, i32* nonnull %11) #9
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %33
  call void @_ZN9webcrypto6Status14OperationErrorEv(%"class.webcrypto::Status"* sret %0) #9
  br label %49

41:                                               ; preds = %33
  %42 = load i32, i32* %11, align 4
  %43 = load i32, i32* %10, align 4
  %44 = add nsw i32 %43, %42
  store i32 %44, i32* %10, align 4
  %45 = load i32, i32* %28, align 8
  %46 = icmp eq i32 %44, %45
  br i1 %46, label %48, label %47

47:                                               ; preds = %41
  call void @_ZN9webcrypto6Status15ErrorUnexpectedEv(%"class.webcrypto::Status"* sret %0) #9
  br label %49

48:                                               ; preds = %41
  call void @_ZN9webcrypto6Status7SuccessEv(%"class.webcrypto::Status"* sret %0) #9
  br label %49

49:                                               ; preds = %48, %47, %40
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %34) #9
  br label %50

50:                                               ; preds = %49, %32
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25) #9
  br label %51

51:                                               ; preds = %50, %23
  %52 = call i32 @EVP_CIPHER_CTX_cleanup(%struct.evp_cipher_ctx_st* nonnull %16) #9
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %15) #9
  call void @_ZN6crypto20ClearOpenSSLERRStackERKN4base8LocationE(%"class.base::Location"* nonnull dereferenceable(32) %14) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #9
  ret void
}

declare void @_ZN9webcrypto10CryptoDataC1ERKNSt3__16vectorIhNS1_9allocatorIhEEEE(%"class.webcrypto::CryptoData"*, %"class.std::__1::vector"* dereferenceable(24)) unnamed_addr #3

declare i64 @BN_get_word(%struct.bignum_st*) local_unnamed_addr #3

declare void @_ZN9webcrypto10CryptoDataC1EPKhj(%"class.webcrypto::CryptoData"*, i8*, i32) unnamed_addr #3

declare zeroext i1 @_ZNK9webcrypto6Status7IsErrorEv(%"class.webcrypto::Status"*) local_unnamed_addr #3

declare %struct.evp_cipher_st* @EVP_aes_128_ctr() local_unnamed_addr #3

declare %struct.evp_cipher_st* @EVP_aes_256_ctr() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = icmp ult i64 %9, %1
  br i1 %10, label %22, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %8 to i8*
  %13 = icmp eq i64 %1, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds i8, i8* %12, i64 %1
  %16 = sub i64 %1, %8
  %17 = getelementptr i8, i8* %12, i64 %16
  %18 = ptrtoint i8* %17 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %12, i8 0, i64 %18, i1 false) #9
  %19 = ptrtoint i8* %15 to i64
  br label %20

20:                                               ; preds = %11, %14
  %21 = phi i64 [ %19, %14 ], [ %8, %11 ]
  store i64 %21, i64* %7, align 8
  br label %68

22:                                               ; preds = %2
  %23 = bitcast %"class.std::__1::vector"* %0 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %8, %24
  %26 = add i64 %25, %1
  %27 = icmp slt i64 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %22
  %29 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %29) #10
  unreachable

30:                                               ; preds = %22
  %31 = sub i64 %5, %24
  %32 = icmp ult i64 %31, 4611686018427387903
  br i1 %32, label %33, label %38

33:                                               ; preds = %30
  %34 = shl i64 %31, 1
  %35 = icmp ult i64 %34, %26
  %36 = select i1 %35, i64 %26, i64 %34
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %30, %33
  %39 = phi i64 [ %36, %33 ], [ 9223372036854775807, %30 ]
  %40 = tail call i8* @_Znwm(i64 %39) #8
  br label %41

41:                                               ; preds = %38, %33
  %42 = phi i64 [ %39, %38 ], [ 0, %33 ]
  %43 = phi i8* [ %40, %38 ], [ null, %33 ]
  %44 = getelementptr inbounds i8, i8* %43, i64 %25
  %45 = ptrtoint i8* %44 to i64
  %46 = getelementptr inbounds i8, i8* %43, i64 %42
  %47 = getelementptr inbounds i8, i8* %44, i64 %1
  %48 = sub i64 %1, %45
  %49 = getelementptr i8, i8* %44, i64 %48
  %50 = ptrtoint i8* %49 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %44, i8 0, i64 %50, i1 false) #9
  %51 = ptrtoint i8* %46 to i64
  %52 = ptrtoint i8* %47 to i64
  %53 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = load i64, i64* %7, align 8
  %56 = ptrtoint i8* %54 to i64
  %57 = sub i64 %55, %56
  %58 = sub i64 0, %57
  %59 = getelementptr inbounds i8, i8* %44, i64 %58
  %60 = ptrtoint i8* %59 to i64
  %61 = icmp sgt i64 %57, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %41
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %59, i8* align 1 %54, i64 %57, i1 false) #9
  %63 = load i8*, i8** %53, align 8
  br label %64

64:                                               ; preds = %41, %62
  %65 = phi i8* [ %54, %41 ], [ %63, %62 ]
  store i64 %60, i64* %23, align 8
  store i64 %52, i64* %7, align 8
  store i64 %51, i64* %4, align 8
  %66 = icmp eq i8* %65, null
  br i1 %66, label %68, label %67

67:                                               ; preds = %64
  tail call void @_ZdlPv(i8* nonnull %65) #8
  br label %68

68:                                               ; preds = %67, %64, %20
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

declare %struct.bignum_st* @BN_bin2bn(i8*, i64, %struct.bignum_st*) local_unnamed_addr #3

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #3

declare i32 @EVP_CipherInit_ex(%struct.evp_cipher_ctx_st*, %struct.evp_cipher_st*, %struct.engine_st*, i8*, i8*, i32) local_unnamed_addr #3

declare void @_ZN9webcrypto6Status14OperationErrorEv(%"class.webcrypto::Status"* sret) local_unnamed_addr #3

declare i32 @EVP_CipherUpdate(%struct.evp_cipher_ctx_st*, i8*, i32*, i8*, i32) local_unnamed_addr #3

declare i32 @EVP_CipherFinal_ex(%struct.evp_cipher_ctx_st*, i8*, i32*) local_unnamed_addr #3

declare void @_ZN9webcrypto6Status7SuccessEv(%"class.webcrypto::Status"* sret) local_unnamed_addr #3

declare void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"*, %"class.base::Location"* dereferenceable(32)) unnamed_addr #3

declare void @_ZN6crypto17EnsureOpenSSLInitEv() local_unnamed_addr #3

declare void @EVP_CIPHER_CTX_init(%struct.evp_cipher_ctx_st*) local_unnamed_addr #3

declare i32 @EVP_CIPHER_CTX_cleanup(%struct.evp_cipher_ctx_st*) local_unnamed_addr #3

declare void @_ZN6crypto20ClearOpenSSLERRStackERKN4base8LocationE(%"class.base::Location"* dereferenceable(32)) local_unnamed_addr #3

declare void @BN_free(%struct.bignum_st*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { builtin nounwind }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN9webcrypto12_GLOBAL__N_122BlockWithZeroedCounterERKNS_10CryptoDataEj: argument 0"}
!4 = distinct !{!4, !"_ZN9webcrypto12_GLOBAL__N_122BlockWithZeroedCounterERKNS_10CryptoDataEj"}
