; ModuleID = 'gen/third_party/blink/renderer/bindings/modules/v8/v8_speech_grammar_list.cc'
source_filename = "gen/third_party/blink/renderer/bindings/modules/v8/v8_speech_grammar_list.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.127", %"class.std::__1::unique_ptr.127", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.137", %"class.std::__1::unique_ptr.143", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.161", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.167", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.60", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.111", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.35" }
%"struct.std::__1::__atomic_base.35" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.blink::Worklist.42"* }
%"class.blink::Worklist.42" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.blink::Worklist.49"* }
%"class.blink::Worklist.49" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.blink::Worklist.56"* }
%"class.blink::Worklist.56" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.blink::Worklist.63"* }
%"class.blink::Worklist.63" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.blink::Worklist.70"* }
%"class.blink::Worklist.70" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::Worklist.77"* }
%"class.blink::Worklist.77" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.blink::Worklist.84"* }
%"class.blink::Worklist.84" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.91", %"class.std::__1::__compressed_pair.98", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.105", [4 x i8] }>
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93", %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { i64 }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { float }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.114", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.135" }
%"class.WTF::VectorBuffer.135" = type { %"class.WTF::VectorBufferBase.136" }
%"class.WTF::VectorBufferBase.136" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.149" }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.42"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.49"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.56"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.63"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.70"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.171" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.167" = type { %"struct.std::__1::__atomic_base.168" }
%"struct.std::__1::__atomic_base.168" = type { %"struct.std::__1::__cxx_atomic_impl.169" }
%"struct.std::__1::__cxx_atomic_impl.169" = type { %"struct.std::__1::__cxx_atomic_base_impl.170" }
%"struct.std::__1::__cxx_atomic_base_impl.170" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.v8::MemorySpan" = type { %"class.v8::CFunction"*, i64 }
%"class.v8::CFunction" = type { i8*, %"class.v8::CFunctionInfo"* }
%"class.v8::CFunctionInfo" = type { %"class.v8::CTypeInfo", i32, %"class.v8::CTypeInfo"* }
%"class.v8::CTypeInfo" = type { i8, i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.base::span" = type { %"struct.base::internal::ExtentStorage", %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"* }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"struct.blink::bindings::IDLMemberInstaller::AttributeConfig" = type <{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i16, [6 x i8] }>
%"class.base::span.209" = type { %"struct.base::internal::ExtentStorage", %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* }
%"struct.blink::bindings::IDLMemberInstaller::OperationConfig" = type <{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, [3 x i8], [5 x i8] }>
%"struct.v8::IndexedPropertyHandlerConfiguration" = type <{ void (i32, %"class.v8::PropertyCallbackInfo"*)*, void (i32, %"class.v8::Value"*, %"class.v8::PropertyCallbackInfo"*)*, void (i32, %"class.v8::PropertyCallbackInfo.205"*)*, void (i32, %"class.v8::PropertyCallbackInfo.200"*)*, void (%"class.v8::PropertyCallbackInfo.201"*)*, void (i32, %"class.v8::PropertyDescriptor"*, %"class.v8::PropertyCallbackInfo"*)*, void (i32, %"class.v8::PropertyCallbackInfo"*)*, %"class.v8::Local.196", i32, [4 x i8] }>
%"class.v8::Value" = type { i8 }
%"class.v8::PropertyCallbackInfo" = type { i64* }
%"class.v8::PropertyCallbackInfo.205" = type opaque
%"class.v8::PropertyCallbackInfo.200" = type { i64* }
%"class.v8::PropertyCallbackInfo.201" = type { i64* }
%"class.v8::PropertyDescriptor" = type { %"struct.v8::PropertyDescriptor::PrivateData"* }
%"struct.v8::PropertyDescriptor::PrivateData" = type opaque
%"class.v8::Local.196" = type { %"class.v8::Value"* }
%"class.v8::FunctionTemplate" = type { i8 }
%"class.v8::ObjectTemplate" = type { i8 }
%"class.v8::Symbol" = type { i8 }
%"class.v8::Name" = type { i8 }
%"class.v8::Signature" = type { i8 }
%"class.v8::String" = type { i8 }
%"class.blink::SpeechGrammarList" = type { %"class.blink::ScriptWrappable", %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.180" }
%"class.WTF::Vector.180" = type { %"class.WTF::VectorBuffer.181" }
%"class.WTF::VectorBuffer.181" = type { %"class.WTF::VectorBufferBase.182" }
%"class.WTF::VectorBufferBase.182" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::Member" = type opaque
%"class.blink::SpeechGrammar" = type { %"class.blink::ScriptWrappable", %"class.blink::KURL", double }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.190" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.WTF::String" = type { %class.scoped_refptr.184 }
%class.scoped_refptr.184 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.185" }
%"struct.std::__1::atomic.185" = type { %"struct.std::__1::__atomic_base.186" }
%"struct.std::__1::__atomic_base.186" = type { %"struct.std::__1::__atomic_base.187" }
%"struct.std::__1::__atomic_base.187" = type { %"struct.std::__1::__cxx_atomic_impl.188" }
%"struct.std::__1::__cxx_atomic_impl.188" = type { %"struct.std::__1::__cxx_atomic_base_impl.189" }
%"struct.std::__1::__cxx_atomic_base_impl.189" = type { i32 }
%"class.std::__1::unique_ptr.190" = type { %"class.std::__1::__compressed_pair.191" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.192" }
%"struct.std::__1::__compressed_pair_elem.192" = type { %"class.blink::KURL"* }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent.405", %class.scoped_refptr.408, %"class.blink::Member.409", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent.405" = type { %"class.v8::Persistent.406" }
%"class.v8::Persistent.406" = type { %"class.v8::PersistentBase.407" }
%"class.v8::PersistentBase.407" = type { %"class.v8::Context"* }
%class.scoped_refptr.408 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.409" = type { %"class.blink::MemberBase.410" }
%"class.blink::MemberBase.410" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.371" }
%"class.blink::Persistent.371" = type { %"class.blink::PersistentBase.372" }
%"class.blink::PersistentBase.372" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.197" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.197" = type { %"class.v8::TracedReference.198" }
%"class.v8::TracedReference.198" = type { %"class.v8::BasicTracedReference.199" }
%"class.v8::BasicTracedReference.199" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::internal::Isolate" = type opaque
%"class.v8::Array" = type { i8 }
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap.303", %"class.WTF::HashMap.303", %"class.WTF::HashMap.308", %"class.std::__1::unique_ptr.313", %"class.std::__1::unique_ptr.360", %"class.blink::Persistent.371", i8, i8, i8, %"class.WTF::Vector.373", %"class.std::__1::unique_ptr.378", %"class.blink::Persistent.384", %"class.blink::Persistent.388", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr.285", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.291", %"class.std::__1::unique_ptr.297", i32, i32 }
%"class.std::__1::unique_ptr.285" = type { %"class.std::__1::__compressed_pair.286" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"struct.std::__1::__compressed_pair_elem.287" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.291" = type { %"class.std::__1::__compressed_pair.292" }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.293" }
%"struct.std::__1::__compressed_pair_elem.293" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.297" = type { %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap.303" = type { %"class.WTF::HashTable.304" }
%"class.WTF::HashTable.304" = type <{ %"struct.WTF::KeyValuePair.307"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.307" = type opaque
%"class.WTF::HashMap.308" = type { %"class.WTF::HashTable.309" }
%"class.WTF::HashTable.309" = type <{ %"struct.WTF::KeyValuePair.312"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.312" = type opaque
%"class.std::__1::unique_ptr.313" = type { %"class.std::__1::__compressed_pair.314" }
%"class.std::__1::__compressed_pair.314" = type { %"struct.std::__1::__compressed_pair_elem.315" }
%"struct.std::__1::__compressed_pair_elem.315" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.321", %class.scoped_refptr.184 }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.316", i8* }
%"class.WTF::HashMap.316" = type { %"class.WTF::HashTable.317" }
%"class.WTF::HashTable.317" = type <{ %"struct.WTF::KeyValuePair.320"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.320" = type { %"class.WTF::StringImpl"*, i64 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.321" = type { %"class.v8::PersistentValueMapBase.322" }
%"class.v8::PersistentValueMapBase.322" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.323", i8* }
%"class.WTF::HashMap.323" = type { %"class.WTF::HashTable.324" }
%"class.WTF::HashTable.324" = type <{ %"struct.WTF::KeyValuePair.327"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.327" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.328", %"class.WTF::String", %"class.std::__1::unique_ptr.330" }
%"class.WTF::RefCounted.328" = type { %"class.base::RefCounted.329" }
%"class.base::RefCounted.329" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.344", %"class.WTF::Vector.350", i8, i32 }
%"class.std::__1::unique_ptr.333" = type { %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"class.WTF::Vector.336"* }
%"class.WTF::Vector.336" = type { %"class.WTF::VectorBuffer.337" }
%"class.WTF::VectorBuffer.337" = type { %"class.WTF::VectorBufferBase.338" }
%"class.WTF::VectorBufferBase.338" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.344" = type { %"class.std::__1::__compressed_pair.345" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.346" }
%"struct.std::__1::__compressed_pair_elem.346" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.350" = type { %"class.WTF::VectorBuffer.351" }
%"class.WTF::VectorBuffer.351" = type { %"class.WTF::VectorBufferBase.338", [32 x i8] }
%"class.std::__1::unique_ptr.360" = type { %"class.std::__1::__compressed_pair.361" }
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.362" }
%"struct.std::__1::__compressed_pair_elem.362" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type { %"class.blink::ScopedPersistent", %"class.WTF::HashMap.363" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Private"* }
%"class.v8::Private" = type { i8 }
%"class.WTF::HashMap.363" = type { %"class.WTF::HashTable.364" }
%"class.WTF::HashTable.364" = type <{ %"struct.WTF::KeyValuePair.367"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.367" = type opaque
%"class.WTF::Vector.373" = type { %"class.WTF::VectorBuffer.374" }
%"class.WTF::VectorBuffer.374" = type { %"class.WTF::VectorBufferBase.375" }
%"class.WTF::VectorBufferBase.375" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type opaque
%"class.std::__1::unique_ptr.378" = type { %"class.std::__1::__compressed_pair.379" }
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem.380" }
%"struct.std::__1::__compressed_pair_elem.380" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.384" = type { %"class.blink::PersistentBase.385" }
%"class.blink::PersistentBase.385" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.388" = type { %"class.blink::PersistentBase.389" }
%"class.blink::PersistentBase.389" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector.392", i64 }
%"class.blink::HeapVector.392" = type { %"class.WTF::Vector.395" }
%"class.WTF::Vector.395" = type { %"class.WTF::VectorBuffer.396" }
%"class.WTF::VectorBuffer.396" = type { %"class.WTF::VectorBufferBase.397" }
%"class.WTF::VectorBufferBase.397" = type { %"struct.std::__1::pair.398"*, i32, i32 }
%"struct.std::__1::pair.398" = type { %"class.blink::UntracedMember", %"class.blink::Member.400" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.399" }
%"class.blink::MemberBase.399" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.400" = type { %"class.blink::MemberBase.401" }
%"class.blink::MemberBase.401" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type opaque
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.254", i32, i8, [3 x i8], %"class.blink::HeapVector.256", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.264", %"class.blink::Member.266", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.275", %"class.blink::Member.281", %"class.blink::Member.283", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.211" }
%"class.blink::HeapHashMap.211" = type { %"class.WTF::HashMap.214" }
%"class.WTF::HashMap.214" = type { %"class.WTF::HashTable.215" }
%"class.WTF::HashTable.215" = type <{ %"struct.WTF::KeyValuePair.217"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.217" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.223" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.220" }
%"class.WTF::HashTable.220" = type <{ %"class.blink::WeakMember.222"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.222" = type opaque
%"class.blink::Supplementable.223" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.224" }
%"class.blink::HeapHashMap.224" = type { %"class.WTF::HashMap.227" }
%"class.WTF::HashMap.227" = type { %"class.WTF::HashTable.228" }
%"class.WTF::HashTable.228" = type <{ %"struct.WTF::KeyValuePair.230"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.230" = type { i8*, %"class.blink::Member.231" }
%"class.blink::Member.231" = type { %"class.blink::MemberBase.232" }
%"class.blink::MemberBase.232" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.233" }
%"class.blink::Member.233" = type { %"class.blink::MemberBase.234" }
%"class.blink::MemberBase.234" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.235, %"class.std::__1::unique_ptr.236", %"class.std::__1::unique_ptr.236", %"class.std::__1::unique_ptr.242", %"class.std::__1::unique_ptr.242", %"class.blink::Member.248", i32, [4 x i8], %"class.WTF::HashSet.250", i32, i32 }
%class.scoped_refptr.235 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.242" = type { %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.248" = type { %"class.blink::MemberBase.249" }
%"class.blink::MemberBase.249" = type { %"class.blink::ExecutionContext"* }
%"class.WTF::HashSet.250" = type { %"class.WTF::HashTable.251" }
%"class.WTF::HashTable.251" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.254" = type { %"class.blink::MemberBase.255" }
%"class.blink::MemberBase.255" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.256" = type { %"class.WTF::Vector.259" }
%"class.WTF::Vector.259" = type { %"class.WTF::VectorBuffer.260" }
%"class.WTF::VectorBuffer.260" = type { %"class.WTF::VectorBufferBase.261" }
%"class.WTF::VectorBufferBase.261" = type { %"class.blink::Member.262"*, i32, i32 }
%"class.blink::Member.262" = type opaque
%"class.blink::Member.264" = type { %"class.blink::MemberBase.265" }
%"class.blink::MemberBase.265" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.266" = type { %"class.blink::MemberBase.267" }
%"class.blink::MemberBase.267" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.268", i32, i32 }
%"class.blink::HeapHashMap.268" = type { %"class.WTF::HashMap.271" }
%"class.WTF::HashMap.271" = type { %"class.WTF::HashTable.272" }
%"class.WTF::HashTable.272" = type <{ %"struct.WTF::KeyValuePair.274"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.274" = type opaque
%"class.std::__1::unique_ptr.275" = type { %"class.std::__1::__compressed_pair.276" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"struct.std::__1::__compressed_pair_elem.277" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.281" = type { %"class.blink::MemberBase.282" }
%"class.blink::MemberBase.282" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.283" = type { %"class.blink::MemberBase.284" }
%"class.blink::MemberBase.284" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.v8::Integer" = type { i8 }
%"class.blink::bindings::NativeValueTraitsStringAdapter" = type { %"class.v8::Local.210", %"class.WTF::String", %"class.WTF::StringView::StackBackingStore" }
%"class.v8::Local.210" = type { %"class.v8::String"* }
%"class.WTF::StringView::StackBackingStore" = type { [64 x i16], %"class.std::__1::unique_ptr.412" }
%"class.std::__1::unique_ptr.412" = type { %"class.std::__1::__compressed_pair.413" }
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"struct.std::__1::__compressed_pair_elem.414" = type { i8* }
%"class.v8::Uint32" = type { i8 }
%"class.v8::Int32" = type { i8 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.418" }
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.419" }
%"struct.std::__1::__compressed_pair_elem.419" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE = comdat any

$_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_ = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_ = comdat any

@.str = private unnamed_addr constant [18 x i8] c"SpeechGrammarList\00", align 1
@_ZN5blink19V8SpeechGrammarList18wrapper_type_info_E = hidden constant %"struct.blink::WrapperTypeInfo" { i16 1, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)* @_ZN5blink19V8SpeechGrammarList24InstallInterfaceTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEE, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)* @_ZN5blink19V8SpeechGrammarList33InstallContextDependentPropertiesEN2v85LocalINS1_7ContextEEERKNS_15DOMWrapperWorldENS2_INS1_6ObjectEEES9_S9_NS2_INS1_8TemplateEEENS_8bindings21V8InterfaceBridgeBase15FeatureSelectorE, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i32 0, i32 0), %"struct.blink::WrapperTypeInfo"* null, i8 8 }, align 8
@_ZN5blink17SpeechGrammarList18wrapper_type_info_E = hidden local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"* @_ZN5blink19V8SpeechGrammarList18wrapper_type_info_E, align 8
@.str.1 = private unnamed_addr constant [42 x i8] c"Indexed property setter is not supported.\00", align 1
@.str.2 = private unnamed_addr constant [41 x i8] c"Index property deleter is not supported.\00", align 1
@.str.3 = private unnamed_addr constant [37 x i8] c"Accessor properties are not allowed.\00", align 1
@.str.4 = private unnamed_addr constant [40 x i8] c"Index property setter is not supported.\00", align 1
@.ref.tmp = private constant %"class.v8::MemorySpan" zeroinitializer, align 8
@_ZZN5blink19V8SpeechGrammarList30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kAttributeTable = internal constant [1 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }] [{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_122v8_speech_grammar_list26LengthAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 104, i8 0 }], align 16
@.str.5 = private unnamed_addr constant [7 x i8] c"length\00", align 1
@_ZZN5blink19V8SpeechGrammarList30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable = internal constant [3 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }] [{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_122v8_speech_grammar_list30AddFromStringOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_122v8_speech_grammar_list27AddFromUriOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_122v8_speech_grammar_list21ItemOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }], align 16
@.str.6 = private unnamed_addr constant [14 x i8] c"addFromString\00", align 1
@.str.7 = private unnamed_addr constant [11 x i8] c"addFromUri\00", align 1
@.str.8 = private unnamed_addr constant [5 x i8] c"item\00", align 1
@.str.9 = private unnamed_addr constant [12 x i8] c"constructor\00", align 1
@_ZTVN5blink14ExceptionStateE = external unnamed_addr constant { [9 x i8*] }, align 8
@.str.10 = private unnamed_addr constant [66 x i8] c"../../third_party/blink/renderer/platform/bindings/script_state.h\00", align 1
@.str.11 = private unnamed_addr constant [13 x i8] c"script_state\00", align 1
@.str.12 = private unnamed_addr constant [34 x i8] c"script_state->context_ == context\00", align 1
@_ZN3WTF8internal25g_main_thread_stack_startE = external local_unnamed_addr global i64, align 8
@_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE = external local_unnamed_addr global i64, align 8
@_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E = external local_unnamed_addr global i32, align 4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19V8SpeechGrammarList24InstallInterfaceTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*) #0 align 2 {
  %4 = alloca %"class.base::span", align 8
  %5 = alloca %"class.base::span.209", align 8
  %6 = alloca %"struct.v8::IndexedPropertyHandlerConfiguration", align 8
  %7 = bitcast %"class.v8::Template"* %2 to %"class.v8::FunctionTemplate"*
  %8 = tail call %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate16InstanceTemplateEv(%"class.v8::FunctionTemplate"* %7) #6
  %9 = tail call %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate17PrototypeTemplateEv(%"class.v8::FunctionTemplate"* %7) #6
  tail call void @_ZN5blink8bindings25SetupIDLInterfaceTemplateEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_14ObjectTemplateEEES9_NS7_INS1_16FunctionTemplateEEESB_(%"class.v8::Isolate"* %0, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink19V8SpeechGrammarList18wrapper_type_info_E, %"class.v8::ObjectTemplate"* %8, %"class.v8::ObjectTemplate"* %9, %"class.v8::FunctionTemplate"* %7, %"class.v8::FunctionTemplate"* null) #6
  tail call void @_ZN2v816FunctionTemplate14SetCallHandlerEPFvRKNS_20FunctionCallbackInfoINS_5ValueEEEENS_5LocalIS2_EENS_14SideEffectTypeERKNS_10MemorySpanIKNS_9CFunctionEEE(%"class.v8::FunctionTemplate"* %7, void (%"class.v8::FunctionCallbackInfo"*)* nonnull @_ZN5blink12_GLOBAL__N_122v8_speech_grammar_list19ConstructorCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, %"class.v8::Value"* null, i32 0, %"class.v8::MemorySpan"* nonnull dereferenceable(16) @.ref.tmp) #6
  tail call void @_ZN2v816FunctionTemplate9SetLengthEi(%"class.v8::FunctionTemplate"* %7, i32 0) #6
  %10 = bitcast %"struct.v8::IndexedPropertyHandlerConfiguration"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %10) #6
  %11 = getelementptr inbounds %"struct.v8::IndexedPropertyHandlerConfiguration", %"struct.v8::IndexedPropertyHandlerConfiguration"* %6, i64 0, i32 0
  store void (i32, %"class.v8::PropertyCallbackInfo"*)* @_ZN5blink19V8SpeechGrammarList29IndexedPropertyGetterCallbackEjRKN2v820PropertyCallbackInfoINS1_5ValueEEE, void (i32, %"class.v8::PropertyCallbackInfo"*)** %11, align 8
  %12 = getelementptr inbounds %"struct.v8::IndexedPropertyHandlerConfiguration", %"struct.v8::IndexedPropertyHandlerConfiguration"* %6, i64 0, i32 1
  store void (i32, %"class.v8::Value"*, %"class.v8::PropertyCallbackInfo"*)* @_ZN5blink19V8SpeechGrammarList29IndexedPropertySetterCallbackEjN2v85LocalINS1_5ValueEEERKNS1_20PropertyCallbackInfoIS3_EE, void (i32, %"class.v8::Value"*, %"class.v8::PropertyCallbackInfo"*)** %12, align 8
  %13 = getelementptr inbounds %"struct.v8::IndexedPropertyHandlerConfiguration", %"struct.v8::IndexedPropertyHandlerConfiguration"* %6, i64 0, i32 2
  store void (i32, %"class.v8::PropertyCallbackInfo.205"*)* null, void (i32, %"class.v8::PropertyCallbackInfo.205"*)** %13, align 8
  %14 = getelementptr inbounds %"struct.v8::IndexedPropertyHandlerConfiguration", %"struct.v8::IndexedPropertyHandlerConfiguration"* %6, i64 0, i32 3
  store void (i32, %"class.v8::PropertyCallbackInfo.200"*)* @_ZN5blink19V8SpeechGrammarList30IndexedPropertyDeleterCallbackEjRKN2v820PropertyCallbackInfoINS1_7BooleanEEE, void (i32, %"class.v8::PropertyCallbackInfo.200"*)** %14, align 8
  %15 = getelementptr inbounds %"struct.v8::IndexedPropertyHandlerConfiguration", %"struct.v8::IndexedPropertyHandlerConfiguration"* %6, i64 0, i32 4
  store void (%"class.v8::PropertyCallbackInfo.201"*)* @_ZN5blink19V8SpeechGrammarList33IndexedPropertyEnumeratorCallbackERKN2v820PropertyCallbackInfoINS1_5ArrayEEE, void (%"class.v8::PropertyCallbackInfo.201"*)** %15, align 8
  %16 = getelementptr inbounds %"struct.v8::IndexedPropertyHandlerConfiguration", %"struct.v8::IndexedPropertyHandlerConfiguration"* %6, i64 0, i32 5
  store void (i32, %"class.v8::PropertyDescriptor"*, %"class.v8::PropertyCallbackInfo"*)* @_ZN5blink19V8SpeechGrammarList30IndexedPropertyDefinerCallbackEjRKN2v818PropertyDescriptorERKNS1_20PropertyCallbackInfoINS1_5ValueEEE, void (i32, %"class.v8::PropertyDescriptor"*, %"class.v8::PropertyCallbackInfo"*)** %16, align 8
  %17 = getelementptr inbounds %"struct.v8::IndexedPropertyHandlerConfiguration", %"struct.v8::IndexedPropertyHandlerConfiguration"* %6, i64 0, i32 6
  store void (i32, %"class.v8::PropertyCallbackInfo"*)* @_ZN5blink19V8SpeechGrammarList33IndexedPropertyDescriptorCallbackEjRKN2v820PropertyCallbackInfoINS1_5ValueEEE, void (i32, %"class.v8::PropertyCallbackInfo"*)** %17, align 8
  %18 = getelementptr inbounds %"struct.v8::IndexedPropertyHandlerConfiguration", %"struct.v8::IndexedPropertyHandlerConfiguration"* %6, i64 0, i32 7, i32 0
  store %"class.v8::Value"* null, %"class.v8::Value"** %18, align 8
  %19 = getelementptr inbounds %"struct.v8::IndexedPropertyHandlerConfiguration", %"struct.v8::IndexedPropertyHandlerConfiguration"* %6, i64 0, i32 8
  store i32 0, i32* %19, align 8
  call void @_ZN2v814ObjectTemplate10SetHandlerERKNS_35IndexedPropertyHandlerConfigurationE(%"class.v8::ObjectTemplate"* %8, %"struct.v8::IndexedPropertyHandlerConfiguration"* nonnull dereferenceable(72) %6) #6
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %10) #6
  %20 = bitcast %"class.v8::ObjectTemplate"* %9 to %"class.v8::Template"*
  %21 = call %"class.v8::Symbol"* @_ZN2v86Symbol11GetIteratorEPNS_7IsolateE(%"class.v8::Isolate"* %0) #6
  %22 = bitcast %"class.v8::Symbol"* %21 to %"class.v8::Name"*
  call void @_ZN2v88Template24SetIntrinsicDataPropertyENS_5LocalINS_4NameEEENS_9IntrinsicENS_17PropertyAttributeE(%"class.v8::Template"* %20, %"class.v8::Name"* %22, i32 3, i32 2) #6
  %23 = bitcast %"class.v8::ObjectTemplate"* %8 to %"class.v8::Template"*
  %24 = bitcast %"class.base::span"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24)
  %25 = bitcast %"class.base::span.209"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25)
  %26 = call %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %0, %"class.v8::FunctionTemplate"* %7) #6
  %27 = getelementptr inbounds %"class.base::span", %"class.base::span"* %4, i64 0, i32 0, i32 0
  store i64 1, i64* %27, align 8
  %28 = getelementptr inbounds %"class.base::span", %"class.base::span"* %4, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"* bitcast ([1 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }]* @_ZZN5blink19V8SpeechGrammarList30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kAttributeTable to %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"*), %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"** %28, align 8
  call void @_ZN5blink8bindings18IDLMemberInstaller17InstallAttributesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15AttributeConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %23, %"class.v8::Template"* %20, %"class.v8::Template"* %2, %"class.v8::Signature"* %26, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %4) #6
  %29 = getelementptr inbounds %"class.base::span.209", %"class.base::span.209"* %5, i64 0, i32 0, i32 0
  store i64 3, i64* %29, align 8
  %30 = getelementptr inbounds %"class.base::span.209", %"class.base::span.209"* %5, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* bitcast ([3 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }]* @_ZZN5blink19V8SpeechGrammarList30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable to %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"*), %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"** %30, align 8
  call void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %23, %"class.v8::Template"* %20, %"class.v8::Template"* %2, %"class.v8::Signature"* %26, %"class.base::span.209"* nonnull byval(%"class.base::span.209") align 8 %5) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19V8SpeechGrammarList33InstallContextDependentPropertiesEN2v85LocalINS1_7ContextEEERKNS_15DOMWrapperWorldENS2_INS1_6ObjectEEES9_S9_NS2_INS1_8TemplateEEENS_8bindings21V8InterfaceBridgeBase15FeatureSelectorE(%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"* nocapture readnone dereferenceable(32), %"class.v8::Object"* nocapture readnone, %"class.v8::Object"*, %"class.v8::Object"* nocapture readnone, %"class.v8::Template"* nocapture readnone, i64) #0 align 2 {
  %8 = trunc i64 %6 to i8
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %21, label %10

10:                                               ; preds = %7
  %11 = tail call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %0) #6
  %12 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %11, i8* nonnull getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9, i64 0, i64 0), i32 1, i32 11) #6
  %13 = icmp eq %"class.v8::String"* %12, null
  br i1 %13, label %14, label %15, !prof !2

14:                                               ; preds = %10
  tail call void @_ZN2v82V812ToLocalEmptyEv() #6
  br label %15

15:                                               ; preds = %10, %14
  %16 = bitcast %"class.v8::String"* %12 to %"class.v8::Value"*
  %17 = tail call i16 @_ZN2v86Object6DeleteENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* %3, %"class.v8::Context"* %0, %"class.v8::Value"* %16) #6
  %18 = trunc i16 %17 to i8
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %21, !prof !2

20:                                               ; preds = %15
  tail call void @_ZN2v82V817FromJustIsNothingEv() #6
  br label %21

21:                                               ; preds = %7, %20, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19V8SpeechGrammarList29IndexedPropertyGetterCallbackEjRKN2v820PropertyCallbackInfoINS1_5ValueEEE(i32, %"class.v8::PropertyCallbackInfo"* nocapture readonly dereferenceable(8)) #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::PropertyCallbackInfo", %"class.v8::PropertyCallbackInfo"* %1, i64 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds i64, i64* %4, i64 1
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, -1
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = and i64 %6, -4294967296
  %11 = zext i32 %9 to i64
  %12 = or i64 %10, %11
  %13 = add i64 %12, 7
  %14 = inttoptr i64 %13 to i16*
  %15 = load i16, i16* %14, align 2
  switch i16 %15, label %20 [
    i16 1057, label %16
    i16 1056, label %16
    i16 1040, label %16
  ]

16:                                               ; preds = %2, %2, %2
  %17 = add i64 %6, 19
  %18 = inttoptr i64 %17 to i8**
  %19 = load i8*, i8** %18, align 1
  br label %23

20:                                               ; preds = %2
  %21 = bitcast i64* %5 to %"class.v8::Object"*
  %22 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %21, i32 1) #6
  br label %23

23:                                               ; preds = %16, %20
  %24 = phi i8* [ %19, %16 ], [ %22, %20 ]
  %25 = getelementptr inbounds i8, i8* %24, i64 28
  %26 = bitcast i8* %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = icmp ugt i32 %27, %0
  br i1 %28, label %29, label %64

29:                                               ; preds = %23
  %30 = bitcast i8* %24 to %"class.blink::SpeechGrammarList"*
  %31 = tail call %"class.blink::SpeechGrammar"* @_ZNK5blink17SpeechGrammarList4itemEj(%"class.blink::SpeechGrammarList"* %30, i32 %0) #6
  %32 = getelementptr inbounds %"class.blink::SpeechGrammar", %"class.blink::SpeechGrammar"* %31, i64 0, i32 0
  %33 = icmp eq %"class.blink::SpeechGrammar"* %31, null
  %34 = load i64*, i64** %3, align 8
  %35 = getelementptr inbounds i64, i64* %34, i64 4
  br i1 %33, label %36, label %42, !prof !2

36:                                               ; preds = %29
  %37 = getelementptr inbounds i64, i64* %34, i64 2
  %38 = load i64, i64* %37, align 8
  %39 = add i64 %38, 176
  %40 = inttoptr i64 %39 to i64*
  %41 = load i64, i64* %40, align 8
  store i64 %41, i64* %35, align 8
  br label %64

42:                                               ; preds = %29
  %43 = bitcast i8* %24 to %"class.blink::ScriptWrappable"*
  %44 = getelementptr inbounds i64, i64* %34, i64 1
  %45 = bitcast i64* %44 to %"class.v8::Object"*
  %46 = tail call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %35, %"class.blink::ScriptWrappable"* nonnull %32, %"class.v8::Object"* %45, %"class.blink::ScriptWrappable"* %43) #6
  br i1 %46, label %64, label %47

47:                                               ; preds = %42
  %48 = load i64*, i64** %3, align 8
  %49 = getelementptr inbounds i64, i64* %48, i64 1
  %50 = bitcast i64* %49 to %"class.v8::Object"*
  %51 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %50) #6
  %52 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %51) #6
  %53 = bitcast %"class.blink::SpeechGrammar"* %31 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %54 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %53, align 8
  %55 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %54, i64 7
  %56 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %55, align 8
  %57 = tail call %"class.v8::Value"* %56(%"class.blink::ScriptWrappable"* nonnull %32, %"class.blink::ScriptState"* %52) #6
  %58 = icmp eq %"class.v8::Value"* %57, null
  br i1 %58, label %64, label %59

59:                                               ; preds = %47
  %60 = load i64*, i64** %3, align 8
  %61 = getelementptr inbounds i64, i64* %60, i64 4
  %62 = bitcast %"class.v8::Value"* %57 to i64*
  %63 = load i64, i64* %62, align 8
  store i64 %63, i64* %61, align 8
  br label %64

64:                                               ; preds = %59, %47, %42, %36, %23
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.blink::SpeechGrammar"* @_ZNK5blink17SpeechGrammarList4itemEj(%"class.blink::SpeechGrammarList"*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19V8SpeechGrammarList29IndexedPropertySetterCallbackEjN2v85LocalINS1_5ValueEEERKNS1_20PropertyCallbackInfoIS3_EE(i32, %"class.v8::Value"* nocapture readnone, %"class.v8::PropertyCallbackInfo"* nocapture readonly dereferenceable(8)) #0 align 2 {
  %4 = alloca %"class.blink::ExceptionState", align 8
  %5 = getelementptr inbounds %"class.v8::PropertyCallbackInfo", %"class.v8::PropertyCallbackInfo"* %2, i64 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = getelementptr inbounds i64, i64* %6, i64 4
  %8 = getelementptr inbounds i64, i64* %6, i64 2
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %9, 176
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11, align 8
  store i64 %12, i64* %7, align 8
  %13 = load i64*, i64** %5, align 8
  %14 = load i64, i64* %13, align 8
  switch i64 %14, label %22 [
    i64 4, label %15
    i64 2, label %67
  ]

15:                                               ; preds = %3
  %16 = getelementptr inbounds i64, i64* %13, i64 2
  %17 = bitcast i64* %16 to %"class.v8::internal::Isolate"**
  %18 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %17, align 8
  %19 = tail call zeroext i1 @_ZN2v88internal18ShouldThrowOnErrorEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %18) #6
  br i1 %19, label %20, label %67

20:                                               ; preds = %15
  %21 = load i64*, i64** %5, align 8
  br label %22

22:                                               ; preds = %20, %3
  %23 = phi i64* [ %21, %20 ], [ %13, %3 ]
  %24 = bitcast %"class.blink::ExceptionState"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %24) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 72, i1 false)
  %25 = getelementptr inbounds i64, i64* %23, i64 2
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %27, align 8
  %28 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 0
  store i16 8, i16* %28, align 8
  %29 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 1
  store i16 0, i16* %29, align 2
  %30 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 2
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8** %30, align 8
  %31 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 3
  %32 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 3
  %33 = bitcast i8** %31 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 16, i1 false) #6
  %34 = bitcast %"class.v8::Isolate"** %32 to i64*
  store i64 %26, i64* %34, align 8
  %35 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 4
  store i32 0, i32* %35, align 8
  %36 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 5, i32 0, i32 0
  %37 = bitcast %"class.WTF::StringImpl"** %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 16, i1 false) #6
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* nonnull %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1, i64 0, i64 0)) #6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %27, align 8
  %38 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %39 = load i64*, i64** %38, align 8
  %40 = icmp eq i64* %39, null
  br i1 %40, label %50, label %41

41:                                               ; preds = %22
  %42 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %32, align 8
  %43 = bitcast %"class.v8::Isolate"* %42 to %"class.v8::internal::Isolate"*
  %44 = load i64, i64* %39, align 8
  %45 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %43, i64 %44) #6
  %46 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %42) #6
  br i1 %46, label %50, label %47

47:                                               ; preds = %41
  %48 = bitcast i64* %45 to %"class.v8::Value"*
  %49 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %42, %"class.v8::Value"* %48) #6
  br label %50

50:                                               ; preds = %47, %41, %22
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %66, label %53

53:                                               ; preds = %50
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %53
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %53
  %63 = phi i32 [ %61, %60 ], [ %59, %53 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %51) #6
  br label %66

66:                                               ; preds = %50, %62, %65
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %24) #6
  br label %67

67:                                               ; preds = %3, %66, %15
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19V8SpeechGrammarList30IndexedPropertyDeleterCallbackEjRKN2v820PropertyCallbackInfoINS1_7BooleanEEE(i32, %"class.v8::PropertyCallbackInfo.200"* nocapture readonly dereferenceable(8)) #0 align 2 {
  %3 = alloca %"class.blink::ExceptionState", align 8
  %4 = getelementptr inbounds %"class.v8::PropertyCallbackInfo.200", %"class.v8::PropertyCallbackInfo.200"* %1, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -1
  %9 = inttoptr i64 %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = and i64 %7, -4294967296
  %12 = zext i32 %10 to i64
  %13 = or i64 %11, %12
  %14 = add i64 %13, 7
  %15 = inttoptr i64 %14 to i16*
  %16 = load i16, i16* %15, align 2
  switch i16 %16, label %21 [
    i16 1057, label %17
    i16 1056, label %17
    i16 1040, label %17
  ]

17:                                               ; preds = %2, %2, %2
  %18 = add i64 %7, 19
  %19 = inttoptr i64 %18 to i8**
  %20 = load i8*, i8** %19, align 1
  br label %25

21:                                               ; preds = %2
  %22 = bitcast i64* %6 to %"class.v8::Object"*
  %23 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %22, i32 1) #6
  %24 = load i64*, i64** %4, align 8
  br label %25

25:                                               ; preds = %17, %21
  %26 = phi i64* [ %5, %17 ], [ %24, %21 ]
  %27 = phi i8* [ %20, %17 ], [ %23, %21 ]
  %28 = getelementptr inbounds i8, i8* %27, i64 28
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = icmp ugt i32 %30, %0
  %32 = getelementptr inbounds i64, i64* %26, i64 4
  %33 = getelementptr inbounds i64, i64* %26, i64 2
  %34 = load i64, i64* %33, align 8
  %35 = select i1 %31, i64 192, i64 184
  %36 = add i64 %34, %35
  %37 = inttoptr i64 %36 to i64*
  %38 = load i64, i64* %37, align 8
  store i64 %38, i64* %32, align 8
  br i1 %31, label %39, label %94

39:                                               ; preds = %25
  %40 = load i64*, i64** %4, align 8
  %41 = load i64, i64* %40, align 8
  switch i64 %41, label %49 [
    i64 4, label %42
    i64 2, label %94
  ]

42:                                               ; preds = %39
  %43 = getelementptr inbounds i64, i64* %40, i64 2
  %44 = bitcast i64* %43 to %"class.v8::internal::Isolate"**
  %45 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %44, align 8
  %46 = tail call zeroext i1 @_ZN2v88internal18ShouldThrowOnErrorEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %45) #6
  br i1 %46, label %47, label %94

47:                                               ; preds = %42
  %48 = load i64*, i64** %4, align 8
  br label %49

49:                                               ; preds = %47, %39
  %50 = phi i64* [ %48, %47 ], [ %40, %39 ]
  %51 = bitcast %"class.blink::ExceptionState"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %51) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 -86, i64 72, i1 false)
  %52 = getelementptr inbounds i64, i64* %50, i64 2
  %53 = load i64, i64* %52, align 8
  %54 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %54, align 8
  %55 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 1, i32 0
  store i16 10, i16* %55, align 8
  %56 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 1, i32 1
  store i16 0, i16* %56, align 2
  %57 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 1, i32 2
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8** %57, align 8
  %58 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 1, i32 3
  %59 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 3
  %60 = bitcast i8** %58 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #6
  %61 = bitcast %"class.v8::Isolate"** %59 to i64*
  store i64 %53, i64* %61, align 8
  %62 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  store i32 0, i32* %62, align 8
  %63 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 5, i32 0, i32 0
  %64 = bitcast %"class.WTF::StringImpl"** %63 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 16, i1 false) #6
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* nonnull %3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.2, i64 0, i64 0)) #6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %54, align 8
  %65 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %66 = load i64*, i64** %65, align 8
  %67 = icmp eq i64* %66, null
  br i1 %67, label %77, label %68

68:                                               ; preds = %49
  %69 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %59, align 8
  %70 = bitcast %"class.v8::Isolate"* %69 to %"class.v8::internal::Isolate"*
  %71 = load i64, i64* %66, align 8
  %72 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %70, i64 %71) #6
  %73 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %69) #6
  br i1 %73, label %77, label %74

74:                                               ; preds = %68
  %75 = bitcast i64* %72 to %"class.v8::Value"*
  %76 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %69, %"class.v8::Value"* %75) #6
  br label %77

77:                                               ; preds = %74, %68, %49
  %78 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %79 = icmp eq %"class.WTF::StringImpl"* %78, null
  br i1 %79, label %93, label %80

80:                                               ; preds = %77
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  br i1 %84, label %87, label %89

87:                                               ; preds = %80
  %88 = add i32 %86, -1
  store i32 %88, i32* %85, align 4
  br label %89

89:                                               ; preds = %87, %80
  %90 = phi i32 [ %88, %87 ], [ %86, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %78) #6
  br label %93

93:                                               ; preds = %77, %89, %92
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %51) #6
  br label %94

94:                                               ; preds = %39, %93, %42, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19V8SpeechGrammarList30IndexedPropertyDefinerCallbackEjRKN2v818PropertyDescriptorERKNS1_20PropertyCallbackInfoINS1_5ValueEEE(i32, %"class.v8::PropertyDescriptor"* dereferenceable(8), %"class.v8::PropertyCallbackInfo"* nocapture readonly dereferenceable(8)) #0 align 2 {
  %4 = alloca %"class.blink::ExceptionState", align 8
  %5 = alloca %"class.blink::ExceptionState", align 8
  %6 = tail call zeroext i1 @_ZNK2v818PropertyDescriptor7has_getEv(%"class.v8::PropertyDescriptor"* %1) #6
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  %8 = tail call zeroext i1 @_ZNK2v818PropertyDescriptor7has_setEv(%"class.v8::PropertyDescriptor"* %1) #6
  br i1 %8, label %9, label %72

9:                                                ; preds = %7, %3
  %10 = getelementptr inbounds %"class.v8::PropertyCallbackInfo", %"class.v8::PropertyCallbackInfo"* %2, i64 0, i32 0
  %11 = load i64*, i64** %10, align 8
  %12 = getelementptr inbounds i64, i64* %11, i64 4
  %13 = getelementptr inbounds i64, i64* %11, i64 2
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, 176
  %16 = inttoptr i64 %15 to i64*
  %17 = load i64, i64* %16, align 8
  store i64 %17, i64* %12, align 8
  %18 = load i64*, i64** %10, align 8
  %19 = load i64, i64* %18, align 8
  switch i64 %19, label %27 [
    i64 4, label %20
    i64 2, label %135
  ]

20:                                               ; preds = %9
  %21 = getelementptr inbounds i64, i64* %18, i64 2
  %22 = bitcast i64* %21 to %"class.v8::internal::Isolate"**
  %23 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %22, align 8
  %24 = tail call zeroext i1 @_ZN2v88internal18ShouldThrowOnErrorEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %23) #6
  br i1 %24, label %25, label %135

25:                                               ; preds = %20
  %26 = load i64*, i64** %10, align 8
  br label %27

27:                                               ; preds = %25, %9
  %28 = phi i64* [ %26, %25 ], [ %18, %9 ]
  %29 = bitcast %"class.blink::ExceptionState"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %29) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 72, i1 false)
  %30 = getelementptr inbounds i64, i64* %28, i64 2
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %33 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 0
  store i16 8, i16* %33, align 8
  %34 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 1
  store i16 0, i16* %34, align 2
  %35 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 2
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8** %35, align 8
  %36 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 3
  %37 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 3
  %38 = bitcast i8** %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 16, i1 false) #6
  %39 = bitcast %"class.v8::Isolate"** %37 to i64*
  store i64 %31, i64* %39, align 8
  %40 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 4
  store i32 0, i32* %40, align 8
  %41 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 5, i32 0, i32 0
  %42 = bitcast %"class.WTF::StringImpl"** %41 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 16, i1 false) #6
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* nonnull %4, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3, i64 0, i64 0)) #6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %43 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %44 = load i64*, i64** %43, align 8
  %45 = icmp eq i64* %44, null
  br i1 %45, label %55, label %46

46:                                               ; preds = %27
  %47 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %37, align 8
  %48 = bitcast %"class.v8::Isolate"* %47 to %"class.v8::internal::Isolate"*
  %49 = load i64, i64* %44, align 8
  %50 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %48, i64 %49) #6
  %51 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %47) #6
  br i1 %51, label %55, label %52

52:                                               ; preds = %46
  %53 = bitcast i64* %50 to %"class.v8::Value"*
  %54 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %47, %"class.v8::Value"* %53) #6
  br label %55

55:                                               ; preds = %52, %46, %27
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %71, label %58

58:                                               ; preds = %55
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  br i1 %62, label %65, label %67

65:                                               ; preds = %58
  %66 = add i32 %64, -1
  store i32 %66, i32* %63, align 4
  br label %67

67:                                               ; preds = %65, %58
  %68 = phi i32 [ %66, %65 ], [ %64, %58 ]
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %67
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %56) #6
  br label %71

71:                                               ; preds = %55, %67, %70
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %29) #6
  br label %135

72:                                               ; preds = %7
  %73 = getelementptr inbounds %"class.v8::PropertyCallbackInfo", %"class.v8::PropertyCallbackInfo"* %2, i64 0, i32 0
  %74 = load i64*, i64** %73, align 8
  %75 = getelementptr inbounds i64, i64* %74, i64 4
  %76 = getelementptr inbounds i64, i64* %74, i64 2
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, 176
  %79 = inttoptr i64 %78 to i64*
  %80 = load i64, i64* %79, align 8
  store i64 %80, i64* %75, align 8
  %81 = load i64*, i64** %73, align 8
  %82 = load i64, i64* %81, align 8
  switch i64 %82, label %90 [
    i64 4, label %83
    i64 2, label %135
  ]

83:                                               ; preds = %72
  %84 = getelementptr inbounds i64, i64* %81, i64 2
  %85 = bitcast i64* %84 to %"class.v8::internal::Isolate"**
  %86 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %85, align 8
  %87 = tail call zeroext i1 @_ZN2v88internal18ShouldThrowOnErrorEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %86) #6
  br i1 %87, label %88, label %135

88:                                               ; preds = %83
  %89 = load i64*, i64** %73, align 8
  br label %90

90:                                               ; preds = %88, %72
  %91 = phi i64* [ %89, %88 ], [ %81, %72 ]
  %92 = bitcast %"class.blink::ExceptionState"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %92) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %92, i8 -86, i64 72, i1 false)
  %93 = getelementptr inbounds i64, i64* %91, i64 2
  %94 = load i64, i64* %93, align 8
  %95 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %95, align 8
  %96 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 0
  store i16 8, i16* %96, align 8
  %97 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 1
  store i16 0, i16* %97, align 2
  %98 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 2
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8** %98, align 8
  %99 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 1, i32 3
  %100 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 3
  %101 = bitcast i8** %99 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %101, i8 0, i64 16, i1 false) #6
  %102 = bitcast %"class.v8::Isolate"** %100 to i64*
  store i64 %94, i64* %102, align 8
  %103 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 4
  store i32 0, i32* %103, align 8
  %104 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 5, i32 0, i32 0
  %105 = bitcast %"class.WTF::StringImpl"** %104 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %105, i8 0, i64 16, i1 false) #6
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* nonnull %5, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.4, i64 0, i64 0)) #6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %95, align 8
  %106 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %107 = load i64*, i64** %106, align 8
  %108 = icmp eq i64* %107, null
  br i1 %108, label %118, label %109

109:                                              ; preds = %90
  %110 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %100, align 8
  %111 = bitcast %"class.v8::Isolate"* %110 to %"class.v8::internal::Isolate"*
  %112 = load i64, i64* %107, align 8
  %113 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %111, i64 %112) #6
  %114 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %110) #6
  br i1 %114, label %118, label %115

115:                                              ; preds = %109
  %116 = bitcast i64* %113 to %"class.v8::Value"*
  %117 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %110, %"class.v8::Value"* %116) #6
  br label %118

118:                                              ; preds = %115, %109, %90
  %119 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %120 = icmp eq %"class.WTF::StringImpl"* %119, null
  br i1 %120, label %134, label %121

121:                                              ; preds = %118
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = load atomic i32, i32* %122 monotonic, align 4
  %124 = and i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 0
  %127 = load i32, i32* %126, align 4
  br i1 %125, label %128, label %130

128:                                              ; preds = %121
  %129 = add i32 %127, -1
  store i32 %129, i32* %126, align 4
  br label %130

130:                                              ; preds = %128, %121
  %131 = phi i32 [ %129, %128 ], [ %127, %121 ]
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %134

133:                                              ; preds = %130
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %119) #6
  br label %134

134:                                              ; preds = %118, %130, %133
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %92) #6
  br label %135

135:                                              ; preds = %72, %9, %20, %71, %134, %83
  ret void
}

declare zeroext i1 @_ZNK2v818PropertyDescriptor7has_getEv(%"class.v8::PropertyDescriptor"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v818PropertyDescriptor7has_setEv(%"class.v8::PropertyDescriptor"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19V8SpeechGrammarList33IndexedPropertyDescriptorCallbackEjRKN2v820PropertyCallbackInfoINS1_5ValueEEE(i32, %"class.v8::PropertyCallbackInfo"* nocapture readonly dereferenceable(8)) #0 align 2 {
  %3 = alloca %"class.v8::PropertyDescriptor", align 8
  tail call void @_ZN5blink19V8SpeechGrammarList29IndexedPropertyGetterCallbackEjRKN2v820PropertyCallbackInfoINS1_5ValueEEE(i32 %0, %"class.v8::PropertyCallbackInfo"* dereferenceable(8) %1)
  %4 = getelementptr inbounds %"class.v8::PropertyCallbackInfo", %"class.v8::PropertyCallbackInfo"* %1, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 4
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i64, i64* %5, i64 2
  %9 = bitcast i64* %8 to %"class.v8::Isolate"**
  %10 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %9, align 8
  %11 = ptrtoint %"class.v8::Isolate"* %10 to i64
  %12 = add i64 %11, 168
  %13 = inttoptr i64 %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %7, %14
  br i1 %15, label %16, label %19

16:                                               ; preds = %2
  %17 = add i64 %11, 160
  %18 = inttoptr i64 %17 to %"class.v8::Value"*
  br label %25

19:                                               ; preds = %2
  %20 = icmp eq i64* %6, null
  br i1 %20, label %25, label %21

21:                                               ; preds = %19
  %22 = bitcast %"class.v8::Isolate"* %10 to %"class.v8::internal::Isolate"*
  %23 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %22, i64 %7) #6
  %24 = bitcast i64* %23 to %"class.v8::Value"*
  br label %25

25:                                               ; preds = %16, %19, %21
  %26 = phi %"class.v8::Value"* [ %18, %16 ], [ %24, %21 ], [ null, %19 ]
  %27 = bitcast %"class.v8::Value"* %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = and i64 %28, 3
  %30 = icmp eq i64 %29, 1
  br i1 %30, label %31, label %48

31:                                               ; preds = %25
  %32 = add i64 %28, -1
  %33 = inttoptr i64 %32 to i32*
  %34 = load i32, i32* %33, align 4
  %35 = and i64 %28, -4294967296
  %36 = zext i32 %34 to i64
  %37 = or i64 %35, %36
  %38 = add i64 %37, 7
  %39 = inttoptr i64 %38 to i16*
  %40 = load i16, i16* %39, align 2
  %41 = icmp eq i16 %40, 67
  br i1 %41, label %42, label %48

42:                                               ; preds = %31
  %43 = add i64 %28, 23
  %44 = inttoptr i64 %43 to i32*
  %45 = load i32, i32* %44, align 4
  %46 = and i32 %45, -2
  %47 = icmp eq i32 %46, 10
  br i1 %47, label %62, label %48

48:                                               ; preds = %31, %25, %42
  %49 = bitcast %"class.v8::PropertyDescriptor"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #6
  %50 = getelementptr inbounds %"class.v8::PropertyDescriptor", %"class.v8::PropertyDescriptor"* %3, i64 0, i32 0
  store %"struct.v8::PropertyDescriptor::PrivateData"* inttoptr (i64 -6148914691236517206 to %"struct.v8::PropertyDescriptor::PrivateData"*), %"struct.v8::PropertyDescriptor::PrivateData"** %50, align 8
  call void @_ZN2v818PropertyDescriptorC1ENS_5LocalINS_5ValueEEEb(%"class.v8::PropertyDescriptor"* nonnull %3, %"class.v8::Value"* %26, i1 zeroext false) #6
  call void @_ZN2v818PropertyDescriptor14set_enumerableEb(%"class.v8::PropertyDescriptor"* nonnull %3, i1 zeroext true) #6
  call void @_ZN2v818PropertyDescriptor16set_configurableEb(%"class.v8::PropertyDescriptor"* nonnull %3, i1 zeroext true) #6
  %51 = load i64*, i64** %4, align 8
  %52 = getelementptr inbounds i64, i64* %51, i64 4
  %53 = getelementptr inbounds i64, i64* %51, i64 2
  %54 = bitcast i64* %53 to %"class.v8::Isolate"**
  %55 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %54, align 8
  %56 = call %"class.v8::Object"* @_ZN5blink8bindings30CreatePropertyDescriptorObjectEPN2v87IsolateERKNS1_18PropertyDescriptorE(%"class.v8::Isolate"* %55, %"class.v8::PropertyDescriptor"* nonnull dereferenceable(8) %3) #6
  %57 = icmp eq %"class.v8::Object"* %56, null
  %58 = bitcast %"class.v8::Object"* %56 to i64*
  %59 = getelementptr inbounds i64, i64* %51, i64 3
  %60 = select i1 %57, i64* %59, i64* %58, !prof !2
  %61 = load i64, i64* %60, align 8
  store i64 %61, i64* %52, align 8
  call void @_ZN2v818PropertyDescriptorD1Ev(%"class.v8::PropertyDescriptor"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #6
  br label %62

62:                                               ; preds = %42, %48
  ret void
}

declare void @_ZN2v818PropertyDescriptorC1ENS_5LocalINS_5ValueEEEb(%"class.v8::PropertyDescriptor"*, %"class.v8::Value"*, i1 zeroext) unnamed_addr #2

declare void @_ZN2v818PropertyDescriptor14set_enumerableEb(%"class.v8::PropertyDescriptor"*, i1 zeroext) local_unnamed_addr #2

declare void @_ZN2v818PropertyDescriptor16set_configurableEb(%"class.v8::PropertyDescriptor"*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2v818PropertyDescriptorD1Ev(%"class.v8::PropertyDescriptor"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19V8SpeechGrammarList33IndexedPropertyEnumeratorCallbackERKN2v820PropertyCallbackInfoINS1_5ArrayEEE(%"class.v8::PropertyCallbackInfo.201"* nocapture readonly dereferenceable(8)) #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::PropertyCallbackInfo.201", %"class.v8::PropertyCallbackInfo.201"* %0, i64 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %23

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #6
  %22 = load i64*, i64** %2, align 8
  br label %23

23:                                               ; preds = %15, %19
  %24 = phi i64* [ %3, %15 ], [ %22, %19 ]
  %25 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %26 = getelementptr inbounds i64, i64* %24, i64 2
  %27 = bitcast i64* %26 to %"class.v8::Isolate"**
  %28 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %27, align 8
  %29 = getelementptr inbounds i8, i8* %25, i64 28
  %30 = bitcast i8* %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = tail call %"class.v8::Array"* @_ZN5blink8bindings26EnumerateIndexedPropertiesEPN2v87IsolateEj(%"class.v8::Isolate"* %28, i32 %31) #6
  %33 = load i64*, i64** %2, align 8
  %34 = getelementptr inbounds i64, i64* %33, i64 4
  %35 = icmp eq %"class.v8::Array"* %32, null
  %36 = bitcast %"class.v8::Array"* %32 to i64*
  %37 = getelementptr inbounds i64, i64* %33, i64 3
  %38 = select i1 %35, i64* %37, i64* %36, !prof !2
  %39 = load i64, i64* %38, align 8
  store i64 %39, i64* %34, align 8
  ret void
}

declare %"class.v8::Array"* @_ZN5blink8bindings26EnumerateIndexedPropertiesEPN2v87IsolateEj(%"class.v8::Isolate"*, i32) local_unnamed_addr #2

declare %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate16InstanceTemplateEv(%"class.v8::FunctionTemplate"*) local_unnamed_addr #2

declare %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate17PrototypeTemplateEv(%"class.v8::FunctionTemplate"*) local_unnamed_addr #2

declare void @_ZN5blink8bindings25SetupIDLInterfaceTemplateEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_14ObjectTemplateEEES9_NS7_INS1_16FunctionTemplateEEESB_(%"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::ObjectTemplate"*, %"class.v8::ObjectTemplate"*, %"class.v8::FunctionTemplate"*, %"class.v8::FunctionTemplate"*) local_unnamed_addr #2

declare void @_ZN2v816FunctionTemplate14SetCallHandlerEPFvRKNS_20FunctionCallbackInfoINS_5ValueEEEENS_5LocalIS2_EENS_14SideEffectTypeERKNS_10MemorySpanIKNS_9CFunctionEEE(%"class.v8::FunctionTemplate"*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::Value"*, i32, %"class.v8::MemorySpan"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122v8_speech_grammar_list19ConstructorCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = getelementptr inbounds i64, i64* %5, i64 5
  %10 = load i64, i64* %9, align 8
  %11 = and i64 %10, 3
  %12 = icmp eq i64 %11, 1
  br i1 %12, label %13, label %90

13:                                               ; preds = %1
  %14 = add i64 %10, -1
  %15 = inttoptr i64 %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = and i64 %10, -4294967296
  %18 = zext i32 %16 to i64
  %19 = or i64 %17, %18
  %20 = add i64 %19, 7
  %21 = inttoptr i64 %20 to i16*
  %22 = load i16, i16* %21, align 2
  %23 = icmp eq i16 %22, 67
  br i1 %23, label %24, label %90

24:                                               ; preds = %13
  %25 = add i64 %10, 23
  %26 = inttoptr i64 %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = and i32 %27, -2
  %29 = icmp eq i32 %28, 10
  br i1 %29, label %30, label %90

30:                                               ; preds = %24
  %31 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %31) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 56, i1 false)
  %32 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %33 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 5, i16* %33, align 8
  %34 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %34, align 2
  %35 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8** %35, align 8
  %36 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 3
  %37 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  %38 = bitcast i8** %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 16, i1 false) #6
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %39, align 8
  %40 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %41 = bitcast %"class.WTF::StringImpl"** %40 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 16, i1 false) #6
  %42 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #6
  %43 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages27ConstructorCalledAsFunctionEv() #6
  %44 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %43, %"class.WTF::StringImpl"** %44, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #6
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %60, label %47

47:                                               ; preds = %30
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  br i1 %51, label %54, label %56

54:                                               ; preds = %47
  %55 = add i32 %53, -1
  store i32 %55, i32* %52, align 4
  br label %56

56:                                               ; preds = %54, %47
  %57 = phi i32 [ %55, %54 ], [ %53, %47 ]
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %56
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %45) #6
  br label %60

60:                                               ; preds = %30, %56, %59
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %61 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %62 = load i64*, i64** %61, align 8
  %63 = icmp eq i64* %62, null
  br i1 %63, label %73, label %64

64:                                               ; preds = %60
  %65 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %37, align 8
  %66 = bitcast %"class.v8::Isolate"* %65 to %"class.v8::internal::Isolate"*
  %67 = load i64, i64* %62, align 8
  %68 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %66, i64 %67) #6
  %69 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %65) #6
  br i1 %69, label %73, label %70

70:                                               ; preds = %64
  %71 = bitcast i64* %68 to %"class.v8::Value"*
  %72 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %65, %"class.v8::Value"* %71) #6
  br label %73

73:                                               ; preds = %70, %64, %60
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %75, label %89, label %76

76:                                               ; preds = %73
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = and i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %82 = load i32, i32* %81, align 4
  br i1 %80, label %83, label %85

83:                                               ; preds = %76
  %84 = add i32 %82, -1
  store i32 %84, i32* %81, align 4
  br label %85

85:                                               ; preds = %83, %76
  %86 = phi i32 [ %84, %83 ], [ %82, %76 ]
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %89

88:                                               ; preds = %85
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %74) #6
  br label %89

89:                                               ; preds = %73, %85, %88
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %31) #6
  br label %131

90:                                               ; preds = %24, %13, %1
  %91 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %92 = load i64*, i64** %91, align 8
  %93 = getelementptr inbounds i64, i64* %92, i64 -1
  %94 = bitcast i64* %93 to %"class.v8::Object"*
  %95 = ptrtoint %"class.v8::Isolate"* %8 to i64
  %96 = add i64 %95, 8
  %97 = inttoptr i64 %96 to %"class.blink::V8PerIsolateData"**
  %98 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %97, align 8
  %99 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %98, i64 0, i32 8
  %100 = load i8, i8* %99, align 8, !range !3
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %102, label %108

102:                                              ; preds = %90
  %103 = getelementptr inbounds i64, i64* %5, i64 3
  %104 = icmp eq i64* %93, null
  %105 = getelementptr inbounds i64, i64* %5, i64 2
  %106 = select i1 %104, i64* %105, i64* %93, !prof !2
  %107 = load i64, i64* %106, align 8
  store i64 %107, i64* %103, align 8
  br label %131

108:                                              ; preds = %90
  %109 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %8) #6
  %110 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %109) #6
  %111 = icmp eq %"class.blink::ExecutionContext"* %110, null
  %112 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %110, i64 0, i32 3
  %113 = icmp eq %"class.blink::UseCounter"* %112, null
  %114 = or i1 %111, %113
  br i1 %114, label %120, label %115

115:                                              ; preds = %108
  %116 = bitcast %"class.blink::UseCounter"* %112 to void (%"class.blink::UseCounter"*, i32)***
  %117 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %116, align 8
  %118 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %117, i64 3
  %119 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %118, align 8
  tail call void %119(%"class.blink::UseCounter"* nonnull %112, i32 2988) #6
  br label %120

120:                                              ; preds = %108, %115
  %121 = tail call %"class.blink::SpeechGrammarList"* @_ZN5blink17SpeechGrammarList6CreateEv() #6
  %122 = getelementptr inbounds %"class.blink::SpeechGrammarList", %"class.blink::SpeechGrammarList"* %121, i64 0, i32 0
  %123 = tail call %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"* %122, %"class.v8::Isolate"* %8, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink19V8SpeechGrammarList18wrapper_type_info_E, %"class.v8::Object"* %94) #6
  %124 = load i64*, i64** %4, align 8
  %125 = getelementptr inbounds i64, i64* %124, i64 3
  %126 = icmp eq %"class.v8::Object"* %123, null
  %127 = bitcast %"class.v8::Object"* %123 to i64*
  %128 = getelementptr inbounds i64, i64* %124, i64 2
  %129 = select i1 %126, i64* %128, i64* %127, !prof !2
  %130 = load i64, i64* %129, align 8
  store i64 %130, i64* %125, align 8
  br label %131

131:                                              ; preds = %102, %120, %89
  ret void
}

declare void @_ZN2v816FunctionTemplate9SetLengthEi(%"class.v8::FunctionTemplate"*, i32) local_unnamed_addr #2

declare void @_ZN2v814ObjectTemplate10SetHandlerERKNS_35IndexedPropertyHandlerConfigurationE(%"class.v8::ObjectTemplate"*, %"struct.v8::IndexedPropertyHandlerConfiguration"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN2v88Template24SetIntrinsicDataPropertyENS_5LocalINS_4NameEEENS_9IntrinsicENS_17PropertyAttributeE(%"class.v8::Template"*, %"class.v8::Name"*, i32, i32) local_unnamed_addr #2

declare %"class.v8::Symbol"* @_ZN2v86Symbol11GetIteratorEPNS_7IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19V8SpeechGrammarList30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::span", align 8
  %7 = alloca %"class.base::span.209", align 8
  %8 = bitcast %"class.v8::Template"* %4 to %"class.v8::FunctionTemplate"*
  %9 = tail call %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %0, %"class.v8::FunctionTemplate"* %8) #6
  %10 = getelementptr inbounds %"class.base::span", %"class.base::span"* %6, i64 0, i32 0, i32 0
  store i64 1, i64* %10, align 8
  %11 = getelementptr inbounds %"class.base::span", %"class.base::span"* %6, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"* bitcast ([1 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }]* @_ZZN5blink19V8SpeechGrammarList30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kAttributeTable to %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"*), %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"** %11, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallAttributesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15AttributeConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %2, %"class.v8::Template"* %3, %"class.v8::Template"* %4, %"class.v8::Signature"* %9, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %6) #6
  %12 = getelementptr inbounds %"class.base::span.209", %"class.base::span.209"* %7, i64 0, i32 0, i32 0
  store i64 3, i64* %12, align 8
  %13 = getelementptr inbounds %"class.base::span.209", %"class.base::span.209"* %7, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* bitcast ([3 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }]* @_ZZN5blink19V8SpeechGrammarList30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable to %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"*), %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"** %13, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %2, %"class.v8::Template"* %3, %"class.v8::Template"* %4, %"class.v8::Signature"* %9, %"class.base::span.209"* nonnull byval(%"class.base::span.209") align 8 %7) #6
  ret void
}

declare %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"*, %"class.v8::FunctionTemplate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122v8_speech_grammar_list26LengthAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #6
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = getelementptr inbounds i8, i8* %23, i64 28
  %25 = bitcast i8* %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %28 = load i64*, i64** %27, align 8
  %29 = getelementptr inbounds i64, i64* %28, i64 3
  %30 = icmp sgt i32 %26, -1
  br i1 %30, label %31, label %48, !prof !4

31:                                               ; preds = %22
  %32 = icmp ult i32 %26, 1073741824
  br i1 %32, label %33, label %36, !prof !4

33:                                               ; preds = %31
  %34 = sext i32 %26 to i64
  %35 = shl nsw i64 %34, 1
  br label %60

36:                                               ; preds = %31
  %37 = getelementptr inbounds i64, i64* %28, i64 1
  %38 = bitcast i64* %37 to %"class.v8::Isolate"**
  %39 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %38, align 8
  %40 = tail call %"class.v8::Integer"* @_ZN2v87Integer3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %39, i32 %26) #6
  %41 = icmp eq %"class.v8::Integer"* %40, null
  br i1 %41, label %42, label %45, !prof !2

42:                                               ; preds = %36
  %43 = getelementptr inbounds i64, i64* %28, i64 2
  %44 = load i64, i64* %43, align 8
  br label %60

45:                                               ; preds = %36
  %46 = bitcast %"class.v8::Integer"* %40 to i64*
  %47 = load i64, i64* %46, align 8
  br label %60

48:                                               ; preds = %22
  %49 = getelementptr inbounds i64, i64* %28, i64 1
  %50 = bitcast i64* %49 to %"class.v8::Isolate"**
  %51 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %50, align 8
  %52 = tail call %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"* %51, i32 %26) #6
  %53 = icmp eq %"class.v8::Integer"* %52, null
  br i1 %53, label %54, label %57, !prof !2

54:                                               ; preds = %48
  %55 = getelementptr inbounds i64, i64* %28, i64 2
  %56 = load i64, i64* %55, align 8
  br label %60

57:                                               ; preds = %48
  %58 = bitcast %"class.v8::Integer"* %52 to i64*
  %59 = load i64, i64* %58, align 8
  br label %60

60:                                               ; preds = %33, %42, %45, %54, %57
  %61 = phi i64 [ %35, %33 ], [ %44, %42 ], [ %47, %45 ], [ %56, %54 ], [ %59, %57 ]
  store i64 %61, i64* %29, align 8
  ret void
}

declare void @_ZN5blink8bindings18IDLMemberInstaller17InstallAttributesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15AttributeConfigELm18446744073709551615EEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Signature"*, %"class.base::span"* byval(%"class.base::span") align 8) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122v8_speech_grammar_list30AddFromStringOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::ExceptionState", align 8
  %5 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = getelementptr inbounds i64, i64* %9, i64 1
  %11 = bitcast i64* %10 to %"class.v8::Isolate"**
  %12 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %11, align 8
  %13 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %12) #6
  %14 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %13) #6
  %15 = icmp eq %"class.blink::ExecutionContext"* %14, null
  %16 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %14, i64 0, i32 3
  %17 = icmp eq %"class.blink::UseCounter"* %16, null
  %18 = or i1 %15, %17
  br i1 %18, label %24, label %19

19:                                               ; preds = %1
  %20 = bitcast %"class.blink::UseCounter"* %16 to void (%"class.blink::UseCounter"*, i32)***
  %21 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %21, i64 3
  %23 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %22, align 8
  tail call void %23(%"class.blink::UseCounter"* nonnull %16, i32 2987) #6
  br label %24

24:                                               ; preds = %1, %19
  %25 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %26 = load i32, i32* %25, align 8
  %27 = icmp slt i32 %26, 1
  br i1 %27, label %28, label %87, !prof !2

28:                                               ; preds = %24
  %29 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %29) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 56, i1 false)
  %30 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %30, align 8
  %31 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %31, align 8
  %32 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %32, align 2
  %33 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %34 = bitcast i8** %33 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0)>, <2 x i8*>* %34, align 8
  %35 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %35, align 8
  %36 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %12, %"class.v8::Isolate"** %36, align 8
  %37 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %37, align 8
  %38 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %39 = bitcast %"class.WTF::StringImpl"** %38 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 16, i1 false) #6
  %40 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #6
  %41 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %26) #6
  %42 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %41, %"class.WTF::StringImpl"** %42, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #6
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %58, label %45

45:                                               ; preds = %28
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %54

52:                                               ; preds = %45
  %53 = add i32 %51, -1
  store i32 %53, i32* %50, align 4
  br label %54

54:                                               ; preds = %52, %45
  %55 = phi i32 [ %53, %52 ], [ %51, %45 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %43) #6
  br label %58

58:                                               ; preds = %28, %54, %57
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %30, align 8
  %59 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %60 = load i64*, i64** %59, align 8
  %61 = icmp eq i64* %60, null
  br i1 %61, label %71, label %62

62:                                               ; preds = %58
  %63 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %36, align 8
  %64 = bitcast %"class.v8::Isolate"* %63 to %"class.v8::internal::Isolate"*
  %65 = load i64, i64* %60, align 8
  %66 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %64, i64 %65) #6
  %67 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %63) #6
  br i1 %67, label %71, label %68

68:                                               ; preds = %62
  %69 = bitcast i64* %66 to %"class.v8::Value"*
  %70 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %63, %"class.v8::Value"* %69) #6
  br label %71

71:                                               ; preds = %68, %62, %58
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %353, label %74

74:                                               ; preds = %71
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  br i1 %78, label %81, label %83

81:                                               ; preds = %74
  %82 = add i32 %80, -1
  store i32 %82, i32* %79, align 4
  br label %83

83:                                               ; preds = %81, %74
  %84 = phi i32 [ %82, %81 ], [ %80, %74 ]
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %353

86:                                               ; preds = %83
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %72) #6
  br label %353

87:                                               ; preds = %24
  %88 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %89 = sext i32 %26 to i64
  br label %90

90:                                               ; preds = %123, %87
  %91 = phi i64 [ %92, %123 ], [ %89, %87 ]
  %92 = add nsw i64 %91, -1
  %93 = icmp sgt i64 %91, 0
  br i1 %93, label %94, label %135

94:                                               ; preds = %90
  %95 = icmp sgt i64 %91, %89
  br i1 %95, label %96, label %102

96:                                               ; preds = %94
  %97 = load i64*, i64** %8, align 8
  %98 = getelementptr inbounds i64, i64* %97, i64 1
  %99 = load i64, i64* %98, align 8
  %100 = add i64 %99, 160
  %101 = inttoptr i64 %100 to %"class.v8::Value"*
  br label %106

102:                                              ; preds = %94
  %103 = load i64*, i64** %88, align 8
  %104 = getelementptr inbounds i64, i64* %103, i64 %92
  %105 = bitcast i64* %104 to %"class.v8::Value"*
  br label %106

106:                                              ; preds = %102, %96
  %107 = phi %"class.v8::Value"* [ %101, %96 ], [ %105, %102 ]
  %108 = bitcast %"class.v8::Value"* %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = and i64 %109, 3
  %111 = icmp eq i64 %110, 1
  br i1 %111, label %112, label %131

112:                                              ; preds = %106
  %113 = add i64 %109, -1
  %114 = inttoptr i64 %113 to i32*
  %115 = load i32, i32* %114, align 4
  %116 = and i64 %109, -4294967296
  %117 = zext i32 %115 to i64
  %118 = or i64 %116, %117
  %119 = add i64 %118, 7
  %120 = inttoptr i64 %119 to i16*
  %121 = load i16, i16* %120, align 2
  %122 = icmp eq i16 %121, 67
  br i1 %122, label %123, label %129

123:                                              ; preds = %112
  %124 = add i64 %109, 23
  %125 = inttoptr i64 %124 to i32*
  %126 = load i32, i32* %125, align 4
  %127 = and i32 %126, -2
  %128 = icmp eq i32 %127, 10
  br i1 %128, label %90, label %133

129:                                              ; preds = %112
  %130 = trunc i64 %91 to i32
  br label %135

131:                                              ; preds = %106
  %132 = trunc i64 %91 to i32
  br label %135

133:                                              ; preds = %123
  %134 = trunc i64 %91 to i32
  br label %135

135:                                              ; preds = %90, %129, %131, %133
  %136 = phi i32 [ %130, %129 ], [ %132, %131 ], [ %134, %133 ], [ 0, %90 ]
  %137 = load i64*, i64** %88, align 8
  %138 = getelementptr inbounds i64, i64* %137, i64 -1
  %139 = load i64, i64* %138, align 8
  %140 = add i64 %139, -1
  %141 = inttoptr i64 %140 to i32*
  %142 = load i32, i32* %141, align 4
  %143 = and i64 %139, -4294967296
  %144 = zext i32 %142 to i64
  %145 = or i64 %143, %144
  %146 = add i64 %145, 7
  %147 = inttoptr i64 %146 to i16*
  %148 = load i16, i16* %147, align 2
  switch i16 %148, label %153 [
    i16 1057, label %149
    i16 1056, label %149
    i16 1040, label %149
  ]

149:                                              ; preds = %135, %135, %135
  %150 = add i64 %139, 19
  %151 = inttoptr i64 %150 to i8**
  %152 = load i8*, i8** %151, align 1
  br label %157

153:                                              ; preds = %135
  %154 = bitcast i64* %138 to %"class.v8::Object"*
  %155 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %154, i32 1) #6
  %156 = load i32, i32* %25, align 8
  br label %157

157:                                              ; preds = %149, %153
  %158 = phi i32 [ %26, %149 ], [ %156, %153 ]
  %159 = phi i8* [ %152, %149 ], [ %155, %153 ]
  %160 = bitcast i8* %159 to %"class.blink::SpeechGrammarList"*
  %161 = bitcast %"class.blink::ExceptionState"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %161) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %161, i8 -86, i64 56, i1 false)
  %162 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %162, align 8
  %163 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 0
  store i16 6, i16* %163, align 8
  %164 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 1
  store i16 0, i16* %164, align 2
  %165 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 2
  %166 = bitcast i8** %165 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0)>, <2 x i8*>* %166, align 8
  %167 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %167, align 8
  %168 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 3
  store %"class.v8::Isolate"* %12, %"class.v8::Isolate"** %168, align 8
  %169 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 4
  store i32 0, i32* %169, align 8
  %170 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 5, i32 0, i32 0
  %171 = bitcast %"class.WTF::StringImpl"** %170 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %171, i8 0, i64 16, i1 false) #6
  %172 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %172) #6
  %173 = icmp sgt i32 %158, 0
  br i1 %173, label %180, label %174

174:                                              ; preds = %157
  %175 = load i64*, i64** %8, align 8
  %176 = getelementptr inbounds i64, i64* %175, i64 1
  %177 = load i64, i64* %176, align 8
  %178 = add i64 %177, 160
  %179 = inttoptr i64 %178 to %"class.v8::Value"*
  br label %183

180:                                              ; preds = %157
  %181 = bitcast i64** %88 to %"class.v8::Value"**
  %182 = load %"class.v8::Value"*, %"class.v8::Value"** %181, align 8
  br label %183

183:                                              ; preds = %174, %180
  %184 = phi %"class.v8::Value"* [ %179, %174 ], [ %182, %180 ]
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %5, %"class.v8::Isolate"* %12, %"class.v8::Value"* %184, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %4) #6
  %185 = load i32, i32* %169, align 8
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %187, label %302

187:                                              ; preds = %183
  %188 = icmp slt i32 %136, 2
  br i1 %188, label %189, label %236

189:                                              ; preds = %187
  %190 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %190) #6
  %191 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 0, i32 0
  %192 = load %"class.v8::String"*, %"class.v8::String"** %191, align 8
  %193 = icmp eq %"class.v8::String"* %192, null
  br i1 %193, label %196, label %194, !prof !2

194:                                              ; preds = %189
  %195 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %192, i32 0) #6
  br label %217

196:                                              ; preds = %189
  %197 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 1, i32 0, i32 0
  %198 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %197, align 8
  %199 = icmp eq %"class.WTF::StringImpl"* %198, null
  br i1 %199, label %217, label %200

200:                                              ; preds = %196
  %201 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %198, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %202 = load atomic i32, i32* %201 monotonic, align 4
  %203 = and i32 %202, 2
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %205, label %217

205:                                              ; preds = %200
  %206 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %198, i64 0, i32 0
  %207 = load i32, i32* %206, align 4
  %208 = zext i32 %207 to i33
  %209 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %208, i33 1) #6
  %210 = extractvalue { i33, i1 } %209, 1
  %211 = extractvalue { i33, i1 } %209, 0
  %212 = icmp slt i33 %211, 0
  %213 = or i1 %210, %212
  br i1 %213, label %214, label %215, !prof !2

214:                                              ; preds = %205
  call void @llvm.trap() #6
  unreachable

215:                                              ; preds = %205
  %216 = trunc i33 %211 to i32
  store i32 %216, i32* %206, align 4
  br label %217

217:                                              ; preds = %194, %196, %200, %215
  %218 = phi %"class.WTF::StringImpl"* [ %195, %194 ], [ null, %196 ], [ %198, %200 ], [ %198, %215 ]
  %219 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %218, %"class.WTF::StringImpl"** %219, align 8
  call void @_ZN5blink17SpeechGrammarList13addFromStringERKN3WTF6StringEd(%"class.blink::SpeechGrammarList"* %160, %"class.WTF::String"* nonnull dereferenceable(8) %6, double 1.000000e+00) #6
  %220 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %219, align 8
  %221 = icmp eq %"class.WTF::StringImpl"* %220, null
  br i1 %221, label %235, label %222

222:                                              ; preds = %217
  %223 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %220, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %224 = load atomic i32, i32* %223 monotonic, align 4
  %225 = and i32 %224, 2
  %226 = icmp eq i32 %225, 0
  %227 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %220, i64 0, i32 0
  %228 = load i32, i32* %227, align 4
  br i1 %226, label %229, label %231

229:                                              ; preds = %222
  %230 = add i32 %228, -1
  store i32 %230, i32* %227, align 4
  br label %231

231:                                              ; preds = %229, %222
  %232 = phi i32 [ %230, %229 ], [ %228, %222 ]
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %234, label %235

234:                                              ; preds = %231
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %220) #6
  br label %235

235:                                              ; preds = %217, %231, %234
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %190) #6
  br label %302

236:                                              ; preds = %187
  %237 = load i32, i32* %25, align 8
  %238 = icmp sgt i32 %237, 1
  br i1 %238, label %245, label %239

239:                                              ; preds = %236
  %240 = load i64*, i64** %8, align 8
  %241 = getelementptr inbounds i64, i64* %240, i64 1
  %242 = load i64, i64* %241, align 8
  %243 = add i64 %242, 160
  %244 = inttoptr i64 %243 to %"class.v8::Value"*
  br label %249

245:                                              ; preds = %236
  %246 = load i64*, i64** %88, align 8
  %247 = getelementptr inbounds i64, i64* %246, i64 1
  %248 = bitcast i64* %247 to %"class.v8::Value"*
  br label %249

249:                                              ; preds = %239, %245
  %250 = phi %"class.v8::Value"* [ %244, %239 ], [ %248, %245 ]
  %251 = call float @_ZN5blink17ToRestrictedFloatEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %12, %"class.v8::Value"* %250, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %4) #6
  %252 = load i32, i32* %169, align 8
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %254, label %302

254:                                              ; preds = %249
  %255 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %255) #6
  %256 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 0, i32 0
  %257 = load %"class.v8::String"*, %"class.v8::String"** %256, align 8
  %258 = icmp eq %"class.v8::String"* %257, null
  br i1 %258, label %261, label %259, !prof !2

259:                                              ; preds = %254
  %260 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %257, i32 0) #6
  br label %282

261:                                              ; preds = %254
  %262 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 1, i32 0, i32 0
  %263 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %262, align 8
  %264 = icmp eq %"class.WTF::StringImpl"* %263, null
  br i1 %264, label %282, label %265

265:                                              ; preds = %261
  %266 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %263, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %267 = load atomic i32, i32* %266 monotonic, align 4
  %268 = and i32 %267, 2
  %269 = icmp eq i32 %268, 0
  br i1 %269, label %270, label %282

270:                                              ; preds = %265
  %271 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %263, i64 0, i32 0
  %272 = load i32, i32* %271, align 4
  %273 = zext i32 %272 to i33
  %274 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %273, i33 1) #6
  %275 = extractvalue { i33, i1 } %274, 1
  %276 = extractvalue { i33, i1 } %274, 0
  %277 = icmp slt i33 %276, 0
  %278 = or i1 %275, %277
  br i1 %278, label %279, label %280, !prof !2

279:                                              ; preds = %270
  call void @llvm.trap() #6
  unreachable

280:                                              ; preds = %270
  %281 = trunc i33 %276 to i32
  store i32 %281, i32* %271, align 4
  br label %282

282:                                              ; preds = %259, %261, %265, %280
  %283 = phi %"class.WTF::StringImpl"* [ %260, %259 ], [ null, %261 ], [ %263, %265 ], [ %263, %280 ]
  %284 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %283, %"class.WTF::StringImpl"** %284, align 8
  %285 = fpext float %251 to double
  call void @_ZN5blink17SpeechGrammarList13addFromStringERKN3WTF6StringEd(%"class.blink::SpeechGrammarList"* %160, %"class.WTF::String"* nonnull dereferenceable(8) %7, double %285) #6
  %286 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %284, align 8
  %287 = icmp eq %"class.WTF::StringImpl"* %286, null
  br i1 %287, label %301, label %288

288:                                              ; preds = %282
  %289 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %286, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %290 = load atomic i32, i32* %289 monotonic, align 4
  %291 = and i32 %290, 2
  %292 = icmp eq i32 %291, 0
  %293 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %286, i64 0, i32 0
  %294 = load i32, i32* %293, align 4
  br i1 %292, label %295, label %297

295:                                              ; preds = %288
  %296 = add i32 %294, -1
  store i32 %296, i32* %293, align 4
  br label %297

297:                                              ; preds = %295, %288
  %298 = phi i32 [ %296, %295 ], [ %294, %288 ]
  %299 = icmp eq i32 %298, 0
  br i1 %299, label %300, label %301

300:                                              ; preds = %297
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %286) #6
  br label %301

301:                                              ; preds = %282, %297, %300
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %255) #6
  br label %302

302:                                              ; preds = %249, %183, %301, %235
  %303 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %304 = load i8*, i8** %303, align 8
  store i8* null, i8** %303, align 8
  %305 = icmp eq i8* %304, null
  br i1 %305, label %307, label %306

306:                                              ; preds = %302
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %304) #6
  br label %307

307:                                              ; preds = %306, %302
  %308 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 1, i32 0, i32 0
  %309 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %308, align 8
  %310 = icmp eq %"class.WTF::StringImpl"* %309, null
  br i1 %310, label %324, label %311

311:                                              ; preds = %307
  %312 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %309, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %313 = load atomic i32, i32* %312 monotonic, align 4
  %314 = and i32 %313, 2
  %315 = icmp eq i32 %314, 0
  %316 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %309, i64 0, i32 0
  %317 = load i32, i32* %316, align 4
  br i1 %315, label %318, label %320

318:                                              ; preds = %311
  %319 = add i32 %317, -1
  store i32 %319, i32* %316, align 4
  br label %320

320:                                              ; preds = %318, %311
  %321 = phi i32 [ %319, %318 ], [ %317, %311 ]
  %322 = icmp eq i32 %321, 0
  br i1 %322, label %323, label %324

323:                                              ; preds = %320
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %309) #6
  br label %324

324:                                              ; preds = %307, %320, %323
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %172) #6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %162, align 8
  %325 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %326 = load i64*, i64** %325, align 8
  %327 = icmp eq i64* %326, null
  br i1 %327, label %337, label %328

328:                                              ; preds = %324
  %329 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %168, align 8
  %330 = bitcast %"class.v8::Isolate"* %329 to %"class.v8::internal::Isolate"*
  %331 = load i64, i64* %326, align 8
  %332 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %330, i64 %331) #6
  %333 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %329) #6
  br i1 %333, label %337, label %334

334:                                              ; preds = %328
  %335 = bitcast i64* %332 to %"class.v8::Value"*
  %336 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %329, %"class.v8::Value"* %335) #6
  br label %337

337:                                              ; preds = %334, %328, %324
  %338 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %170, align 8
  %339 = icmp eq %"class.WTF::StringImpl"* %338, null
  br i1 %339, label %353, label %340

340:                                              ; preds = %337
  %341 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %338, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %342 = load atomic i32, i32* %341 monotonic, align 4
  %343 = and i32 %342, 2
  %344 = icmp eq i32 %343, 0
  %345 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %338, i64 0, i32 0
  %346 = load i32, i32* %345, align 4
  br i1 %344, label %347, label %349

347:                                              ; preds = %340
  %348 = add i32 %346, -1
  store i32 %348, i32* %345, align 4
  br label %349

349:                                              ; preds = %347, %340
  %350 = phi i32 [ %348, %347 ], [ %346, %340 ]
  %351 = icmp eq i32 %350, 0
  br i1 %351, label %352, label %353

352:                                              ; preds = %349
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %338) #6
  br label %353

353:                                              ; preds = %352, %349, %337, %86, %83, %71
  %354 = phi i8* [ %29, %71 ], [ %29, %83 ], [ %29, %86 ], [ %161, %337 ], [ %161, %349 ], [ %161, %352 ]
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %354) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122v8_speech_grammar_list27AddFromUriOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::ExceptionState", align 8
  %5 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = getelementptr inbounds i64, i64* %9, i64 1
  %11 = bitcast i64* %10 to %"class.v8::Isolate"**
  %12 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %11, align 8
  %13 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %12) #6
  %14 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %13) #6
  %15 = icmp eq %"class.blink::ExecutionContext"* %14, null
  %16 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %14, i64 0, i32 3
  %17 = icmp eq %"class.blink::UseCounter"* %16, null
  %18 = or i1 %15, %17
  br i1 %18, label %24, label %19

19:                                               ; preds = %1
  %20 = bitcast %"class.blink::UseCounter"* %16 to void (%"class.blink::UseCounter"*, i32)***
  %21 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %21, i64 3
  %23 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %22, align 8
  tail call void %23(%"class.blink::UseCounter"* nonnull %16, i32 2480) #6
  br label %24

24:                                               ; preds = %1, %19
  %25 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %26 = load i32, i32* %25, align 8
  %27 = icmp slt i32 %26, 1
  br i1 %27, label %28, label %87, !prof !2

28:                                               ; preds = %24
  %29 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %29) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 56, i1 false)
  %30 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %30, align 8
  %31 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %31, align 8
  %32 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %32, align 2
  %33 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %34 = bitcast i8** %33 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0)>, <2 x i8*>* %34, align 8
  %35 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %35, align 8
  %36 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %12, %"class.v8::Isolate"** %36, align 8
  %37 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %37, align 8
  %38 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %39 = bitcast %"class.WTF::StringImpl"** %38 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 16, i1 false) #6
  %40 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #6
  %41 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %26) #6
  %42 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %41, %"class.WTF::StringImpl"** %42, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #6
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %58, label %45

45:                                               ; preds = %28
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %54

52:                                               ; preds = %45
  %53 = add i32 %51, -1
  store i32 %53, i32* %50, align 4
  br label %54

54:                                               ; preds = %52, %45
  %55 = phi i32 [ %53, %52 ], [ %51, %45 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %43) #6
  br label %58

58:                                               ; preds = %28, %54, %57
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %30, align 8
  %59 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %60 = load i64*, i64** %59, align 8
  %61 = icmp eq i64* %60, null
  br i1 %61, label %71, label %62

62:                                               ; preds = %58
  %63 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %36, align 8
  %64 = bitcast %"class.v8::Isolate"* %63 to %"class.v8::internal::Isolate"*
  %65 = load i64, i64* %60, align 8
  %66 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %64, i64 %65) #6
  %67 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %63) #6
  br i1 %67, label %71, label %68

68:                                               ; preds = %62
  %69 = bitcast i64* %66 to %"class.v8::Value"*
  %70 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %63, %"class.v8::Value"* %69) #6
  br label %71

71:                                               ; preds = %68, %62, %58
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %354, label %74

74:                                               ; preds = %71
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  br i1 %78, label %81, label %83

81:                                               ; preds = %74
  %82 = add i32 %80, -1
  store i32 %82, i32* %79, align 4
  br label %83

83:                                               ; preds = %81, %74
  %84 = phi i32 [ %82, %81 ], [ %80, %74 ]
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %354

86:                                               ; preds = %83
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %72) #6
  br label %354

87:                                               ; preds = %24
  %88 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %89 = sext i32 %26 to i64
  br label %90

90:                                               ; preds = %123, %87
  %91 = phi i64 [ %92, %123 ], [ %89, %87 ]
  %92 = add nsw i64 %91, -1
  %93 = icmp sgt i64 %91, 0
  br i1 %93, label %94, label %135

94:                                               ; preds = %90
  %95 = icmp sgt i64 %91, %89
  br i1 %95, label %96, label %102

96:                                               ; preds = %94
  %97 = load i64*, i64** %8, align 8
  %98 = getelementptr inbounds i64, i64* %97, i64 1
  %99 = load i64, i64* %98, align 8
  %100 = add i64 %99, 160
  %101 = inttoptr i64 %100 to %"class.v8::Value"*
  br label %106

102:                                              ; preds = %94
  %103 = load i64*, i64** %88, align 8
  %104 = getelementptr inbounds i64, i64* %103, i64 %92
  %105 = bitcast i64* %104 to %"class.v8::Value"*
  br label %106

106:                                              ; preds = %102, %96
  %107 = phi %"class.v8::Value"* [ %101, %96 ], [ %105, %102 ]
  %108 = bitcast %"class.v8::Value"* %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = and i64 %109, 3
  %111 = icmp eq i64 %110, 1
  br i1 %111, label %112, label %131

112:                                              ; preds = %106
  %113 = add i64 %109, -1
  %114 = inttoptr i64 %113 to i32*
  %115 = load i32, i32* %114, align 4
  %116 = and i64 %109, -4294967296
  %117 = zext i32 %115 to i64
  %118 = or i64 %116, %117
  %119 = add i64 %118, 7
  %120 = inttoptr i64 %119 to i16*
  %121 = load i16, i16* %120, align 2
  %122 = icmp eq i16 %121, 67
  br i1 %122, label %123, label %129

123:                                              ; preds = %112
  %124 = add i64 %109, 23
  %125 = inttoptr i64 %124 to i32*
  %126 = load i32, i32* %125, align 4
  %127 = and i32 %126, -2
  %128 = icmp eq i32 %127, 10
  br i1 %128, label %90, label %133

129:                                              ; preds = %112
  %130 = trunc i64 %91 to i32
  br label %135

131:                                              ; preds = %106
  %132 = trunc i64 %91 to i32
  br label %135

133:                                              ; preds = %123
  %134 = trunc i64 %91 to i32
  br label %135

135:                                              ; preds = %90, %129, %131, %133
  %136 = phi i32 [ %130, %129 ], [ %132, %131 ], [ %134, %133 ], [ 0, %90 ]
  %137 = load i64*, i64** %88, align 8
  %138 = getelementptr inbounds i64, i64* %137, i64 -1
  %139 = bitcast i64* %138 to %"class.v8::Object"*
  %140 = load i64, i64* %138, align 8
  %141 = add i64 %140, -1
  %142 = inttoptr i64 %141 to i32*
  %143 = load i32, i32* %142, align 4
  %144 = and i64 %140, -4294967296
  %145 = zext i32 %143 to i64
  %146 = or i64 %144, %145
  %147 = add i64 %146, 7
  %148 = inttoptr i64 %147 to i16*
  %149 = load i16, i16* %148, align 2
  switch i16 %149, label %154 [
    i16 1057, label %150
    i16 1056, label %150
    i16 1040, label %150
  ]

150:                                              ; preds = %135, %135, %135
  %151 = add i64 %140, 19
  %152 = inttoptr i64 %151 to i8**
  %153 = load i8*, i8** %152, align 1
  br label %156

154:                                              ; preds = %135
  %155 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %139, i32 1) #6
  br label %156

156:                                              ; preds = %150, %154
  %157 = phi i8* [ %153, %150 ], [ %155, %154 ]
  %158 = bitcast i8* %157 to %"class.blink::SpeechGrammarList"*
  %159 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %139) #6
  %160 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %159)
  %161 = bitcast %"class.blink::ExceptionState"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %161) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %161, i8 -86, i64 56, i1 false)
  %162 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %162, align 8
  %163 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 0
  store i16 6, i16* %163, align 8
  %164 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 1
  store i16 0, i16* %164, align 2
  %165 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 2
  %166 = bitcast i8** %165 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0)>, <2 x i8*>* %166, align 8
  %167 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %167, align 8
  %168 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 3
  store %"class.v8::Isolate"* %12, %"class.v8::Isolate"** %168, align 8
  %169 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 4
  store i32 0, i32* %169, align 8
  %170 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 5, i32 0, i32 0
  %171 = bitcast %"class.WTF::StringImpl"** %170 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %171, i8 0, i64 16, i1 false) #6
  %172 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %172) #6
  %173 = load i32, i32* %25, align 8
  %174 = icmp sgt i32 %173, 0
  br i1 %174, label %181, label %175

175:                                              ; preds = %156
  %176 = load i64*, i64** %8, align 8
  %177 = getelementptr inbounds i64, i64* %176, i64 1
  %178 = load i64, i64* %177, align 8
  %179 = add i64 %178, 160
  %180 = inttoptr i64 %179 to %"class.v8::Value"*
  br label %184

181:                                              ; preds = %156
  %182 = bitcast i64** %88 to %"class.v8::Value"**
  %183 = load %"class.v8::Value"*, %"class.v8::Value"** %182, align 8
  br label %184

184:                                              ; preds = %175, %181
  %185 = phi %"class.v8::Value"* [ %180, %175 ], [ %183, %181 ]
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %5, %"class.v8::Isolate"* %12, %"class.v8::Value"* %185, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %4) #6
  %186 = load i32, i32* %169, align 8
  %187 = icmp eq i32 %186, 0
  br i1 %187, label %188, label %303

188:                                              ; preds = %184
  %189 = icmp slt i32 %136, 2
  br i1 %189, label %190, label %237

190:                                              ; preds = %188
  %191 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %191) #6
  %192 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 0, i32 0
  %193 = load %"class.v8::String"*, %"class.v8::String"** %192, align 8
  %194 = icmp eq %"class.v8::String"* %193, null
  br i1 %194, label %197, label %195, !prof !2

195:                                              ; preds = %190
  %196 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %193, i32 0) #6
  br label %218

197:                                              ; preds = %190
  %198 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 1, i32 0, i32 0
  %199 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %198, align 8
  %200 = icmp eq %"class.WTF::StringImpl"* %199, null
  br i1 %200, label %218, label %201

201:                                              ; preds = %197
  %202 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %199, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %203 = load atomic i32, i32* %202 monotonic, align 4
  %204 = and i32 %203, 2
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %206, label %218

206:                                              ; preds = %201
  %207 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %199, i64 0, i32 0
  %208 = load i32, i32* %207, align 4
  %209 = zext i32 %208 to i33
  %210 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %209, i33 1) #6
  %211 = extractvalue { i33, i1 } %210, 1
  %212 = extractvalue { i33, i1 } %210, 0
  %213 = icmp slt i33 %212, 0
  %214 = or i1 %211, %213
  br i1 %214, label %215, label %216, !prof !2

215:                                              ; preds = %206
  call void @llvm.trap() #6
  unreachable

216:                                              ; preds = %206
  %217 = trunc i33 %212 to i32
  store i32 %217, i32* %207, align 4
  br label %218

218:                                              ; preds = %195, %197, %201, %216
  %219 = phi %"class.WTF::StringImpl"* [ %196, %195 ], [ null, %197 ], [ %199, %201 ], [ %199, %216 ]
  %220 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %219, %"class.WTF::StringImpl"** %220, align 8
  call void @_ZN5blink17SpeechGrammarList10addFromUriEPNS_11ScriptStateERKN3WTF6StringEd(%"class.blink::SpeechGrammarList"* %158, %"class.blink::ScriptState"* %160, %"class.WTF::String"* nonnull dereferenceable(8) %6, double 1.000000e+00) #6
  %221 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %220, align 8
  %222 = icmp eq %"class.WTF::StringImpl"* %221, null
  br i1 %222, label %236, label %223

223:                                              ; preds = %218
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %225 = load atomic i32, i32* %224 monotonic, align 4
  %226 = and i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 0
  %229 = load i32, i32* %228, align 4
  br i1 %227, label %230, label %232

230:                                              ; preds = %223
  %231 = add i32 %229, -1
  store i32 %231, i32* %228, align 4
  br label %232

232:                                              ; preds = %230, %223
  %233 = phi i32 [ %231, %230 ], [ %229, %223 ]
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %235, label %236

235:                                              ; preds = %232
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %221) #6
  br label %236

236:                                              ; preds = %218, %232, %235
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %191) #6
  br label %303

237:                                              ; preds = %188
  %238 = load i32, i32* %25, align 8
  %239 = icmp sgt i32 %238, 1
  br i1 %239, label %246, label %240

240:                                              ; preds = %237
  %241 = load i64*, i64** %8, align 8
  %242 = getelementptr inbounds i64, i64* %241, i64 1
  %243 = load i64, i64* %242, align 8
  %244 = add i64 %243, 160
  %245 = inttoptr i64 %244 to %"class.v8::Value"*
  br label %250

246:                                              ; preds = %237
  %247 = load i64*, i64** %88, align 8
  %248 = getelementptr inbounds i64, i64* %247, i64 1
  %249 = bitcast i64* %248 to %"class.v8::Value"*
  br label %250

250:                                              ; preds = %240, %246
  %251 = phi %"class.v8::Value"* [ %245, %240 ], [ %249, %246 ]
  %252 = call float @_ZN5blink17ToRestrictedFloatEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %12, %"class.v8::Value"* %251, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %4) #6
  %253 = load i32, i32* %169, align 8
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %255, label %303

255:                                              ; preds = %250
  %256 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %256) #6
  %257 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 0, i32 0
  %258 = load %"class.v8::String"*, %"class.v8::String"** %257, align 8
  %259 = icmp eq %"class.v8::String"* %258, null
  br i1 %259, label %262, label %260, !prof !2

260:                                              ; preds = %255
  %261 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %258, i32 0) #6
  br label %283

262:                                              ; preds = %255
  %263 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 1, i32 0, i32 0
  %264 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %263, align 8
  %265 = icmp eq %"class.WTF::StringImpl"* %264, null
  br i1 %265, label %283, label %266

266:                                              ; preds = %262
  %267 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %264, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %268 = load atomic i32, i32* %267 monotonic, align 4
  %269 = and i32 %268, 2
  %270 = icmp eq i32 %269, 0
  br i1 %270, label %271, label %283

271:                                              ; preds = %266
  %272 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %264, i64 0, i32 0
  %273 = load i32, i32* %272, align 4
  %274 = zext i32 %273 to i33
  %275 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %274, i33 1) #6
  %276 = extractvalue { i33, i1 } %275, 1
  %277 = extractvalue { i33, i1 } %275, 0
  %278 = icmp slt i33 %277, 0
  %279 = or i1 %276, %278
  br i1 %279, label %280, label %281, !prof !2

280:                                              ; preds = %271
  call void @llvm.trap() #6
  unreachable

281:                                              ; preds = %271
  %282 = trunc i33 %277 to i32
  store i32 %282, i32* %272, align 4
  br label %283

283:                                              ; preds = %260, %262, %266, %281
  %284 = phi %"class.WTF::StringImpl"* [ %261, %260 ], [ null, %262 ], [ %264, %266 ], [ %264, %281 ]
  %285 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %284, %"class.WTF::StringImpl"** %285, align 8
  %286 = fpext float %252 to double
  call void @_ZN5blink17SpeechGrammarList10addFromUriEPNS_11ScriptStateERKN3WTF6StringEd(%"class.blink::SpeechGrammarList"* %158, %"class.blink::ScriptState"* %160, %"class.WTF::String"* nonnull dereferenceable(8) %7, double %286) #6
  %287 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %285, align 8
  %288 = icmp eq %"class.WTF::StringImpl"* %287, null
  br i1 %288, label %302, label %289

289:                                              ; preds = %283
  %290 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %287, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %291 = load atomic i32, i32* %290 monotonic, align 4
  %292 = and i32 %291, 2
  %293 = icmp eq i32 %292, 0
  %294 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %287, i64 0, i32 0
  %295 = load i32, i32* %294, align 4
  br i1 %293, label %296, label %298

296:                                              ; preds = %289
  %297 = add i32 %295, -1
  store i32 %297, i32* %294, align 4
  br label %298

298:                                              ; preds = %296, %289
  %299 = phi i32 [ %297, %296 ], [ %295, %289 ]
  %300 = icmp eq i32 %299, 0
  br i1 %300, label %301, label %302

301:                                              ; preds = %298
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %287) #6
  br label %302

302:                                              ; preds = %283, %298, %301
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %256) #6
  br label %303

303:                                              ; preds = %250, %184, %302, %236
  %304 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %305 = load i8*, i8** %304, align 8
  store i8* null, i8** %304, align 8
  %306 = icmp eq i8* %305, null
  br i1 %306, label %308, label %307

307:                                              ; preds = %303
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %305) #6
  br label %308

308:                                              ; preds = %307, %303
  %309 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 1, i32 0, i32 0
  %310 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %309, align 8
  %311 = icmp eq %"class.WTF::StringImpl"* %310, null
  br i1 %311, label %325, label %312

312:                                              ; preds = %308
  %313 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %310, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %314 = load atomic i32, i32* %313 monotonic, align 4
  %315 = and i32 %314, 2
  %316 = icmp eq i32 %315, 0
  %317 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %310, i64 0, i32 0
  %318 = load i32, i32* %317, align 4
  br i1 %316, label %319, label %321

319:                                              ; preds = %312
  %320 = add i32 %318, -1
  store i32 %320, i32* %317, align 4
  br label %321

321:                                              ; preds = %319, %312
  %322 = phi i32 [ %320, %319 ], [ %318, %312 ]
  %323 = icmp eq i32 %322, 0
  br i1 %323, label %324, label %325

324:                                              ; preds = %321
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %310) #6
  br label %325

325:                                              ; preds = %308, %321, %324
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %172) #6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %162, align 8
  %326 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %327 = load i64*, i64** %326, align 8
  %328 = icmp eq i64* %327, null
  br i1 %328, label %338, label %329

329:                                              ; preds = %325
  %330 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %168, align 8
  %331 = bitcast %"class.v8::Isolate"* %330 to %"class.v8::internal::Isolate"*
  %332 = load i64, i64* %327, align 8
  %333 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %331, i64 %332) #6
  %334 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %330) #6
  br i1 %334, label %338, label %335

335:                                              ; preds = %329
  %336 = bitcast i64* %333 to %"class.v8::Value"*
  %337 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %330, %"class.v8::Value"* %336) #6
  br label %338

338:                                              ; preds = %335, %329, %325
  %339 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %170, align 8
  %340 = icmp eq %"class.WTF::StringImpl"* %339, null
  br i1 %340, label %354, label %341

341:                                              ; preds = %338
  %342 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %339, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load atomic i32, i32* %342 monotonic, align 4
  %344 = and i32 %343, 2
  %345 = icmp eq i32 %344, 0
  %346 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %339, i64 0, i32 0
  %347 = load i32, i32* %346, align 4
  br i1 %345, label %348, label %350

348:                                              ; preds = %341
  %349 = add i32 %347, -1
  store i32 %349, i32* %346, align 4
  br label %350

350:                                              ; preds = %348, %341
  %351 = phi i32 [ %349, %348 ], [ %347, %341 ]
  %352 = icmp eq i32 %351, 0
  br i1 %352, label %353, label %354

353:                                              ; preds = %350
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %339) #6
  br label %354

354:                                              ; preds = %353, %350, %338, %86, %83, %71
  %355 = phi i8* [ %29, %71 ], [ %29, %83 ], [ %29, %86 ], [ %161, %338 ], [ %161, %350 ], [ %161, %353 ]
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %355) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_122v8_speech_grammar_list21ItemOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %8) #6
  %10 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %9) #6
  %11 = icmp eq %"class.blink::ExecutionContext"* %10, null
  %12 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %10, i64 0, i32 3
  %13 = icmp eq %"class.blink::UseCounter"* %12, null
  %14 = or i1 %11, %13
  br i1 %14, label %20, label %15

15:                                               ; preds = %1
  %16 = bitcast %"class.blink::UseCounter"* %12 to void (%"class.blink::UseCounter"*, i32)***
  %17 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %17, i64 3
  %19 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %18, align 8
  tail call void %19(%"class.blink::UseCounter"* nonnull %12, i32 2989) #6
  br label %20

20:                                               ; preds = %1, %15
  %21 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %21) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 56, i1 false)
  %22 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %23 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %23, align 8
  %24 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %24, align 2
  %25 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %26 = bitcast i8** %25 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i64 0, i64 0)>, <2 x i8*>* %26, align 8
  %27 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %27, align 8
  %28 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %28, align 8
  %29 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %29, align 8
  %30 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %31 = bitcast %"class.WTF::StringImpl"** %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 16, i1 false) #6
  %32 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = icmp slt i32 %33, 1
  br i1 %34, label %35, label %55, !prof !2

35:                                               ; preds = %20
  %36 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #6
  %37 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %33) #6
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %37, %"class.WTF::StringImpl"** %38, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #6
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %54, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  br i1 %45, label %48, label %50

48:                                               ; preds = %41
  %49 = add i32 %47, -1
  store i32 %49, i32* %46, align 4
  br label %50

50:                                               ; preds = %48, %41
  %51 = phi i32 [ %49, %48 ], [ %47, %41 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %50
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #6
  br label %54

54:                                               ; preds = %35, %50, %53
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #6
  br label %144

55:                                               ; preds = %20
  %56 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %57 = load i64*, i64** %56, align 8
  %58 = getelementptr inbounds i64, i64* %57, i64 -1
  %59 = load i64, i64* %58, align 8
  %60 = add i64 %59, -1
  %61 = inttoptr i64 %60 to i32*
  %62 = load i32, i32* %61, align 4
  %63 = and i64 %59, -4294967296
  %64 = zext i32 %62 to i64
  %65 = or i64 %63, %64
  %66 = add i64 %65, 7
  %67 = inttoptr i64 %66 to i16*
  %68 = load i16, i16* %67, align 2
  switch i16 %68, label %74 [
    i16 1057, label %69
    i16 1056, label %69
    i16 1040, label %69
  ]

69:                                               ; preds = %55, %55, %55
  %70 = add i64 %59, 19
  %71 = inttoptr i64 %70 to i8**
  %72 = load i8*, i8** %71, align 1
  %73 = bitcast i8* %72 to %"class.blink::SpeechGrammarList"*
  br label %86

74:                                               ; preds = %55
  %75 = bitcast i64* %58 to %"class.v8::Object"*
  %76 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %75, i32 1) #6
  %77 = load i32, i32* %32, align 8
  %78 = bitcast i8* %76 to %"class.blink::SpeechGrammarList"*
  %79 = icmp sgt i32 %77, 0
  br i1 %79, label %86, label %80

80:                                               ; preds = %74
  %81 = load i64*, i64** %4, align 8
  %82 = getelementptr inbounds i64, i64* %81, i64 1
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 160
  %85 = inttoptr i64 %84 to %"class.v8::Value"*
  br label %91

86:                                               ; preds = %69, %74
  %87 = phi %"class.blink::SpeechGrammarList"* [ %73, %69 ], [ %78, %74 ]
  %88 = phi i8* [ %72, %69 ], [ %76, %74 ]
  %89 = bitcast i64** %56 to %"class.v8::Value"**
  %90 = load %"class.v8::Value"*, %"class.v8::Value"** %89, align 8
  br label %91

91:                                               ; preds = %80, %86
  %92 = phi %"class.blink::SpeechGrammarList"* [ %78, %80 ], [ %87, %86 ]
  %93 = phi i8* [ %76, %80 ], [ %88, %86 ]
  %94 = phi %"class.v8::Value"* [ %85, %80 ], [ %90, %86 ]
  %95 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %94) #6
  br i1 %95, label %96, label %99, !prof !4

96:                                               ; preds = %91
  %97 = bitcast %"class.v8::Value"* %94 to %"class.v8::Uint32"*
  %98 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %97) #6
  br label %108

99:                                               ; preds = %91
  %100 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %94) #6
  br i1 %100, label %101, label %104, !prof !4

101:                                              ; preds = %99
  %102 = bitcast %"class.v8::Value"* %94 to %"class.v8::Int32"*
  %103 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %102) #6
  br label %108

104:                                              ; preds = %99
  %105 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %94, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  %106 = load i32, i32* %29, align 8
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %144

108:                                              ; preds = %101, %96, %104
  %109 = phi i32 [ %105, %104 ], [ %103, %101 ], [ %98, %96 ]
  %110 = call %"class.blink::SpeechGrammar"* @_ZNK5blink17SpeechGrammarList4itemEj(%"class.blink::SpeechGrammarList"* %92, i32 %109) #6
  %111 = getelementptr inbounds %"class.blink::SpeechGrammar", %"class.blink::SpeechGrammar"* %110, i64 0, i32 0
  %112 = icmp eq %"class.blink::SpeechGrammar"* %110, null
  %113 = load i64*, i64** %4, align 8
  %114 = getelementptr inbounds i64, i64* %113, i64 3
  br i1 %112, label %115, label %121, !prof !2

115:                                              ; preds = %108
  %116 = getelementptr inbounds i64, i64* %113, i64 1
  %117 = load i64, i64* %116, align 8
  %118 = add i64 %117, 176
  %119 = inttoptr i64 %118 to i64*
  %120 = load i64, i64* %119, align 8
  store i64 %120, i64* %114, align 8
  br label %144

121:                                              ; preds = %108
  %122 = bitcast i8* %93 to %"class.blink::ScriptWrappable"*
  %123 = load i64*, i64** %56, align 8
  %124 = getelementptr inbounds i64, i64* %123, i64 -1
  %125 = bitcast i64* %124 to %"class.v8::Object"*
  %126 = call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %114, %"class.blink::ScriptWrappable"* nonnull %111, %"class.v8::Object"* %125, %"class.blink::ScriptWrappable"* %122) #6
  br i1 %126, label %144, label %127

127:                                              ; preds = %121
  %128 = load i64*, i64** %56, align 8
  %129 = getelementptr inbounds i64, i64* %128, i64 -1
  %130 = bitcast i64* %129 to %"class.v8::Object"*
  %131 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %130) #6
  %132 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %131) #6
  %133 = bitcast %"class.blink::SpeechGrammar"* %110 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %134 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %133, align 8
  %135 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %134, i64 7
  %136 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %135, align 8
  %137 = call %"class.v8::Value"* %136(%"class.blink::ScriptWrappable"* nonnull %111, %"class.blink::ScriptState"* %132) #6
  %138 = icmp eq %"class.v8::Value"* %137, null
  br i1 %138, label %144, label %139

139:                                              ; preds = %127
  %140 = load i64*, i64** %4, align 8
  %141 = getelementptr inbounds i64, i64* %140, i64 3
  %142 = bitcast %"class.v8::Value"* %137 to i64*
  %143 = load i64, i64* %142, align 8
  store i64 %143, i64* %141, align 8
  br label %144

144:                                              ; preds = %104, %139, %127, %121, %115, %54
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %145 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %146 = load i64*, i64** %145, align 8
  %147 = icmp eq i64* %146, null
  br i1 %147, label %157, label %148

148:                                              ; preds = %144
  %149 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %28, align 8
  %150 = bitcast %"class.v8::Isolate"* %149 to %"class.v8::internal::Isolate"*
  %151 = load i64, i64* %146, align 8
  %152 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %150, i64 %151) #6
  %153 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %149) #6
  br i1 %153, label %157, label %154

154:                                              ; preds = %148
  %155 = bitcast i64* %152 to %"class.v8::Value"*
  %156 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %149, %"class.v8::Value"* %155) #6
  br label %157

157:                                              ; preds = %154, %148, %144
  %158 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %159 = icmp eq %"class.WTF::StringImpl"* %158, null
  br i1 %159, label %173, label %160

160:                                              ; preds = %157
  %161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %158, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = load atomic i32, i32* %161 monotonic, align 4
  %163 = and i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %158, i64 0, i32 0
  %166 = load i32, i32* %165, align 4
  br i1 %164, label %167, label %169

167:                                              ; preds = %160
  %168 = add i32 %166, -1
  store i32 %168, i32* %165, align 4
  br label %169

169:                                              ; preds = %167, %160
  %170 = phi i32 [ %168, %167 ], [ %166, %160 ]
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %172, label %173

172:                                              ; preds = %169
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %158) #6
  br label %173

173:                                              ; preds = %157, %169, %172
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %21) #6
  ret void
}

declare void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Signature"*, %"class.base::span.209"* byval(%"class.base::span.209") align 8) local_unnamed_addr #2

declare %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"*) local_unnamed_addr #2

declare i16 @_ZN2v86Object6DeleteENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Value"*) local_unnamed_addr #2

declare zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #2

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare %"class.v8::Object"* @_ZN5blink8bindings30CreatePropertyDescriptorObjectEPN2v87IsolateERKNS1_18PropertyDescriptorE(%"class.v8::Isolate"*, %"class.v8::PropertyDescriptor"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages27ConstructorCalledAsFunctionEv() local_unnamed_addr #2

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #2

declare %"class.blink::SpeechGrammarList"* @_ZN5blink17SpeechGrammarList6CreateEv() local_unnamed_addr #2

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #2

declare %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"*, i32) local_unnamed_addr #2

declare %"class.v8::Integer"* @_ZN2v87Integer3NewEPNS_7IsolateEi(%"class.v8::Isolate"*, i32) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32, i32) local_unnamed_addr #2

declare void @_ZN5blink17SpeechGrammarList13addFromStringERKN3WTF6StringEd(%"class.blink::SpeechGrammarList"*, %"class.WTF::String"* dereferenceable(8), double) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = bitcast %"class.v8::Value"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 1
  br i1 %9, label %10, label %26

10:                                               ; preds = %4
  %11 = add i64 %7, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = and i64 %7, -4294967296
  %15 = zext i32 %13 to i64
  %16 = or i64 %14, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = icmp ult i16 %19, 64
  br i1 %20, label %21, label %26

21:                                               ; preds = %10
  %22 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0 to %"class.v8::Value"**
  store %"class.v8::Value"* %2, %"class.v8::Value"** %22, align 8
  %23 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %23, align 8
  %24 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %25 = bitcast %"class.std::__1::unique_ptr.412"* %24 to i64*
  store i64 0, i64* %25, align 8
  br label %54

26:                                               ; preds = %4, %10
  %27 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %2) #6
  br i1 %27, label %28, label %36

28:                                               ; preds = %26
  %29 = bitcast %"class.v8::Value"* %2 to %"class.v8::Int32"*
  %30 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %29) #6
  %31 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 0, i32 0
  store %"class.v8::String"* null, %"class.v8::String"** %31, align 8
  %32 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32 %30) #6
  %33 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  %34 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %35 = bitcast %"class.std::__1::unique_ptr.412"* %34 to i64*
  store i64 0, i64* %35, align 8
  br label %54

36:                                               ; preds = %26
  %37 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %37) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %1) #6
  %38 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #6
  %39 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %2, %"class.v8::Context"* %38) #6
  %40 = icmp eq %"class.v8::String"* %39, null
  br i1 %40, label %41, label %48

41:                                               ; preds = %36
  %42 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #6
  %43 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %44 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %44, i64 5
  %46 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %45, align 8
  call void %46(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %42) #6
  %47 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 152, i1 false)
  br label %53

48:                                               ; preds = %36
  %49 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 0, i32 0
  store %"class.v8::String"* %39, %"class.v8::String"** %49, align 8
  %50 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %50, align 8
  %51 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %52 = bitcast %"class.std::__1::unique_ptr.412"* %51 to i64*
  store i64 0, i64* %52, align 8
  br label %53

53:                                               ; preds = %48, %41
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %37) #6
  br label %54

54:                                               ; preds = %53, %28, %21
  ret void
}

declare zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"*) local_unnamed_addr #2

declare i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"*) local_unnamed_addr #2

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #2

declare %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"*, %"class.v8::Context"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare float @_ZN5blink17ToRestrictedFloatEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN3WTF10Partitions10BufferFreeEPv(i8*) local_unnamed_addr #2

declare %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.v8::Context"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 23
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 23
  %13 = inttoptr i64 %12 to i8**
  %14 = load i8*, i8** %13, align 1
  %15 = bitcast i8* %14 to %"class.blink::ScriptState"*
  %16 = icmp eq i8* %14, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %1
  %18 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.10, i64 0, i64 0), i32 175, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i64 0, i64 0)) #6
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #6
  br label %20

20:                                               ; preds = %1, %17
  %21 = getelementptr inbounds i8, i8* %14, i64 8
  %22 = bitcast i8* %21 to i64**
  %23 = load i64*, i64** %22, align 8
  %24 = icmp eq i64* %23, null
  %25 = icmp eq %"class.v8::Context"* %0, null
  %26 = or i1 %25, %24
  br i1 %26, label %31, label %27

27:                                               ; preds = %20
  %28 = load i64, i64* %23, align 8
  %29 = load i64, i64* %4, align 8
  %30 = icmp eq i64 %28, %29
  br i1 %30, label %36, label %33

31:                                               ; preds = %20
  %32 = and i1 %25, %24
  br i1 %32, label %36, label %33

33:                                               ; preds = %27, %31
  %34 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.10, i64 0, i64 0), i32 176, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12, i64 0, i64 0)) #6
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #6
  br label %36

36:                                               ; preds = %27, %31, %33
  ret %"class.blink::ScriptState"* %15
}

declare void @_ZN5blink17SpeechGrammarList10addFromUriEPNS_11ScriptStateERKN3WTF6StringEd(%"class.blink::SpeechGrammarList"*, %"class.blink::ScriptState"*, %"class.WTF::String"* dereferenceable(8), double) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"*) local_unnamed_addr #2

declare i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"*) local_unnamed_addr #2

declare i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64*, %"class.blink::ScriptWrappable"*, %"class.v8::Object"*, %"class.blink::ScriptWrappable"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #6
  %7 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %8 = ptrtoint i64* %5 to i64
  %9 = sub i64 %7, %8
  %10 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %11 = icmp ult i64 %9, %10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #6
  %12 = load i32, i32* @_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E, align 4
  %13 = icmp eq i32 %12, 0
  %14 = and i1 %11, %13
  br i1 %14, label %28, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %17 = load i64*, i64** %16, align 8
  %18 = icmp eq i64* %17, null
  %19 = icmp eq %"class.v8::Object"* %2, null
  %20 = or i1 %19, %18
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = bitcast %"class.v8::Object"* %2 to i64*
  %23 = load i64, i64* %17, align 8
  %24 = load i64, i64* %22, align 8
  %25 = icmp eq i64 %23, %24
  br i1 %25, label %28, label %37

26:                                               ; preds = %15
  %27 = and i1 %19, %18
  br i1 %27, label %28, label %37

28:                                               ; preds = %21, %26, %4
  %29 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = icmp eq i64* %30, null
  %32 = getelementptr inbounds i64, i64* %0, i64 -1
  %33 = select i1 %31, i64* %32, i64* %30, !prof !2
  %34 = load i64, i64* %33, align 8
  store i64 %34, i64* %0, align 8
  %35 = load i64*, i64** %29, align 8
  %36 = icmp ne i64* %35, null
  br label %80

37:                                               ; preds = %21, %26
  %38 = getelementptr inbounds i64, i64* %0, i64 -2
  %39 = bitcast i64* %38 to %"class.v8::Isolate"**
  %40 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %39, align 8
  %41 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %40) #6
  %42 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %41) #6
  %43 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %42, i64 0, i32 2, i32 0
  %44 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %44, i64 0, i32 3, i32 0, i32 0
  %46 = load %"class.blink::DOMDataStore"*, %"class.blink::DOMDataStore"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %46, i64 0, i32 1
  %48 = load i8, i8* %47, align 8, !range !3
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %59, label %50

50:                                               ; preds = %37
  %51 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %52 = load i64*, i64** %51, align 8
  %53 = icmp eq i64* %52, null
  %54 = getelementptr inbounds i64, i64* %0, i64 -1
  %55 = select i1 %53, i64* %54, i64* %52, !prof !2
  %56 = load i64, i64* %55, align 8
  store i64 %56, i64* %0, align 8
  %57 = load i64*, i64** %51, align 8
  %58 = icmp ne i64* %57, null
  br label %80

59:                                               ; preds = %37
  %60 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %46, i64 0, i32 3, i32 0
  %61 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %60, i64 0, i32 0
  %62 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable"* %61, %"class.blink::ScriptWrappable"* %1) #6
  %63 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %62, 0
  %64 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %60, i64 0, i32 0, i32 0
  %65 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %46, i64 0, i32 3, i32 0, i32 0, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %65, i64 %68
  %70 = icmp eq %"struct.WTF::KeyValuePair"* %63, %69
  br i1 %70, label %80, label %71

71:                                               ; preds = %59
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %63, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %73 = load i64*, i64** %72, align 8
  %74 = icmp eq i64* %73, null
  br i1 %74, label %75, label %78, !prof !2

75:                                               ; preds = %71
  %76 = getelementptr inbounds i64, i64* %0, i64 -1
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %0, align 8
  br label %80

78:                                               ; preds = %71
  %79 = load i64, i64* %73, align 8
  store i64 %79, i64* %0, align 8
  br label %80

80:                                               ; preds = %78, %75, %59, %50, %28
  %81 = phi i1 [ %36, %28 ], [ %58, %50 ], [ false, %59 ], [ true, %75 ], [ true, %78 ]
  ret i1 %81
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable"*, %"class.blink::ScriptWrappable"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::ScriptWrappable"* %1 to i64
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  br i1 %6, label %69, label %9

9:                                                ; preds = %2
  %10 = add i32 %8, -1
  %11 = zext i32 %10 to i64
  %12 = shl i64 %3, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %13, %3
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %10, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %34, align 8
  %36 = icmp eq %"class.blink::ScriptWrappable"* %35, %1
  br i1 %36, label %66, label %37

37:                                               ; preds = %9
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %57, %37
  %52 = phi i64 [ %32, %37 ], [ %61, %57 ]
  %53 = phi i64 [ 0, %37 ], [ %59, %57 ]
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %52, i32 0, i32 0, i32 0
  %55 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %54, align 8
  %56 = icmp eq %"class.blink::ScriptWrappable"* %55, null
  br i1 %56, label %69, label %57

57:                                               ; preds = %51
  %58 = icmp eq i64 %53, 0
  %59 = select i1 %58, i64 %50, i64 %53
  %60 = add i64 %59, %52
  %61 = and i64 %60, %11
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %63, align 8
  %65 = icmp eq %"class.blink::ScriptWrappable"* %64, %1
  br i1 %65, label %66, label %51

66:                                               ; preds = %57, %9
  %67 = phi %"struct.WTF::KeyValuePair"* [ %33, %9 ], [ %62, %57 ]
  %68 = icmp eq %"struct.WTF::KeyValuePair"* %67, null
  br i1 %68, label %69, label %72

69:                                               ; preds = %51, %66, %2
  %70 = zext i32 %8 to i64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %70
  br label %75

72:                                               ; preds = %66
  %73 = zext i32 %8 to i64
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %73
  br label %75

75:                                               ; preds = %69, %72
  %76 = phi %"struct.WTF::KeyValuePair"* [ %67, %72 ], [ %71, %69 ]
  %77 = phi %"struct.WTF::KeyValuePair"* [ %74, %72 ], [ %71, %69 ]
  %78 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %76, 0
  %79 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %78, %"struct.WTF::KeyValuePair"* %77, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %79
}

declare %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"*, i8*, i32, i32) local_unnamed_addr #2

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #2

declare void @_ZN2v82V817FromJustIsNothingEv() local_unnamed_addr #2

declare i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal18ShouldThrowOnErrorEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 2000, i32 1}
