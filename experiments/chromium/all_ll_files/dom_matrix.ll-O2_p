; ModuleID = '../../third_party/blink/renderer/core/geometry/dom_matrix.cc'
source_filename = "../../third_party/blink/renderer/core/geometry/dom_matrix.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.77", i32, [4 x i8], %"class.std::__1::unique_ptr.213", %"class.std::__1::unique_ptr.213", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.223", %"class.std::__1::unique_ptr.229", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.241", %"class.std::__1::unique_ptr.247", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.254", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.98", %"class.std::__1::unique_ptr.104", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.121", %"class.std::__1::unique_ptr.128", %"class.std::__1::unique_ptr.128", %"class.std::__1::unique_ptr.135", %"class.std::__1::unique_ptr.142", %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.156", %"class.std::__1::unique_ptr.163", %"class.std::__1::unique_ptr.170", %"class.std::__1::unique_ptr.193", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.113" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.113" = type { %"struct.std::__1::__atomic_base.114" }
%"struct.std::__1::__atomic_base.114" = type { %"struct.std::__1::__atomic_base.115" }
%"struct.std::__1::__atomic_base.115" = type { %"struct.std::__1::__cxx_atomic_impl.116" }
%"struct.std::__1::__cxx_atomic_impl.116" = type { %"struct.std::__1::__cxx_atomic_base_impl.117" }
%"struct.std::__1::__cxx_atomic_base_impl.117" = type { i64 }
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.blink::Worklist.124"* }
%"class.blink::Worklist.124" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.113" }
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.blink::Worklist.131"* }
%"class.blink::Worklist.131" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.113" }
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.blink::Worklist.138"* }
%"class.blink::Worklist.138" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.113" }
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.blink::Worklist.145"* }
%"class.blink::Worklist.145" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.113" }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::Worklist.152"* }
%"class.blink::Worklist.152" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.113" }
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.blink::Worklist.159"* }
%"class.blink::Worklist.159" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.113" }
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.blink::Worklist.166"* }
%"class.blink::Worklist.166" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.113" }
%"class.std::__1::unique_ptr.170" = type { %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.173", %"class.std::__1::__compressed_pair.180", %"class.std::__1::__compressed_pair.185", %"class.std::__1::__compressed_pair.187", [4 x i8] }>
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175", %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { i64 }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { float }
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.196", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.196" = type { %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.205" }
%"class.WTF::Vector.205" = type { %"class.WTF::VectorBuffer.206" }
%"class.WTF::VectorBuffer.206" = type { %"class.WTF::VectorBufferBase.207" }
%"class.WTF::VectorBufferBase.207" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.221" }
%"class.WTF::VectorBuffer.221" = type { %"class.WTF::VectorBufferBase.222" }
%"class.WTF::VectorBufferBase.222" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.223" = type { %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.229" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.235" }
%"class.std::__1::unique_ptr.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.124"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.131"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.138"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.145"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.152"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.258" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.259" }
%"struct.std::__1::__compressed_pair_elem.259" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.241" = type { %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.247" = type { %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.253 }
%class.scoped_refptr.253 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.254" = type { %"struct.std::__1::__atomic_base.255" }
%"struct.std::__1::__atomic_base.255" = type { %"struct.std::__1::__cxx_atomic_impl.256" }
%"struct.std::__1::__cxx_atomic_impl.256" = type { %"struct.std::__1::__cxx_atomic_base_impl.257" }
%"struct.std::__1::__cxx_atomic_base_impl.257" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.265" }
%"class.blink::HeapHashMap.265" = type { %"class.WTF::HashMap.268" }
%"class.WTF::HashMap.268" = type { %"class.WTF::HashTable.269" }
%"class.WTF::HashTable.269" = type <{ %"struct.WTF::KeyValuePair.271"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.271" = type { %"class.blink::WeakMember.272", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.272" = type { %"class.blink::MemberBase.273" }
%"class.blink::MemberBase.273" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::DOMMatrix" = type { %"class.blink::DOMMatrixReadOnly.base", [7 x i8] }
%"class.blink::DOMMatrixReadOnly.base" = type <{ %"class.blink::ScriptWrappable", %"class.blink::TransformationMatrix", i8 }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::DOMMatrixReadOnly" = type <{ %"class.blink::ScriptWrappable", %"class.blink::TransformationMatrix", i8, [7 x i8] }>
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.24", i32, i8, [3 x i8], %"class.blink::HeapVector", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.30", %"class.blink::Member.32", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.41", %"class.blink::Member.47", %"class.blink::Member.49", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.6" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.4" }
%"class.WTF::HashTable.4" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::Supplementable.6" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.7" }
%"class.blink::HeapHashMap.7" = type { %"class.WTF::HashMap.10" }
%"class.WTF::HashMap.10" = type { %"class.WTF::HashTable.11" }
%"class.WTF::HashTable.11" = type <{ %"struct.WTF::KeyValuePair.13"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.13" = type { i8*, %"class.blink::Member.73" }
%"class.blink::Member.73" = type { %"class.blink::MemberBase.74" }
%"class.blink::MemberBase.74" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.75" }
%"class.blink::Member.75" = type { %"class.blink::MemberBase.76" }
%"class.blink::MemberBase.76" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.15", %"class.std::__1::unique_ptr.15", %"class.blink::Member", i32, [4 x i8], %"class.WTF::HashSet.21", i32, i32 }
%class.scoped_refptr = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ExecutionContext"* }
%"class.WTF::HashSet.21" = type { %"class.WTF::HashTable.22" }
%"class.WTF::HashTable.22" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.24" = type { %"class.blink::MemberBase.25" }
%"class.blink::MemberBase.25" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member.28"*, i32, i32 }
%"class.blink::Member.28" = type opaque
%"class.blink::Member.30" = type { %"class.blink::MemberBase.31" }
%"class.blink::MemberBase.31" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.32" = type { %"class.blink::MemberBase.33" }
%"class.blink::MemberBase.33" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.34", i32, i32 }
%"class.blink::HeapHashMap.34" = type { %"class.WTF::HashMap.37" }
%"class.WTF::HashMap.37" = type { %"class.WTF::HashTable.38" }
%"class.WTF::HashTable.38" = type <{ %"struct.WTF::KeyValuePair.40"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.40" = type opaque
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.47" = type { %"class.blink::MemberBase.48" }
%"class.blink::MemberBase.48" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.49" = type { %"class.blink::MemberBase.50" }
%"class.blink::MemberBase.50" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.53" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.WTF::String" = type { %class.scoped_refptr.51 }
%class.scoped_refptr.51 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.52" }
%"struct.std::__1::__atomic_base.52" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::TraceWrapperV8Reference.53" = type { %"class.v8::TracedReference.54" }
%"class.v8::TracedReference.54" = type { %"class.v8::BasicTracedReference.55" }
%"class.v8::BasicTracedReference.55" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::V8UnionStringOrUnrestrictedDoubleSequence" = type { %"class.blink::bindings::UnionBase", i32, %"class.WTF::String", %"class.WTF::Vector.58" }
%"class.blink::bindings::UnionBase" = type { i32 (...)** }
%"class.WTF::Vector.58" = type { %"class.WTF::VectorBuffer.59" }
%"class.WTF::VectorBuffer.59" = type { %"class.WTF::VectorBufferBase.60" }
%"class.WTF::VectorBufferBase.60" = type { double*, i32, i32 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.blink::NotShared" = type { %"class.blink::Member.63" }
%"class.blink::Member.63" = type { %"class.blink::MemberBase.64" }
%"class.blink::MemberBase.64" = type { %"class.blink::DOMTypedArray"* }
%"class.blink::DOMTypedArray" = type { %"class.blink::DOMArrayBufferView", i64 }
%"class.blink::DOMArrayBufferView" = type { %"class.blink::ScriptWrappable", i8*, i64, %"class.blink::Member.65" }
%"class.blink::Member.65" = type { %"class.blink::MemberBase.66" }
%"class.blink::MemberBase.66" = type { %"class.blink::DOMArrayBufferBase"* }
%"class.blink::DOMArrayBufferBase" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8, [7 x i8] }>
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.blink::NotShared.67" = type { %"class.blink::Member.68" }
%"class.blink::Member.68" = type { %"class.blink::MemberBase.69" }
%"class.blink::MemberBase.69" = type { %"class.blink::DOMTypedArray.70"* }
%"class.blink::DOMTypedArray.70" = type { %"class.blink::DOMArrayBufferView", i64 }
%"class.blink::DOMMatrixInit" = type { %"class.blink::DOMMatrix2DInit", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, double, double, double, double, double, double, double, double, double, double }
%"class.blink::DOMMatrix2DInit" = type { %"class.blink::IDLDictionaryBase", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, double, double, double, double, double, double, double, double, double, double, double, double }
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.blink::AffineTransform" = type { [6 x double] }
%"class.v8::Value" = type { i8 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.278, %"class.blink::Member.279", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.278 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.279" = type { %"class.blink::MemberBase.280" }
%"class.blink::MemberBase.280" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.281" }
%"class.blink::Persistent.281" = type { %"class.blink::PersistentBase.282" }
%"class.blink::PersistentBase.282" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.303" }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.304" }
%"struct.std::__1::__compressed_pair_elem.304" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN5blink9DOMMatrixD0Ev = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink15ScriptWrappable17HasEventListenersEv = comdat any

$_ZNK5blink17DOMMatrixReadOnly5TraceEPNS_7VisitorE = comdat any

$_ZNK5blink9DOMMatrix18GetWrapperTypeInfoEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_9DOMMatrixEE4CallIJRKN3WTF6VectorIdLj0ENS4_18PartitionAllocatorEEEjEEEPS1_DpOT_ = comdat any

$_ZN5blink9DOMMatrixC2IN3WTF6VectorIdLj0ENS2_18PartitionAllocatorEEEEET_i = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIdEEmm = comdat any

$_ZN5blink17DOMMatrixReadOnlyC2IN3WTF6VectorIdLj0ENS2_18PartitionAllocatorEEEEET_i = comdat any

$_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN5blink17DOMMatrixReadOnlyC2IPdEET_i = comdat any

$_ZN5blink17DOMMatrixReadOnlyC2IPfEET_i = comdat any

$_ZTVN5blink9DOMMatrixE = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [56 x i8] c"DOMMatrix can't be constructed with strings on workers.\00", align 1
@.str.1 = private unnamed_addr constant [85 x i8] c"The sequence must contain 6 elements for a 2D matrix or 16 elements for a 3D matrix.\00", align 1
@_ZTVN5blink9DOMMatrixE = linkonce_odr hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::DOMMatrixReadOnly"*)* @_ZN5blink17DOMMatrixReadOnlyD2Ev to i8*), i8* bitcast (void (%"class.blink::DOMMatrix"*)* @_ZN5blink9DOMMatrixD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::DOMMatrixReadOnly"*, %"class.blink::Visitor"*)* @_ZNK5blink17DOMMatrixReadOnly5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::DOMMatrix"*)* @_ZNK5blink9DOMMatrix18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*)] }, comdat, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.3 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.4 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.5 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIdEEPKcv = private unnamed_addr constant [54 x i8] c"const char *WTF::GetStringWithTypeName() [T = double]\00", align 1
@_ZTVN5blink17DOMMatrixReadOnlyE = external unnamed_addr constant { [11 x i8*] }, align 8
@.str.6 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.7 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@_ZN5blink9DOMMatrix18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8

@_ZN5blink9DOMMatrixC1ERKNS_20TransformationMatrixEb = hidden unnamed_addr alias void (%"class.blink::DOMMatrix"*, %"class.blink::TransformationMatrix"*, i1), void (%"class.blink::DOMMatrix"*, %"class.blink::TransformationMatrix"*, i1)* @_ZN5blink9DOMMatrixC2ERKNS_20TransformationMatrixEb

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix6CreateEv() local_unnamed_addr #0 align 2 {
  %1 = alloca %"class.blink::TransformationMatrix", align 8
  %2 = bitcast %"class.blink::TransformationMatrix"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %2) #8
  %3 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %1, i64 0, i32 0, i32 0, i64 0, i64 0
  store double 1.000000e+00, double* %3, align 8
  %4 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %1, i64 0, i32 0, i32 0, i64 0, i64 1
  %5 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %1, i64 0, i32 0, i32 0, i64 1, i64 1
  %6 = bitcast double* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 32, i1 false) #8
  store double 1.000000e+00, double* %5, align 8
  %7 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %1, i64 0, i32 0, i32 0, i64 1, i64 2
  %8 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %1, i64 0, i32 0, i32 0, i64 2, i64 2
  %9 = bitcast double* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 32, i1 false) #8
  store double 1.000000e+00, double* %8, align 8
  %10 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %1, i64 0, i32 0, i32 0, i64 2, i64 3
  %11 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %1, i64 0, i32 0, i32 0, i64 3, i64 3
  %12 = bitcast double* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 32, i1 false) #8
  store double 1.000000e+00, double* %11, align 8
  %13 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 152) #8
  %14 = bitcast i8* %13 to %"class.blink::DOMMatrix"*
  %15 = bitcast i8* %13 to %"class.blink::DOMMatrixReadOnly"*
  call void @_ZN5blink17DOMMatrixReadOnlyC2ERKNS_20TransformationMatrixEb(%"class.blink::DOMMatrixReadOnly"* %15, %"class.blink::TransformationMatrix"* nonnull dereferenceable(128) %1, i1 zeroext true) #8
  %16 = bitcast i8* %13 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink9DOMMatrixE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %17 = getelementptr inbounds i8, i8* %13, i64 -4
  %18 = bitcast i8* %17 to i16*
  %19 = load atomic i16, i16* %18 monotonic, align 2
  %20 = or i16 %19, 1
  store atomic i16 %20, i16* %18 release, align 2
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %2) #8
  ret %"class.blink::DOMMatrix"* %14
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix6CreateEPNS_16ExecutionContextERNS_14ExceptionStateE(%"class.blink::ExecutionContext"* nocapture readnone, %"class.blink::ExceptionState"* nocapture readnone dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::TransformationMatrix", align 8
  %4 = bitcast %"class.blink::TransformationMatrix"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %4) #8
  %5 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %3, i64 0, i32 0, i32 0, i64 0, i64 0
  store double 1.000000e+00, double* %5, align 8
  %6 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %3, i64 0, i32 0, i32 0, i64 0, i64 1
  %7 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %3, i64 0, i32 0, i32 0, i64 1, i64 1
  %8 = bitcast double* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 32, i1 false) #8
  store double 1.000000e+00, double* %7, align 8
  %9 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %3, i64 0, i32 0, i32 0, i64 1, i64 2
  %10 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %3, i64 0, i32 0, i32 0, i64 2, i64 2
  %11 = bitcast double* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 32, i1 false) #8
  store double 1.000000e+00, double* %10, align 8
  %12 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %3, i64 0, i32 0, i32 0, i64 2, i64 3
  %13 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %3, i64 0, i32 0, i32 0, i64 3, i64 3
  %14 = bitcast double* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 32, i1 false) #8
  store double 1.000000e+00, double* %13, align 8
  %15 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 152) #8
  %16 = bitcast i8* %15 to %"class.blink::DOMMatrix"*
  %17 = bitcast i8* %15 to %"class.blink::DOMMatrixReadOnly"*
  call void @_ZN5blink17DOMMatrixReadOnlyC2ERKNS_20TransformationMatrixEb(%"class.blink::DOMMatrixReadOnly"* %17, %"class.blink::TransformationMatrix"* nonnull dereferenceable(128) %3, i1 zeroext true) #8
  %18 = bitcast i8* %15 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink9DOMMatrixE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8
  %19 = getelementptr inbounds i8, i8* %15, i64 -4
  %20 = bitcast i8* %19 to i16*
  %21 = load atomic i16, i16* %20 monotonic, align 2
  %22 = or i16 %21, 1
  store atomic i16 %22, i16* %20 release, align 2
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %4) #8
  ret %"class.blink::DOMMatrix"* %16
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix6CreateEPNS_16ExecutionContextEPKNS_41V8UnionStringOrUnrestrictedDoubleSequenceERNS_14ExceptionStateE(%"class.blink::ExecutionContext"*, %"class.blink::V8UnionStringOrUnrestrictedDoubleSequence"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::TransformationMatrix", align 8
  %5 = alloca i32, align 4
  %6 = getelementptr inbounds %"class.blink::V8UnionStringOrUnrestrictedDoubleSequence", %"class.blink::V8UnionStringOrUnrestrictedDoubleSequence"* %1, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  switch i32 %7, label %44 [
    i32 0, label %8
    i32 1, label %36
  ]

8:                                                ; preds = %3
  %9 = bitcast %"class.blink::ExecutionContext"* %0 to i1 (%"class.blink::ExecutionContext"*)***
  %10 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %10, i64 1
  %12 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.blink::ExecutionContext"* %0) #8
  br i1 %13, label %15, label %14

14:                                               ; preds = %8
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %2, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str, i64 0, i64 0)) #8
  br label %44

15:                                               ; preds = %8
  %16 = bitcast %"class.blink::TransformationMatrix"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %16) #8
  %17 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %4, i64 0, i32 0, i32 0, i64 0, i64 0
  store double 1.000000e+00, double* %17, align 8
  %18 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %4, i64 0, i32 0, i32 0, i64 0, i64 1
  %19 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %4, i64 0, i32 0, i32 0, i64 1, i64 1
  %20 = bitcast double* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 32, i1 false) #8
  store double 1.000000e+00, double* %19, align 8
  %21 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %4, i64 0, i32 0, i32 0, i64 1, i64 2
  %22 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %4, i64 0, i32 0, i32 0, i64 2, i64 2
  %23 = bitcast double* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 32, i1 false) #8
  store double 1.000000e+00, double* %22, align 8
  %24 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %4, i64 0, i32 0, i32 0, i64 2, i64 3
  %25 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %4, i64 0, i32 0, i32 0, i64 3, i64 3
  %26 = bitcast double* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 32, i1 false) #8
  store double 1.000000e+00, double* %25, align 8
  %27 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 152) #8
  %28 = bitcast i8* %27 to %"class.blink::DOMMatrix"*
  %29 = bitcast i8* %27 to %"class.blink::DOMMatrixReadOnly"*
  call void @_ZN5blink17DOMMatrixReadOnlyC2ERKNS_20TransformationMatrixEb(%"class.blink::DOMMatrixReadOnly"* %29, %"class.blink::TransformationMatrix"* nonnull dereferenceable(128) %4, i1 zeroext true) #8
  %30 = bitcast i8* %27 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink9DOMMatrixE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %30, align 8
  %31 = getelementptr inbounds i8, i8* %27, i64 -4
  %32 = bitcast i8* %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = or i16 %33, 1
  store atomic i16 %34, i16* %32 release, align 2
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %16) #8
  %35 = getelementptr inbounds %"class.blink::V8UnionStringOrUnrestrictedDoubleSequence", %"class.blink::V8UnionStringOrUnrestrictedDoubleSequence"* %1, i64 0, i32 2
  call void @_ZN5blink17DOMMatrixReadOnly24SetMatrixValueFromStringEPKNS_16ExecutionContextERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::DOMMatrixReadOnly"* %29, %"class.blink::ExecutionContext"* %0, %"class.WTF::String"* dereferenceable(8) %35, %"class.blink::ExceptionState"* dereferenceable(72) %2) #8
  br label %44

36:                                               ; preds = %3
  %37 = getelementptr inbounds %"class.blink::V8UnionStringOrUnrestrictedDoubleSequence", %"class.blink::V8UnionStringOrUnrestrictedDoubleSequence"* %1, i64 0, i32 3, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  switch i32 %38, label %39 [
    i32 6, label %40
    i32 16, label %40
  ]

39:                                               ; preds = %36
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %2, i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.1, i64 0, i64 0)) #8
  br label %44

40:                                               ; preds = %36, %36
  %41 = getelementptr inbounds %"class.blink::V8UnionStringOrUnrestrictedDoubleSequence", %"class.blink::V8UnionStringOrUnrestrictedDoubleSequence"* %1, i64 0, i32 3
  %42 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %42) #8
  store i32 %38, i32* %5, align 4
  %43 = call %"class.blink::DOMMatrix"* @_ZN5blink25MakeGarbageCollectedTraitINS_9DOMMatrixEE4CallIJRKN3WTF6VectorIdLj0ENS4_18PartitionAllocatorEEEjEEEPS1_DpOT_(%"class.WTF::Vector.58"* dereferenceable(16) %41, i32* nonnull dereferenceable(4) %5) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %42) #8
  br label %44

44:                                               ; preds = %3, %39, %40, %15, %14
  %45 = phi %"class.blink::DOMMatrix"* [ %28, %15 ], [ null, %14 ], [ null, %39 ], [ %43, %40 ], [ null, %3 ]
  ret %"class.blink::DOMMatrix"* %45
}

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #2

declare void @_ZN5blink17DOMMatrixReadOnly24SetMatrixValueFromStringEPKNS_16ExecutionContextERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::DOMMatrixReadOnly"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix6CreateEPNS_17DOMMatrixReadOnlyERNS_14ExceptionStateE(%"class.blink::DOMMatrixReadOnly"*, %"class.blink::ExceptionState"* nocapture readnone dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1
  %4 = tail call zeroext i1 @_ZNK5blink17DOMMatrixReadOnly4is2DEv(%"class.blink::DOMMatrixReadOnly"* %0) #8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 152) #8
  %6 = bitcast i8* %5 to %"class.blink::DOMMatrix"*
  %7 = bitcast i8* %5 to %"class.blink::DOMMatrixReadOnly"*
  tail call void @_ZN5blink17DOMMatrixReadOnlyC2ERKNS_20TransformationMatrixEb(%"class.blink::DOMMatrixReadOnly"* %7, %"class.blink::TransformationMatrix"* dereferenceable(128) %3, i1 zeroext %4) #8
  %8 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink9DOMMatrixE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds i8, i8* %5, i64 -4
  %10 = bitcast i8* %9 to i16*
  %11 = load atomic i16, i16* %10 monotonic, align 2
  %12 = or i16 %11, 1
  store atomic i16 %12, i16* %10 release, align 2
  ret %"class.blink::DOMMatrix"* %6
}

declare zeroext i1 @_ZNK5blink17DOMMatrixReadOnly4is2DEv(%"class.blink::DOMMatrixReadOnly"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix6CreateERK10SkMatrix44RNS_14ExceptionStateE(%class.SkMatrix44* nocapture readonly dereferenceable(68), %"class.blink::ExceptionState"* nocapture readnone dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::TransformationMatrix", align 16
  %4 = bitcast %"class.blink::TransformationMatrix"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %4) #8
  %5 = bitcast %class.SkMatrix44* %0 to <2 x float>*
  %6 = load <2 x float>, <2 x float>* %5, align 4
  %7 = fpext <2 x float> %6 to <2 x double>
  %8 = getelementptr inbounds %class.SkMatrix44, %class.SkMatrix44* %0, i64 0, i32 0, i64 0, i64 2
  %9 = bitcast float* %8 to <2 x float>*
  %10 = load <2 x float>, <2 x float>* %9, align 4
  %11 = fpext <2 x float> %10 to <2 x double>
  %12 = getelementptr inbounds %class.SkMatrix44, %class.SkMatrix44* %0, i64 0, i32 0, i64 1, i64 0
  %13 = bitcast float* %12 to <2 x float>*
  %14 = load <2 x float>, <2 x float>* %13, align 4
  %15 = fpext <2 x float> %14 to <2 x double>
  %16 = getelementptr inbounds %class.SkMatrix44, %class.SkMatrix44* %0, i64 0, i32 0, i64 1, i64 2
  %17 = bitcast float* %16 to <2 x float>*
  %18 = load <2 x float>, <2 x float>* %17, align 4
  %19 = fpext <2 x float> %18 to <2 x double>
  %20 = getelementptr inbounds %class.SkMatrix44, %class.SkMatrix44* %0, i64 0, i32 0, i64 2, i64 0
  %21 = bitcast float* %20 to <2 x float>*
  %22 = load <2 x float>, <2 x float>* %21, align 4
  %23 = shufflevector <2 x float> %22, <2 x float> undef, <8 x i32> <i32 0, i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %24 = fpext <2 x float> %22 to <2 x double>
  %25 = getelementptr inbounds %class.SkMatrix44, %class.SkMatrix44* %0, i64 0, i32 0, i64 2, i64 2
  %26 = bitcast float* %25 to <2 x float>*
  %27 = load <2 x float>, <2 x float>* %26, align 4
  %28 = shufflevector <2 x float> %27, <2 x float> undef, <8 x i32> <i32 0, i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %29 = fpext <2 x float> %27 to <2 x double>
  %30 = getelementptr inbounds %class.SkMatrix44, %class.SkMatrix44* %0, i64 0, i32 0, i64 3, i64 0
  %31 = bitcast float* %30 to <2 x float>*
  %32 = load <2 x float>, <2 x float>* %31, align 4
  %33 = fpext <2 x float> %32 to <2 x double>
  %34 = getelementptr inbounds %class.SkMatrix44, %class.SkMatrix44* %0, i64 0, i32 0, i64 3, i64 2
  %35 = bitcast float* %34 to <2 x float>*
  %36 = load <2 x float>, <2 x float>* %35, align 4
  %37 = fpext <2 x float> %36 to <2 x double>
  %38 = bitcast %"class.blink::TransformationMatrix"* %3 to <2 x double>*
  store <2 x double> %7, <2 x double>* %38, align 16
  %39 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %3, i64 0, i32 0, i32 0, i64 0, i64 2
  %40 = bitcast double* %39 to <2 x double>*
  store <2 x double> %11, <2 x double>* %40, align 16
  %41 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %3, i64 0, i32 0, i32 0, i64 1, i64 0
  %42 = bitcast double* %41 to <2 x double>*
  store <2 x double> %15, <2 x double>* %42, align 16
  %43 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %3, i64 0, i32 0, i32 0, i64 1, i64 2
  %44 = bitcast double* %43 to <2 x double>*
  store <2 x double> %19, <2 x double>* %44, align 16
  %45 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %3, i64 0, i32 0, i32 0, i64 2, i64 0
  %46 = bitcast double* %45 to <2 x double>*
  store <2 x double> %24, <2 x double>* %46, align 16
  %47 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %3, i64 0, i32 0, i32 0, i64 2, i64 2
  %48 = bitcast double* %47 to <2 x double>*
  store <2 x double> %29, <2 x double>* %48, align 16
  %49 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %3, i64 0, i32 0, i32 0, i64 3, i64 0
  %50 = bitcast double* %49 to <2 x double>*
  store <2 x double> %33, <2 x double>* %50, align 16
  %51 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %3, i64 0, i32 0, i32 0, i64 3, i64 2
  %52 = bitcast double* %51 to <2 x double>*
  store <2 x double> %37, <2 x double>* %52, align 16
  %53 = shufflevector <2 x float> %10, <2 x float> %18, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef>
  %54 = shufflevector <8 x float> %53, <8 x float> %23, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 undef, i32 undef>
  %55 = shufflevector <8 x float> %54, <8 x float> %28, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>
  %56 = fcmp oeq <8 x float> %55, <float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00>
  %57 = extractelement <2 x float> %36, i32 0
  %58 = fcmp oeq float %57, 0.000000e+00
  %59 = extractelement <2 x float> %36, i32 1
  %60 = fcmp oeq float %59, 1.000000e+00
  %61 = shufflevector <8 x i1> %56, <8 x i1> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %62 = and <8 x i1> %56, %61
  %63 = shufflevector <8 x i1> %62, <8 x i1> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %64 = and <8 x i1> %62, %63
  %65 = shufflevector <8 x i1> %64, <8 x i1> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %66 = and <8 x i1> %64, %65
  %67 = extractelement <8 x i1> %66, i32 0
  %68 = and i1 %67, %58
  %69 = and i1 %68, %60
  %70 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 152) #8
  %71 = bitcast i8* %70 to %"class.blink::DOMMatrix"*
  %72 = bitcast i8* %70 to %"class.blink::DOMMatrixReadOnly"*
  call void @_ZN5blink17DOMMatrixReadOnlyC2ERKNS_20TransformationMatrixEb(%"class.blink::DOMMatrixReadOnly"* %72, %"class.blink::TransformationMatrix"* nonnull dereferenceable(128) %3, i1 zeroext %69) #8
  %73 = bitcast i8* %70 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink9DOMMatrixE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %73, align 8
  %74 = getelementptr inbounds i8, i8* %70, i64 -4
  %75 = bitcast i8* %74 to i16*
  %76 = load atomic i16, i16* %75 monotonic, align 2
  %77 = or i16 %76, 1
  store atomic i16 %77, i16* %75 release, align 2
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %4) #8
  ret %"class.blink::DOMMatrix"* %71
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix22CreateForSerializationEPdi(double*, i32) local_unnamed_addr #0 align 2 {
  %3 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 152) #8
  %4 = bitcast i8* %3 to %"class.blink::DOMMatrix"*
  %5 = bitcast i8* %3 to %"class.blink::DOMMatrixReadOnly"*
  tail call void @_ZN5blink17DOMMatrixReadOnlyC2IPdEET_i(%"class.blink::DOMMatrixReadOnly"* %5, double* %0, i32 %1) #8
  %6 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink9DOMMatrixE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds i8, i8* %3, i64 -4
  %8 = bitcast i8* %7 to i16*
  %9 = load atomic i16, i16* %8 monotonic, align 2
  %10 = or i16 %9, 1
  store atomic i16 %10, i16* %8 release, align 2
  ret %"class.blink::DOMMatrix"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix16fromFloat32ArrayENS_9NotSharedINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEEEERNS_14ExceptionStateE(%"class.blink::NotShared"* nocapture readonly, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::NotShared", %"class.blink::NotShared"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::DOMTypedArray"*, %"class.blink::DOMTypedArray"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::DOMTypedArray", %"class.blink::DOMTypedArray"* %4, i64 0, i32 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %6, i64 0, i32 2
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::DOMTypedArray", %"class.blink::DOMTypedArray"* %4, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  switch i64 %12, label %13 [
    i64 6, label %14
    i64 16, label %14
  ]

13:                                               ; preds = %10, %2
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %1, i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.1, i64 0, i64 0)) #8
  br label %27

14:                                               ; preds = %10, %10
  %15 = getelementptr inbounds %"class.blink::DOMTypedArray", %"class.blink::DOMTypedArray"* %4, i64 0, i32 0, i32 1
  %16 = bitcast i8** %15 to float**
  %17 = load float*, float** %16, align 8
  %18 = trunc i64 %12 to i32
  %19 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 152) #8
  %20 = bitcast i8* %19 to %"class.blink::DOMMatrix"*
  %21 = bitcast i8* %19 to %"class.blink::DOMMatrixReadOnly"*
  tail call void @_ZN5blink17DOMMatrixReadOnlyC2IPfEET_i(%"class.blink::DOMMatrixReadOnly"* %21, float* %17, i32 %18) #8
  %22 = bitcast i8* %19 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink9DOMMatrixE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %23 = getelementptr inbounds i8, i8* %19, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  br label %27

27:                                               ; preds = %14, %13
  %28 = phi %"class.blink::DOMMatrix"* [ null, %13 ], [ %20, %14 ]
  ret %"class.blink::DOMMatrix"* %28
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix16fromFloat64ArrayENS_9NotSharedINS_13DOMTypedArrayIdN2v812Float64ArrayELb0EEEEERNS_14ExceptionStateE(%"class.blink::NotShared.67"* nocapture readonly, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::NotShared.67", %"class.blink::NotShared.67"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::DOMTypedArray.70"*, %"class.blink::DOMTypedArray.70"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::DOMTypedArray.70", %"class.blink::DOMTypedArray.70"* %4, i64 0, i32 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %6, i64 0, i32 2
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::DOMTypedArray.70", %"class.blink::DOMTypedArray.70"* %4, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  switch i64 %12, label %13 [
    i64 6, label %14
    i64 16, label %14
  ]

13:                                               ; preds = %10, %2
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %1, i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.1, i64 0, i64 0)) #8
  br label %27

14:                                               ; preds = %10, %10
  %15 = getelementptr inbounds %"class.blink::DOMTypedArray.70", %"class.blink::DOMTypedArray.70"* %4, i64 0, i32 0, i32 1
  %16 = bitcast i8** %15 to double**
  %17 = load double*, double** %16, align 8
  %18 = trunc i64 %12 to i32
  %19 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 152) #8
  %20 = bitcast i8* %19 to %"class.blink::DOMMatrix"*
  %21 = bitcast i8* %19 to %"class.blink::DOMMatrixReadOnly"*
  tail call void @_ZN5blink17DOMMatrixReadOnlyC2IPdEET_i(%"class.blink::DOMMatrixReadOnly"* %21, double* %17, i32 %18) #8
  %22 = bitcast i8* %19 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink9DOMMatrixE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %23 = getelementptr inbounds i8, i8* %19, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  br label %27

27:                                               ; preds = %14, %13
  %28 = phi %"class.blink::DOMMatrix"* [ null, %13 ], [ %20, %14 ]
  ret %"class.blink::DOMMatrix"* %28
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9DOMMatrixC2ERKNS_20TransformationMatrixEb(%"class.blink::DOMMatrix"*, %"class.blink::TransformationMatrix"* dereferenceable(128), i1 zeroext) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.blink::DOMMatrix"* %0 to %"class.blink::DOMMatrixReadOnly"*
  tail call void @_ZN5blink17DOMMatrixReadOnlyC2ERKNS_20TransformationMatrixEb(%"class.blink::DOMMatrixReadOnly"* %4, %"class.blink::TransformationMatrix"* dereferenceable(128) %1, i1 zeroext %2) #8
  %5 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink9DOMMatrixE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  ret void
}

declare void @_ZN5blink17DOMMatrixReadOnlyC2ERKNS_20TransformationMatrixEb(%"class.blink::DOMMatrixReadOnly"*, %"class.blink::TransformationMatrix"* dereferenceable(128), i1 zeroext) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix10fromMatrixEPNS_13DOMMatrixInitERNS_14ExceptionStateE(%"class.blink::DOMMatrixInit"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::TransformationMatrix", align 16
  %4 = alloca %"class.blink::TransformationMatrix", align 16
  %5 = tail call zeroext i1 @_ZN5blink17DOMMatrixReadOnly16ValidateAndFixupEPNS_13DOMMatrixInitERNS_14ExceptionStateE(%"class.blink::DOMMatrixInit"* %0, %"class.blink::ExceptionState"* dereferenceable(72) %1) #8
  br i1 %5, label %6, label %88

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 12
  %8 = load i8, i8* %7, align 1, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %36, label %10

10:                                               ; preds = %6
  %11 = bitcast %"class.blink::TransformationMatrix"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %11) #8
  %12 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 0, i32 19
  %13 = bitcast double* %12 to <2 x i64>*
  %14 = load <2 x i64>, <2 x i64>* %13, align 8
  %15 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 0, i32 21
  %16 = bitcast double* %15 to <2 x i64>*
  %17 = load <2 x i64>, <2 x i64>* %16, align 8
  %18 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 0, i32 23
  %19 = bitcast double* %18 to <2 x i64>*
  %20 = load <2 x i64>, <2 x i64>* %19, align 8
  %21 = bitcast %"class.blink::TransformationMatrix"* %3 to <2 x i64>*
  store <2 x i64> %14, <2 x i64>* %21, align 16
  %22 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %3, i64 0, i32 0, i32 0, i64 0, i64 2
  %23 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %3, i64 0, i32 0, i32 0, i64 1, i64 0
  %24 = bitcast double* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %24, i8 0, i64 16, i1 false) #8
  %25 = bitcast double* %23 to <2 x i64>*
  store <2 x i64> %17, <2 x i64>* %25, align 16
  %26 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %3, i64 0, i32 0, i32 0, i64 1, i64 2
  %27 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %3, i64 0, i32 0, i32 0, i64 2, i64 2
  %28 = bitcast double* %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %28, i8 0, i64 32, i1 false) #8
  %29 = bitcast double* %27 to <2 x double>*
  store <2 x double> <double 1.000000e+00, double 0.000000e+00>, <2 x double>* %29, align 16
  %30 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %3, i64 0, i32 0, i32 0, i64 3, i64 0
  %31 = bitcast double* %30 to <2 x i64>*
  store <2 x i64> %20, <2 x i64>* %31, align 16
  %32 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %3, i64 0, i32 0, i32 0, i64 3, i64 2
  %33 = bitcast double* %32 to <2 x double>*
  store <2 x double> <double 0.000000e+00, double 1.000000e+00>, <2 x double>* %33, align 16
  %34 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 152) #8
  %35 = bitcast i8* %34 to %"class.blink::DOMMatrixReadOnly"*
  call void @_ZN5blink17DOMMatrixReadOnlyC2ERKNS_20TransformationMatrixEb(%"class.blink::DOMMatrixReadOnly"* %35, %"class.blink::TransformationMatrix"* nonnull dereferenceable(128) %3, i1 zeroext true) #8
  br label %79

36:                                               ; preds = %6
  %37 = bitcast %"class.blink::TransformationMatrix"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %37) #8
  %38 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 0, i32 19
  %39 = bitcast double* %38 to <2 x i64>*
  %40 = load <2 x i64>, <2 x i64>* %39, align 8
  %41 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 13
  %42 = bitcast double* %41 to <2 x i64>*
  %43 = load <2 x i64>, <2 x i64>* %42, align 8
  %44 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 0, i32 21
  %45 = bitcast double* %44 to <2 x i64>*
  %46 = load <2 x i64>, <2 x i64>* %45, align 8
  %47 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 15
  %48 = bitcast double* %47 to <2 x i64>*
  %49 = load <2 x i64>, <2 x i64>* %48, align 8
  %50 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 17
  %51 = bitcast double* %50 to <2 x i64>*
  %52 = load <2 x i64>, <2 x i64>* %51, align 8
  %53 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 19
  %54 = bitcast double* %53 to <2 x i64>*
  %55 = load <2 x i64>, <2 x i64>* %54, align 8
  %56 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 0, i32 23
  %57 = bitcast double* %56 to <2 x i64>*
  %58 = load <2 x i64>, <2 x i64>* %57, align 8
  %59 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 21
  %60 = bitcast double* %59 to <2 x i64>*
  %61 = load <2 x i64>, <2 x i64>* %60, align 8
  %62 = bitcast %"class.blink::TransformationMatrix"* %4 to <2 x i64>*
  store <2 x i64> %40, <2 x i64>* %62, align 16
  %63 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %4, i64 0, i32 0, i32 0, i64 0, i64 2
  %64 = bitcast double* %63 to <2 x i64>*
  store <2 x i64> %43, <2 x i64>* %64, align 16
  %65 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %4, i64 0, i32 0, i32 0, i64 1, i64 0
  %66 = bitcast double* %65 to <2 x i64>*
  store <2 x i64> %46, <2 x i64>* %66, align 16
  %67 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %4, i64 0, i32 0, i32 0, i64 1, i64 2
  %68 = bitcast double* %67 to <2 x i64>*
  store <2 x i64> %49, <2 x i64>* %68, align 16
  %69 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %4, i64 0, i32 0, i32 0, i64 2, i64 0
  %70 = bitcast double* %69 to <2 x i64>*
  store <2 x i64> %52, <2 x i64>* %70, align 16
  %71 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %4, i64 0, i32 0, i32 0, i64 2, i64 2
  %72 = bitcast double* %71 to <2 x i64>*
  store <2 x i64> %55, <2 x i64>* %72, align 16
  %73 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %4, i64 0, i32 0, i32 0, i64 3, i64 0
  %74 = bitcast double* %73 to <2 x i64>*
  store <2 x i64> %58, <2 x i64>* %74, align 16
  %75 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %4, i64 0, i32 0, i32 0, i64 3, i64 2
  %76 = bitcast double* %75 to <2 x i64>*
  store <2 x i64> %61, <2 x i64>* %76, align 16
  %77 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 152) #8
  %78 = bitcast i8* %77 to %"class.blink::DOMMatrixReadOnly"*
  call void @_ZN5blink17DOMMatrixReadOnlyC2ERKNS_20TransformationMatrixEb(%"class.blink::DOMMatrixReadOnly"* %78, %"class.blink::TransformationMatrix"* nonnull dereferenceable(128) %4, i1 zeroext false) #8
  br label %79

79:                                               ; preds = %10, %36
  %80 = phi i8* [ %34, %10 ], [ %77, %36 ]
  %81 = phi i8* [ %11, %10 ], [ %37, %36 ]
  %82 = bitcast i8* %80 to %"class.blink::DOMMatrix"*
  %83 = bitcast i8* %80 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink9DOMMatrixE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %83, align 8
  %84 = getelementptr inbounds i8, i8* %80, i64 -4
  %85 = bitcast i8* %84 to i16*
  %86 = load atomic i16, i16* %85 monotonic, align 2
  %87 = or i16 %86, 1
  store atomic i16 %87, i16* %85 release, align 2
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %81) #8
  br label %88

88:                                               ; preds = %79, %2
  %89 = phi %"class.blink::DOMMatrix"* [ null, %2 ], [ %82, %79 ]
  ret %"class.blink::DOMMatrix"* %89
}

declare zeroext i1 @_ZN5blink17DOMMatrixReadOnly16ValidateAndFixupEPNS_13DOMMatrixInitERNS_14ExceptionStateE(%"class.blink::DOMMatrixInit"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink9DOMMatrix7SetIs2DEb(%"class.blink::DOMMatrix"* nocapture, i1 zeroext) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %0, i64 0, i32 0, i32 2
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = zext i1 %1 to i8
  store i8 %7, i8* %3, align 8
  br label %8

8:                                                ; preds = %2, %6
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink9DOMMatrix6SetNANEv(%"class.blink::DOMMatrix"* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 0, i64 0
  %3 = bitcast double* %2 to <2 x double>*
  store <2 x double> <double 0x7FF8000000000000, double 0x7FF8000000000000>, <2 x double>* %3, align 8
  %4 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 0, i64 2
  %5 = bitcast double* %4 to <2 x double>*
  store <2 x double> <double 0x7FF8000000000000, double 0x7FF8000000000000>, <2 x double>* %5, align 8
  %6 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 1, i64 0
  %7 = bitcast double* %6 to <2 x double>*
  store <2 x double> <double 0x7FF8000000000000, double 0x7FF8000000000000>, <2 x double>* %7, align 8
  %8 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 1, i64 2
  %9 = bitcast double* %8 to <2 x double>*
  store <2 x double> <double 0x7FF8000000000000, double 0x7FF8000000000000>, <2 x double>* %9, align 8
  %10 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 2, i64 0
  %11 = bitcast double* %10 to <2 x double>*
  store <2 x double> <double 0x7FF8000000000000, double 0x7FF8000000000000>, <2 x double>* %11, align 8
  %12 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 2, i64 2
  %13 = bitcast double* %12 to <2 x double>*
  store <2 x double> <double 0x7FF8000000000000, double 0x7FF8000000000000>, <2 x double>* %13, align 8
  %14 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 3, i64 0
  %15 = bitcast double* %14 to <2 x double>*
  store <2 x double> <double 0x7FF8000000000000, double 0x7FF8000000000000>, <2 x double>* %15, align 8
  %16 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 3, i64 2
  %17 = bitcast double* %16 to <2 x double>*
  store <2 x double> <double 0x7FF8000000000000, double 0x7FF8000000000000>, <2 x double>* %17, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix12multiplySelfEPNS_13DOMMatrixInitERNS_14ExceptionStateE(%"class.blink::DOMMatrix"*, %"class.blink::DOMMatrixInit"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = tail call %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix10fromMatrixEPNS_13DOMMatrixInitERNS_14ExceptionStateE(%"class.blink::DOMMatrixInit"* %1, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  %5 = icmp eq %"class.blink::DOMMatrix"* %4, null
  br i1 %5, label %15, label %6

6:                                                ; preds = %3
  %7 = bitcast %"class.blink::DOMMatrix"* %4 to %"class.blink::DOMMatrixReadOnly"*
  %8 = tail call zeroext i1 @_ZNK5blink17DOMMatrixReadOnly4is2DEv(%"class.blink::DOMMatrixReadOnly"* nonnull %7) #8
  br i1 %8, label %11, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %0, i64 0, i32 0, i32 2
  store i8 0, i8* %10, align 8
  br label %11

11:                                               ; preds = %6, %9
  %12 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %4, i64 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %0, i64 0, i32 0, i32 1
  %14 = tail call dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix8MultiplyERKS0_(%"class.blink::TransformationMatrix"* %13, %"class.blink::TransformationMatrix"* dereferenceable(128) %12) #8
  br label %15

15:                                               ; preds = %3, %11
  %16 = phi %"class.blink::DOMMatrix"* [ %0, %11 ], [ null, %3 ]
  ret %"class.blink::DOMMatrix"* %16
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix12multiplySelfERKS0_(%"class.blink::DOMMatrix"* returned, %"class.blink::DOMMatrix"* dereferenceable(152)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::DOMMatrix"* %1 to %"class.blink::DOMMatrixReadOnly"*
  %4 = tail call zeroext i1 @_ZNK5blink17DOMMatrixReadOnly4is2DEv(%"class.blink::DOMMatrixReadOnly"* %3) #8
  br i1 %4, label %7, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %0, i64 0, i32 0, i32 2
  store i8 0, i8* %6, align 8
  br label %7

7:                                                ; preds = %5, %2
  %8 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %1, i64 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %0, i64 0, i32 0, i32 1
  %10 = tail call dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix8MultiplyERKS0_(%"class.blink::TransformationMatrix"* %9, %"class.blink::TransformationMatrix"* dereferenceable(128) %8) #8
  ret %"class.blink::DOMMatrix"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix15preMultiplySelfEPNS_13DOMMatrixInitERNS_14ExceptionStateE(%"class.blink::DOMMatrix"*, %"class.blink::DOMMatrixInit"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::TransformationMatrix", align 8
  %5 = tail call %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix10fromMatrixEPNS_13DOMMatrixInitERNS_14ExceptionStateE(%"class.blink::DOMMatrixInit"* %1, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  %6 = icmp eq %"class.blink::DOMMatrix"* %5, null
  br i1 %6, label %19, label %7

7:                                                ; preds = %3
  %8 = bitcast %"class.blink::DOMMatrix"* %5 to %"class.blink::DOMMatrixReadOnly"*
  %9 = tail call zeroext i1 @_ZNK5blink17DOMMatrixReadOnly4is2DEv(%"class.blink::DOMMatrixReadOnly"* nonnull %8) #8
  br i1 %9, label %12, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %0, i64 0, i32 0, i32 2
  store i8 0, i8* %11, align 8
  br label %12

12:                                               ; preds = %10, %7
  %13 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"class.blink::TransformationMatrix"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %14) #8
  %15 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %5, i64 0, i32 0, i32 1
  %16 = bitcast %"class.blink::TransformationMatrix"* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* align 8 %16, i64 128, i1 false) #8
  %17 = call dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix8MultiplyERKS0_(%"class.blink::TransformationMatrix"* nonnull %4, %"class.blink::TransformationMatrix"* dereferenceable(128) %13) #8
  %18 = bitcast %"class.blink::TransformationMatrix"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* nonnull align 8 %14, i64 128, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %14) #8
  br label %19

19:                                               ; preds = %3, %12
  %20 = phi %"class.blink::DOMMatrix"* [ %0, %12 ], [ null, %3 ]
  ret %"class.blink::DOMMatrix"* %20
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix13translateSelfEddd(%"class.blink::DOMMatrix"* returned, double, double, double) local_unnamed_addr #0 align 2 {
  %5 = fcmp une double %1, 0.000000e+00
  %6 = fcmp une double %2, 0.000000e+00
  %7 = or i1 %5, %6
  %8 = fcmp une double %3, 0.000000e+00
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %23

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %0, i64 0, i32 0, i32 2
  br i1 %8, label %12, label %14

12:                                               ; preds = %10
  store i8 0, i8* %11, align 8
  %13 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %0, i64 0, i32 0, i32 1
  br label %20

14:                                               ; preds = %10
  %15 = load i8, i8* %11, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  %17 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %0, i64 0, i32 0, i32 1
  br i1 %16, label %20, label %18

18:                                               ; preds = %14
  %19 = tail call dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix9TranslateEdd(%"class.blink::TransformationMatrix"* %17, double %1, double %2) #8
  br label %23

20:                                               ; preds = %12, %14
  %21 = phi %"class.blink::TransformationMatrix"* [ %13, %12 ], [ %17, %14 ]
  %22 = tail call dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix11Translate3dEddd(%"class.blink::TransformationMatrix"* %21, double %1, double %2, double %3) #8
  br label %23

23:                                               ; preds = %18, %20, %4
  ret %"class.blink::DOMMatrix"* %0
}

declare dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix9TranslateEdd(%"class.blink::TransformationMatrix"*, double, double) local_unnamed_addr #2

declare dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix11Translate3dEddd(%"class.blink::TransformationMatrix"*, double, double, double) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix9scaleSelfEd(%"class.blink::DOMMatrix"* returned, double) local_unnamed_addr #0 align 2 {
  %3 = fcmp oeq double %1, 1.000000e+00
  br i1 %3, label %13, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %0, i64 0, i32 0, i32 2
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  %8 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %0, i64 0, i32 0, i32 1
  br i1 %7, label %11, label %9

9:                                                ; preds = %4
  %10 = tail call dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix15ScaleNonUniformEdd(%"class.blink::TransformationMatrix"* %8, double %1, double %1) #8
  br label %13

11:                                               ; preds = %4
  %12 = tail call dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix7Scale3dEddd(%"class.blink::TransformationMatrix"* %8, double %1, double %1, double 1.000000e+00) #8
  br label %13

13:                                               ; preds = %9, %11, %2
  ret %"class.blink::DOMMatrix"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix9scaleSelfEdddddd(%"class.blink::DOMMatrix"* returned, double, double, double, double, double, double) local_unnamed_addr #0 align 2 {
  %8 = fcmp une double %3, 1.000000e+00
  %9 = fcmp une double %6, 0.000000e+00
  %10 = or i1 %8, %9
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %0, i64 0, i32 0, i32 2
  store i8 0, i8* %12, align 8
  br label %13

13:                                               ; preds = %7, %11
  %14 = fcmp oeq double %1, 1.000000e+00
  %15 = fcmp oeq double %2, 1.000000e+00
  %16 = and i1 %14, %15
  %17 = fcmp oeq double %3, 1.000000e+00
  %18 = and i1 %16, %17
  br i1 %18, label %59, label %19

19:                                               ; preds = %13
  %20 = fcmp une double %4, 0.000000e+00
  %21 = fcmp une double %5, 0.000000e+00
  %22 = or i1 %20, %21
  %23 = or i1 %22, %9
  br i1 %23, label %24, label %37

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %0, i64 0, i32 0, i32 2
  br i1 %9, label %26, label %28

26:                                               ; preds = %24
  store i8 0, i8* %25, align 8
  %27 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %0, i64 0, i32 0, i32 1
  br label %34

28:                                               ; preds = %24
  %29 = load i8, i8* %25, align 8, !range !2
  %30 = icmp eq i8 %29, 0
  %31 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %0, i64 0, i32 0, i32 1
  br i1 %30, label %34, label %32

32:                                               ; preds = %28
  %33 = tail call dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix9TranslateEdd(%"class.blink::TransformationMatrix"* %31, double %4, double %5) #8
  br label %37

34:                                               ; preds = %28, %26
  %35 = phi %"class.blink::TransformationMatrix"* [ %27, %26 ], [ %31, %28 ]
  %36 = tail call dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix11Translate3dEddd(%"class.blink::TransformationMatrix"* %35, double %4, double %5, double %6) #8
  br label %37

37:                                               ; preds = %34, %32, %19
  %38 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %0, i64 0, i32 0, i32 2
  %39 = load i8, i8* %38, align 8, !range !2
  %40 = icmp eq i8 %39, 0
  %41 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %0, i64 0, i32 0, i32 1
  br i1 %40, label %44, label %42

42:                                               ; preds = %37
  %43 = tail call dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix15ScaleNonUniformEdd(%"class.blink::TransformationMatrix"* %41, double %1, double %2) #8
  br label %46

44:                                               ; preds = %37
  %45 = tail call dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix7Scale3dEddd(%"class.blink::TransformationMatrix"* %41, double %1, double %2, double %3) #8
  br label %46

46:                                               ; preds = %44, %42
  br i1 %23, label %47, label %59

47:                                               ; preds = %46
  %48 = fsub double -0.000000e+00, %4
  %49 = fsub double -0.000000e+00, %5
  %50 = fsub double -0.000000e+00, %6
  br i1 %9, label %51, label %52

51:                                               ; preds = %47
  store i8 0, i8* %38, align 8
  br label %57

52:                                               ; preds = %47
  %53 = load i8, i8* %38, align 8, !range !2
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %57, label %55

55:                                               ; preds = %52
  %56 = tail call dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix9TranslateEdd(%"class.blink::TransformationMatrix"* %41, double %48, double %49) #8
  br label %59

57:                                               ; preds = %52, %51
  %58 = tail call dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix11Translate3dEddd(%"class.blink::TransformationMatrix"* %41, double %48, double %49, double %50) #8
  br label %59

59:                                               ; preds = %57, %55, %46, %13
  ret %"class.blink::DOMMatrix"* %0
}

declare dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix15ScaleNonUniformEdd(%"class.blink::TransformationMatrix"*, double, double) local_unnamed_addr #2

declare dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix7Scale3dEddd(%"class.blink::TransformationMatrix"*, double, double, double) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix11scale3dSelfEdddd(%"class.blink::DOMMatrix"* returned, double, double, double, double) local_unnamed_addr #0 align 2 {
  %6 = tail call %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix9scaleSelfEdddddd(%"class.blink::DOMMatrix"* %0, double %1, double %1, double %1, double %2, double %3, double %4)
  ret %"class.blink::DOMMatrix"* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix10rotateSelfEd(%"class.blink::DOMMatrix"* returned, double) local_unnamed_addr #0 align 2 {
  %3 = fcmp une double %1, 0.000000e+00
  br i1 %3, label %4, label %7

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %0, i64 0, i32 0, i32 1
  %6 = tail call dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix8Rotate3dEdddd(%"class.blink::TransformationMatrix"* %5, double 0.000000e+00, double 0.000000e+00, double 1.000000e+00, double %1) #8
  br label %7

7:                                                ; preds = %2, %4
  ret %"class.blink::DOMMatrix"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix10rotateSelfEddd(%"class.blink::DOMMatrix"* returned, double, double, double) local_unnamed_addr #0 align 2 {
  %5 = fcmp une double %3, 0.000000e+00
  br i1 %5, label %6, label %9

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %0, i64 0, i32 0, i32 1
  %8 = tail call dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix8Rotate3dEdddd(%"class.blink::TransformationMatrix"* %7, double 0.000000e+00, double 0.000000e+00, double 1.000000e+00, double %3) #8
  br label %9

9:                                                ; preds = %6, %4
  %10 = fcmp une double %2, 0.000000e+00
  br i1 %10, label %11, label %15

11:                                               ; preds = %9
  %12 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %0, i64 0, i32 0, i32 1
  %13 = tail call dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix8Rotate3dEdddd(%"class.blink::TransformationMatrix"* %12, double 0.000000e+00, double 1.000000e+00, double 0.000000e+00, double %2) #8
  %14 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %0, i64 0, i32 0, i32 2
  store i8 0, i8* %14, align 8
  br label %15

15:                                               ; preds = %11, %9
  %16 = fcmp une double %1, 0.000000e+00
  br i1 %16, label %17, label %21

17:                                               ; preds = %15
  %18 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %0, i64 0, i32 0, i32 1
  %19 = tail call dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix8Rotate3dEdddd(%"class.blink::TransformationMatrix"* %18, double 1.000000e+00, double 0.000000e+00, double 0.000000e+00, double %1) #8
  %20 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %0, i64 0, i32 0, i32 2
  store i8 0, i8* %20, align 8
  br label %21

21:                                               ; preds = %17, %15
  ret %"class.blink::DOMMatrix"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix10rotateSelfEdd(%"class.blink::DOMMatrix"* returned, double, double) local_unnamed_addr #0 align 2 {
  %4 = fcmp une double %2, 0.000000e+00
  br i1 %4, label %5, label %9

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %0, i64 0, i32 0, i32 1
  %7 = tail call dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix8Rotate3dEdddd(%"class.blink::TransformationMatrix"* %6, double 0.000000e+00, double 1.000000e+00, double 0.000000e+00, double %2) #8
  %8 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %0, i64 0, i32 0, i32 2
  store i8 0, i8* %8, align 8
  br label %9

9:                                                ; preds = %5, %3
  %10 = fcmp une double %1, 0.000000e+00
  br i1 %10, label %11, label %15

11:                                               ; preds = %9
  %12 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %0, i64 0, i32 0, i32 1
  %13 = tail call dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix8Rotate3dEdddd(%"class.blink::TransformationMatrix"* %12, double 1.000000e+00, double 0.000000e+00, double 0.000000e+00, double %1) #8
  %14 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %0, i64 0, i32 0, i32 2
  store i8 0, i8* %14, align 8
  br label %15

15:                                               ; preds = %9, %11
  ret %"class.blink::DOMMatrix"* %0
}

declare dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix8Rotate3dEdddd(%"class.blink::TransformationMatrix"*, double, double, double, double) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix20rotateFromVectorSelfEdd(%"class.blink::DOMMatrix"* returned, double, double) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %0, i64 0, i32 0, i32 1
  %5 = tail call double @atan2(double %2, double %1) #8
  %6 = fmul double %5, 0x404CA5DC1A63C1F8
  %7 = tail call dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix8Rotate3dEddd(%"class.blink::TransformationMatrix"* %4, double 0.000000e+00, double 0.000000e+00, double %6) #8
  ret %"class.blink::DOMMatrix"* %0
}

; Function Attrs: nofree nounwind
declare double @atan2(double, double) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix19rotateAxisAngleSelfEdddd(%"class.blink::DOMMatrix"* returned, double, double, double, double) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %0, i64 0, i32 0, i32 1
  %7 = tail call dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix8Rotate3dEdddd(%"class.blink::TransformationMatrix"* %6, double %1, double %2, double %3, double %4) #8
  %8 = fcmp une double %1, 0.000000e+00
  %9 = fcmp une double %2, 0.000000e+00
  %10 = or i1 %8, %9
  br i1 %10, label %11, label %13

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %0, i64 0, i32 0, i32 2
  store i8 0, i8* %12, align 8
  br label %13

13:                                               ; preds = %5, %11
  ret %"class.blink::DOMMatrix"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix9skewXSelfEd(%"class.blink::DOMMatrix"* returned, double) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %0, i64 0, i32 0, i32 1
  %4 = tail call dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix4SkewEdd(%"class.blink::TransformationMatrix"* %3, double %1, double 0.000000e+00) #8
  ret %"class.blink::DOMMatrix"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix9skewYSelfEd(%"class.blink::DOMMatrix"* returned, double) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %0, i64 0, i32 0, i32 1
  %4 = tail call dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix4SkewEdd(%"class.blink::TransformationMatrix"* %3, double 0.000000e+00, double %1) #8
  ret %"class.blink::DOMMatrix"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix15perspectiveSelfEd(%"class.blink::DOMMatrix"* returned, double) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %0, i64 0, i32 0, i32 1
  %4 = tail call dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix16ApplyPerspectiveEd(%"class.blink::TransformationMatrix"* %3, double %1) #8
  ret %"class.blink::DOMMatrix"* %0
}

declare dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix16ApplyPerspectiveEd(%"class.blink::TransformationMatrix"*, double) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix10invertSelfEv(%"class.blink::DOMMatrix"* returned) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::AffineTransform", align 8
  %3 = alloca %"class.blink::TransformationMatrix", align 8
  %4 = alloca %"class.blink::AffineTransform", align 8
  %5 = alloca %"class.blink::TransformationMatrix", align 8
  %6 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %0, i64 0, i32 0, i32 2
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %19, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.blink::AffineTransform"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %10) #8
  %11 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %0, i64 0, i32 0, i32 1
  %12 = bitcast %"class.blink::AffineTransform"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -1, i64 48, i1 false)
  call void @_ZNK5blink20TransformationMatrix17ToAffineTransformEv(%"class.blink::AffineTransform"* nonnull sret %2, %"class.blink::TransformationMatrix"* %11) #8
  %13 = call zeroext i1 @_ZNK5blink15AffineTransform12IsInvertibleEv(%"class.blink::AffineTransform"* nonnull %2) #8
  br i1 %13, label %14, label %18

14:                                               ; preds = %9
  %15 = bitcast %"class.blink::TransformationMatrix"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %15) #8
  %16 = bitcast %"class.blink::AffineTransform"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %16) #8
  call void @_ZNK5blink15AffineTransform7InverseEv(%"class.blink::AffineTransform"* nonnull sret %4, %"class.blink::AffineTransform"* nonnull %2) #8
  call void @_ZN5blink20TransformationMatrixC1ERKNS_15AffineTransformE(%"class.blink::TransformationMatrix"* nonnull %3, %"class.blink::AffineTransform"* nonnull dereferenceable(48) %4) #8
  %17 = bitcast %"class.blink::TransformationMatrix"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* nonnull align 8 %15, i64 128, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %16) #8
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %15) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %10) #8
  br label %45

18:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %10) #8
  br label %25

19:                                               ; preds = %1
  %20 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %0, i64 0, i32 0, i32 1
  %21 = tail call zeroext i1 @_ZNK5blink20TransformationMatrix12IsInvertibleEv(%"class.blink::TransformationMatrix"* %20) #8
  br i1 %21, label %22, label %25

22:                                               ; preds = %19
  %23 = bitcast %"class.blink::TransformationMatrix"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %23) #8
  call void @_ZNK5blink20TransformationMatrix7InverseEv(%"class.blink::TransformationMatrix"* nonnull sret %5, %"class.blink::TransformationMatrix"* %20) #8
  %24 = bitcast %"class.blink::TransformationMatrix"* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* nonnull align 8 %23, i64 128, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %23) #8
  br label %45

25:                                               ; preds = %18, %19
  %26 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 0, i64 0
  %27 = bitcast double* %26 to <2 x double>*
  store <2 x double> <double 0x7FF8000000000000, double 0x7FF8000000000000>, <2 x double>* %27, align 8
  %28 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 0, i64 2
  %29 = bitcast double* %28 to <2 x double>*
  store <2 x double> <double 0x7FF8000000000000, double 0x7FF8000000000000>, <2 x double>* %29, align 8
  %30 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 1, i64 0
  %31 = bitcast double* %30 to <2 x double>*
  store <2 x double> <double 0x7FF8000000000000, double 0x7FF8000000000000>, <2 x double>* %31, align 8
  %32 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 1, i64 2
  %33 = bitcast double* %32 to <2 x double>*
  store <2 x double> <double 0x7FF8000000000000, double 0x7FF8000000000000>, <2 x double>* %33, align 8
  %34 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 2, i64 0
  %35 = bitcast double* %34 to <2 x double>*
  store <2 x double> <double 0x7FF8000000000000, double 0x7FF8000000000000>, <2 x double>* %35, align 8
  %36 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 2, i64 2
  %37 = bitcast double* %36 to <2 x double>*
  store <2 x double> <double 0x7FF8000000000000, double 0x7FF8000000000000>, <2 x double>* %37, align 8
  %38 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 3, i64 0
  %39 = bitcast double* %38 to <2 x double>*
  store <2 x double> <double 0x7FF8000000000000, double 0x7FF8000000000000>, <2 x double>* %39, align 8
  %40 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 3, i64 2
  %41 = bitcast double* %40 to <2 x double>*
  store <2 x double> <double 0x7FF8000000000000, double 0x7FF8000000000000>, <2 x double>* %41, align 8
  %42 = load i8, i8* %6, align 8, !range !2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %45, label %44

44:                                               ; preds = %25
  store i8 0, i8* %6, align 8
  br label %45

45:                                               ; preds = %44, %25, %14, %22
  ret %"class.blink::DOMMatrix"* %0
}

declare void @_ZNK5blink20TransformationMatrix17ToAffineTransformEv(%"class.blink::AffineTransform"* sret, %"class.blink::TransformationMatrix"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink15AffineTransform12IsInvertibleEv(%"class.blink::AffineTransform"*) local_unnamed_addr #2

declare void @_ZNK5blink15AffineTransform7InverseEv(%"class.blink::AffineTransform"* sret, %"class.blink::AffineTransform"*) local_unnamed_addr #2

declare void @_ZN5blink20TransformationMatrixC1ERKNS_15AffineTransformE(%"class.blink::TransformationMatrix"*, %"class.blink::AffineTransform"* dereferenceable(48)) unnamed_addr #2

declare zeroext i1 @_ZNK5blink20TransformationMatrix12IsInvertibleEv(%"class.blink::TransformationMatrix"*) local_unnamed_addr #2

declare void @_ZNK5blink20TransformationMatrix7InverseEv(%"class.blink::TransformationMatrix"* sret, %"class.blink::TransformationMatrix"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix14setMatrixValueEPKNS_16ExecutionContextERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::DOMMatrix"* returned, %"class.blink::ExecutionContext"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = bitcast %"class.blink::DOMMatrix"* %0 to %"class.blink::DOMMatrixReadOnly"*
  tail call void @_ZN5blink17DOMMatrixReadOnly24SetMatrixValueFromStringEPKNS_16ExecutionContextERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::DOMMatrixReadOnly"* %5, %"class.blink::ExecutionContext"* %1, %"class.WTF::String"* dereferenceable(8) %2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  ret %"class.blink::DOMMatrix"* %0
}

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink17DOMMatrixReadOnlyD2Ev(%"class.blink::DOMMatrixReadOnly"*) unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink9DOMMatrixD0Ev(%"class.blink::DOMMatrix"*) unnamed_addr #7 comdat align 2 {
  %2 = bitcast %"class.blink::DOMMatrix"* %0 to %"class.blink::DOMMatrixReadOnly"*
  tail call void @_ZN5blink17DOMMatrixReadOnlyD2Ev(%"class.blink::DOMMatrixReadOnly"* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable17HasEventListenersEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink17DOMMatrixReadOnly5TraceEPNS_7VisitorE(%"class.blink::DOMMatrixReadOnly"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 0
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %1) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink9DOMMatrix18GetWrapperTypeInfoEv(%"class.blink::DOMMatrix"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink9DOMMatrix18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #2

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #2

declare dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix8MultiplyERKS0_(%"class.blink::TransformationMatrix"*, %"class.blink::TransformationMatrix"* dereferenceable(128)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix8Rotate3dEddd(%"class.blink::TransformationMatrix"*, double, double, double) local_unnamed_addr #2

declare dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix4SkewEdd(%"class.blink::TransformationMatrix"*, double, double) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #8
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #8
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #8
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #8
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #8
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #8
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* %40, i8* %41) #8
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #8
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.3, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #8
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #8
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #8
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !3

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #8
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #8
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::DOMMatrix"* @_ZN5blink25MakeGarbageCollectedTraitINS_9DOMMatrixEE4CallIJRKN3WTF6VectorIdLj0ENS4_18PartitionAllocatorEEEjEEEPS1_DpOT_(%"class.WTF::Vector.58"* dereferenceable(16), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::Vector.58", align 8
  %4 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 152) #8
  %5 = bitcast i8* %4 to %"class.blink::DOMMatrix"*
  %6 = getelementptr inbounds %"class.WTF::Vector.58", %"class.WTF::Vector.58"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.58", %"class.WTF::Vector.58"* %3, i64 0, i32 0, i32 0, i32 0
  store double* null, double** %8, align 8
  %9 = getelementptr inbounds %"class.WTF::Vector.58", %"class.WTF::Vector.58"* %3, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %9, align 8
  %10 = icmp eq i32 %7, 0
  br i1 %10, label %20, label %11

11:                                               ; preds = %2
  %12 = zext i32 %7 to i64
  %13 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIdEEmm(i64 %12) #8
  %14 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %13, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIdEEPKcv, i64 0, i64 0)) #8
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast %"class.WTF::Vector.58"* %3 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = lshr i64 %13, 3
  %18 = trunc i64 %17 to i32
  store i32 %18, i32* %9, align 8
  %19 = icmp ne i8* %14, null
  br label %20

20:                                               ; preds = %11, %2
  %21 = phi i8* [ null, %2 ], [ %14, %11 ]
  %22 = phi i1 [ false, %2 ], [ %19, %11 ]
  %23 = getelementptr inbounds %"class.WTF::Vector.58", %"class.WTF::Vector.58"* %0, i64 0, i32 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"class.WTF::Vector.58", %"class.WTF::Vector.58"* %3, i64 0, i32 0, i32 0, i32 2
  store i32 %24, i32* %25, align 4
  %26 = getelementptr inbounds %"class.WTF::Vector.58", %"class.WTF::Vector.58"* %0, i64 0, i32 0, i32 0, i32 0
  %27 = load double*, double** %26, align 8
  %28 = icmp ne double* %27, null
  %29 = and i1 %22, %28
  br i1 %29, label %30, label %34, !prof !4

30:                                               ; preds = %20
  %31 = zext i32 %24 to i64
  %32 = bitcast double* %27 to i8*
  %33 = shl nuw nsw i64 %31, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* nonnull align 8 %32, i64 %33, i1 false) #8
  br label %34

34:                                               ; preds = %20, %30
  %35 = load i32, i32* %1, align 4
  call void @_ZN5blink9DOMMatrixC2IN3WTF6VectorIdLj0ENS2_18PartitionAllocatorEEEEET_i(%"class.blink::DOMMatrix"* %5, %"class.WTF::Vector.58"* nonnull %3, i32 %35)
  %36 = load double*, double** %8, align 8
  %37 = icmp eq double* %36, null
  %38 = bitcast double* %36 to i8*
  br i1 %37, label %44, label %39, !prof !4

39:                                               ; preds = %34
  %40 = load i32, i32* %25, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %43, label %42, !prof !3

42:                                               ; preds = %39
  store i32 0, i32* %25, align 4
  br label %43

43:                                               ; preds = %42, %39
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %38) #8
  store double* null, double** %8, align 8
  br label %44

44:                                               ; preds = %34, %43
  %45 = getelementptr inbounds i8, i8* %4, i64 -4
  %46 = bitcast i8* %45 to i16*
  %47 = load atomic i16, i16* %46 monotonic, align 2
  %48 = or i16 %47, 1
  store atomic i16 %48, i16* %46 release, align 2
  ret %"class.blink::DOMMatrix"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink9DOMMatrixC2IN3WTF6VectorIdLj0ENS2_18PartitionAllocatorEEEEET_i(%"class.blink::DOMMatrix"*, %"class.WTF::Vector.58"*, i32) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::Vector.58", align 8
  %5 = bitcast %"class.blink::DOMMatrix"* %0 to %"class.blink::DOMMatrixReadOnly"*
  %6 = getelementptr inbounds %"class.WTF::Vector.58", %"class.WTF::Vector.58"* %1, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.58", %"class.WTF::Vector.58"* %4, i64 0, i32 0, i32 0, i32 0
  store double* null, double** %8, align 8
  %9 = getelementptr inbounds %"class.WTF::Vector.58", %"class.WTF::Vector.58"* %4, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %9, align 8
  %10 = icmp eq i32 %7, 0
  br i1 %10, label %20, label %11

11:                                               ; preds = %3
  %12 = zext i32 %7 to i64
  %13 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIdEEmm(i64 %12) #8
  %14 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %13, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIdEEPKcv, i64 0, i64 0)) #8
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast %"class.WTF::Vector.58"* %4 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = lshr i64 %13, 3
  %18 = trunc i64 %17 to i32
  store i32 %18, i32* %9, align 8
  %19 = icmp ne i8* %14, null
  br label %20

20:                                               ; preds = %11, %3
  %21 = phi i8* [ null, %3 ], [ %14, %11 ]
  %22 = phi i1 [ false, %3 ], [ %19, %11 ]
  %23 = getelementptr inbounds %"class.WTF::Vector.58", %"class.WTF::Vector.58"* %1, i64 0, i32 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"class.WTF::Vector.58", %"class.WTF::Vector.58"* %4, i64 0, i32 0, i32 0, i32 2
  store i32 %24, i32* %25, align 4
  %26 = getelementptr inbounds %"class.WTF::Vector.58", %"class.WTF::Vector.58"* %1, i64 0, i32 0, i32 0, i32 0
  %27 = load double*, double** %26, align 8
  %28 = icmp ne double* %27, null
  %29 = and i1 %22, %28
  br i1 %29, label %30, label %34, !prof !4

30:                                               ; preds = %20
  %31 = zext i32 %24 to i64
  %32 = bitcast double* %27 to i8*
  %33 = shl nuw nsw i64 %31, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* nonnull align 8 %32, i64 %33, i1 false) #8
  br label %34

34:                                               ; preds = %20, %30
  call void @_ZN5blink17DOMMatrixReadOnlyC2IN3WTF6VectorIdLj0ENS2_18PartitionAllocatorEEEEET_i(%"class.blink::DOMMatrixReadOnly"* %5, %"class.WTF::Vector.58"* nonnull %4, i32 %2)
  %35 = load double*, double** %8, align 8
  %36 = icmp eq double* %35, null
  %37 = bitcast double* %35 to i8*
  br i1 %36, label %43, label %38, !prof !4

38:                                               ; preds = %34
  %39 = load i32, i32* %25, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %42, label %41, !prof !3

41:                                               ; preds = %38
  store i32 0, i32* %25, align 4
  br label %42

42:                                               ; preds = %41, %38
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %37) #8
  store double* null, double** %8, align 8
  br label %43

43:                                               ; preds = %34, %42
  %44 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink9DOMMatrixE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIdEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #8
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17DOMMatrixReadOnlyC2IN3WTF6VectorIdLj0ENS2_18PartitionAllocatorEEEEET_i(%"class.blink::DOMMatrixReadOnly"*, %"class.WTF::Vector.58"*, i32) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink17DOMMatrixReadOnlyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %6, i64 0, i32 0, i32 0, i64 0, i64 0
  store double 1.000000e+00, double* %7, align 8
  %8 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 0, i64 1
  %9 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 1, i64 1
  %10 = bitcast double* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 32, i1 false) #8
  store double 1.000000e+00, double* %9, align 8
  %11 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 1, i64 2
  %12 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 2, i64 2
  %13 = bitcast double* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 32, i1 false) #8
  store double 1.000000e+00, double* %12, align 8
  %14 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 2, i64 3
  %15 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 3, i64 3
  %16 = bitcast double* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 32, i1 false) #8
  store double 1.000000e+00, double* %15, align 8
  switch i32 %2, label %127 [
    i32 6, label %17
    i32 16, label %50
  ]

17:                                               ; preds = %3
  %18 = tail call dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.58"* %1, i32 0) #8
  %19 = bitcast double* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = tail call dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.58"* %1, i32 1) #8
  %22 = bitcast double* %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = tail call dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.58"* %1, i32 2) #8
  %25 = bitcast double* %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = tail call dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.58"* %1, i32 3) #8
  %28 = bitcast double* %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = tail call dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.58"* %1, i32 4) #8
  %31 = bitcast double* %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = tail call dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.58"* %1, i32 5) #8
  %34 = bitcast double* %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"class.blink::TransformationMatrix"* %6 to i64*
  store i64 %20, i64* %36, align 8
  %37 = bitcast double* %8 to i64*
  store i64 %23, i64* %37, align 8
  %38 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 0, i64 2
  %39 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 1, i64 0
  %40 = bitcast double* %38 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 16, i1 false) #8
  %41 = bitcast double* %39 to i64*
  store i64 %26, i64* %41, align 8
  %42 = bitcast double* %9 to i64*
  store i64 %29, i64* %42, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 32, i1 false) #8
  %43 = bitcast double* %12 to <2 x double>*
  store <2 x double> <double 1.000000e+00, double 0.000000e+00>, <2 x double>* %43, align 8
  %44 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 3, i64 0
  %45 = bitcast double* %44 to i64*
  store i64 %32, i64* %45, align 8
  %46 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 3, i64 1
  %47 = bitcast double* %46 to i64*
  store i64 %35, i64* %47, align 8
  %48 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 3, i64 2
  %49 = bitcast double* %48 to <2 x double>*
  store <2 x double> <double 0.000000e+00, double 1.000000e+00>, <2 x double>* %49, align 8
  br label %124

50:                                               ; preds = %3
  %51 = tail call dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.58"* %1, i32 0) #8
  %52 = bitcast double* %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = tail call dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.58"* %1, i32 1) #8
  %55 = bitcast double* %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = tail call dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.58"* %1, i32 2) #8
  %58 = bitcast double* %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = tail call dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.58"* %1, i32 3) #8
  %61 = bitcast double* %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = tail call dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.58"* %1, i32 4) #8
  %64 = bitcast double* %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = tail call dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.58"* %1, i32 5) #8
  %67 = bitcast double* %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = tail call dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.58"* %1, i32 6) #8
  %70 = bitcast double* %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = tail call dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.58"* %1, i32 7) #8
  %73 = bitcast double* %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = tail call dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.58"* %1, i32 8) #8
  %76 = bitcast double* %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = tail call dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.58"* %1, i32 9) #8
  %79 = bitcast double* %78 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = tail call dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.58"* %1, i32 10) #8
  %82 = bitcast double* %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = tail call dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.58"* %1, i32 11) #8
  %85 = bitcast double* %84 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = tail call dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.58"* %1, i32 12) #8
  %88 = bitcast double* %87 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = tail call dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.58"* %1, i32 13) #8
  %91 = bitcast double* %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = tail call dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.58"* %1, i32 14) #8
  %94 = bitcast double* %93 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = tail call dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.58"* %1, i32 15) #8
  %97 = bitcast double* %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"class.blink::TransformationMatrix"* %6 to i64*
  store i64 %53, i64* %99, align 8
  %100 = bitcast double* %8 to i64*
  store i64 %56, i64* %100, align 8
  %101 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 0, i64 2
  %102 = bitcast double* %101 to i64*
  store i64 %59, i64* %102, align 8
  %103 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 0, i64 3
  %104 = bitcast double* %103 to i64*
  store i64 %62, i64* %104, align 8
  %105 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 1, i64 0
  %106 = bitcast double* %105 to i64*
  store i64 %65, i64* %106, align 8
  %107 = bitcast double* %9 to i64*
  store i64 %68, i64* %107, align 8
  %108 = bitcast double* %11 to i64*
  store i64 %71, i64* %108, align 8
  %109 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 1, i64 3
  %110 = bitcast double* %109 to i64*
  store i64 %74, i64* %110, align 8
  %111 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 2, i64 0
  %112 = bitcast double* %111 to i64*
  store i64 %77, i64* %112, align 8
  %113 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 2, i64 1
  %114 = bitcast double* %113 to i64*
  store i64 %80, i64* %114, align 8
  %115 = bitcast double* %12 to i64*
  store i64 %83, i64* %115, align 8
  %116 = bitcast double* %14 to i64*
  store i64 %86, i64* %116, align 8
  %117 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 3, i64 0
  %118 = bitcast double* %117 to i64*
  store i64 %89, i64* %118, align 8
  %119 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 3, i64 1
  %120 = bitcast double* %119 to i64*
  store i64 %92, i64* %120, align 8
  %121 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 3, i64 2
  %122 = bitcast double* %121 to i64*
  store i64 %95, i64* %122, align 8
  %123 = bitcast double* %15 to i64*
  store i64 %98, i64* %123, align 8
  br label %124

124:                                              ; preds = %17, %50
  %125 = phi i8 [ 0, %50 ], [ 1, %17 ]
  %126 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 2
  store i8 %125, i8* %126, align 8
  br label %127

127:                                              ; preds = %124, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.58"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.58", %"class.WTF::Vector.58"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #8
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i8* %14, i8* %15) #8
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.7, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #8
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  %23 = getelementptr inbounds %"class.WTF::Vector.58", %"class.WTF::Vector.58"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load double*, double** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds double, double* %24, i64 %25
  ret double* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17DOMMatrixReadOnlyC2IPdEET_i(%"class.blink::DOMMatrixReadOnly"*, double*, i32) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink17DOMMatrixReadOnlyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %6, i64 0, i32 0, i32 0, i64 0, i64 0
  store double 1.000000e+00, double* %7, align 8
  %8 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 0, i64 1
  %9 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 1, i64 1
  %10 = bitcast double* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 32, i1 false) #8
  store double 1.000000e+00, double* %9, align 8
  %11 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 1, i64 2
  %12 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 2, i64 2
  %13 = bitcast double* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 32, i1 false) #8
  store double 1.000000e+00, double* %12, align 8
  %14 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 2, i64 3
  %15 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 3, i64 3
  %16 = bitcast double* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 32, i1 false) #8
  store double 1.000000e+00, double* %15, align 8
  switch i32 %2, label %76 [
    i32 6, label %17
    i32 16, label %36
  ]

17:                                               ; preds = %3
  %18 = bitcast double* %1 to <2 x i64>*
  %19 = load <2 x i64>, <2 x i64>* %18, align 8
  %20 = getelementptr inbounds double, double* %1, i64 2
  %21 = bitcast double* %20 to <2 x i64>*
  %22 = load <2 x i64>, <2 x i64>* %21, align 8
  %23 = getelementptr inbounds double, double* %1, i64 4
  %24 = bitcast double* %23 to <2 x i64>*
  %25 = load <2 x i64>, <2 x i64>* %24, align 8
  %26 = bitcast %"class.blink::TransformationMatrix"* %6 to <2 x i64>*
  store <2 x i64> %19, <2 x i64>* %26, align 8
  %27 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 0, i64 2
  %28 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 1, i64 0
  %29 = bitcast double* %27 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false) #8
  %30 = bitcast double* %28 to <2 x i64>*
  store <2 x i64> %22, <2 x i64>* %30, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 32, i1 false) #8
  %31 = bitcast double* %12 to <2 x double>*
  store <2 x double> <double 1.000000e+00, double 0.000000e+00>, <2 x double>* %31, align 8
  %32 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 3, i64 0
  %33 = bitcast double* %32 to <2 x i64>*
  store <2 x i64> %25, <2 x i64>* %33, align 8
  %34 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 3, i64 2
  %35 = bitcast double* %34 to <2 x double>*
  store <2 x double> <double 0.000000e+00, double 1.000000e+00>, <2 x double>* %35, align 8
  br label %73

36:                                               ; preds = %3
  %37 = bitcast double* %1 to <2 x i64>*
  %38 = load <2 x i64>, <2 x i64>* %37, align 8
  %39 = getelementptr inbounds double, double* %1, i64 2
  %40 = bitcast double* %39 to <2 x i64>*
  %41 = load <2 x i64>, <2 x i64>* %40, align 8
  %42 = getelementptr inbounds double, double* %1, i64 4
  %43 = bitcast double* %42 to <2 x i64>*
  %44 = load <2 x i64>, <2 x i64>* %43, align 8
  %45 = getelementptr inbounds double, double* %1, i64 6
  %46 = bitcast double* %45 to <2 x i64>*
  %47 = load <2 x i64>, <2 x i64>* %46, align 8
  %48 = getelementptr inbounds double, double* %1, i64 8
  %49 = bitcast double* %48 to <2 x i64>*
  %50 = load <2 x i64>, <2 x i64>* %49, align 8
  %51 = getelementptr inbounds double, double* %1, i64 10
  %52 = bitcast double* %51 to <2 x i64>*
  %53 = load <2 x i64>, <2 x i64>* %52, align 8
  %54 = getelementptr inbounds double, double* %1, i64 12
  %55 = bitcast double* %54 to <2 x i64>*
  %56 = load <2 x i64>, <2 x i64>* %55, align 8
  %57 = getelementptr inbounds double, double* %1, i64 14
  %58 = bitcast double* %57 to <2 x i64>*
  %59 = load <2 x i64>, <2 x i64>* %58, align 8
  %60 = bitcast %"class.blink::TransformationMatrix"* %6 to <2 x i64>*
  store <2 x i64> %38, <2 x i64>* %60, align 8
  %61 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 0, i64 2
  %62 = bitcast double* %61 to <2 x i64>*
  store <2 x i64> %41, <2 x i64>* %62, align 8
  %63 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 1, i64 0
  %64 = bitcast double* %63 to <2 x i64>*
  store <2 x i64> %44, <2 x i64>* %64, align 8
  %65 = bitcast double* %11 to <2 x i64>*
  store <2 x i64> %47, <2 x i64>* %65, align 8
  %66 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 2, i64 0
  %67 = bitcast double* %66 to <2 x i64>*
  store <2 x i64> %50, <2 x i64>* %67, align 8
  %68 = bitcast double* %12 to <2 x i64>*
  store <2 x i64> %53, <2 x i64>* %68, align 8
  %69 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 3, i64 0
  %70 = bitcast double* %69 to <2 x i64>*
  store <2 x i64> %56, <2 x i64>* %70, align 8
  %71 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 3, i64 2
  %72 = bitcast double* %71 to <2 x i64>*
  store <2 x i64> %59, <2 x i64>* %72, align 8
  br label %73

73:                                               ; preds = %17, %36
  %74 = phi i8 [ 0, %36 ], [ 1, %17 ]
  %75 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 2
  store i8 %74, i8* %75, align 8
  br label %76

76:                                               ; preds = %73, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17DOMMatrixReadOnlyC2IPfEET_i(%"class.blink::DOMMatrixReadOnly"*, float*, i32) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink17DOMMatrixReadOnlyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 0, i64 0
  store double 1.000000e+00, double* %6, align 8
  %7 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 0, i64 1
  %8 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 1, i64 1
  %9 = bitcast double* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 32, i1 false) #8
  store double 1.000000e+00, double* %8, align 8
  %10 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 1, i64 2
  %11 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 2, i64 2
  %12 = bitcast double* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 32, i1 false) #8
  store double 1.000000e+00, double* %11, align 8
  %13 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 2, i64 3
  %14 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 3, i64 3
  %15 = bitcast double* %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 32, i1 false) #8
  store double 1.000000e+00, double* %14, align 8
  switch i32 %2, label %83 [
    i32 6, label %16
    i32 16, label %32
  ]

16:                                               ; preds = %3
  %17 = bitcast float* %1 to <2 x float>*
  %18 = load <2 x float>, <2 x float>* %17, align 4
  %19 = fpext <2 x float> %18 to <2 x double>
  %20 = getelementptr inbounds float, float* %1, i64 2
  %21 = bitcast float* %20 to <2 x float>*
  %22 = load <2 x float>, <2 x float>* %21, align 4
  %23 = fpext <2 x float> %22 to <2 x double>
  %24 = getelementptr inbounds float, float* %1, i64 4
  %25 = bitcast float* %24 to <2 x float>*
  %26 = load <2 x float>, <2 x float>* %25, align 4
  %27 = bitcast double* %6 to <2 x double>*
  store <2 x double> %19, <2 x double>* %27, align 8
  %28 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 0, i64 2
  %29 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 1, i64 0
  %30 = bitcast double* %28 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 16, i1 false) #8
  %31 = bitcast double* %29 to <2 x double>*
  store <2 x double> %23, <2 x double>* %31, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 32, i1 false) #8
  br label %71

32:                                               ; preds = %3
  %33 = bitcast float* %1 to <2 x float>*
  %34 = load <2 x float>, <2 x float>* %33, align 4
  %35 = fpext <2 x float> %34 to <2 x double>
  %36 = getelementptr inbounds float, float* %1, i64 2
  %37 = bitcast float* %36 to <2 x float>*
  %38 = load <2 x float>, <2 x float>* %37, align 4
  %39 = fpext <2 x float> %38 to <2 x double>
  %40 = getelementptr inbounds float, float* %1, i64 4
  %41 = bitcast float* %40 to <2 x float>*
  %42 = load <2 x float>, <2 x float>* %41, align 4
  %43 = fpext <2 x float> %42 to <2 x double>
  %44 = getelementptr inbounds float, float* %1, i64 6
  %45 = bitcast float* %44 to <2 x float>*
  %46 = load <2 x float>, <2 x float>* %45, align 4
  %47 = fpext <2 x float> %46 to <2 x double>
  %48 = getelementptr inbounds float, float* %1, i64 8
  %49 = bitcast float* %48 to <2 x float>*
  %50 = load <2 x float>, <2 x float>* %49, align 4
  %51 = fpext <2 x float> %50 to <2 x double>
  %52 = getelementptr inbounds float, float* %1, i64 10
  %53 = bitcast float* %52 to <2 x float>*
  %54 = load <2 x float>, <2 x float>* %53, align 4
  %55 = fpext <2 x float> %54 to <2 x double>
  %56 = getelementptr inbounds float, float* %1, i64 12
  %57 = bitcast float* %56 to <2 x float>*
  %58 = load <2 x float>, <2 x float>* %57, align 4
  %59 = getelementptr inbounds float, float* %1, i64 14
  %60 = bitcast float* %59 to <2 x float>*
  %61 = load <2 x float>, <2 x float>* %60, align 4
  %62 = fpext <2 x float> %61 to <2 x double>
  %63 = bitcast double* %6 to <2 x double>*
  store <2 x double> %35, <2 x double>* %63, align 8
  %64 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 0, i64 2
  %65 = bitcast double* %64 to <2 x double>*
  store <2 x double> %39, <2 x double>* %65, align 8
  %66 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 1, i64 0
  %67 = bitcast double* %66 to <2 x double>*
  store <2 x double> %43, <2 x double>* %67, align 8
  %68 = bitcast double* %10 to <2 x double>*
  store <2 x double> %47, <2 x double>* %68, align 8
  %69 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 2, i64 0
  %70 = bitcast double* %69 to <2 x double>*
  store <2 x double> %51, <2 x double>* %70, align 8
  br label %71

71:                                               ; preds = %16, %32
  %72 = phi i8 [ 0, %32 ], [ 1, %16 ]
  %73 = phi <2 x double> [ %55, %32 ], [ <double 1.000000e+00, double 0.000000e+00>, %16 ]
  %74 = phi <2 x float> [ %58, %32 ], [ %26, %16 ]
  %75 = phi <2 x double> [ %62, %32 ], [ <double 0.000000e+00, double 1.000000e+00>, %16 ]
  %76 = fpext <2 x float> %74 to <2 x double>
  %77 = bitcast double* %11 to <2 x double>*
  store <2 x double> %73, <2 x double>* %77, align 8
  %78 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 3, i64 0
  %79 = bitcast double* %78 to <2 x double>*
  store <2 x double> %76, <2 x double>* %79, align 8
  %80 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 3, i64 2
  %81 = bitcast double* %80 to <2 x double>*
  store <2 x double> %75, <2 x double>* %81, align 8
  %82 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 2
  store i8 %72, i8* %82, align 8
  br label %83

83:                                               ; preds = %71, %3
  ret void
}

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 2000, i32 1}
