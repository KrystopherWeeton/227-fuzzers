; ModuleID = '../../third_party/blink/renderer/core/events/pointer_event_factory.cc'
source_filename = "../../third_party/blink/renderer/core/events/pointer_event_factory.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.19" }
%"struct.std::__1::__atomic_base.19" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.873", i32, [4 x i8], %"class.std::__1::unique_ptr.1011", %"class.std::__1::unique_ptr.1011", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque.1017", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.1023", %"class.std::__1::unique_ptr.1029", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.1041", %"class.std::__1::unique_ptr.1047", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.81", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.873" = type { %"class.std::__1::__compressed_pair.874" }
%"class.std::__1::__compressed_pair.874" = type { %"struct.std::__1::__compressed_pair_elem.875" }
%"struct.std::__1::__compressed_pair_elem.875" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.876", %"class.std::__1::unique_ptr.882", %"class.std::__1::unique_ptr.888", %"class.std::__1::unique_ptr.894", %"class.std::__1::unique_ptr.900", %"class.std::__1::unique_ptr.906", %"class.std::__1::unique_ptr.917", %"class.std::__1::unique_ptr.924", %"class.std::__1::unique_ptr.924", %"class.std::__1::unique_ptr.931", %"class.std::__1::unique_ptr.938", %"class.std::__1::unique_ptr.945", %"class.std::__1::unique_ptr.945", %"class.std::__1::unique_ptr.952", %"class.std::__1::unique_ptr.959", %"class.std::__1::unique_ptr.966", %"class.std::__1::unique_ptr.991", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.876" = type { %"class.std::__1::__compressed_pair.877" }
%"class.std::__1::__compressed_pair.877" = type { %"struct.std::__1::__compressed_pair_elem.878" }
%"struct.std::__1::__compressed_pair_elem.878" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.882" = type { %"class.std::__1::__compressed_pair.883" }
%"class.std::__1::__compressed_pair.883" = type { %"struct.std::__1::__compressed_pair_elem.884" }
%"struct.std::__1::__compressed_pair_elem.884" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.894" = type { %"class.std::__1::__compressed_pair.895" }
%"class.std::__1::__compressed_pair.895" = type { %"struct.std::__1::__compressed_pair_elem.896" }
%"struct.std::__1::__compressed_pair_elem.896" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.900" = type { %"class.std::__1::__compressed_pair.901" }
%"class.std::__1::__compressed_pair.901" = type { %"struct.std::__1::__compressed_pair_elem.902" }
%"struct.std::__1::__compressed_pair_elem.902" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.906" = type { %"class.std::__1::__compressed_pair.907" }
%"class.std::__1::__compressed_pair.907" = type { %"struct.std::__1::__compressed_pair_elem.908" }
%"struct.std::__1::__compressed_pair_elem.908" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.909" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.909" = type { %"struct.std::__1::__atomic_base.910" }
%"struct.std::__1::__atomic_base.910" = type { %"struct.std::__1::__atomic_base.911" }
%"struct.std::__1::__atomic_base.911" = type { %"struct.std::__1::__cxx_atomic_impl.912" }
%"struct.std::__1::__cxx_atomic_impl.912" = type { %"struct.std::__1::__cxx_atomic_base_impl.913" }
%"struct.std::__1::__cxx_atomic_base_impl.913" = type { i64 }
%"class.std::__1::unique_ptr.917" = type { %"class.std::__1::__compressed_pair.918" }
%"class.std::__1::__compressed_pair.918" = type { %"struct.std::__1::__compressed_pair_elem.919" }
%"struct.std::__1::__compressed_pair_elem.919" = type { %"class.blink::Worklist.920"* }
%"class.blink::Worklist.920" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.909" }
%"class.std::__1::unique_ptr.924" = type { %"class.std::__1::__compressed_pair.925" }
%"class.std::__1::__compressed_pair.925" = type { %"struct.std::__1::__compressed_pair_elem.926" }
%"struct.std::__1::__compressed_pair_elem.926" = type { %"class.blink::Worklist.927"* }
%"class.blink::Worklist.927" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.909" }
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.blink::Worklist.934"* }
%"class.blink::Worklist.934" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.909" }
%"class.std::__1::unique_ptr.938" = type { %"class.std::__1::__compressed_pair.939" }
%"class.std::__1::__compressed_pair.939" = type { %"struct.std::__1::__compressed_pair_elem.940" }
%"struct.std::__1::__compressed_pair_elem.940" = type { %"class.blink::Worklist.941"* }
%"class.blink::Worklist.941" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.909" }
%"class.std::__1::unique_ptr.945" = type { %"class.std::__1::__compressed_pair.946" }
%"class.std::__1::__compressed_pair.946" = type { %"struct.std::__1::__compressed_pair_elem.947" }
%"struct.std::__1::__compressed_pair_elem.947" = type { %"class.blink::Worklist.948"* }
%"class.blink::Worklist.948" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.909" }
%"class.std::__1::unique_ptr.952" = type { %"class.std::__1::__compressed_pair.953" }
%"class.std::__1::__compressed_pair.953" = type { %"struct.std::__1::__compressed_pair_elem.954" }
%"struct.std::__1::__compressed_pair_elem.954" = type { %"class.blink::Worklist.955"* }
%"class.blink::Worklist.955" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.909" }
%"class.std::__1::unique_ptr.959" = type { %"class.std::__1::__compressed_pair.960" }
%"class.std::__1::__compressed_pair.960" = type { %"struct.std::__1::__compressed_pair_elem.961" }
%"struct.std::__1::__compressed_pair_elem.961" = type { %"class.blink::Worklist.962"* }
%"class.blink::Worklist.962" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.909" }
%"class.std::__1::unique_ptr.966" = type { %"class.std::__1::__compressed_pair.967" }
%"class.std::__1::__compressed_pair.967" = type { %"struct.std::__1::__compressed_pair_elem.968" }
%"struct.std::__1::__compressed_pair_elem.968" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.969", %"class.std::__1::__compressed_pair.977", %"class.std::__1::__compressed_pair.982", %"class.std::__1::__compressed_pair.984", [4 x i8] }>
%"class.std::__1::unique_ptr.969" = type { %"class.std::__1::__compressed_pair.970" }
%"class.std::__1::__compressed_pair.970" = type { %"struct.std::__1::__compressed_pair_elem.971", %"struct.std::__1::__compressed_pair_elem.972" }
%"struct.std::__1::__compressed_pair_elem.971" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.972" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.973" }
%"class.std::__1::__compressed_pair.973" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { i64 }
%"class.std::__1::__compressed_pair.977" = type { %"struct.std::__1::__compressed_pair_elem.978" }
%"struct.std::__1::__compressed_pair_elem.978" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.982" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"class.std::__1::__compressed_pair.984" = type { %"struct.std::__1::__compressed_pair_elem.985" }
%"struct.std::__1::__compressed_pair_elem.985" = type { float }
%"class.std::__1::unique_ptr.991" = type { %"class.std::__1::__compressed_pair.992" }
%"class.std::__1::__compressed_pair.992" = type { %"struct.std::__1::__compressed_pair_elem.993" }
%"struct.std::__1::__compressed_pair_elem.993" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.994", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.994" = type { %"class.std::__1::__compressed_pair.995" }
%"class.std::__1::__compressed_pair.995" = type { %"struct.std::__1::__compressed_pair_elem.996" }
%"struct.std::__1::__compressed_pair_elem.996" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.1003" }
%"class.WTF::Vector.1003" = type { %"class.WTF::VectorBuffer.1004" }
%"class.WTF::VectorBuffer.1004" = type { %"class.WTF::VectorBufferBase.1005" }
%"class.WTF::VectorBufferBase.1005" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.1011" = type { %"class.std::__1::__compressed_pair.1012" }
%"class.std::__1::__compressed_pair.1012" = type { %"struct.std::__1::__compressed_pair_elem.1013" }
%"struct.std::__1::__compressed_pair_elem.1013" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque.1017" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.1020" }
%"class.WTF::VectorBuffer.1020" = type { %"class.WTF::VectorBufferBase.1021" }
%"class.WTF::VectorBufferBase.1021" = type { %"struct.std::__1::pair.1022"*, i32, i32 }
%"struct.std::__1::pair.1022" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.1023" = type { %"class.std::__1::__compressed_pair.1024" }
%"class.std::__1::__compressed_pair.1024" = type { %"struct.std::__1::__compressed_pair_elem.1025" }
%"struct.std::__1::__compressed_pair_elem.1025" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.1029" = type { %"class.std::__1::__compressed_pair.1030" }
%"class.std::__1::__compressed_pair.1030" = type { %"struct.std::__1::__compressed_pair_elem.1031" }
%"struct.std::__1::__compressed_pair_elem.1031" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.1035" }
%"class.std::__1::unique_ptr.1035" = type { %"class.std::__1::__compressed_pair.1036" }
%"class.std::__1::__compressed_pair.1036" = type { %"struct.std::__1::__compressed_pair_elem.1037" }
%"struct.std::__1::__compressed_pair_elem.1037" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.920"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.927"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.934"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.941"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.948"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1272", i64 }
%"class.std::__1::vector.1272" = type { %"class.std::__1::__vector_base.1273" }
%"class.std::__1::__vector_base.1273" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1274" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.1041" = type { %"class.std::__1::__compressed_pair.1042" }
%"class.std::__1::__compressed_pair.1042" = type { %"struct.std::__1::__compressed_pair_elem.1043" }
%"struct.std::__1::__compressed_pair_elem.1043" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.1047" = type { %"class.std::__1::__compressed_pair.1048" }
%"class.std::__1::__compressed_pair.1048" = type { %"struct.std::__1::__compressed_pair_elem.1049" }
%"struct.std::__1::__compressed_pair_elem.1049" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.1053 }
%class.scoped_refptr.1053 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.81" = type { %"struct.std::__1::__atomic_base.82" }
%"struct.std::__1::__atomic_base.82" = type { %"struct.std::__1::__cxx_atomic_impl.83" }
%"struct.std::__1::__cxx_atomic_impl.83" = type { %"struct.std::__1::__cxx_atomic_base_impl.84" }
%"struct.std::__1::__cxx_atomic_base_impl.84" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.39" }
%"struct.std::__1::atomic.39" = type { %"struct.std::__1::__atomic_base.40" }
%"struct.std::__1::__atomic_base.40" = type { %"struct.std::__1::__atomic_base.41" }
%"struct.std::__1::__atomic_base.41" = type { %"struct.std::__1::__cxx_atomic_impl.42" }
%"struct.std::__1::__cxx_atomic_impl.42" = type { %"struct.std::__1::__cxx_atomic_base_impl.43" }
%"struct.std::__1::__cxx_atomic_base_impl.43" = type { i32 }
%"class.gfx::Vector2dF" = type { float, float }
%"class.gfx::PointF" = type { float, float }
%"class.blink::PointerEventFactory" = type { i32, [4 x i8], %"class.WTF::HashMap", %"class.WTF::HashMap.0", [5 x i32], [5 x i32], %"class.WTF::HashMap.5", %"class.WTF::HashMap.5" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"struct.std::__1::pair", i32 }
%"struct.std::__1::pair" = type { i32, i32 }
%"class.WTF::HashMap.0" = type { %"class.WTF::HashTable.1" }
%"class.WTF::HashTable.1" = type <{ %"struct.WTF::KeyValuePair.4"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.4" = type <{ i64, %"struct.blink::PointerEventFactory::PointerAttributes", [4 x i8] }>
%"struct.blink::PointerEventFactory::PointerAttributes" = type <{ %"struct.blink::PointerEventFactory::IncomingId", i8, i8, [2 x i8] }>
%"struct.blink::PointerEventFactory::IncomingId" = type { %"struct.std::__1::pair" }
%"class.WTF::HashMap.5" = type { %"class.WTF::HashTable.6" }
%"class.WTF::HashTable.6" = type <{ %"struct.WTF::KeyValuePair.9"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.9" = type { i64, %"class.blink::FloatPoint" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::HeapVector.221" = type { %"class.WTF::Vector.224" }
%"class.WTF::Vector.224" = type { %"class.WTF::VectorBuffer.225" }
%"class.WTF::VectorBuffer.225" = type { %"class.WTF::VectorBufferBase.226" }
%"class.WTF::VectorBufferBase.226" = type { %"class.blink::Member.227"*, i32, i32 }
%"class.blink::Member.227" = type { %"class.blink::MemberBase.1775" }
%"class.blink::MemberBase.1775" = type { %"class.blink::PointerEvent"* }
%"class.blink::PointerEvent" = type { %"class.blink::MouseEvent.base", i32, double, double, float, i32, i32, double, double, float, i32, %"class.WTF::String", i8, i8, i8, %"class.blink::HeapVector.221", %"class.blink::HeapVector.221" }
%"class.blink::MouseEvent.base" = type <{ %"class.blink::UIEventWithKeyState.base", [4 x i8], %"class.blink::DoublePoint", %"class.blink::DoublePoint", %"class.blink::DoublePoint", %"class.blink::DoublePoint", i8, [7 x i8], %"class.blink::DoublePoint", %"class.blink::DoublePoint", %"class.blink::DoublePoint", i32, i16, i16, %"class.blink::Member.219", i32, [4 x i8], %"class.WTF::String", i32 }>
%"class.blink::UIEventWithKeyState.base" = type <{ %"class.blink::UIEvent", i32 }>
%"class.blink::UIEvent" = type { %"class.blink::Event", %"class.blink::Member.10", i32, %"class.blink::Member" }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.219", %"class.blink::Member.219", %"class.blink::Member.782", %"class.blink::Member.784", %"class.base::TimeTicks" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.777" }
%"class.absl::optional.777" = type { %"class.absl::optional_internal::optional_data.778" }
%"class.absl::optional_internal::optional_data.778" = type { %"class.absl::optional_internal::optional_data_base.779" }
%"class.absl::optional_internal::optional_data_base.779" = type { %"class.absl::optional_internal::optional_data_dtor_base.780" }
%"class.absl::optional_internal::optional_data_dtor_base.780" = type { i8, %union.anon.781 }
%union.anon.781 = type { i64 }
%"class.blink::Member.782" = type { %"class.blink::MemberBase.783" }
%"class.blink::MemberBase.783" = type { %"class.blink::Event"* }
%"class.blink::Member.784" = type { %"class.blink::MemberBase.785" }
%"class.blink::MemberBase.785" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::Member.10" = type { %"class.blink::MemberBase.11" }
%"class.blink::MemberBase.11" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.27", %"class.blink::Member.29", %"class.blink::Member.31", %"class.blink::Member.33", i8, %"class.WTF::Vector.35" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"struct.std::__1::pair.18"*, i32, i32 }
%"struct.std::__1::pair.18" = type { %"class.WTF::AtomicString", %"class.blink::Member.20" }
%"class.blink::Member.20" = type { %"class.blink::MemberBase.21" }
%"class.blink::MemberBase.21" = type { %"class.blink::HeapVector.22"* }
%"class.blink::HeapVector.22" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.WTF::Vector.25"* }
%"class.WTF::Vector.25" = type opaque
%"class.blink::Member.27" = type { %"class.blink::MemberBase.28" }
%"class.blink::MemberBase.28" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.232", %"class.blink::Member.234", %"class.blink::Member.10", i8, i32, i8, i32, %"class.blink::Member.236", %"class.blink::Member.29", %"class.blink::FrameLifecycle", %"class.blink::Member.27", %"class.blink::Member.27", %"class.blink::Member.27", %"class.blink::Member.27", %"class.blink::Member.27", %"class.blink::Member.27", %"class.blink::Member.238", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.246", i8, %"class.base::UnguessableToken", %"class.absl::optional.248", %"class.absl::optional.253", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.27", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.232" = type { %"class.blink::MemberBase.233" }
%"class.blink::MemberBase.233" = type { %"class.blink::Page"* }
%"class.blink::Page" = type { %"class.blink::Supplementable.1579", %"class.blink::SettingsDelegate", %"class.blink::PageScheduler::Delegate", %"class.blink::Member.27", %"class.blink::scheduler::WebAgentGroupScheduler"*, %"class.blink::Member.1593", %"class.blink::Member.1597", %"class.blink::Member.1599", %"class.blink::Member.1603", %"class.blink::Member.1605", %"class.blink::Member.1607", %"class.blink::Member.1609", %"class.blink::Member.1611", %"class.blink::HeapObserverSet.1613", %"class.blink::Member.1621", %"class.blink::Member.1623", %"class.blink::Member.1625", %"class.blink::Member.1627", %"class.blink::Member.1629", %"class.blink::Member.1631", %"class.blink::Member.1633", %"class.blink::Member.1635", %"class.blink::Member.1637", %"class.blink::Member.1639", %"class.blink::Member.1641", %"class.blink::InspectorIssueStorage", %"class.blink::Deprecation", %"struct.blink::WebWindowFeatures", i8, i8, i8, float, %"class.mojo::StructPtr.1666", i8, i8, i8, i8, i32, %"class.blink::HeapHashSet.1673", %"class.blink::Member.232", %"class.blink::Member.232", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.std::__1::unique_ptr.1681", %"class.std::__1::unique_ptr.1687", i32, i32, i8, %"class.blink::mojom::blink::TextAutosizerPageInfo", %"class.blink::WebScopedVirtualTimePauser" }
%"class.blink::Supplementable.1579" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1580" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::HeapHashMap.1580" = type { %"class.WTF::HashMap.1583" }
%"class.WTF::HashMap.1583" = type { %"class.WTF::HashTable.1584" }
%"class.WTF::HashTable.1584" = type <{ %"struct.WTF::KeyValuePair.1586"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1586" = type opaque
%"class.blink::SettingsDelegate" = type { i32 (...)**, %"class.std::__1::unique_ptr.1587" }
%"class.std::__1::unique_ptr.1587" = type { %"class.std::__1::__compressed_pair.1588" }
%"class.std::__1::__compressed_pair.1588" = type { %"struct.std::__1::__compressed_pair_elem.1589" }
%"struct.std::__1::__compressed_pair_elem.1589" = type { %"class.blink::Settings"* }
%"class.blink::Settings" = type opaque
%"class.blink::PageScheduler::Delegate" = type { i32 (...)** }
%"class.blink::scheduler::WebAgentGroupScheduler" = type { i32 (...)** }
%"class.blink::Member.1593" = type { %"class.blink::MemberBase.1594" }
%"class.blink::MemberBase.1594" = type { %"class.blink::PageAnimator"* }
%"class.blink::PageAnimator" = type <{ %"class.blink::Member.232", i8, i8, i8, [5 x i8], %"class.blink::AnimationClock", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::AnimationClock" = type <{ %"class.base::TimeTicks", i8, [7 x i8], %"class.base::TickClock"*, i32, [4 x i8] }>
%"class.base::TickClock" = type { i32 (...)** }
%"class.blink::Member.1597" = type { %"class.blink::MemberBase.1598" }
%"class.blink::MemberBase.1598" = type { %"class.blink::AutoscrollController"* }
%"class.blink::AutoscrollController" = type opaque
%"class.blink::Member.1599" = type { %"class.blink::MemberBase.1600" }
%"class.blink::MemberBase.1600" = type { %"class.blink::ChromeClient"* }
%"class.blink::ChromeClient" = type { i32 (...)**, %"class.blink::WeakMember.1258", %"struct.blink::PhysicalOffset", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::WeakMember.1258" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::Node"* }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.314", %"class.blink::Member.316", %"class.blink::Member.314", %"class.blink::Member.314", %"class.blink::Member.318" }
%"class.blink::Member.316" = type { %"class.blink::MemberBase.317" }
%"class.blink::MemberBase.317" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.424", %"class.blink::Member.426", %"class.blink::Member.316", %"class.blink::Member.428", %"class.blink::Member.428", %"class.blink::Member.450", %"class.blink::Member.452", %"class.blink::Member.454", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.459", %"class.blink::HeapVector.461" }
%"class.blink::Member.424" = type { %"class.blink::MemberBase.425" }
%"class.blink::MemberBase.425" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.314", %"class.blink::Member.314" }
%"class.blink::Member.426" = type { %"class.blink::MemberBase.427" }
%"class.blink::MemberBase.427" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.504", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.512", %"class.WTF::Vector.512", i8, i32, %"class.blink::Member.517", %"class.blink::Member.584", %"class.blink::Member.838", %"class.blink::Member.840", %"class.blink::Member.842", %"class.blink::Member.844", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.846", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.852", %"class.blink::Member.854", %"class.blink::Member.467", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.856", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.443", %"class.blink::Member.312", %"class.blink::Member.814", %"class.blink::Member.312", %"class.blink::Member.312", %"class.blink::Member.312", %"class.blink::UserActionElementSet", %"class.blink::Member.1066", double, double, i64, i64, %"class.blink::HeapHashSet.1068", %"class.blink::HeapHashSet.1075", i16, i8, %"class.blink::Member.1082", %"class.blink::Member.1084", %"class.blink::Member.1086", %"class.blink::Member.1088", %"class.blink::TextLinkColors", %"class.blink::Member.1090", i8, [7 x i8], %"class.blink::HeapHashMap.1092", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.312", %"class.WTF::Vector.1099", %"class.blink::Member.1104", %"class.blink::Member.1108", i8, %"class.blink::Member.312", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1110", %"class.blink::HeapVector.1112", %"class.std::__1::unique_ptr.1120", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1126", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1139", %"class.WTF::Vector.1141", i8, i8, %"class.std::__1::unique_ptr.1146", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.443", %"class.blink::HeapVector.1152", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1160", i8, i32, %"class.blink::Member.1162", %"class.blink::Member.1164", %"class.blink::Member.1166", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1168", %"class.WTF::HashMap.1170", %"class.blink::Member.1175", %"class.blink::Member.1177", %"class.blink::Member.1179", %"class.blink::Member.1181", %"class.blink::Member.426", %"class.blink::Member.426", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1183", i8, i32, %"class.blink::Member.1190", %"class.blink::Member.1192", i32, %"class.blink::Member.1194", %"class.blink::Member.1196", %"class.blink::Member.1198", %"class.std::__1::unique_ptr.1200", i64, %"class.std::__1::unique_ptr.1206", i32, i32, %"class.blink::Member.1212", %"class.blink::Member.1214", %"class.blink::Member.1216", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1218", %"class.WTF::Vector.825", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1220", %"class.blink::Member.1227", %"class.std::__1::unique_ptr.1229", %"class.blink::Member.1235", i8, i8, %"class.WTF::String", %"class.blink::Member.1237", i8, [7 x i8], %"class.blink::HeapHashMap.1239", %"class.blink::HeapObserverSet.1246", %"class.blink::Member.1254", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1256", i32, i8, i8, %"class.blink::WeakMember.1258", %"class.blink::Member.1259" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable.504" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.505" }
%"class.blink::HeapHashMap.505" = type { %"class.WTF::HashMap.508" }
%"class.WTF::HashMap.508" = type { %"class.WTF::HashTable.509" }
%"class.WTF::HashTable.509" = type <{ %"struct.WTF::KeyValuePair.511"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.511" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.512" = type { %"class.WTF::VectorBuffer.513" }
%"class.WTF::VectorBuffer.513" = type { %"class.WTF::VectorBufferBase.514" }
%"class.WTF::VectorBufferBase.514" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.68 }
%class.scoped_refptr.68 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.69", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.69" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.39" }
%"class.blink::Member.517" = type { %"class.blink::MemberBase.518" }
%"class.blink::MemberBase.518" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::Member.584" = type { %"class.blink::MemberBase.585" }
%"class.blink::MemberBase.585" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.519", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.590", i32, i8, [3 x i8], %"class.blink::HeapVector.592", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.600", %"class.blink::Member.602", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.611", %"class.blink::Member.672", %"class.blink::Member.674", i8, [7 x i8] }>
%"class.blink::Supplementable.519" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.520" }
%"class.blink::HeapHashMap.520" = type { %"class.WTF::HashMap.523" }
%"class.WTF::HashMap.523" = type { %"class.WTF::HashTable.524" }
%"class.WTF::HashTable.524" = type <{ %"struct.WTF::KeyValuePair.526"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.526" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.534" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.527" }
%"class.blink::HeapHashSet.527" = type { %"class.WTF::HashSet.530" }
%"class.WTF::HashSet.530" = type { %"class.WTF::HashTable.531" }
%"class.WTF::HashTable.531" = type <{ %"class.blink::WeakMember.533"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.533" = type opaque
%"class.blink::Supplementable.534" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.535" }
%"class.blink::HeapHashMap.535" = type { %"class.WTF::HashMap.538" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.541"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.541" = type { i8*, %"class.blink::Member.1704" }
%"class.blink::Member.1704" = type { %"class.blink::MemberBase.1705" }
%"class.blink::MemberBase.1705" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1706" }
%"class.blink::Member.1706" = type { %"class.blink::MemberBase.1707" }
%"class.blink::MemberBase.1707" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.542, %"class.std::__1::unique_ptr.551", %"class.std::__1::unique_ptr.551", %"class.std::__1::unique_ptr.578", %"class.std::__1::unique_ptr.578", %"class.blink::Member.584", i32, [4 x i8], %"class.WTF::HashSet.586", i32, i32 }
%class.scoped_refptr.542 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.543", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.545", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.550 }
%"class.WTF::RefCounted.543" = type { %"class.base::RefCounted.544" }
%"class.base::RefCounted.544" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.absl::optional.545" = type { %"class.absl::optional_internal::optional_data.546" }
%"class.absl::optional_internal::optional_data.546" = type { %"class.absl::optional_internal::optional_data_base.547" }
%"class.absl::optional_internal::optional_data_base.547" = type { %"class.absl::optional_internal::optional_data_dtor_base.548" }
%"class.absl::optional_internal::optional_data_dtor_base.548" = type { i8, %union.anon.549 }
%union.anon.549 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.550 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.551" = type { %"class.std::__1::__compressed_pair.552" }
%"class.std::__1::__compressed_pair.552" = type { %"struct.std::__1::__compressed_pair_elem.553" }
%"struct.std::__1::__compressed_pair_elem.553" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map.554", %"class.std::__1::map.565", %"class.std::__1::map.574"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.545" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map.554" = type { %"class.std::__1::__tree.555" }
%"class.std::__1::__tree.555" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.556", %"class.std::__1::__compressed_pair.560" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.560" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"class.std::__1::map.565" = type { %"class.std::__1::__tree.566" }
%"class.std::__1::__tree.566" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.567", %"class.std::__1::__compressed_pair.571" }
%"class.std::__1::__compressed_pair.567" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"class.std::__1::__compressed_pair.571" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"class.std::__1::map.574" = type opaque
%"class.std::__1::unique_ptr.578" = type { %"class.std::__1::__compressed_pair.579" }
%"class.std::__1::__compressed_pair.579" = type { %"struct.std::__1::__compressed_pair_elem.580" }
%"struct.std::__1::__compressed_pair_elem.580" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.586" = type { %"class.WTF::HashTable.587" }
%"class.WTF::HashTable.587" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.590" = type { %"class.blink::MemberBase.591" }
%"class.blink::MemberBase.591" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.592" = type { %"class.WTF::Vector.595" }
%"class.WTF::Vector.595" = type { %"class.WTF::VectorBuffer.596" }
%"class.WTF::VectorBuffer.596" = type { %"class.WTF::VectorBufferBase.597" }
%"class.WTF::VectorBufferBase.597" = type { %"class.blink::Member.598"*, i32, i32 }
%"class.blink::Member.598" = type opaque
%"class.blink::Member.600" = type { %"class.blink::MemberBase.601" }
%"class.blink::MemberBase.601" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.602" = type { %"class.blink::MemberBase.603" }
%"class.blink::MemberBase.603" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.604", i32, i32 }
%"class.blink::HeapHashMap.604" = type { %"class.WTF::HashMap.607" }
%"class.WTF::HashMap.607" = type { %"class.WTF::HashTable.608" }
%"class.WTF::HashTable.608" = type <{ %"struct.WTF::KeyValuePair.610"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.610" = type opaque
%"class.std::__1::unique_ptr.611" = type { %"class.std::__1::__compressed_pair.612" }
%"class.std::__1::__compressed_pair.612" = type { %"struct.std::__1::__compressed_pair_elem.613" }
%"struct.std::__1::__compressed_pair_elem.613" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr.614", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr.614" = type { %"class.std::__1::unique_ptr.615" }
%"class.std::__1::unique_ptr.615" = type { %"class.std::__1::__compressed_pair.616" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.617" }
%"struct.std::__1::__compressed_pair_elem.617" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.618" }
%"class.WTF::Vector.618" = type { %"class.WTF::VectorBuffer.619" }
%"class.WTF::VectorBuffer.619" = type { %"class.WTF::VectorBufferBase.620" }
%"class.WTF::VectorBufferBase.620" = type { %"class.mojo::StructPtr.621"*, i32, i32 }
%"class.mojo::StructPtr.621" = type { %"class.std::__1::unique_ptr.622" }
%"class.std::__1::unique_ptr.622" = type { %"class.std::__1::__compressed_pair.623" }
%"class.std::__1::__compressed_pair.623" = type { %"struct.std::__1::__compressed_pair_elem.624" }
%"struct.std::__1::__compressed_pair_elem.624" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.625", %"class.WTF::HashMap.632", %"class.WTF::HashMap.637", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr.642", i8, %"class.WTF::Vector.643", i32, %"class.mojo::StructPtr.648", %"class.WTF::Vector.643" }
%"class.mojo::StructPtr.625" = type { %"class.std::__1::unique_ptr.626" }
%"class.std::__1::unique_ptr.626" = type { %"class.std::__1::__compressed_pair.627" }
%"class.std::__1::__compressed_pair.627" = type { %"struct.std::__1::__compressed_pair_elem.628" }
%"struct.std::__1::__compressed_pair_elem.628" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.632" = type { %"class.WTF::HashTable.633" }
%"class.WTF::HashTable.633" = type <{ %"struct.WTF::KeyValuePair.636"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.636" = type opaque
%"class.WTF::HashMap.637" = type { %"class.WTF::HashTable.638" }
%"class.WTF::HashTable.638" = type <{ %"struct.WTF::KeyValuePair.641"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.641" = type opaque
%"class.mojo::InlinedStructPtr.642" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.648" = type { %"class.std::__1::unique_ptr.649" }
%"class.std::__1::unique_ptr.649" = type { %"class.std::__1::__compressed_pair.650" }
%"class.std::__1::__compressed_pair.650" = type { %"struct.std::__1::__compressed_pair_elem.651" }
%"struct.std::__1::__compressed_pair_elem.651" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.643", i8, i8, [6 x i8] }>
%"class.WTF::Vector.643" = type { %"class.WTF::VectorBuffer.644" }
%"class.WTF::VectorBuffer.644" = type { %"class.WTF::VectorBufferBase.645" }
%"class.WTF::VectorBufferBase.645" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.663" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.161", i32 }>
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.164", %"class.base::OnceCallback.165", %"class.absl::optional.166", %"class.absl::optional.171", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.178", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.186", %"class.std::__1::map.197", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.206", i8, %class.scoped_refptr.44, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.207" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback.164" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.165" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.166" = type { %"class.absl::optional_internal::optional_data.167" }
%"class.absl::optional_internal::optional_data.167" = type { %"class.absl::optional_internal::optional_data_base.168" }
%"class.absl::optional_internal::optional_data_base.168" = type { %"class.absl::optional_internal::optional_data_dtor_base.169" }
%"class.absl::optional_internal::optional_data_dtor_base.169" = type { i8, %union.anon.170 }
%union.anon.170 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.171" = type { %"class.absl::optional_internal::optional_data.172" }
%"class.absl::optional_internal::optional_data.172" = type { %"class.absl::optional_internal::optional_data_base.173" }
%"class.absl::optional_internal::optional_data_base.173" = type { %"class.absl::optional_internal::optional_data_dtor_base.174" }
%"class.absl::optional_internal::optional_data_dtor_base.174" = type { i8, %union.anon.175 }
%union.anon.175 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.44, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.176" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::WeakPtrFactory.176" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.61 }
%class.scoped_refptr.61 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.62", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.62" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.63" }
%"struct.std::__1::atomic.63" = type { %"struct.std::__1::__atomic_base.64" }
%"struct.std::__1::__atomic_base.64" = type { %"struct.std::__1::__atomic_base.65" }
%"struct.std::__1::__atomic_base.65" = type { %"struct.std::__1::__cxx_atomic_impl.66" }
%"struct.std::__1::__cxx_atomic_impl.66" = type { %"struct.std::__1::__cxx_atomic_base_impl.67" }
%"struct.std::__1::__cxx_atomic_base_impl.67" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.120 }
%class.scoped_refptr.120 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.229", [4 x i8], %"class.base::RepeatingCallback.164", %class.scoped_refptr.44, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.229" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.177 }
%class.scoped_refptr.177 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.181", %class.scoped_refptr.182 }
%"class.base::RepeatingCallback.181" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.182 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.49", %"class.std::__1::unique_ptr.55", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.186" = type { %"class.std::__1::__tree.187" }
%"class.std::__1::__tree.187" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.188", %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"class.std::__1::map.197" = type { %"class.std::__1::__tree.198" }
%"class.std::__1::__tree.198" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.199", %"class.std::__1::__compressed_pair.203" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"class.base::OnceCallback.206" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.44 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.45" }>
%"class.base::RefCountedThreadSafe.45" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.207" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.663" = type { %"class.std::__1::__compressed_pair.664" }
%"class.std::__1::__compressed_pair.664" = type { %"struct.std::__1::__compressed_pair_elem.665" }
%"struct.std::__1::__compressed_pair_elem.665" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.672" = type { %"class.blink::MemberBase.673" }
%"class.blink::MemberBase.673" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.674" = type { %"class.blink::MemberBase.675" }
%"class.blink::MemberBase.675" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.838" = type { %"class.blink::MemberBase.839" }
%"class.blink::MemberBase.839" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.840" = type { %"class.blink::MemberBase.841" }
%"class.blink::MemberBase.841" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.842" = type { %"class.blink::MemberBase.843" }
%"class.blink::MemberBase.843" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.844" = type { %"class.blink::MemberBase.845" }
%"class.blink::MemberBase.845" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.846" = type { %"class.std::__1::__compressed_pair.847" }
%"class.std::__1::__compressed_pair.847" = type { %"struct.std::__1::__compressed_pair_elem.848" }
%"struct.std::__1::__compressed_pair_elem.848" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.297" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.297" = type { %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"class.blink::KURL"* }
%"class.blink::Member.852" = type { %"class.blink::MemberBase.853" }
%"class.blink::MemberBase.853" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.854" = type { %"class.blink::MemberBase.855" }
%"class.blink::MemberBase.855" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.467" = type { %"class.blink::MemberBase.468" }
%"class.blink::MemberBase.468" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.469", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.471, %"class.WTF::Vector.472", %"class.WTF::Vector.472", %"class.blink::Member.314", %"class.blink::Member.477", %"class.blink::HeapHashSet.481", %"class.blink::Member.426", %"class.WTF::HashSet.488", %"class.WTF::TextPosition", %"class.blink::Member.492", %"class.blink::HeapVector.494", %"class.blink::Member.501" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.469" = type { %"class.blink::MemberBase.470" }
%"class.blink::MemberBase.470" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.471 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.472" = type { %"class.WTF::VectorBuffer.473" }
%"class.WTF::VectorBuffer.473" = type { %"class.WTF::VectorBufferBase.474" }
%"class.WTF::VectorBufferBase.474" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.477" = type { %"class.blink::MemberBase.478" }
%"class.blink::MemberBase.478" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.479" }
%"class.blink::Member.479" = type { %"class.blink::MemberBase.480" }
%"class.blink::MemberBase.480" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.481" = type { %"class.WTF::HashSet.484" }
%"class.WTF::HashSet.484" = type { %"class.WTF::HashTable.485" }
%"class.WTF::HashTable.485" = type <{ %"class.blink::WeakMember.487"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.487" = type { %"class.blink::MemberBase.317" }
%"class.WTF::HashSet.488" = type { %"class.WTF::HashTable.489" }
%"class.WTF::HashTable.489" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.492" = type { %"class.blink::MemberBase.493" }
%"class.blink::MemberBase.493" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.494" = type { %"class.WTF::Vector.497" }
%"class.WTF::Vector.497" = type { %"class.WTF::VectorBuffer.498" }
%"class.WTF::VectorBuffer.498" = type { %"class.WTF::VectorBufferBase.499" }
%"class.WTF::VectorBufferBase.499" = type { %"class.blink::Member.477"*, i32, i32 }
%"class.blink::Member.501" = type { %"class.blink::MemberBase.502" }
%"class.blink::MemberBase.502" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.WTF::Vector.856" = type { %"class.WTF::VectorBuffer.857" }
%"class.WTF::VectorBuffer.857" = type { %"class.WTF::VectorBufferBase.858" }
%"class.WTF::VectorBufferBase.858" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.859 }
%class.scoped_refptr.859 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.860", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.860" = type { %"class.base::RefCounted.861" }
%"class.base::RefCounted.861" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.864" }
%"class.blink::HeapHashMap.864" = type { %"class.WTF::HashMap.867" }
%"class.WTF::HashMap.867" = type { %"class.WTF::HashTable.868" }
%"class.WTF::HashTable.868" = type <{ %"struct.WTF::KeyValuePair.870"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.870" = type { %"class.blink::WeakMember.871", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.871" = type { %"class.blink::MemberBase.872" }
%"class.blink::MemberBase.872" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.814" = type { %"class.blink::MemberBase.815" }
%"class.blink::MemberBase.815" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.426", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.314", %"class.blink::Member.314", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1059" }
%"class.blink::HeapHashMap.1059" = type { %"class.WTF::HashMap.1062" }
%"class.WTF::HashMap.1062" = type { %"class.WTF::HashTable.1063" }
%"class.WTF::HashTable.1063" = type <{ %"struct.WTF::KeyValuePair.1065"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1065" = type opaque
%"class.blink::Member.1066" = type { %"class.blink::MemberBase.1067" }
%"class.blink::MemberBase.1067" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1068" = type { %"class.WTF::HashSet.1071" }
%"class.WTF::HashSet.1071" = type { %"class.WTF::HashTable.1072" }
%"class.WTF::HashTable.1072" = type <{ %"class.blink::WeakMember.1074"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1074" = type opaque
%"class.blink::HeapHashSet.1075" = type { %"class.WTF::HashSet.1078" }
%"class.WTF::HashSet.1078" = type { %"class.WTF::HashTable.1079" }
%"class.WTF::HashTable.1079" = type <{ %"class.blink::WeakMember.1081"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1081" = type opaque
%"class.blink::Member.1082" = type { %"class.blink::MemberBase.1083" }
%"class.blink::MemberBase.1083" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1084" = type { %"class.blink::MemberBase.1085" }
%"class.blink::MemberBase.1085" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.1086" = type { %"class.blink::MemberBase.1087" }
%"class.blink::MemberBase.1087" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.316", %"class.blink::HeapVector.461" }
%"class.blink::Member.1088" = type { %"class.blink::MemberBase.1089" }
%"class.blink::MemberBase.1089" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.1090" = type { %"class.blink::MemberBase.1091" }
%"class.blink::MemberBase.1091" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1092" = type { %"class.WTF::HashMap.1095" }
%"class.WTF::HashMap.1095" = type { %"class.WTF::HashTable.1096" }
%"class.WTF::HashTable.1096" = type <{ %"struct.WTF::KeyValuePair.1098"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1098" = type opaque
%"class.WTF::Vector.1099" = type { %"class.WTF::VectorBuffer.1100" }
%"class.WTF::VectorBuffer.1100" = type { %"class.WTF::VectorBufferBase.1101" }
%"class.WTF::VectorBufferBase.1101" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1104" = type { %"class.blink::MemberBase.1105" }
%"class.blink::MemberBase.1105" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type { i32 (...)** }
%"class.blink::Member.1108" = type { %"class.blink::MemberBase.1109" }
%"class.blink::MemberBase.1109" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.324" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.322 }
%class.scoped_refptr.322 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted.323" }
%"class.base::RefCounted.323" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.324" = type { %"class.blink::MemberBase.325" }
%"class.blink::MemberBase.325" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.328", %"class.blink::Member.330", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.328" = type { %"class.WTF::SingleThreadedBitField.329" }
%"class.WTF::SingleThreadedBitField.329" = type { i32 }
%"class.blink::Member.330" = type { %"class.blink::MemberBase.331" }
%"class.blink::MemberBase.331" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.332 }
%class.scoped_refptr.332 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.333", %"class.WTF::AtomicString", %"class.WTF::Vector.335" }
%"class.WTF::RefCounted.333" = type { %"class.base::RefCounted.334" }
%"class.base::RefCounted.334" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.335" = type { %"class.WTF::VectorBuffer.336" }
%"class.WTF::VectorBuffer.336" = type { %"class.WTF::VectorBufferBase.337", [32 x i8] }
%"class.WTF::VectorBufferBase.337" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1110" = type { %"class.blink::MemberBase.1111" }
%"class.blink::MemberBase.1111" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1112" = type { %"class.WTF::Vector.1115" }
%"class.WTF::Vector.1115" = type { %"class.WTF::VectorBuffer.1116" }
%"class.WTF::VectorBuffer.1116" = type { %"class.WTF::VectorBufferBase.1117" }
%"class.WTF::VectorBufferBase.1117" = type { %"class.blink::Member.1118"*, i32, i32 }
%"class.blink::Member.1118" = type opaque
%"class.std::__1::unique_ptr.1120" = type { %"class.std::__1::__compressed_pair.1121" }
%"class.std::__1::__compressed_pair.1121" = type { %"struct.std::__1::__compressed_pair_elem.1122" }
%"struct.std::__1::__compressed_pair_elem.1122" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.1126" = type { %"class.WTF::HashSet.1129" }
%"class.WTF::HashSet.1129" = type { %"class.WTF::HashTable.1130" }
%"class.WTF::HashTable.1130" = type <{ %"class.blink::WeakMember.1132"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1132" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1133", i32, [4 x i8] }>
%"class.WTF::Vector.1133" = type { %"class.WTF::VectorBuffer.1134" }
%"class.WTF::VectorBuffer.1134" = type { %"class.WTF::VectorBufferBase.1135" }
%"class.WTF::VectorBufferBase.1135" = type { %"struct.std::__1::pair.1136"*, i32, i32 }
%"struct.std::__1::pair.1136" = type opaque
%"class.blink::Member.1139" = type { %"class.blink::MemberBase.1140" }
%"class.blink::MemberBase.1140" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1141" = type { %"class.WTF::VectorBuffer.1142" }
%"class.WTF::VectorBuffer.1142" = type { %"class.WTF::VectorBufferBase.1143" }
%"class.WTF::VectorBufferBase.1143" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1146" = type { %"class.std::__1::__compressed_pair.1147" }
%"class.std::__1::__compressed_pair.1147" = type { %"struct.std::__1::__compressed_pair_elem.1148" }
%"struct.std::__1::__compressed_pair_elem.1148" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.443" = type { %"class.WTF::Vector.446" }
%"class.WTF::Vector.446" = type { %"class.WTF::VectorBuffer.447" }
%"class.WTF::VectorBuffer.447" = type { %"class.WTF::VectorBufferBase.448" }
%"class.WTF::VectorBufferBase.448" = type { %"class.blink::Member.312"*, i32, i32 }
%"class.blink::HeapVector.1152" = type { %"class.WTF::Vector.1155" }
%"class.WTF::Vector.1155" = type { %"class.WTF::VectorBuffer.1156" }
%"class.WTF::VectorBuffer.1156" = type { %"class.WTF::VectorBufferBase.1157" }
%"class.WTF::VectorBufferBase.1157" = type { %"class.blink::Member.1158"*, i32, i32 }
%"class.blink::Member.1158" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.426" }
%"class.blink::Member.1160" = type { %"class.blink::MemberBase.1161" }
%"class.blink::MemberBase.1161" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1162" = type { %"class.blink::MemberBase.1163" }
%"class.blink::MemberBase.1163" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.1165" }
%"class.blink::MemberBase.1165" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1166" = type { %"class.blink::MemberBase.1167" }
%"class.blink::MemberBase.1167" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1168" = type { %"class.blink::MemberBase.1169" }
%"class.blink::MemberBase.1169" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1170" = type { %"class.WTF::HashTable.1171" }
%"class.WTF::HashTable.1171" = type <{ %"struct.WTF::KeyValuePair.1174"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1174" = type opaque
%"class.blink::Member.1175" = type { %"class.blink::MemberBase.1176" }
%"class.blink::MemberBase.1176" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1177" = type { %"class.blink::MemberBase.1178" }
%"class.blink::MemberBase.1178" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1179" = type { %"class.blink::MemberBase.1180" }
%"class.blink::MemberBase.1180" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1181" = type { %"class.blink::MemberBase.1182" }
%"class.blink::MemberBase.1182" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1058", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.1056, %"class.base::WeakPtrFactory.1057" }
%class.scoped_refptr.1056 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory.1057" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.1058" = type { %"class.blink::MemberBase.427" }
%"class.blink::HeapHashSet.1183" = type { %"class.WTF::HashSet.1186" }
%"class.WTF::HashSet.1186" = type { %"class.WTF::HashTable.1187" }
%"class.WTF::HashTable.1187" = type <{ %"class.blink::Member.1189"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1189" = type opaque
%"class.blink::Member.1190" = type { %"class.blink::MemberBase.1191" }
%"class.blink::MemberBase.1191" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1192" = type { %"class.blink::MemberBase.1193" }
%"class.blink::MemberBase.1193" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1194" = type { %"class.blink::MemberBase.1195" }
%"class.blink::MemberBase.1195" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1196" = type { %"class.blink::MemberBase.1197" }
%"class.blink::MemberBase.1197" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1198" = type { %"class.blink::MemberBase.1199" }
%"class.blink::MemberBase.1199" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1200" = type { %"class.std::__1::__compressed_pair.1201" }
%"class.std::__1::__compressed_pair.1201" = type { %"struct.std::__1::__compressed_pair_elem.1202" }
%"struct.std::__1::__compressed_pair_elem.1202" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1206" = type { %"class.std::__1::__compressed_pair.1207" }
%"class.std::__1::__compressed_pair.1207" = type { %"struct.std::__1::__compressed_pair_elem.1208" }
%"struct.std::__1::__compressed_pair_elem.1208" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.1212" = type { %"class.blink::MemberBase.1213" }
%"class.blink::MemberBase.1213" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1214" = type { %"class.blink::MemberBase.1215" }
%"class.blink::MemberBase.1215" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1216" = type { %"class.blink::MemberBase.1217" }
%"class.blink::MemberBase.1217" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1218" = type { %"class.blink::MemberBase.1219" }
%"class.blink::MemberBase.1219" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.825" = type { %"class.WTF::VectorBuffer.826" }
%"class.WTF::VectorBuffer.826" = type { %"class.WTF::VectorBufferBase.827" }
%"class.WTF::VectorBufferBase.827" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1220" = type { %"class.WTF::HashMap.1223" }
%"class.WTF::HashMap.1223" = type { %"class.WTF::HashTable.1224" }
%"class.WTF::HashTable.1224" = type <{ %"struct.WTF::KeyValuePair.1226"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1226" = type opaque
%"class.blink::Member.1227" = type { %"class.blink::MemberBase.1228" }
%"class.blink::MemberBase.1228" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1229" = type { %"class.std::__1::__compressed_pair.1230" }
%"class.std::__1::__compressed_pair.1230" = type { %"struct.std::__1::__compressed_pair_elem.1231" }
%"struct.std::__1::__compressed_pair_elem.1231" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1235" = type { %"class.blink::MemberBase.1236" }
%"class.blink::MemberBase.1236" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1237" = type { %"class.blink::MemberBase.1238" }
%"class.blink::MemberBase.1238" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1239" = type { %"class.WTF::HashMap.1242" }
%"class.WTF::HashMap.1242" = type { %"class.WTF::HashTable.1243" }
%"class.WTF::HashTable.1243" = type <{ %"struct.WTF::KeyValuePair.1245"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1245" = type opaque
%"class.blink::HeapObserverSet.1246" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1247" }
%"class.blink::HeapHashSet.1247" = type { %"class.WTF::HashSet.1250" }
%"class.WTF::HashSet.1250" = type { %"class.WTF::HashTable.1251" }
%"class.WTF::HashTable.1251" = type <{ %"class.blink::WeakMember.1253"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1253" = type opaque
%"class.blink::Member.1254" = type { %"class.blink::MemberBase.1255" }
%"class.blink::MemberBase.1255" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1256" = type { %"class.blink::MemberBase.1257" }
%"class.blink::MemberBase.1257" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.426", %"class.blink::HeapHashSet.1263", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1270", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1263" = type { %"class.WTF::HashSet.1266" }
%"class.WTF::HashSet.1266" = type { %"class.WTF::HashTable.1267" }
%"class.WTF::HashTable.1267" = type <{ %"class.blink::Member.1269"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1269" = type opaque
%"class.blink::HeapTaskRunnerTimer.1270" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1271", { i64, i64 } }
%"class.blink::WeakMember.1271" = type { %"class.blink::MemberBase.1257" }
%"class.blink::Member.1259" = type { %"class.blink::MemberBase.1260" }
%"class.blink::MemberBase.1260" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.428" = type { %"class.blink::MemberBase.429" }
%"class.blink::MemberBase.429" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.432" }
%"class.blink::HeapHashMap.432" = type { %"class.WTF::HashMap.435" }
%"class.WTF::HashMap.435" = type { %"class.WTF::HashTable.436" }
%"class.WTF::HashTable.436" = type <{ %"struct.WTF::KeyValuePair.438"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.438" = type { %"class.WTF::AtomicString", %"class.blink::Member.439" }
%"class.blink::Member.439" = type { %"class.blink::MemberBase.440" }
%"class.blink::MemberBase.440" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.312", i32, %"class.blink::HeapVector.443" }
%"class.blink::Member.450" = type { %"class.blink::MemberBase.451" }
%"class.blink::MemberBase.451" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.452" = type { %"class.blink::MemberBase.453" }
%"class.blink::MemberBase.453" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.454" = type { %"class.blink::MemberBase.455" }
%"class.blink::MemberBase.455" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.456" }
%"class.blink::Member.456" = type { %"class.blink::MemberBase.457" }
%"class.blink::MemberBase.457" = type { %"class.blink::HeapHashMap.458"* }
%"class.blink::HeapHashMap.458" = type opaque
%"class.blink::Member.459" = type { %"class.blink::MemberBase.460" }
%"class.blink::MemberBase.460" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.461" = type { %"class.WTF::Vector.464" }
%"class.WTF::Vector.464" = type { %"class.WTF::VectorBuffer.465" }
%"class.WTF::VectorBuffer.465" = type { %"class.WTF::VectorBufferBase.466" }
%"class.WTF::VectorBufferBase.466" = type { %"class.blink::Member.467"*, i32, i32 }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::Member.1603" = type { %"class.blink::MemberBase.1604" }
%"class.blink::MemberBase.1604" = type { %"class.blink::DragCaret"* }
%"class.blink::DragCaret" = type opaque
%"class.blink::Member.1605" = type { %"class.blink::MemberBase.1606" }
%"class.blink::MemberBase.1606" = type { %"class.blink::DragController"* }
%"class.blink::DragController" = type opaque
%"class.blink::Member.1607" = type { %"class.blink::MemberBase.1608" }
%"class.blink::MemberBase.1608" = type { %"class.blink::FocusController"* }
%"class.blink::FocusController" = type opaque
%"class.blink::Member.1609" = type { %"class.blink::MemberBase.1610" }
%"class.blink::MemberBase.1610" = type { %"class.blink::ContextMenuController"* }
%"class.blink::ContextMenuController" = type opaque
%"class.blink::Member.1611" = type { %"class.blink::MemberBase.1612" }
%"class.blink::MemberBase.1612" = type { %"class.blink::PageScaleConstraintsSet"* }
%"class.blink::PageScaleConstraintsSet" = type opaque
%"class.blink::HeapObserverSet.1613" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1614" }
%"class.blink::HeapHashSet.1614" = type { %"class.WTF::HashSet.1617" }
%"class.WTF::HashSet.1617" = type { %"class.WTF::HashTable.1618" }
%"class.WTF::HashTable.1618" = type <{ %"class.blink::WeakMember.1620"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1620" = type opaque
%"class.blink::Member.1621" = type { %"class.blink::MemberBase.1622" }
%"class.blink::MemberBase.1622" = type { %"class.blink::PointerLockController"* }
%"class.blink::PointerLockController" = type opaque
%"class.blink::Member.1623" = type { %"class.blink::MemberBase.1624" }
%"class.blink::MemberBase.1624" = type { %"class.blink::ScrollingCoordinator"* }
%"class.blink::ScrollingCoordinator" = type opaque
%"class.blink::Member.1625" = type { %"class.blink::MemberBase.1626" }
%"class.blink::MemberBase.1626" = type { %"class.blink::BrowserControls"* }
%"class.blink::BrowserControls" = type opaque
%"class.blink::Member.1627" = type { %"class.blink::MemberBase.1628" }
%"class.blink::MemberBase.1628" = type { %"class.blink::ConsoleMessageStorage"* }
%"class.blink::ConsoleMessageStorage" = type opaque
%"class.blink::Member.1629" = type { %"class.blink::MemberBase.1630" }
%"class.blink::MemberBase.1630" = type { %"class.blink::TopDocumentRootScrollerController"* }
%"class.blink::TopDocumentRootScrollerController" = type opaque
%"class.blink::Member.1631" = type { %"class.blink::MemberBase.1632" }
%"class.blink::MemberBase.1632" = type { %"class.blink::VisualViewport"* }
%"class.blink::VisualViewport" = type opaque
%"class.blink::Member.1633" = type { %"class.blink::MemberBase.1634" }
%"class.blink::MemberBase.1634" = type { %"class.blink::OverscrollController"* }
%"class.blink::OverscrollController" = type opaque
%"class.blink::Member.1635" = type { %"class.blink::MemberBase.1636" }
%"class.blink::MemberBase.1636" = type { %"class.blink::LinkHighlight"* }
%"class.blink::LinkHighlight" = type opaque
%"class.blink::Member.1637" = type { %"class.blink::MemberBase.1638" }
%"class.blink::MemberBase.1638" = type { %"class.blink::SpatialNavigationController"* }
%"class.blink::SpatialNavigationController" = type opaque
%"class.blink::Member.1639" = type { %"class.blink::MemberBase.1640" }
%"class.blink::MemberBase.1640" = type { %"class.blink::PluginData"* }
%"class.blink::PluginData" = type opaque
%"class.blink::Member.1641" = type { %"class.blink::MemberBase.1642" }
%"class.blink::MemberBase.1642" = type { %"class.blink::ValidationMessageClient"* }
%"class.blink::ValidationMessageClient" = type opaque
%"class.blink::InspectorIssueStorage" = type { i32 (...)**, %"class.WTF::Deque.1643" }
%"class.WTF::Deque.1643" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.1646" }
%"class.WTF::VectorBuffer.1646" = type { %"class.WTF::VectorBufferBase.1647" }
%"class.WTF::VectorBufferBase.1647" = type { %"class.std::__1::unique_ptr.1648"*, i32, i32 }
%"class.std::__1::unique_ptr.1648" = type { %"class.std::__1::__compressed_pair.1649" }
%"class.std::__1::__compressed_pair.1649" = type { %"struct.std::__1::__compressed_pair_elem.1650" }
%"struct.std::__1::__compressed_pair_elem.1650" = type { %"class.blink::protocol::Audits::InspectorIssue"* }
%"class.blink::protocol::Audits::InspectorIssue" = type opaque
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.1654", i32, [4 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.std::__1::bitset.1654" = type { %"class.std::__1::__bitset.1655" }
%"class.std::__1::__bitset.1655" = type { [25 x i64] }
%"struct.blink::WebWindowFeatures" = type { i32, i8, i32, i8, i32, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.absl::optional.1656" }
%"class.absl::optional.1656" = type { %"class.absl::optional_internal::optional_data.1657" }
%"class.absl::optional_internal::optional_data.1657" = type { %"class.absl::optional_internal::optional_data_base.1658" }
%"class.absl::optional_internal::optional_data_base.1658" = type { %"class.absl::optional_internal::optional_data_dtor_base.1659" }
%"class.absl::optional_internal::optional_data_dtor_base.1659" = type { i8, %union.anon.1660 }
%union.anon.1660 = type { %"struct.blink::WebImpression" }
%"struct.blink::WebImpression" = type { %"class.blink::WebSecurityOrigin", %"class.absl::optional.1661", i64, %"class.absl::optional.166", i64 }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.absl::optional.1661" = type { %"class.absl::optional_internal::optional_data.1662" }
%"class.absl::optional_internal::optional_data.1662" = type { %"class.absl::optional_internal::optional_data_base.1663" }
%"class.absl::optional_internal::optional_data_base.1663" = type { %"class.absl::optional_internal::optional_data_dtor_base.1664" }
%"class.absl::optional_internal::optional_data_dtor_base.1664" = type { i8, %union.anon.1665 }
%union.anon.1665 = type { %"class.blink::WebSecurityOrigin" }
%"class.mojo::StructPtr.1666" = type { %"class.std::__1::unique_ptr.1667" }
%"class.std::__1::unique_ptr.1667" = type { %"class.std::__1::__compressed_pair.1668" }
%"class.std::__1::__compressed_pair.1668" = type { %"struct.std::__1::__compressed_pair_elem.1669" }
%"struct.std::__1::__compressed_pair_elem.1669" = type { %"class.blink::mojom::blink::PageLifecycleState"* }
%"class.blink::mojom::blink::PageLifecycleState" = type <{ i8, [3 x i8], i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.blink::HeapHashSet.1673" = type { %"class.WTF::HashSet.1676" }
%"class.WTF::HashSet.1676" = type { %"class.WTF::HashTable.1677" }
%"class.WTF::HashTable.1677" = type <{ %"class.blink::WeakMember.1679"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1679" = type opaque
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr.1680" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.base::WeakPtr.1680" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.121 }
%class.scoped_refptr.121 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::unique_ptr.1681" = type { %"class.std::__1::__compressed_pair.1682" }
%"class.std::__1::__compressed_pair.1682" = type { %"struct.std::__1::__compressed_pair_elem.1683" }
%"struct.std::__1::__compressed_pair_elem.1683" = type { %"class.blink::PageScheduler"* }
%"class.blink::PageScheduler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1687" = type { %"class.std::__1::__compressed_pair.1688" }
%"class.std::__1::__compressed_pair.1688" = type { %"struct.std::__1::__compressed_pair_elem.1689" }
%"struct.std::__1::__compressed_pair_elem.1689" = type { %"class.blink::MediaFeatureOverrides"* }
%"class.blink::MediaFeatureOverrides" = type opaque
%"class.blink::mojom::blink::TextAutosizerPageInfo" = type { i32, i32, float }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.blink::Member.234" = type { %"class.blink::MemberBase.235" }
%"class.blink::MemberBase.235" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.236" = type { %"class.blink::MemberBase.237" }
%"class.blink::MemberBase.237" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.238" = type { %"class.blink::MemberBase.239" }
%"class.blink::MemberBase.239" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.269", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.283", %"class.blink::FrameLoader", %"class.blink::Member.310", %"class.blink::Member.312", %"class.blink::Member.340", %"class.blink::Member.342", %"class.blink::Member.344", %"class.blink::Member.346", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.348", %class.scoped_refptr.350, %"class.blink::Member.351", %"class.blink::Member.353", %"class.blink::Member.355", %"class.blink::Member.357", %"class.blink::Member.359", %"class.blink::Member.361", %"class.blink::Member.363", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.367", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.373", %"class.std::__1::unique_ptr.374", %"class.absl::optional.253", i32, [4 x i8], %"class.std::__1::unique_ptr.380", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.388", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.393", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.398", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.401", %"class.blink::Member.403", %"class.blink::Member.405", %"class.blink::Member.407", %"class.mojo::StructPtr", %"class.blink::Member.417", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.419", i8, [7 x i8] }>
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.269" = type { %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.272", %"class.base::WeakPtrFactory.277" }
%"class.WTF::HashMap.272" = type { %"class.WTF::HashTable.273" }
%"class.WTF::HashTable.273" = type <{ %"struct.WTF::KeyValuePair.276"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.276" = type opaque
%"class.base::WeakPtrFactory.277" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.281" }
%"class.blink::Member.281" = type { %"class.blink::MemberBase.282" }
%"class.blink::MemberBase.282" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.803" }
%"class.blink::WeakMember.803" = type { %"class.blink::MemberBase.804" }
%"class.blink::MemberBase.804" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback.164", %"class.base::RepeatingCallback.1716", i64, %"class.std::__1::map.1717", i8*, i64, %"class.base::WeakPtrFactory.1726" }
%"class.base::RepeatingCallback.1716" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.1717" = type { %"class.std::__1::__tree.1718" }
%"class.std::__1::__tree.1718" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1719", %"class.std::__1::__compressed_pair.1723" }
%"class.std::__1::__compressed_pair.1719" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"class.std::__1::__compressed_pair.1723" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"class.base::WeakPtrFactory.1726" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.283" = type { %"class.WTF::HashSet.286" }
%"class.WTF::HashSet.286" = type { %"class.WTF::HashTable.287" }
%"class.WTF::HashTable.287" = type <{ %"class.blink::WeakMember.289"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.289" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.238", %"class.blink::Member.290", %"class.blink::Member.292", %"class.std::__1::unique_ptr.294", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.306" }
%"class.blink::Member.290" = type { %"class.blink::MemberBase.291" }
%"class.blink::MemberBase.291" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.292" = type { %"class.blink::MemberBase.293" }
%"class.blink::MemberBase.293" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.294" = type { %"class.std::__1::__compressed_pair.295" }
%"class.std::__1::__compressed_pair.295" = type { %"struct.std::__1::__compressed_pair_elem.296" }
%"struct.std::__1::__compressed_pair_elem.296" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.WTF::HashSet.306" = type { %"class.WTF::HashTable.307" }
%"class.WTF::HashTable.307" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.310" = type { %"class.blink::MemberBase.311" }
%"class.blink::MemberBase.311" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1292", %"class.blink::Member.238", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1297", i8, i32, %"class.blink::Color", %"class.absl::optional.1299", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1304", %"class.blink::Member.1306", %"class.blink::Member.1306", %"class.std::__1::unique_ptr.1309", i32, [4 x i8], %"class.WTF::HashSet.1312", %"class.blink::Member.1319", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1321", %"class.blink::HeapHashSet.1328", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1336", i8, %"class.blink::Member.1342", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1354", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1368", i8, %"class.std::__1::unique_ptr.1374", %"class.std::__1::unique_ptr.1491", %"class.WTF::Vector.1497", i32, %class.scoped_refptr.1502, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1503", %"class.blink::Member.1505", %"class.blink::Member.1507", %"class.blink::HeapHashSet.1509", %"class.blink::HeapHashSet.1516", %"class.std::__1::unique_ptr.1523", %"class.std::__1::unique_ptr.1530", %"class.WTF::Vector.512" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.1292" = type { %"class.WTF::HashTable.1293" }
%"class.WTF::HashTable.1293" = type <{ %class.scoped_refptr.1296*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1296 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1297" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1298", { i64, i64 } }
%"class.blink::WeakMember.1298" = type { %"class.blink::MemberBase.311" }
%"class.absl::optional.1299" = type { %"class.absl::optional_internal::optional_data.1300" }
%"class.absl::optional_internal::optional_data.1300" = type { %"class.absl::optional_internal::optional_data_base.1301" }
%"class.absl::optional_internal::optional_data_base.1301" = type { %"class.absl::optional_internal::optional_data_dtor_base.1302" }
%"class.absl::optional_internal::optional_data_dtor_base.1302" = type { i8, %union.anon.1303 }
%union.anon.1303 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1304" = type { %"class.blink::MemberBase.1305" }
%"class.blink::MemberBase.1305" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1306" = type { %"class.blink::MemberBase.1307" }
%"class.blink::MemberBase.1307" = type { %"class.blink::HeapHashSet.1308"* }
%"class.blink::HeapHashSet.1308" = type opaque
%"class.std::__1::unique_ptr.1309" = type { %"class.std::__1::__compressed_pair.1310" }
%"class.std::__1::__compressed_pair.1310" = type { %"struct.std::__1::__compressed_pair_elem.1311" }
%"struct.std::__1::__compressed_pair_elem.1311" = type { %"class.WTF::HashSet.1312"* }
%"class.WTF::HashSet.1312" = type { %"class.WTF::HashTable.1313" }
%"class.WTF::HashTable.1313" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.1319" = type { %"class.blink::MemberBase.1320" }
%"class.blink::MemberBase.1320" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1321" = type { %"class.WTF::HashSet.1324" }
%"class.WTF::HashSet.1324" = type { %"class.WTF::HashTable.1325" }
%"class.WTF::HashTable.1325" = type <{ %"class.blink::Member.1327"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1327" = type opaque
%"class.blink::HeapHashSet.1328" = type { %"class.WTF::HashSet.1331" }
%"class.WTF::HashSet.1331" = type { %"class.WTF::HashTable.1332" }
%"class.WTF::HashTable.1332" = type <{ %"class.blink::Member.1334"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1334" = type { %"class.blink::MemberBase.1335" }
%"class.blink::MemberBase.1335" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1564", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1575", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.312" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::Member.1564" = type { %"class.blink::MemberBase.1565" }
%"class.blink::MemberBase.1565" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.1566", %"class.blink::Member.1567", %"class.blink::Member.1569", %"class.blink::Member.1571", %"class.blink::Member.1573", %"class.WTF::Vector.512", i16, %class.scoped_refptr.1056 }
%"class.blink::ThreadState::PrefinalizerRegistration.1566" = type { i8 }
%"class.blink::Member.1567" = type { %"class.blink::MemberBase.1568" }
%"class.blink::MemberBase.1568" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.1569" = type { %"class.blink::MemberBase.1570" }
%"class.blink::MemberBase.1570" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.1571" = type { %"class.blink::MemberBase.1572" }
%"class.blink::MemberBase.1572" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.1573" = type { %"class.blink::MemberBase.1574" }
%"class.blink::MemberBase.1574" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type opaque
%"class.blink::HeapTaskRunnerTimer.1575" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1576", { i64, i64 } }
%"class.blink::WeakMember.1576" = type { %"class.blink::MemberBase.1335" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1336" = type { %"class.std::__1::__compressed_pair.1337" }
%"class.std::__1::__compressed_pair.1337" = type { %"struct.std::__1::__compressed_pair_elem.1338" }
%"struct.std::__1::__compressed_pair_elem.1338" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1342" = type { %"class.blink::MemberBase.1343" }
%"class.blink::MemberBase.1343" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1346", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1346" = type { %"class.WTF::HashTable.1347" }
%"class.WTF::HashTable.1347" = type <{ %"struct.WTF::KeyValuePair.1349"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1349" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1350", i32, i32 }
%"class.WTF::Vector.1350" = type { %"class.WTF::VectorBuffer.1351" }
%"class.WTF::VectorBuffer.1351" = type { %"class.WTF::VectorBufferBase.1352" }
%"class.WTF::VectorBufferBase.1352" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1354" = type { %"class.WTF::LinkedHashSet.1357" }
%"class.WTF::LinkedHashSet.1357" = type { %"class.WTF::HashMap.1358", %"class.WTF::VectorBackedLinkedList.1362" }
%"class.WTF::HashMap.1358" = type { %"class.WTF::HashTable.1359" }
%"class.WTF::HashTable.1359" = type <{ %"struct.WTF::KeyValuePair.1361"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1361" = type opaque
%"class.WTF::VectorBackedLinkedList.1362" = type { %"class.WTF::Vector.1363", i32, i32 }
%"class.WTF::Vector.1363" = type { %"class.WTF::VectorBuffer.1364" }
%"class.WTF::VectorBuffer.1364" = type { %"class.WTF::VectorBufferBase.1365" }
%"class.WTF::VectorBufferBase.1365" = type { %"class.WTF::VectorBackedLinkedListNode.1366"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1366" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1368" = type { %"class.std::__1::__compressed_pair.1369" }
%"class.std::__1::__compressed_pair.1369" = type { %"struct.std::__1::__compressed_pair_elem.1370" }
%"struct.std::__1::__compressed_pair_elem.1370" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1374" = type { %"class.std::__1::__compressed_pair.1375" }
%"class.std::__1::__compressed_pair.1375" = type { %"struct.std::__1::__compressed_pair_elem.1376" }
%"struct.std::__1::__compressed_pair_elem.1376" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1377, %class.scoped_refptr.1377, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1468", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1473", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1377 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1378", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1385" }
%"class.WTF::RefCounted.1378" = type { %"class.base::RefCounted.1379" }
%"class.base::RefCounted.1379" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1380", i32, [4 x i8] }>
%"class.WTF::Vector.1380" = type { %"class.WTF::VectorBuffer.1381" }
%"class.WTF::VectorBuffer.1381" = type { %"class.WTF::VectorBufferBase.1382" }
%"class.WTF::VectorBufferBase.1382" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1385" = type { %"class.WTF::VectorBuffer.1386" }
%"class.WTF::VectorBuffer.1386" = type { %"class.WTF::VectorBufferBase.1387" }
%"class.WTF::VectorBufferBase.1387" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1391", %"class.std::__1::unique_ptr.1440", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1388, %class.scoped_refptr.1389, %class.scoped_refptr.1390 }
%class.scoped_refptr.1388 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1404", i8, i8, %class.scoped_refptr.1388, i32, i32 }
%"class.WTF::RefCounted.1404" = type { %"class.base::RefCounted.1405" }
%"class.base::RefCounted.1405" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1389 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1559" }
%"class.blink::PaintPropertyNode.1559" = type { %"class.WTF::RefCounted.1560", i8, i8, %class.scoped_refptr.1389, i32, i32 }
%"class.WTF::RefCounted.1560" = type { %"class.base::RefCounted.1561" }
%"class.base::RefCounted.1561" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1390 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1556" }
%"class.blink::PaintPropertyNode.1556" = type { %"class.WTF::RefCounted.1557", i8, i8, %class.scoped_refptr.1390, i32, i32 }
%"class.WTF::RefCounted.1557" = type { %"class.base::RefCounted.1558" }
%"class.base::RefCounted.1558" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1391" = type { %"class.std::__1::__compressed_pair.1392" }
%"class.std::__1::__compressed_pair.1392" = type { %"struct.std::__1::__compressed_pair_elem.1393" }
%"struct.std::__1::__compressed_pair_elem.1393" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1394", %"class.WTF::Vector.1399", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1394" = type { %"class.WTF::VectorBuffer.1395" }
%"class.WTF::VectorBuffer.1395" = type { %"class.WTF::VectorBufferBase.1396" }
%"class.WTF::VectorBufferBase.1396" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1399" = type { %"class.WTF::VectorBuffer.1400" }
%"class.WTF::VectorBuffer.1400" = type { %"class.WTF::VectorBufferBase.1401" }
%"class.WTF::VectorBufferBase.1401" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1419" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1412, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1413", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1406" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.1406" = type { %"class.std::__1::__compressed_pair.1407" }
%"class.std::__1::__compressed_pair.1407" = type { %"struct.std::__1::__compressed_pair_elem.1408" }
%"struct.std::__1::__compressed_pair_elem.1408" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1412 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1541", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1541" = type { %"class.WTF::RefCounted.1542", i8, i8, %class.scoped_refptr.1412, i32, i32 }
%"class.WTF::RefCounted.1542" = type { %"class.base::RefCounted.1543" }
%"class.base::RefCounted.1543" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1544" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1544" = type { %"class.absl::optional_internal::optional_data.1545" }
%"class.absl::optional_internal::optional_data.1545" = type { %"class.absl::optional_internal::optional_data_base.1546" }
%"class.absl::optional_internal::optional_data_base.1546" = type { %"class.absl::optional_internal::optional_data_dtor_base.1547" }
%"class.absl::optional_internal::optional_data_dtor_base.1547" = type { i8, %union.anon.1548 }
%union.anon.1548 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1549", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1549" = type { %"class.std::__1::__vector_base.1550" }
%"class.std::__1::__vector_base.1550" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1551" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1551" = type { %"struct.std::__1::__compressed_pair_elem.1552" }
%"struct.std::__1::__compressed_pair_elem.1552" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1413" = type { %"class.std::__1::__compressed_pair.1414" }
%"class.std::__1::__compressed_pair.1414" = type { %"struct.std::__1::__compressed_pair_elem.1415" }
%"struct.std::__1::__compressed_pair_elem.1415" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1419" = type { %"class.std::__1::__compressed_pair.1420" }
%"class.std::__1::__compressed_pair.1420" = type { %"struct.std::__1::__compressed_pair_elem.1421" }
%"struct.std::__1::__compressed_pair_elem.1421" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1422", %"class.std::__1::unique_ptr.1428", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1422" = type { %"class.std::__1::__compressed_pair.1423" }
%"class.std::__1::__compressed_pair.1423" = type { %"struct.std::__1::__compressed_pair_elem.1424" }
%"struct.std::__1::__compressed_pair_elem.1424" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1428" = type { %"class.std::__1::__compressed_pair.1429" }
%"class.std::__1::__compressed_pair.1429" = type { %"struct.std::__1::__compressed_pair_elem.1430" }
%"struct.std::__1::__compressed_pair_elem.1430" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1440" = type { %"class.std::__1::__compressed_pair.1441" }
%"class.std::__1::__compressed_pair.1441" = type { %"struct.std::__1::__compressed_pair_elem.1442" }
%"struct.std::__1::__compressed_pair_elem.1442" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1443", %"class.absl::optional.1443" }
%"class.absl::optional.1443" = type { %"class.absl::optional_internal::optional_data.1444" }
%"class.absl::optional_internal::optional_data.1444" = type { %"class.absl::optional_internal::optional_data_base.1445" }
%"class.absl::optional_internal::optional_data_base.1445" = type { %"class.absl::optional_internal::optional_data_dtor_base.1446" }
%"class.absl::optional_internal::optional_data_dtor_base.1446" = type { i8, [3 x i8], %union.anon.1447 }
%union.anon.1447 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1385"*, %"class.absl::optional.1453", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1453" = type { %"class.absl::optional_internal::optional_data.1454" }
%"class.absl::optional_internal::optional_data.1454" = type { %"class.absl::optional_internal::optional_data_base.1455" }
%"class.absl::optional_internal::optional_data_base.1455" = type { %"class.absl::optional_internal::optional_data_dtor_base.1456" }
%"class.absl::optional_internal::optional_data_dtor_base.1456" = type { i8, %union.anon.1457 }
%union.anon.1457 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1458", %"class.WTF::Vector.1463" }
%"class.WTF::Vector.1458" = type { %"class.WTF::VectorBuffer.1459" }
%"class.WTF::VectorBuffer.1459" = type { %"class.WTF::VectorBufferBase.1460", [128 x i8] }
%"class.WTF::VectorBufferBase.1460" = type { i32*, i32, i32 }
%"class.WTF::Vector.1463" = type { %"class.WTF::VectorBuffer.1464" }
%"class.WTF::VectorBuffer.1464" = type { %"class.WTF::VectorBufferBase.1465", [128 x i8] }
%"class.WTF::VectorBufferBase.1465" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1468" = type { %"class.WTF::VectorBuffer.1469" }
%"class.WTF::VectorBuffer.1469" = type { %"class.WTF::VectorBufferBase.1470" }
%"class.WTF::VectorBufferBase.1470" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1473" = type { %"class.WTF::HashTable.1474" }
%"class.WTF::HashTable.1474" = type <{ %"struct.WTF::KeyValuePair.1477"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1477" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1478", %"class.WTF::Vector.1483" }
%"class.WTF::HashMap.1478" = type { %"class.WTF::HashTable.1479" }
%"class.WTF::HashTable.1479" = type <{ %"struct.WTF::KeyValuePair.1482"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1482" = type opaque
%"class.WTF::Vector.1483" = type { %"class.WTF::VectorBuffer.1484" }
%"class.WTF::VectorBuffer.1484" = type { %"class.WTF::VectorBufferBase.1485" }
%"class.WTF::VectorBufferBase.1485" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1491" = type { %"class.std::__1::__compressed_pair.1492" }
%"class.std::__1::__compressed_pair.1492" = type { %"struct.std::__1::__compressed_pair_elem.1493" }
%"struct.std::__1::__compressed_pair_elem.1493" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1497" = type { %"class.WTF::VectorBuffer.1498" }
%"class.WTF::VectorBuffer.1498" = type { %"class.WTF::VectorBufferBase.1499" }
%"class.WTF::VectorBufferBase.1499" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1502 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1503" = type { %"class.blink::MemberBase.1504" }
%"class.blink::MemberBase.1504" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1505" = type { %"class.blink::MemberBase.1506" }
%"class.blink::MemberBase.1506" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1507" = type { %"class.blink::MemberBase.1508" }
%"class.blink::MemberBase.1508" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1509" = type { %"class.WTF::HashSet.1512" }
%"class.WTF::HashSet.1512" = type { %"class.WTF::HashTable.1513" }
%"class.WTF::HashTable.1513" = type <{ %"class.blink::WeakMember.1515"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1515" = type opaque
%"class.blink::HeapHashSet.1516" = type { %"class.WTF::HashSet.1519" }
%"class.WTF::HashSet.1519" = type { %"class.WTF::HashTable.1520" }
%"class.WTF::HashTable.1520" = type <{ %"class.blink::WeakMember.1522"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1522" = type opaque
%"class.std::__1::unique_ptr.1523" = type { %"class.std::__1::__compressed_pair.1524" }
%"class.std::__1::__compressed_pair.1524" = type { %"struct.std::__1::__compressed_pair_elem.1525" }
%"struct.std::__1::__compressed_pair_elem.1525" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1526" }
%"class.base::time_internal::TimeBase.1526" = type { i64 }
%"class.std::__1::unique_ptr.1530" = type { %"class.std::__1::__compressed_pair.1531" }
%"class.std::__1::__compressed_pair.1531" = type { %"struct.std::__1::__compressed_pair_elem.1532" }
%"struct.std::__1::__compressed_pair_elem.1532" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1533", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.1533" = type { %"class.absl::optional_internal::optional_data.1534" }
%"class.absl::optional_internal::optional_data.1534" = type { %"class.absl::optional_internal::optional_data_base.1535" }
%"class.absl::optional_internal::optional_data_base.1535" = type { %"class.absl::optional_internal::optional_data_dtor_base.1536" }
%"class.absl::optional_internal::optional_data_dtor_base.1536" = type { i8, %union.anon.1537 }
%union.anon.1537 = type { %"class.base::Time" }
%"class.blink::Member.340" = type { %"class.blink::MemberBase.341" }
%"class.blink::MemberBase.341" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.342" = type { %"class.blink::MemberBase.343" }
%"class.blink::MemberBase.343" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.344" = type { %"class.blink::MemberBase.345" }
%"class.blink::MemberBase.345" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.346" = type { %"class.blink::MemberBase.347" }
%"class.blink::MemberBase.347" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type opaque
%class.scoped_refptr.350 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.351" = type { %"class.blink::MemberBase.352" }
%"class.blink::MemberBase.352" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.353" = type { %"class.blink::MemberBase.354" }
%"class.blink::MemberBase.354" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.355" = type { %"class.blink::MemberBase.356" }
%"class.blink::MemberBase.356" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.357" = type { %"class.blink::MemberBase.358" }
%"class.blink::MemberBase.358" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.359" = type { %"class.blink::MemberBase.360" }
%"class.blink::MemberBase.360" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::Member.361" = type { %"class.blink::MemberBase.362" }
%"class.blink::MemberBase.362" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.363" = type { %"class.blink::MemberBase.364" }
%"class.blink::MemberBase.364" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.365" }
%"class.blink::Member.365" = type { %"class.blink::MemberBase.366" }
%"class.blink::MemberBase.366" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.1729" }
%"class.mojo::Remote.1729" = type { %"class.mojo::internal::InterfacePtrState.1730" }
%"class.mojo::internal::InterfacePtrState.1730" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1731" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.38, %"class.std::__1::unique_ptr.161", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.44, i32 }>
%class.scoped_refptr.38 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.44, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.123", %"class.absl::optional.128", %"class.absl::optional.85", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.152", i8, [7 x i8], %class.scoped_refptr.44, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.44, %"class.std::__1::unique_ptr.70", %"class.absl::optional", %"struct.std::__1::atomic.81", i8, i8, i8, i8, i32, i32, %"class.absl::optional.85", %"class.std::__1::unique_ptr.90", i8, i64, %class.scoped_refptr.119, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.122" }
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.44, i8, %"class.mojo::ScopedHandleBase.73", %class.scoped_refptr.74, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.75" }
%"class.mojo::ScopedHandleBase.73" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.74 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.75" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.79 }
%union.anon.79 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.80", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.80" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.93", i8, i64, %class.scoped_refptr.94, %class.scoped_refptr.115 }
%"class.base::RepeatingCallback.93" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.94 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.104", i8, [7 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.95 }
%class.scoped_refptr.95 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.96", %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"class.std::__1::map.104" = type { %"class.std::__1::__tree.105" }
%"class.std::__1::__tree.105" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.106", %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%class.scoped_refptr.115 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.119 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.122" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.123" = type { %"class.absl::optional_internal::optional_data.124" }
%"class.absl::optional_internal::optional_data.124" = type { %"class.absl::optional_internal::optional_data_base.125" }
%"class.absl::optional_internal::optional_data_base.125" = type { %"class.absl::optional_internal::optional_data_dtor_base.126" }
%"class.absl::optional_internal::optional_data_dtor_base.126" = type { i8, %union.anon.127 }
%union.anon.127 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.128" = type { %"class.absl::optional_internal::optional_data.129" }
%"class.absl::optional_internal::optional_data.129" = type { %"class.absl::optional_internal::optional_data_base.130" }
%"class.absl::optional_internal::optional_data_base.130" = type { %"class.absl::optional_internal::optional_data_dtor_base.131" }
%"class.absl::optional_internal::optional_data_dtor_base.131" = type { i8, [7 x i8], %union.anon.132 }
%union.anon.132 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.85" = type { %"class.absl::optional_internal::optional_data.86" }
%"class.absl::optional_internal::optional_data.86" = type { %"class.absl::optional_internal::optional_data_base.87" }
%"class.absl::optional_internal::optional_data_base.87" = type { %"class.absl::optional_internal::optional_data_dtor_base.88" }
%"class.absl::optional_internal::optional_data_dtor_base.88" = type { i8, %union.anon.89 }
%union.anon.89 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.137 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.137 = type { %"class.std::__1::map.140" }
%"class.std::__1::map.140" = type { %"class.std::__1::__tree.141" }
%"class.std::__1::__tree.141" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.142", %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.151"*, i64 }
%"class.std::__1::unique_ptr.151" = type opaque
%"class.std::__1::map.152" = type { %"class.std::__1::__tree.153" }
%"class.std::__1::__tree.153" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.154", %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.1731" = type { %"class.std::__1::__compressed_pair.1732" }
%"class.std::__1::__compressed_pair.1732" = type { %"struct.std::__1::__compressed_pair_elem.1733" }
%"struct.std::__1::__compressed_pair_elem.1733" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.367" = type { %"class.std::__1::__compressed_pair.368" }
%"class.std::__1::__compressed_pair.368" = type { %"struct.std::__1::__compressed_pair_elem.369" }
%"struct.std::__1::__compressed_pair_elem.369" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.373" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.374" = type { %"class.std::__1::__compressed_pair.375" }
%"class.std::__1::__compressed_pair.375" = type { %"struct.std::__1::__compressed_pair_elem.376" }
%"struct.std::__1::__compressed_pair_elem.376" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.std::__1::unique_ptr.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.382" }
%"struct.std::__1::__compressed_pair_elem.382" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.386" }
%"class.blink::Member.386" = type { %"class.blink::MemberBase.387" }
%"class.blink::MemberBase.387" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.1739" }
%"class.mojo::AssociatedRemote.1739" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1740" }
%"class.mojo::internal::AssociatedInterfacePtrState.1740" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1741" }
%"class.std::__1::unique_ptr.1741" = type { %"class.std::__1::__compressed_pair.1742" }
%"class.std::__1::__compressed_pair.1742" = type { %"struct.std::__1::__compressed_pair_elem.1743" }
%"struct.std::__1::__compressed_pair_elem.1743" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.388" = type { %"class.blink::Member.389" }
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.1749" }
%"class.mojo::AssociatedRemote.1749" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1750" }
%"class.mojo::internal::AssociatedInterfacePtrState.1750" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1751" }
%"class.std::__1::unique_ptr.1751" = type { %"class.std::__1::__compressed_pair.1752" }
%"class.std::__1::__compressed_pair.1752" = type { %"struct.std::__1::__compressed_pair_elem.1753" }
%"struct.std::__1::__compressed_pair_elem.1753" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.391" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1759", %"class.blink::Member.238", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.1759" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.1760" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.161" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.1760" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.393" = type { %"class.blink::Member.394" }
%"class.blink::Member.394" = type { %"class.blink::MemberBase.395" }
%"class.blink::MemberBase.395" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1763", %"class.blink::Member.238", %"class.mojo::AssociatedReceiver.1764" }
%"class.blink::ThreadState::PrefinalizerRegistration.1763" = type { i8 }
%"class.mojo::AssociatedReceiver.1764" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.1765" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.1765" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.396" }
%"class.blink::Member.396" = type { %"class.blink::MemberBase.397" }
%"class.blink::MemberBase.397" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1768", %"class.blink::Member.238", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.1768" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.38, %"class.std::__1::unique_ptr.161", %"class.base::WeakPtrFactory.1769" }
%"class.base::WeakPtrFactory.1769" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.398" = type { %"class.blink::Member.399" }
%"class.blink::Member.399" = type { %"class.blink::MemberBase.400" }
%"class.blink::MemberBase.400" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1772", %"class.blink::Member.238", %"class.mojo::AssociatedReceiver.1773" }
%"class.blink::ThreadState::PrefinalizerRegistration.1772" = type { i8 }
%"class.mojo::AssociatedReceiver.1773" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.1774" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.1774" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.401" = type { %"class.blink::MemberBase.402" }
%"class.blink::MemberBase.402" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.403" = type { %"class.blink::MemberBase.404" }
%"class.blink::MemberBase.404" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.405" = type { %"class.blink::MemberBase.406" }
%"class.blink::MemberBase.406" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.407" = type { %"class.blink::MemberBase.408" }
%"class.blink::MemberBase.408" = type { %"class.blink::HeapHashMap.409"* }
%"class.blink::HeapHashMap.409" = type opaque
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.410" }
%"class.std::__1::unique_ptr.410" = type { %"class.std::__1::__compressed_pair.411" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.412" }
%"struct.std::__1::__compressed_pair_elem.412" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr.413" }
%"class.mojo::InlinedStructPtr" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.413" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.419" = type { %"class.absl::optional_internal::optional_data.420" }
%"class.absl::optional_internal::optional_data.420" = type { %"class.absl::optional_internal::optional_data_base.421" }
%"class.absl::optional_internal::optional_data_base.421" = type { %"class.absl::optional_internal::optional_data_dtor_base.422" }
%"class.absl::optional_internal::optional_data_dtor_base.422" = type { i8, %union.anon.423 }
%union.anon.423 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.27", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair.240"*, %"struct.std::__1::pair.240"*, %"class.std::__1::__compressed_pair.241" }
%"struct.std::__1::pair.240" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"struct.std::__1::pair.240"* }
%"class.blink::Member.246" = type { %"class.blink::MemberBase.247" }
%"class.blink::MemberBase.247" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.248" = type { %"class.absl::optional_internal::optional_data.249" }
%"class.absl::optional_internal::optional_data.249" = type { %"class.absl::optional_internal::optional_data_base.250" }
%"class.absl::optional_internal::optional_data_base.250" = type { %"class.absl::optional_internal::optional_data_dtor_base.251" }
%"class.absl::optional_internal::optional_data_dtor_base.251" = type { i8, %union.anon.252 }
%union.anon.252 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.253" = type { %"class.absl::optional_internal::optional_data.254" }
%"class.absl::optional_internal::optional_data.254" = type { %"class.absl::optional_internal::optional_data_base.255" }
%"class.absl::optional_internal::optional_data_base.255" = type { %"class.absl::optional_internal::optional_data_dtor_base.256" }
%"class.absl::optional_internal::optional_data_dtor_base.256" = type { i8, %union.anon.257 }
%union.anon.257 = type { %"class.base::UnguessableToken" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::TaskHandle" = type { %class.scoped_refptr.258 }
%class.scoped_refptr.258 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.261" }
%"class.WTF::HashTable.261" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::Member.29" = type { %"class.blink::MemberBase.30" }
%"class.blink::MemberBase.30" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::Member.31" = type { %"class.blink::MemberBase.32" }
%"class.blink::MemberBase.32" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.33" = type { %"class.blink::MemberBase.34" }
%"class.blink::MemberBase.34" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.35" = type { %"class.WTF::VectorBuffer.36" }
%"class.WTF::VectorBuffer.36" = type { %"class.WTF::VectorBufferBase.37" }
%"class.WTF::VectorBufferBase.37" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.211" }
%"class.std::__1::unique_ptr.211" = type { %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::InputDeviceCapabilities"* }
%"class.blink::InputDeviceCapabilities" = type opaque
%"class.blink::DoublePoint" = type { double, double }
%"class.blink::Member.219" = type { %"class.blink::MemberBase.220" }
%"class.blink::MemberBase.220" = type { %"class.blink::EventTarget"* }
%"class.blink::WebPointerEvent" = type <{ %"class.blink::WebInputEvent", %"class.blink::WebPointerProperties", float, i32, i32, i8, i8, i8, i8, float, float, [4 x i8] }>
%"class.blink::WebInputEvent" = type { i32 (...)**, float, %"class.gfx::Vector2dF", %"class.base::TimeTicks", i32, i32 }
%"class.blink::WebPointerProperties" = type { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, %"class.gfx::PointF", %"class.gfx::PointF" }
%"class.blink::PointerEventInit" = type { %"class.blink::MouseEventInit", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, double, double, %"class.blink::HeapVector.221", double, i8, i32, %"class.WTF::String", %"class.blink::HeapVector.221", float, float, i32, i32, i32, double }
%"class.blink::MouseEventInit" = type { %"class.blink::EventModifierInit.base", i8, i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, double, double, i32, i32, %"class.WTF::String", %"class.blink::Member.219", double, double }
%"class.blink::EventModifierInit.base" = type <{ %"class.blink::UIEventInit", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }>
%"class.blink::UIEventInit" = type { %"class.blink::EventInit.base", i8, i8, i8, i32, %"class.blink::Member", %"class.blink::Member.10" }
%"class.blink::EventInit.base" = type <{ %"class.blink::IDLDictionaryBase", i8, i8, i8, i8, i8, i8 }>
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.WTF::Vector.1693" = type { %"class.WTF::VectorBuffer.1694" }
%"class.WTF::VectorBuffer.1694" = type { %"class.WTF::VectorBufferBase.1695" }
%"class.WTF::VectorBufferBase.1695" = type { %"class.blink::WebPointerEvent"*, i32, i32 }
%"class.blink::LocalDOMWindow" = type { %"class.blink::DOMWindow", %"class.blink::ExecutionContext.base", %"class.blink::Supplementable.676", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.684", %"class.blink::Member.426", %"class.blink::Member.686", i8, %"class.blink::Member.688", %"class.blink::Member.690", %"class.blink::Member.692", %"class.blink::Member.692", %"class.blink::Member.692", %"class.blink::Member.692", %"class.blink::Member.692", %"class.blink::Member.692", %"class.blink::Member.694", %"class.blink::Member.696", %"class.blink::Member.698", %"class.blink::Member.700", %"class.blink::Member.702", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.643", %"class.blink::Member.704", %class.scoped_refptr.706, %"class.blink::HeapHashSet.768", %"class.blink::Member.775", %"class.blink::HeapHashMap.786", %"class.std::__1::unique_ptr.793", %"class.blink::Member.799", %"class.blink::Member.818", %"class.blink::Member.820", %"class.blink::Member.822", %"class.WTF::Vector.825", %"class.util::TokenType", %"class.WTF::HashSet.830", %"class.WTF::Deque" }
%"class.blink::ExecutionContext.base" = type <{ %"class.blink::Supplementable.519", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.590", i32, i8, [3 x i8], %"class.blink::HeapVector.592", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.600", %"class.blink::Member.602", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.611", %"class.blink::Member.672", %"class.blink::Member.674", i8 }>
%"class.blink::Supplementable.676" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.677" }
%"class.blink::HeapHashMap.677" = type { %"class.WTF::HashMap.680" }
%"class.WTF::HashMap.680" = type { %"class.WTF::HashTable.681" }
%"class.WTF::HashTable.681" = type <{ %"struct.WTF::KeyValuePair.683"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.683" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.684" = type { %"class.blink::MemberBase.685" }
%"class.blink::MemberBase.685" = type { %"class.blink::ScriptController"* }
%"class.blink::ScriptController" = type opaque
%"class.blink::Member.686" = type { %"class.blink::MemberBase.687" }
%"class.blink::MemberBase.687" = type { %"class.blink::DOMVisualViewport"* }
%"class.blink::DOMVisualViewport" = type opaque
%"class.blink::Member.688" = type { %"class.blink::MemberBase.689" }
%"class.blink::MemberBase.689" = type { %"class.blink::Screen"* }
%"class.blink::Screen" = type opaque
%"class.blink::Member.690" = type { %"class.blink::MemberBase.691" }
%"class.blink::MemberBase.691" = type { %"class.blink::History"* }
%"class.blink::History" = type opaque
%"class.blink::Member.692" = type { %"class.blink::MemberBase.693" }
%"class.blink::MemberBase.693" = type { %"class.blink::BarProp"* }
%"class.blink::BarProp" = type opaque
%"class.blink::Member.694" = type { %"class.blink::MemberBase.695" }
%"class.blink::MemberBase.695" = type { %"class.blink::Navigator"* }
%"class.blink::Navigator" = type opaque
%"class.blink::Member.696" = type { %"class.blink::MemberBase.697" }
%"class.blink::MemberBase.697" = type { %"class.blink::StyleMedia"* }
%"class.blink::StyleMedia" = type opaque
%"class.blink::Member.698" = type { %"class.blink::MemberBase.699" }
%"class.blink::MemberBase.699" = type { %"class.blink::CustomElementRegistry"* }
%"class.blink::CustomElementRegistry" = type opaque
%"class.blink::Member.700" = type { %"class.blink::MemberBase.701" }
%"class.blink::MemberBase.701" = type { %"class.blink::Modulator"* }
%"class.blink::Modulator" = type opaque
%"class.blink::Member.702" = type { %"class.blink::MemberBase.703" }
%"class.blink::MemberBase.703" = type { %"class.blink::External"* }
%"class.blink::External" = type opaque
%"class.blink::Member.704" = type { %"class.blink::MemberBase.705" }
%"class.blink::MemberBase.705" = type { %"class.blink::ApplicationCache"* }
%"class.blink::ApplicationCache" = type opaque
%class.scoped_refptr.706 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr.708", i64, %"class.WTF::Vector.712", %"class.WTF::Vector.717", %"class.WTF::Vector.723", %"class.WTF::Vector.741", %class.scoped_refptr.542, %"class.WTF::HashMap.747", %"class.WTF::Vector.752", %"class.WTF::Vector.712", %"class.WTF::Vector.758", %"class.WTF::HashMap.763", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.707" }
%"class.base::RefCountedThreadSafe.707" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.708" = type { %"class.std::__1::__compressed_pair.709" }
%"class.std::__1::__compressed_pair.709" = type { %"struct.std::__1::__compressed_pair_elem.710" }
%"struct.std::__1::__compressed_pair_elem.710" = type { i8* }
%"class.WTF::Vector.717" = type { %"class.WTF::VectorBuffer.718" }
%"class.WTF::VectorBuffer.718" = type { %"class.WTF::VectorBufferBase.719", [8 x i8] }
%"class.WTF::VectorBufferBase.719" = type { %class.scoped_refptr.720*, i32, i32 }
%class.scoped_refptr.720 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.723" = type { %"class.WTF::VectorBuffer.724" }
%"class.WTF::VectorBuffer.724" = type { %"class.WTF::VectorBufferBase.725" }
%"class.WTF::VectorBufferBase.725" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.727", %"class.std::__1::unique_ptr.733" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.726 }
%class.scoped_refptr.726 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.727" = type { %"class.std::__1::__compressed_pair.728" }
%"class.std::__1::__compressed_pair.728" = type { %"struct.std::__1::__compressed_pair_elem.729" }
%"struct.std::__1::__compressed_pair_elem.729" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.741" = type { %"class.WTF::VectorBuffer.742" }
%"class.WTF::VectorBuffer.742" = type { %"class.WTF::VectorBufferBase.743" }
%"class.WTF::VectorBufferBase.743" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.744", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.744" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.747" = type { %"class.WTF::HashTable.748" }
%"class.WTF::HashTable.748" = type <{ %"struct.WTF::KeyValuePair.751"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.751" = type opaque
%"class.WTF::Vector.752" = type { %"class.WTF::VectorBuffer.753" }
%"class.WTF::VectorBuffer.753" = type { %"class.WTF::VectorBufferBase.754" }
%"class.WTF::VectorBufferBase.754" = type { %"class.mojo::ScopedHandleBase.755"*, i32, i32 }
%"class.mojo::ScopedHandleBase.755" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.712" = type { %"class.WTF::VectorBuffer.713" }
%"class.WTF::VectorBuffer.713" = type { %"class.WTF::VectorBufferBase.714", [16 x i8] }
%"class.WTF::VectorBufferBase.714" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.758" = type { %"class.WTF::VectorBuffer.759" }
%"class.WTF::VectorBuffer.759" = type { %"class.WTF::VectorBufferBase.760" }
%"class.WTF::VectorBufferBase.760" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.WTF::HashMap.763" = type { %"class.WTF::HashTable.764" }
%"class.WTF::HashTable.764" = type <{ %"struct.WTF::KeyValuePair.767"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.767" = type { i8**, %"class.std::__1::unique_ptr.1708" }
%"class.std::__1::unique_ptr.1708" = type { %"class.std::__1::__compressed_pair.1709" }
%"class.std::__1::__compressed_pair.1709" = type { %"struct.std::__1::__compressed_pair_elem.1710" }
%"struct.std::__1::__compressed_pair_elem.1710" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::HeapHashSet.768" = type { %"class.WTF::HashSet.771" }
%"class.WTF::HashSet.771" = type { %"class.WTF::HashTable.772" }
%"class.WTF::HashTable.772" = type <{ %"class.blink::WeakMember.774"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.774" = type opaque
%"class.blink::Member.775" = type { %"class.blink::MemberBase.776" }
%"class.blink::MemberBase.776" = type { %"class.blink::Event"* }
%"class.blink::HeapHashMap.786" = type { %"class.WTF::HashMap.789" }
%"class.WTF::HashMap.789" = type { %"class.WTF::HashTable.790" }
%"class.WTF::HashTable.790" = type <{ %"struct.WTF::KeyValuePair.792"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.792" = type opaque
%"class.std::__1::unique_ptr.793" = type { %"class.std::__1::__compressed_pair.794" }
%"class.std::__1::__compressed_pair.794" = type { %"struct.std::__1::__compressed_pair_elem.795" }
%"struct.std::__1::__compressed_pair_elem.795" = type { %"class.blink::FrameOrWorkerScheduler"* }
%"class.blink::Member.799" = type { %"class.blink::MemberBase.800" }
%"class.blink::MemberBase.800" = type { %"class.blink::InputMethodController"* }
%"class.blink::InputMethodController" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::Member.238", %"class.blink::CachedTextInputInfo", %"class.blink::Member.814", %"class.blink::Member.816", i8, i32 }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::CachedTextInputInfo" = type { %"class.blink::Member.805", %"class.blink::LayoutObject"*, %"class.blink::HeapHashMap.807", %"class.WTF::String", %"class.blink::CachedTextInputInfo::CachedPlainTextRange", %"class.blink::CachedTextInputInfo::CachedPlainTextRange" }
%"class.blink::Member.805" = type { %"class.blink::MemberBase.806" }
%"class.blink::MemberBase.806" = type { %"class.blink::ContainerNode"* }
%"class.blink::HeapHashMap.807" = type { %"class.WTF::HashMap.810" }
%"class.WTF::HashMap.810" = type { %"class.WTF::HashTable.811" }
%"class.WTF::HashTable.811" = type <{ %"struct.WTF::KeyValuePair.813"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.813" = type opaque
%"class.blink::CachedTextInputInfo::CachedPlainTextRange" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i32 }
%"class.blink::PositionTemplate" = type { %"class.blink::Member.314", i32, i32 }
%"class.blink::Member.816" = type { %"class.blink::MemberBase.817" }
%"class.blink::MemberBase.817" = type { %"class.blink::EditContext"* }
%"class.blink::EditContext" = type opaque
%"class.blink::Member.818" = type { %"class.blink::MemberBase.819" }
%"class.blink::MemberBase.819" = type { %"class.blink::SpellChecker"* }
%"class.blink::SpellChecker" = type { %"class.blink::Member.517", %"class.blink::Member.1286", %"class.blink::Member.1288" }
%"class.blink::Member.1286" = type { %"class.blink::MemberBase.1287" }
%"class.blink::MemberBase.1287" = type { %"class.blink::SpellCheckRequester"* }
%"class.blink::SpellCheckRequester" = type opaque
%"class.blink::Member.1288" = type { %"class.blink::MemberBase.1289" }
%"class.blink::MemberBase.1289" = type { %"class.blink::IdleSpellCheckController"* }
%"class.blink::IdleSpellCheckController" = type opaque
%"class.blink::Member.820" = type { %"class.blink::MemberBase.821" }
%"class.blink::MemberBase.821" = type { %"class.blink::TextSuggestionController"* }
%"class.blink::TextSuggestionController" = type { i32 (...)**, i8, %"class.blink::Member.517", %"class.blink::HeapMojoRemote.1281" }
%"class.blink::HeapMojoRemote.1281" = type { %"class.blink::Member.1282" }
%"class.blink::Member.1282" = type { %"class.blink::MemberBase.1283" }
%"class.blink::MemberBase.1283" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.822" = type { %"class.blink::MemberBase.823" }
%"class.blink::MemberBase.823" = type { %"class.blink::HeapHashMap.824"* }
%"class.blink::HeapHashMap.824" = type opaque
%"class.WTF::HashSet.830" = type { %"class.WTF::HashTable.831" }
%"class.WTF::HashTable.831" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Deque" = type { %"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.836" }
%"class.WTF::VectorBuffer.836" = type { %"class.WTF::VectorBufferBase.837" }
%"class.WTF::VectorBufferBase.837" = type { i64*, i32, i32 }
%"class.blink::EventModifierInit" = type <{ %"class.blink::UIEventInit", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }>
%"struct.blink::ScreenInfo" = type { float, %"class.gfx::DisplayColorSpaces", i32, i32, i8, i32, %"class.gfx::Rect", %"class.gfx::Rect", i32, i16, i8, i8, i8, i64 }
%"class.gfx::DisplayColorSpaces" = type { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, %"class.absl::optional.1795" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.absl::optional.1795" = type { %"class.absl::optional_internal::optional_data.1796" }
%"class.absl::optional_internal::optional_data.1796" = type { %"class.absl::optional_internal::optional_data_base.1797" }
%"class.absl::optional_internal::optional_data_base.1797" = type { %"class.absl::optional_internal::optional_data_dtor_base.1798" }
%"class.absl::optional_internal::optional_data_dtor_base.1798" = type { i8, %union.anon.1799 }
%union.anon.1799 = type { %"struct.gfx::HDRStaticMetadata" }
%"struct.gfx::HDRStaticMetadata" = type { double, double, double }
%"class.blink::UIEventWithKeyState" = type <{ %"class.blink::UIEvent", i32, [4 x i8] }>
%"class.WTF::Vector.1700" = type { %"class.WTF::VectorBuffer.1701" }
%"class.WTF::VectorBuffer.1701" = type { %"class.WTF::VectorBufferBase.1460" }
%"struct.std::__1::__less.1845" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapVectorBacking" = type { i8 }

$_ZNK3WTF7HashMapIlN5blink10FloatPointENS_7IntHashIlEENS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIS2_EENS_18PartitionAllocatorEE2atERKl = comdat any

$_ZNK3WTF7HashMapIlN5blink19PointerEventFactory17PointerAttributesENS_7IntHashIlEENS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIS3_EENS_18PartitionAllocatorEE2atERKl = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZNK3WTF6VectorIN5blink15WebPointerEventELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_12PointerEventEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_12PointerEventEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_12PointerEventEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_12PointerEventEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_12PointerEventEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_12PointerEventEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_12PointerEventEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_12PointerEventEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_12PointerEventEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink10FloatPointEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIS3_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISD_S7_SE_EERiRKS3_EENS_18HashTableAddResultISF_S4_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink10FloatPointEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIS3_EEEESA_NS_18PartitionAllocatorEE6ExpandEPS4_ = comdat any

$_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink10FloatPointEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIS3_EEEESA_NS_18PartitionAllocatorEE8RehashToEPS4_jSG_ = comdat any

$_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink10FloatPointEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIS3_EEEESA_NS_18PartitionAllocatorEE16LookupForWritingERKl = comdat any

$_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink10FloatPointEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIS3_EEEESA_NS_18PartitionAllocatorEE4findERKl = comdat any

$_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink19PointerEventFactory17PointerAttributesEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIS4_EEEESB_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S8_SF_EERKiS4_EENS_18HashTableAddResultISG_S5_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink19PointerEventFactory17PointerAttributesEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIS4_EEEESB_NS_18PartitionAllocatorEE6ExpandEPS5_ = comdat any

$_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink19PointerEventFactory17PointerAttributesEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIS4_EEEESB_NS_18PartitionAllocatorEE8RehashToEPS5_jSH_ = comdat any

$_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink19PointerEventFactory17PointerAttributesEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIS4_EEEESB_NS_18PartitionAllocatorEE16LookupForWritingERKl = comdat any

$_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink19PointerEventFactory17PointerAttributesEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIS4_EEEESB_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S8_SF_EERiS4_EENS_18HashTableAddResultISG_S5_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINSt3__14pairIiiEENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_8PairHashIiiEENS_18HashMapValueTraitsINS_14PairHashTraitsINS_29UnsignedWithZeroKeyHashTraitsIiEESC_EENS_10HashTraitsIiEEEESD_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISG_S8_SH_EERKN5blink19PointerEventFactory10IncomingIdERiEENS_18HashTableAddResultISI_S5_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINSt3__14pairIiiEENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_8PairHashIiiEENS_18HashMapValueTraitsINS_14PairHashTraitsINS_29UnsignedWithZeroKeyHashTraitsIiEESC_EENS_10HashTraitsIiEEEESD_NS_18PartitionAllocatorEE6ExpandEPS5_ = comdat any

$_ZN3WTF9HashTableINSt3__14pairIiiEENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_8PairHashIiiEENS_18HashMapValueTraitsINS_14PairHashTraitsINS_29UnsignedWithZeroKeyHashTraitsIiEESC_EENS_10HashTraitsIiEEEESD_NS_18PartitionAllocatorEE8RehashToEPS5_jSJ_ = comdat any

$_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink19PointerEventFactory17PointerAttributesEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIS4_EEEESB_NS_18PartitionAllocatorEE4findERKl = comdat any

$_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRiEEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_12PointerEventEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_12PointerEventEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

@_ZN5blink19PointerEventFactory10kInvalidIdE = hidden local_unnamed_addr constant i32 0, align 4
@_ZN5blink19PointerEventFactory8kMouseIdE = hidden constant i32 1, align 4
@_ZN5blink16event_type_names13kPointerenterE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16event_type_names13kPointerleaveE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16event_type_names14kPointercancelE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16event_type_names17kPointerrawupdateE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16event_type_names18kGotpointercaptureE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16event_type_names19kLostpointercaptureE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16event_type_names12kPointermoveE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"touch\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"pen\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"mouse\00", align 1
@_ZN5blink16event_type_names12kPointerdownE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16event_type_names10kPointerupE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN3WTF12g_empty_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17IDLDictionaryBaseEEEPKcv = private unnamed_addr constant [72 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::IDLDictionaryBase]\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.5 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.6 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@__const._ZN5blink12_GLOBAL__N_128UpdateCommonPointerEventInitERKNS_15WebPointerEventERKNS_10FloatPointEPNS_14LocalDOMWindowEPNS_16PointerEventInitE.web_pointer_event_in_root_frame = private unnamed_addr constant <{ { i32 (...)**, float, %"class.gfx::Vector2dF", [4 x i8], %"class.base::TimeTicks", i32, i32 }, { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, float, i32, i32, i8, i8, i8, i8, float, float, [4 x i8] }> <{ { i32 (...)**, float, %"class.gfx::Vector2dF", [4 x i8], %"class.base::TimeTicks", i32, i32 } { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), float 0xFFFFFFFFE0000000, %"class.gfx::Vector2dF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, [4 x i8] c"\AA\AA\AA\AA", %"class.base::TimeTicks" { %"class.base::time_internal::TimeBase" { i64 -6148914691236517206 } }, i32 -1431655766, i32 -1431655766 }, { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" } { i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i8 -86, i8 -86, i8 -86, i8 -86, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@_ZN5blink26RuntimeEnabledFeaturesBase36is_consolidated_movement_xy_enabled_E = external local_unnamed_addr global i8, align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.7 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.8 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.9 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.10 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.11 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.12 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.13 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_12PointerEventEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_12PointerEventEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_12PointerEventEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_12PointerEventEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_12PointerEventEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [165 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::PointerEvent>, WTF::VectorTraits<blink::Member<blink::PointerEvent> > >]\00", align 1
@.str.14 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.15 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIlN5blink10FloatPointEEEEEPKcv = private unnamed_addr constant [90 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<long, blink::FloatPoint>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIlN5blink19PointerEventFactory17PointerAttributesEEEEEPKcv = private unnamed_addr constant [118 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<long, blink::PointerEventFactory::PointerAttributes>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINSt3__14pairIiiEEiEEEEPKcv = private unnamed_addr constant [96 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<std::__1::pair<int, int>, int>]\00", align 1
@.str.16 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv = private unnamed_addr constant [51 x i8] c"const char *WTF::GetStringWithTypeName() [T = int]\00", align 1
@switch.table._ZN5blink19PointerEventFactory6CreateERKNS_15WebPointerEventERKN3WTF6VectorIS1_Lj0ENS4_18PartitionAllocatorEEES9_PNS_14LocalDOMWindowE = private unnamed_addr constant [5 x %"class.WTF::AtomicString"**] [%"class.WTF::AtomicString"** @_ZN5blink16event_type_names12kPointerdownE, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names10kPointerupE, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names12kPointermoveE, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names17kPointerrawupdateE, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names14kPointercancelE], align 8
@switch.table._ZN5blink19PointerEventFactory6CreateERKNS_15WebPointerEventERKN3WTF6VectorIS1_Lj0ENS4_18PartitionAllocatorEEES9_PNS_14LocalDOMWindowE.17 = private unnamed_addr constant [6 x i32] [i32 -2, i32 -5, i32 -3, i32 -9, i32 -17, i32 -33], align 4
@switch.table._ZN5blink19PointerEventFactory24CreatePointerCancelEventEiN4base9TimeTicksE = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0)], align 8

@_ZN5blink19PointerEventFactoryC1Ev = hidden unnamed_addr alias void (%"class.blink::PointerEventFactory"*), void (%"class.blink::PointerEventFactory"*)* @_ZN5blink19PointerEventFactoryC2Ev
@_ZN5blink19PointerEventFactoryD1Ev = hidden unnamed_addr alias void (%"class.blink::PointerEventFactory"*), void (%"class.blink::PointerEventFactory"*)* @_ZN5blink19PointerEventFactoryD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19PointerEventFactory19CreateEventSequenceERKNS_15WebPointerEventEPKNS_16PointerEventInitERKN3WTF6VectorIS1_Lj0ENS7_18PartitionAllocatorEEEPNS_14LocalDOMWindowE(%"class.blink::HeapVector.221"* noalias sret, %"class.blink::PointerEventFactory"*, %"class.blink::WebPointerEvent"* nocapture readonly dereferenceable(128), %"class.blink::PointerEventInit"* nocapture readonly, %"class.WTF::Vector.1693"* dereferenceable(16), %"class.blink::LocalDOMWindow"*) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.WTF::AtomicString", align 8
  %8 = alloca <2 x float>, align 8
  %9 = bitcast <2 x float>* %8 to %"class.blink::FloatPoint"*
  %10 = alloca %"class.blink::PointerEvent"*, align 8
  %11 = bitcast %"class.WTF::AtomicString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #13
  %12 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %12, align 8
  %13 = getelementptr inbounds %"class.blink::WebPointerEvent", %"class.blink::WebPointerEvent"* %2, i64 0, i32 0, i32 4
  %14 = load i32, i32* %13, align 8
  %15 = add i32 %14, -33
  %16 = icmp ult i32 %15, 5
  br i1 %16, label %17, label %21

17:                                               ; preds = %6
  %18 = sext i32 %15 to i64
  %19 = getelementptr inbounds [5 x %"class.WTF::AtomicString"**], [5 x %"class.WTF::AtomicString"**]* @switch.table._ZN5blink19PointerEventFactory6CreateERKNS_15WebPointerEventERKN3WTF6VectorIS1_Lj0ENS4_18PartitionAllocatorEEES9_PNS_14LocalDOMWindowE, i64 0, i64 %18
  %20 = load %"class.WTF::AtomicString"**, %"class.WTF::AtomicString"*** %19, align 8
  br label %21

21:                                               ; preds = %6, %17
  %22 = phi %"class.WTF::AtomicString"** [ %20, %17 ], [ @_ZN3WTF12g_empty_atomE, %6 ]
  %23 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %22, align 8
  %24 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %12, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %44, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %44

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = zext i32 %34 to i33
  %36 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #13
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !2

41:                                               ; preds = %32
  tail call void @llvm.trap() #13
  unreachable

42:                                               ; preds = %32
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %33, align 4
  br label %44

44:                                               ; preds = %21, %27, %42
  %45 = getelementptr inbounds %"class.blink::HeapVector.221", %"class.blink::HeapVector.221"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.blink::HeapVector.221", %"class.blink::HeapVector.221"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %47 = getelementptr inbounds %"class.blink::HeapVector.221", %"class.blink::HeapVector.221"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %48 = bitcast %"class.blink::HeapVector.221"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 16, i1 false) #13
  %49 = getelementptr inbounds %"class.WTF::Vector.1693", %"class.WTF::Vector.1693"* %4, i64 0, i32 0, i32 0, i32 2
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %225, label %52

52:                                               ; preds = %44
  %53 = bitcast <2 x float>* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #13
  %54 = getelementptr inbounds %"class.blink::PointerEventInit", %"class.blink::PointerEventInit"* %3, i64 0, i32 19
  %55 = load i32, i32* %54, align 4
  %56 = tail call dereferenceable(128) %"class.blink::WebPointerEvent"* @_ZNK3WTF6VectorIN5blink15WebPointerEventELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1693"* %4, i32 0) #13
  %57 = getelementptr inbounds %"class.blink::WebPointerEvent", %"class.blink::WebPointerEvent"* %56, i64 0, i32 1
  %58 = load i32, i32* %13, align 8
  %59 = tail call <2 x float> @_ZNK5blink19PointerEventFactory22GetLastPointerPositionEiRKNS_20WebPointerPropertiesENS_5mojom9EventTypeE(%"class.blink::PointerEventFactory"* %1, i32 %55, %"class.blink::WebPointerProperties"* dereferenceable(60) %57, i32 %58)
  store <2 x float> %59, <2 x float>* %8, align 8
  %60 = getelementptr inbounds %"class.WTF::Vector.1693", %"class.WTF::Vector.1693"* %4, i64 0, i32 0, i32 0, i32 0
  %61 = load %"class.blink::WebPointerEvent"*, %"class.blink::WebPointerEvent"** %60, align 8
  %62 = load i32, i32* %49, align 4
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds %"class.blink::WebPointerEvent", %"class.blink::WebPointerEvent"* %61, i64 %63
  %65 = icmp eq i32 %62, 0
  br i1 %65, label %81, label %66

66:                                               ; preds = %52
  %67 = getelementptr inbounds %"class.blink::PointerEventInit", %"class.blink::PointerEventInit"* %3, i64 0, i32 0, i32 1
  %68 = getelementptr inbounds %"class.blink::PointerEventInit", %"class.blink::PointerEventInit"* %3, i64 0, i32 0, i32 10
  %69 = getelementptr inbounds %"class.blink::PointerEventInit", %"class.blink::PointerEventInit"* %3, i64 0, i32 0, i32 2
  %70 = getelementptr inbounds %"class.blink::PointerEventInit", %"class.blink::PointerEventInit"* %3, i64 0, i32 0, i32 11
  %71 = getelementptr inbounds %"class.blink::PointerEventInit", %"class.blink::PointerEventInit"* %3, i64 0, i32 5
  %72 = getelementptr inbounds %"class.blink::PointerEventInit", %"class.blink::PointerEventInit"* %3, i64 0, i32 18
  %73 = getelementptr inbounds %"class.blink::PointerEventInit", %"class.blink::PointerEventInit"* %3, i64 0, i32 6
  %74 = getelementptr inbounds %"class.blink::PointerEventInit", %"class.blink::PointerEventInit"* %3, i64 0, i32 20, i32 0, i32 0
  %75 = getelementptr inbounds %"class.blink::PointerEventInit", %"class.blink::PointerEventInit"* %3, i64 0, i32 0, i32 0, i32 0, i32 3
  %76 = getelementptr inbounds %"class.blink::PointerEventInit", %"class.blink::PointerEventInit"* %3, i64 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %77 = bitcast <2 x float>* %8 to i64*
  %78 = bitcast %"class.blink::PointerEvent"** %10 to i8*
  %79 = bitcast %"class.blink::PointerEvent"** %10 to i8**
  %80 = getelementptr inbounds %"class.blink::HeapVector.221", %"class.blink::HeapVector.221"* %0, i64 0, i32 0
  br label %82

81:                                               ; preds = %222, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #13
  br label %225

82:                                               ; preds = %66, %222
  %83 = phi %"class.blink::WebPointerEvent"* [ %61, %66 ], [ %223, %222 ]
  %84 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 256) #13
  %85 = bitcast i8* %84 to %"class.blink::PointerEventInit"*
  call void @_ZN5blink16PointerEventInitC1Ev(%"class.blink::PointerEventInit"* %85) #13
  %86 = getelementptr inbounds i8, i8* %84, i64 -4
  %87 = bitcast i8* %86 to i16*
  %88 = load atomic i16, i16* %87 monotonic, align 2
  %89 = or i16 %88, 1
  store atomic i16 %89, i16* %87 release, align 2
  %90 = load i8, i8* %67, align 4, !range !3
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %97, label %92

92:                                               ; preds = %82
  %93 = load i16, i16* %68, align 2
  %94 = getelementptr inbounds i8, i8* %84, i64 70
  %95 = bitcast i8* %94 to i16*
  store i16 %93, i16* %95, align 2
  %96 = getelementptr inbounds i8, i8* %84, i64 60
  store i8 1, i8* %96, align 4
  br label %97

97:                                               ; preds = %82, %92
  %98 = load i8, i8* %69, align 1, !range !3
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %105, label %100

100:                                              ; preds = %97
  %101 = load i16, i16* %70, align 8
  %102 = getelementptr inbounds i8, i8* %84, i64 72
  %103 = bitcast i8* %102 to i16*
  store i16 %101, i16* %103, align 8
  %104 = getelementptr inbounds i8, i8* %84, i64 61
  store i8 1, i8* %104, align 1
  br label %105

105:                                              ; preds = %97, %100
  %106 = load i8, i8* %71, align 4, !range !3
  %107 = icmp eq i8 %106, 0
  br i1 %107, label %112, label %108

108:                                              ; preds = %105
  %109 = load i8, i8* %72, align 8, !range !3
  %110 = getelementptr inbounds i8, i8* %84, i64 192
  store i8 %109, i8* %110, align 8
  %111 = getelementptr inbounds i8, i8* %84, i64 140
  store i8 1, i8* %111, align 4
  br label %112

112:                                              ; preds = %105, %108
  %113 = load i8, i8* %73, align 1, !range !3
  %114 = icmp eq i8 %113, 0
  br i1 %114, label %120, label %115

115:                                              ; preds = %112
  %116 = load i32, i32* %54, align 4
  %117 = getelementptr inbounds i8, i8* %84, i64 196
  %118 = bitcast i8* %117 to i32*
  store i32 %116, i32* %118, align 4
  %119 = getelementptr inbounds i8, i8* %84, i64 141
  store i8 1, i8* %119, align 1
  br label %120

120:                                              ; preds = %112, %115
  %121 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8
  %122 = icmp eq %"class.WTF::StringImpl"* %121, null
  br i1 %122, label %160, label %123

123:                                              ; preds = %120
  %124 = getelementptr inbounds i8, i8* %84, i64 200
  %125 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load atomic i32, i32* %125 monotonic, align 4
  %127 = and i32 %126, 2
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %141

129:                                              ; preds = %123
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 0
  %131 = load i32, i32* %130, align 4
  %132 = zext i32 %131 to i33
  %133 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %132, i33 1) #13
  %134 = extractvalue { i33, i1 } %133, 1
  %135 = extractvalue { i33, i1 } %133, 0
  %136 = icmp slt i33 %135, 0
  %137 = or i1 %134, %136
  br i1 %137, label %138, label %139, !prof !2

138:                                              ; preds = %129
  call void @llvm.trap() #13
  unreachable

139:                                              ; preds = %129
  %140 = trunc i33 %135 to i32
  store i32 %140, i32* %130, align 4
  br label %141

141:                                              ; preds = %139, %123
  %142 = ptrtoint %"class.WTF::StringImpl"* %121 to i64
  %143 = bitcast i8* %124 to i64*
  %144 = bitcast i8* %124 to %"class.WTF::StringImpl"**
  %145 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %144, align 8
  store i64 %142, i64* %143, align 8
  %146 = icmp eq %"class.WTF::StringImpl"* %145, null
  br i1 %146, label %160, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = load atomic i32, i32* %148 monotonic, align 4
  %150 = and i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 0
  %153 = load i32, i32* %152, align 4
  br i1 %151, label %154, label %156

154:                                              ; preds = %147
  %155 = add i32 %153, -1
  store i32 %155, i32* %152, align 4
  br label %156

156:                                              ; preds = %154, %147
  %157 = phi i32 [ %155, %154 ], [ %153, %147 ]
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %160

159:                                              ; preds = %156
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %145) #13
  br label %160

160:                                              ; preds = %120, %159, %156, %141
  %161 = load i8, i8* %75, align 8, !range !3
  %162 = icmp eq i8 %161, 0
  br i1 %162, label %175, label %163

163:                                              ; preds = %160
  %164 = load %"class.blink::DOMWindow"*, %"class.blink::DOMWindow"** %76, align 8
  %165 = getelementptr inbounds i8, i8* %84, i64 32
  %166 = ptrtoint %"class.blink::DOMWindow"* %164 to i64
  %167 = bitcast i8* %165 to i64*
  store atomic i64 %166, i64* %167 monotonic, align 8
  %168 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %173, label %170

170:                                              ; preds = %163
  %171 = bitcast %"class.blink::DOMWindow"* %164 to i8*
  %172 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %171) #13
  br label %173

173:                                              ; preds = %163, %170
  %174 = getelementptr inbounds i8, i8* %84, i64 16
  store i8 1, i8* %174, align 8
  br label %175

175:                                              ; preds = %160, %173
  %176 = getelementptr inbounds i8, i8* %84, i64 12
  store i8 0, i8* %176, align 4
  %177 = getelementptr inbounds i8, i8* %84, i64 9
  store i8 1, i8* %177, align 1
  %178 = getelementptr inbounds i8, i8* %84, i64 11
  store i8 0, i8* %178, align 1
  %179 = getelementptr inbounds i8, i8* %84, i64 8
  store i8 1, i8* %179, align 8
  call fastcc void @_ZN5blink12_GLOBAL__N_128UpdateCommonPointerEventInitERKNS_15WebPointerEventERKNS_10FloatPointEPNS_14LocalDOMWindowEPNS_16PointerEventInitE(%"class.blink::WebPointerEvent"* dereferenceable(128) %83, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %9, %"class.blink::LocalDOMWindow"* %5, %"class.blink::PointerEventInit"* %85)
  %180 = bitcast i8* %84 to %"class.blink::EventModifierInit"*
  %181 = getelementptr inbounds %"class.blink::WebPointerEvent", %"class.blink::WebPointerEvent"* %83, i64 0, i32 0, i32 5
  %182 = load i32, i32* %181, align 4
  call void @_ZN5blink19UIEventWithKeyState29SetFromWebInputEventModifiersEPNS_17EventModifierInitENS_13WebInputEvent9ModifiersE(%"class.blink::EventModifierInit"* %180, i32 %182) #13
  %183 = getelementptr inbounds %"class.blink::WebPointerEvent", %"class.blink::WebPointerEvent"* %83, i64 0, i32 1, i32 12
  %184 = bitcast %"class.gfx::PointF"* %183 to i32*
  %185 = load i32, i32* %184, align 4
  %186 = getelementptr inbounds %"class.blink::WebPointerEvent", %"class.blink::WebPointerEvent"* %83, i64 0, i32 1, i32 12, i32 1
  %187 = bitcast float* %186 to i32*
  %188 = load i32, i32* %187, align 4
  %189 = zext i32 %188 to i64
  %190 = shl nuw i64 %189, 32
  %191 = zext i32 %185 to i64
  %192 = or i64 %190, %191
  store i64 %192, i64* %77, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78) #13
  store %"class.blink::PointerEvent"* inttoptr (i64 -6148914691236517206 to %"class.blink::PointerEvent"*), %"class.blink::PointerEvent"** %10, align 8
  %193 = getelementptr inbounds %"class.blink::WebPointerEvent", %"class.blink::WebPointerEvent"* %83, i64 0, i32 0, i32 3, i32 0, i32 0
  %194 = load i64, i64* %193, align 8
  %195 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 400) #13
  %196 = bitcast i8* %195 to %"class.blink::PointerEvent"*
  call void @_ZN5blink12PointerEventC1ERKN3WTF12AtomicStringEPKNS_16PointerEventInitEN4base9TimeTicksENS_10MouseEvent18SyntheticEventTypeENS_17WebMenuSourceTypeE(%"class.blink::PointerEvent"* %196, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %7, %"class.blink::PointerEventInit"* %85, i64 %194, i32 0, i32 0) #13
  %197 = getelementptr inbounds i8, i8* %195, i64 -4
  %198 = bitcast i8* %197 to i16*
  %199 = load atomic i16, i16* %198 monotonic, align 2
  %200 = or i16 %199, 1
  store atomic i16 %200, i16* %198 release, align 2
  store i8* %195, i8** %79, align 8
  %201 = getelementptr inbounds i8, i8* %195, i64 24
  %202 = bitcast i8* %201 to i16*
  %203 = load i16, i16* %202, align 8
  %204 = or i16 %203, 256
  store i16 %204, i16* %202, align 8
  %205 = load i32, i32* %47, align 4
  %206 = load i32, i32* %46, align 8
  %207 = icmp eq i32 %205, %206
  br i1 %207, label %221, label %208, !prof !2

208:                                              ; preds = %175
  %209 = ptrtoint i8* %195 to i64
  %210 = load %"class.blink::Member.227"*, %"class.blink::Member.227"** %45, align 8
  %211 = zext i32 %205 to i64
  %212 = getelementptr inbounds %"class.blink::Member.227", %"class.blink::Member.227"* %210, i64 %211
  %213 = bitcast %"class.blink::Member.227"* %212 to i64*
  store atomic i64 %209, i64* %213 monotonic, align 8
  %214 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %218, label %216

216:                                              ; preds = %208
  %217 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %195) #13
  br label %218

218:                                              ; preds = %216, %208
  %219 = load i32, i32* %47, align 4
  %220 = add i32 %219, 1
  store i32 %220, i32* %47, align 4
  br label %222

221:                                              ; preds = %175
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_12PointerEventEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.224"* %80, %"class.blink::PointerEvent"** nonnull dereferenceable(8) %10) #13
  br label %222

222:                                              ; preds = %218, %221
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #13
  %223 = getelementptr inbounds %"class.blink::WebPointerEvent", %"class.blink::WebPointerEvent"* %83, i64 1
  %224 = icmp eq %"class.blink::WebPointerEvent"* %223, %64
  br i1 %224, label %81, label %82

225:                                              ; preds = %81, %44
  %226 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %227 = icmp eq %"class.WTF::StringImpl"* %226, null
  br i1 %227, label %241, label %228

228:                                              ; preds = %225
  %229 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %226, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %230 = load atomic i32, i32* %229 monotonic, align 4
  %231 = and i32 %230, 2
  %232 = icmp eq i32 %231, 0
  %233 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %226, i64 0, i32 0
  %234 = load i32, i32* %233, align 4
  br i1 %232, label %235, label %237

235:                                              ; preds = %228
  %236 = add i32 %234, -1
  store i32 %236, i32* %233, align 4
  br label %237

237:                                              ; preds = %235, %228
  %238 = phi i32 [ %236, %235 ], [ %234, %228 ]
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %240, label %241

240:                                              ; preds = %237
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %226) #13
  br label %241

241:                                              ; preds = %225, %237, %240
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #13
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden <2 x float> @_ZNK5blink19PointerEventFactory22GetLastPointerPositionEiRKNS_20WebPointerPropertiesENS_5mojom9EventTypeE(%"class.blink::PointerEventFactory"*, i32, %"class.blink::WebPointerProperties"* nocapture readonly dereferenceable(60), i32) local_unnamed_addr #0 align 2 {
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = icmp eq i32 %3, 36
  br i1 %7, label %8, label %78

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %0, i64 0, i32 7
  %10 = sext i32 %1 to i64
  %11 = getelementptr inbounds %"class.WTF::HashMap.5", %"class.WTF::HashMap.5"* %9, i64 0, i32 0, i32 0
  %12 = load %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"** %11, align 8
  %13 = icmp eq %"struct.WTF::KeyValuePair.9"* %12, null
  br i1 %13, label %148, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %0, i64 0, i32 7, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = add i32 %16, -1
  %18 = zext i32 %17 to i64
  %19 = shl nsw i64 %10, 32
  %20 = xor i64 %19, -1
  %21 = add i64 %20, %10
  %22 = lshr i64 %21, 22
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 13
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 8
  %28 = xor i64 %27, %26
  %29 = mul i64 %28, 9
  %30 = lshr i64 %29, 15
  %31 = xor i64 %30, %29
  %32 = shl i64 %31, 27
  %33 = xor i64 %32, -1
  %34 = add i64 %31, %33
  %35 = lshr i64 %34, 31
  %36 = xor i64 %35, %34
  %37 = trunc i64 %36 to i32
  %38 = and i32 %17, %37
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %12, i64 %39
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %40, i64 0, i32 0
  %42 = load i64, i64* %41, align 8
  %43 = icmp eq i64 %42, %10
  br i1 %43, label %72, label %44

44:                                               ; preds = %14
  %45 = xor i32 %37, -1
  %46 = lshr i32 %37, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %63, %44
  %59 = phi i64 [ %42, %44 ], [ %70, %63 ]
  %60 = phi i64 [ %39, %44 ], [ %67, %63 ]
  %61 = phi i64 [ 0, %44 ], [ %65, %63 ]
  %62 = icmp eq i64 %59, 9223372036854775807
  br i1 %62, label %148, label %63

63:                                               ; preds = %58
  %64 = icmp eq i64 %61, 0
  %65 = select i1 %64, i64 %57, i64 %61
  %66 = add i64 %65, %60
  %67 = and i64 %66, %18
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %12, i64 %67
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %68, i64 0, i32 0
  %70 = load i64, i64* %69, align 8
  %71 = icmp eq i64 %70, %10
  br i1 %71, label %72, label %58

72:                                               ; preds = %63, %14
  %73 = phi %"struct.WTF::KeyValuePair.9"* [ %40, %14 ], [ %68, %63 ]
  %74 = icmp eq %"struct.WTF::KeyValuePair.9"* %73, null
  br i1 %74, label %148, label %75

75:                                               ; preds = %72
  %76 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #13
  store i64 %10, i64* %5, align 8
  %77 = call <2 x float> @_ZNK3WTF7HashMapIlN5blink10FloatPointENS_7IntHashIlEENS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIS2_EENS_18PartitionAllocatorEE2atERKl(%"class.WTF::HashMap.5"* %9, i64* nonnull dereferenceable(8) %5)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76) #13
  br label %152

78:                                               ; preds = %4
  %79 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %0, i64 0, i32 6
  %80 = sext i32 %1 to i64
  %81 = getelementptr inbounds %"class.WTF::HashMap.5", %"class.WTF::HashMap.5"* %79, i64 0, i32 0, i32 0
  %82 = load %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"** %81, align 8
  %83 = icmp eq %"struct.WTF::KeyValuePair.9"* %82, null
  br i1 %83, label %148, label %84

84:                                               ; preds = %78
  %85 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %0, i64 0, i32 6, i32 0, i32 1
  %86 = load i32, i32* %85, align 8
  %87 = add i32 %86, -1
  %88 = zext i32 %87 to i64
  %89 = shl nsw i64 %80, 32
  %90 = xor i64 %89, -1
  %91 = add i64 %90, %80
  %92 = lshr i64 %91, 22
  %93 = xor i64 %92, %91
  %94 = shl i64 %93, 13
  %95 = xor i64 %94, -1
  %96 = add i64 %93, %95
  %97 = lshr i64 %96, 8
  %98 = xor i64 %97, %96
  %99 = mul i64 %98, 9
  %100 = lshr i64 %99, 15
  %101 = xor i64 %100, %99
  %102 = shl i64 %101, 27
  %103 = xor i64 %102, -1
  %104 = add i64 %101, %103
  %105 = lshr i64 %104, 31
  %106 = xor i64 %105, %104
  %107 = trunc i64 %106 to i32
  %108 = and i32 %87, %107
  %109 = zext i32 %108 to i64
  %110 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %82, i64 %109
  %111 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %110, i64 0, i32 0
  %112 = load i64, i64* %111, align 8
  %113 = icmp eq i64 %112, %80
  br i1 %113, label %142, label %114

114:                                              ; preds = %84
  %115 = xor i32 %107, -1
  %116 = lshr i32 %107, 23
  %117 = add i32 %116, %115
  %118 = shl i32 %117, 12
  %119 = xor i32 %118, %117
  %120 = lshr i32 %119, 7
  %121 = xor i32 %120, %119
  %122 = shl i32 %121, 2
  %123 = xor i32 %122, %121
  %124 = lshr i32 %123, 20
  %125 = xor i32 %124, %123
  %126 = or i32 %125, 1
  %127 = zext i32 %126 to i64
  br label %128

128:                                              ; preds = %133, %114
  %129 = phi i64 [ %112, %114 ], [ %140, %133 ]
  %130 = phi i64 [ %109, %114 ], [ %137, %133 ]
  %131 = phi i64 [ 0, %114 ], [ %135, %133 ]
  %132 = icmp eq i64 %129, 9223372036854775807
  br i1 %132, label %148, label %133

133:                                              ; preds = %128
  %134 = icmp eq i64 %131, 0
  %135 = select i1 %134, i64 %127, i64 %131
  %136 = add i64 %135, %130
  %137 = and i64 %136, %88
  %138 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %82, i64 %137
  %139 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %138, i64 0, i32 0
  %140 = load i64, i64* %139, align 8
  %141 = icmp eq i64 %140, %80
  br i1 %141, label %142, label %128

142:                                              ; preds = %133, %84
  %143 = phi %"struct.WTF::KeyValuePair.9"* [ %110, %84 ], [ %138, %133 ]
  %144 = icmp eq %"struct.WTF::KeyValuePair.9"* %143, null
  br i1 %144, label %148, label %145

145:                                              ; preds = %142
  %146 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %146) #13
  store i64 %80, i64* %6, align 8
  %147 = call <2 x float> @_ZNK3WTF7HashMapIlN5blink10FloatPointENS_7IntHashIlEENS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIS2_EENS_18PartitionAllocatorEE2atERKl(%"class.WTF::HashMap.5"* %79, i64* nonnull dereferenceable(8) %6)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %146) #13
  br label %152

148:                                              ; preds = %128, %58, %72, %142, %78, %8
  %149 = getelementptr inbounds %"class.blink::WebPointerProperties", %"class.blink::WebPointerProperties"* %2, i64 0, i32 12, i32 0
  %150 = bitcast float* %149 to <2 x float>*
  %151 = load <2 x float>, <2 x float>* %150, align 4
  br label %152

152:                                              ; preds = %148, %145, %75
  %153 = phi <2 x float> [ %77, %75 ], [ %151, %148 ], [ %147, %145 ]
  ret <2 x float> %153
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_128UpdateCommonPointerEventInitERKNS_15WebPointerEventERKNS_10FloatPointEPNS_14LocalDOMWindowEPNS_16PointerEventInitE(%"class.blink::WebPointerEvent"* dereferenceable(128), %"class.blink::FloatPoint"* nocapture readonly dereferenceable(8), %"class.blink::LocalDOMWindow"*, %"class.blink::PointerEventInit"*) unnamed_addr #0 {
  %5 = alloca %"class.blink::WebPointerEvent", align 8
  %6 = bitcast %"class.blink::WebPointerEvent"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %6) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 8 bitcast (<{ { i32 (...)**, float, %"class.gfx::Vector2dF", [4 x i8], %"class.base::TimeTicks", i32, i32 }, { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, float, i32, i32, i8, i8, i8, i8, float, float, [4 x i8] }>* @__const._ZN5blink12_GLOBAL__N_128UpdateCommonPointerEventInitERKNS_15WebPointerEventERKNS_10FloatPointEPNS_14LocalDOMWindowEPNS_16PointerEventInitE.web_pointer_event_in_root_frame to i8*), i64 128, i1 false)
  call void @_ZNK5blink15WebPointerEvent26WebPointerEventInRootFrameEv(%"class.blink::WebPointerEvent"* nonnull sret %5, %"class.blink::WebPointerEvent"* %0) #13
  %7 = getelementptr inbounds %"class.blink::WebPointerEvent", %"class.blink::WebPointerEvent"* %5, i64 0, i32 1
  %8 = getelementptr inbounds %"class.blink::PointerEventInit", %"class.blink::PointerEventInit"* %3, i64 0, i32 0
  call void @_ZN5blink10MouseEvent38SetCoordinatesFromWebPointerPropertiesERKNS_20WebPointerPropertiesEPKNS_14LocalDOMWindowEPNS_14MouseEventInitE(%"class.blink::WebPointerProperties"* dereferenceable(60) %7, %"class.blink::LocalDOMWindow"* %2, %"class.blink::MouseEventInit"* %8) #13
  %9 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase36is_consolidated_movement_xy_enabled_E, align 1, !range !3
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %92, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.blink::WebPointerEvent", %"class.blink::WebPointerEvent"* %0, i64 0, i32 1, i32 10
  %13 = load i8, i8* %12, align 8, !range !3
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %92

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.blink::WebPointerEvent", %"class.blink::WebPointerEvent"* %0, i64 0, i32 0, i32 4
  %17 = load i32, i32* %16, align 8
  %18 = add i32 %17, -35
  %19 = icmp ult i32 %18, 2
  br i1 %19, label %20, label %92

20:                                               ; preds = %15
  %21 = icmp eq %"class.blink::LocalDOMWindow"* %2, null
  br i1 %21, label %44, label %22

22:                                               ; preds = %20
  %23 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %2, i64 0, i32 0, i32 1, i32 0, i32 0
  %24 = bitcast %"class.blink::Frame"** %23 to %"class.blink::LocalFrame"**
  %25 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %24, align 8
  %26 = icmp eq %"class.blink::LocalFrame"* %25, null
  br i1 %26, label %44, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %25, i64 0, i32 0
  %29 = call %"class.blink::Page"* @_ZNK5blink5Frame7GetPageEv(%"class.blink::Frame"* %28) #13
  %30 = getelementptr inbounds %"class.blink::Page", %"class.blink::Page"* %29, i64 0, i32 31
  %31 = load float, float* %30, align 4
  %32 = fcmp oeq float %31, 1.000000e+00
  br i1 %32, label %33, label %44

33:                                               ; preds = %27
  %34 = call %"class.blink::Page"* @_ZNK5blink5Frame7GetPageEv(%"class.blink::Frame"* %28) #13
  %35 = getelementptr inbounds %"class.blink::Page", %"class.blink::Page"* %34, i64 0, i32 7, i32 0, i32 0
  %36 = load %"class.blink::ChromeClient"*, %"class.blink::ChromeClient"** %35, align 8
  %37 = bitcast %"class.blink::ChromeClient"* %36 to %"struct.blink::ScreenInfo"* (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*)***
  %38 = load %"struct.blink::ScreenInfo"* (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*)**, %"struct.blink::ScreenInfo"* (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*)*** %37, align 8
  %39 = getelementptr inbounds %"struct.blink::ScreenInfo"* (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*)*, %"struct.blink::ScreenInfo"* (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*)** %38, i64 29
  %40 = load %"struct.blink::ScreenInfo"* (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*)*, %"struct.blink::ScreenInfo"* (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*)** %39, align 8
  %41 = call dereferenceable(552) %"struct.blink::ScreenInfo"* %40(%"class.blink::ChromeClient"* %36, %"class.blink::LocalFrame"* nonnull dereferenceable(1176) %25) #13
  %42 = getelementptr inbounds %"struct.blink::ScreenInfo", %"struct.blink::ScreenInfo"* %41, i64 0, i32 0
  %43 = load float, float* %42, align 8
  br label %44

44:                                               ; preds = %27, %33, %22, %20
  %45 = phi float [ 1.000000e+00, %22 ], [ 1.000000e+00, %20 ], [ %43, %33 ], [ 1.000000e+00, %27 ]
  %46 = getelementptr inbounds %"class.blink::WebPointerEvent", %"class.blink::WebPointerEvent"* %0, i64 0, i32 1, i32 12, i32 0
  %47 = load float, float* %46, align 4
  %48 = fmul float %45, %47
  %49 = fcmp ult float %48, 0xC1E0000000000000
  %50 = fcmp ugt float %48, 0x41DFFFFFE0000000
  %51 = fcmp ogt float %48, 0xC1E0000000000000
  %52 = select i1 %51, float %48, float 0xC1E0000000000000
  %53 = fptosi float %52 to i32
  %54 = select i1 %49, i32 0, i32 2147483647
  %55 = select i1 %50, i32 %54, i32 %53
  %56 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %1, i64 0, i32 0
  %57 = load float, float* %56, align 4
  %58 = fmul float %45, %57
  %59 = fcmp ult float %58, 0xC1E0000000000000
  %60 = fcmp ugt float %58, 0x41DFFFFFE0000000
  %61 = fcmp ogt float %58, 0xC1E0000000000000
  %62 = select i1 %61, float %58, float 0xC1E0000000000000
  %63 = fptosi float %62 to i32
  %64 = select i1 %59, i32 0, i32 2147483647
  %65 = select i1 %60, i32 %64, i32 %63
  %66 = sub nsw i32 %55, %65
  %67 = getelementptr inbounds %"class.blink::PointerEventInit", %"class.blink::PointerEventInit"* %3, i64 0, i32 0, i32 14
  store i32 %66, i32* %67, align 8
  %68 = getelementptr inbounds %"class.blink::PointerEventInit", %"class.blink::PointerEventInit"* %3, i64 0, i32 0, i32 5
  store i8 1, i8* %68, align 8
  %69 = getelementptr inbounds %"class.blink::WebPointerEvent", %"class.blink::WebPointerEvent"* %0, i64 0, i32 1, i32 12, i32 1
  %70 = load float, float* %69, align 4
  %71 = fmul float %45, %70
  %72 = fcmp ult float %71, 0xC1E0000000000000
  %73 = fcmp ugt float %71, 0x41DFFFFFE0000000
  %74 = fcmp ogt float %71, 0xC1E0000000000000
  %75 = select i1 %74, float %71, float 0xC1E0000000000000
  %76 = fptosi float %75 to i32
  %77 = select i1 %72, i32 0, i32 2147483647
  %78 = select i1 %73, i32 %77, i32 %76
  %79 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %1, i64 0, i32 1
  %80 = load float, float* %79, align 4
  %81 = fmul float %45, %80
  %82 = fcmp ult float %81, 0xC1E0000000000000
  %83 = fcmp ugt float %81, 0x41DFFFFFE0000000
  %84 = fcmp ogt float %81, 0xC1E0000000000000
  %85 = select i1 %84, float %81, float 0xC1E0000000000000
  %86 = fptosi float %85 to i32
  %87 = select i1 %82, i32 0, i32 2147483647
  %88 = select i1 %83, i32 %87, i32 %86
  %89 = sub nsw i32 %78, %88
  %90 = getelementptr inbounds %"class.blink::PointerEventInit", %"class.blink::PointerEventInit"* %3, i64 0, i32 0, i32 15
  store i32 %89, i32* %90, align 4
  %91 = getelementptr inbounds %"class.blink::PointerEventInit", %"class.blink::PointerEventInit"* %3, i64 0, i32 0, i32 6
  store i8 1, i8* %91, align 1
  br label %92

92:                                               ; preds = %4, %15, %11, %44
  %93 = getelementptr inbounds %"class.blink::WebPointerEvent", %"class.blink::WebPointerEvent"* %5, i64 0, i32 9
  %94 = load float, float* %93, align 4
  %95 = fcmp ord float %94, 0.000000e+00
  br i1 %95, label %96, label %121

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.blink::WebPointerEvent", %"class.blink::WebPointerEvent"* %5, i64 0, i32 10
  %98 = load float, float* %97, align 8
  %99 = fcmp ord float %98, 0.000000e+00
  br i1 %99, label %100, label %121

100:                                              ; preds = %96
  %101 = icmp eq %"class.blink::LocalDOMWindow"* %2, null
  br i1 %101, label %111, label %102

102:                                              ; preds = %100
  %103 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %2, i64 0, i32 0, i32 1, i32 0, i32 0
  %104 = bitcast %"class.blink::Frame"** %103 to %"class.blink::LocalFrame"**
  %105 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %104, align 8
  %106 = icmp eq %"class.blink::LocalFrame"* %105, null
  br i1 %106, label %111, label %107

107:                                              ; preds = %102
  %108 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %105, i64 0, i32 20
  %109 = load float, float* %108, align 8
  %110 = fdiv float 1.000000e+00, %109
  br label %111

111:                                              ; preds = %102, %100, %107
  %112 = phi float [ %110, %107 ], [ 1.000000e+00, %102 ], [ 1.000000e+00, %100 ]
  %113 = fmul float %94, %112
  %114 = fmul float %98, %112
  %115 = fpext float %113 to double
  %116 = getelementptr inbounds %"class.blink::PointerEventInit", %"class.blink::PointerEventInit"* %3, i64 0, i32 27
  store double %115, double* %116, align 8
  %117 = getelementptr inbounds %"class.blink::PointerEventInit", %"class.blink::PointerEventInit"* %3, i64 0, i32 13
  store i8 1, i8* %117, align 4
  %118 = fpext float %114 to double
  %119 = getelementptr inbounds %"class.blink::PointerEventInit", %"class.blink::PointerEventInit"* %3, i64 0, i32 17
  store double %118, double* %119, align 8
  %120 = getelementptr inbounds %"class.blink::PointerEventInit", %"class.blink::PointerEventInit"* %3, i64 0, i32 4
  store i8 1, i8* %120, align 1
  br label %121

121:                                              ; preds = %111, %96, %92
  %122 = getelementptr inbounds %"class.blink::WebPointerEvent", %"class.blink::WebPointerEvent"* %0, i64 0, i32 1, i32 1
  %123 = load float, float* %122, align 4
  %124 = getelementptr inbounds %"class.blink::PointerEventInit", %"class.blink::PointerEventInit"* %3, i64 0, i32 0, i32 11
  %125 = load i16, i16* %124, align 8
  %126 = icmp eq i16 %125, 0
  %127 = fcmp uno float %123, 0.000000e+00
  %128 = select i1 %127, float 5.000000e-01, float %123
  %129 = select i1 %126, float 0.000000e+00, float %128
  %130 = getelementptr inbounds %"class.blink::PointerEventInit", %"class.blink::PointerEventInit"* %3, i64 0, i32 22
  store float %129, float* %130, align 8
  %131 = getelementptr inbounds %"class.blink::PointerEventInit", %"class.blink::PointerEventInit"* %3, i64 0, i32 8
  store i8 1, i8* %131, align 1
  %132 = getelementptr inbounds %"class.blink::WebPointerEvent", %"class.blink::WebPointerEvent"* %0, i64 0, i32 1, i32 2
  %133 = load i32, i32* %132, align 8
  %134 = getelementptr inbounds %"class.blink::PointerEventInit", %"class.blink::PointerEventInit"* %3, i64 0, i32 24
  store i32 %133, i32* %134, align 8
  %135 = getelementptr inbounds %"class.blink::PointerEventInit", %"class.blink::PointerEventInit"* %3, i64 0, i32 10
  store i8 1, i8* %135, align 1
  %136 = getelementptr inbounds %"class.blink::WebPointerEvent", %"class.blink::WebPointerEvent"* %0, i64 0, i32 1, i32 3
  %137 = load i32, i32* %136, align 4
  %138 = getelementptr inbounds %"class.blink::PointerEventInit", %"class.blink::PointerEventInit"* %3, i64 0, i32 25
  store i32 %137, i32* %138, align 4
  %139 = getelementptr inbounds %"class.blink::PointerEventInit", %"class.blink::PointerEventInit"* %3, i64 0, i32 11
  store i8 1, i8* %139, align 2
  %140 = getelementptr inbounds %"class.blink::WebPointerEvent", %"class.blink::WebPointerEvent"* %0, i64 0, i32 1, i32 4
  %141 = bitcast float* %140 to i32*
  %142 = load i32, i32* %141, align 8
  %143 = getelementptr inbounds %"class.blink::PointerEventInit", %"class.blink::PointerEventInit"* %3, i64 0, i32 23
  %144 = bitcast float* %143 to i32*
  store i32 %142, i32* %144, align 4
  %145 = getelementptr inbounds %"class.blink::PointerEventInit", %"class.blink::PointerEventInit"* %3, i64 0, i32 9
  store i8 1, i8* %145, align 8
  %146 = getelementptr inbounds %"class.blink::WebPointerEvent", %"class.blink::WebPointerEvent"* %0, i64 0, i32 1, i32 5
  %147 = load i32, i32* %146, align 4
  %148 = getelementptr inbounds %"class.blink::PointerEventInit", %"class.blink::PointerEventInit"* %3, i64 0, i32 26
  store i32 %147, i32* %148, align 8
  %149 = getelementptr inbounds %"class.blink::PointerEventInit", %"class.blink::PointerEventInit"* %3, i64 0, i32 12
  store i8 1, i8* %149, align 1
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %6) #13
  ret void
}

declare void @_ZN5blink19UIEventWithKeyState29SetFromWebInputEventModifiersEPNS_17EventModifierInitENS_13WebInputEvent9ModifiersE(%"class.blink::EventModifierInit"*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::PointerEventInit"* @_ZN5blink19PointerEventFactory25ConvertIdTypeButtonsEventERKNS_15WebPointerEventE(%"class.blink::PointerEventFactory"*, %"class.blink::WebPointerEvent"* nocapture readonly dereferenceable(128)) local_unnamed_addr #3 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.blink::WebPointerEvent", %"class.blink::WebPointerEvent"* %1, i64 0, i32 1, i32 7
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.blink::WebPointerEvent", %"class.blink::WebPointerEvent"* %1, i64 0, i32 7
  %7 = load i8, i8* %6, align 2, !range !3
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::WebPointerEvent", %"class.blink::WebPointerEvent"* %1, i64 0, i32 0, i32 5
  %11 = load i32, i32* %10, align 4
  %12 = tail call zeroext i16 @_ZN5blink10MouseEvent31WebInputEventModifiersToButtonsEj(i32 %11) #13
  %13 = zext i16 %12 to i32
  br label %21

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.blink::WebPointerEvent", %"class.blink::WebPointerEvent"* %1, i64 0, i32 0, i32 4
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 34
  br i1 %17, label %21, label %18

18:                                               ; preds = %14
  %19 = icmp ne i32 %16, 37
  %20 = zext i1 %19 to i32
  br label %21

21:                                               ; preds = %14, %18, %9
  %22 = phi i32 [ %13, %9 ], [ 0, %14 ], [ %20, %18 ]
  %23 = icmp eq i32 %5, 4
  br i1 %23, label %24, label %29

24:                                               ; preds = %21
  %25 = icmp eq i32 %22, 0
  %26 = and i32 %22, 65502
  %27 = or i32 %26, 32
  %28 = select i1 %25, i32 0, i32 %27
  br label %29

29:                                               ; preds = %24, %21
  %30 = phi i32 [ %22, %21 ], [ %28, %24 ]
  %31 = phi i32 [ %5, %21 ], [ 2, %24 ]
  %32 = getelementptr inbounds %"class.blink::WebPointerEvent", %"class.blink::WebPointerEvent"* %1, i64 0, i32 1, i32 0
  %33 = load i32, i32* %32, align 8
  %34 = zext i32 %33 to i64
  %35 = shl nuw i64 %34, 32
  %36 = zext i32 %31 to i64
  %37 = or i64 %35, %36
  %38 = icmp ne i32 %30, 0
  %39 = load i8, i8* %6, align 2, !range !3
  %40 = icmp ne i8 %39, 0
  %41 = getelementptr inbounds %"class.blink::WebPointerEvent", %"class.blink::WebPointerEvent"* %1, i64 0, i32 0, i32 4
  %42 = load i32, i32* %41, align 8
  %43 = tail call i32 @_ZN5blink19PointerEventFactory21AddIdAndActiveButtonsENS0_10IncomingIdEbbNS_5mojom9EventTypeE(%"class.blink::PointerEventFactory"* %0, i64 %37, i1 zeroext %38, i1 zeroext %40, i32 %42)
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %130, label %45

45:                                               ; preds = %29
  %46 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 256) #13
  %47 = bitcast i8* %46 to %"class.blink::PointerEventInit"*
  tail call void @_ZN5blink16PointerEventInitC1Ev(%"class.blink::PointerEventInit"* %47) #13
  %48 = getelementptr inbounds i8, i8* %46, i64 -4
  %49 = bitcast i8* %48 to i16*
  %50 = load atomic i16, i16* %49 monotonic, align 2
  %51 = or i16 %50, 1
  store atomic i16 %51, i16* %49 release, align 2
  %52 = trunc i32 %30 to i16
  %53 = getelementptr inbounds i8, i8* %46, i64 72
  %54 = bitcast i8* %53 to i16*
  store i16 %52, i16* %54, align 8
  %55 = getelementptr inbounds i8, i8* %46, i64 61
  store i8 1, i8* %55, align 1
  %56 = getelementptr inbounds i8, i8* %46, i64 196
  %57 = bitcast i8* %56 to i32*
  store i32 %43, i32* %57, align 4
  %58 = getelementptr inbounds i8, i8* %46, i64 141
  store i8 1, i8* %58, align 1
  %59 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #13
  %60 = add i32 %31, -1
  %61 = icmp ult i32 %60, 3
  br i1 %61, label %62, label %66

62:                                               ; preds = %45
  %63 = sext i32 %60 to i64
  %64 = getelementptr inbounds [3 x i8*], [3 x i8*]* @switch.table._ZN5blink19PointerEventFactory24CreatePointerCancelEventEiN4base9TimeTicksE, i64 0, i64 %63
  %65 = load i8*, i8** %64, align 8
  br label %66

66:                                               ; preds = %62, %45
  %67 = phi i8* [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), %45 ], [ %65, %62 ]
  %68 = tail call i64 @strlen(i8* nonnull %67) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* nonnull %67, i64 %68) #13
  %69 = getelementptr inbounds i8, i8* %46, i64 200
  %70 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %72, label %90, label %73

73:                                               ; preds = %66
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %90

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  %81 = zext i32 %80 to i33
  %82 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %81, i33 1) #13
  %83 = extractvalue { i33, i1 } %82, 1
  %84 = extractvalue { i33, i1 } %82, 0
  %85 = icmp slt i33 %84, 0
  %86 = or i1 %83, %85
  br i1 %86, label %87, label %88, !prof !2

87:                                               ; preds = %78
  call void @llvm.trap() #13
  unreachable

88:                                               ; preds = %78
  %89 = trunc i33 %84 to i32
  store i32 %89, i32* %79, align 4
  br label %90

90:                                               ; preds = %88, %73, %66
  %91 = ptrtoint %"class.WTF::StringImpl"* %71 to i64
  %92 = bitcast i8* %69 to i64*
  %93 = bitcast i8* %69 to %"class.WTF::StringImpl"**
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %93, align 8
  store i64 %91, i64* %92, align 8
  %95 = icmp eq %"class.WTF::StringImpl"* %94, null
  br i1 %95, label %109, label %96

96:                                               ; preds = %90
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load atomic i32, i32* %97 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 0
  %102 = load i32, i32* %101, align 4
  br i1 %100, label %103, label %105

103:                                              ; preds = %96
  %104 = add i32 %102, -1
  store i32 %104, i32* %101, align 4
  br label %105

105:                                              ; preds = %103, %96
  %106 = phi i32 [ %104, %103 ], [ %102, %96 ]
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %109

108:                                              ; preds = %105
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %94) #13
  br label %109

109:                                              ; preds = %90, %105, %108
  %110 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %111 = icmp eq %"class.WTF::StringImpl"* %110, null
  br i1 %111, label %125, label %112

112:                                              ; preds = %109
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = load atomic i32, i32* %113 monotonic, align 4
  %115 = and i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 0
  %118 = load i32, i32* %117, align 4
  br i1 %116, label %119, label %121

119:                                              ; preds = %112
  %120 = add i32 %118, -1
  store i32 %120, i32* %117, align 4
  br label %121

121:                                              ; preds = %119, %112
  %122 = phi i32 [ %120, %119 ], [ %118, %112 ]
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %125

124:                                              ; preds = %121
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %110) #13
  br label %125

125:                                              ; preds = %109, %121, %124
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #13
  %126 = call zeroext i1 @_ZNK5blink19PointerEventFactory9IsPrimaryEi(%"class.blink::PointerEventFactory"* %0, i32 %43)
  %127 = zext i1 %126 to i8
  %128 = getelementptr inbounds i8, i8* %46, i64 192
  store i8 %127, i8* %128, align 8
  %129 = getelementptr inbounds i8, i8* %46, i64 140
  store i8 1, i8* %129, align 4
  br label %130

130:                                              ; preds = %29, %125
  %131 = phi %"class.blink::PointerEventInit"* [ %47, %125 ], [ null, %29 ]
  ret %"class.blink::PointerEventInit"* %131
}

declare zeroext i16 @_ZN5blink10MouseEvent31WebInputEventModifiersToButtonsEj(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink19PointerEventFactory21AddIdAndActiveButtonsENS0_10IncomingIdEbbNS_5mojom9EventTypeE(%"class.blink::PointerEventFactory"*, i64, i1 zeroext, i1 zeroext, i32) local_unnamed_addr #3 align 2 {
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %"struct.blink::PointerEventFactory::IncomingId"*
  %8 = alloca %"struct.blink::PointerEventFactory::PointerAttributes", align 8
  %9 = alloca i32, align 4
  %10 = alloca %"struct.blink::PointerEventFactory::PointerAttributes", align 8
  %11 = alloca i32, align 4
  %12 = alloca %"struct.blink::PointerEventFactory::PointerAttributes", align 8
  store i64 %1, i64* %6, align 8
  %13 = trunc i64 %1 to i32
  %14 = icmp eq i32 %13, 1
  %15 = lshr i64 %1, 32
  %16 = trunc i64 %15 to i32
  br i1 %14, label %17, label %41

17:                                               ; preds = %5
  %18 = bitcast %"struct.blink::PointerEventFactory::PointerAttributes"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %18) #13
  %19 = zext i1 %2 to i8
  %20 = bitcast %"struct.blink::PointerEventFactory::PointerAttributes"* %8 to i64*
  store i64 %1, i64* %20, align 8
  %21 = getelementptr inbounds %"struct.blink::PointerEventFactory::PointerAttributes", %"struct.blink::PointerEventFactory::PointerAttributes"* %8, i64 0, i32 1
  store i8 %19, i8* %21, align 8
  %22 = getelementptr inbounds %"struct.blink::PointerEventFactory::PointerAttributes", %"struct.blink::PointerEventFactory::PointerAttributes"* %8, i64 0, i32 2
  store i8 1, i8* %22, align 1
  %23 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %0, i64 0, i32 3, i32 0
  %24 = call { %"struct.WTF::KeyValuePair.4"*, i8 } @_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink19PointerEventFactory17PointerAttributesEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIS4_EEEESB_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S8_SF_EERKiS4_EENS_18HashTableAddResultISG_S5_EEOT0_OT1_(%"class.WTF::HashTable.1"* %23, i32* nonnull dereferenceable(4) @_ZN5blink19PointerEventFactory8kMouseIdE, %"struct.blink::PointerEventFactory::PointerAttributes"* nonnull dereferenceable(12) %8) #13
  %25 = extractvalue { %"struct.WTF::KeyValuePair.4"*, i8 } %24, 1
  %26 = and i8 %25, 1
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %40

28:                                               ; preds = %17
  %29 = extractvalue { %"struct.WTF::KeyValuePair.4"*, i8 } %24, 0
  %30 = getelementptr inbounds %"struct.blink::PointerEventFactory::PointerAttributes", %"struct.blink::PointerEventFactory::PointerAttributes"* %8, i64 0, i32 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 8
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %29, i64 0, i32 1, i32 0, i32 0, i32 0
  store i32 %31, i32* %32, align 4
  %33 = getelementptr inbounds %"struct.blink::PointerEventFactory::PointerAttributes", %"struct.blink::PointerEventFactory::PointerAttributes"* %8, i64 0, i32 0, i32 0, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %29, i64 0, i32 1, i32 0, i32 0, i32 1
  store i32 %34, i32* %35, align 4
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %29, i64 0, i32 1, i32 1
  %37 = bitcast i8* %21 to i16*
  %38 = bitcast i8* %36 to i16*
  %39 = load i16, i16* %37, align 8
  store i16 %39, i16* %38, align 4
  br label %40

40:                                               ; preds = %17, %28
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %18) #13
  br label %194

41:                                               ; preds = %5
  %42 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %0, i64 0, i32 2
  %43 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %42, i64 0, i32 0, i32 0
  %44 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %43, align 8
  %45 = icmp eq %"struct.WTF::KeyValuePair"* %44, null
  br i1 %45, label %166, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %0, i64 0, i32 2, i32 0, i32 1
  %48 = load i32, i32* %47, align 8
  %49 = add i32 %48, -1
  %50 = zext i32 %49 to i64
  %51 = and i64 %1, 4294967295
  %52 = mul i64 %51, 5146158508761418231
  %53 = mul i64 %15, -682818954288075998
  %54 = add i64 %53, %52
  %55 = lshr i64 %54, 32
  %56 = trunc i64 %55 to i32
  %57 = and i32 %49, %56
  %58 = zext i32 %57 to i64
  %59 = xor i32 %56, -1
  %60 = lshr i64 %54, 55
  %61 = trunc i64 %60 to i32
  %62 = add i32 %61, %59
  %63 = shl i32 %62, 12
  %64 = xor i32 %63, %62
  %65 = lshr i32 %64, 7
  %66 = xor i32 %65, %64
  %67 = shl i32 %66, 2
  %68 = xor i32 %67, %66
  %69 = lshr i32 %68, 20
  %70 = xor i32 %69, %68
  %71 = or i32 %70, 1
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %44, i64 %58
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %73, i64 0, i32 0, i32 0
  %75 = load i32, i32* %74, align 4
  %76 = icmp eq i32 %75, %13
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %44, i64 %58, i32 0, i32 1
  %78 = load i32, i32* %77, align 4
  %79 = icmp eq i32 %78, %16
  %80 = and i1 %76, %79
  br i1 %80, label %102, label %81

81:                                               ; preds = %46, %89
  %82 = phi i32 [ %99, %89 ], [ %78, %46 ]
  %83 = phi i32 [ %96, %89 ], [ %75, %46 ]
  %84 = phi i64 [ %93, %89 ], [ %58, %46 ]
  %85 = phi i64 [ %91, %89 ], [ 0, %46 ]
  %86 = icmp eq i32 %83, 2147483647
  %87 = icmp eq i32 %82, 2147483647
  %88 = and i1 %87, %86
  br i1 %88, label %166, label %89

89:                                               ; preds = %81
  %90 = icmp eq i64 %85, 0
  %91 = select i1 %90, i64 %72, i64 %85
  %92 = add i64 %91, %84
  %93 = and i64 %92, %50
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %44, i64 %93
  %95 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %94, i64 0, i32 0, i32 0
  %96 = load i32, i32* %95, align 4
  %97 = icmp eq i32 %96, %13
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %44, i64 %93, i32 0, i32 1
  %99 = load i32, i32* %98, align 4
  %100 = icmp eq i32 %99, %16
  %101 = and i1 %97, %100
  br i1 %101, label %102, label %81

102:                                              ; preds = %89, %46
  %103 = phi %"struct.WTF::KeyValuePair"* [ %73, %46 ], [ %94, %89 ]
  %104 = icmp eq %"struct.WTF::KeyValuePair"* %103, null
  br i1 %104, label %166, label %105

105:                                              ; preds = %102
  %106 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %106) #13
  store i32 -1431655766, i32* %9, align 4
  %107 = load i32, i32* %74, align 4
  %108 = icmp eq i32 %107, %13
  %109 = load i32, i32* %77, align 4
  %110 = icmp eq i32 %109, %16
  %111 = and i1 %108, %110
  br i1 %111, label %133, label %112

112:                                              ; preds = %105, %120
  %113 = phi i32 [ %130, %120 ], [ %109, %105 ]
  %114 = phi i32 [ %127, %120 ], [ %107, %105 ]
  %115 = phi i64 [ %124, %120 ], [ %58, %105 ]
  %116 = phi i64 [ %122, %120 ], [ 0, %105 ]
  %117 = icmp eq i32 %114, 2147483647
  %118 = icmp eq i32 %113, 2147483647
  %119 = and i1 %118, %117
  br i1 %119, label %139, label %120

120:                                              ; preds = %112
  %121 = icmp eq i64 %116, 0
  %122 = select i1 %121, i64 %72, i64 %116
  %123 = add i64 %122, %115
  %124 = and i64 %123, %50
  %125 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %44, i64 %124
  %126 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %125, i64 0, i32 0, i32 0
  %127 = load i32, i32* %126, align 4
  %128 = icmp eq i32 %127, %13
  %129 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %44, i64 %124, i32 0, i32 1
  %130 = load i32, i32* %129, align 4
  %131 = icmp eq i32 %130, %16
  %132 = and i1 %128, %131
  br i1 %132, label %133, label %112

133:                                              ; preds = %120, %105
  %134 = phi %"struct.WTF::KeyValuePair"* [ %73, %105 ], [ %125, %120 ]
  %135 = icmp eq %"struct.WTF::KeyValuePair"* %134, null
  br i1 %135, label %139, label %136

136:                                              ; preds = %133
  %137 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %134, i64 0, i32 1
  %138 = load i32, i32* %137, align 4
  br label %139

139:                                              ; preds = %112, %133, %136
  %140 = phi i32 [ %138, %136 ], [ 0, %133 ], [ 0, %112 ]
  store i32 %140, i32* %9, align 4
  %141 = bitcast %"struct.blink::PointerEventFactory::PointerAttributes"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %141) #13
  %142 = zext i1 %2 to i8
  %143 = zext i1 %3 to i8
  %144 = bitcast %"struct.blink::PointerEventFactory::PointerAttributes"* %10 to i64*
  store i64 %1, i64* %144, align 8
  %145 = getelementptr inbounds %"struct.blink::PointerEventFactory::PointerAttributes", %"struct.blink::PointerEventFactory::PointerAttributes"* %10, i64 0, i32 1
  store i8 %142, i8* %145, align 8
  %146 = getelementptr inbounds %"struct.blink::PointerEventFactory::PointerAttributes", %"struct.blink::PointerEventFactory::PointerAttributes"* %10, i64 0, i32 2
  store i8 %143, i8* %146, align 1
  %147 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %0, i64 0, i32 3, i32 0
  %148 = call { %"struct.WTF::KeyValuePair.4"*, i8 } @_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink19PointerEventFactory17PointerAttributesEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIS4_EEEESB_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S8_SF_EERiS4_EENS_18HashTableAddResultISG_S5_EEOT0_OT1_(%"class.WTF::HashTable.1"* %147, i32* nonnull dereferenceable(4) %9, %"struct.blink::PointerEventFactory::PointerAttributes"* nonnull dereferenceable(12) %10) #13
  %149 = extractvalue { %"struct.WTF::KeyValuePair.4"*, i8 } %148, 1
  %150 = and i8 %149, 1
  %151 = icmp eq i8 %150, 0
  br i1 %151, label %152, label %164

152:                                              ; preds = %139
  %153 = extractvalue { %"struct.WTF::KeyValuePair.4"*, i8 } %148, 0
  %154 = getelementptr inbounds %"struct.blink::PointerEventFactory::PointerAttributes", %"struct.blink::PointerEventFactory::PointerAttributes"* %10, i64 0, i32 0, i32 0, i32 0
  %155 = load i32, i32* %154, align 8
  %156 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %153, i64 0, i32 1, i32 0, i32 0, i32 0
  store i32 %155, i32* %156, align 4
  %157 = getelementptr inbounds %"struct.blink::PointerEventFactory::PointerAttributes", %"struct.blink::PointerEventFactory::PointerAttributes"* %10, i64 0, i32 0, i32 0, i32 1
  %158 = load i32, i32* %157, align 4
  %159 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %153, i64 0, i32 1, i32 0, i32 0, i32 1
  store i32 %158, i32* %159, align 4
  %160 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %153, i64 0, i32 1, i32 1
  %161 = bitcast i8* %145 to i16*
  %162 = bitcast i8* %160 to i16*
  %163 = load i16, i16* %161, align 8
  store i16 %163, i16* %162, align 4
  br label %164

164:                                              ; preds = %139, %152
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %141) #13
  %165 = load i32, i32* %9, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %106) #13
  br label %194

166:                                              ; preds = %81, %102, %41
  %167 = icmp eq i32 %4, 37
  br i1 %167, label %194, label %168

168:                                              ; preds = %166
  %169 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %169) #13
  %170 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %0, i64 0, i32 0
  %171 = load i32, i32* %170, align 8
  %172 = add nsw i32 %171, 1
  store i32 %172, i32* %170, align 8
  store i32 %171, i32* %11, align 4
  %173 = shl i64 %1, 32
  %174 = ashr exact i64 %173, 32
  %175 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %0, i64 0, i32 5, i64 %174
  %176 = load i32, i32* %175, align 4
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %180

178:                                              ; preds = %168
  %179 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %0, i64 0, i32 4, i64 %174
  store i32 %171, i32* %179, align 4
  br label %180

180:                                              ; preds = %168, %178
  %181 = add nsw i32 %176, 1
  store i32 %181, i32* %175, align 4
  %182 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %42, i64 0, i32 0
  %183 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINSt3__14pairIiiEENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_8PairHashIiiEENS_18HashMapValueTraitsINS_14PairHashTraitsINS_29UnsignedWithZeroKeyHashTraitsIiEESC_EENS_10HashTraitsIiEEEESD_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISG_S8_SH_EERKN5blink19PointerEventFactory10IncomingIdERiEENS_18HashTableAddResultISI_S5_EEOT0_OT1_(%"class.WTF::HashTable"* %182, %"struct.blink::PointerEventFactory::IncomingId"* nonnull dereferenceable(8) %7, i32* nonnull dereferenceable(4) %11) #13
  %184 = bitcast %"struct.blink::PointerEventFactory::PointerAttributes"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %184) #13
  %185 = load i64, i64* %6, align 8
  %186 = zext i1 %2 to i8
  %187 = zext i1 %3 to i8
  %188 = bitcast %"struct.blink::PointerEventFactory::PointerAttributes"* %12 to i64*
  store i64 %185, i64* %188, align 8
  %189 = getelementptr inbounds %"struct.blink::PointerEventFactory::PointerAttributes", %"struct.blink::PointerEventFactory::PointerAttributes"* %12, i64 0, i32 1
  store i8 %186, i8* %189, align 8
  %190 = getelementptr inbounds %"struct.blink::PointerEventFactory::PointerAttributes", %"struct.blink::PointerEventFactory::PointerAttributes"* %12, i64 0, i32 2
  store i8 %187, i8* %190, align 1
  %191 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %0, i64 0, i32 3, i32 0
  %192 = call { %"struct.WTF::KeyValuePair.4"*, i8 } @_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink19PointerEventFactory17PointerAttributesEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIS4_EEEESB_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S8_SF_EERiS4_EENS_18HashTableAddResultISG_S5_EEOT0_OT1_(%"class.WTF::HashTable.1"* %191, i32* nonnull dereferenceable(4) %11, %"struct.blink::PointerEventFactory::PointerAttributes"* nonnull dereferenceable(12) %12) #13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %184) #13
  %193 = load i32, i32* %11, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %169) #13
  br label %194

194:                                              ; preds = %166, %180, %164, %40
  %195 = phi i32 [ 1, %40 ], [ %165, %164 ], [ %193, %180 ], [ 0, %166 ]
  ret i32 %195
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZN5blink19PointerEventFactory37PointerTypeNameForWebPointPointerTypeEN2ui16EventPointerTypeE(i32) local_unnamed_addr #4 align 2 {
  %2 = add i32 %0, -1
  %3 = icmp ult i32 %2, 3
  br i1 %3, label %4, label %8

4:                                                ; preds = %1
  %5 = sext i32 %2 to i64
  %6 = getelementptr inbounds [3 x i8*], [3 x i8*]* @switch.table._ZN5blink19PointerEventFactory24CreatePointerCancelEventEiN4base9TimeTicksE, i64 0, i64 %5
  %7 = load i8*, i8** %6, align 8
  ret i8* %7

8:                                                ; preds = %1
  ret i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink19PointerEventFactory9IsPrimaryEi(%"class.blink::PointerEventFactory"*, i32) local_unnamed_addr #3 align 2 {
  %3 = alloca i64, align 8
  %4 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %0, i64 0, i32 3
  %5 = sext i32 %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashMap.0", %"class.WTF::HashMap.0"* %4, i64 0, i32 0, i32 0
  %7 = load %"struct.WTF::KeyValuePair.4"*, %"struct.WTF::KeyValuePair.4"** %6, align 8
  %8 = icmp eq %"struct.WTF::KeyValuePair.4"* %7, null
  br i1 %8, label %79, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %0, i64 0, i32 3, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = add i32 %11, -1
  %13 = zext i32 %12 to i64
  %14 = shl nsw i64 %5, 32
  %15 = xor i64 %14, -1
  %16 = add i64 %15, %5
  %17 = lshr i64 %16, 22
  %18 = xor i64 %17, %16
  %19 = shl i64 %18, 13
  %20 = xor i64 %19, -1
  %21 = add i64 %18, %20
  %22 = lshr i64 %21, 8
  %23 = xor i64 %22, %21
  %24 = mul i64 %23, 9
  %25 = lshr i64 %24, 15
  %26 = xor i64 %25, %24
  %27 = shl i64 %26, 27
  %28 = xor i64 %27, -1
  %29 = add i64 %26, %28
  %30 = lshr i64 %29, 31
  %31 = xor i64 %30, %29
  %32 = trunc i64 %31 to i32
  %33 = and i32 %12, %32
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %7, i64 %34
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %35, i64 0, i32 0
  %37 = load i64, i64* %36, align 8
  %38 = icmp eq i64 %37, %5
  br i1 %38, label %67, label %39

39:                                               ; preds = %9
  %40 = xor i32 %32, -1
  %41 = lshr i32 %32, 23
  %42 = add i32 %41, %40
  %43 = shl i32 %42, 12
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 7
  %46 = xor i32 %45, %44
  %47 = shl i32 %46, 2
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 20
  %50 = xor i32 %49, %48
  %51 = or i32 %50, 1
  %52 = zext i32 %51 to i64
  br label %53

53:                                               ; preds = %58, %39
  %54 = phi i64 [ %37, %39 ], [ %65, %58 ]
  %55 = phi i64 [ %34, %39 ], [ %62, %58 ]
  %56 = phi i64 [ 0, %39 ], [ %60, %58 ]
  %57 = icmp eq i64 %54, 9223372036854775807
  br i1 %57, label %79, label %58

58:                                               ; preds = %53
  %59 = icmp eq i64 %56, 0
  %60 = select i1 %59, i64 %52, i64 %56
  %61 = add i64 %60, %55
  %62 = and i64 %61, %13
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %7, i64 %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %63, i64 0, i32 0
  %65 = load i64, i64* %64, align 8
  %66 = icmp eq i64 %65, %5
  br i1 %66, label %67, label %53

67:                                               ; preds = %58, %9
  %68 = phi %"struct.WTF::KeyValuePair.4"* [ %35, %9 ], [ %63, %58 ]
  %69 = icmp eq %"struct.WTF::KeyValuePair.4"* %68, null
  br i1 %69, label %79, label %70

70:                                               ; preds = %67
  %71 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #13
  store i64 %5, i64* %3, align 8
  %72 = call { i64, i32 } @_ZNK3WTF7HashMapIlN5blink19PointerEventFactory17PointerAttributesENS_7IntHashIlEENS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIS3_EENS_18PartitionAllocatorEE2atERKl(%"class.WTF::HashMap.0"* %4, i64* nonnull dereferenceable(8) %3)
  %73 = extractvalue { i64, i32 } %72, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #13
  %74 = shl i64 %73, 32
  %75 = ashr exact i64 %74, 32
  %76 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %0, i64 0, i32 4, i64 %75
  %77 = load i32, i32* %76, align 4
  %78 = icmp eq i32 %77, %1
  br label %79

79:                                               ; preds = %53, %67, %2, %70
  %80 = phi i1 [ %78, %70 ], [ false, %67 ], [ false, %2 ], [ false, %53 ]
  ret i1 %80
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink19PointerEventFactory22SetEventSpecificFieldsEPNS_16PointerEventInitERKN3WTF12AtomicStringE(%"class.blink::PointerEventFactory"* nocapture readnone, %"class.blink::PointerEventInit"* nocapture, %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #5 align 2 {
  %4 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names13kPointerenterE, align 8
  %5 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %6, %8
  br i1 %9, label %16, label %10

10:                                               ; preds = %3
  %11 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names13kPointerleaveE, align 8
  %12 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp ne %"class.WTF::StringImpl"* %6, %13
  %15 = zext i1 %14 to i8
  br label %16

16:                                               ; preds = %3, %10
  %17 = phi i8 [ 0, %3 ], [ %15, %10 ]
  %18 = getelementptr inbounds %"class.blink::PointerEventInit", %"class.blink::PointerEventInit"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  store i8 %17, i8* %18, align 1
  %19 = getelementptr inbounds %"class.blink::PointerEventInit", %"class.blink::PointerEventInit"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i8 1, i8* %19, align 8
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %20, %21
  br i1 %22, label %49, label %23

23:                                               ; preds = %16
  %24 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names13kPointerleaveE, align 8
  %25 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %24, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %20, %26
  br i1 %27, label %49, label %28

28:                                               ; preds = %23
  %29 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names14kPointercancelE, align 8
  %30 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %20, %31
  br i1 %32, label %49, label %33

33:                                               ; preds = %28
  %34 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names17kPointerrawupdateE, align 8
  %35 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %34, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %20, %36
  br i1 %37, label %49, label %38

38:                                               ; preds = %33
  %39 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names18kGotpointercaptureE, align 8
  %40 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %20, %41
  br i1 %42, label %49, label %43

43:                                               ; preds = %38
  %44 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names19kLostpointercaptureE, align 8
  %45 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %44, i64 0, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = icmp ne %"class.WTF::StringImpl"* %20, %46
  %48 = zext i1 %47 to i8
  br label %49

49:                                               ; preds = %38, %33, %28, %23, %16, %43
  %50 = phi i8 [ 0, %38 ], [ 0, %33 ], [ 0, %28 ], [ 0, %23 ], [ 0, %16 ], [ %48, %43 ]
  %51 = getelementptr inbounds %"class.blink::PointerEventInit", %"class.blink::PointerEventInit"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5
  store i8 %50, i8* %51, align 4
  %52 = getelementptr inbounds %"class.blink::PointerEventInit", %"class.blink::PointerEventInit"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i8 1, i8* %52, align 1
  %53 = getelementptr inbounds %"class.blink::PointerEventInit", %"class.blink::PointerEventInit"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6
  store i8 1, i8* %53, align 1
  %54 = getelementptr inbounds %"class.blink::PointerEventInit", %"class.blink::PointerEventInit"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3
  store i8 1, i8* %54, align 2
  %55 = getelementptr inbounds %"class.blink::PointerEventInit", %"class.blink::PointerEventInit"* %1, i64 0, i32 0, i32 0, i32 0, i32 4
  store i32 0, i32* %55, align 4
  %56 = getelementptr inbounds %"class.blink::PointerEventInit", %"class.blink::PointerEventInit"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  store i8 1, i8* %56, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::PointerEvent"* @_ZN5blink19PointerEventFactory6CreateERKNS_15WebPointerEventERKN3WTF6VectorIS1_Lj0ENS4_18PartitionAllocatorEEES9_PNS_14LocalDOMWindowE(%"class.blink::PointerEventFactory"*, %"class.blink::WebPointerEvent"* dereferenceable(128), %"class.WTF::Vector.1693"* dereferenceable(16), %"class.WTF::Vector.1693"* dereferenceable(16), %"class.blink::LocalDOMWindow"*) local_unnamed_addr #0 align 2 {
  %6 = alloca i32, align 4
  %7 = alloca %"class.WTF::AtomicString", align 8
  %8 = alloca <2 x float>, align 8
  %9 = bitcast <2 x float>* %8 to %"class.blink::FloatPoint"*
  %10 = alloca %"class.blink::HeapVector.221", align 8
  %11 = alloca %"class.blink::HeapVector.221", align 8
  %12 = alloca %"class.blink::HeapVector.221", align 8
  %13 = alloca %"class.blink::HeapVector.221", align 8
  %14 = alloca i64, align 8
  %15 = bitcast i64* %14 to %"class.blink::FloatPoint"*
  %16 = getelementptr inbounds %"class.blink::WebPointerEvent", %"class.blink::WebPointerEvent"* %1, i64 0, i32 0, i32 4
  %17 = load i32, i32* %16, align 8
  %18 = tail call %"class.blink::PointerEventInit"* @_ZN5blink19PointerEventFactory25ConvertIdTypeButtonsEventERKNS_15WebPointerEventE(%"class.blink::PointerEventFactory"* %0, %"class.blink::WebPointerEvent"* dereferenceable(128) %1)
  %19 = icmp eq %"class.blink::PointerEventInit"* %18, null
  br i1 %19, label %329, label %20

20:                                               ; preds = %5
  %21 = bitcast %"class.WTF::AtomicString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #13
  %22 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %22, align 8
  %23 = add i32 %17, -33
  %24 = icmp ult i32 %23, 5
  br i1 %24, label %25, label %29

25:                                               ; preds = %20
  %26 = sext i32 %23 to i64
  %27 = getelementptr inbounds [5 x %"class.WTF::AtomicString"**], [5 x %"class.WTF::AtomicString"**]* @switch.table._ZN5blink19PointerEventFactory6CreateERKNS_15WebPointerEventERKN3WTF6VectorIS1_Lj0ENS4_18PartitionAllocatorEEES9_PNS_14LocalDOMWindowE, i64 0, i64 %26
  %28 = load %"class.WTF::AtomicString"**, %"class.WTF::AtomicString"*** %27, align 8
  br label %29

29:                                               ; preds = %20, %25
  %30 = phi %"class.WTF::AtomicString"** [ %28, %25 ], [ @_ZN3WTF12g_empty_atomE, %20 ]
  %31 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %30, align 8
  %32 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %31, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  store %"class.WTF::StringImpl"* %33, %"class.WTF::StringImpl"** %22, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %52, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %52

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i33
  %44 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %43, i33 1) #13
  %45 = extractvalue { i33, i1 } %44, 1
  %46 = extractvalue { i33, i1 } %44, 0
  %47 = icmp slt i33 %46, 0
  %48 = or i1 %45, %47
  br i1 %48, label %49, label %50, !prof !2

49:                                               ; preds = %40
  tail call void @llvm.trap() #13
  unreachable

50:                                               ; preds = %40
  %51 = trunc i33 %46 to i32
  store i32 %51, i32* %41, align 4
  br label %52

52:                                               ; preds = %29, %35, %50
  %53 = add i32 %17, -33
  %54 = icmp ult i32 %53, 2
  br i1 %54, label %55, label %124

55:                                               ; preds = %52
  %56 = getelementptr inbounds %"class.blink::WebPointerEvent", %"class.blink::WebPointerEvent"* %1, i64 0, i32 1, i32 6
  %57 = load i32, i32* %56, align 8
  %58 = getelementptr inbounds %"class.blink::WebPointerEvent", %"class.blink::WebPointerEvent"* %1, i64 0, i32 1, i32 7
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, 4
  %61 = icmp eq i32 %57, 0
  %62 = and i1 %61, %60
  %63 = select i1 %62, i32 5, i32 %57
  %64 = trunc i32 %63 to i16
  %65 = getelementptr inbounds %"class.blink::PointerEventInit", %"class.blink::PointerEventInit"* %18, i64 0, i32 0, i32 10
  store i16 %64, i16* %65, align 2
  %66 = getelementptr inbounds %"class.blink::PointerEventInit", %"class.blink::PointerEventInit"* %18, i64 0, i32 0, i32 1
  store i8 1, i8* %66, align 4
  switch i32 %17, label %127 [
    i32 33, label %67
    i32 34, label %80
  ]

67:                                               ; preds = %55
  %68 = getelementptr inbounds %"class.blink::PointerEventInit", %"class.blink::PointerEventInit"* %18, i64 0, i32 0, i32 11
  %69 = load i16, i16* %68, align 8
  %70 = zext i16 %69 to i32
  %71 = icmp ult i32 %63, 6
  br i1 %71, label %72, label %76

72:                                               ; preds = %67
  %73 = sext i32 %63 to i64
  %74 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table._ZN5blink19PointerEventFactory6CreateERKNS_15WebPointerEventERKN3WTF6VectorIS1_Lj0ENS4_18PartitionAllocatorEEES9_PNS_14LocalDOMWindowE.17, i64 0, i64 %73
  %75 = load i32, i32* %74, align 4
  br label %76

76:                                               ; preds = %72, %67
  %77 = phi i32 [ -1, %67 ], [ %75, %72 ]
  %78 = and i32 %77, %70
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %127, label %84

80:                                               ; preds = %55
  %81 = getelementptr inbounds %"class.blink::PointerEventInit", %"class.blink::PointerEventInit"* %18, i64 0, i32 0, i32 11
  %82 = load i16, i16* %81, align 8
  %83 = icmp eq i16 %82, 0
  br i1 %83, label %127, label %84

84:                                               ; preds = %76, %80
  %85 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names12kPointermoveE, align 8
  %86 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %85, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %106, label %89

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %106

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  %97 = zext i32 %96 to i33
  %98 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %97, i33 1) #13
  %99 = extractvalue { i33, i1 } %98, 1
  %100 = extractvalue { i33, i1 } %98, 0
  %101 = icmp slt i33 %100, 0
  %102 = or i1 %99, %101
  br i1 %102, label %103, label %104, !prof !2

103:                                              ; preds = %94
  tail call void @llvm.trap() #13
  unreachable

104:                                              ; preds = %94
  %105 = trunc i33 %100 to i32
  store i32 %105, i32* %95, align 4
  br label %106

106:                                              ; preds = %104, %89, %84
  %107 = ptrtoint %"class.WTF::StringImpl"* %87 to i64
  %108 = bitcast %"class.WTF::AtomicString"* %7 to i64*
  %109 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  store i64 %107, i64* %108, align 8
  %110 = icmp eq %"class.WTF::StringImpl"* %109, null
  br i1 %110, label %127, label %111

111:                                              ; preds = %106
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  br i1 %115, label %118, label %120

118:                                              ; preds = %111
  %119 = add i32 %117, -1
  store i32 %119, i32* %116, align 4
  br label %120

120:                                              ; preds = %118, %111
  %121 = phi i32 [ %119, %118 ], [ %117, %111 ]
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %127

123:                                              ; preds = %120
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %109) #13
  br label %127

124:                                              ; preds = %52
  %125 = getelementptr inbounds %"class.blink::PointerEventInit", %"class.blink::PointerEventInit"* %18, i64 0, i32 0, i32 10
  store i16 -1, i16* %125, align 2
  %126 = getelementptr inbounds %"class.blink::PointerEventInit", %"class.blink::PointerEventInit"* %18, i64 0, i32 0, i32 1
  store i8 1, i8* %126, align 4
  br label %127

127:                                              ; preds = %123, %120, %106, %76, %80, %55, %124
  %128 = getelementptr inbounds %"class.blink::PointerEventInit", %"class.blink::PointerEventInit"* %18, i64 0, i32 0, i32 0, i32 0, i32 6
  %129 = ptrtoint %"class.blink::LocalDOMWindow"* %4 to i64
  %130 = bitcast %"class.blink::Member.10"* %128 to i64*
  store atomic i64 %129, i64* %130 monotonic, align 8
  %131 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %136, label %133

133:                                              ; preds = %127
  %134 = bitcast %"class.blink::LocalDOMWindow"* %4 to i8*
  %135 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %134) #13
  br label %136

136:                                              ; preds = %127, %133
  %137 = getelementptr inbounds %"class.blink::PointerEventInit", %"class.blink::PointerEventInit"* %18, i64 0, i32 0, i32 0, i32 0, i32 3
  store i8 1, i8* %137, align 8
  %138 = bitcast <2 x float>* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %138) #13
  %139 = getelementptr inbounds %"class.blink::PointerEventInit", %"class.blink::PointerEventInit"* %18, i64 0, i32 19
  %140 = load i32, i32* %139, align 4
  %141 = getelementptr inbounds %"class.blink::WebPointerEvent", %"class.blink::WebPointerEvent"* %1, i64 0, i32 1
  %142 = tail call <2 x float> @_ZNK5blink19PointerEventFactory22GetLastPointerPositionEiRKNS_20WebPointerPropertiesENS_5mojom9EventTypeE(%"class.blink::PointerEventFactory"* %0, i32 %140, %"class.blink::WebPointerProperties"* dereferenceable(60) %141, i32 %17)
  store <2 x float> %142, <2 x float>* %8, align 8
  call fastcc void @_ZN5blink12_GLOBAL__N_128UpdateCommonPointerEventInitERKNS_15WebPointerEventERKNS_10FloatPointEPNS_14LocalDOMWindowEPNS_16PointerEventInitE(%"class.blink::WebPointerEvent"* dereferenceable(128) %1, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %9, %"class.blink::LocalDOMWindow"* %4, %"class.blink::PointerEventInit"* nonnull %18)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %138) #13
  %143 = bitcast %"class.blink::PointerEventInit"* %18 to %"class.blink::EventModifierInit"*
  %144 = getelementptr inbounds %"class.blink::WebPointerEvent", %"class.blink::WebPointerEvent"* %1, i64 0, i32 0, i32 5
  %145 = load i32, i32* %144, align 4
  tail call void @_ZN5blink19UIEventWithKeyState29SetFromWebInputEventModifiersEPNS_17EventModifierInitENS_13WebInputEvent9ModifiersE(%"class.blink::EventModifierInit"* nonnull %143, i32 %145) #13
  %146 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names13kPointerenterE, align 8
  %147 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %148 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %146, i64 0, i32 0, i32 0, i32 0
  %149 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %148, align 8
  %150 = icmp eq %"class.WTF::StringImpl"* %147, %149
  br i1 %150, label %157, label %151

151:                                              ; preds = %136
  %152 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names13kPointerleaveE, align 8
  %153 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %152, i64 0, i32 0, i32 0, i32 0
  %154 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %153, align 8
  %155 = icmp ne %"class.WTF::StringImpl"* %147, %154
  %156 = zext i1 %155 to i8
  br label %157

157:                                              ; preds = %151, %136
  %158 = phi i8 [ 0, %136 ], [ %156, %151 ]
  %159 = getelementptr inbounds %"class.blink::PointerEventInit", %"class.blink::PointerEventInit"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  store i8 %158, i8* %159, align 1
  %160 = getelementptr inbounds %"class.blink::PointerEventInit", %"class.blink::PointerEventInit"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i8 1, i8* %160, align 8
  %161 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %148, align 8
  %162 = icmp eq %"class.WTF::StringImpl"* %147, %161
  br i1 %162, label %189, label %163

163:                                              ; preds = %157
  %164 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names13kPointerleaveE, align 8
  %165 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %164, i64 0, i32 0, i32 0, i32 0
  %166 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %165, align 8
  %167 = icmp eq %"class.WTF::StringImpl"* %147, %166
  br i1 %167, label %189, label %168

168:                                              ; preds = %163
  %169 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names14kPointercancelE, align 8
  %170 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %169, i64 0, i32 0, i32 0, i32 0
  %171 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %170, align 8
  %172 = icmp eq %"class.WTF::StringImpl"* %147, %171
  br i1 %172, label %189, label %173

173:                                              ; preds = %168
  %174 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names17kPointerrawupdateE, align 8
  %175 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %174, i64 0, i32 0, i32 0, i32 0
  %176 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %175, align 8
  %177 = icmp eq %"class.WTF::StringImpl"* %147, %176
  br i1 %177, label %189, label %178

178:                                              ; preds = %173
  %179 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names18kGotpointercaptureE, align 8
  %180 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %179, i64 0, i32 0, i32 0, i32 0
  %181 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %180, align 8
  %182 = icmp eq %"class.WTF::StringImpl"* %147, %181
  br i1 %182, label %189, label %183

183:                                              ; preds = %178
  %184 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names19kLostpointercaptureE, align 8
  %185 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %184, i64 0, i32 0, i32 0, i32 0
  %186 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %185, align 8
  %187 = icmp ne %"class.WTF::StringImpl"* %147, %186
  %188 = zext i1 %187 to i8
  br label %189

189:                                              ; preds = %157, %163, %168, %173, %178, %183
  %190 = phi i8 [ 0, %178 ], [ 0, %173 ], [ 0, %168 ], [ 0, %163 ], [ 0, %157 ], [ %188, %183 ]
  %191 = getelementptr inbounds %"class.blink::PointerEventInit", %"class.blink::PointerEventInit"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5
  store i8 %190, i8* %191, align 4
  %192 = getelementptr inbounds %"class.blink::PointerEventInit", %"class.blink::PointerEventInit"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i8 1, i8* %192, align 1
  %193 = getelementptr inbounds %"class.blink::PointerEventInit", %"class.blink::PointerEventInit"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6
  store i8 1, i8* %193, align 1
  %194 = getelementptr inbounds %"class.blink::PointerEventInit", %"class.blink::PointerEventInit"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3
  store i8 1, i8* %194, align 2
  %195 = getelementptr inbounds %"class.blink::PointerEventInit", %"class.blink::PointerEventInit"* %18, i64 0, i32 0, i32 0, i32 0, i32 4
  store i32 0, i32* %195, align 4
  %196 = getelementptr inbounds %"class.blink::PointerEventInit", %"class.blink::PointerEventInit"* %18, i64 0, i32 0, i32 0, i32 0, i32 1
  store i8 1, i8* %196, align 2
  %197 = bitcast %"class.blink::HeapVector.221"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %197) #13
  %198 = getelementptr inbounds %"class.blink::HeapVector.221", %"class.blink::HeapVector.221"* %10, i64 0, i32 0, i32 0, i32 0, i32 1
  %199 = getelementptr inbounds %"class.blink::HeapVector.221", %"class.blink::HeapVector.221"* %10, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %197, i8 0, i64 16, i1 false) #13
  %200 = bitcast %"class.blink::HeapVector.221"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %200) #13
  %201 = getelementptr inbounds %"class.blink::HeapVector.221", %"class.blink::HeapVector.221"* %11, i64 0, i32 0, i32 0, i32 0, i32 1
  %202 = getelementptr inbounds %"class.blink::HeapVector.221", %"class.blink::HeapVector.221"* %11, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %200, i8 0, i64 16, i1 false) #13
  %203 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names12kPointermoveE, align 8
  %204 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %203, i64 0, i32 0, i32 0, i32 0
  %205 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %204, align 8
  %206 = icmp eq %"class.WTF::StringImpl"* %147, %205
  br i1 %206, label %212, label %207

207:                                              ; preds = %189
  %208 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names17kPointerrawupdateE, align 8
  %209 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %208, i64 0, i32 0, i32 0, i32 0
  %210 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %209, align 8
  %211 = icmp eq %"class.WTF::StringImpl"* %147, %210
  br i1 %211, label %212, label %239

212:                                              ; preds = %207, %189
  %213 = bitcast %"class.blink::HeapVector.221"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %213) #13
  call void @_ZN5blink19PointerEventFactory19CreateEventSequenceERKNS_15WebPointerEventEPKNS_16PointerEventInitERKN3WTF6VectorIS1_Lj0ENS7_18PartitionAllocatorEEEPNS_14LocalDOMWindowE(%"class.blink::HeapVector.221"* nonnull sret %12, %"class.blink::PointerEventFactory"* %0, %"class.blink::WebPointerEvent"* dereferenceable(128) %1, %"class.blink::PointerEventInit"* nonnull %18, %"class.WTF::Vector.1693"* dereferenceable(16) %2, %"class.blink::LocalDOMWindow"* %4)
  %214 = bitcast %"class.blink::HeapVector.221"* %12 to i64*
  %215 = load i64, i64* %214, align 8
  %216 = bitcast %"class.blink::HeapVector.221"* %10 to i64*
  %217 = load i64, i64* %216, align 8
  store atomic i64 %217, i64* %214 monotonic, align 8
  store atomic i64 %215, i64* %216 monotonic, align 8
  %218 = getelementptr inbounds %"class.blink::HeapVector.221", %"class.blink::HeapVector.221"* %12, i64 0, i32 0, i32 0, i32 0, i32 1
  %219 = load i32, i32* %198, align 8
  %220 = load i32, i32* %218, align 8
  store i32 %220, i32* %198, align 8
  store i32 %219, i32* %218, align 8
  %221 = getelementptr inbounds %"class.blink::HeapVector.221", %"class.blink::HeapVector.221"* %12, i64 0, i32 0, i32 0, i32 0, i32 2
  %222 = load i32, i32* %199, align 4
  %223 = load i32, i32* %221, align 4
  store i32 %223, i32* %199, align 4
  store i32 %222, i32* %221, align 4
  %224 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %229, label %226

226:                                              ; preds = %212
  %227 = inttoptr i64 %215 to i8*
  %228 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %227) #13
  br label %229

229:                                              ; preds = %226, %212
  %230 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %236, label %232

232:                                              ; preds = %229
  %233 = bitcast %"class.blink::HeapVector.221"* %12 to i8**
  %234 = load i8*, i8** %233, align 8
  %235 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %234) #13
  br label %236

236:                                              ; preds = %229, %232
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %213) #13
  %237 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %238 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %204, align 8
  br label %239

239:                                              ; preds = %236, %207
  %240 = phi %"class.WTF::StringImpl"* [ %238, %236 ], [ %205, %207 ]
  %241 = phi %"class.WTF::StringImpl"* [ %237, %236 ], [ %147, %207 ]
  %242 = icmp eq %"class.WTF::StringImpl"* %241, %240
  br i1 %242, label %243, label %268

243:                                              ; preds = %239
  %244 = bitcast %"class.blink::HeapVector.221"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %244) #13
  call void @_ZN5blink19PointerEventFactory19CreateEventSequenceERKNS_15WebPointerEventEPKNS_16PointerEventInitERKN3WTF6VectorIS1_Lj0ENS7_18PartitionAllocatorEEEPNS_14LocalDOMWindowE(%"class.blink::HeapVector.221"* nonnull sret %13, %"class.blink::PointerEventFactory"* %0, %"class.blink::WebPointerEvent"* dereferenceable(128) %1, %"class.blink::PointerEventInit"* nonnull %18, %"class.WTF::Vector.1693"* dereferenceable(16) %3, %"class.blink::LocalDOMWindow"* %4)
  %245 = bitcast %"class.blink::HeapVector.221"* %13 to i64*
  %246 = load i64, i64* %245, align 8
  %247 = bitcast %"class.blink::HeapVector.221"* %11 to i64*
  %248 = load i64, i64* %247, align 8
  store atomic i64 %248, i64* %245 monotonic, align 8
  store atomic i64 %246, i64* %247 monotonic, align 8
  %249 = getelementptr inbounds %"class.blink::HeapVector.221", %"class.blink::HeapVector.221"* %13, i64 0, i32 0, i32 0, i32 0, i32 1
  %250 = load i32, i32* %201, align 8
  %251 = load i32, i32* %249, align 8
  store i32 %251, i32* %201, align 8
  store i32 %250, i32* %249, align 8
  %252 = getelementptr inbounds %"class.blink::HeapVector.221", %"class.blink::HeapVector.221"* %13, i64 0, i32 0, i32 0, i32 0, i32 2
  %253 = load i32, i32* %202, align 4
  %254 = load i32, i32* %252, align 4
  store i32 %254, i32* %202, align 4
  store i32 %253, i32* %252, align 4
  %255 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %260, label %257

257:                                              ; preds = %243
  %258 = inttoptr i64 %246 to i8*
  %259 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %258) #13
  br label %260

260:                                              ; preds = %257, %243
  %261 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %267, label %263

263:                                              ; preds = %260
  %264 = bitcast %"class.blink::HeapVector.221"* %13 to i8**
  %265 = load i8*, i8** %264, align 8
  %266 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %265) #13
  br label %267

267:                                              ; preds = %260, %263
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %244) #13
  br label %268

268:                                              ; preds = %267, %239
  call void @_ZN5blink16PointerEventInit18setCoalescedEventsERKNS_10HeapVectorINS_6MemberINS_12PointerEventEEELj0EEE(%"class.blink::PointerEventInit"* nonnull %18, %"class.blink::HeapVector.221"* nonnull dereferenceable(16) %10) #13
  call void @_ZN5blink16PointerEventInit18setPredictedEventsERKNS_10HeapVectorINS_6MemberINS_12PointerEventEEELj0EEE(%"class.blink::PointerEventInit"* nonnull %18, %"class.blink::HeapVector.221"* nonnull dereferenceable(16) %11) #13
  %269 = load i32, i32* %139, align 4
  %270 = bitcast i64* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %270) #13
  %271 = getelementptr inbounds %"class.blink::WebPointerEvent", %"class.blink::WebPointerEvent"* %1, i64 0, i32 1, i32 12
  %272 = bitcast %"class.gfx::PointF"* %271 to i32*
  %273 = load i32, i32* %272, align 4
  %274 = bitcast i64* %14 to i32*
  store i32 %273, i32* %274, align 8
  %275 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %15, i64 0, i32 1
  %276 = getelementptr inbounds %"class.blink::WebPointerEvent", %"class.blink::WebPointerEvent"* %1, i64 0, i32 1, i32 12, i32 1
  %277 = bitcast float* %276 to i32*
  %278 = load i32, i32* %277, align 4
  %279 = bitcast float* %275 to i32*
  store i32 %278, i32* %279, align 4
  %280 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %280)
  store i32 %269, i32* %6, align 4
  %281 = icmp eq i32 %17, 36
  br i1 %281, label %282, label %293

282:                                              ; preds = %268
  %283 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %0, i64 0, i32 7, i32 0
  %284 = call { %"struct.WTF::KeyValuePair.9"*, i8 } @_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink10FloatPointEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIS3_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISD_S7_SE_EERiRKS3_EENS_18HashTableAddResultISF_S4_EEOT0_OT1_(%"class.WTF::HashTable.6"* %283, i32* nonnull dereferenceable(4) %6, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %15) #13
  %285 = extractvalue { %"struct.WTF::KeyValuePair.9"*, i8 } %284, 1
  %286 = and i8 %285, 1
  %287 = icmp eq i8 %286, 0
  br i1 %287, label %288, label %304

288:                                              ; preds = %282
  %289 = extractvalue { %"struct.WTF::KeyValuePair.9"*, i8 } %284, 0
  %290 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %289, i64 0, i32 1
  %291 = bitcast %"class.blink::FloatPoint"* %290 to i64*
  %292 = load i64, i64* %14, align 8
  store i64 %292, i64* %291, align 4
  br label %304

293:                                              ; preds = %268
  %294 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %0, i64 0, i32 6, i32 0
  %295 = call { %"struct.WTF::KeyValuePair.9"*, i8 } @_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink10FloatPointEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIS3_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISD_S7_SE_EERiRKS3_EENS_18HashTableAddResultISF_S4_EEOT0_OT1_(%"class.WTF::HashTable.6"* %294, i32* nonnull dereferenceable(4) %6, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %15) #13
  %296 = extractvalue { %"struct.WTF::KeyValuePair.9"*, i8 } %295, 1
  %297 = and i8 %296, 1
  %298 = icmp eq i8 %297, 0
  br i1 %298, label %299, label %304

299:                                              ; preds = %293
  %300 = extractvalue { %"struct.WTF::KeyValuePair.9"*, i8 } %295, 0
  %301 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %300, i64 0, i32 1
  %302 = bitcast %"class.blink::FloatPoint"* %301 to i64*
  %303 = load i64, i64* %14, align 8
  store i64 %303, i64* %302, align 4
  br label %304

304:                                              ; preds = %282, %288, %293, %299
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %280)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %270) #13
  %305 = getelementptr inbounds %"class.blink::WebPointerEvent", %"class.blink::WebPointerEvent"* %1, i64 0, i32 0, i32 3, i32 0, i32 0
  %306 = load i64, i64* %305, align 8
  %307 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 400) #13
  %308 = bitcast i8* %307 to %"class.blink::PointerEvent"*
  call void @_ZN5blink12PointerEventC1ERKN3WTF12AtomicStringEPKNS_16PointerEventInitEN4base9TimeTicksENS_10MouseEvent18SyntheticEventTypeENS_17WebMenuSourceTypeE(%"class.blink::PointerEvent"* %308, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %7, %"class.blink::PointerEventInit"* nonnull %18, i64 %306, i32 0, i32 0) #13
  %309 = getelementptr inbounds i8, i8* %307, i64 -4
  %310 = bitcast i8* %309 to i16*
  %311 = load atomic i16, i16* %310 monotonic, align 2
  %312 = or i16 %311, 1
  store atomic i16 %312, i16* %310 release, align 2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %200) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %197) #13
  %313 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %314 = icmp eq %"class.WTF::StringImpl"* %313, null
  br i1 %314, label %328, label %315

315:                                              ; preds = %304
  %316 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %313, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %317 = load atomic i32, i32* %316 monotonic, align 4
  %318 = and i32 %317, 2
  %319 = icmp eq i32 %318, 0
  %320 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %313, i64 0, i32 0
  %321 = load i32, i32* %320, align 4
  br i1 %319, label %322, label %324

322:                                              ; preds = %315
  %323 = add i32 %321, -1
  store i32 %323, i32* %320, align 4
  br label %324

324:                                              ; preds = %322, %315
  %325 = phi i32 [ %323, %322 ], [ %321, %315 ]
  %326 = icmp eq i32 %325, 0
  br i1 %326, label %327, label %328

327:                                              ; preds = %324
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %313) #13
  br label %328

328:                                              ; preds = %304, %324, %327
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #13
  br label %329

329:                                              ; preds = %5, %328
  %330 = phi %"class.blink::PointerEvent"* [ %308, %328 ], [ null, %5 ]
  ret %"class.blink::PointerEvent"* %330
}

declare void @_ZN5blink16PointerEventInit18setCoalescedEventsERKNS_10HeapVectorINS_6MemberINS_12PointerEventEEELj0EEE(%"class.blink::PointerEventInit"*, %"class.blink::HeapVector.221"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN5blink16PointerEventInit18setPredictedEventsERKNS_10HeapVectorINS_6MemberINS_12PointerEventEEELj0EEE(%"class.blink::PointerEventInit"*, %"class.blink::HeapVector.221"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19PointerEventFactory15SetLastPositionEiRKNS_10FloatPointENS_5mojom9EventTypeE(%"class.blink::PointerEventFactory"*, i32, %"class.blink::FloatPoint"* dereferenceable(8), i32) local_unnamed_addr #3 align 2 {
  %5 = alloca i32, align 4
  store i32 %1, i32* %5, align 4
  %6 = icmp eq i32 %3, 36
  br i1 %6, label %7, label %19

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %0, i64 0, i32 7, i32 0
  %9 = call { %"struct.WTF::KeyValuePair.9"*, i8 } @_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink10FloatPointEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIS3_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISD_S7_SE_EERiRKS3_EENS_18HashTableAddResultISF_S4_EEOT0_OT1_(%"class.WTF::HashTable.6"* %8, i32* nonnull dereferenceable(4) %5, %"class.blink::FloatPoint"* dereferenceable(8) %2) #13
  %10 = extractvalue { %"struct.WTF::KeyValuePair.9"*, i8 } %9, 1
  %11 = and i8 %10, 1
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %31

13:                                               ; preds = %7
  %14 = extractvalue { %"struct.WTF::KeyValuePair.9"*, i8 } %9, 0
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %14, i64 0, i32 1
  %16 = bitcast %"class.blink::FloatPoint"* %2 to i64*
  %17 = bitcast %"class.blink::FloatPoint"* %15 to i64*
  %18 = load i64, i64* %16, align 4
  store i64 %18, i64* %17, align 4
  br label %31

19:                                               ; preds = %4
  %20 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %0, i64 0, i32 6, i32 0
  %21 = call { %"struct.WTF::KeyValuePair.9"*, i8 } @_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink10FloatPointEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIS3_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISD_S7_SE_EERiRKS3_EENS_18HashTableAddResultISF_S4_EEOT0_OT1_(%"class.WTF::HashTable.6"* %20, i32* nonnull dereferenceable(4) %5, %"class.blink::FloatPoint"* dereferenceable(8) %2) #13
  %22 = extractvalue { %"struct.WTF::KeyValuePair.9"*, i8 } %21, 1
  %23 = and i8 %22, 1
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %31

25:                                               ; preds = %19
  %26 = extractvalue { %"struct.WTF::KeyValuePair.9"*, i8 } %21, 0
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %26, i64 0, i32 1
  %28 = bitcast %"class.blink::FloatPoint"* %2 to i64*
  %29 = bitcast %"class.blink::FloatPoint"* %27 to i64*
  %30 = load i64, i64* %28, align 4
  store i64 %30, i64* %29, align 4
  br label %31

31:                                               ; preds = %25, %19, %13, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19PointerEventFactory18RemoveLastPositionEi(%"class.blink::PointerEventFactory"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %0, i64 0, i32 6
  %6 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = sext i32 %1 to i64
  store i64 %7, i64* %3, align 8
  %8 = getelementptr inbounds %"class.WTF::HashMap.5", %"class.WTF::HashMap.5"* %5, i64 0, i32 0
  %9 = call { %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"* } @_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink10FloatPointEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIS3_EEEESA_NS_18PartitionAllocatorEE4findERKl(%"class.WTF::HashTable.6"* %8, i64* nonnull dereferenceable(8) %3) #13
  %10 = extractvalue { %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"* } %9, 0
  %11 = getelementptr inbounds %"class.WTF::HashMap.5", %"class.WTF::HashMap.5"* %5, i64 0, i32 0, i32 0
  %12 = load %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %0, i64 0, i32 6, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %12, i64 %15
  %17 = icmp eq %"struct.WTF::KeyValuePair.9"* %16, %10
  br i1 %17, label %82, label %18

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %10, i64 0, i32 0
  store i64 9223372036854775806, i64* %19, align 8
  %20 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %0, i64 0, i32 6, i32 0, i32 3
  %21 = load i32, i32* %20, align 8
  %22 = add i32 %21, 1
  %23 = and i32 %22, 2147483647
  %24 = and i32 %21, -2147483648
  %25 = or i32 %23, %24
  store i32 %25, i32* %20, align 8
  %26 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %0, i64 0, i32 6, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = add i32 %27, -1
  store i32 %28, i32* %26, align 4
  %29 = mul i32 %28, 6
  %30 = load i32, i32* %13, align 8
  %31 = icmp ult i32 %29, %30
  %32 = icmp ugt i32 %30, 8
  %33 = and i1 %31, %32
  br i1 %33, label %34, label %82

34:                                               ; preds = %18
  %35 = lshr i32 %30, 1
  %36 = zext i32 %35 to i64
  %37 = shl nuw nsw i64 %36, 4
  %38 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %37, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIlN5blink10FloatPointEEEEEPKcv, i64 0, i64 0)) #13
  %39 = bitcast i8* %38 to %"struct.WTF::KeyValuePair.9"*
  %40 = icmp eq i32 %35, 0
  br i1 %40, label %80, label %41

41:                                               ; preds = %34
  %42 = add nsw i64 %36, -1
  %43 = and i64 %36, 3
  %44 = icmp ult i64 %42, 3
  br i1 %44, label %68, label %45

45:                                               ; preds = %41
  %46 = sub nsw i64 %36, %43
  br label %47

47:                                               ; preds = %47, %45
  %48 = phi i64 [ 0, %45 ], [ %65, %47 ]
  %49 = phi i64 [ %46, %45 ], [ %66, %47 ]
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %39, i64 %48, i32 0
  store i64 9223372036854775807, i64* %50, align 8
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %39, i64 %48, i32 1
  %52 = bitcast %"class.blink::FloatPoint"* %51 to <2 x float>*
  store <2 x float> <float 0x7FF0000000000000, float 0x7FF0000000000000>, <2 x float>* %52, align 8
  %53 = or i64 %48, 1
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %39, i64 %53, i32 0
  store i64 9223372036854775807, i64* %54, align 8
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %39, i64 %53, i32 1
  %56 = bitcast %"class.blink::FloatPoint"* %55 to <2 x float>*
  store <2 x float> <float 0x7FF0000000000000, float 0x7FF0000000000000>, <2 x float>* %56, align 8
  %57 = or i64 %48, 2
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %39, i64 %57, i32 0
  store i64 9223372036854775807, i64* %58, align 8
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %39, i64 %57, i32 1
  %60 = bitcast %"class.blink::FloatPoint"* %59 to <2 x float>*
  store <2 x float> <float 0x7FF0000000000000, float 0x7FF0000000000000>, <2 x float>* %60, align 8
  %61 = or i64 %48, 3
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %39, i64 %61, i32 0
  store i64 9223372036854775807, i64* %62, align 8
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %39, i64 %61, i32 1
  %64 = bitcast %"class.blink::FloatPoint"* %63 to <2 x float>*
  store <2 x float> <float 0x7FF0000000000000, float 0x7FF0000000000000>, <2 x float>* %64, align 8
  %65 = add nuw nsw i64 %48, 4
  %66 = add i64 %49, -4
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %68, label %47

68:                                               ; preds = %47, %41
  %69 = phi i64 [ 0, %41 ], [ %65, %47 ]
  %70 = icmp eq i64 %43, 0
  br i1 %70, label %80, label %71

71:                                               ; preds = %68, %71
  %72 = phi i64 [ %77, %71 ], [ %69, %68 ]
  %73 = phi i64 [ %78, %71 ], [ %43, %68 ]
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %39, i64 %72, i32 0
  store i64 9223372036854775807, i64* %74, align 8
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %39, i64 %72, i32 1
  %76 = bitcast %"class.blink::FloatPoint"* %75 to <2 x float>*
  store <2 x float> <float 0x7FF0000000000000, float 0x7FF0000000000000>, <2 x float>* %76, align 8
  %77 = add nuw nsw i64 %72, 1
  %78 = add i64 %73, -1
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %80, label %71, !llvm.loop !4

80:                                               ; preds = %68, %71, %34
  %81 = call %"struct.WTF::KeyValuePair.9"* @_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink10FloatPointEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIS3_EEEESA_NS_18PartitionAllocatorEE8RehashToEPS4_jSG_(%"class.WTF::HashTable.6"* %8, %"struct.WTF::KeyValuePair.9"* %39, i32 %35, %"struct.WTF::KeyValuePair.9"* null) #13
  br label %82

82:                                               ; preds = %2, %18, %80
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %83 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %0, i64 0, i32 7
  %84 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #13
  store i64 %7, i64* %4, align 8
  %85 = getelementptr inbounds %"class.WTF::HashMap.5", %"class.WTF::HashMap.5"* %83, i64 0, i32 0
  %86 = call { %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"* } @_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink10FloatPointEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIS3_EEEESA_NS_18PartitionAllocatorEE4findERKl(%"class.WTF::HashTable.6"* %85, i64* nonnull dereferenceable(8) %4) #13
  %87 = extractvalue { %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"* } %86, 0
  %88 = getelementptr inbounds %"class.WTF::HashMap.5", %"class.WTF::HashMap.5"* %83, i64 0, i32 0, i32 0
  %89 = load %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"** %88, align 8
  %90 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %0, i64 0, i32 7, i32 0, i32 1
  %91 = load i32, i32* %90, align 8
  %92 = zext i32 %91 to i64
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %89, i64 %92
  %94 = icmp eq %"struct.WTF::KeyValuePair.9"* %93, %87
  br i1 %94, label %159, label %95

95:                                               ; preds = %82
  %96 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %87, i64 0, i32 0
  store i64 9223372036854775806, i64* %96, align 8
  %97 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %0, i64 0, i32 7, i32 0, i32 3
  %98 = load i32, i32* %97, align 8
  %99 = add i32 %98, 1
  %100 = and i32 %99, 2147483647
  %101 = and i32 %98, -2147483648
  %102 = or i32 %100, %101
  store i32 %102, i32* %97, align 8
  %103 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %0, i64 0, i32 7, i32 0, i32 2
  %104 = load i32, i32* %103, align 4
  %105 = add i32 %104, -1
  store i32 %105, i32* %103, align 4
  %106 = mul i32 %105, 6
  %107 = load i32, i32* %90, align 8
  %108 = icmp ult i32 %106, %107
  %109 = icmp ugt i32 %107, 8
  %110 = and i1 %108, %109
  br i1 %110, label %111, label %159

111:                                              ; preds = %95
  %112 = lshr i32 %107, 1
  %113 = zext i32 %112 to i64
  %114 = shl nuw nsw i64 %113, 4
  %115 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %114, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIlN5blink10FloatPointEEEEEPKcv, i64 0, i64 0)) #13
  %116 = bitcast i8* %115 to %"struct.WTF::KeyValuePair.9"*
  %117 = icmp eq i32 %112, 0
  br i1 %117, label %157, label %118

118:                                              ; preds = %111
  %119 = add nsw i64 %113, -1
  %120 = and i64 %113, 3
  %121 = icmp ult i64 %119, 3
  br i1 %121, label %145, label %122

122:                                              ; preds = %118
  %123 = sub nsw i64 %113, %120
  br label %124

124:                                              ; preds = %124, %122
  %125 = phi i64 [ 0, %122 ], [ %142, %124 ]
  %126 = phi i64 [ %123, %122 ], [ %143, %124 ]
  %127 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %116, i64 %125, i32 0
  store i64 9223372036854775807, i64* %127, align 8
  %128 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %116, i64 %125, i32 1
  %129 = bitcast %"class.blink::FloatPoint"* %128 to <2 x float>*
  store <2 x float> <float 0x7FF0000000000000, float 0x7FF0000000000000>, <2 x float>* %129, align 8
  %130 = or i64 %125, 1
  %131 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %116, i64 %130, i32 0
  store i64 9223372036854775807, i64* %131, align 8
  %132 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %116, i64 %130, i32 1
  %133 = bitcast %"class.blink::FloatPoint"* %132 to <2 x float>*
  store <2 x float> <float 0x7FF0000000000000, float 0x7FF0000000000000>, <2 x float>* %133, align 8
  %134 = or i64 %125, 2
  %135 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %116, i64 %134, i32 0
  store i64 9223372036854775807, i64* %135, align 8
  %136 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %116, i64 %134, i32 1
  %137 = bitcast %"class.blink::FloatPoint"* %136 to <2 x float>*
  store <2 x float> <float 0x7FF0000000000000, float 0x7FF0000000000000>, <2 x float>* %137, align 8
  %138 = or i64 %125, 3
  %139 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %116, i64 %138, i32 0
  store i64 9223372036854775807, i64* %139, align 8
  %140 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %116, i64 %138, i32 1
  %141 = bitcast %"class.blink::FloatPoint"* %140 to <2 x float>*
  store <2 x float> <float 0x7FF0000000000000, float 0x7FF0000000000000>, <2 x float>* %141, align 8
  %142 = add nuw nsw i64 %125, 4
  %143 = add i64 %126, -4
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %145, label %124

145:                                              ; preds = %124, %118
  %146 = phi i64 [ 0, %118 ], [ %142, %124 ]
  %147 = icmp eq i64 %120, 0
  br i1 %147, label %157, label %148

148:                                              ; preds = %145, %148
  %149 = phi i64 [ %154, %148 ], [ %146, %145 ]
  %150 = phi i64 [ %155, %148 ], [ %120, %145 ]
  %151 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %116, i64 %149, i32 0
  store i64 9223372036854775807, i64* %151, align 8
  %152 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %116, i64 %149, i32 1
  %153 = bitcast %"class.blink::FloatPoint"* %152 to <2 x float>*
  store <2 x float> <float 0x7FF0000000000000, float 0x7FF0000000000000>, <2 x float>* %153, align 8
  %154 = add nuw nsw i64 %149, 1
  %155 = add i64 %150, -1
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %157, label %148, !llvm.loop !6

157:                                              ; preds = %145, %148, %111
  %158 = call %"struct.WTF::KeyValuePair.9"* @_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink10FloatPointEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIS3_EEEESA_NS_18PartitionAllocatorEE8RehashToEPS4_jSG_(%"class.WTF::HashTable.6"* %85, %"struct.WTF::KeyValuePair.9"* %116, i32 %112, %"struct.WTF::KeyValuePair.9"* null) #13
  br label %159

159:                                              ; preds = %82, %95, %157
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden <2 x float> @_ZNK3WTF7HashMapIlN5blink10FloatPointENS_7IntHashIlEENS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIS2_EENS_18PartitionAllocatorEE2atERKl(%"class.WTF::HashMap.5"*, i64* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashMap.5", %"class.WTF::HashMap.5"* %0, i64 0, i32 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.9"* %4, null
  br i1 %5, label %72, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashMap.5", %"class.WTF::HashMap.5"* %0, i64 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %1, align 8
  %12 = shl i64 %11, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %11, %13
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %9, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %4, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %33, i64 0, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = icmp eq i64 %35, %11
  br i1 %36, label %65, label %37

37:                                               ; preds = %6
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %56, %37
  %52 = phi i64 [ %35, %37 ], [ %63, %56 ]
  %53 = phi i64 [ %32, %37 ], [ %60, %56 ]
  %54 = phi i64 [ 0, %37 ], [ %58, %56 ]
  %55 = icmp eq i64 %52, 9223372036854775807
  br i1 %55, label %72, label %56

56:                                               ; preds = %51
  %57 = icmp eq i64 %54, 0
  %58 = select i1 %57, i64 %50, i64 %54
  %59 = add i64 %58, %53
  %60 = and i64 %59, %10
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %4, i64 %60
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %61, i64 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = icmp eq i64 %63, %11
  br i1 %64, label %65, label %51

65:                                               ; preds = %56, %6
  %66 = phi %"struct.WTF::KeyValuePair.9"* [ %33, %6 ], [ %61, %56 ]
  %67 = icmp eq %"struct.WTF::KeyValuePair.9"* %66, null
  br i1 %67, label %72, label %68

68:                                               ; preds = %65
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %66, i64 0, i32 1
  %70 = bitcast %"class.blink::FloatPoint"* %69 to <2 x float>*
  %71 = load <2 x float>, <2 x float>* %70, align 4
  br label %72

72:                                               ; preds = %51, %2, %65, %68
  %73 = phi <2 x float> [ %71, %68 ], [ <float 0x7FF0000000000000, float 0x7FF0000000000000>, %65 ], [ <float 0x7FF0000000000000, float 0x7FF0000000000000>, %2 ], [ <float 0x7FF0000000000000, float 0x7FF0000000000000>, %51 ]
  ret <2 x float> %73
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::PointerEvent"* @_ZN5blink19PointerEventFactory24CreatePointerCancelEventEiN4base9TimeTicksE(%"class.blink::PointerEventFactory"*, i32, i64) local_unnamed_addr #3 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca %"struct.blink::PointerEventFactory::PointerAttributes", align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca i64, align 8
  store i32 %1, i32* %4, align 4
  %9 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %0, i64 0, i32 3
  %10 = bitcast %"struct.blink::PointerEventFactory::PointerAttributes"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %10) #13
  %11 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #13
  %12 = sext i32 %1 to i64
  store i64 %12, i64* %6, align 8
  %13 = call { i64, i32 } @_ZNK3WTF7HashMapIlN5blink19PointerEventFactory17PointerAttributesENS_7IntHashIlEENS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIS3_EENS_18PartitionAllocatorEE2atERKl(%"class.WTF::HashMap.0"* %9, i64* nonnull dereferenceable(8) %6)
  %14 = extractvalue { i64, i32 } %13, 0
  %15 = bitcast %"struct.blink::PointerEventFactory::PointerAttributes"* %5 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"struct.blink::PointerEventFactory::PointerAttributes", %"struct.blink::PointerEventFactory::PointerAttributes"* %5, i64 0, i32 1
  store i8 0, i8* %16, align 8
  %17 = getelementptr inbounds %"struct.blink::PointerEventFactory::PointerAttributes", %"struct.blink::PointerEventFactory::PointerAttributes"* %5, i64 0, i32 2
  store i8 1, i8* %17, align 1
  %18 = getelementptr inbounds %"class.WTF::HashMap.0", %"class.WTF::HashMap.0"* %9, i64 0, i32 0
  %19 = call { %"struct.WTF::KeyValuePair.4"*, i8 } @_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink19PointerEventFactory17PointerAttributesEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIS4_EEEESB_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S8_SF_EERKiS4_EENS_18HashTableAddResultISG_S5_EEOT0_OT1_(%"class.WTF::HashTable.1"* %18, i32* nonnull dereferenceable(4) %4, %"struct.blink::PointerEventFactory::PointerAttributes"* nonnull dereferenceable(12) %5) #13
  %20 = extractvalue { %"struct.WTF::KeyValuePair.4"*, i8 } %19, 1
  %21 = and i8 %20, 1
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %35

23:                                               ; preds = %3
  %24 = extractvalue { %"struct.WTF::KeyValuePair.4"*, i8 } %19, 0
  %25 = getelementptr inbounds %"struct.blink::PointerEventFactory::PointerAttributes", %"struct.blink::PointerEventFactory::PointerAttributes"* %5, i64 0, i32 0, i32 0, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %24, i64 0, i32 1, i32 0, i32 0, i32 0
  store i32 %26, i32* %27, align 4
  %28 = getelementptr inbounds %"struct.blink::PointerEventFactory::PointerAttributes", %"struct.blink::PointerEventFactory::PointerAttributes"* %5, i64 0, i32 0, i32 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %24, i64 0, i32 1, i32 0, i32 0, i32 1
  store i32 %29, i32* %30, align 4
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %24, i64 0, i32 1, i32 1
  %32 = bitcast i8* %16 to i16*
  %33 = bitcast i8* %31 to i16*
  %34 = load i16, i16* %32, align 8
  store i16 %34, i16* %33, align 4
  br label %35

35:                                               ; preds = %3, %23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %10) #13
  %36 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 256) #13
  %37 = bitcast i8* %36 to %"class.blink::PointerEventInit"*
  call void @_ZN5blink16PointerEventInitC1Ev(%"class.blink::PointerEventInit"* %37) #13
  %38 = getelementptr inbounds i8, i8* %36, i64 -4
  %39 = bitcast i8* %38 to i16*
  %40 = load atomic i16, i16* %39 monotonic, align 2
  %41 = or i16 %40, 1
  store atomic i16 %41, i16* %39 release, align 2
  %42 = load i32, i32* %4, align 4
  %43 = getelementptr inbounds i8, i8* %36, i64 196
  %44 = bitcast i8* %43 to i32*
  store i32 %42, i32* %44, align 4
  %45 = getelementptr inbounds i8, i8* %36, i64 141
  store i8 1, i8* %45, align 1
  %46 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #13
  %47 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #13
  %48 = sext i32 %42 to i64
  store i64 %48, i64* %8, align 8
  %49 = call { i64, i32 } @_ZNK3WTF7HashMapIlN5blink19PointerEventFactory17PointerAttributesENS_7IntHashIlEENS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIS3_EENS_18PartitionAllocatorEE2atERKl(%"class.WTF::HashMap.0"* %9, i64* nonnull dereferenceable(8) %8)
  %50 = extractvalue { i64, i32 } %49, 0
  %51 = trunc i64 %50 to i32
  %52 = add i32 %51, -1
  %53 = icmp ult i32 %52, 3
  br i1 %53, label %54, label %58

54:                                               ; preds = %35
  %55 = sext i32 %52 to i64
  %56 = getelementptr inbounds [3 x i8*], [3 x i8*]* @switch.table._ZN5blink19PointerEventFactory24CreatePointerCancelEventEiN4base9TimeTicksE, i64 0, i64 %55
  %57 = load i8*, i8** %56, align 8
  br label %58

58:                                               ; preds = %54, %35
  %59 = phi i8* [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), %35 ], [ %57, %54 ]
  %60 = call i64 @strlen(i8* nonnull %59) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* nonnull %59, i64 %60) #13
  %61 = getelementptr inbounds i8, i8* %36, i64 200
  %62 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %64, label %82, label %65

65:                                               ; preds = %58
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %82

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = zext i32 %72 to i33
  %74 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %73, i33 1) #13
  %75 = extractvalue { i33, i1 } %74, 1
  %76 = extractvalue { i33, i1 } %74, 0
  %77 = icmp slt i33 %76, 0
  %78 = or i1 %75, %77
  br i1 %78, label %79, label %80, !prof !2

79:                                               ; preds = %70
  call void @llvm.trap() #13
  unreachable

80:                                               ; preds = %70
  %81 = trunc i33 %76 to i32
  store i32 %81, i32* %71, align 4
  br label %82

82:                                               ; preds = %80, %65, %58
  %83 = ptrtoint %"class.WTF::StringImpl"* %63 to i64
  %84 = bitcast i8* %61 to i64*
  %85 = bitcast i8* %61 to %"class.WTF::StringImpl"**
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  store i64 %83, i64* %84, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %86, null
  br i1 %87, label %101, label %88

88:                                               ; preds = %82
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = and i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 0
  %94 = load i32, i32* %93, align 4
  br i1 %92, label %95, label %97

95:                                               ; preds = %88
  %96 = add i32 %94, -1
  store i32 %96, i32* %93, align 4
  br label %97

97:                                               ; preds = %95, %88
  %98 = phi i32 [ %96, %95 ], [ %94, %88 ]
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %101

100:                                              ; preds = %97
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %86) #13
  br label %101

101:                                              ; preds = %82, %97, %100
  %102 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %103 = icmp eq %"class.WTF::StringImpl"* %102, null
  br i1 %103, label %117, label %104

104:                                              ; preds = %101
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = and i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 0
  %110 = load i32, i32* %109, align 4
  br i1 %108, label %111, label %113

111:                                              ; preds = %104
  %112 = add i32 %110, -1
  store i32 %112, i32* %109, align 4
  br label %113

113:                                              ; preds = %111, %104
  %114 = phi i32 [ %112, %111 ], [ %110, %104 ]
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %113
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %102) #13
  br label %117

117:                                              ; preds = %101, %113, %116
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #13
  %118 = load i32, i32* %4, align 4
  %119 = call zeroext i1 @_ZNK5blink19PointerEventFactory9IsPrimaryEi(%"class.blink::PointerEventFactory"* %0, i32 %118)
  %120 = zext i1 %119 to i8
  %121 = getelementptr inbounds i8, i8* %36, i64 192
  store i8 %120, i8* %121, align 8
  %122 = getelementptr inbounds i8, i8* %36, i64 140
  store i8 1, i8* %122, align 4
  %123 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names14kPointercancelE, align 8
  %124 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names13kPointerenterE, align 8
  %125 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %123, i64 0, i32 0, i32 0, i32 0
  %126 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %125, align 8
  %127 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %124, i64 0, i32 0, i32 0, i32 0
  %128 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %127, align 8
  %129 = icmp eq %"class.WTF::StringImpl"* %126, %128
  br i1 %129, label %136, label %130

130:                                              ; preds = %117
  %131 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names13kPointerleaveE, align 8
  %132 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %131, i64 0, i32 0, i32 0, i32 0
  %133 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %132, align 8
  %134 = icmp ne %"class.WTF::StringImpl"* %126, %133
  %135 = zext i1 %134 to i8
  br label %136

136:                                              ; preds = %130, %117
  %137 = phi i8 [ 0, %117 ], [ %135, %130 ]
  %138 = getelementptr inbounds i8, i8* %36, i64 11
  store i8 %137, i8* %138, align 1
  %139 = getelementptr inbounds i8, i8* %36, i64 8
  store i8 1, i8* %139, align 8
  %140 = getelementptr inbounds i8, i8* %36, i64 12
  store i8 0, i8* %140, align 4
  %141 = getelementptr inbounds i8, i8* %36, i64 9
  store i8 1, i8* %141, align 1
  %142 = getelementptr inbounds i8, i8* %36, i64 13
  store i8 1, i8* %142, align 1
  %143 = getelementptr inbounds i8, i8* %36, i64 10
  store i8 1, i8* %143, align 2
  %144 = getelementptr inbounds i8, i8* %36, i64 20
  %145 = bitcast i8* %144 to i32*
  store i32 0, i32* %145, align 4
  %146 = getelementptr inbounds i8, i8* %36, i64 14
  store i8 1, i8* %146, align 2
  %147 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 400) #13
  %148 = bitcast i8* %147 to %"class.blink::PointerEvent"*
  call void @_ZN5blink12PointerEventC1ERKN3WTF12AtomicStringEPKNS_16PointerEventInitEN4base9TimeTicksENS_10MouseEvent18SyntheticEventTypeENS_17WebMenuSourceTypeE(%"class.blink::PointerEvent"* %148, %"class.WTF::AtomicString"* dereferenceable(8) %123, %"class.blink::PointerEventInit"* %37, i64 %2, i32 0, i32 0) #13
  %149 = getelementptr inbounds i8, i8* %147, i64 -4
  %150 = bitcast i8* %149 to i16*
  %151 = load atomic i16, i16* %150 monotonic, align 2
  %152 = or i16 %151, 1
  store atomic i16 %152, i16* %150 release, align 2
  ret %"class.blink::PointerEvent"* %148
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i32 } @_ZNK3WTF7HashMapIlN5blink19PointerEventFactory17PointerAttributesENS_7IntHashIlEENS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIS3_EENS_18PartitionAllocatorEE2atERKl(%"class.WTF::HashMap.0"*, i64* dereferenceable(8)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashMap.0", %"class.WTF::HashMap.0"* %0, i64 0, i32 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.4"*, %"struct.WTF::KeyValuePair.4"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.4"* %4, null
  br i1 %5, label %75, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashMap.0", %"class.WTF::HashMap.0"* %0, i64 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %1, align 8
  %12 = shl i64 %11, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %11, %13
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %9, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %4, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %33, i64 0, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = icmp eq i64 %35, %11
  br i1 %36, label %65, label %37

37:                                               ; preds = %6
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %56, %37
  %52 = phi i64 [ %35, %37 ], [ %63, %56 ]
  %53 = phi i64 [ %32, %37 ], [ %60, %56 ]
  %54 = phi i64 [ 0, %37 ], [ %58, %56 ]
  %55 = icmp eq i64 %52, 9223372036854775807
  br i1 %55, label %75, label %56

56:                                               ; preds = %51
  %57 = icmp eq i64 %54, 0
  %58 = select i1 %57, i64 %50, i64 %54
  %59 = add i64 %58, %53
  %60 = and i64 %59, %10
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %4, i64 %60
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %61, i64 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = icmp eq i64 %63, %11
  br i1 %64, label %65, label %51

65:                                               ; preds = %56, %6
  %66 = phi %"struct.WTF::KeyValuePair.4"* [ %33, %6 ], [ %61, %56 ]
  %67 = icmp eq %"struct.WTF::KeyValuePair.4"* %66, null
  br i1 %67, label %75, label %68

68:                                               ; preds = %65
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %66, i64 0, i32 1
  %70 = bitcast %"struct.blink::PointerEventFactory::PointerAttributes"* %69 to i64*
  %71 = load i64, i64* %70, align 4
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %66, i64 0, i32 1, i32 1
  %73 = bitcast i8* %72 to i32*
  %74 = load i32, i32* %73, align 4
  br label %75

75:                                               ; preds = %51, %2, %65, %68
  %76 = phi i64 [ %71, %68 ], [ 0, %65 ], [ 0, %2 ], [ 0, %51 ]
  %77 = phi i32 [ %74, %68 ], [ 256, %65 ], [ 256, %2 ], [ 256, %51 ]
  %78 = insertvalue { i64, i32 } undef, i64 %76, 0
  %79 = insertvalue { i64, i32 } %78, i32 %77, 1
  ret { i64, i32 } %79
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::PointerEvent"* @_ZN5blink19PointerEventFactory22CreatePointerEventFromEPNS_12PointerEventERKN3WTF12AtomicStringEPNS_11EventTargetE(%"class.blink::PointerEventFactory"* nocapture readnone, %"class.blink::PointerEvent"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventTarget"*) local_unnamed_addr #3 align 2 {
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 256) #13
  %6 = bitcast i8* %5 to %"class.blink::PointerEventInit"*
  tail call void @_ZN5blink16PointerEventInitC1Ev(%"class.blink::PointerEventInit"* %6) #13
  %7 = getelementptr inbounds i8, i8* %5, i64 -4
  %8 = bitcast i8* %7 to i16*
  %9 = load atomic i16, i16* %8 monotonic, align 2
  %10 = or i16 %9, 1
  store atomic i16 %10, i16* %8 release, align 2
  %11 = getelementptr inbounds %"class.blink::PointerEvent", %"class.blink::PointerEvent"* %1, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds i8, i8* %5, i64 196
  %14 = bitcast i8* %13 to i32*
  store i32 %12, i32* %14, align 4
  %15 = getelementptr inbounds i8, i8* %5, i64 141
  store i8 1, i8* %15, align 1
  %16 = getelementptr inbounds i8, i8* %5, i64 200
  %17 = getelementptr inbounds %"class.blink::PointerEvent", %"class.blink::PointerEvent"* %1, i64 0, i32 11, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %37, label %20

20:                                               ; preds = %4
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %37

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i33
  %29 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %28, i33 1) #13
  %30 = extractvalue { i33, i1 } %29, 1
  %31 = extractvalue { i33, i1 } %29, 0
  %32 = icmp slt i33 %31, 0
  %33 = or i1 %30, %32
  br i1 %33, label %34, label %35, !prof !2

34:                                               ; preds = %25
  tail call void @llvm.trap() #13
  unreachable

35:                                               ; preds = %25
  %36 = trunc i33 %31 to i32
  store i32 %36, i32* %26, align 4
  br label %37

37:                                               ; preds = %35, %20, %4
  %38 = ptrtoint %"class.WTF::StringImpl"* %18 to i64
  %39 = bitcast i8* %16 to i64*
  %40 = bitcast i8* %16 to %"class.WTF::StringImpl"**
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  store i64 %38, i64* %39, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %56, label %43

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %41) #13
  br label %56

56:                                               ; preds = %37, %52, %55
  %57 = getelementptr inbounds %"class.blink::PointerEvent", %"class.blink::PointerEvent"* %1, i64 0, i32 12
  %58 = load i8, i8* %57, align 8, !range !3
  %59 = getelementptr inbounds i8, i8* %5, i64 192
  store i8 %58, i8* %59, align 8
  %60 = getelementptr inbounds i8, i8* %5, i64 140
  store i8 1, i8* %60, align 4
  %61 = getelementptr inbounds %"class.blink::PointerEvent", %"class.blink::PointerEvent"* %1, i64 0, i32 2
  %62 = bitcast double* %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds i8, i8* %5, i64 248
  %65 = bitcast i8* %64 to i64*
  store i64 %63, i64* %65, align 8
  %66 = getelementptr inbounds i8, i8* %5, i64 148
  store i8 1, i8* %66, align 4
  %67 = getelementptr inbounds %"class.blink::PointerEvent", %"class.blink::PointerEvent"* %1, i64 0, i32 3
  %68 = bitcast double* %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = getelementptr inbounds i8, i8* %5, i64 184
  %71 = bitcast i8* %70 to i64*
  store i64 %69, i64* %71, align 8
  %72 = getelementptr inbounds i8, i8* %5, i64 139
  store i8 1, i8* %72, align 1
  %73 = bitcast %"class.blink::PointerEvent"* %1 to double (%"class.blink::PointerEvent"*)***
  %74 = load double (%"class.blink::PointerEvent"*)**, double (%"class.blink::PointerEvent"*)*** %73, align 8
  %75 = getelementptr inbounds double (%"class.blink::PointerEvent"*)*, double (%"class.blink::PointerEvent"*)** %74, i64 37
  %76 = load double (%"class.blink::PointerEvent"*)*, double (%"class.blink::PointerEvent"*)** %75, align 8
  %77 = tail call double %76(%"class.blink::PointerEvent"* %1) #13
  %78 = getelementptr inbounds i8, i8* %5, i64 120
  %79 = bitcast i8* %78 to double*
  store double %77, double* %79, align 8
  %80 = getelementptr inbounds i8, i8* %5, i64 67
  store i8 1, i8* %80, align 1
  %81 = load double (%"class.blink::PointerEvent"*)**, double (%"class.blink::PointerEvent"*)*** %73, align 8
  %82 = getelementptr inbounds double (%"class.blink::PointerEvent"*)*, double (%"class.blink::PointerEvent"*)** %81, i64 38
  %83 = load double (%"class.blink::PointerEvent"*)*, double (%"class.blink::PointerEvent"*)** %82, align 8
  %84 = tail call double %83(%"class.blink::PointerEvent"* %1) #13
  %85 = getelementptr inbounds i8, i8* %5, i64 128
  %86 = bitcast i8* %85 to double*
  store double %84, double* %86, align 8
  %87 = getelementptr inbounds i8, i8* %5, i64 68
  store i8 1, i8* %87, align 4
  %88 = load double (%"class.blink::PointerEvent"*)**, double (%"class.blink::PointerEvent"*)*** %73, align 8
  %89 = getelementptr inbounds double (%"class.blink::PointerEvent"*)*, double (%"class.blink::PointerEvent"*)** %88, i64 39
  %90 = load double (%"class.blink::PointerEvent"*)*, double (%"class.blink::PointerEvent"*)** %89, align 8
  %91 = tail call double %90(%"class.blink::PointerEvent"* %1) #13
  %92 = getelementptr inbounds i8, i8* %5, i64 80
  %93 = bitcast i8* %92 to double*
  store double %91, double* %93, align 8
  %94 = getelementptr inbounds i8, i8* %5, i64 62
  store i8 1, i8* %94, align 2
  %95 = load double (%"class.blink::PointerEvent"*)**, double (%"class.blink::PointerEvent"*)*** %73, align 8
  %96 = getelementptr inbounds double (%"class.blink::PointerEvent"*)*, double (%"class.blink::PointerEvent"*)** %95, i64 40
  %97 = load double (%"class.blink::PointerEvent"*)*, double (%"class.blink::PointerEvent"*)** %96, align 8
  %98 = tail call double %97(%"class.blink::PointerEvent"* %1) #13
  %99 = getelementptr inbounds i8, i8* %5, i64 88
  %100 = bitcast i8* %99 to double*
  store double %98, double* %100, align 8
  %101 = getelementptr inbounds i8, i8* %5, i64 63
  store i8 1, i8* %101, align 1
  %102 = bitcast %"class.blink::PointerEvent"* %1 to i16 (%"class.blink::PointerEvent"*)***
  %103 = load i16 (%"class.blink::PointerEvent"*)**, i16 (%"class.blink::PointerEvent"*)*** %102, align 8
  %104 = getelementptr inbounds i16 (%"class.blink::PointerEvent"*)*, i16 (%"class.blink::PointerEvent"*)** %103, i64 33
  %105 = load i16 (%"class.blink::PointerEvent"*)*, i16 (%"class.blink::PointerEvent"*)** %104, align 8
  %106 = tail call signext i16 %105(%"class.blink::PointerEvent"* %1) #13
  %107 = getelementptr inbounds i8, i8* %5, i64 70
  %108 = bitcast i8* %107 to i16*
  store i16 %106, i16* %108, align 2
  %109 = getelementptr inbounds i8, i8* %5, i64 60
  store i8 1, i8* %109, align 4
  %110 = getelementptr inbounds %"class.blink::PointerEvent", %"class.blink::PointerEvent"* %1, i64 0, i32 0, i32 13
  %111 = load i16, i16* %110, align 2
  %112 = getelementptr inbounds i8, i8* %5, i64 72
  %113 = bitcast i8* %112 to i16*
  store i16 %111, i16* %113, align 8
  %114 = getelementptr inbounds i8, i8* %5, i64 61
  store i8 1, i8* %114, align 1
  %115 = getelementptr inbounds %"class.blink::PointerEvent", %"class.blink::PointerEvent"* %1, i64 0, i32 4
  %116 = bitcast float* %115 to i32*
  %117 = load i32, i32* %116, align 8
  %118 = getelementptr inbounds i8, i8* %5, i64 224
  %119 = bitcast i8* %118 to i32*
  store i32 %117, i32* %119, align 8
  %120 = getelementptr inbounds i8, i8* %5, i64 143
  store i8 1, i8* %120, align 1
  %121 = getelementptr inbounds %"class.blink::PointerEvent", %"class.blink::PointerEvent"* %1, i64 0, i32 5
  %122 = load i32, i32* %121, align 4
  %123 = getelementptr inbounds i8, i8* %5, i64 232
  %124 = bitcast i8* %123 to i32*
  store i32 %122, i32* %124, align 8
  %125 = getelementptr inbounds i8, i8* %5, i64 145
  store i8 1, i8* %125, align 1
  %126 = getelementptr inbounds %"class.blink::PointerEvent", %"class.blink::PointerEvent"* %1, i64 0, i32 6
  %127 = load i32, i32* %126, align 8
  %128 = getelementptr inbounds i8, i8* %5, i64 236
  %129 = bitcast i8* %128 to i32*
  store i32 %127, i32* %129, align 4
  %130 = getelementptr inbounds i8, i8* %5, i64 146
  store i8 1, i8* %130, align 2
  %131 = getelementptr inbounds %"class.blink::PointerEvent", %"class.blink::PointerEvent"* %1, i64 0, i32 9
  %132 = bitcast float* %131 to i32*
  %133 = load i32, i32* %132, align 8
  %134 = getelementptr inbounds i8, i8* %5, i64 228
  %135 = bitcast i8* %134 to i32*
  store i32 %133, i32* %135, align 4
  %136 = getelementptr inbounds i8, i8* %5, i64 144
  store i8 1, i8* %136, align 8
  %137 = getelementptr inbounds %"class.blink::PointerEvent", %"class.blink::PointerEvent"* %1, i64 0, i32 10
  %138 = load i32, i32* %137, align 4
  %139 = getelementptr inbounds i8, i8* %5, i64 240
  %140 = bitcast i8* %139 to i32*
  store i32 %138, i32* %140, align 8
  %141 = getelementptr inbounds i8, i8* %5, i64 147
  store i8 1, i8* %141, align 1
  %142 = getelementptr inbounds %"class.blink::PointerEvent", %"class.blink::PointerEvent"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %143 = load %"class.blink::DOMWindow"*, %"class.blink::DOMWindow"** %142, align 8
  %144 = getelementptr inbounds i8, i8* %5, i64 32
  %145 = ptrtoint %"class.blink::DOMWindow"* %143 to i64
  %146 = bitcast i8* %144 to i64*
  store atomic i64 %145, i64* %146 monotonic, align 8
  %147 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %152, label %149

149:                                              ; preds = %56
  %150 = bitcast %"class.blink::DOMWindow"* %143 to i8*
  %151 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %150) #13
  br label %152

152:                                              ; preds = %56, %149
  %153 = getelementptr inbounds i8, i8* %5, i64 16
  store i8 1, i8* %153, align 8
  %154 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names13kPointerenterE, align 8
  %155 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %156 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %155, align 8
  %157 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %154, i64 0, i32 0, i32 0, i32 0
  %158 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %159 = icmp eq %"class.WTF::StringImpl"* %156, %158
  br i1 %159, label %166, label %160

160:                                              ; preds = %152
  %161 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names13kPointerleaveE, align 8
  %162 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %161, i64 0, i32 0, i32 0, i32 0
  %163 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %162, align 8
  %164 = icmp ne %"class.WTF::StringImpl"* %156, %163
  %165 = zext i1 %164 to i8
  br label %166

166:                                              ; preds = %160, %152
  %167 = phi i8 [ 0, %152 ], [ %165, %160 ]
  %168 = getelementptr inbounds i8, i8* %5, i64 11
  store i8 %167, i8* %168, align 1
  %169 = getelementptr inbounds i8, i8* %5, i64 8
  store i8 1, i8* %169, align 8
  %170 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %155, align 8
  %171 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %172 = icmp eq %"class.WTF::StringImpl"* %170, %171
  br i1 %172, label %199, label %173

173:                                              ; preds = %166
  %174 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names13kPointerleaveE, align 8
  %175 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %174, i64 0, i32 0, i32 0, i32 0
  %176 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %175, align 8
  %177 = icmp eq %"class.WTF::StringImpl"* %170, %176
  br i1 %177, label %199, label %178

178:                                              ; preds = %173
  %179 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names14kPointercancelE, align 8
  %180 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %179, i64 0, i32 0, i32 0, i32 0
  %181 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %180, align 8
  %182 = icmp eq %"class.WTF::StringImpl"* %170, %181
  br i1 %182, label %199, label %183

183:                                              ; preds = %178
  %184 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names17kPointerrawupdateE, align 8
  %185 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %184, i64 0, i32 0, i32 0, i32 0
  %186 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %185, align 8
  %187 = icmp eq %"class.WTF::StringImpl"* %170, %186
  br i1 %187, label %199, label %188

188:                                              ; preds = %183
  %189 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names18kGotpointercaptureE, align 8
  %190 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %189, i64 0, i32 0, i32 0, i32 0
  %191 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %190, align 8
  %192 = icmp eq %"class.WTF::StringImpl"* %170, %191
  br i1 %192, label %199, label %193

193:                                              ; preds = %188
  %194 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names19kLostpointercaptureE, align 8
  %195 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %194, i64 0, i32 0, i32 0, i32 0
  %196 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %195, align 8
  %197 = icmp ne %"class.WTF::StringImpl"* %170, %196
  %198 = zext i1 %197 to i8
  br label %199

199:                                              ; preds = %166, %173, %178, %183, %188, %193
  %200 = phi i8 [ 0, %188 ], [ 0, %183 ], [ 0, %178 ], [ 0, %173 ], [ 0, %166 ], [ %198, %193 ]
  %201 = getelementptr inbounds i8, i8* %5, i64 12
  store i8 %200, i8* %201, align 4
  %202 = getelementptr inbounds i8, i8* %5, i64 9
  store i8 1, i8* %202, align 1
  %203 = getelementptr inbounds i8, i8* %5, i64 13
  store i8 1, i8* %203, align 1
  %204 = getelementptr inbounds i8, i8* %5, i64 10
  store i8 1, i8* %204, align 2
  %205 = getelementptr inbounds i8, i8* %5, i64 20
  %206 = bitcast i8* %205 to i32*
  store i32 0, i32* %206, align 4
  %207 = getelementptr inbounds i8, i8* %5, i64 14
  store i8 1, i8* %207, align 2
  %208 = getelementptr inbounds %"class.blink::PointerEvent", %"class.blink::PointerEvent"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %209 = tail call %"class.blink::UIEventWithKeyState"* @_ZN5blink21FindEventWithKeyStateEPKNS_5EventE(%"class.blink::Event"* %208) #13
  %210 = icmp eq %"class.blink::UIEventWithKeyState"* %209, null
  br i1 %210, label %215, label %211

211:                                              ; preds = %199
  %212 = bitcast i8* %5 to %"class.blink::EventModifierInit"*
  %213 = getelementptr inbounds %"class.blink::UIEventWithKeyState", %"class.blink::UIEventWithKeyState"* %209, i64 0, i32 1
  %214 = load i32, i32* %213, align 8
  tail call void @_ZN5blink19UIEventWithKeyState29SetFromWebInputEventModifiersEPNS_17EventModifierInitENS_13WebInputEvent9ModifiersE(%"class.blink::EventModifierInit"* %212, i32 %214) #13
  br label %215

215:                                              ; preds = %199, %211
  %216 = icmp eq %"class.blink::EventTarget"* %3, null
  br i1 %216, label %228, label %217

217:                                              ; preds = %215
  %218 = getelementptr inbounds i8, i8* %5, i64 112
  %219 = ptrtoint %"class.blink::EventTarget"* %3 to i64
  %220 = bitcast i8* %218 to i64*
  store atomic i64 %219, i64* %220 monotonic, align 8
  %221 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %226, label %223

223:                                              ; preds = %217
  %224 = bitcast %"class.blink::EventTarget"* %3 to i8*
  %225 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %224) #13
  br label %226

226:                                              ; preds = %217, %223
  %227 = getelementptr inbounds i8, i8* %5, i64 66
  store i8 1, i8* %227, align 2
  br label %228

228:                                              ; preds = %215, %226
  %229 = getelementptr inbounds %"class.blink::PointerEvent", %"class.blink::PointerEvent"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 10, i32 0, i32 0
  %230 = load i64, i64* %229, align 8
  %231 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 400) #13
  %232 = bitcast i8* %231 to %"class.blink::PointerEvent"*
  tail call void @_ZN5blink12PointerEventC1ERKN3WTF12AtomicStringEPKNS_16PointerEventInitEN4base9TimeTicksENS_10MouseEvent18SyntheticEventTypeENS_17WebMenuSourceTypeE(%"class.blink::PointerEvent"* %232, %"class.WTF::AtomicString"* dereferenceable(8) %2, %"class.blink::PointerEventInit"* %6, i64 %230, i32 0, i32 0) #13
  %233 = getelementptr inbounds i8, i8* %231, i64 -4
  %234 = bitcast i8* %233 to i16*
  %235 = load atomic i16, i16* %234 monotonic, align 2
  %236 = or i16 %235, 1
  store atomic i16 %236, i16* %234 release, align 2
  ret %"class.blink::PointerEvent"* %232
}

declare %"class.blink::UIEventWithKeyState"* @_ZN5blink21FindEventWithKeyStateEPKNS_5EventE(%"class.blink::Event"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::PointerEvent"* @_ZN5blink19PointerEventFactory27CreatePointerRawUpdateEventEPNS_12PointerEventE(%"class.blink::PointerEventFactory"* nocapture readnone, %"class.blink::PointerEvent"*) local_unnamed_addr #3 align 2 {
  %3 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names17kPointerrawupdateE, align 8
  %4 = getelementptr inbounds %"class.blink::PointerEvent", %"class.blink::PointerEvent"* %1, i64 0, i32 0, i32 14, i32 0, i32 0
  %5 = load %"class.blink::EventTarget"*, %"class.blink::EventTarget"** %4, align 8
  %6 = tail call %"class.blink::PointerEvent"* @_ZN5blink19PointerEventFactory22CreatePointerEventFromEPNS_12PointerEventERKN3WTF12AtomicStringEPNS_11EventTargetE(%"class.blink::PointerEventFactory"* undef, %"class.blink::PointerEvent"* %1, %"class.WTF::AtomicString"* dereferenceable(8) %3, %"class.blink::EventTarget"* %5)
  ret %"class.blink::PointerEvent"* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::PointerEvent"* @_ZN5blink19PointerEventFactory25CreatePointerCaptureEventEPNS_12PointerEventERKN3WTF12AtomicStringE(%"class.blink::PointerEventFactory"* nocapture readnone, %"class.blink::PointerEvent"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.blink::PointerEvent", %"class.blink::PointerEvent"* %1, i64 0, i32 0, i32 14, i32 0, i32 0
  %5 = load %"class.blink::EventTarget"*, %"class.blink::EventTarget"** %4, align 8
  %6 = tail call %"class.blink::PointerEvent"* @_ZN5blink19PointerEventFactory22CreatePointerEventFromEPNS_12PointerEventERKN3WTF12AtomicStringEPNS_11EventTargetE(%"class.blink::PointerEventFactory"* undef, %"class.blink::PointerEvent"* %1, %"class.WTF::AtomicString"* dereferenceable(8) %2, %"class.blink::EventTarget"* %5)
  ret %"class.blink::PointerEvent"* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::PointerEvent"* @_ZN5blink19PointerEventFactory26CreatePointerBoundaryEventEPNS_12PointerEventERKN3WTF12AtomicStringEPNS_11EventTargetE(%"class.blink::PointerEventFactory"* nocapture readnone, %"class.blink::PointerEvent"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventTarget"*) local_unnamed_addr #3 align 2 {
  %5 = tail call %"class.blink::PointerEvent"* @_ZN5blink19PointerEventFactory22CreatePointerEventFromEPNS_12PointerEventERKN3WTF12AtomicStringEPNS_11EventTargetE(%"class.blink::PointerEventFactory"* undef, %"class.blink::PointerEvent"* %1, %"class.WTF::AtomicString"* dereferenceable(8) %2, %"class.blink::EventTarget"* %3)
  ret %"class.blink::PointerEvent"* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19PointerEventFactoryC2Ev(%"class.blink::PointerEventFactory"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %0, i64 0, i32 2
  %3 = bitcast %"class.WTF::HashMap"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 20, i1 false) #13
  %4 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %0, i64 0, i32 3
  %5 = bitcast %"class.WTF::HashMap.0"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 20, i1 false) #13
  %6 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %0, i64 0, i32 6
  %7 = bitcast %"class.WTF::HashMap.5"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 20, i1 false) #13
  %8 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %0, i64 0, i32 7
  %9 = bitcast %"class.WTF::HashMap.5"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 20, i1 false) #13
  tail call void @_ZN5blink19PointerEventFactory5ClearEv(%"class.blink::PointerEventFactory"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19PointerEventFactory5ClearEv(%"class.blink::PointerEventFactory"*) local_unnamed_addr #3 align 2 {
  %2 = alloca %"struct.blink::PointerEventFactory::PointerAttributes", align 8
  %3 = getelementptr %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %0, i64 0, i32 4, i64 0
  %4 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %4, i64 0, i32 0, i32 0
  %6 = bitcast i32* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %6, i8 0, i64 40, i1 false)
  %7 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %5, align 8
  %8 = icmp eq %"struct.WTF::KeyValuePair"* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %0, i64 0, i32 2, i32 0, i32 1
  %11 = bitcast %"struct.WTF::KeyValuePair"* %7 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %11) #13
  %12 = bitcast %"class.WTF::HashMap"* %4 to i64*
  store atomic i64 0, i64* %12 monotonic, align 8
  store i32 0, i32* %10, align 8
  %13 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %0, i64 0, i32 2, i32 0, i32 2
  store i32 0, i32* %13, align 4
  br label %14

14:                                               ; preds = %1, %9
  %15 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %0, i64 0, i32 3
  %16 = getelementptr inbounds %"class.WTF::HashMap.0", %"class.WTF::HashMap.0"* %15, i64 0, i32 0, i32 0
  %17 = load %"struct.WTF::KeyValuePair.4"*, %"struct.WTF::KeyValuePair.4"** %16, align 8
  %18 = icmp eq %"struct.WTF::KeyValuePair.4"* %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %0, i64 0, i32 3, i32 0, i32 1
  %21 = bitcast %"struct.WTF::KeyValuePair.4"* %17 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %21) #13
  %22 = bitcast %"class.WTF::HashMap.0"* %15 to i64*
  store atomic i64 0, i64* %22 monotonic, align 8
  store i32 0, i32* %20, align 8
  %23 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %0, i64 0, i32 3, i32 0, i32 2
  store i32 0, i32* %23, align 4
  br label %24

24:                                               ; preds = %14, %19
  %25 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %0, i64 0, i32 6
  %26 = getelementptr inbounds %"class.WTF::HashMap.5", %"class.WTF::HashMap.5"* %25, i64 0, i32 0, i32 0
  %27 = load %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"** %26, align 8
  %28 = icmp eq %"struct.WTF::KeyValuePair.9"* %27, null
  br i1 %28, label %34, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %0, i64 0, i32 6, i32 0, i32 1
  %31 = bitcast %"struct.WTF::KeyValuePair.9"* %27 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %31) #13
  %32 = bitcast %"class.WTF::HashMap.5"* %25 to i64*
  store atomic i64 0, i64* %32 monotonic, align 8
  store i32 0, i32* %30, align 8
  %33 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %0, i64 0, i32 6, i32 0, i32 2
  store i32 0, i32* %33, align 4
  br label %34

34:                                               ; preds = %24, %29
  %35 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %0, i64 0, i32 4, i64 1
  store i32 1, i32* %35, align 4
  %36 = bitcast %"struct.blink::PointerEventFactory::PointerAttributes"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %36) #13
  %37 = bitcast %"struct.blink::PointerEventFactory::PointerAttributes"* %2 to i64*
  store i64 1, i64* %37, align 8
  %38 = getelementptr inbounds %"struct.blink::PointerEventFactory::PointerAttributes", %"struct.blink::PointerEventFactory::PointerAttributes"* %2, i64 0, i32 1
  store i8 0, i8* %38, align 8
  %39 = getelementptr inbounds %"struct.blink::PointerEventFactory::PointerAttributes", %"struct.blink::PointerEventFactory::PointerAttributes"* %2, i64 0, i32 2
  store i8 1, i8* %39, align 1
  %40 = getelementptr inbounds %"class.WTF::HashMap.0", %"class.WTF::HashMap.0"* %15, i64 0, i32 0
  %41 = call { %"struct.WTF::KeyValuePair.4"*, i8 } @_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink19PointerEventFactory17PointerAttributesEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIS4_EEEESB_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S8_SF_EERKiS4_EENS_18HashTableAddResultISG_S5_EEOT0_OT1_(%"class.WTF::HashTable.1"* %40, i32* nonnull dereferenceable(4) @_ZN5blink19PointerEventFactory8kMouseIdE, %"struct.blink::PointerEventFactory::PointerAttributes"* nonnull dereferenceable(12) %2) #13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %36) #13
  %42 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %0, i64 0, i32 0
  store i32 2, i32* %42, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19PointerEventFactoryD2Ev(%"class.blink::PointerEventFactory"*) unnamed_addr #3 align 2 {
  tail call void @_ZN5blink19PointerEventFactory5ClearEv(%"class.blink::PointerEventFactory"* %0)
  %2 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"** %2, align 8
  %4 = icmp eq %"struct.WTF::KeyValuePair.9"* %3, null
  br i1 %4, label %7, label %5, !prof !7

5:                                                ; preds = %1
  %6 = bitcast %"struct.WTF::KeyValuePair.9"* %3 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %6) #13
  store %"struct.WTF::KeyValuePair.9"* null, %"struct.WTF::KeyValuePair.9"** %2, align 8
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %0, i64 0, i32 6, i32 0, i32 0
  %9 = load %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"** %8, align 8
  %10 = icmp eq %"struct.WTF::KeyValuePair.9"* %9, null
  br i1 %10, label %13, label %11, !prof !7

11:                                               ; preds = %7
  %12 = bitcast %"struct.WTF::KeyValuePair.9"* %9 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %12) #13
  store %"struct.WTF::KeyValuePair.9"* null, %"struct.WTF::KeyValuePair.9"** %8, align 8
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %0, i64 0, i32 3, i32 0, i32 0
  %15 = load %"struct.WTF::KeyValuePair.4"*, %"struct.WTF::KeyValuePair.4"** %14, align 8
  %16 = icmp eq %"struct.WTF::KeyValuePair.4"* %15, null
  br i1 %16, label %19, label %17, !prof !7

17:                                               ; preds = %13
  %18 = bitcast %"struct.WTF::KeyValuePair.4"* %15 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %18) #13
  store %"struct.WTF::KeyValuePair.4"* null, %"struct.WTF::KeyValuePair.4"** %14, align 8
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %0, i64 0, i32 2, i32 0, i32 0
  %21 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %20, align 8
  %22 = icmp eq %"struct.WTF::KeyValuePair"* %21, null
  br i1 %22, label %25, label %23, !prof !7

23:                                               ; preds = %19
  %24 = bitcast %"struct.WTF::KeyValuePair"* %21 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %24) #13
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %20, align 8
  br label %25

25:                                               ; preds = %19, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink19PointerEventFactory6RemoveEi(%"class.blink::PointerEventFactory"*, i32) local_unnamed_addr #3 align 2 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = icmp eq i32 %1, 1
  br i1 %5, label %308, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %0, i64 0, i32 3
  %8 = sext i32 %1 to i64
  %9 = getelementptr inbounds %"class.WTF::HashMap.0", %"class.WTF::HashMap.0"* %7, i64 0, i32 0, i32 0
  %10 = load %"struct.WTF::KeyValuePair.4"*, %"struct.WTF::KeyValuePair.4"** %9, align 8
  %11 = icmp eq %"struct.WTF::KeyValuePair.4"* %10, null
  br i1 %11, label %308, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %0, i64 0, i32 3, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = add i32 %14, -1
  %16 = zext i32 %15 to i64
  %17 = shl nsw i64 %8, 32
  %18 = xor i64 %17, -1
  %19 = add i64 %18, %8
  %20 = lshr i64 %19, 22
  %21 = xor i64 %20, %19
  %22 = shl i64 %21, 13
  %23 = xor i64 %22, -1
  %24 = add i64 %21, %23
  %25 = lshr i64 %24, 8
  %26 = xor i64 %25, %24
  %27 = mul i64 %26, 9
  %28 = lshr i64 %27, 15
  %29 = xor i64 %28, %27
  %30 = shl i64 %29, 27
  %31 = xor i64 %30, -1
  %32 = add i64 %29, %31
  %33 = lshr i64 %32, 31
  %34 = xor i64 %33, %32
  %35 = trunc i64 %34 to i32
  %36 = and i32 %15, %35
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %10, i64 %37
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %38, i64 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, %8
  br i1 %41, label %70, label %42

42:                                               ; preds = %12
  %43 = xor i32 %35, -1
  %44 = lshr i32 %35, 23
  %45 = add i32 %44, %43
  %46 = shl i32 %45, 12
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 7
  %49 = xor i32 %48, %47
  %50 = shl i32 %49, 2
  %51 = xor i32 %50, %49
  %52 = lshr i32 %51, 20
  %53 = xor i32 %52, %51
  %54 = or i32 %53, 1
  %55 = zext i32 %54 to i64
  br label %56

56:                                               ; preds = %61, %42
  %57 = phi i64 [ %40, %42 ], [ %68, %61 ]
  %58 = phi i64 [ %37, %42 ], [ %65, %61 ]
  %59 = phi i64 [ 0, %42 ], [ %63, %61 ]
  %60 = icmp eq i64 %57, 9223372036854775807
  br i1 %60, label %308, label %61

61:                                               ; preds = %56
  %62 = icmp eq i64 %59, 0
  %63 = select i1 %62, i64 %55, i64 %59
  %64 = add i64 %63, %58
  %65 = and i64 %64, %16
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %10, i64 %65
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %66, i64 0, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = icmp eq i64 %68, %8
  br i1 %69, label %70, label %56

70:                                               ; preds = %61, %12
  %71 = phi %"struct.WTF::KeyValuePair.4"* [ %38, %12 ], [ %66, %61 ]
  %72 = icmp eq %"struct.WTF::KeyValuePair.4"* %71, null
  br i1 %72, label %308, label %73

73:                                               ; preds = %70
  %74 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #13
  store i64 %8, i64* %3, align 8
  %75 = call { i64, i32 } @_ZNK3WTF7HashMapIlN5blink19PointerEventFactory17PointerAttributesENS_7IntHashIlEENS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIS3_EENS_18PartitionAllocatorEE2atERKl(%"class.WTF::HashMap.0"* %7, i64* nonnull dereferenceable(8) %3)
  %76 = extractvalue { i64, i32 } %75, 0
  %77 = trunc i64 %76 to i32
  %78 = lshr i64 %76, 32
  %79 = trunc i64 %78 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #13
  %80 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #13
  store i64 %8, i64* %4, align 8
  %81 = getelementptr inbounds %"class.WTF::HashMap.0", %"class.WTF::HashMap.0"* %7, i64 0, i32 0
  %82 = call { %"struct.WTF::KeyValuePair.4"*, %"struct.WTF::KeyValuePair.4"* } @_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink19PointerEventFactory17PointerAttributesEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIS4_EEEESB_NS_18PartitionAllocatorEE4findERKl(%"class.WTF::HashTable.1"* %81, i64* nonnull dereferenceable(8) %4) #13
  %83 = extractvalue { %"struct.WTF::KeyValuePair.4"*, %"struct.WTF::KeyValuePair.4"* } %82, 0
  %84 = load %"struct.WTF::KeyValuePair.4"*, %"struct.WTF::KeyValuePair.4"** %9, align 8
  %85 = load i32, i32* %13, align 8
  %86 = zext i32 %85 to i64
  %87 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %84, i64 %86
  %88 = icmp eq %"struct.WTF::KeyValuePair.4"* %87, %83
  br i1 %88, label %158, label %89

89:                                               ; preds = %73
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %83, i64 0, i32 0
  store i64 9223372036854775806, i64* %90, align 8
  %91 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %0, i64 0, i32 3, i32 0, i32 3
  %92 = load i32, i32* %91, align 8
  %93 = add i32 %92, 1
  %94 = and i32 %93, 2147483647
  %95 = and i32 %92, -2147483648
  %96 = or i32 %94, %95
  store i32 %96, i32* %91, align 8
  %97 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %0, i64 0, i32 3, i32 0, i32 2
  %98 = load i32, i32* %97, align 4
  %99 = add i32 %98, -1
  store i32 %99, i32* %97, align 4
  %100 = mul i32 %99, 6
  %101 = load i32, i32* %13, align 8
  %102 = icmp ult i32 %100, %101
  %103 = icmp ugt i32 %101, 8
  %104 = and i1 %102, %103
  br i1 %104, label %105, label %158

105:                                              ; preds = %89
  %106 = lshr i32 %101, 1
  %107 = zext i32 %106 to i64
  %108 = mul nuw nsw i64 %107, 24
  %109 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %108, i8* getelementptr inbounds ([118 x i8], [118 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIlN5blink19PointerEventFactory17PointerAttributesEEEEEPKcv, i64 0, i64 0)) #13
  %110 = bitcast i8* %109 to %"struct.WTF::KeyValuePair.4"*
  %111 = icmp eq i32 %106, 0
  br i1 %111, label %156, label %112

112:                                              ; preds = %105
  %113 = add nsw i64 %107, -1
  %114 = and i64 %107, 3
  %115 = icmp ult i64 %113, 3
  br i1 %115, label %143, label %116

116:                                              ; preds = %112
  %117 = sub nsw i64 %107, %114
  br label %118

118:                                              ; preds = %118, %116
  %119 = phi i64 [ 0, %116 ], [ %140, %118 ]
  %120 = phi i64 [ %117, %116 ], [ %141, %118 ]
  %121 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %110, i64 %119, i32 0
  %122 = bitcast i64* %121 to <2 x i64>*
  store <2 x i64> <i64 9223372036854775807, i64 0>, <2 x i64>* %122, align 8
  %123 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %110, i64 %119, i32 1, i32 1
  %124 = bitcast i8* %123 to i32*
  store i32 256, i32* %124, align 8
  %125 = or i64 %119, 1
  %126 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %110, i64 %125, i32 0
  %127 = bitcast i64* %126 to <2 x i64>*
  store <2 x i64> <i64 9223372036854775807, i64 0>, <2 x i64>* %127, align 8
  %128 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %110, i64 %125, i32 1, i32 1
  %129 = bitcast i8* %128 to i32*
  store i32 256, i32* %129, align 8
  %130 = or i64 %119, 2
  %131 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %110, i64 %130, i32 0
  %132 = bitcast i64* %131 to <2 x i64>*
  store <2 x i64> <i64 9223372036854775807, i64 0>, <2 x i64>* %132, align 8
  %133 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %110, i64 %130, i32 1, i32 1
  %134 = bitcast i8* %133 to i32*
  store i32 256, i32* %134, align 8
  %135 = or i64 %119, 3
  %136 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %110, i64 %135, i32 0
  %137 = bitcast i64* %136 to <2 x i64>*
  store <2 x i64> <i64 9223372036854775807, i64 0>, <2 x i64>* %137, align 8
  %138 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %110, i64 %135, i32 1, i32 1
  %139 = bitcast i8* %138 to i32*
  store i32 256, i32* %139, align 8
  %140 = add nuw nsw i64 %119, 4
  %141 = add i64 %120, -4
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %143, label %118

143:                                              ; preds = %118, %112
  %144 = phi i64 [ 0, %112 ], [ %140, %118 ]
  %145 = icmp eq i64 %114, 0
  br i1 %145, label %156, label %146

146:                                              ; preds = %143, %146
  %147 = phi i64 [ %153, %146 ], [ %144, %143 ]
  %148 = phi i64 [ %154, %146 ], [ %114, %143 ]
  %149 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %110, i64 %147, i32 0
  %150 = bitcast i64* %149 to <2 x i64>*
  store <2 x i64> <i64 9223372036854775807, i64 0>, <2 x i64>* %150, align 8
  %151 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %110, i64 %147, i32 1, i32 1
  %152 = bitcast i8* %151 to i32*
  store i32 256, i32* %152, align 8
  %153 = add nuw nsw i64 %147, 1
  %154 = add i64 %148, -1
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %156, label %146, !llvm.loop !8

156:                                              ; preds = %143, %146, %105
  %157 = call %"struct.WTF::KeyValuePair.4"* @_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink19PointerEventFactory17PointerAttributesEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIS4_EEEESB_NS_18PartitionAllocatorEE8RehashToEPS5_jSH_(%"class.WTF::HashTable.1"* %81, %"struct.WTF::KeyValuePair.4"* %110, i32 %106, %"struct.WTF::KeyValuePair.4"* null) #13
  br label %158

158:                                              ; preds = %73, %89, %156
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #13
  %159 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %0, i64 0, i32 2
  %160 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %159, i64 0, i32 0
  %161 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %159, i64 0, i32 0, i32 0
  %162 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %161, align 8
  %163 = icmp eq %"struct.WTF::KeyValuePair"* %162, null
  %164 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %0, i64 0, i32 2, i32 0, i32 1
  %165 = load i32, i32* %164, align 8
  br i1 %163, label %225, label %166

166:                                              ; preds = %158
  %167 = add i32 %165, -1
  %168 = zext i32 %167 to i64
  %169 = and i64 %76, 4294967295
  %170 = mul i64 %169, 5146158508761418231
  %171 = mul i64 %78, -682818954288075998
  %172 = add i64 %171, %170
  %173 = lshr i64 %172, 32
  %174 = trunc i64 %173 to i32
  %175 = and i32 %167, %174
  %176 = zext i32 %175 to i64
  %177 = xor i32 %174, -1
  %178 = lshr i64 %172, 55
  %179 = trunc i64 %178 to i32
  %180 = add i32 %179, %177
  %181 = shl i32 %180, 12
  %182 = xor i32 %181, %180
  %183 = lshr i32 %182, 7
  %184 = xor i32 %183, %182
  %185 = shl i32 %184, 2
  %186 = xor i32 %185, %184
  %187 = lshr i32 %186, 20
  %188 = xor i32 %187, %186
  %189 = or i32 %188, 1
  %190 = zext i32 %189 to i64
  %191 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %162, i64 %176
  %192 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %191, i64 0, i32 0, i32 0
  %193 = load i32, i32* %192, align 4
  %194 = icmp eq i32 %193, %77
  %195 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %162, i64 %176, i32 0, i32 1
  %196 = load i32, i32* %195, align 4
  %197 = icmp eq i32 %196, %79
  %198 = and i1 %194, %197
  br i1 %198, label %220, label %199

199:                                              ; preds = %166, %207
  %200 = phi i32 [ %217, %207 ], [ %196, %166 ]
  %201 = phi i32 [ %214, %207 ], [ %193, %166 ]
  %202 = phi i64 [ %211, %207 ], [ %176, %166 ]
  %203 = phi i64 [ %209, %207 ], [ 0, %166 ]
  %204 = icmp eq i32 %201, 2147483647
  %205 = icmp eq i32 %200, 2147483647
  %206 = and i1 %205, %204
  br i1 %206, label %225, label %207

207:                                              ; preds = %199
  %208 = icmp eq i64 %203, 0
  %209 = select i1 %208, i64 %190, i64 %203
  %210 = add i64 %209, %202
  %211 = and i64 %210, %168
  %212 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %162, i64 %211
  %213 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %212, i64 0, i32 0, i32 0
  %214 = load i32, i32* %213, align 4
  %215 = icmp eq i32 %214, %77
  %216 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %162, i64 %211, i32 0, i32 1
  %217 = load i32, i32* %216, align 4
  %218 = icmp eq i32 %217, %79
  %219 = and i1 %215, %218
  br i1 %219, label %220, label %199

220:                                              ; preds = %207, %166
  %221 = phi %"struct.WTF::KeyValuePair"* [ %191, %166 ], [ %212, %207 ]
  %222 = icmp eq %"struct.WTF::KeyValuePair"* %221, null
  br i1 %222, label %225, label %223

223:                                              ; preds = %220
  %224 = zext i32 %165 to i64
  br label %228

225:                                              ; preds = %199, %220, %158
  %226 = zext i32 %165 to i64
  %227 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %162, i64 %226
  br label %228

228:                                              ; preds = %223, %225
  %229 = phi i64 [ %224, %223 ], [ %226, %225 ]
  %230 = phi %"struct.WTF::KeyValuePair"* [ %221, %223 ], [ %227, %225 ]
  %231 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %162, i64 %229
  %232 = icmp eq %"struct.WTF::KeyValuePair"* %231, %230
  br i1 %232, label %297, label %233

233:                                              ; preds = %228
  %234 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %230, i64 0, i32 0, i32 0
  store i32 2147483646, i32* %234, align 4
  %235 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %0, i64 0, i32 2, i32 0, i32 3
  %236 = load i32, i32* %235, align 8
  %237 = add i32 %236, 1
  %238 = and i32 %237, 2147483647
  %239 = and i32 %236, -2147483648
  %240 = or i32 %238, %239
  store i32 %240, i32* %235, align 8
  %241 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %0, i64 0, i32 2, i32 0, i32 2
  %242 = load i32, i32* %241, align 4
  %243 = add i32 %242, -1
  store i32 %243, i32* %241, align 4
  %244 = mul i32 %243, 6
  %245 = load i32, i32* %164, align 8
  %246 = icmp ult i32 %244, %245
  %247 = icmp ugt i32 %245, 8
  %248 = and i1 %246, %247
  br i1 %248, label %249, label %297

249:                                              ; preds = %233
  %250 = lshr i32 %245, 1
  %251 = zext i32 %250 to i64
  %252 = mul nuw nsw i64 %251, 12
  %253 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %252, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINSt3__14pairIiiEEiEEEEPKcv, i64 0, i64 0)) #13
  %254 = bitcast i8* %253 to %"struct.WTF::KeyValuePair"*
  %255 = icmp eq i32 %250, 0
  br i1 %255, label %295, label %256

256:                                              ; preds = %249
  %257 = add nsw i64 %251, -1
  %258 = and i64 %251, 3
  %259 = icmp ult i64 %257, 3
  br i1 %259, label %283, label %260

260:                                              ; preds = %256
  %261 = sub nsw i64 %251, %258
  br label %262

262:                                              ; preds = %262, %260
  %263 = phi i64 [ 0, %260 ], [ %280, %262 ]
  %264 = phi i64 [ %261, %260 ], [ %281, %262 ]
  %265 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %254, i64 %263
  %266 = bitcast %"struct.WTF::KeyValuePair"* %265 to i64*
  store i64 9223372034707292159, i64* %266, align 4
  %267 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %254, i64 %263, i32 1
  store i32 0, i32* %267, align 4
  %268 = or i64 %263, 1
  %269 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %254, i64 %268
  %270 = bitcast %"struct.WTF::KeyValuePair"* %269 to i64*
  store i64 9223372034707292159, i64* %270, align 4
  %271 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %254, i64 %268, i32 1
  store i32 0, i32* %271, align 4
  %272 = or i64 %263, 2
  %273 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %254, i64 %272
  %274 = bitcast %"struct.WTF::KeyValuePair"* %273 to i64*
  store i64 9223372034707292159, i64* %274, align 4
  %275 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %254, i64 %272, i32 1
  store i32 0, i32* %275, align 4
  %276 = or i64 %263, 3
  %277 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %254, i64 %276
  %278 = bitcast %"struct.WTF::KeyValuePair"* %277 to i64*
  store i64 9223372034707292159, i64* %278, align 4
  %279 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %254, i64 %276, i32 1
  store i32 0, i32* %279, align 4
  %280 = add nuw nsw i64 %263, 4
  %281 = add i64 %264, -4
  %282 = icmp eq i64 %281, 0
  br i1 %282, label %283, label %262

283:                                              ; preds = %262, %256
  %284 = phi i64 [ 0, %256 ], [ %280, %262 ]
  %285 = icmp eq i64 %258, 0
  br i1 %285, label %295, label %286

286:                                              ; preds = %283, %286
  %287 = phi i64 [ %292, %286 ], [ %284, %283 ]
  %288 = phi i64 [ %293, %286 ], [ %258, %283 ]
  %289 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %254, i64 %287
  %290 = bitcast %"struct.WTF::KeyValuePair"* %289 to i64*
  store i64 9223372034707292159, i64* %290, align 4
  %291 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %254, i64 %287, i32 1
  store i32 0, i32* %291, align 4
  %292 = add nuw nsw i64 %287, 1
  %293 = add i64 %288, -1
  %294 = icmp eq i64 %293, 0
  br i1 %294, label %295, label %286, !llvm.loop !9

295:                                              ; preds = %283, %286, %249
  %296 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINSt3__14pairIiiEENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_8PairHashIiiEENS_18HashMapValueTraitsINS_14PairHashTraitsINS_29UnsignedWithZeroKeyHashTraitsIiEESC_EENS_10HashTraitsIiEEEESD_NS_18PartitionAllocatorEE8RehashToEPS5_jSJ_(%"class.WTF::HashTable"* %160, %"struct.WTF::KeyValuePair"* %254, i32 %250, %"struct.WTF::KeyValuePair"* null) #13
  br label %297

297:                                              ; preds = %228, %233, %295
  call void @_ZN5blink19PointerEventFactory18RemoveLastPositionEi(%"class.blink::PointerEventFactory"* %0, i32 %1)
  %298 = shl i64 %76, 32
  %299 = ashr exact i64 %298, 32
  %300 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %0, i64 0, i32 4, i64 %299
  %301 = load i32, i32* %300, align 4
  %302 = icmp eq i32 %301, %1
  br i1 %302, label %303, label %304

303:                                              ; preds = %297
  store i32 0, i32* %300, align 4
  br label %304

304:                                              ; preds = %303, %297
  %305 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %0, i64 0, i32 5, i64 %299
  %306 = load i32, i32* %305, align 4
  %307 = add nsw i32 %306, -1
  store i32 %307, i32* %305, align 4
  br label %308

308:                                              ; preds = %56, %70, %6, %2, %304
  %309 = phi i1 [ true, %304 ], [ false, %70 ], [ false, %2 ], [ false, %6 ], [ false, %56 ]
  ret i1 %309
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink19PointerEventFactory34GetPointerIdsOfNonHoveringPointersEv(%"class.WTF::Vector.1700"* noalias sret, %"class.blink::PointerEventFactory"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %3 = alloca %"struct.std::__1::__less.1845", align 1
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %"class.WTF::Vector.1700", %"class.WTF::Vector.1700"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.WTF::Vector.1700", %"class.WTF::Vector.1700"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.WTF::Vector.1700", %"class.WTF::Vector.1700"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = bitcast %"class.WTF::Vector.1700"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false) #13
  %9 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %1, i64 0, i32 3, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  %12 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %1, i64 0, i32 3, i32 0, i32 0
  %13 = load %"struct.WTF::KeyValuePair.4"*, %"struct.WTF::KeyValuePair.4"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %1, i64 0, i32 3, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %13, i64 %16
  br i1 %11, label %38, label %18

18:                                               ; preds = %2
  %19 = icmp eq i32 %15, 0
  br i1 %19, label %29, label %20

20:                                               ; preds = %18, %26
  %21 = phi %"struct.WTF::KeyValuePair.4"* [ %27, %26 ], [ %13, %18 ]
  %22 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %21, i64 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = or i64 %23, 1
  %25 = icmp eq i64 %24, 9223372036854775807
  br i1 %25, label %26, label %29

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %21, i64 1
  %28 = icmp eq %"struct.WTF::KeyValuePair.4"* %27, %17
  br i1 %28, label %38, label %20

29:                                               ; preds = %20, %18
  %30 = phi %"struct.WTF::KeyValuePair.4"* [ %13, %18 ], [ %21, %20 ]
  %31 = icmp eq %"struct.WTF::KeyValuePair.4"* %30, %17
  br i1 %31, label %38, label %32

32:                                               ; preds = %29
  %33 = bitcast i32* %4 to i8*
  br label %43

34:                                               ; preds = %74
  %35 = load i32*, i32** %5, align 8
  %36 = load i32, i32* %7, align 4
  %37 = zext i32 %36 to i64
  br label %38

38:                                               ; preds = %26, %2, %34, %29
  %39 = phi i64 [ %37, %34 ], [ 0, %29 ], [ 0, %2 ], [ 0, %26 ]
  %40 = phi i32* [ %35, %34 ], [ null, %29 ], [ null, %2 ], [ null, %26 ]
  %41 = getelementptr inbounds i32, i32* %40, i64 %39
  %42 = getelementptr inbounds %"struct.std::__1::__less.1845", %"struct.std::__1::__less.1845"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %42) #13
  call void @_ZNSt3__16__sortIRNS_6__lessIiiEEPiEEvT0_S5_T_(i32* %40, i32* %41, %"struct.std::__1::__less.1845"* nonnull dereferenceable(1) %3) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %42) #13
  ret void

43:                                               ; preds = %32, %74
  %44 = phi %"struct.WTF::KeyValuePair.4"* [ %30, %32 ], [ %75, %74 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33) #13
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %44, i64 0, i32 0
  %46 = load i64, i64* %45, align 8
  %47 = trunc i64 %46 to i32
  store i32 %47, i32* %4, align 4
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %44, i64 0, i32 1, i32 2
  %49 = load i8, i8* %48, align 1, !range !3
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %51, label %62

51:                                               ; preds = %43
  %52 = load i32, i32* %7, align 4
  %53 = load i32, i32* %6, align 8
  %54 = icmp eq i32 %52, %53
  br i1 %54, label %61, label %55, !prof !2

55:                                               ; preds = %51
  %56 = load i32*, i32** %5, align 8
  %57 = zext i32 %52 to i64
  %58 = getelementptr inbounds i32, i32* %56, i64 %57
  store i32 %47, i32* %58, align 4
  %59 = load i32, i32* %7, align 4
  %60 = add i32 %59, 1
  store i32 %60, i32* %7, align 4
  br label %62

61:                                               ; preds = %51
  call void @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRiEEvOT_(%"class.WTF::Vector.1700"* %0, i32* nonnull dereferenceable(4) %4) #13
  br label %62

62:                                               ; preds = %61, %55, %43
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33) #13
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %44, i64 1
  %64 = icmp eq %"struct.WTF::KeyValuePair.4"* %63, %17
  br i1 %64, label %74, label %65

65:                                               ; preds = %62, %71
  %66 = phi %"struct.WTF::KeyValuePair.4"* [ %72, %71 ], [ %63, %62 ]
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %66, i64 0, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = or i64 %68, 1
  %70 = icmp eq i64 %69, 9223372036854775807
  br i1 %70, label %71, label %74

71:                                               ; preds = %65
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %66, i64 1
  %73 = icmp eq %"struct.WTF::KeyValuePair.4"* %72, %17
  br i1 %73, label %74, label %65

74:                                               ; preds = %65, %71, %62
  %75 = phi %"struct.WTF::KeyValuePair.4"* [ %17, %62 ], [ %66, %65 ], [ %17, %71 ]
  %76 = load %"struct.WTF::KeyValuePair.4"*, %"struct.WTF::KeyValuePair.4"** %12, align 8
  %77 = load i32, i32* %14, align 8
  %78 = zext i32 %77 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %76, i64 %78
  %80 = icmp eq %"struct.WTF::KeyValuePair.4"* %75, %79
  br i1 %80, label %34, label %43
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink19PointerEventFactory8IsActiveEi(%"class.blink::PointerEventFactory"* nocapture readonly, i32) local_unnamed_addr #6 align 2 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %0, i64 0, i32 3, i32 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.4"*, %"struct.WTF::KeyValuePair.4"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.4"* %5, null
  br i1 %6, label %65, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %0, i64 0, i32 3, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = add i32 %9, -1
  %11 = zext i32 %10 to i64
  %12 = shl nsw i64 %3, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %13, %3
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %10, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %5, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %33, i64 0, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = icmp eq i64 %35, %3
  br i1 %36, label %65, label %37

37:                                               ; preds = %7
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %56, %37
  %52 = phi i64 [ %35, %37 ], [ %63, %56 ]
  %53 = phi i64 [ %32, %37 ], [ %60, %56 ]
  %54 = phi i64 [ 0, %37 ], [ %58, %56 ]
  %55 = icmp eq i64 %52, 9223372036854775807
  br i1 %55, label %65, label %56

56:                                               ; preds = %51
  %57 = icmp eq i64 %54, 0
  %58 = select i1 %57, i64 %50, i64 %54
  %59 = add i64 %58, %53
  %60 = and i64 %59, %11
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %5, i64 %60
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %61, i64 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = icmp eq i64 %63, %3
  br i1 %64, label %65, label %51

65:                                               ; preds = %51, %56, %2, %7
  %66 = phi %"struct.WTF::KeyValuePair.4"* [ null, %2 ], [ %33, %7 ], [ %61, %56 ], [ null, %51 ]
  %67 = icmp ne %"struct.WTF::KeyValuePair.4"* %66, null
  ret i1 %67
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink19PointerEventFactory9IsPrimaryERKNS_20WebPointerPropertiesE(%"class.blink::PointerEventFactory"*, %"class.blink::WebPointerProperties"* nocapture readonly dereferenceable(60)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::WebPointerProperties", %"class.blink::WebPointerProperties"* %1, i64 0, i32 7
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %16, label %6

6:                                                ; preds = %2
  %7 = sext i32 %4 to i64
  %8 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %0, i64 0, i32 5, i64 %7
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %16, label %11

11:                                               ; preds = %6
  %12 = tail call i32 @_ZNK5blink19PointerEventFactory17GetPointerEventIdERKNS_20WebPointerPropertiesE(%"class.blink::PointerEventFactory"* %0, %"class.blink::WebPointerProperties"* dereferenceable(60) %1)
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %16, label %14

14:                                               ; preds = %11
  %15 = tail call zeroext i1 @_ZNK5blink19PointerEventFactory9IsPrimaryEi(%"class.blink::PointerEventFactory"* %0, i32 %12)
  br label %16

16:                                               ; preds = %14, %11, %6, %2
  %17 = phi i1 [ true, %2 ], [ true, %6 ], [ false, %11 ], [ %15, %14 ]
  ret i1 %17
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink19PointerEventFactory17GetPointerEventIdERKNS_20WebPointerPropertiesE(%"class.blink::PointerEventFactory"* nocapture readonly, %"class.blink::WebPointerProperties"* nocapture readonly dereferenceable(60)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.blink::WebPointerProperties", %"class.blink::WebPointerProperties"* %1, i64 0, i32 7
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %100, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::WebPointerProperties", %"class.blink::WebPointerProperties"* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %0, i64 0, i32 2, i32 0, i32 0
  %10 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %9, align 8
  %11 = icmp eq %"struct.WTF::KeyValuePair"* %10, null
  br i1 %11, label %100, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %0, i64 0, i32 2, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = add i32 %14, -1
  %16 = zext i32 %15 to i64
  %17 = zext i32 %4 to i64
  %18 = mul i64 %17, 5146158508761418231
  %19 = zext i32 %8 to i64
  %20 = mul i64 %19, -682818954288075998
  %21 = add i64 %20, %18
  %22 = lshr i64 %21, 32
  %23 = trunc i64 %22 to i32
  %24 = and i32 %15, %23
  %25 = zext i32 %24 to i64
  %26 = xor i32 %23, -1
  %27 = lshr i64 %21, 55
  %28 = trunc i64 %27 to i32
  %29 = add i32 %28, %26
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 %25
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %40, i64 0, i32 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, %4
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 %25, i32 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, %8
  %47 = and i1 %43, %46
  br i1 %47, label %69, label %48

48:                                               ; preds = %12, %56
  %49 = phi i32 [ %66, %56 ], [ %45, %12 ]
  %50 = phi i32 [ %63, %56 ], [ %42, %12 ]
  %51 = phi i64 [ %60, %56 ], [ %25, %12 ]
  %52 = phi i64 [ %58, %56 ], [ 0, %12 ]
  %53 = icmp eq i32 %50, 2147483647
  %54 = icmp eq i32 %49, 2147483647
  %55 = and i1 %54, %53
  br i1 %55, label %100, label %56

56:                                               ; preds = %48
  %57 = icmp eq i64 %52, 0
  %58 = select i1 %57, i64 %39, i64 %52
  %59 = add i64 %58, %51
  %60 = and i64 %59, %16
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 %60
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %61, i64 0, i32 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, %4
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 %60, i32 0, i32 1
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, %8
  %68 = and i1 %64, %67
  br i1 %68, label %69, label %48

69:                                               ; preds = %56, %12
  %70 = phi %"struct.WTF::KeyValuePair"* [ %40, %12 ], [ %61, %56 ]
  %71 = icmp eq %"struct.WTF::KeyValuePair"* %70, null
  br i1 %71, label %100, label %72

72:                                               ; preds = %69
  br i1 %47, label %94, label %73

73:                                               ; preds = %72, %81
  %74 = phi i32 [ %91, %81 ], [ %45, %72 ]
  %75 = phi i32 [ %88, %81 ], [ %42, %72 ]
  %76 = phi i64 [ %85, %81 ], [ %25, %72 ]
  %77 = phi i64 [ %83, %81 ], [ 0, %72 ]
  %78 = icmp eq i32 %75, 2147483647
  %79 = icmp eq i32 %74, 2147483647
  %80 = and i1 %79, %78
  br i1 %80, label %100, label %81

81:                                               ; preds = %73
  %82 = icmp eq i64 %77, 0
  %83 = select i1 %82, i64 %39, i64 %77
  %84 = add i64 %83, %76
  %85 = and i64 %84, %16
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 %85
  %87 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %86, i64 0, i32 0, i32 0
  %88 = load i32, i32* %87, align 4
  %89 = icmp eq i32 %88, %4
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 %85, i32 0, i32 1
  %91 = load i32, i32* %90, align 4
  %92 = icmp eq i32 %91, %8
  %93 = and i1 %89, %92
  br i1 %93, label %94, label %73

94:                                               ; preds = %81, %72
  %95 = phi %"struct.WTF::KeyValuePair"* [ %40, %72 ], [ %86, %81 ]
  %96 = icmp eq %"struct.WTF::KeyValuePair"* %95, null
  br i1 %96, label %100, label %97

97:                                               ; preds = %94
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %95, i64 0, i32 1
  %99 = load i32, i32* %98, align 4
  br label %100

100:                                              ; preds = %48, %73, %69, %6, %94, %97, %2
  %101 = phi i32 [ 1, %2 ], [ 0, %69 ], [ %99, %97 ], [ 0, %94 ], [ 0, %6 ], [ 0, %73 ], [ 0, %48 ]
  ret i32 %101
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink19PointerEventFactory20IsActiveButtonsStateEi(%"class.blink::PointerEventFactory"*, i32) local_unnamed_addr #3 align 2 {
  %3 = alloca i64, align 8
  %4 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %0, i64 0, i32 3
  %5 = sext i32 %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashMap.0", %"class.WTF::HashMap.0"* %4, i64 0, i32 0, i32 0
  %7 = load %"struct.WTF::KeyValuePair.4"*, %"struct.WTF::KeyValuePair.4"** %6, align 8
  %8 = icmp eq %"struct.WTF::KeyValuePair.4"* %7, null
  br i1 %8, label %67, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %0, i64 0, i32 3, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = add i32 %11, -1
  %13 = zext i32 %12 to i64
  %14 = shl nsw i64 %5, 32
  %15 = xor i64 %14, -1
  %16 = add i64 %15, %5
  %17 = lshr i64 %16, 22
  %18 = xor i64 %17, %16
  %19 = shl i64 %18, 13
  %20 = xor i64 %19, -1
  %21 = add i64 %18, %20
  %22 = lshr i64 %21, 8
  %23 = xor i64 %22, %21
  %24 = mul i64 %23, 9
  %25 = lshr i64 %24, 15
  %26 = xor i64 %25, %24
  %27 = shl i64 %26, 27
  %28 = xor i64 %27, -1
  %29 = add i64 %26, %28
  %30 = lshr i64 %29, 31
  %31 = xor i64 %30, %29
  %32 = trunc i64 %31 to i32
  %33 = and i32 %12, %32
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %7, i64 %34
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %35, i64 0, i32 0
  %37 = load i64, i64* %36, align 8
  %38 = icmp eq i64 %37, %5
  br i1 %38, label %69, label %39

39:                                               ; preds = %9
  %40 = xor i32 %32, -1
  %41 = lshr i32 %32, 23
  %42 = add i32 %41, %40
  %43 = shl i32 %42, 12
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 7
  %46 = xor i32 %45, %44
  %47 = shl i32 %46, 2
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 20
  %50 = xor i32 %49, %48
  %51 = or i32 %50, 1
  %52 = zext i32 %51 to i64
  br label %53

53:                                               ; preds = %58, %39
  %54 = phi i64 [ %37, %39 ], [ %65, %58 ]
  %55 = phi i64 [ %34, %39 ], [ %62, %58 ]
  %56 = phi i64 [ 0, %39 ], [ %60, %58 ]
  %57 = icmp eq i64 %54, 9223372036854775807
  br i1 %57, label %67, label %58

58:                                               ; preds = %53
  %59 = icmp eq i64 %56, 0
  %60 = select i1 %59, i64 %52, i64 %56
  %61 = add i64 %60, %55
  %62 = and i64 %61, %13
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %7, i64 %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %63, i64 0, i32 0
  %65 = load i64, i64* %64, align 8
  %66 = icmp eq i64 %65, %5
  br i1 %66, label %69, label %53

67:                                               ; preds = %53, %2
  %68 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #13
  br label %78

69:                                               ; preds = %58, %9
  %70 = phi %"struct.WTF::KeyValuePair.4"* [ %35, %9 ], [ %63, %58 ]
  %71 = icmp eq %"struct.WTF::KeyValuePair.4"* %70, null
  %72 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #13
  br i1 %71, label %78, label %73

73:                                               ; preds = %69
  store i64 %5, i64* %3, align 8
  %74 = call { i64, i32 } @_ZNK3WTF7HashMapIlN5blink19PointerEventFactory17PointerAttributesENS_7IntHashIlEENS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIS3_EENS_18PartitionAllocatorEE2atERKl(%"class.WTF::HashMap.0"* %4, i64* nonnull dereferenceable(8) %3)
  %75 = extractvalue { i64, i32 } %74, 1
  %76 = and i32 %75, 1
  %77 = icmp ne i32 %76, 0
  br label %78

78:                                               ; preds = %69, %67, %73
  %79 = phi i8* [ %72, %69 ], [ %72, %73 ], [ %68, %67 ]
  %80 = phi i1 [ false, %69 ], [ %77, %73 ], [ false, %67 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79) #13
  ret i1 %80
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink19PointerEventFactory14GetPointerTypeEi(%"class.blink::PointerEventFactory"*, i32) local_unnamed_addr #3 align 2 {
  %3 = alloca i64, align 8
  %4 = sext i32 %1 to i64
  %5 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair.4"*, %"struct.WTF::KeyValuePair.4"** %5, align 8
  %7 = icmp eq %"struct.WTF::KeyValuePair.4"* %6, null
  br i1 %7, label %75, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %0, i64 0, i32 3, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = add i32 %10, -1
  %12 = zext i32 %11 to i64
  %13 = shl nsw i64 %4, 32
  %14 = xor i64 %13, -1
  %15 = add i64 %14, %4
  %16 = lshr i64 %15, 22
  %17 = xor i64 %16, %15
  %18 = shl i64 %17, 13
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 8
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, 9
  %24 = lshr i64 %23, 15
  %25 = xor i64 %24, %23
  %26 = shl i64 %25, 27
  %27 = xor i64 %26, -1
  %28 = add i64 %25, %27
  %29 = lshr i64 %28, 31
  %30 = xor i64 %29, %28
  %31 = trunc i64 %30 to i32
  %32 = and i32 %11, %31
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %6, i64 %33
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %34, i64 0, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %4
  br i1 %37, label %66, label %38

38:                                               ; preds = %8
  %39 = xor i32 %31, -1
  %40 = lshr i32 %31, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %52

52:                                               ; preds = %57, %38
  %53 = phi i64 [ %36, %38 ], [ %64, %57 ]
  %54 = phi i64 [ %33, %38 ], [ %61, %57 ]
  %55 = phi i64 [ 0, %38 ], [ %59, %57 ]
  %56 = icmp eq i64 %53, 9223372036854775807
  br i1 %56, label %75, label %57

57:                                               ; preds = %52
  %58 = icmp eq i64 %55, 0
  %59 = select i1 %58, i64 %51, i64 %55
  %60 = add i64 %59, %54
  %61 = and i64 %60, %12
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %6, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %62, i64 0, i32 0
  %64 = load i64, i64* %63, align 8
  %65 = icmp eq i64 %64, %4
  br i1 %65, label %66, label %52

66:                                               ; preds = %57, %8
  %67 = phi %"struct.WTF::KeyValuePair.4"* [ %34, %8 ], [ %62, %57 ]
  %68 = icmp eq %"struct.WTF::KeyValuePair.4"* %67, null
  br i1 %68, label %75, label %69

69:                                               ; preds = %66
  %70 = getelementptr inbounds %"class.blink::PointerEventFactory", %"class.blink::PointerEventFactory"* %0, i64 0, i32 3
  %71 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #13
  store i64 %4, i64* %3, align 8
  %72 = call { i64, i32 } @_ZNK3WTF7HashMapIlN5blink19PointerEventFactory17PointerAttributesENS_7IntHashIlEENS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIS3_EENS_18PartitionAllocatorEE2atERKl(%"class.WTF::HashMap.0"* %70, i64* nonnull dereferenceable(8) %3)
  %73 = extractvalue { i64, i32 } %72, 0
  %74 = trunc i64 %73 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #13
  br label %75

75:                                               ; preds = %52, %66, %2, %69
  %76 = phi i32 [ %74, %69 ], [ 0, %66 ], [ 0, %2 ], [ 0, %52 ]
  ret i32 %76
}

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare void @_ZN5blink16PointerEventInitC1Ev(%"class.blink::PointerEventInit"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64) local_unnamed_addr #3 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #13
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #13
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #13
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17IDLDictionaryBaseEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #9 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #13
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #13
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i8* %21, i8* %22) #13
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.5, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #13
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #13
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #13
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #13
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #10

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #3 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::IDLDictionaryBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::IDLDictionaryBase"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv(i8*) #3 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::IDLDictionaryBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::IDLDictionaryBase"*)***
  %4 = load void (%"class.blink::IDLDictionaryBase"*)**, void (%"class.blink::IDLDictionaryBase"*)*** %3, align 8
  %5 = load void (%"class.blink::IDLDictionaryBase"*)*, void (%"class.blink::IDLDictionaryBase"*)** %4, align 8
  tail call void %5(%"class.blink::IDLDictionaryBase"* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv(i8*) #3 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

declare void @_ZNK5blink15WebPointerEvent26WebPointerEventInRootFrameEv(%"class.blink::WebPointerEvent"* sret, %"class.blink::WebPointerEvent"*) local_unnamed_addr #2

declare void @_ZN5blink10MouseEvent38SetCoordinatesFromWebPointerPropertiesERKNS_20WebPointerPropertiesEPKNS_14LocalDOMWindowEPNS_14MouseEventInitE(%"class.blink::WebPointerProperties"* dereferenceable(60), %"class.blink::LocalDOMWindow"*, %"class.blink::MouseEventInit"*) local_unnamed_addr #2

declare %"class.blink::Page"* @_ZNK5blink5Frame7GetPageEv(%"class.blink::Frame"*) local_unnamed_addr #2

declare void @_ZN5blink12PointerEventC1ERKN3WTF12AtomicStringEPKNS_16PointerEventInitEN4base9TimeTicksENS_10MouseEvent18SyntheticEventTypeENS_17WebMenuSourceTypeE(%"class.blink::PointerEvent"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::PointerEventInit"*, i64, i32, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #3 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #13
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #13
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #13
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #3 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #3 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #3 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #13
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #11

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(128) %"class.blink::WebPointerEvent"* @_ZNK3WTF6VectorIN5blink15WebPointerEventELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1693"*, i32) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1693", %"class.WTF::Vector.1693"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector.1693", %"class.WTF::Vector.1693"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::WebPointerEvent"*, %"class.blink::WebPointerEvent"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::WebPointerEvent", %"class.blink::WebPointerEvent"* %24, i64 %25
  ret %"class.blink::WebPointerEvent"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_12PointerEventEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.224"*, %"class.blink::PointerEvent"** dereferenceable(8)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.224", %"class.WTF::Vector.224"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.224", %"class.WTF::Vector.224"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_12PointerEventEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.224"* %0, i32 %14) #13
  %15 = getelementptr inbounds %"class.WTF::Vector.224", %"class.WTF::Vector.224"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.227"*, %"class.blink::Member.227"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.227", %"class.blink::Member.227"* %16, i64 %18
  %20 = bitcast %"class.blink::PointerEvent"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.227"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #13
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_12PointerEventEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.224"*, i32) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.224", %"class.WTF::Vector.224"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.224", %"class.WTF::Vector.224"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.227"*, %"class.blink::Member.227"** %8, align 8
  %10 = icmp eq %"class.blink::Member.227"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_12PointerEventEEEEEmm(i64 %11) #13
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_12PointerEventEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #13
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.224"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #13
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.227"*, %"class.blink::Member.227"** %8, align 8
  %26 = icmp eq %"class.blink::Member.227"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.227"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #13
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #13
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #13
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !3
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9, i64 0, i64 0)) #13
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #13
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_12PointerEventEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.224"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_12PointerEventEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.224"*, i32) local_unnamed_addr #3 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.224"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.224", %"class.WTF::Vector.224"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.224"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.224", %"class.WTF::Vector.224"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #13
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #13
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_12PointerEventEEEEEmm(i64 %14) #13
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_12PointerEventEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #13
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.224", %"class.WTF::Vector.224"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.227"*, %"class.blink::Member.227"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.224", %"class.WTF::Vector.224"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member.227"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.227"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !7

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.224"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #13
  %33 = bitcast %"class.WTF::Vector.224"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #13
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #13
  %42 = bitcast %"class.WTF::Vector.224"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.224", %"class.WTF::Vector.224"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #13
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_12PointerEventEEEEEmm(i64) local_unnamed_addr #3 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.11, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_12PointerEventEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #3 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.12, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.13, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_12PointerEventEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_12PointerEventEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #3 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #13
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #13
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_12PointerEventEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_12PointerEventEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_12PointerEventEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #13
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([165 x i8], [165 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_12PointerEventEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_12PointerEventEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #3 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.227"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.227", %"class.blink::Member.227"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.227"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12PointerEventEE5TraceEPNS_7VisitorEPKv) #13
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_12PointerEventEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #3 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_12PointerEventEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #3 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::PointerEvent"*
  %4 = bitcast i8* %1 to void (%"class.blink::PointerEvent"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::PointerEvent"*, %"class.blink::Visitor"*)**, void (%"class.blink::PointerEvent"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::PointerEvent"*, %"class.blink::Visitor"*)*, void (%"class.blink::PointerEvent"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::PointerEvent"*, %"class.blink::Visitor"*)*, void (%"class.blink::PointerEvent"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::PointerEvent"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.9"*, i8 } @_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink10FloatPointEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIS3_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISD_S7_SE_EERiRKS3_EENS_18HashTableAddResultISF_S4_EEOT0_OT1_(%"class.WTF::HashTable.6"*, i32* dereferenceable(4), %"class.blink::FloatPoint"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.6", %"class.WTF::HashTable.6"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.9"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.9"* @_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink10FloatPointEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIS3_EEEESA_NS_18PartitionAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.6"* %0, %"struct.WTF::KeyValuePair.9"* null)
  %9 = load %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.9"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.6", %"class.WTF::HashTable.6"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = sext i32 %16 to i64
  %18 = shl nsw i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %19, %17
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %39, i64 0, i32 0
  %41 = load i64, i64* %40, align 8
  %42 = icmp eq i64 %41, 9223372036854775807
  br i1 %42, label %89, label %43

43:                                               ; preds = %10
  %44 = xor i32 %36, -1
  %45 = lshr i32 %36, 23
  %46 = add i32 %45, %44
  %47 = shl i32 %46, 12
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 7
  %50 = xor i32 %49, %48
  %51 = shl i32 %50, 2
  %52 = xor i32 %51, %50
  %53 = lshr i32 %52, 20
  %54 = xor i32 %53, %52
  %55 = or i32 %54, 1
  %56 = zext i32 %55 to i64
  br label %57

57:                                               ; preds = %43, %64
  %58 = phi i64 [ %41, %43 ], [ %73, %64 ]
  %59 = phi %"struct.WTF::KeyValuePair.9"* [ %39, %43 ], [ %71, %64 ]
  %60 = phi %"struct.WTF::KeyValuePair.9"* [ null, %43 ], [ %66, %64 ]
  %61 = phi i64 [ %38, %43 ], [ %70, %64 ]
  %62 = phi i64 [ 0, %43 ], [ %68, %64 ]
  %63 = icmp eq i64 %58, %17
  br i1 %63, label %108, label %64

64:                                               ; preds = %57
  %65 = icmp eq i64 %58, 9223372036854775806
  %66 = select i1 %65, %"struct.WTF::KeyValuePair.9"* %59, %"struct.WTF::KeyValuePair.9"* %60
  %67 = icmp eq i64 %62, 0
  %68 = select i1 %67, i64 %56, i64 %62
  %69 = add i64 %68, %61
  %70 = and i64 %69, %15
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %11, i64 %70
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %71, i64 0, i32 0
  %73 = load i64, i64* %72, align 8
  %74 = icmp eq i64 %73, 9223372036854775807
  br i1 %74, label %75, label %57

75:                                               ; preds = %64
  %76 = icmp eq %"struct.WTF::KeyValuePair.9"* %66, null
  br i1 %76, label %89, label %77

77:                                               ; preds = %75
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %66, i64 0, i32 0
  store i64 9223372036854775807, i64* %78, align 8
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %66, i64 0, i32 1
  %80 = bitcast %"class.blink::FloatPoint"* %79 to <2 x float>*
  store <2 x float> <float 0x7FF0000000000000, float 0x7FF0000000000000>, <2 x float>* %80, align 8
  %81 = getelementptr inbounds %"class.WTF::HashTable.6", %"class.WTF::HashTable.6"* %0, i64 0, i32 3
  %82 = load i32, i32* %81, align 8
  %83 = add i32 %82, 2147483647
  %84 = and i32 %83, 2147483647
  %85 = and i32 %82, -2147483648
  %86 = or i32 %84, %85
  store i32 %86, i32* %81, align 8
  %87 = load i32, i32* %1, align 4
  %88 = sext i32 %87 to i64
  br label %89

89:                                               ; preds = %10, %75, %77
  %90 = phi i64 [ %17, %75 ], [ %88, %77 ], [ %17, %10 ]
  %91 = phi %"struct.WTF::KeyValuePair.9"* [ %71, %75 ], [ %66, %77 ], [ %39, %10 ]
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %91, i64 0, i32 0
  store i64 %90, i64* %92, align 8
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %91, i64 0, i32 1
  %94 = bitcast %"class.blink::FloatPoint"* %2 to i64*
  %95 = bitcast %"class.blink::FloatPoint"* %93 to i64*
  %96 = load i64, i64* %94, align 4
  store i64 %96, i64* %95, align 4
  %97 = getelementptr inbounds %"class.WTF::HashTable.6", %"class.WTF::HashTable.6"* %0, i64 0, i32 2
  %98 = load i32, i32* %97, align 4
  %99 = add i32 %98, 1
  store i32 %99, i32* %97, align 4
  %100 = getelementptr inbounds %"class.WTF::HashTable.6", %"class.WTF::HashTable.6"* %0, i64 0, i32 3
  %101 = load i32, i32* %100, align 8
  %102 = add i32 %101, %99
  %103 = shl i32 %102, 1
  %104 = load i32, i32* %12, align 8
  %105 = icmp ult i32 %103, %104
  br i1 %105, label %108, label %106

106:                                              ; preds = %89
  %107 = tail call %"struct.WTF::KeyValuePair.9"* @_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink10FloatPointEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIS3_EEEESA_NS_18PartitionAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.6"* %0, %"struct.WTF::KeyValuePair.9"* %91)
  br label %108

108:                                              ; preds = %57, %89, %106
  %109 = phi i8 [ 1, %89 ], [ 1, %106 ], [ 0, %57 ]
  %110 = phi %"struct.WTF::KeyValuePair.9"* [ %91, %89 ], [ %107, %106 ], [ %59, %57 ]
  %111 = insertvalue { %"struct.WTF::KeyValuePair.9"*, i8 } undef, %"struct.WTF::KeyValuePair.9"* %110, 0
  %112 = insertvalue { %"struct.WTF::KeyValuePair.9"*, i8 } %111, i8 %109, 1
  ret { %"struct.WTF::KeyValuePair.9"*, i8 } %112
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.9"* @_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink10FloatPointEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIS3_EEEESA_NS_18PartitionAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.6"*, %"struct.WTF::KeyValuePair.9"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.6", %"class.WTF::HashTable.6"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.6", %"class.WTF::HashTable.6"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #13
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.14, i64 0, i64 0), i8* %22, i8* %23) #13
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.15, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #13
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #13
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIlN5blink10FloatPointEEEEEPKcv, i64 0, i64 0)) #13
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.9"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %77, label %38

38:                                               ; preds = %31
  %39 = add nsw i64 %33, -1
  %40 = and i64 %33, 3
  %41 = icmp ult i64 %39, 3
  br i1 %41, label %65, label %42

42:                                               ; preds = %38
  %43 = sub nsw i64 %33, %40
  br label %44

44:                                               ; preds = %44, %42
  %45 = phi i64 [ 0, %42 ], [ %62, %44 ]
  %46 = phi i64 [ %43, %42 ], [ %63, %44 ]
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %36, i64 %45, i32 0
  store i64 9223372036854775807, i64* %47, align 8
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %36, i64 %45, i32 1
  %49 = bitcast %"class.blink::FloatPoint"* %48 to <2 x float>*
  store <2 x float> <float 0x7FF0000000000000, float 0x7FF0000000000000>, <2 x float>* %49, align 8
  %50 = or i64 %45, 1
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %36, i64 %50, i32 0
  store i64 9223372036854775807, i64* %51, align 8
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %36, i64 %50, i32 1
  %53 = bitcast %"class.blink::FloatPoint"* %52 to <2 x float>*
  store <2 x float> <float 0x7FF0000000000000, float 0x7FF0000000000000>, <2 x float>* %53, align 8
  %54 = or i64 %45, 2
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %36, i64 %54, i32 0
  store i64 9223372036854775807, i64* %55, align 8
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %36, i64 %54, i32 1
  %57 = bitcast %"class.blink::FloatPoint"* %56 to <2 x float>*
  store <2 x float> <float 0x7FF0000000000000, float 0x7FF0000000000000>, <2 x float>* %57, align 8
  %58 = or i64 %45, 3
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %36, i64 %58, i32 0
  store i64 9223372036854775807, i64* %59, align 8
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %36, i64 %58, i32 1
  %61 = bitcast %"class.blink::FloatPoint"* %60 to <2 x float>*
  store <2 x float> <float 0x7FF0000000000000, float 0x7FF0000000000000>, <2 x float>* %61, align 8
  %62 = add nuw nsw i64 %45, 4
  %63 = add i64 %46, -4
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %44

65:                                               ; preds = %44, %38
  %66 = phi i64 [ 0, %38 ], [ %62, %44 ]
  %67 = icmp eq i64 %40, 0
  br i1 %67, label %77, label %68

68:                                               ; preds = %65, %68
  %69 = phi i64 [ %74, %68 ], [ %66, %65 ]
  %70 = phi i64 [ %75, %68 ], [ %40, %65 ]
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %36, i64 %69, i32 0
  store i64 9223372036854775807, i64* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %36, i64 %69, i32 1
  %73 = bitcast %"class.blink::FloatPoint"* %72 to <2 x float>*
  store <2 x float> <float 0x7FF0000000000000, float 0x7FF0000000000000>, <2 x float>* %73, align 8
  %74 = add nuw nsw i64 %69, 1
  %75 = add i64 %70, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %68, !llvm.loop !10

77:                                               ; preds = %65, %68, %31
  %78 = call %"struct.WTF::KeyValuePair.9"* @_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink10FloatPointEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIS3_EEEESA_NS_18PartitionAllocatorEE8RehashToEPS4_jSG_(%"class.WTF::HashTable.6"* %0, %"struct.WTF::KeyValuePair.9"* %36, i32 %32, %"struct.WTF::KeyValuePair.9"* %1) #13
  ret %"struct.WTF::KeyValuePair.9"* %78
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.9"* @_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink10FloatPointEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIS3_EEEESA_NS_18PartitionAllocatorEE8RehashToEPS4_jSG_(%"class.WTF::HashTable.6"*, %"struct.WTF::KeyValuePair.9"*, i32, %"struct.WTF::KeyValuePair.9"*) local_unnamed_addr #3 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.6", align 8
  %6 = bitcast %"class.WTF::HashTable.6"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.WTF::HashTable.6", %"class.WTF::HashTable.6"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.6", %"class.WTF::HashTable.6"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.6", %"class.WTF::HashTable.6"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.6", %"class.WTF::HashTable.6"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.6"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.9"* %1, %"struct.WTF::KeyValuePair.9"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.6", %"class.WTF::HashTable.6"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.6", %"class.WTF::HashTable.6"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.9"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.6"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.6"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.9"* %22 to i64
  br label %42

24:                                               ; preds = %65
  %25 = bitcast %"class.WTF::HashTable.6"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.6"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %66, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.9"* [ null, %16 ], [ %69, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %67, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = icmp eq i64 %32, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %28
  %37 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %37) #13
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %38

38:                                               ; preds = %28, %36
  %39 = getelementptr inbounds %"class.WTF::HashTable.6", %"class.WTF::HashTable.6"* %0, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, -2147483648
  store i32 %41, i32* %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #13
  ret %"struct.WTF::KeyValuePair.9"* %33

42:                                               ; preds = %21, %65
  %43 = phi i64 [ %66, %65 ], [ %23, %21 ]
  %44 = phi i32 [ %67, %65 ], [ %13, %21 ]
  %45 = phi %"struct.WTF::KeyValuePair.9"* [ %68, %65 ], [ %22, %21 ]
  %46 = phi %"struct.WTF::KeyValuePair.9"* [ %69, %65 ], [ null, %21 ]
  %47 = phi i32 [ %70, %65 ], [ 0, %21 ]
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %45, i64 %48
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %49, i64 0, i32 0
  %51 = load i64, i64* %50, align 8
  %52 = or i64 %51, 1
  %53 = icmp eq i64 %52, 9223372036854775807
  br i1 %53, label %65, label %54

54:                                               ; preds = %42
  %55 = call { %"struct.WTF::KeyValuePair.9"*, i8 } @_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink10FloatPointEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIS3_EEEESA_NS_18PartitionAllocatorEE16LookupForWritingERKl(%"class.WTF::HashTable.6"* nonnull %5, i64* dereferenceable(8) %50) #13
  %56 = extractvalue { %"struct.WTF::KeyValuePair.9"*, i8 } %55, 0
  %57 = bitcast %"struct.WTF::KeyValuePair.9"* %56 to i8*
  %58 = bitcast %"struct.WTF::KeyValuePair.9"* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* align 8 %58, i64 16, i1 false) #13
  %59 = load %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"** %15, align 8
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %59, i64 %48
  %61 = icmp eq %"struct.WTF::KeyValuePair.9"* %60, %3
  %62 = select i1 %61, %"struct.WTF::KeyValuePair.9"* %56, %"struct.WTF::KeyValuePair.9"* %46
  %63 = load i32, i32* %12, align 8
  %64 = ptrtoint %"struct.WTF::KeyValuePair.9"* %59 to i64
  br label %65

65:                                               ; preds = %42, %54
  %66 = phi i64 [ %43, %42 ], [ %64, %54 ]
  %67 = phi i32 [ %44, %42 ], [ %63, %54 ]
  %68 = phi %"struct.WTF::KeyValuePair.9"* [ %45, %42 ], [ %59, %54 ]
  %69 = phi %"struct.WTF::KeyValuePair.9"* [ %46, %42 ], [ %62, %54 ]
  %70 = add i32 %47, 1
  %71 = icmp eq i32 %70, %67
  br i1 %71, label %24, label %42
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.9"*, i8 } @_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink10FloatPointEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIS3_EEEESA_NS_18PartitionAllocatorEE16LookupForWritingERKl(%"class.WTF::HashTable.6"*, i64* dereferenceable(8)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.6", %"class.WTF::HashTable.6"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.6", %"class.WTF::HashTable.6"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = load i64, i64* %1, align 8
  %10 = shl i64 %9, 32
  %11 = xor i64 %10, -1
  %12 = add i64 %9, %11
  %13 = lshr i64 %12, 22
  %14 = xor i64 %13, %12
  %15 = shl i64 %14, 13
  %16 = xor i64 %15, -1
  %17 = add i64 %14, %16
  %18 = lshr i64 %17, 8
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, 9
  %21 = lshr i64 %20, 15
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 27
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 31
  %27 = xor i64 %26, %25
  %28 = trunc i64 %27 to i32
  %29 = and i32 %7, %28
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %4, i64 %30
  %32 = ptrtoint %"struct.WTF::KeyValuePair.9"* %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %31, i64 0, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %34, 9223372036854775807
  br i1 %35, label %53, label %36

36:                                               ; preds = %2
  %37 = xor i32 %28, -1
  %38 = lshr i32 %28, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %59

50:                                               ; preds = %66
  %51 = ptrtoint %"struct.WTF::KeyValuePair.9"* %73 to i64
  %52 = inttoptr i64 %68 to %"struct.WTF::KeyValuePair.9"*
  br label %53

53:                                               ; preds = %50, %2
  %54 = phi i64 [ %51, %50 ], [ %32, %2 ]
  %55 = phi %"struct.WTF::KeyValuePair.9"* [ %52, %50 ], [ null, %2 ]
  %56 = icmp eq %"struct.WTF::KeyValuePair.9"* %55, null
  %57 = ptrtoint %"struct.WTF::KeyValuePair.9"* %55 to i64
  %58 = select i1 %56, i64 %54, i64 %57
  br label %78

59:                                               ; preds = %66, %36
  %60 = phi i64 [ 0, %36 ], [ %68, %66 ]
  %61 = phi i64 [ %34, %36 ], [ %76, %66 ]
  %62 = phi i64 [ %32, %36 ], [ %74, %66 ]
  %63 = phi i64 [ %30, %36 ], [ %72, %66 ]
  %64 = phi i64 [ 0, %36 ], [ %70, %66 ]
  %65 = icmp eq i64 %61, %9
  br i1 %65, label %78, label %66

66:                                               ; preds = %59
  %67 = icmp eq i64 %61, 9223372036854775806
  %68 = select i1 %67, i64 %62, i64 %60
  %69 = icmp eq i64 %64, 0
  %70 = select i1 %69, i64 %49, i64 %64
  %71 = add i64 %70, %63
  %72 = and i64 %71, %8
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %4, i64 %72
  %74 = ptrtoint %"struct.WTF::KeyValuePair.9"* %73 to i64
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %73, i64 0, i32 0
  %76 = load i64, i64* %75, align 8
  %77 = icmp eq i64 %76, 9223372036854775807
  br i1 %77, label %50, label %59

78:                                               ; preds = %59, %53
  %79 = phi i64 [ %58, %53 ], [ %62, %59 ]
  %80 = phi i8 [ 0, %53 ], [ 1, %59 ]
  %81 = inttoptr i64 %79 to %"struct.WTF::KeyValuePair.9"*
  %82 = insertvalue { %"struct.WTF::KeyValuePair.9"*, i8 } undef, %"struct.WTF::KeyValuePair.9"* %81, 0
  %83 = insertvalue { %"struct.WTF::KeyValuePair.9"*, i8 } %82, i8 %80, 1
  ret { %"struct.WTF::KeyValuePair.9"*, i8 } %83
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"* } @_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink10FloatPointEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIS3_EEEESA_NS_18PartitionAllocatorEE4findERKl(%"class.WTF::HashTable.6"*, i64* dereferenceable(8)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.6", %"class.WTF::HashTable.6"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.9"* %4, null
  %6 = getelementptr inbounds %"class.WTF::HashTable.6", %"class.WTF::HashTable.6"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  br i1 %5, label %68, label %8

8:                                                ; preds = %2
  %9 = add i32 %7, -1
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %1, align 8
  %12 = shl i64 %11, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %11, %13
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %9, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %4, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %33, i64 0, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = icmp eq i64 %35, %11
  br i1 %36, label %65, label %37

37:                                               ; preds = %8
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %56, %37
  %52 = phi i64 [ %35, %37 ], [ %63, %56 ]
  %53 = phi i64 [ %32, %37 ], [ %60, %56 ]
  %54 = phi i64 [ 0, %37 ], [ %58, %56 ]
  %55 = icmp eq i64 %52, 9223372036854775807
  br i1 %55, label %68, label %56

56:                                               ; preds = %51
  %57 = icmp eq i64 %54, 0
  %58 = select i1 %57, i64 %50, i64 %54
  %59 = add i64 %58, %53
  %60 = and i64 %59, %10
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %4, i64 %60
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %61, i64 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = icmp eq i64 %63, %11
  br i1 %64, label %65, label %51

65:                                               ; preds = %56, %8
  %66 = phi %"struct.WTF::KeyValuePair.9"* [ %33, %8 ], [ %61, %56 ]
  %67 = icmp eq %"struct.WTF::KeyValuePair.9"* %66, null
  br i1 %67, label %68, label %71

68:                                               ; preds = %51, %65, %2
  %69 = zext i32 %7 to i64
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %4, i64 %69
  br label %74

71:                                               ; preds = %65
  %72 = zext i32 %7 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %4, i64 %72
  br label %74

74:                                               ; preds = %68, %71
  %75 = phi %"struct.WTF::KeyValuePair.9"* [ %66, %71 ], [ %70, %68 ]
  %76 = phi %"struct.WTF::KeyValuePair.9"* [ %73, %71 ], [ %70, %68 ]
  %77 = insertvalue { %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"* } undef, %"struct.WTF::KeyValuePair.9"* %75, 0
  %78 = insertvalue { %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"* } %77, %"struct.WTF::KeyValuePair.9"* %76, 1
  ret { %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"* } %78
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.4"*, i8 } @_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink19PointerEventFactory17PointerAttributesEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIS4_EEEESB_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S8_SF_EERKiS4_EENS_18HashTableAddResultISG_S5_EEOT0_OT1_(%"class.WTF::HashTable.1"*, i32* dereferenceable(4), %"struct.blink::PointerEventFactory::PointerAttributes"* dereferenceable(12)) local_unnamed_addr #3 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.1", %"class.WTF::HashTable.1"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.4"*, %"struct.WTF::KeyValuePair.4"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.4"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.4"* @_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink19PointerEventFactory17PointerAttributesEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIS4_EEEESB_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.1"* %0, %"struct.WTF::KeyValuePair.4"* null)
  %9 = load %"struct.WTF::KeyValuePair.4"*, %"struct.WTF::KeyValuePair.4"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.4"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.1", %"class.WTF::HashTable.1"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = sext i32 %16 to i64
  %18 = shl nsw i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %19, %17
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %39, i64 0, i32 0
  %41 = load i64, i64* %40, align 8
  %42 = icmp eq i64 %41, 9223372036854775807
  br i1 %42, label %89, label %43

43:                                               ; preds = %10
  %44 = xor i32 %36, -1
  %45 = lshr i32 %36, 23
  %46 = add i32 %45, %44
  %47 = shl i32 %46, 12
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 7
  %50 = xor i32 %49, %48
  %51 = shl i32 %50, 2
  %52 = xor i32 %51, %50
  %53 = lshr i32 %52, 20
  %54 = xor i32 %53, %52
  %55 = or i32 %54, 1
  %56 = zext i32 %55 to i64
  br label %57

57:                                               ; preds = %43, %64
  %58 = phi i64 [ %41, %43 ], [ %73, %64 ]
  %59 = phi %"struct.WTF::KeyValuePair.4"* [ %39, %43 ], [ %71, %64 ]
  %60 = phi %"struct.WTF::KeyValuePair.4"* [ null, %43 ], [ %66, %64 ]
  %61 = phi i64 [ %38, %43 ], [ %70, %64 ]
  %62 = phi i64 [ 0, %43 ], [ %68, %64 ]
  %63 = icmp eq i64 %58, %17
  br i1 %63, label %115, label %64

64:                                               ; preds = %57
  %65 = icmp eq i64 %58, 9223372036854775806
  %66 = select i1 %65, %"struct.WTF::KeyValuePair.4"* %59, %"struct.WTF::KeyValuePair.4"* %60
  %67 = icmp eq i64 %62, 0
  %68 = select i1 %67, i64 %56, i64 %62
  %69 = add i64 %68, %61
  %70 = and i64 %69, %15
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %11, i64 %70
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %71, i64 0, i32 0
  %73 = load i64, i64* %72, align 8
  %74 = icmp eq i64 %73, 9223372036854775807
  br i1 %74, label %75, label %57

75:                                               ; preds = %64
  %76 = icmp eq %"struct.WTF::KeyValuePair.4"* %66, null
  br i1 %76, label %89, label %77

77:                                               ; preds = %75
  %78 = bitcast %"struct.WTF::KeyValuePair.4"* %66 to <2 x i64>*
  store <2 x i64> <i64 9223372036854775807, i64 0>, <2 x i64>* %78, align 8
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %66, i64 0, i32 1, i32 1
  %80 = bitcast i8* %79 to i32*
  store i32 256, i32* %80, align 8
  %81 = getelementptr inbounds %"class.WTF::HashTable.1", %"class.WTF::HashTable.1"* %0, i64 0, i32 3
  %82 = load i32, i32* %81, align 8
  %83 = add i32 %82, 2147483647
  %84 = and i32 %83, 2147483647
  %85 = and i32 %82, -2147483648
  %86 = or i32 %84, %85
  store i32 %86, i32* %81, align 8
  %87 = load i32, i32* %1, align 4
  %88 = sext i32 %87 to i64
  br label %89

89:                                               ; preds = %10, %75, %77
  %90 = phi i64 [ %17, %75 ], [ %88, %77 ], [ %17, %10 ]
  %91 = phi %"struct.WTF::KeyValuePair.4"* [ %71, %75 ], [ %66, %77 ], [ %39, %10 ]
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %91, i64 0, i32 0
  store i64 %90, i64* %92, align 8
  %93 = getelementptr inbounds %"struct.blink::PointerEventFactory::PointerAttributes", %"struct.blink::PointerEventFactory::PointerAttributes"* %2, i64 0, i32 0, i32 0, i32 0
  %94 = load i32, i32* %93, align 4
  %95 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %91, i64 0, i32 1, i32 0, i32 0, i32 0
  store i32 %94, i32* %95, align 4
  %96 = getelementptr inbounds %"struct.blink::PointerEventFactory::PointerAttributes", %"struct.blink::PointerEventFactory::PointerAttributes"* %2, i64 0, i32 0, i32 0, i32 1
  %97 = load i32, i32* %96, align 4
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %91, i64 0, i32 1, i32 0, i32 0, i32 1
  store i32 %97, i32* %98, align 4
  %99 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %91, i64 0, i32 1, i32 1
  %100 = getelementptr inbounds %"struct.blink::PointerEventFactory::PointerAttributes", %"struct.blink::PointerEventFactory::PointerAttributes"* %2, i64 0, i32 1
  %101 = bitcast i8* %100 to i16*
  %102 = bitcast i8* %99 to i16*
  %103 = load i16, i16* %101, align 4
  store i16 %103, i16* %102, align 4
  %104 = getelementptr inbounds %"class.WTF::HashTable.1", %"class.WTF::HashTable.1"* %0, i64 0, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = add i32 %105, 1
  store i32 %106, i32* %104, align 4
  %107 = getelementptr inbounds %"class.WTF::HashTable.1", %"class.WTF::HashTable.1"* %0, i64 0, i32 3
  %108 = load i32, i32* %107, align 8
  %109 = add i32 %108, %106
  %110 = shl i32 %109, 1
  %111 = load i32, i32* %12, align 8
  %112 = icmp ult i32 %110, %111
  br i1 %112, label %115, label %113

113:                                              ; preds = %89
  %114 = tail call %"struct.WTF::KeyValuePair.4"* @_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink19PointerEventFactory17PointerAttributesEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIS4_EEEESB_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.1"* %0, %"struct.WTF::KeyValuePair.4"* %91)
  br label %115

115:                                              ; preds = %57, %89, %113
  %116 = phi i8 [ 1, %89 ], [ 1, %113 ], [ 0, %57 ]
  %117 = phi %"struct.WTF::KeyValuePair.4"* [ %91, %89 ], [ %114, %113 ], [ %59, %57 ]
  %118 = insertvalue { %"struct.WTF::KeyValuePair.4"*, i8 } undef, %"struct.WTF::KeyValuePair.4"* %117, 0
  %119 = insertvalue { %"struct.WTF::KeyValuePair.4"*, i8 } %118, i8 %116, 1
  ret { %"struct.WTF::KeyValuePair.4"*, i8 } %119
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.4"* @_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink19PointerEventFactory17PointerAttributesEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIS4_EEEESB_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.1"*, %"struct.WTF::KeyValuePair.4"*) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.1", %"class.WTF::HashTable.1"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.1", %"class.WTF::HashTable.1"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #13
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.14, i64 0, i64 0), i8* %22, i8* %23) #13
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.15, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #13
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #13
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = mul nuw nsw i64 %33, 24
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([118 x i8], [118 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIlN5blink19PointerEventFactory17PointerAttributesEEEEEPKcv, i64 0, i64 0)) #13
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.4"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %82, label %38

38:                                               ; preds = %31
  %39 = add nsw i64 %33, -1
  %40 = and i64 %33, 3
  %41 = icmp ult i64 %39, 3
  br i1 %41, label %69, label %42

42:                                               ; preds = %38
  %43 = sub nsw i64 %33, %40
  br label %44

44:                                               ; preds = %44, %42
  %45 = phi i64 [ 0, %42 ], [ %66, %44 ]
  %46 = phi i64 [ %43, %42 ], [ %67, %44 ]
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %36, i64 %45, i32 0
  %48 = bitcast i64* %47 to <2 x i64>*
  store <2 x i64> <i64 9223372036854775807, i64 0>, <2 x i64>* %48, align 8
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %36, i64 %45, i32 1, i32 1
  %50 = bitcast i8* %49 to i32*
  store i32 256, i32* %50, align 8
  %51 = or i64 %45, 1
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %36, i64 %51, i32 0
  %53 = bitcast i64* %52 to <2 x i64>*
  store <2 x i64> <i64 9223372036854775807, i64 0>, <2 x i64>* %53, align 8
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %36, i64 %51, i32 1, i32 1
  %55 = bitcast i8* %54 to i32*
  store i32 256, i32* %55, align 8
  %56 = or i64 %45, 2
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %36, i64 %56, i32 0
  %58 = bitcast i64* %57 to <2 x i64>*
  store <2 x i64> <i64 9223372036854775807, i64 0>, <2 x i64>* %58, align 8
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %36, i64 %56, i32 1, i32 1
  %60 = bitcast i8* %59 to i32*
  store i32 256, i32* %60, align 8
  %61 = or i64 %45, 3
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %36, i64 %61, i32 0
  %63 = bitcast i64* %62 to <2 x i64>*
  store <2 x i64> <i64 9223372036854775807, i64 0>, <2 x i64>* %63, align 8
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %36, i64 %61, i32 1, i32 1
  %65 = bitcast i8* %64 to i32*
  store i32 256, i32* %65, align 8
  %66 = add nuw nsw i64 %45, 4
  %67 = add i64 %46, -4
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %69, label %44

69:                                               ; preds = %44, %38
  %70 = phi i64 [ 0, %38 ], [ %66, %44 ]
  %71 = icmp eq i64 %40, 0
  br i1 %71, label %82, label %72

72:                                               ; preds = %69, %72
  %73 = phi i64 [ %79, %72 ], [ %70, %69 ]
  %74 = phi i64 [ %80, %72 ], [ %40, %69 ]
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %36, i64 %73, i32 0
  %76 = bitcast i64* %75 to <2 x i64>*
  store <2 x i64> <i64 9223372036854775807, i64 0>, <2 x i64>* %76, align 8
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %36, i64 %73, i32 1, i32 1
  %78 = bitcast i8* %77 to i32*
  store i32 256, i32* %78, align 8
  %79 = add nuw nsw i64 %73, 1
  %80 = add i64 %74, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %72, !llvm.loop !11

82:                                               ; preds = %69, %72, %31
  %83 = call %"struct.WTF::KeyValuePair.4"* @_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink19PointerEventFactory17PointerAttributesEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIS4_EEEESB_NS_18PartitionAllocatorEE8RehashToEPS5_jSH_(%"class.WTF::HashTable.1"* %0, %"struct.WTF::KeyValuePair.4"* %36, i32 %32, %"struct.WTF::KeyValuePair.4"* %1) #13
  ret %"struct.WTF::KeyValuePair.4"* %83
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.4"* @_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink19PointerEventFactory17PointerAttributesEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIS4_EEEESB_NS_18PartitionAllocatorEE8RehashToEPS5_jSH_(%"class.WTF::HashTable.1"*, %"struct.WTF::KeyValuePair.4"*, i32, %"struct.WTF::KeyValuePair.4"*) local_unnamed_addr #3 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.1", align 8
  %6 = bitcast %"class.WTF::HashTable.1"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.WTF::HashTable.1", %"class.WTF::HashTable.1"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.1", %"class.WTF::HashTable.1"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.1", %"class.WTF::HashTable.1"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.1", %"class.WTF::HashTable.1"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.1"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.4"* %1, %"struct.WTF::KeyValuePair.4"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.1", %"class.WTF::HashTable.1"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.1", %"class.WTF::HashTable.1"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.4"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.1"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.1"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.4"*, %"struct.WTF::KeyValuePair.4"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.4"* %22 to i64
  br label %42

24:                                               ; preds = %65
  %25 = bitcast %"class.WTF::HashTable.1"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.1"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %66, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.4"* [ null, %16 ], [ %69, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %67, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = icmp eq i64 %32, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %28
  %37 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %37) #13
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %38

38:                                               ; preds = %28, %36
  %39 = getelementptr inbounds %"class.WTF::HashTable.1", %"class.WTF::HashTable.1"* %0, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, -2147483648
  store i32 %41, i32* %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #13
  ret %"struct.WTF::KeyValuePair.4"* %33

42:                                               ; preds = %21, %65
  %43 = phi i64 [ %66, %65 ], [ %23, %21 ]
  %44 = phi i32 [ %67, %65 ], [ %13, %21 ]
  %45 = phi %"struct.WTF::KeyValuePair.4"* [ %68, %65 ], [ %22, %21 ]
  %46 = phi %"struct.WTF::KeyValuePair.4"* [ %69, %65 ], [ null, %21 ]
  %47 = phi i32 [ %70, %65 ], [ 0, %21 ]
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %45, i64 %48
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %49, i64 0, i32 0
  %51 = load i64, i64* %50, align 8
  %52 = or i64 %51, 1
  %53 = icmp eq i64 %52, 9223372036854775807
  br i1 %53, label %65, label %54

54:                                               ; preds = %42
  %55 = call { %"struct.WTF::KeyValuePair.4"*, i8 } @_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink19PointerEventFactory17PointerAttributesEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIS4_EEEESB_NS_18PartitionAllocatorEE16LookupForWritingERKl(%"class.WTF::HashTable.1"* nonnull %5, i64* dereferenceable(8) %50) #13
  %56 = extractvalue { %"struct.WTF::KeyValuePair.4"*, i8 } %55, 0
  %57 = bitcast %"struct.WTF::KeyValuePair.4"* %56 to i8*
  %58 = bitcast %"struct.WTF::KeyValuePair.4"* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* align 8 %58, i64 24, i1 false) #13
  %59 = load %"struct.WTF::KeyValuePair.4"*, %"struct.WTF::KeyValuePair.4"** %15, align 8
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %59, i64 %48
  %61 = icmp eq %"struct.WTF::KeyValuePair.4"* %60, %3
  %62 = select i1 %61, %"struct.WTF::KeyValuePair.4"* %56, %"struct.WTF::KeyValuePair.4"* %46
  %63 = load i32, i32* %12, align 8
  %64 = ptrtoint %"struct.WTF::KeyValuePair.4"* %59 to i64
  br label %65

65:                                               ; preds = %42, %54
  %66 = phi i64 [ %43, %42 ], [ %64, %54 ]
  %67 = phi i32 [ %44, %42 ], [ %63, %54 ]
  %68 = phi %"struct.WTF::KeyValuePair.4"* [ %45, %42 ], [ %59, %54 ]
  %69 = phi %"struct.WTF::KeyValuePair.4"* [ %46, %42 ], [ %62, %54 ]
  %70 = add i32 %47, 1
  %71 = icmp eq i32 %70, %67
  br i1 %71, label %24, label %42
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.4"*, i8 } @_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink19PointerEventFactory17PointerAttributesEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIS4_EEEESB_NS_18PartitionAllocatorEE16LookupForWritingERKl(%"class.WTF::HashTable.1"*, i64* dereferenceable(8)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.1", %"class.WTF::HashTable.1"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.4"*, %"struct.WTF::KeyValuePair.4"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.1", %"class.WTF::HashTable.1"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = load i64, i64* %1, align 8
  %10 = shl i64 %9, 32
  %11 = xor i64 %10, -1
  %12 = add i64 %9, %11
  %13 = lshr i64 %12, 22
  %14 = xor i64 %13, %12
  %15 = shl i64 %14, 13
  %16 = xor i64 %15, -1
  %17 = add i64 %14, %16
  %18 = lshr i64 %17, 8
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, 9
  %21 = lshr i64 %20, 15
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 27
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 31
  %27 = xor i64 %26, %25
  %28 = trunc i64 %27 to i32
  %29 = and i32 %7, %28
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %4, i64 %30
  %32 = ptrtoint %"struct.WTF::KeyValuePair.4"* %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %31, i64 0, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %34, 9223372036854775807
  br i1 %35, label %53, label %36

36:                                               ; preds = %2
  %37 = xor i32 %28, -1
  %38 = lshr i32 %28, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %59

50:                                               ; preds = %66
  %51 = ptrtoint %"struct.WTF::KeyValuePair.4"* %73 to i64
  %52 = inttoptr i64 %68 to %"struct.WTF::KeyValuePair.4"*
  br label %53

53:                                               ; preds = %50, %2
  %54 = phi i64 [ %51, %50 ], [ %32, %2 ]
  %55 = phi %"struct.WTF::KeyValuePair.4"* [ %52, %50 ], [ null, %2 ]
  %56 = icmp eq %"struct.WTF::KeyValuePair.4"* %55, null
  %57 = ptrtoint %"struct.WTF::KeyValuePair.4"* %55 to i64
  %58 = select i1 %56, i64 %54, i64 %57
  br label %78

59:                                               ; preds = %66, %36
  %60 = phi i64 [ 0, %36 ], [ %68, %66 ]
  %61 = phi i64 [ %34, %36 ], [ %76, %66 ]
  %62 = phi i64 [ %32, %36 ], [ %74, %66 ]
  %63 = phi i64 [ %30, %36 ], [ %72, %66 ]
  %64 = phi i64 [ 0, %36 ], [ %70, %66 ]
  %65 = icmp eq i64 %61, %9
  br i1 %65, label %78, label %66

66:                                               ; preds = %59
  %67 = icmp eq i64 %61, 9223372036854775806
  %68 = select i1 %67, i64 %62, i64 %60
  %69 = icmp eq i64 %64, 0
  %70 = select i1 %69, i64 %49, i64 %64
  %71 = add i64 %70, %63
  %72 = and i64 %71, %8
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %4, i64 %72
  %74 = ptrtoint %"struct.WTF::KeyValuePair.4"* %73 to i64
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %73, i64 0, i32 0
  %76 = load i64, i64* %75, align 8
  %77 = icmp eq i64 %76, 9223372036854775807
  br i1 %77, label %50, label %59

78:                                               ; preds = %59, %53
  %79 = phi i64 [ %58, %53 ], [ %62, %59 ]
  %80 = phi i8 [ 0, %53 ], [ 1, %59 ]
  %81 = inttoptr i64 %79 to %"struct.WTF::KeyValuePair.4"*
  %82 = insertvalue { %"struct.WTF::KeyValuePair.4"*, i8 } undef, %"struct.WTF::KeyValuePair.4"* %81, 0
  %83 = insertvalue { %"struct.WTF::KeyValuePair.4"*, i8 } %82, i8 %80, 1
  ret { %"struct.WTF::KeyValuePair.4"*, i8 } %83
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.4"*, i8 } @_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink19PointerEventFactory17PointerAttributesEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIS4_EEEESB_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S8_SF_EERiS4_EENS_18HashTableAddResultISG_S5_EEOT0_OT1_(%"class.WTF::HashTable.1"*, i32* dereferenceable(4), %"struct.blink::PointerEventFactory::PointerAttributes"* dereferenceable(12)) local_unnamed_addr #3 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.1", %"class.WTF::HashTable.1"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.4"*, %"struct.WTF::KeyValuePair.4"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.4"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.4"* @_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink19PointerEventFactory17PointerAttributesEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIS4_EEEESB_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.1"* %0, %"struct.WTF::KeyValuePair.4"* null)
  %9 = load %"struct.WTF::KeyValuePair.4"*, %"struct.WTF::KeyValuePair.4"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.4"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.1", %"class.WTF::HashTable.1"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = sext i32 %16 to i64
  %18 = shl nsw i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %19, %17
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %39, i64 0, i32 0
  %41 = load i64, i64* %40, align 8
  %42 = icmp eq i64 %41, 9223372036854775807
  br i1 %42, label %89, label %43

43:                                               ; preds = %10
  %44 = xor i32 %36, -1
  %45 = lshr i32 %36, 23
  %46 = add i32 %45, %44
  %47 = shl i32 %46, 12
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 7
  %50 = xor i32 %49, %48
  %51 = shl i32 %50, 2
  %52 = xor i32 %51, %50
  %53 = lshr i32 %52, 20
  %54 = xor i32 %53, %52
  %55 = or i32 %54, 1
  %56 = zext i32 %55 to i64
  br label %57

57:                                               ; preds = %43, %64
  %58 = phi i64 [ %41, %43 ], [ %73, %64 ]
  %59 = phi %"struct.WTF::KeyValuePair.4"* [ %39, %43 ], [ %71, %64 ]
  %60 = phi %"struct.WTF::KeyValuePair.4"* [ null, %43 ], [ %66, %64 ]
  %61 = phi i64 [ %38, %43 ], [ %70, %64 ]
  %62 = phi i64 [ 0, %43 ], [ %68, %64 ]
  %63 = icmp eq i64 %58, %17
  br i1 %63, label %115, label %64

64:                                               ; preds = %57
  %65 = icmp eq i64 %58, 9223372036854775806
  %66 = select i1 %65, %"struct.WTF::KeyValuePair.4"* %59, %"struct.WTF::KeyValuePair.4"* %60
  %67 = icmp eq i64 %62, 0
  %68 = select i1 %67, i64 %56, i64 %62
  %69 = add i64 %68, %61
  %70 = and i64 %69, %15
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %11, i64 %70
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %71, i64 0, i32 0
  %73 = load i64, i64* %72, align 8
  %74 = icmp eq i64 %73, 9223372036854775807
  br i1 %74, label %75, label %57

75:                                               ; preds = %64
  %76 = icmp eq %"struct.WTF::KeyValuePair.4"* %66, null
  br i1 %76, label %89, label %77

77:                                               ; preds = %75
  %78 = bitcast %"struct.WTF::KeyValuePair.4"* %66 to <2 x i64>*
  store <2 x i64> <i64 9223372036854775807, i64 0>, <2 x i64>* %78, align 8
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %66, i64 0, i32 1, i32 1
  %80 = bitcast i8* %79 to i32*
  store i32 256, i32* %80, align 8
  %81 = getelementptr inbounds %"class.WTF::HashTable.1", %"class.WTF::HashTable.1"* %0, i64 0, i32 3
  %82 = load i32, i32* %81, align 8
  %83 = add i32 %82, 2147483647
  %84 = and i32 %83, 2147483647
  %85 = and i32 %82, -2147483648
  %86 = or i32 %84, %85
  store i32 %86, i32* %81, align 8
  %87 = load i32, i32* %1, align 4
  %88 = sext i32 %87 to i64
  br label %89

89:                                               ; preds = %10, %75, %77
  %90 = phi i64 [ %17, %75 ], [ %88, %77 ], [ %17, %10 ]
  %91 = phi %"struct.WTF::KeyValuePair.4"* [ %71, %75 ], [ %66, %77 ], [ %39, %10 ]
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %91, i64 0, i32 0
  store i64 %90, i64* %92, align 8
  %93 = getelementptr inbounds %"struct.blink::PointerEventFactory::PointerAttributes", %"struct.blink::PointerEventFactory::PointerAttributes"* %2, i64 0, i32 0, i32 0, i32 0
  %94 = load i32, i32* %93, align 4
  %95 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %91, i64 0, i32 1, i32 0, i32 0, i32 0
  store i32 %94, i32* %95, align 4
  %96 = getelementptr inbounds %"struct.blink::PointerEventFactory::PointerAttributes", %"struct.blink::PointerEventFactory::PointerAttributes"* %2, i64 0, i32 0, i32 0, i32 1
  %97 = load i32, i32* %96, align 4
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %91, i64 0, i32 1, i32 0, i32 0, i32 1
  store i32 %97, i32* %98, align 4
  %99 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %91, i64 0, i32 1, i32 1
  %100 = getelementptr inbounds %"struct.blink::PointerEventFactory::PointerAttributes", %"struct.blink::PointerEventFactory::PointerAttributes"* %2, i64 0, i32 1
  %101 = bitcast i8* %100 to i16*
  %102 = bitcast i8* %99 to i16*
  %103 = load i16, i16* %101, align 4
  store i16 %103, i16* %102, align 4
  %104 = getelementptr inbounds %"class.WTF::HashTable.1", %"class.WTF::HashTable.1"* %0, i64 0, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = add i32 %105, 1
  store i32 %106, i32* %104, align 4
  %107 = getelementptr inbounds %"class.WTF::HashTable.1", %"class.WTF::HashTable.1"* %0, i64 0, i32 3
  %108 = load i32, i32* %107, align 8
  %109 = add i32 %108, %106
  %110 = shl i32 %109, 1
  %111 = load i32, i32* %12, align 8
  %112 = icmp ult i32 %110, %111
  br i1 %112, label %115, label %113

113:                                              ; preds = %89
  %114 = tail call %"struct.WTF::KeyValuePair.4"* @_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink19PointerEventFactory17PointerAttributesEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIS4_EEEESB_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.1"* %0, %"struct.WTF::KeyValuePair.4"* %91)
  br label %115

115:                                              ; preds = %57, %89, %113
  %116 = phi i8 [ 1, %89 ], [ 1, %113 ], [ 0, %57 ]
  %117 = phi %"struct.WTF::KeyValuePair.4"* [ %91, %89 ], [ %114, %113 ], [ %59, %57 ]
  %118 = insertvalue { %"struct.WTF::KeyValuePair.4"*, i8 } undef, %"struct.WTF::KeyValuePair.4"* %117, 0
  %119 = insertvalue { %"struct.WTF::KeyValuePair.4"*, i8 } %118, i8 %116, 1
  ret { %"struct.WTF::KeyValuePair.4"*, i8 } %119
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINSt3__14pairIiiEENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_8PairHashIiiEENS_18HashMapValueTraitsINS_14PairHashTraitsINS_29UnsignedWithZeroKeyHashTraitsIiEESC_EENS_10HashTraitsIiEEEESD_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISG_S8_SH_EERKN5blink19PointerEventFactory10IncomingIdERiEENS_18HashTableAddResultISI_S5_EEOT0_OT1_(%"class.WTF::HashTable"*, %"struct.blink::PointerEventFactory::IncomingId"* dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #3 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINSt3__14pairIiiEENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_8PairHashIiiEENS_18HashMapValueTraitsINS_14PairHashTraitsINS_29UnsignedWithZeroKeyHashTraitsIiEESC_EENS_10HashTraitsIiEEEESD_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.blink::PointerEventFactory::IncomingId", %"struct.blink::PointerEventFactory::IncomingId"* %1, i64 0, i32 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"struct.blink::PointerEventFactory::IncomingId", %"struct.blink::PointerEventFactory::IncomingId"* %1, i64 0, i32 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %17 to i64
  %21 = mul i64 %20, 5146158508761418231
  %22 = zext i32 %19 to i64
  %23 = mul i64 %22, -682818954288075998
  %24 = add i64 %23, %21
  %25 = lshr i64 %24, 32
  %26 = trunc i64 %25 to i32
  %27 = and i32 %14, %26
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %28
  %30 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %29, i64 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 2147483647
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %28, i32 0, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 2147483647
  %36 = and i1 %32, %35
  br i1 %36, label %89, label %37

37:                                               ; preds = %10
  %38 = xor i32 %26, -1
  %39 = lshr i64 %24, 55
  %40 = trunc i64 %39 to i32
  %41 = add i32 %40, %38
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %52

52:                                               ; preds = %37, %62
  %53 = phi i32 [ %34, %37 ], [ %74, %62 ]
  %54 = phi i32 [ %31, %37 ], [ %71, %62 ]
  %55 = phi %"struct.WTF::KeyValuePair"* [ %29, %37 ], [ %69, %62 ]
  %56 = phi %"struct.WTF::KeyValuePair"* [ null, %37 ], [ %64, %62 ]
  %57 = phi i64 [ %28, %37 ], [ %68, %62 ]
  %58 = phi i64 [ 0, %37 ], [ %66, %62 ]
  %59 = icmp eq i32 %54, %17
  %60 = icmp eq i32 %53, %19
  %61 = and i1 %59, %60
  br i1 %61, label %108, label %62

62:                                               ; preds = %52
  %63 = icmp eq i32 %54, 2147483646
  %64 = select i1 %63, %"struct.WTF::KeyValuePair"* %55, %"struct.WTF::KeyValuePair"* %56
  %65 = icmp eq i64 %58, 0
  %66 = select i1 %65, i64 %51, i64 %58
  %67 = add i64 %66, %57
  %68 = and i64 %67, %15
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %68
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %69, i64 0, i32 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, 2147483647
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %68, i32 0, i32 1
  %74 = load i32, i32* %73, align 4
  %75 = icmp eq i32 %74, 2147483647
  %76 = and i1 %72, %75
  br i1 %76, label %77, label %52

77:                                               ; preds = %62
  %78 = icmp eq %"struct.WTF::KeyValuePair"* %64, null
  br i1 %78, label %89, label %79

79:                                               ; preds = %77
  %80 = bitcast %"struct.WTF::KeyValuePair"* %64 to i64*
  store i64 9223372034707292159, i64* %80, align 4
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 0, i32 1
  store i32 0, i32* %81, align 4
  %82 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %83 = load i32, i32* %82, align 8
  %84 = add i32 %83, 2147483647
  %85 = and i32 %84, 2147483647
  %86 = and i32 %83, -2147483648
  %87 = or i32 %85, %86
  store i32 %87, i32* %82, align 8
  %88 = load i32, i32* %16, align 4
  br label %89

89:                                               ; preds = %10, %77, %79
  %90 = phi i32 [ %88, %79 ], [ %17, %77 ], [ %17, %10 ]
  %91 = phi %"struct.WTF::KeyValuePair"* [ %64, %79 ], [ %69, %77 ], [ %29, %10 ]
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %91, i64 0, i32 0, i32 0
  store i32 %90, i32* %92, align 4
  %93 = load i32, i32* %18, align 4
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %91, i64 0, i32 0, i32 1
  store i32 %93, i32* %94, align 4
  %95 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %91, i64 0, i32 1
  %96 = load i32, i32* %2, align 4
  store i32 %96, i32* %95, align 4
  %97 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %98 = load i32, i32* %97, align 4
  %99 = add i32 %98, 1
  store i32 %99, i32* %97, align 4
  %100 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %101 = load i32, i32* %100, align 8
  %102 = add i32 %101, %99
  %103 = shl i32 %102, 1
  %104 = load i32, i32* %12, align 8
  %105 = icmp ult i32 %103, %104
  br i1 %105, label %108, label %106

106:                                              ; preds = %89
  %107 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINSt3__14pairIiiEENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_8PairHashIiiEENS_18HashMapValueTraitsINS_14PairHashTraitsINS_29UnsignedWithZeroKeyHashTraitsIiEESC_EENS_10HashTraitsIiEEEESD_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %91)
  br label %108

108:                                              ; preds = %52, %89, %106
  %109 = phi i8 [ 1, %89 ], [ 1, %106 ], [ 0, %52 ]
  %110 = phi %"struct.WTF::KeyValuePair"* [ %91, %89 ], [ %107, %106 ], [ %55, %52 ]
  %111 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %110, 0
  %112 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %111, i8 %109, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %112
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINSt3__14pairIiiEENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_8PairHashIiiEENS_18HashMapValueTraitsINS_14PairHashTraitsINS_29UnsignedWithZeroKeyHashTraitsIiEESC_EENS_10HashTraitsIiEEEESD_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #13
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.14, i64 0, i64 0), i8* %22, i8* %23) #13
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.15, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #13
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #13
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = mul nuw nsw i64 %33, 12
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINSt3__14pairIiiEEiEEEEPKcv, i64 0, i64 0)) #13
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %77, label %38

38:                                               ; preds = %31
  %39 = add nsw i64 %33, -1
  %40 = and i64 %33, 3
  %41 = icmp ult i64 %39, 3
  br i1 %41, label %65, label %42

42:                                               ; preds = %38
  %43 = sub nsw i64 %33, %40
  br label %44

44:                                               ; preds = %44, %42
  %45 = phi i64 [ 0, %42 ], [ %62, %44 ]
  %46 = phi i64 [ %43, %42 ], [ %63, %44 ]
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %45
  %48 = bitcast %"struct.WTF::KeyValuePair"* %47 to i64*
  store i64 9223372034707292159, i64* %48, align 4
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %45, i32 1
  store i32 0, i32* %49, align 4
  %50 = or i64 %45, 1
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %50
  %52 = bitcast %"struct.WTF::KeyValuePair"* %51 to i64*
  store i64 9223372034707292159, i64* %52, align 4
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %50, i32 1
  store i32 0, i32* %53, align 4
  %54 = or i64 %45, 2
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %54
  %56 = bitcast %"struct.WTF::KeyValuePair"* %55 to i64*
  store i64 9223372034707292159, i64* %56, align 4
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %54, i32 1
  store i32 0, i32* %57, align 4
  %58 = or i64 %45, 3
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %58
  %60 = bitcast %"struct.WTF::KeyValuePair"* %59 to i64*
  store i64 9223372034707292159, i64* %60, align 4
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %58, i32 1
  store i32 0, i32* %61, align 4
  %62 = add nuw nsw i64 %45, 4
  %63 = add i64 %46, -4
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %44

65:                                               ; preds = %44, %38
  %66 = phi i64 [ 0, %38 ], [ %62, %44 ]
  %67 = icmp eq i64 %40, 0
  br i1 %67, label %77, label %68

68:                                               ; preds = %65, %68
  %69 = phi i64 [ %74, %68 ], [ %66, %65 ]
  %70 = phi i64 [ %75, %68 ], [ %40, %65 ]
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %69
  %72 = bitcast %"struct.WTF::KeyValuePair"* %71 to i64*
  store i64 9223372034707292159, i64* %72, align 4
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %69, i32 1
  store i32 0, i32* %73, align 4
  %74 = add nuw nsw i64 %69, 1
  %75 = add i64 %70, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %68, !llvm.loop !12

77:                                               ; preds = %65, %68, %31
  %78 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINSt3__14pairIiiEENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_8PairHashIiiEENS_18HashMapValueTraitsINS_14PairHashTraitsINS_29UnsignedWithZeroKeyHashTraitsIiEESC_EENS_10HashTraitsIiEEEESD_NS_18PartitionAllocatorEE8RehashToEPS5_jSJ_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %36, i32 %32, %"struct.WTF::KeyValuePair"* %1) #13
  ret %"struct.WTF::KeyValuePair"* %78
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINSt3__14pairIiiEENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_8PairHashIiiEENS_18HashMapValueTraitsINS_14PairHashTraitsINS_29UnsignedWithZeroKeyHashTraitsIiEESC_EENS_10HashTraitsIiEEEESD_NS_18PartitionAllocatorEE8RehashToEPS5_jSJ_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #3 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %9, align 8
  %17 = ptrtoint %"struct.WTF::KeyValuePair"* %16 to i64
  br label %31

18:                                               ; preds = %130
  %19 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %131, %18 ]
  %23 = phi %"struct.WTF::KeyValuePair"* [ null, %10 ], [ %134, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #13
  br label %27

27:                                               ; preds = %20, %25
  %28 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, -2147483648
  store i32 %30, i32* %28, align 8
  ret %"struct.WTF::KeyValuePair"* %23

31:                                               ; preds = %13, %130
  %32 = phi i64 [ %17, %13 ], [ %131, %130 ]
  %33 = phi i32 [ %7, %13 ], [ %132, %130 ]
  %34 = phi %"struct.WTF::KeyValuePair"* [ %16, %13 ], [ %133, %130 ]
  %35 = phi %"struct.WTF::KeyValuePair"* [ null, %13 ], [ %134, %130 ]
  %36 = phi i32 [ 0, %13 ], [ %135, %130 ]
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %34, i64 %37
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %38, i64 0, i32 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, 2147483647
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %34, i64 %37, i32 0, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 2147483647
  %45 = and i1 %41, %44
  %46 = icmp eq i32 %40, 2147483646
  %47 = or i1 %46, %45
  br i1 %47, label %130, label %48

48:                                               ; preds = %31
  %49 = zext i32 %40 to i64
  %50 = mul i64 %49, 5146158508761418231
  %51 = zext i32 %43 to i64
  %52 = mul i64 %51, -682818954288075998
  %53 = add i64 %52, %50
  %54 = lshr i64 %53, 32
  %55 = trunc i64 %54 to i32
  %56 = and i32 %14, %55
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 %57
  %59 = ptrtoint %"struct.WTF::KeyValuePair"* %58 to i64
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %58, i64 0, i32 0, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %61, 2147483647
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 %57, i32 0, i32 1
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, 2147483647
  %66 = and i1 %62, %65
  br i1 %66, label %85, label %67

67:                                               ; preds = %48
  %68 = xor i32 %55, -1
  %69 = lshr i64 %53, 55
  %70 = trunc i64 %69 to i32
  %71 = add i32 %70, %68
  %72 = shl i32 %71, 12
  %73 = xor i32 %72, %71
  %74 = lshr i32 %73, 7
  %75 = xor i32 %74, %73
  %76 = shl i32 %75, 2
  %77 = xor i32 %76, %75
  %78 = lshr i32 %77, 20
  %79 = xor i32 %78, %77
  %80 = or i32 %79, 1
  %81 = zext i32 %80 to i64
  br label %91

82:                                               ; preds = %103
  %83 = ptrtoint %"struct.WTF::KeyValuePair"* %110 to i64
  %84 = inttoptr i64 %105 to %"struct.WTF::KeyValuePair"*
  br label %85

85:                                               ; preds = %82, %48
  %86 = phi i64 [ %83, %82 ], [ %59, %48 ]
  %87 = phi %"struct.WTF::KeyValuePair"* [ %84, %82 ], [ null, %48 ]
  %88 = icmp eq %"struct.WTF::KeyValuePair"* %87, null
  %89 = ptrtoint %"struct.WTF::KeyValuePair"* %87 to i64
  %90 = select i1 %88, i64 %86, i64 %89
  br label %119

91:                                               ; preds = %103, %67
  %92 = phi i32 [ %64, %67 ], [ %116, %103 ]
  %93 = phi i64 [ 0, %67 ], [ %105, %103 ]
  %94 = phi i32 [ %61, %67 ], [ %113, %103 ]
  %95 = phi i64 [ %59, %67 ], [ %111, %103 ]
  %96 = phi i64 [ %57, %67 ], [ %109, %103 ]
  %97 = phi i64 [ 0, %67 ], [ %107, %103 ]
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 %96, i32 0, i32 0
  %99 = load i32, i32* %98, align 4
  %100 = icmp eq i32 %99, %40
  %101 = icmp eq i32 %92, %43
  %102 = and i1 %101, %100
  br i1 %102, label %119, label %103

103:                                              ; preds = %91
  %104 = icmp eq i32 %94, 2147483646
  %105 = select i1 %104, i64 %95, i64 %93
  %106 = icmp eq i64 %97, 0
  %107 = select i1 %106, i64 %81, i64 %97
  %108 = add i64 %107, %96
  %109 = and i64 %108, %15
  %110 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 %109
  %111 = ptrtoint %"struct.WTF::KeyValuePair"* %110 to i64
  %112 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %110, i64 0, i32 0, i32 0
  %113 = load i32, i32* %112, align 4
  %114 = icmp eq i32 %113, 2147483647
  %115 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 %109, i32 0, i32 1
  %116 = load i32, i32* %115, align 4
  %117 = icmp eq i32 %116, 2147483647
  %118 = and i1 %114, %117
  br i1 %118, label %82, label %91

119:                                              ; preds = %91, %85
  %120 = phi i64 [ %90, %85 ], [ %95, %91 ]
  %121 = inttoptr i64 %120 to %"struct.WTF::KeyValuePair"*
  %122 = inttoptr i64 %120 to i8*
  %123 = bitcast %"struct.WTF::KeyValuePair"* %38 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %122, i8* align 4 %123, i64 12, i1 false) #13
  %124 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %9, align 8
  %125 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %124, i64 %37
  %126 = icmp eq %"struct.WTF::KeyValuePair"* %125, %3
  %127 = select i1 %126, %"struct.WTF::KeyValuePair"* %121, %"struct.WTF::KeyValuePair"* %35
  %128 = load i32, i32* %6, align 8
  %129 = ptrtoint %"struct.WTF::KeyValuePair"* %124 to i64
  br label %130

130:                                              ; preds = %31, %119
  %131 = phi i64 [ %32, %31 ], [ %129, %119 ]
  %132 = phi i32 [ %33, %31 ], [ %128, %119 ]
  %133 = phi %"struct.WTF::KeyValuePair"* [ %34, %31 ], [ %124, %119 ]
  %134 = phi %"struct.WTF::KeyValuePair"* [ %35, %31 ], [ %127, %119 ]
  %135 = add i32 %36, 1
  %136 = icmp eq i32 %135, %132
  br i1 %136, label %18, label %31
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.4"*, %"struct.WTF::KeyValuePair.4"* } @_ZN3WTF9HashTableIlNS_12KeyValuePairIlN5blink19PointerEventFactory17PointerAttributesEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIS4_EEEESB_NS_18PartitionAllocatorEE4findERKl(%"class.WTF::HashTable.1"*, i64* dereferenceable(8)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.1", %"class.WTF::HashTable.1"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.4"*, %"struct.WTF::KeyValuePair.4"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.4"* %4, null
  %6 = getelementptr inbounds %"class.WTF::HashTable.1", %"class.WTF::HashTable.1"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  br i1 %5, label %68, label %8

8:                                                ; preds = %2
  %9 = add i32 %7, -1
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %1, align 8
  %12 = shl i64 %11, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %11, %13
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %9, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %4, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %33, i64 0, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = icmp eq i64 %35, %11
  br i1 %36, label %65, label %37

37:                                               ; preds = %8
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %56, %37
  %52 = phi i64 [ %35, %37 ], [ %63, %56 ]
  %53 = phi i64 [ %32, %37 ], [ %60, %56 ]
  %54 = phi i64 [ 0, %37 ], [ %58, %56 ]
  %55 = icmp eq i64 %52, 9223372036854775807
  br i1 %55, label %68, label %56

56:                                               ; preds = %51
  %57 = icmp eq i64 %54, 0
  %58 = select i1 %57, i64 %50, i64 %54
  %59 = add i64 %58, %53
  %60 = and i64 %59, %10
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %4, i64 %60
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %61, i64 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = icmp eq i64 %63, %11
  br i1 %64, label %65, label %51

65:                                               ; preds = %56, %8
  %66 = phi %"struct.WTF::KeyValuePair.4"* [ %33, %8 ], [ %61, %56 ]
  %67 = icmp eq %"struct.WTF::KeyValuePair.4"* %66, null
  br i1 %67, label %68, label %71

68:                                               ; preds = %51, %65, %2
  %69 = zext i32 %7 to i64
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %4, i64 %69
  br label %74

71:                                               ; preds = %65
  %72 = zext i32 %7 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.4", %"struct.WTF::KeyValuePair.4"* %4, i64 %72
  br label %74

74:                                               ; preds = %68, %71
  %75 = phi %"struct.WTF::KeyValuePair.4"* [ %66, %71 ], [ %70, %68 ]
  %76 = phi %"struct.WTF::KeyValuePair.4"* [ %73, %71 ], [ %70, %68 ]
  %77 = insertvalue { %"struct.WTF::KeyValuePair.4"*, %"struct.WTF::KeyValuePair.4"* } undef, %"struct.WTF::KeyValuePair.4"* %75, 0
  %78 = insertvalue { %"struct.WTF::KeyValuePair.4"*, %"struct.WTF::KeyValuePair.4"* } %77, %"struct.WTF::KeyValuePair.4"* %76, 1
  ret { %"struct.WTF::KeyValuePair.4"*, %"struct.WTF::KeyValuePair.4"* } %78
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRiEEvOT_(%"class.WTF::Vector.1700"*, i32* dereferenceable(4)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1700", %"class.WTF::Vector.1700"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1700", %"class.WTF::Vector.1700"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = icmp ugt i32* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i32, i32* %7, i64 %10
  %12 = icmp ugt i32* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.1700", %"class.WTF::Vector.1700"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !7

24:                                               ; preds = %13
  %25 = icmp eq i32* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm(i64 %26) #13
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv, i64 0, i64 0)) #13
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.1700"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 2
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to i32*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 2
  %37 = ptrtoint i8* %28 to i64
  %38 = load i32*, i32** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne i32* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast i32* %38 to i8*
  br i1 %41, label %43, label %49, !prof !7

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #13
  %47 = bitcast %"class.WTF::Vector.1700"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #13
  %51 = bitcast %"class.WTF::Vector.1700"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to i32*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint i32* %1 to i64
  %56 = ptrtoint i32* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 2
  %59 = getelementptr inbounds %"class.WTF::Vector.1700", %"class.WTF::Vector.1700"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !7

69:                                               ; preds = %54
  %70 = icmp eq i32* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm(i64 %71) #13
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv, i64 0, i64 0)) #13
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.1700"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load i32*, i32** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne i32* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast i32* %78 to i8*
  br i1 %81, label %83, label %89, !prof !7

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #13
  %87 = bitcast %"class.WTF::Vector.1700"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #13
  %91 = bitcast %"class.WTF::Vector.1700"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 2
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to i32*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi i32* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds i32, i32* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi i32* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi i32* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds i32, i32* %100, i64 %103
  %105 = load i32, i32* %101, align 4
  store i32 %105, i32* %104, align 4
  %106 = load i32, i32* %3, align 4
  %107 = add i32 %106, 1
  store i32 %107, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm(i64) local_unnamed_addr #3 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.16, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare void @_ZNSt3__16__sortIRNS_6__lessIiiEEPiEEvT0_S5_T_(i32*, i32*, %"struct.std::__1::__less.1845"* dereferenceable(1)) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.unroll.disable"}
!6 = distinct !{!6, !5}
!7 = !{!"branch_weights", i32 2000, i32 1}
!8 = distinct !{!8, !5}
!9 = distinct !{!9, !5}
!10 = distinct !{!10, !5}
!11 = distinct !{!11, !5}
!12 = distinct !{!12, !5}
