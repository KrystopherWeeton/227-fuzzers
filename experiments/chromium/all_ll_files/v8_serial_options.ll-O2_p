; ModuleID = 'gen/third_party/blink/renderer/bindings/modules/v8/v8_serial_options.cc'
source_filename = "gen/third_party/blink/renderer/bindings/modules/v8/v8_serial_options.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.77", i32, [4 x i8], %"class.std::__1::unique_ptr.213", %"class.std::__1::unique_ptr.213", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.223", %"class.std::__1::unique_ptr.229", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.241", %"class.std::__1::unique_ptr.247", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.254", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.98", %"class.std::__1::unique_ptr.104", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.121", %"class.std::__1::unique_ptr.128", %"class.std::__1::unique_ptr.128", %"class.std::__1::unique_ptr.135", %"class.std::__1::unique_ptr.142", %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.156", %"class.std::__1::unique_ptr.163", %"class.std::__1::unique_ptr.170", %"class.std::__1::unique_ptr.193", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, {}* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.113" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.113" = type { %"struct.std::__1::__atomic_base.114" }
%"struct.std::__1::__atomic_base.114" = type { %"struct.std::__1::__atomic_base.115" }
%"struct.std::__1::__atomic_base.115" = type { %"struct.std::__1::__cxx_atomic_impl.116" }
%"struct.std::__1::__cxx_atomic_impl.116" = type { %"struct.std::__1::__cxx_atomic_base_impl.117" }
%"struct.std::__1::__cxx_atomic_base_impl.117" = type { i64 }
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.blink::Worklist.124"* }
%"class.blink::Worklist.124" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.113" }
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.blink::Worklist.131"* }
%"class.blink::Worklist.131" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.113" }
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.blink::Worklist.138"* }
%"class.blink::Worklist.138" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.113" }
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.blink::Worklist.145"* }
%"class.blink::Worklist.145" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.113" }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::Worklist.152"* }
%"class.blink::Worklist.152" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.113" }
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.blink::Worklist.159"* }
%"class.blink::Worklist.159" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.113" }
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.blink::Worklist.166"* }
%"class.blink::Worklist.166" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.113" }
%"class.std::__1::unique_ptr.170" = type { %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.173", %"class.std::__1::__compressed_pair.180", %"class.std::__1::__compressed_pair.185", %"class.std::__1::__compressed_pair.187", [4 x i8] }>
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175", %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { i64 }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { float }
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.196", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.196" = type { %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.205" }
%"class.WTF::Vector.205" = type { %"class.WTF::VectorBuffer.206" }
%"class.WTF::VectorBuffer.206" = type { %"class.WTF::VectorBufferBase.207" }
%"class.WTF::VectorBufferBase.207" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.221" }
%"class.WTF::VectorBuffer.221" = type { %"class.WTF::VectorBufferBase.222" }
%"class.WTF::VectorBufferBase.222" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.223" = type { %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.229" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.235" }
%"class.std::__1::unique_ptr.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.124"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.131"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.138"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.145"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.152"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.285" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.286" }
%"struct.std::__1::__compressed_pair_elem.286" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.241" = type { %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.247" = type { %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.253 }
%class.scoped_refptr.253 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.254" = type { %"struct.std::__1::__atomic_base.255" }
%"struct.std::__1::__atomic_base.255" = type { %"struct.std::__1::__cxx_atomic_impl.256" }
%"struct.std::__1::__cxx_atomic_impl.256" = type { %"struct.std::__1::__cxx_atomic_base_impl.257" }
%"struct.std::__1::__cxx_atomic_base_impl.257" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.v8::Value" = type { i8 }
%"class.blink::SerialOptions" = type <{ %"class.blink::IDLDictionaryBase", i8, i8, i8, i8, i32, i32, i8, [3 x i8], %"class.WTF::String", %"class.WTF::String", i8, [7 x i8] }>
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.v8::internal::Isolate" = type opaque
%"class.blink::V8StringResource" = type { %"class.v8::Local", i32, %"class.WTF::String", %"class.WTF::StringView::StackBackingStore" }
%"class.v8::Local" = type { %"class.v8::Value"* }
%"class.WTF::StringView::StackBackingStore" = type { [64 x i16], %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.v8::Object" = type { i8 }
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap", %"class.WTF::HashMap", %"class.WTF::HashMap.24", %"class.std::__1::unique_ptr.29", %"class.std::__1::unique_ptr.71", %"class.blink::Persistent", i8, i8, i8, %"class.WTF::Vector.258", %"class.std::__1::unique_ptr.263", %"class.blink::Persistent.269", %"class.blink::Persistent.273", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr.8", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.18", i32, i32 }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.WTF::HashMap.24" = type { %"class.WTF::HashTable.25" }
%"class.WTF::HashTable.25" = type <{ %"struct.WTF::KeyValuePair.28"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.28" = type opaque
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.37", %class.scoped_refptr }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.32", i8* }
%"class.WTF::HashMap.32" = type { %"class.WTF::HashTable.33" }
%"class.WTF::HashTable.33" = type <{ %"struct.WTF::KeyValuePair.36"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.36" = type { %"class.WTF::StringImpl"*, i64 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.37" = type { %"class.v8::PersistentValueMapBase.38" }
%"class.v8::PersistentValueMapBase.38" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.39", i8* }
%"class.WTF::HashMap.39" = type { %"class.WTF::HashTable.40" }
%"class.WTF::HashTable.40" = type <{ %"struct.WTF::KeyValuePair.43"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.43" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.std::__1::unique_ptr.44" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.47", %"class.std::__1::unique_ptr.55", %"class.WTF::Vector.61", i8, i32 }
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.WTF::Vector"* }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.61" = type { %"class.WTF::VectorBuffer.62" }
%"class.WTF::VectorBuffer.62" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type opaque
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.292, %"class.blink::Member.311", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr.292 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.293", i32, i32, %"class.blink::Persistent.295" }
%"class.WTF::RefCounted.293" = type { %"class.base::RefCounted.294" }
%"class.base::RefCounted.294" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.295" = type { %"class.blink::PersistentBase.296" }
%"class.blink::PersistentBase.296" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.301" }
%"class.WTF::HashMap.301" = type { %"class.WTF::HashTable.302" }
%"class.WTF::HashTable.302" = type <{ %"struct.WTF::KeyValuePair.304"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.304" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference.308" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.305" }
%"class.blink::MemberBase.305" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference.308" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference.308" = type { %"class.v8::TracedReference.309" }
%"class.v8::TracedReference.309" = type { %"class.v8::BasicTracedReference.310" }
%"class.v8::BasicTracedReference.310" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::Member.311" = type { %"class.blink::MemberBase.312" }
%"class.blink::MemberBase.312" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.WTF::Vector.258" = type { %"class.WTF::VectorBuffer.259" }
%"class.WTF::VectorBuffer.259" = type { %"class.WTF::VectorBufferBase.260" }
%"class.WTF::VectorBufferBase.260" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type opaque
%"class.std::__1::unique_ptr.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.269" = type { %"class.blink::PersistentBase.270" }
%"class.blink::PersistentBase.270" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.273" = type { %"class.blink::PersistentBase.274" }
%"class.blink::PersistentBase.274" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector", i64 }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.279" }
%"class.WTF::Vector.279" = type { %"class.WTF::VectorBuffer.280" }
%"class.WTF::VectorBuffer.280" = type { %"class.WTF::VectorBufferBase.281" }
%"class.WTF::VectorBufferBase.281" = type { %"struct.std::__1::pair.282"*, i32, i32 }
%"struct.std::__1::pair.282" = type { %"class.blink::UntracedMember", %"class.blink::Member" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase.283" }
%"class.blink::MemberBase.283" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type opaque
%"class.v8::Eternal" = type { %"class.v8::Name"* }
%"class.v8::Name" = type { i8 }
%"class.base::span.313" = type { %"struct.base::internal::ExtentStorage", i8** }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"class.v8::Uint32" = type { i8 }
%"class.v8::String" = type { i8 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.v8::Integer" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.335" }
%"class.std::__1::__compressed_pair.335" = type { %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.v8::Int32" = type { i8 }

$_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv = comdat any

$_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [38 x i8] c"Missing required member(s): baudRate.\00", align 1
@.str.1 = private unnamed_addr constant [30 x i8] c"cannot convert to dictionary.\00", align 1
@.str.2 = private unnamed_addr constant [39 x i8] c"required member baudRate is undefined.\00", align 1
@_ZZN5blink15V8SerialOptions6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_13SerialOptionsERNS_14ExceptionStateEE12kValidValues = internal constant [2 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i32 0, i32 0)], align 16
@.str.3 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.4 = private unnamed_addr constant [9 x i8] c"hardware\00", align 1
@.str.5 = private unnamed_addr constant [16 x i8] c"FlowControlType\00", align 1
@_ZZN5blink15V8SerialOptions6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_13SerialOptionsERNS_14ExceptionStateEE12kValidValues_0 = internal constant [3 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i32 0, i32 0)], align 16
@.str.6 = private unnamed_addr constant [5 x i8] c"even\00", align 1
@.str.7 = private unnamed_addr constant [4 x i8] c"odd\00", align 1
@.str.8 = private unnamed_addr constant [11 x i8] c"ParityType\00", align 1
@_ZZN5blinkL26eternalV8SerialOptionsKeysEPN2v87IsolateEE5kKeys = internal constant [6 x i8*] [i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14, i32 0, i32 0)], align 16
@.str.9 = private unnamed_addr constant [9 x i8] c"baudRate\00", align 1
@.str.10 = private unnamed_addr constant [11 x i8] c"bufferSize\00", align 1
@.str.11 = private unnamed_addr constant [9 x i8] c"dataBits\00", align 1
@.str.12 = private unnamed_addr constant [12 x i8] c"flowControl\00", align 1
@.str.13 = private unnamed_addr constant [7 x i8] c"parity\00", align 1
@.str.14 = private unnamed_addr constant [9 x i8] c"stopBits\00", align 1
@.ref.tmp = private constant { i64, i8** } { i64 6, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZZN5blinkL26eternalV8SerialOptionsKeysEPN2v87IsolateEE5kKeys, i32 0, i32 0) }, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.15 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.16 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.17 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15V8SerialOptions6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_13SerialOptionsERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::SerialOptions"* nocapture, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = alloca %"class.v8::TryCatch", align 8
  %7 = alloca %"class.v8::TryCatch", align 8
  %8 = alloca %"class.blink::V8StringResource", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.blink::V8StringResource", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = icmp eq %"class.v8::Value"* %1, null
  br i1 %14, label %36, label %15

15:                                               ; preds = %4
  %16 = bitcast %"class.v8::Value"* %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = and i64 %17, 3
  %19 = icmp eq i64 %18, 1
  br i1 %19, label %20, label %37

20:                                               ; preds = %15
  %21 = add i64 %17, -1
  %22 = inttoptr i64 %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = and i64 %17, -4294967296
  %25 = zext i32 %23 to i64
  %26 = or i64 %24, %25
  %27 = add i64 %26, 7
  %28 = inttoptr i64 %27 to i16*
  %29 = load i16, i16* %28, align 2
  %30 = icmp eq i16 %29, 67
  br i1 %30, label %31, label %37

31:                                               ; preds = %20
  %32 = add i64 %17, 23
  %33 = inttoptr i64 %32 to i32*
  %34 = load i32, i32* %33, align 4
  %35 = ashr i32 %34, 1
  switch i32 %35, label %37 [
    i32 5, label %36
    i32 3, label %36
  ]

36:                                               ; preds = %31, %31, %4
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str, i64 0, i64 0)) #7
  br label %742

37:                                               ; preds = %31, %20, %15
  %38 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %1) #7
  br i1 %38, label %40, label %39

39:                                               ; preds = %37
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0)) #7
  br label %742

40:                                               ; preds = %37
  %41 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  %42 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %43 = add i64 %42, 8
  %44 = inttoptr i64 %43 to %"class.blink::V8PerIsolateData"**
  %45 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %44, align 8
  %46 = tail call { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"* %45, i8* bitcast ([6 x i8*]* @_ZZN5blinkL26eternalV8SerialOptionsKeysEPN2v87IsolateEE5kKeys to i8*), %"class.base::span.313"* dereferenceable(16) bitcast ({ i64, i8** }* @.ref.tmp to %"class.base::span.313"*)) #7
  %47 = extractvalue { i64, %"class.v8::Eternal"* } %46, 1
  %48 = bitcast %"class.v8::TryCatch"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %48) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %7, %"class.v8::Isolate"* %0) #7
  %49 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %0) #7
  %50 = bitcast %"class.v8::Eternal"* %47 to %"class.v8::Value"**
  %51 = load %"class.v8::Value"*, %"class.v8::Value"** %50, align 8
  %52 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %41, %"class.v8::Context"* %49, %"class.v8::Value"* %51) #7
  %53 = icmp eq %"class.v8::Value"* %52, null
  br i1 %53, label %54, label %60

54:                                               ; preds = %40
  %55 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #7
  %56 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %57 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %57, i64 5
  %59 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %58, align 8
  call void %59(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %55) #7
  br label %741

60:                                               ; preds = %40
  %61 = bitcast %"class.v8::Value"* %52 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = and i64 %62, 3
  %64 = icmp eq i64 %63, 1
  br i1 %64, label %65, label %83

65:                                               ; preds = %60
  %66 = add i64 %62, -1
  %67 = inttoptr i64 %66 to i32*
  %68 = load i32, i32* %67, align 4
  %69 = and i64 %62, -4294967296
  %70 = zext i32 %68 to i64
  %71 = or i64 %69, %70
  %72 = add i64 %71, 7
  %73 = inttoptr i64 %72 to i16*
  %74 = load i16, i16* %73, align 2
  %75 = icmp eq i16 %74, 67
  br i1 %75, label %76, label %83

76:                                               ; preds = %65
  %77 = add i64 %62, 23
  %78 = inttoptr i64 %77 to i32*
  %79 = load i32, i32* %78, align 4
  %80 = and i32 %79, -2
  %81 = icmp eq i32 %80, 10
  br i1 %81, label %82, label %83

82:                                               ; preds = %76
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.2, i64 0, i64 0)) #7
  br label %741

83:                                               ; preds = %65, %60, %76
  %84 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* nonnull %52) #7
  br i1 %84, label %85, label %88, !prof !2

85:                                               ; preds = %83
  %86 = bitcast %"class.v8::Value"* %52 to %"class.v8::Uint32"*
  %87 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* nonnull %86) #7
  br label %91

88:                                               ; preds = %83
  %89 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %52) #7
  %90 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %52, i32 2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  br label %91

91:                                               ; preds = %85, %88
  %92 = phi i32 [ %87, %85 ], [ %90, %88 ]
  %93 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %94 = load i32, i32* %93, align 8
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %741

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"class.blink::SerialOptions", %"class.blink::SerialOptions"* %2, i64 0, i32 5
  store i32 %92, i32* %97, align 4
  %98 = getelementptr inbounds %"class.blink::SerialOptions", %"class.blink::SerialOptions"* %2, i64 0, i32 1
  store i8 1, i8* %98, align 8
  %99 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %47, i64 1, i32 0
  %100 = bitcast %"class.v8::Name"** %99 to %"class.v8::Value"**
  %101 = load %"class.v8::Value"*, %"class.v8::Value"** %100, align 8
  %102 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %41, %"class.v8::Context"* %49, %"class.v8::Value"* %101) #7
  %103 = icmp eq %"class.v8::Value"* %102, null
  br i1 %103, label %104, label %110

104:                                              ; preds = %96
  %105 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #7
  %106 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %107 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %106, align 8
  %108 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %107, i64 5
  %109 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %108, align 8
  call void %109(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %105) #7
  br label %741

110:                                              ; preds = %96
  %111 = bitcast %"class.v8::Value"* %102 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = and i64 %112, 3
  %114 = icmp eq i64 %113, 1
  br i1 %114, label %115, label %132

115:                                              ; preds = %110
  %116 = add i64 %112, -1
  %117 = inttoptr i64 %116 to i32*
  %118 = load i32, i32* %117, align 4
  %119 = and i64 %112, -4294967296
  %120 = zext i32 %118 to i64
  %121 = or i64 %119, %120
  %122 = add i64 %121, 7
  %123 = inttoptr i64 %122 to i16*
  %124 = load i16, i16* %123, align 2
  %125 = icmp eq i16 %124, 67
  br i1 %125, label %126, label %132

126:                                              ; preds = %115
  %127 = add i64 %112, 23
  %128 = inttoptr i64 %127 to i32*
  %129 = load i32, i32* %128, align 4
  %130 = and i32 %129, -2
  %131 = icmp eq i32 %130, 10
  br i1 %131, label %147, label %132

132:                                              ; preds = %115, %110, %126
  %133 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* nonnull %102) #7
  br i1 %133, label %134, label %137, !prof !2

134:                                              ; preds = %132
  %135 = bitcast %"class.v8::Value"* %102 to %"class.v8::Uint32"*
  %136 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* nonnull %135) #7
  br label %140

137:                                              ; preds = %132
  %138 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %102) #7
  %139 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %102, i32 2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  br label %140

140:                                              ; preds = %134, %137
  %141 = phi i32 [ %136, %134 ], [ %139, %137 ]
  %142 = load i32, i32* %93, align 8
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %741

144:                                              ; preds = %140
  %145 = getelementptr inbounds %"class.blink::SerialOptions", %"class.blink::SerialOptions"* %2, i64 0, i32 6
  store i32 %141, i32* %145, align 8
  %146 = getelementptr inbounds %"class.blink::SerialOptions", %"class.blink::SerialOptions"* %2, i64 0, i32 2
  store i8 1, i8* %146, align 1
  br label %147

147:                                              ; preds = %144, %126
  %148 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %47, i64 2, i32 0
  %149 = bitcast %"class.v8::Name"** %148 to %"class.v8::Value"**
  %150 = load %"class.v8::Value"*, %"class.v8::Value"** %149, align 8
  %151 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %41, %"class.v8::Context"* %49, %"class.v8::Value"* %150) #7
  %152 = icmp eq %"class.v8::Value"* %151, null
  br i1 %152, label %153, label %159

153:                                              ; preds = %147
  %154 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #7
  %155 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %156 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %155, align 8
  %157 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %156, i64 5
  %158 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %157, align 8
  call void %158(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %154) #7
  br label %741

159:                                              ; preds = %147
  %160 = bitcast %"class.v8::Value"* %151 to i64*
  %161 = load i64, i64* %160, align 8
  %162 = and i64 %161, 3
  %163 = icmp eq i64 %162, 1
  br i1 %163, label %164, label %181

164:                                              ; preds = %159
  %165 = add i64 %161, -1
  %166 = inttoptr i64 %165 to i32*
  %167 = load i32, i32* %166, align 4
  %168 = and i64 %161, -4294967296
  %169 = zext i32 %167 to i64
  %170 = or i64 %168, %169
  %171 = add i64 %170, 7
  %172 = inttoptr i64 %171 to i16*
  %173 = load i16, i16* %172, align 2
  %174 = icmp eq i16 %173, 67
  br i1 %174, label %175, label %181

175:                                              ; preds = %164
  %176 = add i64 %161, 23
  %177 = inttoptr i64 %176 to i32*
  %178 = load i32, i32* %177, align 4
  %179 = and i32 %178, -2
  %180 = icmp eq i32 %179, 10
  br i1 %180, label %188, label %181

181:                                              ; preds = %164, %159, %175
  %182 = call zeroext i8 @_ZN5blink7ToUInt8EPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %151, i32 2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %183 = load i32, i32* %93, align 8
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %741

185:                                              ; preds = %181
  %186 = getelementptr inbounds %"class.blink::SerialOptions", %"class.blink::SerialOptions"* %2, i64 0, i32 7
  store i8 %182, i8* %186, align 4
  %187 = getelementptr inbounds %"class.blink::SerialOptions", %"class.blink::SerialOptions"* %2, i64 0, i32 3
  store i8 1, i8* %187, align 2
  br label %188

188:                                              ; preds = %185, %175
  %189 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %47, i64 3, i32 0
  %190 = bitcast %"class.v8::Name"** %189 to %"class.v8::Value"**
  %191 = load %"class.v8::Value"*, %"class.v8::Value"** %190, align 8
  %192 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %41, %"class.v8::Context"* %49, %"class.v8::Value"* %191) #7
  %193 = icmp eq %"class.v8::Value"* %192, null
  br i1 %193, label %194, label %200

194:                                              ; preds = %188
  %195 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #7
  %196 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %197 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %196, align 8
  %198 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %197, i64 5
  %199 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %198, align 8
  call void %199(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %195) #7
  br label %741

200:                                              ; preds = %188
  %201 = bitcast %"class.v8::Value"* %192 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = and i64 %202, 3
  %204 = icmp eq i64 %203, 1
  br i1 %204, label %205, label %222

205:                                              ; preds = %200
  %206 = add i64 %202, -1
  %207 = inttoptr i64 %206 to i32*
  %208 = load i32, i32* %207, align 4
  %209 = and i64 %202, -4294967296
  %210 = zext i32 %208 to i64
  %211 = or i64 %209, %210
  %212 = add i64 %211, 7
  %213 = inttoptr i64 %212 to i16*
  %214 = load i16, i16* %213, align 2
  %215 = icmp eq i16 %214, 67
  br i1 %215, label %216, label %222

216:                                              ; preds = %205
  %217 = add i64 %202, 23
  %218 = inttoptr i64 %217 to i32*
  %219 = load i32, i32* %218, align 4
  %220 = and i32 %219, -2
  %221 = icmp eq i32 %220, 10
  br i1 %221, label %444, label %222

222:                                              ; preds = %205, %200, %216
  %223 = bitcast %"class.blink::V8StringResource"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %223) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %223, i8 -86, i64 152, i1 false)
  %224 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %8, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %192, %"class.v8::Value"** %224, align 8
  %225 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %8, i64 0, i32 1
  store i32 0, i32* %225, align 8
  %226 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %8, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %226, align 8
  %227 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %8, i64 0, i32 3, i32 1
  %228 = bitcast %"class.std::__1::unique_ptr"* %227 to i64*
  store i64 0, i64* %228, align 8
  %229 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"* nonnull %8) #7
  br i1 %229, label %246, label %230

230:                                              ; preds = %222
  %231 = call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #7
  %232 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %232) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %232, i8 -86, i64 48, i1 false) #7
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %231) #7
  %233 = load %"class.v8::Value"*, %"class.v8::Value"** %224, align 8
  %234 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %231) #7
  %235 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %233, %"class.v8::Context"* %234) #7
  %236 = ptrtoint %"class.v8::String"* %235 to i64
  %237 = bitcast %"class.blink::V8StringResource"* %8 to i64*
  store i64 %236, i64* %237, align 8
  %238 = icmp eq %"class.v8::String"* %235, null
  br i1 %238, label %240, label %239

239:                                              ; preds = %230
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %232) #7
  br label %246

240:                                              ; preds = %230
  %241 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %242 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %243 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %242, align 8
  %244 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %243, i64 5
  %245 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %244, align 8
  call void %245(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %241) #7
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %232) #7
  br label %422

246:                                              ; preds = %222, %239
  %247 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %247) #7
  %248 = load %"class.v8::Value"*, %"class.v8::Value"** %224, align 8
  %249 = icmp eq %"class.v8::Value"* %248, null
  br i1 %249, label %254, label %250, !prof !3

250:                                              ; preds = %246
  %251 = bitcast %"class.v8::Value"* %248 to %"class.v8::String"*
  %252 = load i32, i32* %225, align 8
  %253 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %251, i32 %252) #7
  br label %274

254:                                              ; preds = %246
  %255 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %226, align 8
  %256 = icmp eq %"class.WTF::StringImpl"* %255, null
  br i1 %256, label %274, label %257

257:                                              ; preds = %254
  %258 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %255, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %259 = load atomic i32, i32* %258 monotonic, align 4
  %260 = and i32 %259, 2
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %262, label %274

262:                                              ; preds = %257
  %263 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %255, i64 0, i32 0
  %264 = load i32, i32* %263, align 4
  %265 = zext i32 %264 to i33
  %266 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %265, i33 1) #7
  %267 = extractvalue { i33, i1 } %266, 1
  %268 = extractvalue { i33, i1 } %266, 0
  %269 = icmp slt i33 %268, 0
  %270 = or i1 %267, %269
  br i1 %270, label %271, label %272, !prof !3

271:                                              ; preds = %262
  call void @llvm.trap() #7
  unreachable

272:                                              ; preds = %262
  %273 = trunc i33 %268 to i32
  store i32 %273, i32* %263, align 4
  br label %274

274:                                              ; preds = %250, %254, %257, %272
  %275 = phi %"class.WTF::StringImpl"* [ %253, %250 ], [ null, %254 ], [ %255, %257 ], [ %255, %272 ]
  %276 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %275, %"class.WTF::StringImpl"** %276, align 8
  %277 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %277) #7
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %10, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0), i64 15) #7
  %278 = call zeroext i1 @_ZN5blink11IsValidEnumERKN3WTF6StringEPKPKcmS3_RNS_14ExceptionStateE(%"class.WTF::String"* nonnull dereferenceable(8) %9, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @_ZZN5blink15V8SerialOptions6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_13SerialOptionsERNS_14ExceptionStateEE12kValidValues, i64 0, i64 0), i64 2, %"class.WTF::String"* nonnull dereferenceable(8) %10, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %279 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %280 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %279, align 8
  %281 = icmp eq %"class.WTF::StringImpl"* %280, null
  br i1 %281, label %295, label %282

282:                                              ; preds = %274
  %283 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %280, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %284 = load atomic i32, i32* %283 monotonic, align 4
  %285 = and i32 %284, 2
  %286 = icmp eq i32 %285, 0
  %287 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %280, i64 0, i32 0
  %288 = load i32, i32* %287, align 4
  br i1 %286, label %289, label %291

289:                                              ; preds = %282
  %290 = add i32 %288, -1
  store i32 %290, i32* %287, align 4
  br label %291

291:                                              ; preds = %289, %282
  %292 = phi i32 [ %290, %289 ], [ %288, %282 ]
  %293 = icmp eq i32 %292, 0
  br i1 %293, label %294, label %295

294:                                              ; preds = %291
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %280) #7
  br label %295

295:                                              ; preds = %274, %291, %294
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %277) #7
  %296 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %276, align 8
  %297 = icmp eq %"class.WTF::StringImpl"* %296, null
  br i1 %297, label %311, label %298

298:                                              ; preds = %295
  %299 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %296, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %300 = load atomic i32, i32* %299 monotonic, align 4
  %301 = and i32 %300, 2
  %302 = icmp eq i32 %301, 0
  %303 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %296, i64 0, i32 0
  %304 = load i32, i32* %303, align 4
  br i1 %302, label %305, label %307

305:                                              ; preds = %298
  %306 = add i32 %304, -1
  store i32 %306, i32* %303, align 4
  br label %307

307:                                              ; preds = %305, %298
  %308 = phi i32 [ %306, %305 ], [ %304, %298 ]
  %309 = icmp eq i32 %308, 0
  br i1 %309, label %310, label %311

310:                                              ; preds = %307
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %296) #7
  br label %311

311:                                              ; preds = %295, %307, %310
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %247) #7
  br i1 %278, label %312, label %422

312:                                              ; preds = %311
  %313 = load %"class.v8::Value"*, %"class.v8::Value"** %224, align 8
  %314 = icmp eq %"class.v8::Value"* %313, null
  br i1 %314, label %315, label %339, !prof !3

315:                                              ; preds = %312
  %316 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %226, align 8
  %317 = icmp eq %"class.WTF::StringImpl"* %316, null
  br i1 %317, label %318, label %320

318:                                              ; preds = %315
  %319 = getelementptr inbounds %"class.blink::SerialOptions", %"class.blink::SerialOptions"* %2, i64 0, i32 9
  br label %364

320:                                              ; preds = %315
  %321 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %316, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %322 = load atomic i32, i32* %321 monotonic, align 4
  %323 = and i32 %322, 2
  %324 = icmp eq i32 %323, 0
  br i1 %324, label %325, label %337

325:                                              ; preds = %320
  %326 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %316, i64 0, i32 0
  %327 = load i32, i32* %326, align 4
  %328 = zext i32 %327 to i33
  %329 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %328, i33 1) #7
  %330 = extractvalue { i33, i1 } %329, 1
  %331 = extractvalue { i33, i1 } %329, 0
  %332 = icmp slt i33 %331, 0
  %333 = or i1 %330, %332
  br i1 %333, label %334, label %335, !prof !3

334:                                              ; preds = %325
  call void @llvm.trap() #7
  unreachable

335:                                              ; preds = %325
  %336 = trunc i33 %331 to i32
  store i32 %336, i32* %326, align 4
  br label %337

337:                                              ; preds = %320, %335
  %338 = getelementptr inbounds %"class.blink::SerialOptions", %"class.blink::SerialOptions"* %2, i64 0, i32 9
  br label %345

339:                                              ; preds = %312
  %340 = bitcast %"class.v8::Value"* %313 to %"class.v8::String"*
  %341 = load i32, i32* %225, align 8
  %342 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %340, i32 %341) #7
  %343 = getelementptr inbounds %"class.blink::SerialOptions", %"class.blink::SerialOptions"* %2, i64 0, i32 9
  %344 = icmp eq %"class.WTF::StringImpl"* %342, null
  br i1 %344, label %364, label %345

345:                                              ; preds = %337, %339
  %346 = phi %"class.WTF::String"* [ %338, %337 ], [ %343, %339 ]
  %347 = phi %"class.WTF::StringImpl"* [ %316, %337 ], [ %342, %339 ]
  %348 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %347, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %349 = load atomic i32, i32* %348 monotonic, align 4
  %350 = and i32 %349, 2
  %351 = icmp eq i32 %350, 0
  br i1 %351, label %352, label %364

352:                                              ; preds = %345
  %353 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %347, i64 0, i32 0
  %354 = load i32, i32* %353, align 4
  %355 = zext i32 %354 to i33
  %356 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %355, i33 1) #7
  %357 = extractvalue { i33, i1 } %356, 1
  %358 = extractvalue { i33, i1 } %356, 0
  %359 = icmp slt i33 %358, 0
  %360 = or i1 %357, %359
  br i1 %360, label %361, label %362, !prof !3

361:                                              ; preds = %352
  call void @llvm.trap() #7
  unreachable

362:                                              ; preds = %352
  %363 = trunc i33 %358 to i32
  store i32 %363, i32* %353, align 4
  br label %364

364:                                              ; preds = %318, %362, %345, %339
  %365 = phi i1 [ false, %362 ], [ false, %345 ], [ true, %339 ], [ true, %318 ]
  %366 = phi %"class.WTF::String"* [ %346, %362 ], [ %346, %345 ], [ %343, %339 ], [ %319, %318 ]
  %367 = phi %"class.WTF::StringImpl"* [ %347, %362 ], [ %347, %345 ], [ null, %339 ], [ null, %318 ]
  %368 = ptrtoint %"class.WTF::StringImpl"* %367 to i64
  %369 = bitcast %"class.WTF::String"* %366 to i64*
  %370 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %366, i64 0, i32 0, i32 0
  %371 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %370, align 8
  store i64 %368, i64* %369, align 8
  %372 = icmp eq %"class.WTF::StringImpl"* %371, null
  br i1 %372, label %386, label %373

373:                                              ; preds = %364
  %374 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %371, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %375 = load atomic i32, i32* %374 monotonic, align 4
  %376 = and i32 %375, 2
  %377 = icmp eq i32 %376, 0
  %378 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %371, i64 0, i32 0
  %379 = load i32, i32* %378, align 4
  br i1 %377, label %380, label %382

380:                                              ; preds = %373
  %381 = add i32 %379, -1
  store i32 %381, i32* %378, align 4
  br label %382

382:                                              ; preds = %380, %373
  %383 = phi i32 [ %381, %380 ], [ %379, %373 ]
  %384 = icmp eq i32 %383, 0
  br i1 %384, label %385, label %386

385:                                              ; preds = %382
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %371) #7
  br label %386

386:                                              ; preds = %364, %382, %385
  br i1 %365, label %400, label %387

387:                                              ; preds = %386
  %388 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %367, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %389 = load atomic i32, i32* %388 monotonic, align 4
  %390 = and i32 %389, 2
  %391 = icmp eq i32 %390, 0
  %392 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %367, i64 0, i32 0
  %393 = load i32, i32* %392, align 4
  br i1 %391, label %394, label %396

394:                                              ; preds = %387
  %395 = add i32 %393, -1
  store i32 %395, i32* %392, align 4
  br label %396

396:                                              ; preds = %394, %387
  %397 = phi i32 [ %395, %394 ], [ %393, %387 ]
  %398 = icmp eq i32 %397, 0
  br i1 %398, label %399, label %400

399:                                              ; preds = %396
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %367) #7
  br label %400

400:                                              ; preds = %386, %396, %399
  %401 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %8, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %402 = load i8*, i8** %401, align 8
  store i8* null, i8** %401, align 8
  %403 = icmp eq i8* %402, null
  br i1 %403, label %405, label %404

404:                                              ; preds = %400
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %402) #7
  br label %405

405:                                              ; preds = %404, %400
  %406 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %226, align 8
  %407 = icmp eq %"class.WTF::StringImpl"* %406, null
  br i1 %407, label %421, label %408

408:                                              ; preds = %405
  %409 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %406, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %410 = load atomic i32, i32* %409 monotonic, align 4
  %411 = and i32 %410, 2
  %412 = icmp eq i32 %411, 0
  %413 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %406, i64 0, i32 0
  %414 = load i32, i32* %413, align 4
  br i1 %412, label %415, label %417

415:                                              ; preds = %408
  %416 = add i32 %414, -1
  store i32 %416, i32* %413, align 4
  br label %417

417:                                              ; preds = %415, %408
  %418 = phi i32 [ %416, %415 ], [ %414, %408 ]
  %419 = icmp eq i32 %418, 0
  br i1 %419, label %420, label %421

420:                                              ; preds = %417
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %406) #7
  br label %421

421:                                              ; preds = %405, %417, %420
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %223) #7
  br label %444

422:                                              ; preds = %240, %311
  %423 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %8, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %424 = load i8*, i8** %423, align 8
  store i8* null, i8** %423, align 8
  %425 = icmp eq i8* %424, null
  br i1 %425, label %427, label %426

426:                                              ; preds = %422
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %424) #7
  br label %427

427:                                              ; preds = %426, %422
  %428 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %226, align 8
  %429 = icmp eq %"class.WTF::StringImpl"* %428, null
  br i1 %429, label %443, label %430

430:                                              ; preds = %427
  %431 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %428, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %432 = load atomic i32, i32* %431 monotonic, align 4
  %433 = and i32 %432, 2
  %434 = icmp eq i32 %433, 0
  %435 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %428, i64 0, i32 0
  %436 = load i32, i32* %435, align 4
  br i1 %434, label %437, label %439

437:                                              ; preds = %430
  %438 = add i32 %436, -1
  store i32 %438, i32* %435, align 4
  br label %439

439:                                              ; preds = %437, %430
  %440 = phi i32 [ %438, %437 ], [ %436, %430 ]
  %441 = icmp eq i32 %440, 0
  br i1 %441, label %442, label %443

442:                                              ; preds = %439
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %428) #7
  br label %443

443:                                              ; preds = %427, %439, %442
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %223) #7
  br label %741

444:                                              ; preds = %421, %216
  %445 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %47, i64 4, i32 0
  %446 = bitcast %"class.v8::Name"** %445 to %"class.v8::Value"**
  %447 = load %"class.v8::Value"*, %"class.v8::Value"** %446, align 8
  %448 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %41, %"class.v8::Context"* %49, %"class.v8::Value"* %447) #7
  %449 = icmp eq %"class.v8::Value"* %448, null
  br i1 %449, label %450, label %456

450:                                              ; preds = %444
  %451 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #7
  %452 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %453 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %452, align 8
  %454 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %453, i64 5
  %455 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %454, align 8
  call void %455(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %451) #7
  br label %741

456:                                              ; preds = %444
  %457 = bitcast %"class.v8::Value"* %448 to i64*
  %458 = load i64, i64* %457, align 8
  %459 = and i64 %458, 3
  %460 = icmp eq i64 %459, 1
  br i1 %460, label %461, label %478

461:                                              ; preds = %456
  %462 = add i64 %458, -1
  %463 = inttoptr i64 %462 to i32*
  %464 = load i32, i32* %463, align 4
  %465 = and i64 %458, -4294967296
  %466 = zext i32 %464 to i64
  %467 = or i64 %465, %466
  %468 = add i64 %467, 7
  %469 = inttoptr i64 %468 to i16*
  %470 = load i16, i16* %469, align 2
  %471 = icmp eq i16 %470, 67
  br i1 %471, label %472, label %478

472:                                              ; preds = %461
  %473 = add i64 %458, 23
  %474 = inttoptr i64 %473 to i32*
  %475 = load i32, i32* %474, align 4
  %476 = and i32 %475, -2
  %477 = icmp eq i32 %476, 10
  br i1 %477, label %700, label %478

478:                                              ; preds = %461, %456, %472
  %479 = bitcast %"class.blink::V8StringResource"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %479) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %479, i8 -86, i64 152, i1 false)
  %480 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %11, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %448, %"class.v8::Value"** %480, align 8
  %481 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %11, i64 0, i32 1
  store i32 0, i32* %481, align 8
  %482 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %11, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %482, align 8
  %483 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %11, i64 0, i32 3, i32 1
  %484 = bitcast %"class.std::__1::unique_ptr"* %483 to i64*
  store i64 0, i64* %484, align 8
  %485 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"* nonnull %11) #7
  br i1 %485, label %502, label %486

486:                                              ; preds = %478
  %487 = call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #7
  %488 = bitcast %"class.v8::TryCatch"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %488) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %488, i8 -86, i64 48, i1 false) #7
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %6, %"class.v8::Isolate"* %487) #7
  %489 = load %"class.v8::Value"*, %"class.v8::Value"** %480, align 8
  %490 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %487) #7
  %491 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %489, %"class.v8::Context"* %490) #7
  %492 = ptrtoint %"class.v8::String"* %491 to i64
  %493 = bitcast %"class.blink::V8StringResource"* %11 to i64*
  store i64 %492, i64* %493, align 8
  %494 = icmp eq %"class.v8::String"* %491, null
  br i1 %494, label %496, label %495

495:                                              ; preds = %486
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %488) #7
  br label %502

496:                                              ; preds = %486
  %497 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #7
  %498 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %499 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %498, align 8
  %500 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %499, i64 5
  %501 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %500, align 8
  call void %501(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %497) #7
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %488) #7
  br label %678

502:                                              ; preds = %478, %495
  %503 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %503) #7
  %504 = load %"class.v8::Value"*, %"class.v8::Value"** %480, align 8
  %505 = icmp eq %"class.v8::Value"* %504, null
  br i1 %505, label %510, label %506, !prof !3

506:                                              ; preds = %502
  %507 = bitcast %"class.v8::Value"* %504 to %"class.v8::String"*
  %508 = load i32, i32* %481, align 8
  %509 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %507, i32 %508) #7
  br label %530

510:                                              ; preds = %502
  %511 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %482, align 8
  %512 = icmp eq %"class.WTF::StringImpl"* %511, null
  br i1 %512, label %530, label %513

513:                                              ; preds = %510
  %514 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %511, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %515 = load atomic i32, i32* %514 monotonic, align 4
  %516 = and i32 %515, 2
  %517 = icmp eq i32 %516, 0
  br i1 %517, label %518, label %530

518:                                              ; preds = %513
  %519 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %511, i64 0, i32 0
  %520 = load i32, i32* %519, align 4
  %521 = zext i32 %520 to i33
  %522 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %521, i33 1) #7
  %523 = extractvalue { i33, i1 } %522, 1
  %524 = extractvalue { i33, i1 } %522, 0
  %525 = icmp slt i33 %524, 0
  %526 = or i1 %523, %525
  br i1 %526, label %527, label %528, !prof !3

527:                                              ; preds = %518
  call void @llvm.trap() #7
  unreachable

528:                                              ; preds = %518
  %529 = trunc i33 %524 to i32
  store i32 %529, i32* %519, align 4
  br label %530

530:                                              ; preds = %506, %510, %513, %528
  %531 = phi %"class.WTF::StringImpl"* [ %509, %506 ], [ null, %510 ], [ %511, %513 ], [ %511, %528 ]
  %532 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %531, %"class.WTF::StringImpl"** %532, align 8
  %533 = bitcast %"class.WTF::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %533) #7
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %13, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i64 0, i64 0), i64 10) #7
  %534 = call zeroext i1 @_ZN5blink11IsValidEnumERKN3WTF6StringEPKPKcmS3_RNS_14ExceptionStateE(%"class.WTF::String"* nonnull dereferenceable(8) %12, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @_ZZN5blink15V8SerialOptions6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_13SerialOptionsERNS_14ExceptionStateEE12kValidValues_0, i64 0, i64 0), i64 3, %"class.WTF::String"* nonnull dereferenceable(8) %13, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %535 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  %536 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %535, align 8
  %537 = icmp eq %"class.WTF::StringImpl"* %536, null
  br i1 %537, label %551, label %538

538:                                              ; preds = %530
  %539 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %536, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %540 = load atomic i32, i32* %539 monotonic, align 4
  %541 = and i32 %540, 2
  %542 = icmp eq i32 %541, 0
  %543 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %536, i64 0, i32 0
  %544 = load i32, i32* %543, align 4
  br i1 %542, label %545, label %547

545:                                              ; preds = %538
  %546 = add i32 %544, -1
  store i32 %546, i32* %543, align 4
  br label %547

547:                                              ; preds = %545, %538
  %548 = phi i32 [ %546, %545 ], [ %544, %538 ]
  %549 = icmp eq i32 %548, 0
  br i1 %549, label %550, label %551

550:                                              ; preds = %547
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %536) #7
  br label %551

551:                                              ; preds = %530, %547, %550
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %533) #7
  %552 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %532, align 8
  %553 = icmp eq %"class.WTF::StringImpl"* %552, null
  br i1 %553, label %567, label %554

554:                                              ; preds = %551
  %555 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %552, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %556 = load atomic i32, i32* %555 monotonic, align 4
  %557 = and i32 %556, 2
  %558 = icmp eq i32 %557, 0
  %559 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %552, i64 0, i32 0
  %560 = load i32, i32* %559, align 4
  br i1 %558, label %561, label %563

561:                                              ; preds = %554
  %562 = add i32 %560, -1
  store i32 %562, i32* %559, align 4
  br label %563

563:                                              ; preds = %561, %554
  %564 = phi i32 [ %562, %561 ], [ %560, %554 ]
  %565 = icmp eq i32 %564, 0
  br i1 %565, label %566, label %567

566:                                              ; preds = %563
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %552) #7
  br label %567

567:                                              ; preds = %551, %563, %566
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %503) #7
  br i1 %534, label %568, label %678

568:                                              ; preds = %567
  %569 = load %"class.v8::Value"*, %"class.v8::Value"** %480, align 8
  %570 = icmp eq %"class.v8::Value"* %569, null
  br i1 %570, label %571, label %595, !prof !3

571:                                              ; preds = %568
  %572 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %482, align 8
  %573 = icmp eq %"class.WTF::StringImpl"* %572, null
  br i1 %573, label %574, label %576

574:                                              ; preds = %571
  %575 = getelementptr inbounds %"class.blink::SerialOptions", %"class.blink::SerialOptions"* %2, i64 0, i32 10
  br label %620

576:                                              ; preds = %571
  %577 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %572, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %578 = load atomic i32, i32* %577 monotonic, align 4
  %579 = and i32 %578, 2
  %580 = icmp eq i32 %579, 0
  br i1 %580, label %581, label %593

581:                                              ; preds = %576
  %582 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %572, i64 0, i32 0
  %583 = load i32, i32* %582, align 4
  %584 = zext i32 %583 to i33
  %585 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %584, i33 1) #7
  %586 = extractvalue { i33, i1 } %585, 1
  %587 = extractvalue { i33, i1 } %585, 0
  %588 = icmp slt i33 %587, 0
  %589 = or i1 %586, %588
  br i1 %589, label %590, label %591, !prof !3

590:                                              ; preds = %581
  call void @llvm.trap() #7
  unreachable

591:                                              ; preds = %581
  %592 = trunc i33 %587 to i32
  store i32 %592, i32* %582, align 4
  br label %593

593:                                              ; preds = %576, %591
  %594 = getelementptr inbounds %"class.blink::SerialOptions", %"class.blink::SerialOptions"* %2, i64 0, i32 10
  br label %601

595:                                              ; preds = %568
  %596 = bitcast %"class.v8::Value"* %569 to %"class.v8::String"*
  %597 = load i32, i32* %481, align 8
  %598 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %596, i32 %597) #7
  %599 = getelementptr inbounds %"class.blink::SerialOptions", %"class.blink::SerialOptions"* %2, i64 0, i32 10
  %600 = icmp eq %"class.WTF::StringImpl"* %598, null
  br i1 %600, label %620, label %601

601:                                              ; preds = %593, %595
  %602 = phi %"class.WTF::String"* [ %594, %593 ], [ %599, %595 ]
  %603 = phi %"class.WTF::StringImpl"* [ %572, %593 ], [ %598, %595 ]
  %604 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %603, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %605 = load atomic i32, i32* %604 monotonic, align 4
  %606 = and i32 %605, 2
  %607 = icmp eq i32 %606, 0
  br i1 %607, label %608, label %620

608:                                              ; preds = %601
  %609 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %603, i64 0, i32 0
  %610 = load i32, i32* %609, align 4
  %611 = zext i32 %610 to i33
  %612 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %611, i33 1) #7
  %613 = extractvalue { i33, i1 } %612, 1
  %614 = extractvalue { i33, i1 } %612, 0
  %615 = icmp slt i33 %614, 0
  %616 = or i1 %613, %615
  br i1 %616, label %617, label %618, !prof !3

617:                                              ; preds = %608
  call void @llvm.trap() #7
  unreachable

618:                                              ; preds = %608
  %619 = trunc i33 %614 to i32
  store i32 %619, i32* %609, align 4
  br label %620

620:                                              ; preds = %574, %618, %601, %595
  %621 = phi i1 [ false, %618 ], [ false, %601 ], [ true, %595 ], [ true, %574 ]
  %622 = phi %"class.WTF::String"* [ %602, %618 ], [ %602, %601 ], [ %599, %595 ], [ %575, %574 ]
  %623 = phi %"class.WTF::StringImpl"* [ %603, %618 ], [ %603, %601 ], [ null, %595 ], [ null, %574 ]
  %624 = ptrtoint %"class.WTF::StringImpl"* %623 to i64
  %625 = bitcast %"class.WTF::String"* %622 to i64*
  %626 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %622, i64 0, i32 0, i32 0
  %627 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %626, align 8
  store i64 %624, i64* %625, align 8
  %628 = icmp eq %"class.WTF::StringImpl"* %627, null
  br i1 %628, label %642, label %629

629:                                              ; preds = %620
  %630 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %627, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %631 = load atomic i32, i32* %630 monotonic, align 4
  %632 = and i32 %631, 2
  %633 = icmp eq i32 %632, 0
  %634 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %627, i64 0, i32 0
  %635 = load i32, i32* %634, align 4
  br i1 %633, label %636, label %638

636:                                              ; preds = %629
  %637 = add i32 %635, -1
  store i32 %637, i32* %634, align 4
  br label %638

638:                                              ; preds = %636, %629
  %639 = phi i32 [ %637, %636 ], [ %635, %629 ]
  %640 = icmp eq i32 %639, 0
  br i1 %640, label %641, label %642

641:                                              ; preds = %638
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %627) #7
  br label %642

642:                                              ; preds = %620, %638, %641
  br i1 %621, label %656, label %643

643:                                              ; preds = %642
  %644 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %623, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %645 = load atomic i32, i32* %644 monotonic, align 4
  %646 = and i32 %645, 2
  %647 = icmp eq i32 %646, 0
  %648 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %623, i64 0, i32 0
  %649 = load i32, i32* %648, align 4
  br i1 %647, label %650, label %652

650:                                              ; preds = %643
  %651 = add i32 %649, -1
  store i32 %651, i32* %648, align 4
  br label %652

652:                                              ; preds = %650, %643
  %653 = phi i32 [ %651, %650 ], [ %649, %643 ]
  %654 = icmp eq i32 %653, 0
  br i1 %654, label %655, label %656

655:                                              ; preds = %652
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %623) #7
  br label %656

656:                                              ; preds = %642, %652, %655
  %657 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %11, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %658 = load i8*, i8** %657, align 8
  store i8* null, i8** %657, align 8
  %659 = icmp eq i8* %658, null
  br i1 %659, label %661, label %660

660:                                              ; preds = %656
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %658) #7
  br label %661

661:                                              ; preds = %660, %656
  %662 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %482, align 8
  %663 = icmp eq %"class.WTF::StringImpl"* %662, null
  br i1 %663, label %677, label %664

664:                                              ; preds = %661
  %665 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %662, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %666 = load atomic i32, i32* %665 monotonic, align 4
  %667 = and i32 %666, 2
  %668 = icmp eq i32 %667, 0
  %669 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %662, i64 0, i32 0
  %670 = load i32, i32* %669, align 4
  br i1 %668, label %671, label %673

671:                                              ; preds = %664
  %672 = add i32 %670, -1
  store i32 %672, i32* %669, align 4
  br label %673

673:                                              ; preds = %671, %664
  %674 = phi i32 [ %672, %671 ], [ %670, %664 ]
  %675 = icmp eq i32 %674, 0
  br i1 %675, label %676, label %677

676:                                              ; preds = %673
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %662) #7
  br label %677

677:                                              ; preds = %661, %673, %676
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %479) #7
  br label %700

678:                                              ; preds = %496, %567
  %679 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %11, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %680 = load i8*, i8** %679, align 8
  store i8* null, i8** %679, align 8
  %681 = icmp eq i8* %680, null
  br i1 %681, label %683, label %682

682:                                              ; preds = %678
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %680) #7
  br label %683

683:                                              ; preds = %682, %678
  %684 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %482, align 8
  %685 = icmp eq %"class.WTF::StringImpl"* %684, null
  br i1 %685, label %699, label %686

686:                                              ; preds = %683
  %687 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %684, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %688 = load atomic i32, i32* %687 monotonic, align 4
  %689 = and i32 %688, 2
  %690 = icmp eq i32 %689, 0
  %691 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %684, i64 0, i32 0
  %692 = load i32, i32* %691, align 4
  br i1 %690, label %693, label %695

693:                                              ; preds = %686
  %694 = add i32 %692, -1
  store i32 %694, i32* %691, align 4
  br label %695

695:                                              ; preds = %693, %686
  %696 = phi i32 [ %694, %693 ], [ %692, %686 ]
  %697 = icmp eq i32 %696, 0
  br i1 %697, label %698, label %699

698:                                              ; preds = %695
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %684) #7
  br label %699

699:                                              ; preds = %683, %695, %698
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %479) #7
  br label %741

700:                                              ; preds = %677, %472
  %701 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %47, i64 5, i32 0
  %702 = bitcast %"class.v8::Name"** %701 to %"class.v8::Value"**
  %703 = load %"class.v8::Value"*, %"class.v8::Value"** %702, align 8
  %704 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %41, %"class.v8::Context"* %49, %"class.v8::Value"* %703) #7
  %705 = icmp eq %"class.v8::Value"* %704, null
  br i1 %705, label %706, label %712

706:                                              ; preds = %700
  %707 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #7
  %708 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %709 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %708, align 8
  %710 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %709, i64 5
  %711 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %710, align 8
  call void %711(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %707) #7
  br label %741

712:                                              ; preds = %700
  %713 = bitcast %"class.v8::Value"* %704 to i64*
  %714 = load i64, i64* %713, align 8
  %715 = and i64 %714, 3
  %716 = icmp eq i64 %715, 1
  br i1 %716, label %717, label %734

717:                                              ; preds = %712
  %718 = add i64 %714, -1
  %719 = inttoptr i64 %718 to i32*
  %720 = load i32, i32* %719, align 4
  %721 = and i64 %714, -4294967296
  %722 = zext i32 %720 to i64
  %723 = or i64 %721, %722
  %724 = add i64 %723, 7
  %725 = inttoptr i64 %724 to i16*
  %726 = load i16, i16* %725, align 2
  %727 = icmp eq i16 %726, 67
  br i1 %727, label %728, label %734

728:                                              ; preds = %717
  %729 = add i64 %714, 23
  %730 = inttoptr i64 %729 to i32*
  %731 = load i32, i32* %730, align 4
  %732 = and i32 %731, -2
  %733 = icmp eq i32 %732, 10
  br i1 %733, label %741, label %734

734:                                              ; preds = %717, %712, %728
  %735 = call zeroext i8 @_ZN5blink7ToUInt8EPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %704, i32 2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %736 = load i32, i32* %93, align 8
  %737 = icmp eq i32 %736, 0
  br i1 %737, label %738, label %741

738:                                              ; preds = %734
  %739 = getelementptr inbounds %"class.blink::SerialOptions", %"class.blink::SerialOptions"* %2, i64 0, i32 11
  store i8 %735, i8* %739, align 8
  %740 = getelementptr inbounds %"class.blink::SerialOptions", %"class.blink::SerialOptions"* %2, i64 0, i32 4
  store i8 1, i8* %740, align 1
  br label %741

741:                                              ; preds = %734, %181, %140, %91, %104, %194, %443, %706, %738, %728, %699, %450, %153, %82, %54
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %7) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %48) #7
  br label %742

742:                                              ; preds = %741, %36, %39
  ret void
}

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #1

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Value"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink11IsValidEnumERKN3WTF6StringEPKPKcmS3_RNS_14ExceptionStateE(%"class.WTF::String"* dereferenceable(8), i8**, i64, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Value"* @_ZNK5blink13SerialOptions8ToV8ImplEN2v85LocalINS1_6ObjectEEEPNS1_7IsolateE(%"class.blink::SerialOptions"* nocapture readonly, %"class.v8::Object"* nocapture readnone, %"class.v8::Isolate"*) unnamed_addr #0 align 2 {
  %4 = tail call %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateE(%"class.v8::Isolate"* %2) #7
  %5 = tail call zeroext i1 @_ZN5blink17toV8SerialOptionsEPKNS_13SerialOptionsEN2v85LocalINS3_6ObjectEEES6_PNS3_7IsolateE(%"class.blink::SerialOptions"* %0, %"class.v8::Object"* %4, %"class.v8::Object"* undef, %"class.v8::Isolate"* %2)
  %6 = bitcast %"class.v8::Object"* %4 to %"class.v8::Value"*
  %7 = ptrtoint %"class.v8::Isolate"* %2 to i64
  %8 = add i64 %7, 160
  %9 = inttoptr i64 %8 to %"class.v8::Value"*
  %10 = select i1 %5, %"class.v8::Value"* %6, %"class.v8::Value"* %9
  ret %"class.v8::Value"* %10
}

declare %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink17toV8SerialOptionsEPKNS_13SerialOptionsEN2v85LocalINS3_6ObjectEEES6_PNS3_7IsolateE(%"class.blink::SerialOptions"* nocapture readonly, %"class.v8::Object"*, %"class.v8::Object"* nocapture readnone, %"class.v8::Isolate"*) local_unnamed_addr #0 {
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = ptrtoint %"class.v8::Isolate"* %3 to i64
  %8 = add i64 %7, 8
  %9 = inttoptr i64 %8 to %"class.blink::V8PerIsolateData"**
  %10 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %9, align 8
  %11 = tail call { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"* %10, i8* bitcast ([6 x i8*]* @_ZZN5blinkL26eternalV8SerialOptionsKeysEPN2v87IsolateEE5kKeys to i8*), %"class.base::span.313"* dereferenceable(16) bitcast ({ i64, i8** }* @.ref.tmp to %"class.base::span.313"*)) #7
  %12 = extractvalue { i64, %"class.v8::Eternal"* } %11, 1
  %13 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %3) #7
  %14 = getelementptr inbounds %"class.blink::SerialOptions", %"class.blink::SerialOptions"* %0, i64 0, i32 1
  %15 = load i8, i8* %14, align 8, !range !4
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %29, label %17

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"class.blink::SerialOptions", %"class.blink::SerialOptions"* %0, i64 0, i32 5
  %19 = load i32, i32* %18, align 4
  %20 = tail call %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"* %3, i32 %19) #7
  %21 = bitcast %"class.v8::Integer"* %20 to %"class.v8::Value"*
  %22 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %12, i64 0, i32 0
  %23 = load %"class.v8::Name"*, %"class.v8::Name"** %22, align 8
  %24 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %13, %"class.v8::Name"* %23, %"class.v8::Value"* %21) #7
  %25 = trunc i16 %24 to i8
  %26 = icmp ne i8 %25, 0
  %27 = icmp ugt i16 %24, 255
  %28 = and i1 %27, %26
  br i1 %28, label %29, label %141

29:                                               ; preds = %4, %17
  %30 = getelementptr inbounds %"class.blink::SerialOptions", %"class.blink::SerialOptions"* %0, i64 0, i32 2
  %31 = load i8, i8* %30, align 1, !range !4
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %36, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.blink::SerialOptions", %"class.blink::SerialOptions"* %0, i64 0, i32 6
  %35 = load i32, i32* %34, align 8
  br label %36

36:                                               ; preds = %29, %33
  %37 = phi i32 [ %35, %33 ], [ 255, %29 ]
  %38 = tail call %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"* %3, i32 %37) #7
  %39 = bitcast %"class.v8::Integer"* %38 to %"class.v8::Value"*
  %40 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %12, i64 1, i32 0
  %41 = load %"class.v8::Name"*, %"class.v8::Name"** %40, align 8
  %42 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %13, %"class.v8::Name"* %41, %"class.v8::Value"* %39) #7
  %43 = trunc i16 %42 to i8
  %44 = icmp ne i8 %43, 0
  %45 = icmp ugt i16 %42, 255
  %46 = and i1 %45, %44
  br i1 %46, label %47, label %141

47:                                               ; preds = %36
  %48 = getelementptr inbounds %"class.blink::SerialOptions", %"class.blink::SerialOptions"* %0, i64 0, i32 3
  %49 = load i8, i8* %48, align 2, !range !4
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %55, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.blink::SerialOptions", %"class.blink::SerialOptions"* %0, i64 0, i32 7
  %53 = load i8, i8* %52, align 4
  %54 = zext i8 %53 to i32
  br label %55

55:                                               ; preds = %47, %51
  %56 = phi i32 [ %54, %51 ], [ 8, %47 ]
  %57 = tail call %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"* %3, i32 %56) #7
  %58 = bitcast %"class.v8::Integer"* %57 to %"class.v8::Value"*
  %59 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %12, i64 2, i32 0
  %60 = load %"class.v8::Name"*, %"class.v8::Name"** %59, align 8
  %61 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %13, %"class.v8::Name"* %60, %"class.v8::Value"* %58) #7
  %62 = trunc i16 %61 to i8
  %63 = icmp ne i8 %62, 0
  %64 = icmp ugt i16 %61, 255
  %65 = and i1 %64, %63
  br i1 %65, label %66, label %141

66:                                               ; preds = %55
  %67 = getelementptr inbounds %"class.blink::SerialOptions", %"class.blink::SerialOptions"* %0, i64 0, i32 9, i32 0, i32 0
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %69, label %80, label %70

70:                                               ; preds = %66
  %71 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #7
  %72 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %68, %"class.WTF::StringImpl"** %72, align 8
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 1
  %74 = load i32, i32* %73, align 4
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 1
  %76 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %77 = bitcast i8** %76 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %75, %"class.WTF::StringImpl"** %77, align 8
  %78 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %74, i32* %78, align 8
  %79 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #7
  br label %84

80:                                               ; preds = %66
  %81 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %3, i8* nonnull getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i32 0, i32 4) #7
  %82 = icmp eq %"class.v8::String"* %81, null
  br i1 %82, label %83, label %84, !prof !3

83:                                               ; preds = %80
  tail call void @_ZN2v82V812ToLocalEmptyEv() #7
  br label %84

84:                                               ; preds = %83, %80, %70
  %85 = phi %"class.v8::String"* [ %79, %70 ], [ %81, %80 ], [ null, %83 ]
  %86 = bitcast %"class.v8::String"* %85 to %"class.v8::Value"*
  %87 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %12, i64 3, i32 0
  %88 = load %"class.v8::Name"*, %"class.v8::Name"** %87, align 8
  %89 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %13, %"class.v8::Name"* %88, %"class.v8::Value"* %86) #7
  %90 = trunc i16 %89 to i8
  %91 = icmp ne i8 %90, 0
  %92 = icmp ugt i16 %89, 255
  %93 = and i1 %92, %91
  br i1 %93, label %94, label %141

94:                                               ; preds = %84
  %95 = getelementptr inbounds %"class.blink::SerialOptions", %"class.blink::SerialOptions"* %0, i64 0, i32 10, i32 0, i32 0
  %96 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %95, align 8
  %97 = icmp eq %"class.WTF::StringImpl"* %96, null
  br i1 %97, label %108, label %98

98:                                               ; preds = %94
  %99 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %99) #7
  %100 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %96, %"class.WTF::StringImpl"** %100, align 8
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 0, i32 1
  %102 = load i32, i32* %101, align 4
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 1
  %104 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %105 = bitcast i8** %104 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %103, %"class.WTF::StringImpl"** %105, align 8
  %106 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %102, i32* %106, align 8
  %107 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %99) #7
  br label %112

108:                                              ; preds = %94
  %109 = call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %3, i8* nonnull getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i32 0, i32 4) #7
  %110 = icmp eq %"class.v8::String"* %109, null
  br i1 %110, label %111, label %112, !prof !3

111:                                              ; preds = %108
  call void @_ZN2v82V812ToLocalEmptyEv() #7
  br label %112

112:                                              ; preds = %111, %108, %98
  %113 = phi %"class.v8::String"* [ %107, %98 ], [ %109, %108 ], [ null, %111 ]
  %114 = bitcast %"class.v8::String"* %113 to %"class.v8::Value"*
  %115 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %12, i64 4, i32 0
  %116 = load %"class.v8::Name"*, %"class.v8::Name"** %115, align 8
  %117 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %13, %"class.v8::Name"* %116, %"class.v8::Value"* %114) #7
  %118 = trunc i16 %117 to i8
  %119 = icmp ne i8 %118, 0
  %120 = icmp ugt i16 %117, 255
  %121 = and i1 %120, %119
  br i1 %121, label %122, label %141

122:                                              ; preds = %112
  %123 = getelementptr inbounds %"class.blink::SerialOptions", %"class.blink::SerialOptions"* %0, i64 0, i32 4
  %124 = load i8, i8* %123, align 1, !range !4
  %125 = icmp eq i8 %124, 0
  br i1 %125, label %130, label %126

126:                                              ; preds = %122
  %127 = getelementptr inbounds %"class.blink::SerialOptions", %"class.blink::SerialOptions"* %0, i64 0, i32 11
  %128 = load i8, i8* %127, align 8
  %129 = zext i8 %128 to i32
  br label %130

130:                                              ; preds = %122, %126
  %131 = phi i32 [ %129, %126 ], [ 1, %122 ]
  %132 = call %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"* %3, i32 %131) #7
  %133 = bitcast %"class.v8::Integer"* %132 to %"class.v8::Value"*
  %134 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %12, i64 5, i32 0
  %135 = load %"class.v8::Name"*, %"class.v8::Name"** %134, align 8
  %136 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %13, %"class.v8::Name"* %135, %"class.v8::Value"* %133) #7
  %137 = trunc i16 %136 to i8
  %138 = icmp ne i8 %137, 0
  %139 = icmp ugt i16 %136, 255
  %140 = and i1 %139, %138
  br label %141

141:                                              ; preds = %36, %84, %112, %130, %55, %17
  %142 = phi i1 [ false, %17 ], [ false, %36 ], [ false, %55 ], [ false, %84 ], [ %140, %130 ], [ false, %112 ]
  ret i1 %142
}

declare %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"*, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #4 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  %6 = bitcast i8* %4 to i16*
  br i1 %5, label %7, label %11

7:                                                ; preds = %2
  %8 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %9 = add i64 %8, 200
  %10 = inttoptr i64 %9 to %"class.v8::String"*
  br label %63

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 1
  %15 = bitcast %"class.WTF::StringImpl"* %14 to i8*
  %16 = icmp eq i8* %4, %15
  br i1 %16, label %17, label %48

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp ne i32 %19, %21
  %23 = icmp eq %"class.WTF::StringImpl"* %13, null
  %24 = or i1 %23, %22
  br i1 %24, label %48, label %25

25:                                               ; preds = %17
  %26 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %27 = add i64 %26, 8
  %28 = inttoptr i64 %27 to %"class.blink::V8PerIsolateData"**
  %29 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %29, i64 0, i32 5, i32 0, i32 0, i32 0
  %31 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 3, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, %13
  br i1 %34, label %35, label %46

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 1
  %37 = bitcast %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference"* %36 to %"class.v8::String"**
  %38 = load %"class.v8::String"*, %"class.v8::String"** %37, align 8
  %39 = icmp eq %"class.v8::String"* %38, null
  br i1 %39, label %63, label %40

40:                                               ; preds = %35
  %41 = bitcast %"class.v8::String"* %38 to i64*
  %42 = bitcast %"class.v8::Isolate"* %0 to %"class.v8::internal::Isolate"*
  %43 = load i64, i64* %41, align 8
  %44 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %42, i64 %43) #7
  %45 = bitcast i64* %44 to %"class.v8::String"*
  br label %63

46:                                               ; preds = %25
  %47 = tail call %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"* %31, %"class.v8::Isolate"* %0, %"class.WTF::StringImpl"* nonnull %13) #7
  br label %63

48:                                               ; preds = %17, %11
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 1
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %54 = load i32, i32* %53, align 8
  br i1 %52, label %59, label %55

55:                                               ; preds = %48
  %56 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i8* nonnull %4, i32 0, i32 %54) #7
  %57 = icmp eq %"class.v8::String"* %56, null
  br i1 %57, label %58, label %63, !prof !3

58:                                               ; preds = %55
  tail call void @_ZN2v82V812ToLocalEmptyEv() #7
  br label %63

59:                                               ; preds = %48
  %60 = tail call %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i16* nonnull %6, i32 0, i32 %54) #7
  %61 = icmp eq %"class.v8::String"* %60, null
  br i1 %61, label %62, label %63, !prof !3

62:                                               ; preds = %59
  tail call void @_ZN2v82V812ToLocalEmptyEv() #7
  br label %63

63:                                               ; preds = %46, %40, %35, %62, %59, %58, %55, %7
  %64 = phi %"class.v8::String"* [ %10, %7 ], [ %56, %55 ], [ null, %58 ], [ %60, %59 ], [ null, %62 ], [ null, %35 ], [ %45, %40 ], [ %47, %46 ]
  ret %"class.v8::String"* %64
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SerialOptions"* @_ZN5blink17NativeValueTraitsINS_13SerialOptionsEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 48) #7
  %5 = bitcast i8* %4 to %"class.blink::SerialOptions"*
  tail call void @_ZN5blink13SerialOptionsC1Ev(%"class.blink::SerialOptions"* %5) #7
  %6 = getelementptr inbounds i8, i8* %4, i64 -4
  %7 = bitcast i8* %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = or i16 %8, 1
  store atomic i16 %9, i16* %7 release, align 2
  tail call void @_ZN5blink15V8SerialOptions6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_13SerialOptionsERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* %1, %"class.blink::SerialOptions"* %5, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  ret %"class.blink::SerialOptions"* %5
}

declare { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"*, i8*, %"class.base::span.313"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZN3WTF10Partitions10BufferFreeEPv(i8*) local_unnamed_addr #1

declare i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Name"*, %"class.v8::Value"*) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"*, i8*, i32, i32) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"*, i16*, i32, i32) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"*, %"class.v8::Isolate"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #1

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #1

declare void @_ZN5blink13SerialOptionsC1Ev(%"class.blink::SerialOptions"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #7
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #7
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #7
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #7
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #7
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #7
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #7
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* %40, i8* %41) #7
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #7
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.16, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #7
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #7
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #7
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !3

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #7
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::IDLDictionaryBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::IDLDictionaryBase"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::IDLDictionaryBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::IDLDictionaryBase"*)***
  %4 = load void (%"class.blink::IDLDictionaryBase"*)**, void (%"class.blink::IDLDictionaryBase"*)*** %3, align 8
  %5 = load void (%"class.blink::IDLDictionaryBase"*)*, void (%"class.blink::IDLDictionaryBase"*)** %4, align 8
  tail call void %5(%"class.blink::IDLDictionaryBase"* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.17, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"*) local_unnamed_addr #1

declare i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"*) local_unnamed_addr #1

declare i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"*) local_unnamed_addr #1

declare i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

declare zeroext i8 @_ZN5blink7ToUInt8EPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.v8::Value"*, %"class.v8::Value"** %2, align 8
  %4 = icmp eq %"class.v8::Value"* %3, null
  br i1 %4, label %82, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.v8::Value"* %3 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 1
  br i1 %9, label %10, label %21, !prof !5

10:                                               ; preds = %5
  %11 = add i64 %7, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = and i64 %7, -4294967296
  %15 = zext i32 %13 to i64
  %16 = or i64 %14, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = icmp ult i16 %19, 64
  br i1 %20, label %82, label %21, !prof !2

21:                                               ; preds = %5, %10
  %22 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %3) #7
  br i1 %22, label %23, label %80, !prof !2

23:                                               ; preds = %21
  %24 = bitcast %"class.blink::V8StringResource"* %0 to %"class.v8::Int32"**
  %25 = load %"class.v8::Int32"*, %"class.v8::Int32"** %24, align 8
  %26 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %25) #7
  %27 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32 %26) #7
  %28 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 2
  %29 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %29, label %47, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %47

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i33
  %39 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #7
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !3

44:                                               ; preds = %35
  tail call void @llvm.trap() #7
  unreachable

45:                                               ; preds = %35
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %36, align 4
  br label %47

47:                                               ; preds = %45, %30, %23
  %48 = ptrtoint %"class.WTF::StringImpl"* %27 to i64
  %49 = bitcast %"class.WTF::String"* %28 to i64*
  %50 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  store i64 %48, i64* %49, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %66, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %53
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %53
  %63 = phi i32 [ %61, %60 ], [ %59, %53 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %51) #7
  br label %66

66:                                               ; preds = %47, %62, %65
  store %"class.v8::Value"* null, %"class.v8::Value"** %2, align 8
  br i1 %29, label %82, label %67

67:                                               ; preds = %66
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %76
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #7
  br label %82

80:                                               ; preds = %21
  %81 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 1
  store i32 1, i32* %81, align 8
  br label %82

82:                                               ; preds = %79, %76, %66, %10, %1, %80
  %83 = phi i1 [ false, %80 ], [ true, %1 ], [ true, %10 ], [ true, %66 ], [ true, %76 ], [ true, %79 ]
  ret i1 %83
}

declare %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32) local_unnamed_addr #1

declare %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"*, %"class.v8::Context"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"*, i32) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
!5 = !{!"branch_weights", i32 2146410443, i32 1073205}
