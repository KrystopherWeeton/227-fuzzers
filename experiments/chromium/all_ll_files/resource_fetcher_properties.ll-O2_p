; ModuleID = '../../third_party/blink/renderer/platform/loader/fetch/resource_fetcher_properties.cc'
source_filename = "../../third_party/blink/renderer/platform/loader/fetch/resource_fetcher_properties.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.7", i32, [4 x i8], %"class.std::__1::unique_ptr.140", %"class.std::__1::unique_ptr.140", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.150", %"class.std::__1::unique_ptr.156", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.168", %"class.std::__1::unique_ptr.174", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.181", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.51", %"class.std::__1::unique_ptr.58", %"class.std::__1::unique_ptr.58", %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.93", %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.123", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.43" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.43" = type { %"struct.std::__1::__atomic_base.44" }
%"struct.std::__1::__atomic_base.44" = type { %"struct.std::__1::__atomic_base.45" }
%"struct.std::__1::__atomic_base.45" = type { %"struct.std::__1::__cxx_atomic_impl.46" }
%"struct.std::__1::__cxx_atomic_impl.46" = type { %"struct.std::__1::__cxx_atomic_base_impl.47" }
%"struct.std::__1::__cxx_atomic_base_impl.47" = type { i64 }
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.blink::Worklist.54"* }
%"class.blink::Worklist.54" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.43" }
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.blink::Worklist.61"* }
%"class.blink::Worklist.61" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.43" }
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.blink::Worklist.68"* }
%"class.blink::Worklist.68" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.43" }
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.blink::Worklist.75"* }
%"class.blink::Worklist.75" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.43" }
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.blink::Worklist.82"* }
%"class.blink::Worklist.82" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.43" }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::Worklist.89"* }
%"class.blink::Worklist.89" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.43" }
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.blink::Worklist.96"* }
%"class.blink::Worklist.96" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.43" }
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.103", %"class.std::__1::__compressed_pair.110", %"class.std::__1::__compressed_pair.115", %"class.std::__1::__compressed_pair.117", [4 x i8] }>
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105", %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { i64 }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { float }
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.126", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.126" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.148" }
%"class.WTF::VectorBuffer.148" = type { %"class.WTF::VectorBufferBase.149" }
%"class.WTF::VectorBufferBase.149" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.162" }
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.54"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.61"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.68"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.75"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.82"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.185" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.168" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.174" = type { %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.180 }
%class.scoped_refptr.180 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.181" = type { %"struct.std::__1::__atomic_base.182" }
%"struct.std::__1::__atomic_base.182" = type { %"struct.std::__1::__cxx_atomic_impl.183" }
%"struct.std::__1::__cxx_atomic_impl.183" = type { %"struct.std::__1::__cxx_atomic_base_impl.184" }
%"struct.std::__1::__cxx_atomic_base_impl.184" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.220" }
%"struct.std::__1::atomic.220" = type { %"struct.std::__1::__atomic_base.221" }
%"struct.std::__1::__atomic_base.221" = type { %"struct.std::__1::__atomic_base.222" }
%"struct.std::__1::__atomic_base.222" = type { %"struct.std::__1::__cxx_atomic_impl.223" }
%"struct.std::__1::__cxx_atomic_impl.223" = type { %"struct.std::__1::__cxx_atomic_base_impl.224" }
%"struct.std::__1::__cxx_atomic_base_impl.224" = type { i32 }
%"class.blink::DetachableResourceFetcherProperties" = type <{ %"class.blink::ResourceFetcherProperties", %"class.blink::Member", %"class.blink::Member.0", i8, i8, i8, i8, i8, [3 x i8], %"class.blink::KURL", i32, [4 x i8] }>
%"class.blink::ResourceFetcherProperties" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ResourceFetcherProperties"* }
%"class.blink::Member.0" = type { %"class.blink::MemberBase.1" }
%"class.blink::MemberBase.1" = type { %"class.blink::FetchClientSettingsObject"* }
%"class.blink::FetchClientSettingsObject" = type { i32 (...)** }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::FetchClientSettingsObjectSnapshot" = type { %"class.blink::FetchClientSettingsObject", %"class.blink::KURL", %"class.blink::KURL", %class.scoped_refptr.6, i32, %"class.WTF::String", i32, i32, i32, i32, %"class.WTF::HashSet" }
%class.scoped_refptr.6 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.6 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.210" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"struct.std::__1::__compressed_pair_elem.211" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.212 }
%union.anon.212 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN5blink35DetachableResourceFetcherPropertiesD2Ev = comdat any

$_ZN5blink35DetachableResourceFetcherPropertiesD0Ev = comdat any

$_ZNK5blink35DetachableResourceFetcherProperties28GetFetchClientSettingsObjectEv = comdat any

$_ZNK5blink35DetachableResourceFetcherProperties11IsMainFrameEv = comdat any

$_ZNK5blink35DetachableResourceFetcherProperties30GetControllerServiceWorkerModeEv = comdat any

$_ZNK5blink35DetachableResourceFetcherProperties15ServiceWorkerIdEv = comdat any

$_ZNK5blink35DetachableResourceFetcherProperties8IsPausedEv = comdat any

$_ZNK5blink35DetachableResourceFetcherProperties10FreezeModeEv = comdat any

$_ZNK5blink35DetachableResourceFetcherProperties10IsDetachedEv = comdat any

$_ZNK5blink35DetachableResourceFetcherProperties14IsLoadCompleteEv = comdat any

$_ZNK5blink35DetachableResourceFetcherProperties29ShouldBlockLoadingSubResourceEv = comdat any

$_ZNK5blink35DetachableResourceFetcherProperties33IsSubframeDeprioritizationEnabledEv = comdat any

$_ZNK5blink35DetachableResourceFetcherProperties14GetFrameStatusEv = comdat any

$_ZNK5blink35DetachableResourceFetcherProperties20WebBundlePhysicalUrlEv = comdat any

$_ZNK5blink35DetachableResourceFetcherProperties28GetOutstandingThrottledLimitEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_25FetchClientSettingsObjectEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_25FetchClientSettingsObjectEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_25FetchClientSettingsObjectEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_25FetchClientSettingsObjectEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_25ResourceFetcherPropertiesEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_25FetchClientSettingsObjectEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_25FetchClientSettingsObjectEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink35DetachableResourceFetcherPropertiesE = hidden unnamed_addr constant { [18 x i8*] } { [18 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::DetachableResourceFetcherProperties"*)* @_ZN5blink35DetachableResourceFetcherPropertiesD2Ev to i8*), i8* bitcast (void (%"class.blink::DetachableResourceFetcherProperties"*)* @_ZN5blink35DetachableResourceFetcherPropertiesD0Ev to i8*), i8* bitcast (void (%"class.blink::DetachableResourceFetcherProperties"*, %"class.blink::Visitor"*)* @_ZNK5blink35DetachableResourceFetcherProperties5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"class.blink::FetchClientSettingsObject"* (%"class.blink::DetachableResourceFetcherProperties"*)* @_ZNK5blink35DetachableResourceFetcherProperties28GetFetchClientSettingsObjectEv to i8*), i8* bitcast (i1 (%"class.blink::DetachableResourceFetcherProperties"*)* @_ZNK5blink35DetachableResourceFetcherProperties11IsMainFrameEv to i8*), i8* bitcast (i32 (%"class.blink::DetachableResourceFetcherProperties"*)* @_ZNK5blink35DetachableResourceFetcherProperties30GetControllerServiceWorkerModeEv to i8*), i8* bitcast (i64 (%"class.blink::DetachableResourceFetcherProperties"*)* @_ZNK5blink35DetachableResourceFetcherProperties15ServiceWorkerIdEv to i8*), i8* bitcast (i1 (%"class.blink::DetachableResourceFetcherProperties"*)* @_ZNK5blink35DetachableResourceFetcherProperties8IsPausedEv to i8*), i8* bitcast (i8 (%"class.blink::DetachableResourceFetcherProperties"*)* @_ZNK5blink35DetachableResourceFetcherProperties10FreezeModeEv to i8*), i8* bitcast (i1 (%"class.blink::DetachableResourceFetcherProperties"*)* @_ZNK5blink35DetachableResourceFetcherProperties10IsDetachedEv to i8*), i8* bitcast (i1 (%"class.blink::DetachableResourceFetcherProperties"*)* @_ZNK5blink35DetachableResourceFetcherProperties14IsLoadCompleteEv to i8*), i8* bitcast (i1 (%"class.blink::DetachableResourceFetcherProperties"*)* @_ZNK5blink35DetachableResourceFetcherProperties29ShouldBlockLoadingSubResourceEv to i8*), i8* bitcast (i1 (%"class.blink::DetachableResourceFetcherProperties"*)* @_ZNK5blink35DetachableResourceFetcherProperties33IsSubframeDeprioritizationEnabledEv to i8*), i8* bitcast (i32 (%"class.blink::DetachableResourceFetcherProperties"*)* @_ZNK5blink35DetachableResourceFetcherProperties14GetFrameStatusEv to i8*), i8* bitcast (%"class.blink::KURL"* (%"class.blink::DetachableResourceFetcherProperties"*)* @_ZNK5blink35DetachableResourceFetcherProperties20WebBundlePhysicalUrlEv to i8*), i8* bitcast (i32 (%"class.blink::DetachableResourceFetcherProperties"*)* @_ZNK5blink35DetachableResourceFetcherProperties28GetOutstandingThrottledLimitEv to i8*)] }, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.1 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_25FetchClientSettingsObjectEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_25FetchClientSettingsObjectEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_25FetchClientSettingsObjectEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_25FetchClientSettingsObjectEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_25FetchClientSettingsObjectEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.2 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink35DetachableResourceFetcherProperties6DetachEv(%"class.blink::DetachableResourceFetcherProperties"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DetachableResourceFetcherProperties", %"class.blink::DetachableResourceFetcherProperties"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.blink::ResourceFetcherProperties"*, %"class.blink::ResourceFetcherProperties"** %3, align 8
  %5 = icmp eq %"class.blink::ResourceFetcherProperties"* %4, null
  br i1 %5, label %81, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::ResourceFetcherProperties"* %4 to %"class.blink::FetchClientSettingsObject"* (%"class.blink::ResourceFetcherProperties"*)***
  %8 = load %"class.blink::FetchClientSettingsObject"* (%"class.blink::ResourceFetcherProperties"*)**, %"class.blink::FetchClientSettingsObject"* (%"class.blink::ResourceFetcherProperties"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.blink::FetchClientSettingsObject"* (%"class.blink::ResourceFetcherProperties"*)*, %"class.blink::FetchClientSettingsObject"* (%"class.blink::ResourceFetcherProperties"*)** %8, i64 3
  %10 = load %"class.blink::FetchClientSettingsObject"* (%"class.blink::ResourceFetcherProperties"*)*, %"class.blink::FetchClientSettingsObject"* (%"class.blink::ResourceFetcherProperties"*)** %9, align 8
  %11 = tail call dereferenceable(8) %"class.blink::FetchClientSettingsObject"* %10(%"class.blink::ResourceFetcherProperties"* nonnull %4) #4
  %12 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_25FetchClientSettingsObjectEEEPhm(i64 296) #4
  %13 = bitcast i8* %12 to %"class.blink::FetchClientSettingsObjectSnapshot"*
  tail call void @_ZN5blink33FetchClientSettingsObjectSnapshotC1ERKNS_25FetchClientSettingsObjectE(%"class.blink::FetchClientSettingsObjectSnapshot"* %13, %"class.blink::FetchClientSettingsObject"* dereferenceable(8) %11) #4
  %14 = getelementptr inbounds i8, i8* %12, i64 -4
  %15 = bitcast i8* %14 to i16*
  %16 = load atomic i16, i16* %15 monotonic, align 2
  %17 = or i16 %16, 1
  store atomic i16 %17, i16* %15 release, align 2
  %18 = getelementptr inbounds %"class.blink::DetachableResourceFetcherProperties", %"class.blink::DetachableResourceFetcherProperties"* %0, i64 0, i32 2
  %19 = ptrtoint i8* %12 to i64
  %20 = bitcast %"class.blink::Member.0"* %18 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %6
  %24 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %12) #4
  br label %25

25:                                               ; preds = %6, %23
  %26 = load %"class.blink::ResourceFetcherProperties"*, %"class.blink::ResourceFetcherProperties"** %3, align 8
  %27 = bitcast %"class.blink::ResourceFetcherProperties"* %26 to i1 (%"class.blink::ResourceFetcherProperties"*)***
  %28 = load i1 (%"class.blink::ResourceFetcherProperties"*)**, i1 (%"class.blink::ResourceFetcherProperties"*)*** %27, align 8
  %29 = getelementptr inbounds i1 (%"class.blink::ResourceFetcherProperties"*)*, i1 (%"class.blink::ResourceFetcherProperties"*)** %28, i64 4
  %30 = load i1 (%"class.blink::ResourceFetcherProperties"*)*, i1 (%"class.blink::ResourceFetcherProperties"*)** %29, align 8
  %31 = tail call zeroext i1 %30(%"class.blink::ResourceFetcherProperties"* %26) #4
  %32 = getelementptr inbounds %"class.blink::DetachableResourceFetcherProperties", %"class.blink::DetachableResourceFetcherProperties"* %0, i64 0, i32 3
  %33 = zext i1 %31 to i8
  store i8 %33, i8* %32, align 8
  %34 = load %"class.blink::ResourceFetcherProperties"*, %"class.blink::ResourceFetcherProperties"** %3, align 8
  %35 = bitcast %"class.blink::ResourceFetcherProperties"* %34 to i1 (%"class.blink::ResourceFetcherProperties"*)***
  %36 = load i1 (%"class.blink::ResourceFetcherProperties"*)**, i1 (%"class.blink::ResourceFetcherProperties"*)*** %35, align 8
  %37 = getelementptr inbounds i1 (%"class.blink::ResourceFetcherProperties"*)*, i1 (%"class.blink::ResourceFetcherProperties"*)** %36, i64 7
  %38 = load i1 (%"class.blink::ResourceFetcherProperties"*)*, i1 (%"class.blink::ResourceFetcherProperties"*)** %37, align 8
  %39 = tail call zeroext i1 %38(%"class.blink::ResourceFetcherProperties"* %34) #4
  %40 = getelementptr inbounds %"class.blink::DetachableResourceFetcherProperties", %"class.blink::DetachableResourceFetcherProperties"* %0, i64 0, i32 4
  %41 = zext i1 %39 to i8
  store i8 %41, i8* %40, align 1
  %42 = load %"class.blink::ResourceFetcherProperties"*, %"class.blink::ResourceFetcherProperties"** %3, align 8
  %43 = bitcast %"class.blink::ResourceFetcherProperties"* %42 to i8 (%"class.blink::ResourceFetcherProperties"*)***
  %44 = load i8 (%"class.blink::ResourceFetcherProperties"*)**, i8 (%"class.blink::ResourceFetcherProperties"*)*** %43, align 8
  %45 = getelementptr inbounds i8 (%"class.blink::ResourceFetcherProperties"*)*, i8 (%"class.blink::ResourceFetcherProperties"*)** %44, i64 8
  %46 = load i8 (%"class.blink::ResourceFetcherProperties"*)*, i8 (%"class.blink::ResourceFetcherProperties"*)** %45, align 8
  %47 = tail call zeroext i8 %46(%"class.blink::ResourceFetcherProperties"* %42) #4
  %48 = getelementptr inbounds %"class.blink::DetachableResourceFetcherProperties", %"class.blink::DetachableResourceFetcherProperties"* %0, i64 0, i32 5
  store i8 %47, i8* %48, align 2
  %49 = load %"class.blink::ResourceFetcherProperties"*, %"class.blink::ResourceFetcherProperties"** %3, align 8
  %50 = bitcast %"class.blink::ResourceFetcherProperties"* %49 to i1 (%"class.blink::ResourceFetcherProperties"*)***
  %51 = load i1 (%"class.blink::ResourceFetcherProperties"*)**, i1 (%"class.blink::ResourceFetcherProperties"*)*** %50, align 8
  %52 = getelementptr inbounds i1 (%"class.blink::ResourceFetcherProperties"*)*, i1 (%"class.blink::ResourceFetcherProperties"*)** %51, i64 10
  %53 = load i1 (%"class.blink::ResourceFetcherProperties"*)*, i1 (%"class.blink::ResourceFetcherProperties"*)** %52, align 8
  %54 = tail call zeroext i1 %53(%"class.blink::ResourceFetcherProperties"* %49) #4
  %55 = getelementptr inbounds %"class.blink::DetachableResourceFetcherProperties", %"class.blink::DetachableResourceFetcherProperties"* %0, i64 0, i32 6
  %56 = zext i1 %54 to i8
  store i8 %56, i8* %55, align 1
  %57 = load %"class.blink::ResourceFetcherProperties"*, %"class.blink::ResourceFetcherProperties"** %3, align 8
  %58 = bitcast %"class.blink::ResourceFetcherProperties"* %57 to i1 (%"class.blink::ResourceFetcherProperties"*)***
  %59 = load i1 (%"class.blink::ResourceFetcherProperties"*)**, i1 (%"class.blink::ResourceFetcherProperties"*)*** %58, align 8
  %60 = getelementptr inbounds i1 (%"class.blink::ResourceFetcherProperties"*)*, i1 (%"class.blink::ResourceFetcherProperties"*)** %59, i64 12
  %61 = load i1 (%"class.blink::ResourceFetcherProperties"*)*, i1 (%"class.blink::ResourceFetcherProperties"*)** %60, align 8
  %62 = tail call zeroext i1 %61(%"class.blink::ResourceFetcherProperties"* %57) #4
  %63 = getelementptr inbounds %"class.blink::DetachableResourceFetcherProperties", %"class.blink::DetachableResourceFetcherProperties"* %0, i64 0, i32 7
  %64 = zext i1 %62 to i8
  store i8 %64, i8* %63, align 4
  %65 = load %"class.blink::ResourceFetcherProperties"*, %"class.blink::ResourceFetcherProperties"** %3, align 8
  %66 = bitcast %"class.blink::ResourceFetcherProperties"* %65 to %"class.blink::KURL"* (%"class.blink::ResourceFetcherProperties"*)***
  %67 = load %"class.blink::KURL"* (%"class.blink::ResourceFetcherProperties"*)**, %"class.blink::KURL"* (%"class.blink::ResourceFetcherProperties"*)*** %66, align 8
  %68 = getelementptr inbounds %"class.blink::KURL"* (%"class.blink::ResourceFetcherProperties"*)*, %"class.blink::KURL"* (%"class.blink::ResourceFetcherProperties"*)** %67, i64 14
  %69 = load %"class.blink::KURL"* (%"class.blink::ResourceFetcherProperties"*)*, %"class.blink::KURL"* (%"class.blink::ResourceFetcherProperties"*)** %68, align 8
  %70 = tail call dereferenceable(112) %"class.blink::KURL"* %69(%"class.blink::ResourceFetcherProperties"* %65) #4
  %71 = getelementptr inbounds %"class.blink::DetachableResourceFetcherProperties", %"class.blink::DetachableResourceFetcherProperties"* %0, i64 0, i32 9
  %72 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* %71, %"class.blink::KURL"* dereferenceable(112) %70) #4
  %73 = load %"class.blink::ResourceFetcherProperties"*, %"class.blink::ResourceFetcherProperties"** %3, align 8
  %74 = bitcast %"class.blink::ResourceFetcherProperties"* %73 to i32 (%"class.blink::ResourceFetcherProperties"*)***
  %75 = load i32 (%"class.blink::ResourceFetcherProperties"*)**, i32 (%"class.blink::ResourceFetcherProperties"*)*** %74, align 8
  %76 = getelementptr inbounds i32 (%"class.blink::ResourceFetcherProperties"*)*, i32 (%"class.blink::ResourceFetcherProperties"*)** %75, i64 15
  %77 = load i32 (%"class.blink::ResourceFetcherProperties"*)*, i32 (%"class.blink::ResourceFetcherProperties"*)** %76, align 8
  %78 = tail call i32 %77(%"class.blink::ResourceFetcherProperties"* %73) #4
  %79 = getelementptr inbounds %"class.blink::DetachableResourceFetcherProperties", %"class.blink::DetachableResourceFetcherProperties"* %0, i64 0, i32 10
  store i32 %78, i32* %79, align 8
  %80 = bitcast %"class.blink::Member"* %2 to i64*
  store atomic i64 0, i64* %80 monotonic, align 8
  br label %81

81:                                               ; preds = %1, %25
  ret void
}

declare dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink35DetachableResourceFetcherProperties5TraceEPNS_7VisitorE(%"class.blink::DetachableResourceFetcherProperties"* nocapture readonly, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DetachableResourceFetcherProperties", %"class.blink::DetachableResourceFetcherProperties"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_25ResourceFetcherPropertiesEE5TraceEPNS_7VisitorEPKv) #4
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::DetachableResourceFetcherProperties", %"class.blink::DetachableResourceFetcherProperties"* %0, i64 0, i32 2
  %15 = bitcast %"class.blink::Member.0"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_25FetchClientSettingsObjectEE5TraceEPNS_7VisitorEPKv) #4
  br label %24

24:                                               ; preds = %13, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink35DetachableResourceFetcherPropertiesD2Ev(%"class.blink::DetachableResourceFetcherProperties"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::DetachableResourceFetcherProperties", %"class.blink::DetachableResourceFetcherProperties"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink35DetachableResourceFetcherPropertiesE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::DetachableResourceFetcherProperties", %"class.blink::DetachableResourceFetcherProperties"* %0, i64 0, i32 9
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %3) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink35DetachableResourceFetcherPropertiesD0Ev(%"class.blink::DetachableResourceFetcherProperties"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::DetachableResourceFetcherProperties", %"class.blink::DetachableResourceFetcherProperties"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink35DetachableResourceFetcherPropertiesE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::DetachableResourceFetcherProperties", %"class.blink::DetachableResourceFetcherProperties"* %0, i64 0, i32 9
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %3) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::FetchClientSettingsObject"* @_ZNK5blink35DetachableResourceFetcherProperties28GetFetchClientSettingsObjectEv(%"class.blink::DetachableResourceFetcherProperties"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::DetachableResourceFetcherProperties", %"class.blink::DetachableResourceFetcherProperties"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::ResourceFetcherProperties"*, %"class.blink::ResourceFetcherProperties"** %2, align 8
  %4 = icmp eq %"class.blink::ResourceFetcherProperties"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::ResourceFetcherProperties"* %3 to %"class.blink::FetchClientSettingsObject"* (%"class.blink::ResourceFetcherProperties"*)***
  %7 = load %"class.blink::FetchClientSettingsObject"* (%"class.blink::ResourceFetcherProperties"*)**, %"class.blink::FetchClientSettingsObject"* (%"class.blink::ResourceFetcherProperties"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::FetchClientSettingsObject"* (%"class.blink::ResourceFetcherProperties"*)*, %"class.blink::FetchClientSettingsObject"* (%"class.blink::ResourceFetcherProperties"*)** %7, i64 3
  %9 = load %"class.blink::FetchClientSettingsObject"* (%"class.blink::ResourceFetcherProperties"*)*, %"class.blink::FetchClientSettingsObject"* (%"class.blink::ResourceFetcherProperties"*)** %8, align 8
  %10 = tail call dereferenceable(8) %"class.blink::FetchClientSettingsObject"* %9(%"class.blink::ResourceFetcherProperties"* nonnull %3) #4
  br label %14

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.blink::DetachableResourceFetcherProperties", %"class.blink::DetachableResourceFetcherProperties"* %0, i64 0, i32 2, i32 0, i32 0
  %13 = load %"class.blink::FetchClientSettingsObject"*, %"class.blink::FetchClientSettingsObject"** %12, align 8
  br label %14

14:                                               ; preds = %11, %5
  %15 = phi %"class.blink::FetchClientSettingsObject"* [ %10, %5 ], [ %13, %11 ]
  ret %"class.blink::FetchClientSettingsObject"* %15
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink35DetachableResourceFetcherProperties11IsMainFrameEv(%"class.blink::DetachableResourceFetcherProperties"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::DetachableResourceFetcherProperties", %"class.blink::DetachableResourceFetcherProperties"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::ResourceFetcherProperties"*, %"class.blink::ResourceFetcherProperties"** %2, align 8
  %4 = icmp eq %"class.blink::ResourceFetcherProperties"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::ResourceFetcherProperties"* %3 to i1 (%"class.blink::ResourceFetcherProperties"*)***
  %7 = load i1 (%"class.blink::ResourceFetcherProperties"*)**, i1 (%"class.blink::ResourceFetcherProperties"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.blink::ResourceFetcherProperties"*)*, i1 (%"class.blink::ResourceFetcherProperties"*)** %7, i64 4
  %9 = load i1 (%"class.blink::ResourceFetcherProperties"*)*, i1 (%"class.blink::ResourceFetcherProperties"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.blink::ResourceFetcherProperties"* nonnull %3) #4
  br label %15

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.blink::DetachableResourceFetcherProperties", %"class.blink::DetachableResourceFetcherProperties"* %0, i64 0, i32 3
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp ne i8 %13, 0
  br label %15

15:                                               ; preds = %11, %5
  %16 = phi i1 [ %10, %5 ], [ %14, %11 ]
  ret i1 %16
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink35DetachableResourceFetcherProperties30GetControllerServiceWorkerModeEv(%"class.blink::DetachableResourceFetcherProperties"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::DetachableResourceFetcherProperties", %"class.blink::DetachableResourceFetcherProperties"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::ResourceFetcherProperties"*, %"class.blink::ResourceFetcherProperties"** %2, align 8
  %4 = icmp eq %"class.blink::ResourceFetcherProperties"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::ResourceFetcherProperties"* %3 to i32 (%"class.blink::ResourceFetcherProperties"*)***
  %7 = load i32 (%"class.blink::ResourceFetcherProperties"*)**, i32 (%"class.blink::ResourceFetcherProperties"*)*** %6, align 8
  %8 = getelementptr inbounds i32 (%"class.blink::ResourceFetcherProperties"*)*, i32 (%"class.blink::ResourceFetcherProperties"*)** %7, i64 5
  %9 = load i32 (%"class.blink::ResourceFetcherProperties"*)*, i32 (%"class.blink::ResourceFetcherProperties"*)** %8, align 8
  %10 = tail call i32 %9(%"class.blink::ResourceFetcherProperties"* nonnull %3) #4
  br label %11

11:                                               ; preds = %1, %5
  %12 = phi i32 [ %10, %5 ], [ 0, %1 ]
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink35DetachableResourceFetcherProperties15ServiceWorkerIdEv(%"class.blink::DetachableResourceFetcherProperties"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::DetachableResourceFetcherProperties", %"class.blink::DetachableResourceFetcherProperties"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::ResourceFetcherProperties"*, %"class.blink::ResourceFetcherProperties"** %2, align 8
  %4 = bitcast %"class.blink::ResourceFetcherProperties"* %3 to i64 (%"class.blink::ResourceFetcherProperties"*)***
  %5 = load i64 (%"class.blink::ResourceFetcherProperties"*)**, i64 (%"class.blink::ResourceFetcherProperties"*)*** %4, align 8
  %6 = getelementptr inbounds i64 (%"class.blink::ResourceFetcherProperties"*)*, i64 (%"class.blink::ResourceFetcherProperties"*)** %5, i64 6
  %7 = load i64 (%"class.blink::ResourceFetcherProperties"*)*, i64 (%"class.blink::ResourceFetcherProperties"*)** %6, align 8
  %8 = tail call i64 %7(%"class.blink::ResourceFetcherProperties"* %3) #4
  ret i64 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink35DetachableResourceFetcherProperties8IsPausedEv(%"class.blink::DetachableResourceFetcherProperties"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::DetachableResourceFetcherProperties", %"class.blink::DetachableResourceFetcherProperties"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::ResourceFetcherProperties"*, %"class.blink::ResourceFetcherProperties"** %2, align 8
  %4 = icmp eq %"class.blink::ResourceFetcherProperties"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::ResourceFetcherProperties"* %3 to i1 (%"class.blink::ResourceFetcherProperties"*)***
  %7 = load i1 (%"class.blink::ResourceFetcherProperties"*)**, i1 (%"class.blink::ResourceFetcherProperties"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.blink::ResourceFetcherProperties"*)*, i1 (%"class.blink::ResourceFetcherProperties"*)** %7, i64 7
  %9 = load i1 (%"class.blink::ResourceFetcherProperties"*)*, i1 (%"class.blink::ResourceFetcherProperties"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.blink::ResourceFetcherProperties"* nonnull %3) #4
  br label %15

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.blink::DetachableResourceFetcherProperties", %"class.blink::DetachableResourceFetcherProperties"* %0, i64 0, i32 4
  %13 = load i8, i8* %12, align 1, !range !2
  %14 = icmp ne i8 %13, 0
  br label %15

15:                                               ; preds = %11, %5
  %16 = phi i1 [ %10, %5 ], [ %14, %11 ]
  ret i1 %16
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i8 @_ZNK5blink35DetachableResourceFetcherProperties10FreezeModeEv(%"class.blink::DetachableResourceFetcherProperties"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::DetachableResourceFetcherProperties", %"class.blink::DetachableResourceFetcherProperties"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::ResourceFetcherProperties"*, %"class.blink::ResourceFetcherProperties"** %2, align 8
  %4 = icmp eq %"class.blink::ResourceFetcherProperties"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::ResourceFetcherProperties"* %3 to i8 (%"class.blink::ResourceFetcherProperties"*)***
  %7 = load i8 (%"class.blink::ResourceFetcherProperties"*)**, i8 (%"class.blink::ResourceFetcherProperties"*)*** %6, align 8
  %8 = getelementptr inbounds i8 (%"class.blink::ResourceFetcherProperties"*)*, i8 (%"class.blink::ResourceFetcherProperties"*)** %7, i64 8
  %9 = load i8 (%"class.blink::ResourceFetcherProperties"*)*, i8 (%"class.blink::ResourceFetcherProperties"*)** %8, align 8
  %10 = tail call zeroext i8 %9(%"class.blink::ResourceFetcherProperties"* nonnull %3) #4
  br label %14

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.blink::DetachableResourceFetcherProperties", %"class.blink::DetachableResourceFetcherProperties"* %0, i64 0, i32 5
  %13 = load i8, i8* %12, align 2
  br label %14

14:                                               ; preds = %11, %5
  %15 = phi i8 [ %10, %5 ], [ %13, %11 ]
  ret i8 %15
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink35DetachableResourceFetcherProperties10IsDetachedEv(%"class.blink::DetachableResourceFetcherProperties"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::DetachableResourceFetcherProperties", %"class.blink::DetachableResourceFetcherProperties"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::ResourceFetcherProperties"*, %"class.blink::ResourceFetcherProperties"** %2, align 8
  %4 = icmp eq %"class.blink::ResourceFetcherProperties"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::ResourceFetcherProperties"* %3 to i1 (%"class.blink::ResourceFetcherProperties"*)***
  %7 = load i1 (%"class.blink::ResourceFetcherProperties"*)**, i1 (%"class.blink::ResourceFetcherProperties"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.blink::ResourceFetcherProperties"*)*, i1 (%"class.blink::ResourceFetcherProperties"*)** %7, i64 9
  %9 = load i1 (%"class.blink::ResourceFetcherProperties"*)*, i1 (%"class.blink::ResourceFetcherProperties"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.blink::ResourceFetcherProperties"* nonnull %3) #4
  br label %11

11:                                               ; preds = %1, %5
  %12 = phi i1 [ %10, %5 ], [ true, %1 ]
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink35DetachableResourceFetcherProperties14IsLoadCompleteEv(%"class.blink::DetachableResourceFetcherProperties"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::DetachableResourceFetcherProperties", %"class.blink::DetachableResourceFetcherProperties"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::ResourceFetcherProperties"*, %"class.blink::ResourceFetcherProperties"** %2, align 8
  %4 = icmp eq %"class.blink::ResourceFetcherProperties"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::ResourceFetcherProperties"* %3 to i1 (%"class.blink::ResourceFetcherProperties"*)***
  %7 = load i1 (%"class.blink::ResourceFetcherProperties"*)**, i1 (%"class.blink::ResourceFetcherProperties"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.blink::ResourceFetcherProperties"*)*, i1 (%"class.blink::ResourceFetcherProperties"*)** %7, i64 10
  %9 = load i1 (%"class.blink::ResourceFetcherProperties"*)*, i1 (%"class.blink::ResourceFetcherProperties"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.blink::ResourceFetcherProperties"* nonnull %3) #4
  br label %15

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.blink::DetachableResourceFetcherProperties", %"class.blink::DetachableResourceFetcherProperties"* %0, i64 0, i32 6
  %13 = load i8, i8* %12, align 1, !range !2
  %14 = icmp ne i8 %13, 0
  br label %15

15:                                               ; preds = %11, %5
  %16 = phi i1 [ %10, %5 ], [ %14, %11 ]
  ret i1 %16
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink35DetachableResourceFetcherProperties29ShouldBlockLoadingSubResourceEv(%"class.blink::DetachableResourceFetcherProperties"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::DetachableResourceFetcherProperties", %"class.blink::DetachableResourceFetcherProperties"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::ResourceFetcherProperties"*, %"class.blink::ResourceFetcherProperties"** %2, align 8
  %4 = icmp eq %"class.blink::ResourceFetcherProperties"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::ResourceFetcherProperties"* %3 to i1 (%"class.blink::ResourceFetcherProperties"*)***
  %7 = load i1 (%"class.blink::ResourceFetcherProperties"*)**, i1 (%"class.blink::ResourceFetcherProperties"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.blink::ResourceFetcherProperties"*)*, i1 (%"class.blink::ResourceFetcherProperties"*)** %7, i64 11
  %9 = load i1 (%"class.blink::ResourceFetcherProperties"*)*, i1 (%"class.blink::ResourceFetcherProperties"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.blink::ResourceFetcherProperties"* nonnull %3) #4
  br label %11

11:                                               ; preds = %1, %5
  %12 = phi i1 [ %10, %5 ], [ true, %1 ]
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink35DetachableResourceFetcherProperties33IsSubframeDeprioritizationEnabledEv(%"class.blink::DetachableResourceFetcherProperties"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::DetachableResourceFetcherProperties", %"class.blink::DetachableResourceFetcherProperties"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::ResourceFetcherProperties"*, %"class.blink::ResourceFetcherProperties"** %2, align 8
  %4 = icmp eq %"class.blink::ResourceFetcherProperties"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::ResourceFetcherProperties"* %3 to i1 (%"class.blink::ResourceFetcherProperties"*)***
  %7 = load i1 (%"class.blink::ResourceFetcherProperties"*)**, i1 (%"class.blink::ResourceFetcherProperties"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.blink::ResourceFetcherProperties"*)*, i1 (%"class.blink::ResourceFetcherProperties"*)** %7, i64 12
  %9 = load i1 (%"class.blink::ResourceFetcherProperties"*)*, i1 (%"class.blink::ResourceFetcherProperties"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.blink::ResourceFetcherProperties"* nonnull %3) #4
  br label %15

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.blink::DetachableResourceFetcherProperties", %"class.blink::DetachableResourceFetcherProperties"* %0, i64 0, i32 7
  %13 = load i8, i8* %12, align 4, !range !2
  %14 = icmp ne i8 %13, 0
  br label %15

15:                                               ; preds = %11, %5
  %16 = phi i1 [ %10, %5 ], [ %14, %11 ]
  ret i1 %16
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink35DetachableResourceFetcherProperties14GetFrameStatusEv(%"class.blink::DetachableResourceFetcherProperties"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::DetachableResourceFetcherProperties", %"class.blink::DetachableResourceFetcherProperties"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::ResourceFetcherProperties"*, %"class.blink::ResourceFetcherProperties"** %2, align 8
  %4 = icmp eq %"class.blink::ResourceFetcherProperties"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::ResourceFetcherProperties"* %3 to i32 (%"class.blink::ResourceFetcherProperties"*)***
  %7 = load i32 (%"class.blink::ResourceFetcherProperties"*)**, i32 (%"class.blink::ResourceFetcherProperties"*)*** %6, align 8
  %8 = getelementptr inbounds i32 (%"class.blink::ResourceFetcherProperties"*)*, i32 (%"class.blink::ResourceFetcherProperties"*)** %7, i64 13
  %9 = load i32 (%"class.blink::ResourceFetcherProperties"*)*, i32 (%"class.blink::ResourceFetcherProperties"*)** %8, align 8
  %10 = tail call i32 %9(%"class.blink::ResourceFetcherProperties"* nonnull %3) #4
  br label %11

11:                                               ; preds = %1, %5
  %12 = phi i32 [ %10, %5 ], [ 0, %1 ]
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink35DetachableResourceFetcherProperties20WebBundlePhysicalUrlEv(%"class.blink::DetachableResourceFetcherProperties"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::DetachableResourceFetcherProperties", %"class.blink::DetachableResourceFetcherProperties"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::ResourceFetcherProperties"*, %"class.blink::ResourceFetcherProperties"** %2, align 8
  %4 = icmp eq %"class.blink::ResourceFetcherProperties"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::ResourceFetcherProperties"* %3 to %"class.blink::KURL"* (%"class.blink::ResourceFetcherProperties"*)***
  %7 = load %"class.blink::KURL"* (%"class.blink::ResourceFetcherProperties"*)**, %"class.blink::KURL"* (%"class.blink::ResourceFetcherProperties"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::KURL"* (%"class.blink::ResourceFetcherProperties"*)*, %"class.blink::KURL"* (%"class.blink::ResourceFetcherProperties"*)** %7, i64 14
  %9 = load %"class.blink::KURL"* (%"class.blink::ResourceFetcherProperties"*)*, %"class.blink::KURL"* (%"class.blink::ResourceFetcherProperties"*)** %8, align 8
  %10 = tail call dereferenceable(112) %"class.blink::KURL"* %9(%"class.blink::ResourceFetcherProperties"* nonnull %3) #4
  br label %13

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.blink::DetachableResourceFetcherProperties", %"class.blink::DetachableResourceFetcherProperties"* %0, i64 0, i32 9
  br label %13

13:                                               ; preds = %11, %5
  %14 = phi %"class.blink::KURL"* [ %10, %5 ], [ %12, %11 ]
  ret %"class.blink::KURL"* %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink35DetachableResourceFetcherProperties28GetOutstandingThrottledLimitEv(%"class.blink::DetachableResourceFetcherProperties"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::DetachableResourceFetcherProperties", %"class.blink::DetachableResourceFetcherProperties"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::ResourceFetcherProperties"*, %"class.blink::ResourceFetcherProperties"** %2, align 8
  %4 = icmp eq %"class.blink::ResourceFetcherProperties"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::ResourceFetcherProperties"* %3 to i32 (%"class.blink::ResourceFetcherProperties"*)***
  %7 = load i32 (%"class.blink::ResourceFetcherProperties"*)**, i32 (%"class.blink::ResourceFetcherProperties"*)*** %6, align 8
  %8 = getelementptr inbounds i32 (%"class.blink::ResourceFetcherProperties"*)*, i32 (%"class.blink::ResourceFetcherProperties"*)** %7, i64 15
  %9 = load i32 (%"class.blink::ResourceFetcherProperties"*)*, i32 (%"class.blink::ResourceFetcherProperties"*)** %8, align 8
  %10 = tail call i32 %9(%"class.blink::ResourceFetcherProperties"* nonnull %3) #4
  br label %14

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.blink::DetachableResourceFetcherProperties", %"class.blink::DetachableResourceFetcherProperties"* %0, i64 0, i32 10
  %13 = load i32, i32* %12, align 8
  br label %14

14:                                               ; preds = %11, %5
  %15 = phi i32 [ %10, %5 ], [ %13, %11 ]
  ret i32 %15
}

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN5blink33FetchClientSettingsObjectSnapshotC1ERKNS_25FetchClientSettingsObjectE(%"class.blink::FetchClientSettingsObjectSnapshot"*, %"class.blink::FetchClientSettingsObject"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_25FetchClientSettingsObjectEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #4
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #4
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #4
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_25FetchClientSettingsObjectEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_25FetchClientSettingsObjectEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_25FetchClientSettingsObjectEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #4
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #4
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #4
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #4
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #4
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #4
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* %40, i8* %41) #4
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #4
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #4
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #4
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #4
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #4
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !3

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #4
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_25FetchClientSettingsObjectEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::FetchClientSettingsObject"*
  %4 = bitcast i8* %1 to void (%"class.blink::FetchClientSettingsObject"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::FetchClientSettingsObject"*, %"class.blink::Visitor"*)**, void (%"class.blink::FetchClientSettingsObject"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::FetchClientSettingsObject"*, %"class.blink::Visitor"*)*, void (%"class.blink::FetchClientSettingsObject"*, %"class.blink::Visitor"*)** %5, i64 12
  %7 = load void (%"class.blink::FetchClientSettingsObject"*, %"class.blink::Visitor"*)*, void (%"class.blink::FetchClientSettingsObject"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::FetchClientSettingsObject"* %3, %"class.blink::Visitor"* %0) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_25FetchClientSettingsObjectEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::FetchClientSettingsObject"*
  %3 = bitcast i8* %0 to void (%"class.blink::FetchClientSettingsObject"*)***
  %4 = load void (%"class.blink::FetchClientSettingsObject"*)**, void (%"class.blink::FetchClientSettingsObject"*)*** %3, align 8
  %5 = load void (%"class.blink::FetchClientSettingsObject"*)*, void (%"class.blink::FetchClientSettingsObject"*)** %4, align 8
  tail call void %5(%"class.blink::FetchClientSettingsObject"* %2) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_25FetchClientSettingsObjectEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_25ResourceFetcherPropertiesEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ResourceFetcherProperties"*
  %4 = bitcast i8* %1 to void (%"class.blink::ResourceFetcherProperties"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ResourceFetcherProperties"*, %"class.blink::Visitor"*)**, void (%"class.blink::ResourceFetcherProperties"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ResourceFetcherProperties"*, %"class.blink::Visitor"*)*, void (%"class.blink::ResourceFetcherProperties"*, %"class.blink::Visitor"*)** %5, i64 2
  %7 = load void (%"class.blink::ResourceFetcherProperties"*, %"class.blink::Visitor"*)*, void (%"class.blink::ResourceFetcherProperties"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ResourceFetcherProperties"* %3, %"class.blink::Visitor"* %0) #4
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
