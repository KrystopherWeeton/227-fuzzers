; ModuleID = '../../third_party/blink/common/privacy_budget/identifiable_token_builder.cc'
source_filename = "../../third_party/blink/common/privacy_budget/identifiable_token_builder.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.blink::IdentifiableTokenBuilder" = type { %"struct.std::__1::array", i8*, i64 }
%"struct.std::__1::array" = type { [64 x i8] }
%"class.base::CheckedContiguousIterator" = type { i8*, i8*, i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZN5blink24IdentifiableTokenBuilder8AddValueImLPv0EEERS0_T_ = comdat any

$_ZN5blink24IdentifiableTokenBuilder8AddValueIlLPv0EEERS0_T_ = comdat any

$_ZN4base25CheckedContiguousIteratorIKhEC2EPS1_S3_S3_ = comdat any

$_ZZN7logging15CheckOpValueStrIPKhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN4base25CheckedContiguousIteratorIKhEpLEl = comdat any

@_ZN5blink24IdentifiableTokenBuilder17kBlockSizeInBytesE = hidden local_unnamed_addr constant i64 64, align 8
@.str = private unnamed_addr constant [29 x i8] c"../../base/containers/span.h\00", align 1
@.str.5 = private unnamed_addr constant [17 x i8] c"start <= current\00", align 1
@.str.6 = private unnamed_addr constant [42 x i8] c"../../base/containers/checked_iterators.h\00", align 1
@.str.7 = private unnamed_addr constant [15 x i8] c"current <= end\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@.str.9 = private unnamed_addr constant [13 x i8] c"begin <= end\00", align 1
@.str.10 = private unnamed_addr constant [23 x i8] c"rhs <= end_ - current_\00", align 1
@.str.11 = private unnamed_addr constant [26 x i8] c"-rhs <= current_ - start_\00", align 1

@_ZN5blink24IdentifiableTokenBuilderC1Ev = hidden unnamed_addr alias void (%"class.blink::IdentifiableTokenBuilder"*), void (%"class.blink::IdentifiableTokenBuilder"*)* @_ZN5blink24IdentifiableTokenBuilderC2Ev
@_ZN5blink24IdentifiableTokenBuilderC1ERKS0_ = hidden unnamed_addr alias void (%"class.blink::IdentifiableTokenBuilder"*, %"class.blink::IdentifiableTokenBuilder"*), void (%"class.blink::IdentifiableTokenBuilder"*, %"class.blink::IdentifiableTokenBuilder"*)* @_ZN5blink24IdentifiableTokenBuilderC2ERKS0_
@_ZN5blink24IdentifiableTokenBuilderC1EN4base4spanIKhLm18446744073709551615EEE = hidden unnamed_addr alias void (%"class.blink::IdentifiableTokenBuilder"*, i64, i8*), void (%"class.blink::IdentifiableTokenBuilder"*, i64, i8*)* @_ZN5blink24IdentifiableTokenBuilderC2EN4base4spanIKhLm18446744073709551615EEE

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink24IdentifiableTokenBuilderC2Ev(%"class.blink::IdentifiableTokenBuilder"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %0, i64 0, i32 0, i32 0, i64 0
  store i8* %3, i8** %2, align 8
  %4 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %0, i64 0, i32 2
  store i64 6544625333304541877, i64* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24IdentifiableTokenBuilderC2ERKS0_(%"class.blink::IdentifiableTokenBuilder"*, %"class.blink::IdentifiableTokenBuilder"* dereferenceable(80)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %0, i64 0, i32 0, i32 0, i64 0
  store i8* %4, i8** %3, align 8
  %5 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %1, i64 0, i32 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 1 %5, i64 64, i1 false)
  store i8* %4, i8** %3, align 8
  %6 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %1, i64 0, i32 1
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = ptrtoint %"class.blink::IdentifiableTokenBuilder"* %1 to i64
  %10 = sub i64 %8, %9
  %11 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %0, i64 0, i32 0, i32 0, i64 %10
  store i8* %11, i8** %3, align 8
  %12 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %1, i64 0, i32 2
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %0, i64 0, i32 2
  store i64 %13, i64* %14, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK5blink24IdentifiableTokenBuilder11PartialSizeEv(%"class.blink::IdentifiableTokenBuilder"*) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %0, i64 0, i32 1
  %3 = bitcast i8** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = ptrtoint %"class.blink::IdentifiableTokenBuilder"* %0 to i64
  %6 = sub i64 %4, %5
  ret i64 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24IdentifiableTokenBuilderC2EN4base4spanIKhLm18446744073709551615EEE(%"class.blink::IdentifiableTokenBuilder"*, i64, i8*) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %0, i64 0, i32 0, i32 0, i64 0
  store i8* %5, i8** %4, align 8
  %6 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %0, i64 0, i32 2
  store i64 6544625333304541877, i64* %6, align 8
  %7 = icmp eq i64 %1, 0
  br i1 %7, label %25, label %8

8:                                                ; preds = %3
  %9 = icmp ugt i64 %1, 63
  br i1 %9, label %10, label %21

10:                                               ; preds = %8, %10
  %11 = phi i64 [ %14, %10 ], [ 6544625333304541877, %8 ]
  %12 = phi i64 [ %15, %10 ], [ %1, %8 ]
  %13 = phi i8* [ %16, %10 ], [ %2, %8 ]
  %14 = tail call i64 @_ZN4base6legacy18CityHash64WithSeedENS_4spanIKhLm18446744073709551615EEEm(i64 64, i8* %13, i64 %11) #11
  store i64 %14, i64* %6, align 8
  %15 = add i64 %12, -64
  %16 = getelementptr inbounds i8, i8* %13, i64 64
  %17 = icmp ugt i64 %15, 63
  br i1 %17, label %10, label %18

18:                                               ; preds = %10
  %19 = and i64 %1, 63
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %25, label %21

21:                                               ; preds = %18, %8
  %22 = phi i64 [ %19, %18 ], [ %1, %8 ]
  %23 = phi i8* [ %16, %18 ], [ %2, %8 ]
  %24 = tail call { i64, i8* } @_ZN5blink24IdentifiableTokenBuilder15SkimIntoPartialEN4base4spanIKhLm18446744073709551615EEE(%"class.blink::IdentifiableTokenBuilder"* %0, i64 %22, i8* %23) #11
  br label %25

25:                                               ; preds = %3, %18, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(80) %"class.blink::IdentifiableTokenBuilder"* @_ZN5blink24IdentifiableTokenBuilder8AddBytesEN4base4spanIKhLm18446744073709551615EEE(%"class.blink::IdentifiableTokenBuilder"* returned, i64, i8*) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %0, i64 0, i32 0, i32 0, i64 0
  %5 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %0, i64 0, i32 1
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %4, %6
  br i1 %7, label %14, label %8

8:                                                ; preds = %3
  %9 = icmp eq i64 %1, 0
  br i1 %9, label %38, label %10

10:                                               ; preds = %8
  %11 = tail call { i64, i8* } @_ZN5blink24IdentifiableTokenBuilder15SkimIntoPartialEN4base4spanIKhLm18446744073709551615EEE(%"class.blink::IdentifiableTokenBuilder"* %0, i64 %1, i8* %2)
  %12 = extractvalue { i64, i8* } %11, 0
  %13 = extractvalue { i64, i8* } %11, 1
  br label %14

14:                                               ; preds = %3, %10
  %15 = phi i8* [ %2, %3 ], [ %13, %10 ]
  %16 = phi i64 [ %1, %3 ], [ %12, %10 ]
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %38, label %18

18:                                               ; preds = %14
  %19 = icmp ugt i64 %16, 63
  br i1 %19, label %20, label %34

20:                                               ; preds = %18
  %21 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %0, i64 0, i32 2
  %22 = load i64, i64* %21, align 8
  br label %23

23:                                               ; preds = %20, %23
  %24 = phi i64 [ %22, %20 ], [ %27, %23 ]
  %25 = phi i64 [ %16, %20 ], [ %28, %23 ]
  %26 = phi i8* [ %15, %20 ], [ %29, %23 ]
  %27 = tail call i64 @_ZN4base6legacy18CityHash64WithSeedENS_4spanIKhLm18446744073709551615EEEm(i64 64, i8* %26, i64 %24) #11
  store i64 %27, i64* %21, align 8
  %28 = add i64 %25, -64
  %29 = getelementptr inbounds i8, i8* %26, i64 64
  %30 = icmp ugt i64 %28, 63
  br i1 %30, label %23, label %31

31:                                               ; preds = %23
  %32 = and i64 %16, 63
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %38, label %34

34:                                               ; preds = %18, %31
  %35 = phi i64 [ %32, %31 ], [ %16, %18 ]
  %36 = phi i8* [ %29, %31 ], [ %15, %18 ]
  %37 = tail call { i64, i8* } @_ZN5blink24IdentifiableTokenBuilder15SkimIntoPartialEN4base4spanIKhLm18446744073709551615EEE(%"class.blink::IdentifiableTokenBuilder"* %0, i64 %35, i8* %36)
  br label %38

38:                                               ; preds = %8, %31, %14, %34
  ret %"class.blink::IdentifiableTokenBuilder"* %0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i8* } @_ZN5blink24IdentifiableTokenBuilder15SkimIntoPartialEN4base4spanIKhLm18446744073709551615EEE(%"class.blink::IdentifiableTokenBuilder"*, i64, i8*) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.base::CheckedContiguousIterator", align 8
  %5 = alloca %"class.base::CheckedContiguousIterator", align 8
  %6 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %0, i64 0, i32 1
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %0, i64 0, i32 0, i32 0, i64 64
  %10 = ptrtoint i8* %9 to i64
  %11 = sub i64 %10, %8
  %12 = icmp ugt i64 %11, %1
  %13 = select i1 %12, i64 %1, i64 %11
  %14 = getelementptr inbounds i8, i8* %2, i64 %1
  call void @_ZN4base25CheckedContiguousIteratorIKhEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator"* nonnull %5, i8* %2, i8* %2, i8* %14) #11
  %15 = load i8*, i8** %6, align 8
  %16 = bitcast %"class.base::CheckedContiguousIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16)
  %17 = bitcast %"class.base::CheckedContiguousIterator"* %5 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %5, i64 0, i32 1
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %5, i64 0, i32 2
  %22 = bitcast i8** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.base::CheckedContiguousIterator"* %4 to i64*
  store i64 %18, i64* %24, align 8
  %25 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %4, i64 0, i32 1
  store i8* %20, i8** %25, align 8
  %26 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %4, i64 0, i32 2
  %27 = bitcast i8** %26 to i64*
  store i64 %23, i64* %27, align 8
  %28 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKhEpLEl(%"class.base::CheckedContiguousIterator"* nonnull %4, i64 %13) #11
  %29 = bitcast i8** %25 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = ptrtoint i8* %20 to i64
  %32 = sub i64 %30, %31
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %35, label %34

34:                                               ; preds = %3
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %15, i8* align 1 %20, i64 %32, i1 false) #11
  br label %35

35:                                               ; preds = %3, %34
  %36 = getelementptr inbounds i8, i8* %15, i64 %32
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16)
  store i8* %36, i8** %6, align 8
  %37 = icmp eq i8* %36, %9
  br i1 %37, label %38, label %43

38:                                               ; preds = %35
  %39 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %0, i64 0, i32 0, i32 0, i64 0
  store i8* %39, i8** %6, align 8
  %40 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %0, i64 0, i32 2
  %41 = load i64, i64* %40, align 8
  %42 = call i64 @_ZN4base6legacy18CityHash64WithSeedENS_4spanIKhLm18446744073709551615EEEm(i64 64, i8* %39, i64 %41) #11
  store i64 %42, i64* %40, align 8
  br label %43

43:                                               ; preds = %35, %38
  %44 = sub i64 %1, %13
  %45 = getelementptr inbounds i8, i8* %2, i64 %13
  %46 = insertvalue { i64, i8* } undef, i64 %44, 0
  %47 = insertvalue { i64, i8* } %46, i8* %45, 1
  ret { i64, i8* } %47
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24IdentifiableTokenBuilder11DigestBlockEN4base4spanIKhLm64EEE(%"class.blink::IdentifiableTokenBuilder"* nocapture, i8*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %0, i64 0, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = tail call i64 @_ZN4base6legacy18CityHash64WithSeedENS_4spanIKhLm18446744073709551615EEEm(i64 64, i8* %1, i64 %4) #11
  store i64 %5, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(80) %"class.blink::IdentifiableTokenBuilder"* @_ZN5blink24IdentifiableTokenBuilder9AddAtomicEN4base4spanIKhLm18446744073709551615EEE(%"class.blink::IdentifiableTokenBuilder"* returned, i64, i8*) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %0, i64 0, i32 1
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = ptrtoint %"class.blink::IdentifiableTokenBuilder"* %0 to i64
  %8 = sub i64 %6, %7
  %9 = and i64 %8, 7
  %10 = icmp eq i64 %9, 0
  %11 = inttoptr i64 %6 to i8*
  br i1 %10, label %26, label %12

12:                                               ; preds = %3
  %13 = sub nuw nsw i64 8, %9
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %12
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %11, i8 0, i64 %13, i1 false) #11
  %16 = getelementptr i8, i8* %11, i64 %13
  br label %17

17:                                               ; preds = %15, %12
  %18 = phi i8* [ %11, %12 ], [ %16, %15 ]
  store i8* %18, i8** %4, align 8
  %19 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %0, i64 0, i32 0, i32 0, i64 64
  %20 = icmp eq i8* %18, %19
  br i1 %20, label %21, label %26

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %0, i64 0, i32 0, i32 0, i64 0
  store i8* %22, i8** %4, align 8
  %23 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %0, i64 0, i32 2
  %24 = load i64, i64* %23, align 8
  %25 = tail call i64 @_ZN4base6legacy18CityHash64WithSeedENS_4spanIKhLm18446744073709551615EEEm(i64 64, i8* %22, i64 %24) #11
  store i64 %25, i64* %23, align 8
  br label %26

26:                                               ; preds = %3, %17, %21
  %27 = tail call dereferenceable(80) %"class.blink::IdentifiableTokenBuilder"* @_ZN5blink24IdentifiableTokenBuilder8AddValueImLPv0EEERS0_T_(%"class.blink::IdentifiableTokenBuilder"* %0, i64 %1)
  %28 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %0, i64 0, i32 0, i32 0, i64 0
  %29 = load i8*, i8** %4, align 8
  %30 = icmp eq i8* %28, %29
  br i1 %30, label %37, label %31

31:                                               ; preds = %26
  %32 = icmp eq i64 %1, 0
  br i1 %32, label %61, label %33

33:                                               ; preds = %31
  %34 = tail call { i64, i8* } @_ZN5blink24IdentifiableTokenBuilder15SkimIntoPartialEN4base4spanIKhLm18446744073709551615EEE(%"class.blink::IdentifiableTokenBuilder"* %0, i64 %1, i8* %2) #11
  %35 = extractvalue { i64, i8* } %34, 0
  %36 = extractvalue { i64, i8* } %34, 1
  br label %37

37:                                               ; preds = %33, %26
  %38 = phi i8* [ %2, %26 ], [ %36, %33 ]
  %39 = phi i64 [ %1, %26 ], [ %35, %33 ]
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %61, label %41

41:                                               ; preds = %37
  %42 = icmp ugt i64 %39, 63
  br i1 %42, label %43, label %57

43:                                               ; preds = %41
  %44 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %0, i64 0, i32 2
  %45 = load i64, i64* %44, align 8
  br label %46

46:                                               ; preds = %46, %43
  %47 = phi i64 [ %45, %43 ], [ %50, %46 ]
  %48 = phi i64 [ %39, %43 ], [ %51, %46 ]
  %49 = phi i8* [ %38, %43 ], [ %52, %46 ]
  %50 = tail call i64 @_ZN4base6legacy18CityHash64WithSeedENS_4spanIKhLm18446744073709551615EEEm(i64 64, i8* %49, i64 %47) #11
  store i64 %50, i64* %44, align 8
  %51 = add i64 %48, -64
  %52 = getelementptr inbounds i8, i8* %49, i64 64
  %53 = icmp ugt i64 %51, 63
  br i1 %53, label %46, label %54

54:                                               ; preds = %46
  %55 = and i64 %39, 63
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %61, label %57

57:                                               ; preds = %54, %41
  %58 = phi i64 [ %55, %54 ], [ %39, %41 ]
  %59 = phi i8* [ %52, %54 ], [ %38, %41 ]
  %60 = tail call { i64, i8* } @_ZN5blink24IdentifiableTokenBuilder15SkimIntoPartialEN4base4spanIKhLm18446744073709551615EEE(%"class.blink::IdentifiableTokenBuilder"* %0, i64 %58, i8* %59) #11
  br label %61

61:                                               ; preds = %31, %37, %54, %57
  %62 = load i64, i64* %5, align 8
  %63 = sub i64 %62, %7
  %64 = and i64 %63, 7
  %65 = icmp eq i64 %64, 0
  %66 = inttoptr i64 %62 to i8*
  br i1 %65, label %80, label %67

67:                                               ; preds = %61
  %68 = sub nuw nsw i64 8, %64
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %67
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %66, i8 0, i64 %68, i1 false) #11
  %71 = getelementptr i8, i8* %66, i64 %68
  br label %72

72:                                               ; preds = %70, %67
  %73 = phi i8* [ %66, %67 ], [ %71, %70 ]
  store i8* %73, i8** %4, align 8
  %74 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %0, i64 0, i32 0, i32 0, i64 64
  %75 = icmp eq i8* %73, %74
  br i1 %75, label %76, label %80

76:                                               ; preds = %72
  store i8* %28, i8** %4, align 8
  %77 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %0, i64 0, i32 2
  %78 = load i64, i64* %77, align 8
  %79 = tail call i64 @_ZN4base6legacy18CityHash64WithSeedENS_4spanIKhLm18446744073709551615EEEm(i64 64, i8* %28, i64 %78) #11
  store i64 %79, i64* %77, align 8
  br label %80

80:                                               ; preds = %61, %72, %76
  ret %"class.blink::IdentifiableTokenBuilder"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24IdentifiableTokenBuilder18AlignPartialBufferEv(%"class.blink::IdentifiableTokenBuilder"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %0, i64 0, i32 1
  %3 = bitcast i8** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = ptrtoint %"class.blink::IdentifiableTokenBuilder"* %0 to i64
  %6 = sub i64 %4, %5
  %7 = and i64 %6, 7
  %8 = icmp eq i64 %7, 0
  %9 = inttoptr i64 %4 to i8*
  br i1 %8, label %26, label %10

10:                                               ; preds = %1
  %11 = sub nuw nsw i64 8, %7
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %17, label %13

13:                                               ; preds = %10
  call void @llvm.memset.p0i8.i64(i8* align 1 %9, i8 0, i64 %11, i1 false)
  %14 = getelementptr inbounds i8, i8* %9, i64 1
  %15 = xor i64 %7, 7
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %27

17:                                               ; preds = %42, %13, %27, %30, %33, %36, %39, %10
  %18 = phi i8* [ %9, %10 ], [ %14, %13 ], [ %28, %27 ], [ %31, %30 ], [ %34, %33 ], [ %37, %36 ], [ %40, %39 ], [ %46, %42 ]
  store i8* %18, i8** %2, align 8
  %19 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %0, i64 0, i32 0, i32 0, i64 64
  %20 = icmp eq i8* %18, %19
  br i1 %20, label %21, label %26

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %0, i64 0, i32 0, i32 0, i64 0
  store i8* %22, i8** %2, align 8
  %23 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %0, i64 0, i32 2
  %24 = load i64, i64* %23, align 8
  %25 = tail call i64 @_ZN4base6legacy18CityHash64WithSeedENS_4spanIKhLm18446744073709551615EEEm(i64 64, i8* %22, i64 %24) #11
  store i64 %25, i64* %23, align 8
  br label %26

26:                                               ; preds = %17, %21, %1
  ret void

27:                                               ; preds = %13
  %28 = getelementptr inbounds i8, i8* %9, i64 2
  %29 = icmp eq i64 %15, 1
  br i1 %29, label %17, label %30

30:                                               ; preds = %27
  %31 = getelementptr inbounds i8, i8* %9, i64 3
  %32 = icmp eq i64 %15, 2
  br i1 %32, label %17, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds i8, i8* %9, i64 4
  %35 = icmp eq i64 %15, 3
  br i1 %35, label %17, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds i8, i8* %9, i64 5
  %38 = icmp eq i64 %15, 4
  br i1 %38, label %17, label %39

39:                                               ; preds = %36
  %40 = getelementptr inbounds i8, i8* %9, i64 6
  %41 = icmp eq i64 %15, 5
  br i1 %41, label %17, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds i8, i8* %9, i64 7
  %44 = icmp eq i64 %15, 6
  %45 = getelementptr inbounds i8, i8* %9, i64 8
  %46 = select i1 %44, i8* %43, i8* %45
  br label %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(80) %"class.blink::IdentifiableTokenBuilder"* @_ZN5blink24IdentifiableTokenBuilder8AddValueImLPv0EEERS0_T_(%"class.blink::IdentifiableTokenBuilder"*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca i64, align 8
  %4 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %0, i64 0, i32 1
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = ptrtoint %"class.blink::IdentifiableTokenBuilder"* %0 to i64
  %8 = sub i64 %6, %7
  %9 = and i64 %8, 7
  %10 = icmp eq i64 %9, 0
  %11 = inttoptr i64 %6 to i8*
  br i1 %10, label %27, label %12

12:                                               ; preds = %2
  %13 = sub nuw nsw i64 8, %9
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %12
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %11, i8 0, i64 %13, i1 false) #11
  %16 = getelementptr i8, i8* %11, i64 %13
  br label %17

17:                                               ; preds = %15, %12
  %18 = phi i8* [ %11, %12 ], [ %16, %15 ]
  store i8* %18, i8** %4, align 8
  %19 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %0, i64 0, i32 0, i32 0, i64 64
  %20 = icmp eq i8* %18, %19
  br i1 %20, label %21, label %27

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %0, i64 0, i32 0, i32 0, i64 0
  store i8* %22, i8** %4, align 8
  %23 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %0, i64 0, i32 2
  %24 = load i64, i64* %23, align 8
  %25 = tail call i64 @_ZN4base6legacy18CityHash64WithSeedENS_4spanIKhLm18446744073709551615EEEm(i64 64, i8* %22, i64 %24) #11
  store i64 %25, i64* %23, align 8
  %26 = load i8*, i8** %4, align 8
  br label %27

27:                                               ; preds = %2, %17, %21
  %28 = phi i8* [ %11, %2 ], [ %18, %17 ], [ %26, %21 ]
  %29 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #11
  store i64 %1, i64* %3, align 8
  %30 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %0, i64 0, i32 0, i32 0, i64 0
  %31 = icmp eq i8* %30, %28
  br i1 %31, label %53, label %32

32:                                               ; preds = %27
  %33 = call { i64, i8* } @_ZN5blink24IdentifiableTokenBuilder15SkimIntoPartialEN4base4spanIKhLm18446744073709551615EEE(%"class.blink::IdentifiableTokenBuilder"* %0, i64 8, i8* nonnull %29) #11
  %34 = extractvalue { i64, i8* } %33, 0
  %35 = extractvalue { i64, i8* } %33, 1
  %36 = icmp eq i64 %34, 0
  br i1 %36, label %57, label %37

37:                                               ; preds = %32
  %38 = icmp ugt i64 %34, 63
  br i1 %38, label %39, label %53

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %0, i64 0, i32 2
  %41 = load i64, i64* %40, align 8
  br label %42

42:                                               ; preds = %42, %39
  %43 = phi i64 [ %41, %39 ], [ %46, %42 ]
  %44 = phi i64 [ %34, %39 ], [ %47, %42 ]
  %45 = phi i8* [ %35, %39 ], [ %48, %42 ]
  %46 = call i64 @_ZN4base6legacy18CityHash64WithSeedENS_4spanIKhLm18446744073709551615EEEm(i64 64, i8* %45, i64 %43) #11
  store i64 %46, i64* %40, align 8
  %47 = add i64 %44, -64
  %48 = getelementptr inbounds i8, i8* %45, i64 64
  %49 = icmp ugt i64 %47, 63
  br i1 %49, label %42, label %50

50:                                               ; preds = %42
  %51 = and i64 %34, 63
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %57, label %53

53:                                               ; preds = %27, %50, %37
  %54 = phi i64 [ %51, %50 ], [ %34, %37 ], [ 8, %27 ]
  %55 = phi i8* [ %48, %50 ], [ %35, %37 ], [ %29, %27 ]
  %56 = call { i64, i8* } @_ZN5blink24IdentifiableTokenBuilder15SkimIntoPartialEN4base4spanIKhLm18446744073709551615EEE(%"class.blink::IdentifiableTokenBuilder"* %0, i64 %54, i8* %55) #11
  br label %57

57:                                               ; preds = %32, %50, %53
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #11
  ret %"class.blink::IdentifiableTokenBuilder"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(80) %"class.blink::IdentifiableTokenBuilder"* @_ZN5blink24IdentifiableTokenBuilder8AddTokenENS_17IdentifiableTokenE(%"class.blink::IdentifiableTokenBuilder"*, i64) local_unnamed_addr #1 align 2 {
  %3 = tail call dereferenceable(80) %"class.blink::IdentifiableTokenBuilder"* @_ZN5blink24IdentifiableTokenBuilder8AddValueIlLPv0EEERS0_T_(%"class.blink::IdentifiableTokenBuilder"* %0, i64 %1)
  ret %"class.blink::IdentifiableTokenBuilder"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(80) %"class.blink::IdentifiableTokenBuilder"* @_ZN5blink24IdentifiableTokenBuilder8AddValueIlLPv0EEERS0_T_(%"class.blink::IdentifiableTokenBuilder"*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca i64, align 8
  %4 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %0, i64 0, i32 1
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = ptrtoint %"class.blink::IdentifiableTokenBuilder"* %0 to i64
  %8 = sub i64 %6, %7
  %9 = and i64 %8, 7
  %10 = icmp eq i64 %9, 0
  %11 = inttoptr i64 %6 to i8*
  br i1 %10, label %27, label %12

12:                                               ; preds = %2
  %13 = sub nuw nsw i64 8, %9
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %12
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %11, i8 0, i64 %13, i1 false) #11
  %16 = getelementptr i8, i8* %11, i64 %13
  br label %17

17:                                               ; preds = %15, %12
  %18 = phi i8* [ %11, %12 ], [ %16, %15 ]
  store i8* %18, i8** %4, align 8
  %19 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %0, i64 0, i32 0, i32 0, i64 64
  %20 = icmp eq i8* %18, %19
  br i1 %20, label %21, label %27

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %0, i64 0, i32 0, i32 0, i64 0
  store i8* %22, i8** %4, align 8
  %23 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %0, i64 0, i32 2
  %24 = load i64, i64* %23, align 8
  %25 = tail call i64 @_ZN4base6legacy18CityHash64WithSeedENS_4spanIKhLm18446744073709551615EEEm(i64 64, i8* %22, i64 %24) #11
  store i64 %25, i64* %23, align 8
  %26 = load i8*, i8** %4, align 8
  br label %27

27:                                               ; preds = %2, %17, %21
  %28 = phi i8* [ %11, %2 ], [ %18, %17 ], [ %26, %21 ]
  %29 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #11
  store i64 %1, i64* %3, align 8
  %30 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %0, i64 0, i32 0, i32 0, i64 0
  %31 = icmp eq i8* %30, %28
  br i1 %31, label %53, label %32

32:                                               ; preds = %27
  %33 = call { i64, i8* } @_ZN5blink24IdentifiableTokenBuilder15SkimIntoPartialEN4base4spanIKhLm18446744073709551615EEE(%"class.blink::IdentifiableTokenBuilder"* %0, i64 8, i8* nonnull %29) #11
  %34 = extractvalue { i64, i8* } %33, 0
  %35 = extractvalue { i64, i8* } %33, 1
  %36 = icmp eq i64 %34, 0
  br i1 %36, label %57, label %37

37:                                               ; preds = %32
  %38 = icmp ugt i64 %34, 63
  br i1 %38, label %39, label %53

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %0, i64 0, i32 2
  %41 = load i64, i64* %40, align 8
  br label %42

42:                                               ; preds = %42, %39
  %43 = phi i64 [ %41, %39 ], [ %46, %42 ]
  %44 = phi i64 [ %34, %39 ], [ %47, %42 ]
  %45 = phi i8* [ %35, %39 ], [ %48, %42 ]
  %46 = call i64 @_ZN4base6legacy18CityHash64WithSeedENS_4spanIKhLm18446744073709551615EEEm(i64 64, i8* %45, i64 %43) #11
  store i64 %46, i64* %40, align 8
  %47 = add i64 %44, -64
  %48 = getelementptr inbounds i8, i8* %45, i64 64
  %49 = icmp ugt i64 %47, 63
  br i1 %49, label %42, label %50

50:                                               ; preds = %42
  %51 = and i64 %34, 63
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %57, label %53

53:                                               ; preds = %27, %50, %37
  %54 = phi i64 [ %51, %50 ], [ %34, %37 ], [ 8, %27 ]
  %55 = phi i8* [ %48, %50 ], [ %35, %37 ], [ %29, %27 ]
  %56 = call { i64, i8* } @_ZN5blink24IdentifiableTokenBuilder15SkimIntoPartialEN4base4spanIKhLm18446744073709551615EEE(%"class.blink::IdentifiableTokenBuilder"* %0, i64 %54, i8* %55) #11
  br label %57

57:                                               ; preds = %32, %50, %53
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #11
  ret %"class.blink::IdentifiableTokenBuilder"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink24IdentifiableTokenBuildercvNS_17IdentifiableTokenEEv(%"class.blink::IdentifiableTokenBuilder"*) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %0, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %0, i64 0, i32 0, i32 0, i64 0
  %6 = icmp eq i8* %4, %5
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %0, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  br label %22

10:                                               ; preds = %1
  %11 = ptrtoint i8* %4 to i64
  %12 = ptrtoint %"class.blink::IdentifiableTokenBuilder"* %0 to i64
  %13 = sub i64 %11, %12
  %14 = icmp ugt i8* %5, %4
  br i1 %14, label %15, label %18

15:                                               ; preds = %10
  %16 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0), i32 297, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0)) #11
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  br label %18

18:                                               ; preds = %15, %10
  %19 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %0, i64 0, i32 2
  %20 = load i64, i64* %19, align 8
  %21 = call i64 @_ZN4base6legacy18CityHash64WithSeedENS_4spanIKhLm18446744073709551615EEEm(i64 %13, i8* %5, i64 %20) #11
  br label %22

22:                                               ; preds = %7, %18
  %23 = phi i64 [ %9, %7 ], [ %21, %18 ]
  ret i64 %23
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink24IdentifiableTokenBuilder8GetTokenEv(%"class.blink::IdentifiableTokenBuilder"*) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %0, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %0, i64 0, i32 0, i32 0, i64 0
  %6 = icmp eq i8* %4, %5
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %0, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  br label %22

10:                                               ; preds = %1
  %11 = ptrtoint i8* %4 to i64
  %12 = ptrtoint %"class.blink::IdentifiableTokenBuilder"* %0 to i64
  %13 = sub i64 %11, %12
  %14 = icmp ugt i8* %5, %4
  br i1 %14, label %15, label %18

15:                                               ; preds = %10
  %16 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0), i32 297, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0)) #11
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  br label %18

18:                                               ; preds = %10, %15
  %19 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %0, i64 0, i32 2
  %20 = load i64, i64* %19, align 8
  %21 = call i64 @_ZN4base6legacy18CityHash64WithSeedENS_4spanIKhLm18446744073709551615EEEm(i64 %13, i8* %5, i64 %20) #11
  br label %22

22:                                               ; preds = %18, %7
  %23 = phi i64 [ %9, %7 ], [ %21, %18 ]
  ret i64 %23
}

declare i64 @_ZN4base6legacy18CityHash64WithSeedENS_4spanIKhLm18446744073709551615EEEm(i64, i8*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i8* } @_ZNK5blink24IdentifiableTokenBuilder15GetPartialBlockEv(%"class.blink::IdentifiableTokenBuilder"*) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %0, i64 0, i32 0, i32 0, i64 0
  %4 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %0, i64 0, i32 1
  %5 = load i8*, i8** %4, align 8
  %6 = ptrtoint i8* %5 to i64
  %7 = ptrtoint %"class.blink::IdentifiableTokenBuilder"* %0 to i64
  %8 = sub i64 %6, %7
  %9 = icmp ugt i8* %3, %5
  br i1 %9, label %10, label %13

10:                                               ; preds = %1
  %11 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0), i32 297, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0)) #11
  %12 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #11
  br label %13

13:                                               ; preds = %1, %10
  %14 = insertvalue { i64, i8* } undef, i64 %8, 0
  %15 = insertvalue { i64, i8* } %14, i8* %3, 1
  ret { i64, i8* } %15
}

; Function Attrs: nounwind ssp uwtable writeonly
define hidden i8* @_ZN5blink24IdentifiableTokenBuilder18TakeCompletedBlockEv(%"class.blink::IdentifiableTokenBuilder"*) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %0, i64 0, i32 0, i32 0, i64 0
  %3 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %0, i64 0, i32 1
  store i8* %2, i8** %3, align 8
  ret i8* %2
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink24IdentifiableTokenBuilder9IsAlignedEv(%"class.blink::IdentifiableTokenBuilder"*) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %0, i64 0, i32 1
  %3 = bitcast i8** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = ptrtoint %"class.blink::IdentifiableTokenBuilder"* %0 to i64
  %6 = sub i64 %4, %5
  %7 = and i64 %6, 7
  %8 = icmp eq i64 %7, 0
  ret i1 %8
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base25CheckedContiguousIteratorIKhEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator"*, i8*, i8*, i8*) unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca %"class.logging::CheckOpResult", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = alloca %"class.logging::CheckOpResult", align 8
  %13 = alloca %"class.logging::CheckError", align 8
  store i8* %1, i8** %7, align 8
  store i8* %2, i8** %8, align 8
  store i8* %3, i8** %9, align 8
  %14 = ptrtoint i8* %1 to i64
  %15 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %17 = ptrtoint i8* %2 to i64
  %18 = bitcast i8** %16 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %20 = ptrtoint i8* %3 to i64
  %21 = bitcast i8** %19 to i64*
  store i64 %20, i64* %21, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #11
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %10, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %23, align 8
  %24 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  %25 = icmp ugt i8* %1, %2
  br i1 %25, label %27, label %26

26:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* null, i8** %23, align 8
  br label %38

27:                                               ; preds = %4
  %28 = bitcast i8** %7 to i8*
  %29 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %28, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #11
  %30 = bitcast i8** %8 to i8*
  %31 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %30, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0), i8* %29, i8* %31) #11
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* %33, i8** %23, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %27
  %36 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.6, i64 0, i64 0), i32 45, %"class.logging::CheckOpResult"* nonnull %10) #11
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #11
  br label %38

38:                                               ; preds = %26, %27, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #11
  %39 = bitcast %"class.logging::CheckOpResult"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #11
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %12, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = load i8*, i8** %8, align 8
  %43 = load i8*, i8** %9, align 8
  %44 = icmp ugt i8* %42, %43
  br i1 %44, label %46, label %45

45:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %57

46:                                               ; preds = %38
  %47 = bitcast i8** %8 to i8*
  %48 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %47, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #11
  %49 = bitcast i8** %9 to i8*
  %50 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %49, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i64 0, i64 0), i8* %48, i8* %50) #11
  %51 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %52, i8** %40, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %46
  %55 = bitcast %"class.logging::CheckError"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.6, i64 0, i64 0), i32 46, %"class.logging::CheckOpResult"* nonnull %12) #11
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #11
  br label %57

57:                                               ; preds = %45, %46, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #11
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #4

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #4

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPKhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #7 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call i64 @strlen(i8* %4) #11
  %6 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* %4, i64 %5) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #1 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #11
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #11
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #11
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #11
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #11
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #11
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #11
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #1 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #11
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #11
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #12
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #11
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #11
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #12
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #11
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #11
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #6

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #4

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #4

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #10

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKhEpLEl(%"class.base::CheckedContiguousIterator"*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = icmp sgt i64 %1, 0
  br i1 %9, label %10, label %32

10:                                               ; preds = %2
  %11 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %12, align 8
  %13 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %14 = bitcast i8** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %17 = bitcast i8** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %15, %18
  %20 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20)
  %21 = icmp slt i64 %19, %1
  br i1 %21, label %23, label %22

22:                                               ; preds = %10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20)
  store i8* null, i8** %12, align 8
  br label %54

23:                                               ; preds = %10
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #11
  %25 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %19) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10, i64 0, i64 0), i8* %24, i8* %25) #11
  %26 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20)
  store i8* %27, i8** %12, align 8
  %28 = icmp eq i8* %27, null
  br i1 %28, label %54, label %29

29:                                               ; preds = %23
  %30 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.6, i64 0, i64 0), i32 135, %"class.logging::CheckOpResult"* nonnull %5) #11
  %31 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #11
  br label %54

32:                                               ; preds = %2
  %33 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #11
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = sub nsw i64 0, %1
  %36 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %37 = bitcast i8** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %38, %40
  %42 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = icmp slt i64 %41, %35
  br i1 %43, label %45, label %44

44:                                               ; preds = %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* null, i8** %34, align 8
  br label %54

45:                                               ; preds = %32
  %46 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %35) #11
  %47 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %41) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11, i64 0, i64 0), i8* %46, i8* %47) #11
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* %49, i8** %34, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.6, i64 0, i64 0), i32 137, %"class.logging::CheckOpResult"* nonnull %7) #11
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #11
  br label %54

54:                                               ; preds = %51, %45, %44, %29, %23, %22
  %55 = phi i8* [ %11, %22 ], [ %11, %23 ], [ %11, %29 ], [ %33, %44 ], [ %33, %45 ], [ %33, %51 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #11
  %56 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %57 = load i8*, i8** %56, align 8
  %58 = getelementptr inbounds i8, i8* %57, i64 %1
  store i8* %58, i8** %56, align 8
  ret %"class.base::CheckedContiguousIterator"* %0
}

declare i8* @_ZN7logging15CheckOpValueStrEl(i64) local_unnamed_addr #4

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
