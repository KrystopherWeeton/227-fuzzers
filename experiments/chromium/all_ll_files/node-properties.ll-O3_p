; ModuleID = '../../v8/src/compiler/node-properties.cc'
source_filename = "../../v8/src/compiler/node-properties.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"struct.v8::internal::compiler::Node::Use" = type { %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"*, i32 }
%"class.v8::internal::compiler::Node" = type { %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Type", i32, i32, %"struct.v8::internal::compiler::Node::Use"* }
%"class.v8::internal::compiler::Operator" = type <{ i32 (...)**, i8*, i16, %"class.v8::base::Flags", i8, i32, i32, i32, i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.v8::base::Flags" = type { i8 }
%"class.v8::internal::compiler::Type" = type { i64 }
%"class.v8::internal::compiler::Graph" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, i32, i32, %"class.v8::internal::ZoneVector" }
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.2" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set", %"class.std::__1::set.11" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.5", %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i64 }
%"class.std::__1::set.11" = type { %"class.std::__1::__tree.12" }
%"class.std::__1::__tree.12" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.5", %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::ZoneVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.v8::internal::compiler::GraphDecorator"**, %"class.v8::internal::compiler::GraphDecorator"**, %"class.std::__1::__compressed_pair.18" }
%"class.v8::internal::compiler::GraphDecorator" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19", %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.v8::internal::compiler::GraphDecorator"** }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.v8::internal::ZoneAllocator" }
%"class.v8::internal::ZoneAllocator" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::CommonOperatorBuilder" = type { %"struct.v8::internal::compiler::CommonOperatorGlobalCache"*, %"class.v8::internal::Zone"* }
%"struct.v8::internal::compiler::CommonOperatorGlobalCache" = type opaque
%"struct.v8::internal::compiler::Node::OutOfLineInputs" = type { %"class.v8::internal::compiler::Node"*, i32, i32 }
%"class.v8::base::Optional.1245" = type { %"class.v8::base::internal::OptionalBase.1246" }
%"class.v8::base::internal::OptionalBase.1246" = type { %"struct.v8::base::internal::OptionalStorage.1247" }
%"struct.v8::base::internal::OptionalStorage.1247" = type { %"struct.v8::base::internal::OptionalStorageBase.1248" }
%"struct.v8::base::internal::OptionalStorageBase.1248" = type { i8, %union.anon.1249 }
%union.anon.1249 = type { %"class.v8::internal::compiler::MapRef" }
%"class.v8::internal::compiler::MapRef" = type { %"class.v8::internal::compiler::HeapObjectRef" }
%"class.v8::internal::compiler::HeapObjectRef" = type { %"class.v8::internal::compiler::ObjectRef" }
%"class.v8::internal::compiler::ObjectRef" = type { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* }
%"class.v8::internal::compiler::ObjectData" = type opaque
%"class.v8::internal::compiler::JSHeapBroker" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::Zone"*, %"class.v8::base::Optional.1134", %"class.v8::internal::compiler::RefsMap"*, %"class.v8::internal::RootIndexMap", %"class.v8::internal::ZoneUnorderedSet", i32, i8, i8, i8, i8, i32, [4 x i8], %"class.std::__1::unique_ptr.1066", %"class.v8::internal::LocalIsolate"*, %"class.std::__1::unique_ptr.749", i32, [4 x i8], %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::ZoneUnorderedMap", %"class.v8::internal::ZoneUnorderedMap.1184", %"class.v8::internal::ZoneUnorderedMap.1207", %"class.v8::internal::ZoneVector.1230", %"class.v8::internal::ZoneMultimap", i32, [4 x i8] }>
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr.26", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.656", %"class.std::__1::unique_ptr.677", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.687", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.820", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.833", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.843", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.854", %"struct.std::__1::atomic.181", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.929", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.972"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.981", i32, i8, i8, i32, i32, %"class.std::__1::vector.987", %"class.std::__1::vector.987", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.994", i64, %"class.std::__1::unordered_map.995", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.552", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.189", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1051", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1089", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1123", %"class.std::__1::vector.1127", %"class.std::__1::vector.1127", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic.21", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic.21" = type { %"struct.std::__1::__atomic_base.22" }
%"struct.std::__1::__atomic_base.22" = type { %"struct.std::__1::__cxx_atomic_impl.23" }
%"struct.std::__1::__cxx_atomic_impl.23" = type { %"struct.std::__1::__cxx_atomic_base_impl.24" }
%"struct.std::__1::__cxx_atomic_base_impl.24" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic", i64, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic.55", %"class.std::__1::vector.59", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.175", %"class.std::__1::unique_ptr.175", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.190", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic", i64, i8, %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.194", %"class.std::__1::vector.194", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.201", %"class.std::__1::unique_ptr.207", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.337", %"class.std::__1::unique_ptr.343", %"class.std::__1::unique_ptr.349", %"class.std::__1::unique_ptr.388", %"class.std::__1::unique_ptr.427", %"class.std::__1::unique_ptr.457", %"class.std::__1::unique_ptr.463", %"class.std::__1::unique_ptr.473", %"class.std::__1::unique_ptr.479", %"class.std::__1::unique_ptr.479", %"class.std::__1::unique_ptr.485", %"class.std::__1::unique_ptr.491", %"class.std::__1::unique_ptr.491", %"class.std::__1::unique_ptr.497", %"class.std::__1::unique_ptr.503", %"class.std::__1::shared_ptr.509", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.514", %"class.std::__1::unique_ptr.540", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.546", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.559", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.359", i8, [7 x i8], %"class.std::__1::unordered_map.565", %"class.std::__1::unordered_map.591", %"class.std::__1::unordered_map.565", %"class.std::__1::unordered_map.615", %"class.std::__1::vector.643", i8, %"class.std::__1::unique_ptr.650", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.32", %"class.std::__1::__compressed_pair.40", %"class.std::__1::__compressed_pair.45", %"class.std::__1::__compressed_pair.47", [4 x i8] }>
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34", %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.50", %"struct.std::__1::atomic.50", %"struct.std::__1::atomic.50" }
%"struct.std::__1::atomic.50" = type { %"struct.std::__1::__atomic_base.51" }
%"struct.std::__1::__atomic_base.51" = type { %"struct.std::__1::__atomic_base.52" }
%"struct.std::__1::__atomic_base.52" = type { %"struct.std::__1::__cxx_atomic_impl.53" }
%"struct.std::__1::__cxx_atomic_impl.53" = type { %"struct.std::__1::__cxx_atomic_base_impl.54" }
%"struct.std::__1::__cxx_atomic_base_impl.54" = type { i64 }
%"struct.std::__1::atomic.55" = type { %"struct.std::__1::__atomic_base.56" }
%"struct.std::__1::__atomic_base.56" = type { %"struct.std::__1::__cxx_atomic_impl.57" }
%"struct.std::__1::__cxx_atomic_impl.57" = type { %"struct.std::__1::__cxx_atomic_base_impl.58" }
%"struct.std::__1::__cxx_atomic_base_impl.58" = type { i32 }
%"class.std::__1::vector.59" = type { %"class.std::__1::__vector_base.60" }
%"class.std::__1::__vector_base.60" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.61" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.132" }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic"*, %"class.std::__1::unique_ptr.126" }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic", i64 }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.66", %"class.std::__1::vector.66", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.66" = type { %"class.std::__1::__vector_base.67" }
%"class.std::__1::__vector_base.67" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.68" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.73" }
%"class.std::__1::__hash_table.73" = type <{ %"class.std::__1::unique_ptr.74", %"class.std::__1::__compressed_pair.84", %"class.std::__1::__compressed_pair.89", %"class.std::__1::__compressed_pair.91", [4 x i8] }>
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76", %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"struct.std::__1::__hash_node_base.77"** }
%"struct.std::__1::__hash_node_base.77" = type { %"struct.std::__1::__hash_node_base.77"* }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.std::__1::__bucket_list_deallocator.79" }
%"class.std::__1::__bucket_list_deallocator.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"struct.std::__1::__hash_node_base.77" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic", %"struct.std::__1::atomic.50", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set.107"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.115", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.50", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.50", %"struct.std::__1::atomic.96", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.100" }
%"class.std::__1::vector.100" = type { %"class.std::__1::__vector_base.101" }
%"class.std::__1::__vector_base.101" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.102" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set.107" = type { %"class.std::__1::__tree.108" }
%"class.std::__1::__tree.108" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.109", %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::atomic.115" = type { %"struct.std::__1::__atomic_base.116" }
%"struct.std::__1::__atomic_base.116" = type { %"struct.std::__1::__cxx_atomic_impl.117" }
%"struct.std::__1::__cxx_atomic_impl.117" = type { %"struct.std::__1::__cxx_atomic_base_impl.118" }
%"struct.std::__1::__cxx_atomic_base_impl.118" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.119", i8, [7 x i8] }>
%"class.std::__1::vector.119" = type { %"class.std::__1::__vector_base.120" }
%"class.std::__1::__vector_base.120" = type { i64*, i64*, %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.126" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.std::__1::vector.132" = type { %"class.std::__1::__vector_base.133" }
%"class.std::__1::__vector_base.133" = type { %"struct.std::__1::pair.134"*, %"struct.std::__1::pair.134"*, %"class.std::__1::__compressed_pair.135" }
%"struct.std::__1::pair.134" = type { i32, i64 }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"struct.std::__1::pair.134"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic", i64, %"struct.std::__1::atomic" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic", i32, %"struct.std::__1::atomic", %"class.v8::base::Mutex", %"struct.std::__1::atomic" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.140" }
%"class.std::__1::unordered_map.140" = type { %"class.std::__1::__hash_table.141" }
%"class.std::__1::__hash_table.141" = type <{ %"class.std::__1::unique_ptr.142", %"class.std::__1::__compressed_pair.152", %"class.std::__1::__compressed_pair.157", %"class.std::__1::__compressed_pair.162", [4 x i8] }>
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144", %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"struct.std::__1::__hash_node_base.145"** }
%"struct.std::__1::__hash_node_base.145" = type { %"struct.std::__1::__hash_node_base.145"* }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.std::__1::__bucket_list_deallocator.147" }
%"class.std::__1::__bucket_list_deallocator.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"struct.std::__1::__hash_node_base.145" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.168", i64, i64, i8, i64, i64 }
%"class.std::__1::vector.168" = type { %"class.std::__1::__vector_base.169" }
%"class.std::__1::__vector_base.169" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.170" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1056", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1060", %"class.std::__1::unique_ptr.1066", %"class.std::__1::unique_ptr.503", %"class.std::__1::vector.1072", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1056" = type { %"struct.std::__1::__atomic_base.1057" }
%"struct.std::__1::__atomic_base.1057" = type { %"struct.std::__1::__cxx_atomic_impl.1058" }
%"struct.std::__1::__cxx_atomic_impl.1058" = type { %"struct.std::__1::__cxx_atomic_base_impl.1059" }
%"struct.std::__1::__cxx_atomic_base_impl.1059" = type { i32 }
%"class.std::__1::unique_ptr.1060" = type { %"class.std::__1::__compressed_pair.1061" }
%"class.std::__1::__compressed_pair.1061" = type { %"struct.std::__1::__compressed_pair_elem.1062" }
%"struct.std::__1::__compressed_pair_elem.1062" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.813" }
%"class.std::__1::vector.813" = type { %"class.std::__1::__vector_base.814" }
%"class.std::__1::__vector_base.814" = type { i64**, i64**, %"class.std::__1::__compressed_pair.815" }
%"class.std::__1::__compressed_pair.815" = type { %"struct.std::__1::__compressed_pair_elem.816" }
%"struct.std::__1::__compressed_pair_elem.816" = type { i64** }
%"class.std::__1::vector.1072" = type { %"class.std::__1::__vector_base.1073" }
%"class.std::__1::__vector_base.1073" = type { %"struct.std::__1::pair.1074"*, %"struct.std::__1::pair.1074"*, %"class.std::__1::__compressed_pair.1075" }
%"struct.std::__1::pair.1074" = type opaque
%"class.std::__1::__compressed_pair.1075" = type { %"struct.std::__1::__compressed_pair_elem.1076" }
%"struct.std::__1::__compressed_pair_elem.1076" = type { %"struct.std::__1::pair.1074"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.181", %"struct.std::__1::atomic.185", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.185" = type { %"struct.std::__1::__atomic_base.186" }
%"struct.std::__1::__atomic_base.186" = type { %"struct.std::__1::__cxx_atomic_impl.187" }
%"struct.std::__1::__cxx_atomic_impl.187" = type { %"struct.std::__1::__cxx_atomic_base_impl.188" }
%"struct.std::__1::__cxx_atomic_base_impl.188" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.189" }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"struct.std::__1::atomic.190" = type { %"struct.std::__1::__atomic_base.191" }
%"struct.std::__1::__atomic_base.191" = type { %"struct.std::__1::__cxx_atomic_impl.192" }
%"struct.std::__1::__cxx_atomic_impl.192" = type { %"struct.std::__1::__cxx_atomic_base_impl.193" }
%"struct.std::__1::__cxx_atomic_base_impl.193" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"class.std::__1::vector.194" = type { %"class.std::__1::__vector_base.195" }
%"class.std::__1::__vector_base.195" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.196" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.201" = type { %"class.std::__1::__compressed_pair.202" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.249", %"class.std::__1::unique_ptr.255", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.309", %"class.std::__1::vector.309", %"class.std::__1::vector.309", %"class.std::__1::vector.316", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.210", %"class.std::__1::vector.211", %"class.std::__1::vector.218", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.210" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.211" = type { %"class.std::__1::__vector_base.212" }
%"class.std::__1::__vector_base.212" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.213" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.218" = type { %"class.std::__1::__vector_base.219" }
%"class.std::__1::__vector_base.219" = type { %"class.std::__1::unique_ptr.220"*, %"class.std::__1::unique_ptr.220"*, %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::unique_ptr.220" = type opaque
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.std::__1::unique_ptr.220"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.226", %"class.v8::internal::Worklist.228", %"class.v8::internal::Worklist.228", %"class.v8::internal::Worklist.228", %"class.v8::internal::Worklist.230", %"class.v8::internal::Worklist.232", %"class.v8::internal::Worklist.234", %"class.v8::internal::Worklist.236", %"class.v8::internal::Worklist.238", %"class.v8::internal::Worklist.240" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.226" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.228" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.230" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.232" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.234" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.236" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.238" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.240" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.242", i8, i64 }
%"class.std::__1::vector.242" = type { %"class.std::__1::__vector_base.243" }
%"class.std::__1::__vector_base.243" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.249" = type { %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.255" = type { %"class.std::__1::__compressed_pair.256" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"struct.std::__1::__compressed_pair_elem.257" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.258" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.210"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.258" = type { %"class.std::__1::__hash_table.259" }
%"class.std::__1::__hash_table.259" = type <{ %"class.std::__1::unique_ptr.260", %"class.std::__1::__compressed_pair.270", %"class.std::__1::__compressed_pair.275", %"class.std::__1::__compressed_pair.278", [4 x i8] }>
%"class.std::__1::unique_ptr.260" = type { %"class.std::__1::__compressed_pair.261" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262", %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"struct.std::__1::__hash_node_base.263"** }
%"struct.std::__1::__hash_node_base.263" = type { %"struct.std::__1::__hash_node_base.263"* }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"class.std::__1::__bucket_list_deallocator.265" }
%"class.std::__1::__bucket_list_deallocator.265" = type { %"class.std::__1::__compressed_pair.266" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"struct.std::__1::__hash_node_base.263" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.285" }
%"class.std::__1::unordered_map.285" = type { %"class.std::__1::__hash_table.286" }
%"class.std::__1::__hash_table.286" = type <{ %"class.std::__1::unique_ptr.287", %"class.std::__1::__compressed_pair.297", %"class.std::__1::__compressed_pair.302", %"class.std::__1::__compressed_pair.305", [4 x i8] }>
%"class.std::__1::unique_ptr.287" = type { %"class.std::__1::__compressed_pair.288" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289", %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"struct.std::__1::__hash_node_base.290"** }
%"struct.std::__1::__hash_node_base.290" = type { %"struct.std::__1::__hash_node_base.290"* }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"class.std::__1::__bucket_list_deallocator.292" }
%"class.std::__1::__bucket_list_deallocator.292" = type { %"class.std::__1::__compressed_pair.293" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.298" }
%"struct.std::__1::__compressed_pair_elem.298" = type { %"struct.std::__1::__hash_node_base.290" }
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::vector.309" = type { %"class.std::__1::__vector_base.310" }
%"class.std::__1::__vector_base.310" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.311" }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"struct.std::__1::__compressed_pair_elem.312" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.316" = type { %"class.std::__1::__vector_base.317" }
%"class.std::__1::__vector_base.317" = type { %"struct.std::__1::pair.318"*, %"struct.std::__1::pair.318"*, %"class.std::__1::__compressed_pair.319" }
%"struct.std::__1::pair.318" = type opaque
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.320" }
%"struct.std::__1::__compressed_pair_elem.320" = type { %"struct.std::__1::pair.318"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.324", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.309"], [3 x %"class.std::__1::vector.309"], i8, %"struct.std::__1::atomic.181", [6 x i8], %"class.std::__1::vector.309", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.324" = type { %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.334"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.309", %"class.std::__1::vector.309", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.334" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.337" = type { %"class.std::__1::__compressed_pair.338" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.339" }
%"struct.std::__1::__compressed_pair_elem.339" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.343" = type { %"class.std::__1::__compressed_pair.344" }
%"class.std::__1::__compressed_pair.344" = type { %"struct.std::__1::__compressed_pair_elem.345" }
%"struct.std::__1::__compressed_pair_elem.345" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.349" = type { %"class.std::__1::__compressed_pair.350" }
%"class.std::__1::__compressed_pair.350" = type { %"struct.std::__1::__compressed_pair_elem.351" }
%"struct.std::__1::__compressed_pair_elem.351" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.359", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.352"], %"class.std::__1::unique_ptr.324" }
%"class.std::__1::vector.352" = type { %"class.std::__1::__vector_base.353" }
%"class.std::__1::__vector_base.353" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.354" }
%"class.std::__1::__compressed_pair.354" = type { %"struct.std::__1::__compressed_pair_elem.355" }
%"struct.std::__1::__compressed_pair_elem.355" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.388" = type { %"class.std::__1::__compressed_pair.389" }
%"class.std::__1::__compressed_pair.389" = type { %"struct.std::__1::__compressed_pair_elem.390" }
%"struct.std::__1::__compressed_pair_elem.390" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.391", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.395", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.400" }
%"struct.std::__1::atomic.391" = type { %"struct.std::__1::__atomic_base.392" }
%"struct.std::__1::__atomic_base.392" = type { %"struct.std::__1::__cxx_atomic_impl.393" }
%"struct.std::__1::__cxx_atomic_impl.393" = type { %"struct.std::__1::__cxx_atomic_base_impl.394" }
%"struct.std::__1::__cxx_atomic_base_impl.394" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.395" = type { %"struct.std::__1::__atomic_base.396" }
%"struct.std::__1::__atomic_base.396" = type { %"struct.std::__1::__cxx_atomic_impl.397" }
%"struct.std::__1::__cxx_atomic_impl.397" = type { %"struct.std::__1::__cxx_atomic_base_impl.398" }
%"struct.std::__1::__cxx_atomic_base_impl.398" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.400" = type { %"class.std::__1::__hash_table.401" }
%"class.std::__1::__hash_table.401" = type <{ %"class.std::__1::unique_ptr.402", %"class.std::__1::__compressed_pair.412", %"class.std::__1::__compressed_pair.417", %"class.std::__1::__compressed_pair.420", [4 x i8] }>
%"class.std::__1::unique_ptr.402" = type { %"class.std::__1::__compressed_pair.403" }
%"class.std::__1::__compressed_pair.403" = type { %"struct.std::__1::__compressed_pair_elem.404", %"struct.std::__1::__compressed_pair_elem.406" }
%"struct.std::__1::__compressed_pair_elem.404" = type { %"struct.std::__1::__hash_node_base.405"** }
%"struct.std::__1::__hash_node_base.405" = type { %"struct.std::__1::__hash_node_base.405"* }
%"struct.std::__1::__compressed_pair_elem.406" = type { %"class.std::__1::__bucket_list_deallocator.407" }
%"class.std::__1::__bucket_list_deallocator.407" = type { %"class.std::__1::__compressed_pair.408" }
%"class.std::__1::__compressed_pair.408" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.413" }
%"struct.std::__1::__compressed_pair_elem.413" = type { %"struct.std::__1::__hash_node_base.405" }
%"class.std::__1::__compressed_pair.417" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::unique_ptr.427" = type { %"class.std::__1::__compressed_pair.428" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.429" }
%"struct.std::__1::__compressed_pair_elem.429" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.324", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic", %"struct.std::__1::atomic.181", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.430", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.430" = type { %"class.std::__1::__hash_table.431" }
%"class.std::__1::__hash_table.431" = type <{ %"class.std::__1::unique_ptr.432", %"class.std::__1::__compressed_pair.442", %"class.std::__1::__compressed_pair.447", %"class.std::__1::__compressed_pair.450", [4 x i8] }>
%"class.std::__1::unique_ptr.432" = type { %"class.std::__1::__compressed_pair.433" }
%"class.std::__1::__compressed_pair.433" = type { %"struct.std::__1::__compressed_pair_elem.434", %"struct.std::__1::__compressed_pair_elem.436" }
%"struct.std::__1::__compressed_pair_elem.434" = type { %"struct.std::__1::__hash_node_base.435"** }
%"struct.std::__1::__hash_node_base.435" = type { %"struct.std::__1::__hash_node_base.435"* }
%"struct.std::__1::__compressed_pair_elem.436" = type { %"class.std::__1::__bucket_list_deallocator.437" }
%"class.std::__1::__bucket_list_deallocator.437" = type { %"class.std::__1::__compressed_pair.438" }
%"class.std::__1::__compressed_pair.438" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.442" = type { %"struct.std::__1::__compressed_pair_elem.443" }
%"struct.std::__1::__compressed_pair_elem.443" = type { %"struct.std::__1::__hash_node_base.435" }
%"class.std::__1::__compressed_pair.447" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.450" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::unique_ptr.457" = type { %"class.std::__1::__compressed_pair.458" }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.459" }
%"struct.std::__1::__compressed_pair_elem.459" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.463" = type { %"class.std::__1::__compressed_pair.464" }
%"class.std::__1::__compressed_pair.464" = type { %"struct.std::__1::__compressed_pair_elem.465" }
%"struct.std::__1::__compressed_pair_elem.465" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.466" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"class.std::__1::unique_ptr.473" = type { %"class.std::__1::__compressed_pair.474" }
%"class.std::__1::__compressed_pair.474" = type { %"struct.std::__1::__compressed_pair_elem.475" }
%"struct.std::__1::__compressed_pair_elem.475" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.479" = type { %"class.std::__1::__compressed_pair.480" }
%"class.std::__1::__compressed_pair.480" = type { %"struct.std::__1::__compressed_pair_elem.481" }
%"struct.std::__1::__compressed_pair_elem.481" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.485" = type { %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.487" }
%"struct.std::__1::__compressed_pair_elem.487" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.491" = type { %"class.std::__1::__compressed_pair.492" }
%"class.std::__1::__compressed_pair.492" = type { %"struct.std::__1::__compressed_pair_elem.493" }
%"struct.std::__1::__compressed_pair_elem.493" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.497" = type { %"class.std::__1::__compressed_pair.498" }
%"class.std::__1::__compressed_pair.498" = type { %"struct.std::__1::__compressed_pair_elem.499" }
%"struct.std::__1::__compressed_pair_elem.499" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.503" = type { %"class.std::__1::__compressed_pair.504" }
%"class.std::__1::__compressed_pair.504" = type { %"struct.std::__1::__compressed_pair_elem.505" }
%"struct.std::__1::__compressed_pair_elem.505" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.509" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.510", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.2", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.510" = type { %"struct.std::__1::__atomic_base.511" }
%"struct.std::__1::__atomic_base.511" = type { %"struct.std::__1::__cxx_atomic_impl.512" }
%"struct.std::__1::__cxx_atomic_impl.512" = type { %"struct.std::__1::__cxx_atomic_base_impl.513" }
%"struct.std::__1::__cxx_atomic_base_impl.513" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.514" = type { %"class.std::__1::__hash_table.515" }
%"class.std::__1::__hash_table.515" = type <{ %"class.std::__1::unique_ptr.516", %"class.std::__1::__compressed_pair.526", %"class.std::__1::__compressed_pair.531", %"class.std::__1::__compressed_pair.534", [4 x i8] }>
%"class.std::__1::unique_ptr.516" = type { %"class.std::__1::__compressed_pair.517" }
%"class.std::__1::__compressed_pair.517" = type { %"struct.std::__1::__compressed_pair_elem.518", %"struct.std::__1::__compressed_pair_elem.520" }
%"struct.std::__1::__compressed_pair_elem.518" = type { %"struct.std::__1::__hash_node_base.519"** }
%"struct.std::__1::__hash_node_base.519" = type { %"struct.std::__1::__hash_node_base.519"* }
%"struct.std::__1::__compressed_pair_elem.520" = type { %"class.std::__1::__bucket_list_deallocator.521" }
%"class.std::__1::__bucket_list_deallocator.521" = type { %"class.std::__1::__compressed_pair.522" }
%"class.std::__1::__compressed_pair.522" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.526" = type { %"struct.std::__1::__compressed_pair_elem.527" }
%"struct.std::__1::__compressed_pair_elem.527" = type { %"struct.std::__1::__hash_node_base.519" }
%"class.std::__1::__compressed_pair.531" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.534" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::unique_ptr.540" = type { %"class.std::__1::__compressed_pair.541" }
%"class.std::__1::__compressed_pair.541" = type { %"struct.std::__1::__compressed_pair_elem.542" }
%"struct.std::__1::__compressed_pair_elem.542" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.546" = type { %"class.std::__1::__compressed_pair.547" }
%"class.std::__1::__compressed_pair.547" = type { %"struct.std::__1::__compressed_pair_elem.548" }
%"struct.std::__1::__compressed_pair_elem.548" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.552", %"class.std::__1::vector.552" }
%"class.std::__1::unique_ptr.559" = type { %"class.std::__1::__compressed_pair.560" }
%"class.std::__1::__compressed_pair.560" = type { %"struct.std::__1::__compressed_pair_elem.561" }
%"struct.std::__1::__compressed_pair_elem.561" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.std::__1::unordered_set.359" = type { %"class.std::__1::__hash_table.360" }
%"class.std::__1::__hash_table.360" = type <{ %"class.std::__1::unique_ptr.361", %"class.std::__1::__compressed_pair.371", %"class.std::__1::__compressed_pair.376", %"class.std::__1::__compressed_pair.380", [4 x i8] }>
%"class.std::__1::unique_ptr.361" = type { %"class.std::__1::__compressed_pair.362" }
%"class.std::__1::__compressed_pair.362" = type { %"struct.std::__1::__compressed_pair_elem.363", %"struct.std::__1::__compressed_pair_elem.365" }
%"struct.std::__1::__compressed_pair_elem.363" = type { %"struct.std::__1::__hash_node_base.364"** }
%"struct.std::__1::__hash_node_base.364" = type { %"struct.std::__1::__hash_node_base.364"* }
%"struct.std::__1::__compressed_pair_elem.365" = type { %"class.std::__1::__bucket_list_deallocator.366" }
%"class.std::__1::__bucket_list_deallocator.366" = type { %"class.std::__1::__compressed_pair.367" }
%"class.std::__1::__compressed_pair.367" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.371" = type { %"struct.std::__1::__compressed_pair_elem.372" }
%"struct.std::__1::__compressed_pair_elem.372" = type { %"struct.std::__1::__hash_node_base.364" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::unordered_map.591" = type { %"class.std::__1::__hash_table.592" }
%"class.std::__1::__hash_table.592" = type <{ %"class.std::__1::unique_ptr.593", %"class.std::__1::__compressed_pair.603", %"class.std::__1::__compressed_pair.608", %"class.std::__1::__compressed_pair.611", [4 x i8] }>
%"class.std::__1::unique_ptr.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595", %"struct.std::__1::__compressed_pair_elem.597" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"struct.std::__1::__hash_node_base.596"** }
%"struct.std::__1::__hash_node_base.596" = type { %"struct.std::__1::__hash_node_base.596"* }
%"struct.std::__1::__compressed_pair_elem.597" = type { %"class.std::__1::__bucket_list_deallocator.598" }
%"class.std::__1::__bucket_list_deallocator.598" = type { %"class.std::__1::__compressed_pair.599" }
%"class.std::__1::__compressed_pair.599" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"struct.std::__1::__hash_node_base.596" }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.611" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::unordered_map.565" = type { %"class.std::__1::__hash_table.566" }
%"class.std::__1::__hash_table.566" = type <{ %"class.std::__1::unique_ptr.567", %"class.std::__1::__compressed_pair.577", %"class.std::__1::__compressed_pair.582", %"class.std::__1::__compressed_pair.585", [4 x i8] }>
%"class.std::__1::unique_ptr.567" = type { %"class.std::__1::__compressed_pair.568" }
%"class.std::__1::__compressed_pair.568" = type { %"struct.std::__1::__compressed_pair_elem.569", %"struct.std::__1::__compressed_pair_elem.571" }
%"struct.std::__1::__compressed_pair_elem.569" = type { %"struct.std::__1::__hash_node_base.570"** }
%"struct.std::__1::__hash_node_base.570" = type { %"struct.std::__1::__hash_node_base.570"* }
%"struct.std::__1::__compressed_pair_elem.571" = type { %"class.std::__1::__bucket_list_deallocator.572" }
%"class.std::__1::__bucket_list_deallocator.572" = type { %"class.std::__1::__compressed_pair.573" }
%"class.std::__1::__compressed_pair.573" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.577" = type { %"struct.std::__1::__compressed_pair_elem.578" }
%"struct.std::__1::__compressed_pair_elem.578" = type { %"struct.std::__1::__hash_node_base.570" }
%"class.std::__1::__compressed_pair.582" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.585" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::unordered_map.615" = type { %"class.std::__1::__hash_table.616" }
%"class.std::__1::__hash_table.616" = type <{ %"class.std::__1::unique_ptr.617", %"class.std::__1::__compressed_pair.627", %"class.std::__1::__compressed_pair.632", %"class.std::__1::__compressed_pair.637", [4 x i8] }>
%"class.std::__1::unique_ptr.617" = type { %"class.std::__1::__compressed_pair.618" }
%"class.std::__1::__compressed_pair.618" = type { %"struct.std::__1::__compressed_pair_elem.619", %"struct.std::__1::__compressed_pair_elem.621" }
%"struct.std::__1::__compressed_pair_elem.619" = type { %"struct.std::__1::__hash_node_base.620"** }
%"struct.std::__1::__hash_node_base.620" = type { %"struct.std::__1::__hash_node_base.620"* }
%"struct.std::__1::__compressed_pair_elem.621" = type { %"class.std::__1::__bucket_list_deallocator.622" }
%"class.std::__1::__bucket_list_deallocator.622" = type { %"class.std::__1::__compressed_pair.623" }
%"class.std::__1::__compressed_pair.623" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.627" = type { %"struct.std::__1::__compressed_pair_elem.628" }
%"struct.std::__1::__compressed_pair_elem.628" = type { %"struct.std::__1::__hash_node_base.620" }
%"class.std::__1::__compressed_pair.632" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.637" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::vector.643" = type { %"class.std::__1::__vector_base.644" }
%"class.std::__1::__vector_base.644" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.645" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.645" = type { %"struct.std::__1::__compressed_pair_elem.646" }
%"struct.std::__1::__compressed_pair_elem.646" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.650" = type { %"class.std::__1::__compressed_pair.651" }
%"class.std::__1::__compressed_pair.651" = type { %"struct.std::__1::__compressed_pair_elem.652" }
%"struct.std::__1::__compressed_pair_elem.652" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.552" }
%"class.std::__1::shared_ptr.656" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.168", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.657", %"class.std::__1::unique_ptr.671" }
%"class.std::__1::unique_ptr.657" = type { %"class.std::__1::__compressed_pair.658" }
%"class.std::__1::__compressed_pair.658" = type { %"struct.std::__1::__compressed_pair_elem.659" }
%"struct.std::__1::__compressed_pair_elem.659" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.660" }
%"class.std::__1::vector.660" = type { %"class.std::__1::__vector_base.661" }
%"class.std::__1::__vector_base.661" = type { %"class.std::__1::unique_ptr.662"*, %"class.std::__1::unique_ptr.662"*, %"class.std::__1::__compressed_pair.663" }
%"class.std::__1::unique_ptr.662" = type { %"class.std::__1::__compressed_pair.1264" }
%"class.std::__1::__compressed_pair.1264" = type { %"struct.std::__1::__compressed_pair_elem.1265" }
%"struct.std::__1::__compressed_pair_elem.1265" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.663" = type { %"struct.std::__1::__compressed_pair_elem.664" }
%"struct.std::__1::__compressed_pair_elem.664" = type { %"class.std::__1::unique_ptr.662"* }
%"class.std::__1::unique_ptr.671" = type { %"class.std::__1::__compressed_pair.672" }
%"class.std::__1::__compressed_pair.672" = type { %"struct.std::__1::__compressed_pair_elem.673" }
%"struct.std::__1::__compressed_pair_elem.673" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::unique_ptr.677" = type { %"class.std::__1::__compressed_pair.678" }
%"class.std::__1::__compressed_pair.678" = type { %"struct.std::__1::__compressed_pair_elem.679" }
%"struct.std::__1::__compressed_pair_elem.679" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.680", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.680" = type { %"struct.std::__1::__atomic_base.681" }
%"struct.std::__1::__atomic_base.681" = type { %"struct.std::__1::__cxx_atomic_impl.682" }
%"struct.std::__1::__cxx_atomic_impl.682" = type { %"struct.std::__1::__cxx_atomic_base_impl.683" }
%"struct.std::__1::__cxx_atomic_base_impl.683" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.687" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.688", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.688" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.689", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.689" = type { %"class.std::__1::__vector_base.690" }
%"class.std::__1::__vector_base.690" = type { %"class.std::__1::unique_ptr.691"*, %"class.std::__1::unique_ptr.691"*, %"class.std::__1::__compressed_pair.692" }
%"class.std::__1::unique_ptr.691" = type opaque
%"class.std::__1::__compressed_pair.692" = type { %"struct.std::__1::__compressed_pair_elem.693" }
%"struct.std::__1::__compressed_pair_elem.693" = type { %"class.std::__1::unique_ptr.691"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.697", %"class.std::__1::unique_ptr.703", %"struct.std::__1::atomic.181", %"class.std::__1::unique_ptr.709", %"class.std::__1::unique_ptr.715", %"class.std::__1::unique_ptr.721", %"class.std::__1::unique_ptr.727", %"class.std::__1::unique_ptr.733", %"class.std::__1::set.739", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.697" = type { %"class.std::__1::__compressed_pair.698" }
%"class.std::__1::__compressed_pair.698" = type { %"struct.std::__1::__compressed_pair_elem.699" }
%"struct.std::__1::__compressed_pair_elem.699" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.703" = type { %"class.std::__1::__compressed_pair.704" }
%"class.std::__1::__compressed_pair.704" = type { %"struct.std::__1::__compressed_pair_elem.705" }
%"struct.std::__1::__compressed_pair_elem.705" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.709" = type { %"class.std::__1::__compressed_pair.710" }
%"class.std::__1::__compressed_pair.710" = type { %"struct.std::__1::__compressed_pair_elem.711" }
%"struct.std::__1::__compressed_pair_elem.711" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.715" = type { %"class.std::__1::__compressed_pair.716" }
%"class.std::__1::__compressed_pair.716" = type { %"struct.std::__1::__compressed_pair_elem.717" }
%"struct.std::__1::__compressed_pair_elem.717" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.721" = type { %"class.std::__1::__compressed_pair.722" }
%"class.std::__1::__compressed_pair.722" = type { %"struct.std::__1::__compressed_pair_elem.723" }
%"struct.std::__1::__compressed_pair_elem.723" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.727" = type { %"class.std::__1::__compressed_pair.728" }
%"class.std::__1::__compressed_pair.728" = type { %"struct.std::__1::__compressed_pair_elem.729" }
%"struct.std::__1::__compressed_pair_elem.729" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.739" = type { %"class.std::__1::__tree.740" }
%"class.std::__1::__tree.740" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.741", %"class.std::__1::__compressed_pair.745" }
%"class.std::__1::__compressed_pair.741" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.745" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.748" }
%"class.v8::internal::TaggedImpl.748" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.747" }
%"class.v8::internal::TaggedImpl.747" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.749", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.755", %"class.v8::internal::DetachableVector.756", %"class.v8::internal::DetachableVector.755", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.756" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.755" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.757", %"class.std::__1::vector.763", %"class.std::__1::unique_ptr.770", %"class.std::__1::vector.777", %"class.std::__1::unique_ptr.784", i64, %"class.std::__1::vector.790", %"class.std::__1::vector.798", %"class.std::__1::vector.806", i8, i8, i32 }
%"class.std::__1::unique_ptr.757" = type { %"class.std::__1::__compressed_pair.758" }
%"class.std::__1::__compressed_pair.758" = type { %"struct.std::__1::__compressed_pair_elem.759" }
%"struct.std::__1::__compressed_pair_elem.759" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.763" = type { %"class.std::__1::__vector_base.764" }
%"class.std::__1::__vector_base.764" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.765" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.765" = type { %"struct.std::__1::__compressed_pair_elem.766" }
%"struct.std::__1::__compressed_pair_elem.766" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"class.v8::internal::GlobalHandles::NodeSpace.773"* }
%"class.v8::internal::GlobalHandles::NodeSpace.773" = type opaque
%"class.std::__1::vector.777" = type { %"class.std::__1::__vector_base.778" }
%"class.std::__1::__vector_base.778" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.779" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.779" = type { %"struct.std::__1::__compressed_pair_elem.780" }
%"struct.std::__1::__compressed_pair_elem.780" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.784" = type { %"class.std::__1::__compressed_pair.785" }
%"class.std::__1::__compressed_pair.785" = type { %"struct.std::__1::__compressed_pair_elem.786" }
%"struct.std::__1::__compressed_pair_elem.786" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.790" = type { %"class.std::__1::__vector_base.791" }
%"class.std::__1::__vector_base.791" = type { %"struct.std::__1::pair.792"*, %"struct.std::__1::pair.792"*, %"class.std::__1::__compressed_pair.793" }
%"struct.std::__1::pair.792" = type opaque
%"class.std::__1::__compressed_pair.793" = type { %"struct.std::__1::__compressed_pair_elem.794" }
%"struct.std::__1::__compressed_pair_elem.794" = type { %"struct.std::__1::pair.792"* }
%"class.std::__1::vector.798" = type { %"class.std::__1::__vector_base.799" }
%"class.std::__1::__vector_base.799" = type { %"struct.std::__1::pair.800"*, %"struct.std::__1::pair.800"*, %"class.std::__1::__compressed_pair.801" }
%"struct.std::__1::pair.800" = type opaque
%"class.std::__1::__compressed_pair.801" = type { %"struct.std::__1::__compressed_pair_elem.802" }
%"struct.std::__1::__compressed_pair_elem.802" = type { %"struct.std::__1::pair.800"* }
%"class.std::__1::vector.806" = type { %"class.std::__1::__vector_base.807" }
%"class.std::__1::__vector_base.807" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.808" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.std::__1::__compressed_pair.808" = type { %"struct.std::__1::__compressed_pair_elem.809" }
%"struct.std::__1::__compressed_pair_elem.809" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.813", %"class.std::__1::vector.820" }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.827" }
%"class.std::__1::unique_ptr.827" = type { %"class.std::__1::__compressed_pair.828" }
%"class.std::__1::__compressed_pair.828" = type { %"struct.std::__1::__compressed_pair_elem.829" }
%"struct.std::__1::__compressed_pair_elem.829" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.820" = type { %"class.std::__1::__vector_base.821" }
%"class.std::__1::__vector_base.821" = type { i32*, i32*, %"class.std::__1::__compressed_pair.822" }
%"class.std::__1::__compressed_pair.822" = type { %"struct.std::__1::__compressed_pair_elem.823" }
%"struct.std::__1::__compressed_pair_elem.823" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"struct.std::__1::atomic.833" = type { %"struct.std::__1::__atomic_base.834" }
%"struct.std::__1::__atomic_base.834" = type { %"struct.std::__1::__cxx_atomic_impl.835" }
%"struct.std::__1::__cxx_atomic_impl.835" = type { %"struct.std::__1::__cxx_atomic_base_impl.836" }
%"struct.std::__1::__cxx_atomic_base_impl.836" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.843" = type { %"struct.std::__1::__atomic_base.844" }
%"struct.std::__1::__atomic_base.844" = type { %"struct.std::__1::__cxx_atomic_impl.845" }
%"struct.std::__1::__cxx_atomic_impl.845" = type { %"struct.std::__1::__cxx_atomic_base_impl.846" }
%"struct.std::__1::__cxx_atomic_base_impl.846" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.848" }
%"class.std::__1::__compressed_pair.848" = type { %"struct.std::__1::__compressed_pair_elem.849" }
%"struct.std::__1::__compressed_pair_elem.849" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.850 }
%union.anon.850 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.854" = type { %"class.std::__1::__hash_table.855" }
%"class.std::__1::__hash_table.855" = type <{ %"class.std::__1::unique_ptr.856", %"class.std::__1::__compressed_pair.866", %"class.std::__1::__compressed_pair.871", %"class.std::__1::__compressed_pair.874", [4 x i8] }>
%"class.std::__1::unique_ptr.856" = type { %"class.std::__1::__compressed_pair.857" }
%"class.std::__1::__compressed_pair.857" = type { %"struct.std::__1::__compressed_pair_elem.858", %"struct.std::__1::__compressed_pair_elem.860" }
%"struct.std::__1::__compressed_pair_elem.858" = type { %"struct.std::__1::__hash_node_base.859"** }
%"struct.std::__1::__hash_node_base.859" = type { %"struct.std::__1::__hash_node_base.859"* }
%"struct.std::__1::__compressed_pair_elem.860" = type { %"class.std::__1::__bucket_list_deallocator.861" }
%"class.std::__1::__bucket_list_deallocator.861" = type { %"class.std::__1::__compressed_pair.862" }
%"class.std::__1::__compressed_pair.862" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.866" = type { %"struct.std::__1::__compressed_pair_elem.867" }
%"struct.std::__1::__compressed_pair_elem.867" = type { %"struct.std::__1::__hash_node_base.859" }
%"class.std::__1::__compressed_pair.871" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.874" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::atomic.181" = type { %"struct.std::__1::__atomic_base.182" }
%"struct.std::__1::__atomic_base.182" = type { %"struct.std::__1::__cxx_atomic_impl.183" }
%"struct.std::__1::__cxx_atomic_impl.183" = type { %"struct.std::__1::__cxx_atomic_base_impl.184" }
%"struct.std::__1::__cxx_atomic_base_impl.184" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.880", %"class.v8::internal::Handle.886", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.887", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.880" = type { %"class.std::__1::__compressed_pair.881" }
%"class.std::__1::__compressed_pair.881" = type { %"struct.std::__1::__compressed_pair_elem.882" }
%"struct.std::__1::__compressed_pair_elem.882" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.886" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.887" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.888", %"class.std::__1::vector.894", %"class.std::__1::unique_ptr.902", %"class.std::__1::unique_ptr.908", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.914", %"class.std::__1::vector.920", %"struct.std::__1::pair.928" }
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.894" = type { %"class.std::__1::__vector_base.895" }
%"class.std::__1::__vector_base.895" = type { %"class.std::__1::unique_ptr.896"*, %"class.std::__1::unique_ptr.896"*, %"class.std::__1::__compressed_pair.897" }
%"class.std::__1::unique_ptr.896" = type opaque
%"class.std::__1::__compressed_pair.897" = type { %"struct.std::__1::__compressed_pair_elem.898" }
%"struct.std::__1::__compressed_pair_elem.898" = type { %"class.std::__1::unique_ptr.896"* }
%"class.std::__1::unique_ptr.902" = type { %"class.std::__1::__compressed_pair.903" }
%"class.std::__1::__compressed_pair.903" = type { %"struct.std::__1::__compressed_pair_elem.904" }
%"struct.std::__1::__compressed_pair_elem.904" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.908" = type { %"class.std::__1::__compressed_pair.909" }
%"class.std::__1::__compressed_pair.909" = type { %"struct.std::__1::__compressed_pair_elem.910" }
%"struct.std::__1::__compressed_pair_elem.910" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.914" = type { %"class.std::__1::__compressed_pair.915" }
%"class.std::__1::__compressed_pair.915" = type { %"struct.std::__1::__compressed_pair_elem.916" }
%"struct.std::__1::__compressed_pair_elem.916" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.920" = type { %"class.std::__1::__vector_base.921" }
%"class.std::__1::__vector_base.921" = type { %"struct.std::__1::pair.922"*, %"struct.std::__1::pair.922"*, %"class.std::__1::__compressed_pair.923" }
%"struct.std::__1::pair.922" = type opaque
%"class.std::__1::__compressed_pair.923" = type { %"struct.std::__1::__compressed_pair_elem.924" }
%"struct.std::__1::__compressed_pair_elem.924" = type { %"struct.std::__1::pair.922"* }
%"struct.std::__1::pair.928" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.25"*, i16, i8*)*, i8* }
%"class.v8::Local.25" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.929" = type { %"class.std::__1::__compressed_pair.930" }
%"class.std::__1::__compressed_pair.930" = type { %"struct.std::__1::__compressed_pair_elem.931" }
%"struct.std::__1::__compressed_pair_elem.931" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.932", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.932" = type { %"class.std::__1::__hash_table.933" }
%"class.std::__1::__hash_table.933" = type <{ %"class.std::__1::unique_ptr.934", %"class.std::__1::__compressed_pair.944", %"class.std::__1::__compressed_pair.949", %"class.std::__1::__compressed_pair.953", [4 x i8] }>
%"class.std::__1::unique_ptr.934" = type { %"class.std::__1::__compressed_pair.935" }
%"class.std::__1::__compressed_pair.935" = type { %"struct.std::__1::__compressed_pair_elem.936", %"struct.std::__1::__compressed_pair_elem.938" }
%"struct.std::__1::__compressed_pair_elem.936" = type { %"struct.std::__1::__hash_node_base.937"** }
%"struct.std::__1::__hash_node_base.937" = type { %"struct.std::__1::__hash_node_base.937"* }
%"struct.std::__1::__compressed_pair_elem.938" = type { %"class.std::__1::__bucket_list_deallocator.939" }
%"class.std::__1::__bucket_list_deallocator.939" = type { %"class.std::__1::__compressed_pair.940" }
%"class.std::__1::__compressed_pair.940" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.944" = type { %"struct.std::__1::__compressed_pair_elem.945" }
%"struct.std::__1::__compressed_pair_elem.945" = type { %"struct.std::__1::__hash_node_base.937" }
%"class.std::__1::__compressed_pair.949" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.953" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.967" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.961"**, %"struct.std::__1::pair.961"**, %"struct.std::__1::pair.961"**, %"class.std::__1::__compressed_pair.962" }
%"struct.std::__1::pair.961" = type opaque
%"class.std::__1::__compressed_pair.962" = type { %"struct.std::__1::__compressed_pair_elem.963" }
%"struct.std::__1::__compressed_pair_elem.963" = type { %"struct.std::__1::pair.961"** }
%"class.std::__1::__compressed_pair.967" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.972" = type { %"class.std::__1::__vector_base.973" }
%"class.std::__1::__vector_base.973" = type { %"class.v8::internal::Handle.974"*, %"class.v8::internal::Handle.974"*, %"class.std::__1::__compressed_pair.975" }
%"class.v8::internal::Handle.974" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.975" = type { %"struct.std::__1::__compressed_pair_elem.976" }
%"struct.std::__1::__compressed_pair_elem.976" = type { %"class.v8::internal::Handle.974"* }
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.v8::internal::AddressToIndexHashMap" = type { %"class.v8::internal::PointerToIndexHashMap.980" }
%"class.v8::internal::PointerToIndexHashMap.980" = type { %"class.v8::base::TemplateHashMapImpl" }
%"class.v8::base::TemplateHashMapImpl" = type { %"struct.v8::base::TemplateHashMapImpl<unsigned long, unsigned int, v8::base::KeyEqualityMatcher<long>, v8::base::DefaultAllocationPolicy>::Impl" }
%"struct.v8::base::TemplateHashMapImpl<unsigned long, unsigned int, v8::base::KeyEqualityMatcher<long>, v8::base::DefaultAllocationPolicy>::Impl" = type { %"struct.v8::base::TemplateHashMapEntry"*, i32, i32 }
%"struct.v8::base::TemplateHashMapEntry" = type <{ i64, i32, i32, i8, [7 x i8] }>
%"class.v8::internal::HeapObjectToIndexHashMap" = type { %"class.v8::internal::PointerToIndexHashMap" }
%"class.v8::internal::PointerToIndexHashMap" = type { %"class.v8::base::TemplateHashMapImpl" }
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.838", i32, %"class.v8::Local.25" }
%"class.v8::Local.838" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.981" = type { %"class.std::__1::__compressed_pair.982" }
%"class.std::__1::__compressed_pair.982" = type { %"struct.std::__1::__compressed_pair_elem.983" }
%"struct.std::__1::__compressed_pair_elem.983" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.813", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.987" = type { %"class.std::__1::__vector_base.988" }
%"class.std::__1::__vector_base.988" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.989" }
%"class.std::__1::__compressed_pair.989" = type { %"struct.std::__1::__compressed_pair_elem.990" }
%"struct.std::__1::__compressed_pair_elem.990" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.994" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.995" = type { %"class.std::__1::__hash_table.996" }
%"class.std::__1::__hash_table.996" = type <{ %"class.std::__1::unique_ptr.997", %"class.std::__1::__compressed_pair.1007", %"class.std::__1::__compressed_pair.1012", %"class.std::__1::__compressed_pair.1015", [4 x i8] }>
%"class.std::__1::unique_ptr.997" = type { %"class.std::__1::__compressed_pair.998" }
%"class.std::__1::__compressed_pair.998" = type { %"struct.std::__1::__compressed_pair_elem.999", %"struct.std::__1::__compressed_pair_elem.1001" }
%"struct.std::__1::__compressed_pair_elem.999" = type { %"struct.std::__1::__hash_node_base.1000"** }
%"struct.std::__1::__hash_node_base.1000" = type { %"struct.std::__1::__hash_node_base.1000"* }
%"struct.std::__1::__compressed_pair_elem.1001" = type { %"class.std::__1::__bucket_list_deallocator.1002" }
%"class.std::__1::__bucket_list_deallocator.1002" = type { %"class.std::__1::__compressed_pair.1003" }
%"class.std::__1::__compressed_pair.1003" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1007" = type { %"struct.std::__1::__compressed_pair_elem.1008" }
%"struct.std::__1::__compressed_pair_elem.1008" = type { %"struct.std::__1::__hash_node_base.1000" }
%"class.std::__1::__compressed_pair.1012" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1015" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.std::__1::vector.552" = type { %"class.std::__1::__vector_base.553" }
%"class.std::__1::__vector_base.553" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.189" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1019", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1048", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1049", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1019" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1044, %union.anon.1046, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1044 = type { i64 }
%union.anon.1046 = type { i64 }
%"class.std::__1::weak_ptr.1048" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1049" = type { %"class.v8::PersistentBase.1050" }
%"class.v8::PersistentBase.1050" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1020", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1020" = type { %"class.std::__1::__hash_table.1021" }
%"class.std::__1::__hash_table.1021" = type <{ %"class.std::__1::unique_ptr.1022", %"class.std::__1::__compressed_pair.1032", %"class.std::__1::__compressed_pair.1037", %"class.std::__1::__compressed_pair.1040", [4 x i8] }>
%"class.std::__1::unique_ptr.1022" = type { %"class.std::__1::__compressed_pair.1023" }
%"class.std::__1::__compressed_pair.1023" = type { %"struct.std::__1::__compressed_pair_elem.1024", %"struct.std::__1::__compressed_pair_elem.1026" }
%"struct.std::__1::__compressed_pair_elem.1024" = type { %"struct.std::__1::__hash_node_base.1025"** }
%"struct.std::__1::__hash_node_base.1025" = type { %"struct.std::__1::__hash_node_base.1025"* }
%"struct.std::__1::__compressed_pair_elem.1026" = type { %"class.std::__1::__bucket_list_deallocator.1027" }
%"class.std::__1::__bucket_list_deallocator.1027" = type { %"class.std::__1::__compressed_pair.1028" }
%"class.std::__1::__compressed_pair.1028" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1032" = type { %"struct.std::__1::__compressed_pair_elem.1033" }
%"struct.std::__1::__compressed_pair_elem.1033" = type { %"struct.std::__1::__hash_node_base.1025" }
%"class.std::__1::__compressed_pair.1037" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1040" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1051" = type { %"class.std::__1::__compressed_pair.1052" }
%"class.std::__1::__compressed_pair.1052" = type { %"struct.std::__1::__compressed_pair_elem.1053" }
%"struct.std::__1::__compressed_pair_elem.1053" = type { %"class.v8::internal::LocalIsolate"* }
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1089" = type { %"class.std::__1::__compressed_pair.1090" }
%"class.std::__1::__compressed_pair.1090" = type { %"struct.std::__1::__compressed_pair_elem.1091" }
%"struct.std::__1::__compressed_pair_elem.1091" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.839", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.839" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1097" }
%"class.std::__1::unordered_map.1097" = type { %"class.std::__1::__hash_table.1098" }
%"class.std::__1::__hash_table.1098" = type <{ %"class.std::__1::unique_ptr.1099", %"class.std::__1::__compressed_pair.1109", %"class.std::__1::__compressed_pair.1114", %"class.std::__1::__compressed_pair.1117", [4 x i8] }>
%"class.std::__1::unique_ptr.1099" = type { %"class.std::__1::__compressed_pair.1100" }
%"class.std::__1::__compressed_pair.1100" = type { %"struct.std::__1::__compressed_pair_elem.1101", %"struct.std::__1::__compressed_pair_elem.1103" }
%"struct.std::__1::__compressed_pair_elem.1101" = type { %"struct.std::__1::__hash_node_base.1102"** }
%"struct.std::__1::__hash_node_base.1102" = type { %"struct.std::__1::__hash_node_base.1102"* }
%"struct.std::__1::__compressed_pair_elem.1103" = type { %"class.std::__1::__bucket_list_deallocator.1104" }
%"class.std::__1::__bucket_list_deallocator.1104" = type { %"class.std::__1::__compressed_pair.1105" }
%"class.std::__1::__compressed_pair.1105" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1109" = type { %"struct.std::__1::__compressed_pair_elem.1110" }
%"struct.std::__1::__compressed_pair_elem.1110" = type { %"struct.std::__1::__hash_node_base.1102" }
%"class.std::__1::__compressed_pair.1114" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1117" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::atomic.1123" = type { %"struct.std::__1::__atomic_base.1124" }
%"struct.std::__1::__atomic_base.1124" = type { %"struct.std::__1::__cxx_atomic_impl.1125" }
%"struct.std::__1::__cxx_atomic_impl.1125" = type { %"struct.std::__1::__cxx_atomic_base_impl.1126" }
%"struct.std::__1::__cxx_atomic_base_impl.1126" = type { %"class.std::__1::vector.1127"* }
%"class.std::__1::vector.1127" = type { %"class.std::__1::__vector_base.1128" }
%"class.std::__1::__vector_base.1128" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1129" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1129" = type { %"struct.std::__1::__compressed_pair_elem.1130" }
%"struct.std::__1::__compressed_pair_elem.1130" = type { %"struct.v8::MemoryRange"* }
%"class.v8::base::Optional.1134" = type { %"class.v8::base::internal::OptionalBase.1135" }
%"class.v8::base::internal::OptionalBase.1135" = type { %"struct.v8::base::internal::OptionalStorage.1136" }
%"struct.v8::base::internal::OptionalStorage.1136" = type { %"struct.v8::base::internal::OptionalStorageBase.1137" }
%"struct.v8::base::internal::OptionalStorageBase.1137" = type { i8, %union.anon.1138 }
%union.anon.1138 = type { %"class.v8::internal::compiler::NativeContextRef" }
%"class.v8::internal::compiler::NativeContextRef" = type { %"class.v8::internal::compiler::ContextRef" }
%"class.v8::internal::compiler::ContextRef" = type { %"class.v8::internal::compiler::HeapObjectRef" }
%"class.v8::internal::compiler::RefsMap" = type { %"class.v8::base::TemplateHashMapImpl.1139" }
%"class.v8::base::TemplateHashMapImpl.1139" = type { %"struct.v8::base::TemplateHashMapImpl<unsigned long, v8::internal::compiler::ObjectData *, v8::internal::compiler::AddressMatcher, v8::internal::ZoneAllocationPolicy>::Impl" }
%"struct.v8::base::TemplateHashMapImpl<unsigned long, v8::internal::compiler::ObjectData *, v8::internal::compiler::AddressMatcher, v8::internal::ZoneAllocationPolicy>::Impl" = type { %"class.v8::internal::ZoneAllocationPolicy", %"struct.v8::base::TemplateHashMapEntry.1141"*, i32, i32 }
%"class.v8::internal::ZoneAllocationPolicy" = type { %"class.v8::internal::Zone"* }
%"struct.v8::base::TemplateHashMapEntry.1141" = type opaque
%"class.v8::internal::RootIndexMap" = type { %"class.v8::internal::HeapObjectToIndexHashMap"* }
%"class.v8::internal::ZoneUnorderedSet" = type { %"class.std::__1::unordered_set.1142" }
%"class.std::__1::unordered_set.1142" = type { %"class.std::__1::__hash_table.1143" }
%"class.std::__1::__hash_table.1143" = type <{ %"class.std::__1::unique_ptr.1144", %"class.std::__1::__compressed_pair.1153", %"class.std::__1::__compressed_pair.1157", %"class.std::__1::__compressed_pair.1159", [4 x i8] }>
%"class.std::__1::unique_ptr.1144" = type { %"class.std::__1::__compressed_pair.1145" }
%"class.std::__1::__compressed_pair.1145" = type { %"struct.std::__1::__compressed_pair_elem.1146", %"struct.std::__1::__compressed_pair_elem.1148" }
%"struct.std::__1::__compressed_pair_elem.1146" = type { %"struct.std::__1::__hash_node_base.1147"** }
%"struct.std::__1::__hash_node_base.1147" = type { %"struct.std::__1::__hash_node_base.1147"* }
%"struct.std::__1::__compressed_pair_elem.1148" = type { %"class.std::__1::__bucket_list_deallocator.1149" }
%"class.std::__1::__bucket_list_deallocator.1149" = type { %"class.std::__1::__compressed_pair.1150" }
%"class.std::__1::__compressed_pair.1150" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.1151" }
%"struct.std::__1::__compressed_pair_elem.1151" = type { %"class.v8::internal::ZoneAllocator.1152" }
%"class.v8::internal::ZoneAllocator.1152" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1153" = type { %"struct.std::__1::__compressed_pair_elem.1154", %"struct.std::__1::__compressed_pair_elem.1155" }
%"struct.std::__1::__compressed_pair_elem.1154" = type { %"struct.std::__1::__hash_node_base.1147" }
%"struct.std::__1::__compressed_pair_elem.1155" = type { %"class.v8::internal::ZoneAllocator.1156" }
%"class.v8::internal::ZoneAllocator.1156" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1157" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1159" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::unique_ptr.1066" = type { %"class.std::__1::__compressed_pair.1067" }
%"class.std::__1::__compressed_pair.1067" = type { %"struct.std::__1::__compressed_pair_elem.1068" }
%"struct.std::__1::__compressed_pair_elem.1068" = type { %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1080", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.std::__1::unique_ptr.1080" = type { %"class.std::__1::__compressed_pair.1081" }
%"class.std::__1::__compressed_pair.1081" = type { %"struct.std::__1::__compressed_pair_elem.1082" }
%"struct.std::__1::__compressed_pair_elem.1082" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"class.std::__1::unique_ptr.749" = type { %"class.std::__1::__compressed_pair.750" }
%"class.std::__1::__compressed_pair.750" = type { %"struct.std::__1::__compressed_pair_elem.751" }
%"struct.std::__1::__compressed_pair_elem.751" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type { %"class.v8::internal::IdentityMapBase.base", %"class.v8::internal::ZoneAllocationPolicy" }
%"class.v8::internal::IdentityMapBase.base" = type <{ i32 (...)**, %"struct.v8::base::hash", [7 x i8], %"class.v8::internal::Heap"*, i32, i32, i32, i32, i64*, %"class.v8::internal::StrongRootsEntry"*, i64*, i8 }>
%"struct.v8::base::hash" = type { i8 }
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::ZoneUnorderedMap" = type { %"class.std::__1::unordered_map.1162" }
%"class.std::__1::unordered_map.1162" = type { %"class.std::__1::__hash_table.1163" }
%"class.std::__1::__hash_table.1163" = type <{ %"class.std::__1::unique_ptr.1164", %"class.std::__1::__compressed_pair.1173", %"class.std::__1::__compressed_pair.1177", %"class.std::__1::__compressed_pair.1180", [4 x i8] }>
%"class.std::__1::unique_ptr.1164" = type { %"class.std::__1::__compressed_pair.1165" }
%"class.std::__1::__compressed_pair.1165" = type { %"struct.std::__1::__compressed_pair_elem.1166", %"struct.std::__1::__compressed_pair_elem.1168" }
%"struct.std::__1::__compressed_pair_elem.1166" = type { %"struct.std::__1::__hash_node_base.1167"** }
%"struct.std::__1::__hash_node_base.1167" = type { %"struct.std::__1::__hash_node_base.1167"* }
%"struct.std::__1::__compressed_pair_elem.1168" = type { %"class.std::__1::__bucket_list_deallocator.1169" }
%"class.std::__1::__bucket_list_deallocator.1169" = type { %"class.std::__1::__compressed_pair.1170" }
%"class.std::__1::__compressed_pair.1170" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.1171" }
%"struct.std::__1::__compressed_pair_elem.1171" = type { %"class.v8::internal::ZoneAllocator.1172" }
%"class.v8::internal::ZoneAllocator.1172" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1173" = type { %"struct.std::__1::__compressed_pair_elem.1174", %"struct.std::__1::__compressed_pair_elem.1175" }
%"struct.std::__1::__compressed_pair_elem.1174" = type { %"struct.std::__1::__hash_node_base.1167" }
%"struct.std::__1::__compressed_pair_elem.1175" = type { %"class.v8::internal::ZoneAllocator.1176" }
%"class.v8::internal::ZoneAllocator.1176" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1177" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1180" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.v8::internal::ZoneUnorderedMap.1184" = type { %"class.std::__1::unordered_map.1185" }
%"class.std::__1::unordered_map.1185" = type { %"class.std::__1::__hash_table.1186" }
%"class.std::__1::__hash_table.1186" = type <{ %"class.std::__1::unique_ptr.1187", %"class.std::__1::__compressed_pair.1196", %"class.std::__1::__compressed_pair.1200", %"class.std::__1::__compressed_pair.1203", [4 x i8] }>
%"class.std::__1::unique_ptr.1187" = type { %"class.std::__1::__compressed_pair.1188" }
%"class.std::__1::__compressed_pair.1188" = type { %"struct.std::__1::__compressed_pair_elem.1189", %"struct.std::__1::__compressed_pair_elem.1191" }
%"struct.std::__1::__compressed_pair_elem.1189" = type { %"struct.std::__1::__hash_node_base.1190"** }
%"struct.std::__1::__hash_node_base.1190" = type { %"struct.std::__1::__hash_node_base.1190"* }
%"struct.std::__1::__compressed_pair_elem.1191" = type { %"class.std::__1::__bucket_list_deallocator.1192" }
%"class.std::__1::__bucket_list_deallocator.1192" = type { %"class.std::__1::__compressed_pair.1193" }
%"class.std::__1::__compressed_pair.1193" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.1194" }
%"struct.std::__1::__compressed_pair_elem.1194" = type { %"class.v8::internal::ZoneAllocator.1195" }
%"class.v8::internal::ZoneAllocator.1195" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1196" = type { %"struct.std::__1::__compressed_pair_elem.1197", %"struct.std::__1::__compressed_pair_elem.1198" }
%"struct.std::__1::__compressed_pair_elem.1197" = type { %"struct.std::__1::__hash_node_base.1190" }
%"struct.std::__1::__compressed_pair_elem.1198" = type { %"class.v8::internal::ZoneAllocator.1199" }
%"class.v8::internal::ZoneAllocator.1199" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1200" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1203" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.v8::internal::ZoneUnorderedMap.1207" = type { %"class.std::__1::unordered_map.1208" }
%"class.std::__1::unordered_map.1208" = type { %"class.std::__1::__hash_table.1209" }
%"class.std::__1::__hash_table.1209" = type <{ %"class.std::__1::unique_ptr.1210", %"class.std::__1::__compressed_pair.1219", %"class.std::__1::__compressed_pair.1223", %"class.std::__1::__compressed_pair.1226", [4 x i8] }>
%"class.std::__1::unique_ptr.1210" = type { %"class.std::__1::__compressed_pair.1211" }
%"class.std::__1::__compressed_pair.1211" = type { %"struct.std::__1::__compressed_pair_elem.1212", %"struct.std::__1::__compressed_pair_elem.1214" }
%"struct.std::__1::__compressed_pair_elem.1212" = type { %"struct.std::__1::__hash_node_base.1213"** }
%"struct.std::__1::__hash_node_base.1213" = type { %"struct.std::__1::__hash_node_base.1213"* }
%"struct.std::__1::__compressed_pair_elem.1214" = type { %"class.std::__1::__bucket_list_deallocator.1215" }
%"class.std::__1::__bucket_list_deallocator.1215" = type { %"class.std::__1::__compressed_pair.1216" }
%"class.std::__1::__compressed_pair.1216" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.1217" }
%"struct.std::__1::__compressed_pair_elem.1217" = type { %"class.v8::internal::ZoneAllocator.1218" }
%"class.v8::internal::ZoneAllocator.1218" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1219" = type { %"struct.std::__1::__compressed_pair_elem.1220", %"struct.std::__1::__compressed_pair_elem.1221" }
%"struct.std::__1::__compressed_pair_elem.1220" = type { %"struct.std::__1::__hash_node_base.1213" }
%"struct.std::__1::__compressed_pair_elem.1221" = type { %"class.v8::internal::ZoneAllocator.1222" }
%"class.v8::internal::ZoneAllocator.1222" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1223" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1226" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.v8::internal::ZoneVector.1230" = type { %"class.std::__1::vector.1231" }
%"class.std::__1::vector.1231" = type { %"class.std::__1::__vector_base.1232" }
%"class.std::__1::__vector_base.1232" = type { %"class.v8::internal::compiler::ObjectData"**, %"class.v8::internal::compiler::ObjectData"**, %"class.std::__1::__compressed_pair.1233" }
%"class.std::__1::__compressed_pair.1233" = type { %"struct.std::__1::__compressed_pair_elem.1234", %"struct.std::__1::__compressed_pair_elem.1235" }
%"struct.std::__1::__compressed_pair_elem.1234" = type { %"class.v8::internal::compiler::ObjectData"** }
%"struct.std::__1::__compressed_pair_elem.1235" = type { %"class.v8::internal::ZoneAllocator.1236" }
%"class.v8::internal::ZoneAllocator.1236" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneMultimap" = type { %"class.std::__1::multimap" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.1237" }
%"class.std::__1::__tree.1237" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1238", %"class.std::__1::__compressed_pair.1241" }
%"class.std::__1::__compressed_pair.1238" = type { %"struct.std::__1::__compressed_pair_elem.6", %"struct.std::__1::__compressed_pair_elem.1239" }
%"struct.std::__1::__compressed_pair_elem.1239" = type { %"class.v8::internal::ZoneAllocator.1240" }
%"class.v8::internal::ZoneAllocator.1240" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1241" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.v8::base::Optional.1270" = type { %"class.v8::base::internal::OptionalBase.1271" }
%"class.v8::base::internal::OptionalBase.1271" = type { %"struct.v8::base::internal::OptionalStorage.1272" }
%"struct.v8::base::internal::OptionalStorage.1272" = type { %"struct.v8::base::internal::OptionalStorageBase.1273" }
%"struct.v8::base::internal::OptionalStorageBase.1273" = type { i8, %union.anon.1274 }
%union.anon.1274 = type { %"class.v8::internal::compiler::HeapObjectRef" }
%"class.v8::internal::compiler::JSFunctionRef" = type { %"class.v8::internal::compiler::JSObjectRef" }
%"class.v8::internal::compiler::JSObjectRef" = type { %"class.v8::internal::compiler::JSReceiverRef" }
%"class.v8::internal::compiler::JSReceiverRef" = type { %"class.v8::internal::compiler::HeapObjectRef" }
%"class.v8::internal::StdoutStream" = type { %"class.v8::internal::OFStream.base", %"class.v8::base::LockGuard", %"class.std::__1::basic_ios.base" }
%"class.v8::internal::OFStream.base" = type { %"class.std::__1::basic_ostream.base", %"class.v8::internal::OFStreamBase" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.v8::internal::OFStreamBase" = type { %"class.std::__1::basic_streambuf", %struct._IO_FILE* }
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.v8::base::LockGuard" = type { %"class.v8::base::RecursiveMutex"* }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.v8::internal::OFStream" = type { %"class.std::__1::basic_ostream.base", %"class.v8::internal::OFStreamBase", %"class.std::__1::basic_ios.base" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.std::__1::basic_ios" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32, [4 x i8] }>
%"class.v8::internal::ZoneHandleSet" = type { i64 }
%"class.v8::internal::compiler::CheckMapsParameters" = type { %"class.v8::base::Flags.1251", %"class.v8::internal::ZoneHandleSet", %"struct.v8::internal::compiler::FeedbackSource" }
%"class.v8::base::Flags.1251" = type { i32 }
%"struct.v8::internal::compiler::FeedbackSource" = type <{ %"class.v8::internal::Handle.1252", %"class.v8::internal::FeedbackSlot", [4 x i8] }>
%"class.v8::internal::Handle.1252" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::FeedbackSlot" = type { i32 }
%"struct.v8::internal::compiler::FieldAccess" = type <{ i8, [3 x i8], i32, %"class.v8::internal::MaybeHandle", %"class.v8::internal::MaybeHandle.1253", %"class.v8::internal::compiler::Type", %"class.v8::internal::MachineType", i8, i8, i32, %"struct.v8::internal::compiler::ConstFieldInfo", i8, [7 x i8] }>
%"class.v8::internal::MaybeHandle" = type { i64* }
%"class.v8::internal::MaybeHandle.1253" = type { i64* }
%"class.v8::internal::MachineType" = type { i8, i8 }
%"struct.v8::internal::compiler::ConstFieldInfo" = type { %"class.v8::internal::MaybeHandle.1253" }
%"class.v8::internal::compiler::MapInference" = type <{ %"class.v8::internal::compiler::JSHeapBroker"*, %"class.v8::internal::compiler::Node"*, %"class.std::__1::vector.1254", i32, [4 x i8] }>
%"class.std::__1::vector.1254" = type { %"class.std::__1::__vector_base.1255" }
%"class.std::__1::__vector_base.1255" = type { %"class.v8::internal::Handle.1250"*, %"class.v8::internal::Handle.1250"*, %"class.std::__1::__compressed_pair.1256" }
%"class.v8::internal::Handle.1250" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.1256" = type { %"struct.std::__1::__compressed_pair_elem.1257" }
%"struct.std::__1::__compressed_pair_elem.1257" = type { %"class.v8::internal::Handle.1250"* }
%"class.v8::internal::compiler::CallDescriptor" = type { i32, %"class.v8::internal::MachineType", [2 x i8], %"class.v8::internal::compiler::LinkageLocation", %"class.v8::internal::Signature"*, i64, i64, %"class.v8::base::Flags", i32, i32, i32, %"class.v8::base::Flags.1261", i32, i8*, %"class.v8::CFunctionInfo"* }
%"class.v8::internal::compiler::LinkageLocation" = type <{ i32, %"class.v8::internal::MachineType", [2 x i8] }>
%"class.v8::internal::Signature" = type { i64, i64, %"class.v8::internal::compiler::LinkageLocation"* }
%"class.v8::base::Flags.1261" = type { i32 }
%"class.v8::CFunctionInfo" = type opaque
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"struct.v8::internal::Brief" = type { i64 }

$_ZN2v88internal12StdoutStreamD1Ev = comdat any

$_ZN2v88internal8OFStreamD1Ev = comdat any

$_ZN2v88internal8OFStreamD0Ev = comdat any

$_ZTv0_n24_N2v88internal8OFStreamD1Ev = comdat any

$_ZTv0_n24_N2v88internal8OFStreamD0Ev = comdat any

$_ZN2v88internal12StdoutStreamD0Ev = comdat any

$_ZTv0_n24_N2v88internal12StdoutStreamD1Ev = comdat any

$_ZTv0_n24_N2v88internal12StdoutStreamD0Ev = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN2v88internal8compiler10TryMakeRefINS0_10HeapObjectEvEENS_4base8OptionalINS1_10ref_traitsIT_E8ref_typeEEEPNS1_12JSHeapBrokerENS0_6HandleIS7_EENS4_5FlagsINS1_19GetOrCreateDataFlagEiEE = comdat any

$_ZTVN2v88internal12StdoutStreamE = comdat any

$_ZTTN2v88internal12StdoutStreamE = comdat any

$_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE = comdat any

$_ZTCN2v88internal12StdoutStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE = comdat any

$_ZTVN2v88internal8OFStreamE = comdat any

$_ZTTN2v88internal8OFStreamE = comdat any

$_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE = comdat any

@.str = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.1 = private unnamed_addr constant [37 x i8] c"node->op()->ControlOutputCount() > 0\00", align 1
@.str.2 = private unnamed_addr constant [11 x i8] c"0 <= index\00", align 1
@.str.3 = private unnamed_addr constant [38 x i8] c"index < node->op()->ValueInputCount()\00", align 1
@.str.4 = private unnamed_addr constant [22 x i8] c"value_input_count > 0\00", align 1
@.str.5 = private unnamed_addr constant [48 x i8] c"OperatorProperties::HasContextInput(node->op())\00", align 1
@.str.6 = private unnamed_addr constant [40 x i8] c"index < node->op()->ControlInputCount()\00", align 1
@.str.7 = private unnamed_addr constant [39 x i8] c"index < node->op()->EffectInputCount()\00", align 1
@.str.8 = private unnamed_addr constant [51 x i8] c"OperatorProperties::HasFrameStateInput(node->op())\00", align 1
@.str.9 = private unnamed_addr constant [22 x i8] c"-1 != index_to_remove\00", align 1
@.str.10 = private unnamed_addr constant [9 x i8] c"Missing \00", align 1
@.str.11 = private unnamed_addr constant [16 x i8] c"initial map on \00", align 1
@.str.12 = private unnamed_addr constant [3 x i8] c" (\00", align 1
@.str.13 = private unnamed_addr constant [41 x i8] c"../../v8/src/compiler/node-properties.cc\00", align 1
@.str.14 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.15 = private unnamed_addr constant [2 x i8] c")\00", align 1
@stdout = external local_unnamed_addr global %struct._IO_FILE*, align 8
@_ZTVN2v88internal12StdoutStreamE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 88 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::StdoutStream"*)* @_ZN2v88internal12StdoutStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::StdoutStream"*)* @_ZN2v88internal12StdoutStreamD0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -88 to i8*), i8* inttoptr (i64 -88 to i8*), i8* null, i8* bitcast (void (%"class.v8::internal::StdoutStream"*)* @_ZTv0_n24_N2v88internal12StdoutStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::StdoutStream"*)* @_ZTv0_n24_N2v88internal12StdoutStreamD0Ev to i8*)] }, comdat, align 8
@_ZTTN2v88internal12StdoutStreamE = linkonce_odr hidden unnamed_addr constant [6 x i8*] [i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE, i32 0, inrange i32 1, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i32 0, inrange i32 1, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i32 0, inrange i32 1, i32 3) to i8*)], comdat, align 8
@_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 88 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZN2v88internal8OFStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZN2v88internal8OFStreamD0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -88 to i8*), i8* inttoptr (i64 -88 to i8*), i8* null, i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZTv0_n24_N2v88internal8OFStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZTv0_n24_N2v88internal8OFStreamD0Ev to i8*)] }, comdat, align 8
@_ZTCN2v88internal12StdoutStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 88 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -88 to i8*), i8* inttoptr (i64 -88 to i8*), i8* null, i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev to i8*)] }, comdat, align 8
@_ZTVNSt3__19basic_iosIcNS_11char_traitsIcEEEE = external unnamed_addr constant { [4 x i8*] }, align 8
@_ZTVN2v88internal8OFStreamE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 80 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZN2v88internal8OFStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZN2v88internal8OFStreamD0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZTv0_n24_N2v88internal8OFStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZTv0_n24_N2v88internal8OFStreamD0Ev to i8*)] }, comdat, align 8
@_ZTTN2v88internal8OFStreamE = linkonce_odr hidden unnamed_addr constant [4 x i8*] [i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE, i32 0, inrange i32 1, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i32 0, inrange i32 1, i32 3) to i8*)], comdat, align 8
@_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 80 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev to i8*)] }, comdat, align 8
@.str.16 = private unnamed_addr constant [23 x i8] c"storage_.is_populated_\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@.str.18 = private unnamed_addr constant [16 x i8] c"ObjectData for \00", align 1
@.str.19 = private unnamed_addr constant [39 x i8] c"../../v8/src/compiler/js-heap-broker.h\00", align 1
@.str.20 = private unnamed_addr constant [15 x i8] c"IsHeapObject()\00", align 1
@.str.22 = private unnamed_addr constant [19 x i8] c"HasResolvedValue()\00", align 1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2v88internal8compiler14NodeProperties11IsValueEdgeENS1_4EdgeE(%"struct.v8::internal::compiler::Node::Use"*, %"class.v8::internal::compiler::Node"**) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %0, i64 1
  %4 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = lshr i32 %5, 1
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %3, i64 %7
  %9 = and i32 %5, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %2
  %12 = bitcast %"struct.v8::internal::compiler::Node::Use"* %8 to %"class.v8::internal::compiler::Node"*
  br label %16

13:                                               ; preds = %2
  %14 = bitcast %"struct.v8::internal::compiler::Node::Use"* %8 to %"class.v8::internal::compiler::Node"**
  %15 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %14, align 8
  br label %16

16:                                               ; preds = %11, %13
  %17 = phi %"class.v8::internal::compiler::Node"* [ %12, %11 ], [ %15, %13 ]
  %18 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %17, i64 0, i32 0
  %19 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %19, i64 0, i32 5
  %21 = load i32, i32* %20, align 4
  %22 = icmp slt i32 %6, %21
  ret i1 %22
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal8compiler14NodeProperties13IsContextEdgeENS1_4EdgeE(%"struct.v8::internal::compiler::Node::Use"*, %"class.v8::internal::compiler::Node"**) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %0, i64 1
  %4 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = lshr i32 %5, 1
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %3, i64 %7
  %9 = and i32 %5, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %2
  %12 = bitcast %"struct.v8::internal::compiler::Node::Use"* %8 to %"class.v8::internal::compiler::Node"*
  br label %16

13:                                               ; preds = %2
  %14 = bitcast %"struct.v8::internal::compiler::Node::Use"* %8 to %"class.v8::internal::compiler::Node"**
  %15 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %14, align 8
  br label %16

16:                                               ; preds = %11, %13
  %17 = phi %"class.v8::internal::compiler::Node"* [ %12, %11 ], [ %15, %13 ]
  %18 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %17, i64 0, i32 0
  %19 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %19, i64 0, i32 5
  %21 = load i32, i32* %20, align 4
  %22 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %19) #10
  br i1 %22, label %23, label %27

23:                                               ; preds = %16
  %24 = load i32, i32* %4, align 8
  %25 = lshr i32 %24, 1
  %26 = icmp eq i32 %25, %21
  br label %27

27:                                               ; preds = %16, %23
  %28 = phi i1 [ false, %16 ], [ %26, %23 ]
  ret i1 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal8compiler14NodeProperties16IsFrameStateEdgeENS1_4EdgeE(%"struct.v8::internal::compiler::Node::Use"*, %"class.v8::internal::compiler::Node"**) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %0, i64 1
  %4 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = lshr i32 %5, 1
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %3, i64 %7
  %9 = and i32 %5, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %2
  %12 = bitcast %"struct.v8::internal::compiler::Node::Use"* %8 to %"class.v8::internal::compiler::Node"*
  br label %16

13:                                               ; preds = %2
  %14 = bitcast %"struct.v8::internal::compiler::Node::Use"* %8 to %"class.v8::internal::compiler::Node"**
  %15 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %14, align 8
  br label %16

16:                                               ; preds = %11, %13
  %17 = phi %"class.v8::internal::compiler::Node"* [ %12, %11 ], [ %15, %13 ]
  %18 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %17, i64 0, i32 0
  %19 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %19, i64 0, i32 5
  %21 = load i32, i32* %20, align 4
  %22 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %19) #10
  %23 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %18, align 8
  %24 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %23) #10
  br i1 %24, label %25, label %31

25:                                               ; preds = %16
  %26 = zext i1 %22 to i32
  %27 = add nsw i32 %21, %26
  %28 = load i32, i32* %4, align 8
  %29 = lshr i32 %28, 1
  %30 = icmp eq i32 %29, %27
  br label %31

31:                                               ; preds = %16, %25
  %32 = phi i1 [ false, %16 ], [ %30, %25 ]
  ret i1 %32
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal8compiler14NodeProperties12IsEffectEdgeENS1_4EdgeE(%"struct.v8::internal::compiler::Node::Use"*, %"class.v8::internal::compiler::Node"**) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %0, i64 1
  %4 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = lshr i32 %5, 1
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %3, i64 %7
  %9 = and i32 %5, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %2
  %12 = bitcast %"struct.v8::internal::compiler::Node::Use"* %8 to %"class.v8::internal::compiler::Node"*
  br label %16

13:                                               ; preds = %2
  %14 = bitcast %"struct.v8::internal::compiler::Node::Use"* %8 to %"class.v8::internal::compiler::Node"**
  %15 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %14, align 8
  br label %16

16:                                               ; preds = %11, %13
  %17 = phi %"class.v8::internal::compiler::Node"* [ %12, %11 ], [ %15, %13 ]
  %18 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %17, i64 0, i32 0
  %19 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %19, i64 0, i32 5
  %21 = load i32, i32* %20, align 4
  %22 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %19) #10
  %23 = zext i1 %22 to i32
  %24 = add nsw i32 %21, %23
  %25 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %18, align 8
  %26 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %25) #10
  %27 = zext i1 %26 to i32
  %28 = add nsw i32 %24, %27
  %29 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %18, align 8
  %30 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %29, i64 0, i32 6
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %40, label %33

33:                                               ; preds = %16
  %34 = load i32, i32* %4, align 8
  %35 = lshr i32 %34, 1
  %36 = icmp sge i32 %35, %28
  %37 = add nsw i32 %31, %28
  %38 = icmp slt i32 %35, %37
  %39 = and i1 %38, %36
  br label %40

40:                                               ; preds = %16, %33
  %41 = phi i1 [ false, %16 ], [ %39, %33 ]
  ret i1 %41
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal8compiler14NodeProperties13IsControlEdgeENS1_4EdgeE(%"struct.v8::internal::compiler::Node::Use"*, %"class.v8::internal::compiler::Node"**) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %0, i64 1
  %4 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = lshr i32 %5, 1
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %3, i64 %7
  %9 = and i32 %5, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %2
  %12 = bitcast %"struct.v8::internal::compiler::Node::Use"* %8 to %"class.v8::internal::compiler::Node"*
  br label %16

13:                                               ; preds = %2
  %14 = bitcast %"struct.v8::internal::compiler::Node::Use"* %8 to %"class.v8::internal::compiler::Node"**
  %15 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %14, align 8
  br label %16

16:                                               ; preds = %11, %13
  %17 = phi %"class.v8::internal::compiler::Node"* [ %12, %11 ], [ %15, %13 ]
  %18 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %17, i64 0, i32 0
  %19 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %19, i64 0, i32 5
  %21 = load i32, i32* %20, align 4
  %22 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %19) #10
  %23 = zext i1 %22 to i32
  %24 = add nsw i32 %21, %23
  %25 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %18, align 8
  %26 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %25) #10
  %27 = zext i1 %26 to i32
  %28 = add nsw i32 %24, %27
  %29 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %18, align 8
  %30 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %29, i64 0, i32 6
  %31 = load i32, i32* %30, align 8
  %32 = add nsw i32 %28, %31
  %33 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %29, i64 0, i32 7
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %43, label %36

36:                                               ; preds = %16
  %37 = load i32, i32* %4, align 8
  %38 = lshr i32 %37, 1
  %39 = icmp sge i32 %38, %32
  %40 = add nsw i32 %34, %32
  %41 = icmp slt i32 %38, %40
  %42 = and i1 %41, %39
  br label %43

43:                                               ; preds = %16, %36
  %44 = phi i1 [ false, %16 ], [ %42, %36 ]
  ret i1 %44
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal8compiler14NodeProperties17IsExceptionalCallEPNS1_4NodeEPS4_(%"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"**) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %0, i64 0, i32 0
  %4 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %4, i64 0, i32 3, i32 0
  %6 = load i8, i8* %5, align 2
  %7 = and i8 %6, 32
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %86

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %0, i64 0, i32 4
  %11 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %10, align 8
  %12 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %11, null
  br i1 %12, label %86, label %13

13:                                               ; preds = %9, %84
  %14 = phi %"struct.v8::internal::compiler::Node::Use"* [ %16, %84 ], [ %11, %9 ]
  %15 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %14, i64 0, i32 0
  %16 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %15, align 8
  %17 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %14, i64 0, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = lshr i32 %18, 1
  %20 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %14, i64 1
  %21 = zext i32 %19 to i64
  %22 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %20, i64 %21
  %23 = and i32 %18, 1
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %13
  %26 = bitcast %"struct.v8::internal::compiler::Node::Use"* %22 to %"class.v8::internal::compiler::Node"*
  br label %30

27:                                               ; preds = %13
  %28 = bitcast %"struct.v8::internal::compiler::Node::Use"* %22 to %"class.v8::internal::compiler::Node"**
  %29 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %28, align 8
  br label %30

30:                                               ; preds = %27, %25
  %31 = phi %"class.v8::internal::compiler::Node"* [ %26, %25 ], [ %29, %27 ]
  %32 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %31, i64 0, i32 0
  %33 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %32, align 8
  %34 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %33, i64 0, i32 5
  %35 = load i32, i32* %34, align 4
  %36 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %33) #10
  %37 = zext i1 %36 to i32
  %38 = add nsw i32 %35, %37
  %39 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %32, align 8
  %40 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %39) #10
  %41 = zext i1 %40 to i32
  %42 = add nsw i32 %38, %41
  %43 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %32, align 8
  %44 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %43, i64 0, i32 6
  %45 = load i32, i32* %44, align 8
  %46 = add nsw i32 %42, %45
  %47 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %43, i64 0, i32 7
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %84, label %50

50:                                               ; preds = %30
  %51 = load i32, i32* %17, align 8
  %52 = lshr i32 %51, 1
  %53 = icmp sge i32 %52, %46
  %54 = add nsw i32 %48, %46
  %55 = icmp slt i32 %52, %54
  %56 = and i1 %55, %53
  br i1 %56, label %57, label %84

57:                                               ; preds = %50
  %58 = zext i32 %52 to i64
  %59 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %20, i64 %58
  %60 = and i32 %51, 1
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %64, label %62

62:                                               ; preds = %57
  %63 = bitcast %"struct.v8::internal::compiler::Node::Use"* %59 to %"class.v8::internal::compiler::Node"*
  br label %67

64:                                               ; preds = %57
  %65 = bitcast %"struct.v8::internal::compiler::Node::Use"* %59 to %"class.v8::internal::compiler::Node"**
  %66 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %65, align 8
  br label %67

67:                                               ; preds = %62, %64
  %68 = phi %"class.v8::internal::compiler::Node"* [ %63, %62 ], [ %66, %64 ]
  %69 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %68, i64 0, i32 0
  %70 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %69, align 8
  %71 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %70, i64 0, i32 2
  %72 = load i16, i16* %71, align 8
  %73 = icmp eq i16 %72, 7
  br i1 %73, label %74, label %84

74:                                               ; preds = %67
  %75 = icmp eq %"class.v8::internal::compiler::Node"** %1, null
  br i1 %75, label %86, label %76

76:                                               ; preds = %74
  br i1 %61, label %79, label %77

77:                                               ; preds = %76
  %78 = bitcast %"struct.v8::internal::compiler::Node::Use"* %59 to %"class.v8::internal::compiler::Node"*
  br label %82

79:                                               ; preds = %76
  %80 = bitcast %"struct.v8::internal::compiler::Node::Use"* %59 to %"class.v8::internal::compiler::Node"**
  %81 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %80, align 8
  br label %82

82:                                               ; preds = %77, %79
  %83 = phi %"class.v8::internal::compiler::Node"* [ %78, %77 ], [ %81, %79 ]
  store %"class.v8::internal::compiler::Node"* %83, %"class.v8::internal::compiler::Node"** %1, align 8
  br label %86

84:                                               ; preds = %30, %50, %67
  %85 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %16, null
  br i1 %85, label %86, label %13

86:                                               ; preds = %84, %9, %2, %74, %82
  %87 = phi i1 [ true, %82 ], [ true, %74 ], [ false, %2 ], [ false, %9 ], [ false, %84 ]
  ret i1 %87
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler14NodeProperties31FindSuccessfulControlProjectionEPNS1_4NodeE(%"class.v8::internal::compiler::Node"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %0, i64 0, i32 0
  %3 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %3, i64 0, i32 11
  %5 = load i32, i32* %4, align 8
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %8, label %7, !prof !2

7:                                                ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i64 0, i64 0)) #11
  unreachable

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %3, i64 0, i32 3, i32 0
  %10 = load i8, i8* %9, align 2
  %11 = and i8 %10, 32
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %86

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %0, i64 0, i32 4
  %15 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %14, align 8
  %16 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %15, null
  br i1 %16, label %86, label %17

17:                                               ; preds = %13, %84
  %18 = phi %"struct.v8::internal::compiler::Node::Use"* [ %20, %84 ], [ %15, %13 ]
  %19 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %18, i64 0, i32 0
  %20 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %19, align 8
  %21 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %18, i64 0, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = lshr i32 %22, 1
  %24 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %18, i64 1
  %25 = zext i32 %23 to i64
  %26 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %24, i64 %25
  %27 = and i32 %22, 1
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %31, label %29

29:                                               ; preds = %17
  %30 = bitcast %"struct.v8::internal::compiler::Node::Use"* %26 to %"class.v8::internal::compiler::Node"*
  br label %34

31:                                               ; preds = %17
  %32 = bitcast %"struct.v8::internal::compiler::Node::Use"* %26 to %"class.v8::internal::compiler::Node"**
  %33 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %32, align 8
  br label %34

34:                                               ; preds = %31, %29
  %35 = phi %"class.v8::internal::compiler::Node"* [ %30, %29 ], [ %33, %31 ]
  %36 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %35, i64 0, i32 0
  %37 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %36, align 8
  %38 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %37, i64 0, i32 5
  %39 = load i32, i32* %38, align 4
  %40 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %37) #10
  %41 = zext i1 %40 to i32
  %42 = add nsw i32 %39, %41
  %43 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %36, align 8
  %44 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %43) #10
  %45 = zext i1 %44 to i32
  %46 = add nsw i32 %42, %45
  %47 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %36, align 8
  %48 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %47, i64 0, i32 6
  %49 = load i32, i32* %48, align 8
  %50 = add nsw i32 %46, %49
  %51 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %47, i64 0, i32 7
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %84, label %54

54:                                               ; preds = %34
  %55 = load i32, i32* %21, align 8
  %56 = lshr i32 %55, 1
  %57 = icmp sge i32 %56, %50
  %58 = add nsw i32 %52, %50
  %59 = icmp slt i32 %56, %58
  %60 = and i1 %59, %57
  br i1 %60, label %61, label %84

61:                                               ; preds = %54
  %62 = zext i32 %56 to i64
  %63 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %24, i64 %62
  %64 = and i32 %55, 1
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %68, label %66

66:                                               ; preds = %61
  %67 = bitcast %"struct.v8::internal::compiler::Node::Use"* %63 to %"class.v8::internal::compiler::Node"*
  br label %71

68:                                               ; preds = %61
  %69 = bitcast %"struct.v8::internal::compiler::Node::Use"* %63 to %"class.v8::internal::compiler::Node"**
  %70 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %69, align 8
  br label %71

71:                                               ; preds = %66, %68
  %72 = phi %"class.v8::internal::compiler::Node"* [ %67, %66 ], [ %70, %68 ]
  %73 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %72, i64 0, i32 0
  %74 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %73, align 8
  %75 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %74, i64 0, i32 2
  %76 = load i16, i16* %75, align 8
  %77 = icmp eq i16 %76, 6
  br i1 %77, label %78, label %84

78:                                               ; preds = %71
  br i1 %65, label %81, label %79

79:                                               ; preds = %78
  %80 = bitcast %"struct.v8::internal::compiler::Node::Use"* %63 to %"class.v8::internal::compiler::Node"*
  br label %86

81:                                               ; preds = %78
  %82 = bitcast %"struct.v8::internal::compiler::Node::Use"* %63 to %"class.v8::internal::compiler::Node"**
  %83 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %82, align 8
  br label %86

84:                                               ; preds = %34, %54, %71
  %85 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %20, null
  br i1 %85, label %86, label %17

86:                                               ; preds = %84, %13, %8, %79, %81
  %87 = phi %"class.v8::internal::compiler::Node"* [ %83, %81 ], [ %80, %79 ], [ %0, %8 ], [ %0, %13 ], [ %0, %84 ]
  ret %"class.v8::internal::compiler::Node"* %87
}

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler14NodeProperties17ReplaceValueInputEPNS1_4NodeES4_i(%"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, i32) local_unnamed_addr #2 align 2 {
  %4 = icmp sgt i32 %2, -1
  br i1 %4, label %6, label %5, !prof !2

5:                                                ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0)) #11
  unreachable

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %0, i64 0, i32 0
  %8 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %8, i64 0, i32 5
  %10 = load i32, i32* %9, align 4
  %11 = icmp sgt i32 %10, %2
  br i1 %11, label %13, label %12, !prof !2

12:                                               ; preds = %6
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0)) #11
  unreachable

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %0, i64 0, i32 3
  %15 = load i32, i32* %14, align 4
  %16 = and i32 %15, 251658240
  %17 = icmp eq i32 %16, 251658240
  %18 = ptrtoint %"class.v8::internal::compiler::Node"* %0 to i64
  %19 = add i64 %18, 32
  br i1 %17, label %20, label %24

20:                                               ; preds = %13
  %21 = inttoptr i64 %19 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, 16
  br label %24

24:                                               ; preds = %13, %20
  %25 = phi i64 [ %23, %20 ], [ %19, %13 ]
  %26 = inttoptr i64 %25 to %"class.v8::internal::compiler::Node"**
  %27 = sext i32 %2 to i64
  %28 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %26, i64 %27
  %29 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %28, align 8
  %30 = icmp eq %"class.v8::internal::compiler::Node"* %29, %1
  br i1 %30, label %47, label %31

31:                                               ; preds = %24
  br i1 %17, label %34, label %32

32:                                               ; preds = %31
  %33 = bitcast %"class.v8::internal::compiler::Node"* %0 to %"struct.v8::internal::compiler::Node::Use"*
  br label %37

34:                                               ; preds = %31
  %35 = inttoptr i64 %19 to %"struct.v8::internal::compiler::Node::Use"**
  %36 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %35, align 8
  br label %37

37:                                               ; preds = %34, %32
  %38 = phi %"struct.v8::internal::compiler::Node::Use"* [ %33, %32 ], [ %36, %34 ]
  %39 = xor i32 %2, -1
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %38, i64 %40
  %42 = icmp eq %"class.v8::internal::compiler::Node"* %29, null
  br i1 %42, label %44, label %43

43:                                               ; preds = %37
  tail call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %29, %"struct.v8::internal::compiler::Node::Use"* %41) #10
  br label %44

44:                                               ; preds = %43, %37
  store %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** %28, align 8
  %45 = icmp eq %"class.v8::internal::compiler::Node"* %1, null
  br i1 %45, label %47, label %46

46:                                               ; preds = %44
  tail call void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %1, %"struct.v8::internal::compiler::Node::Use"* %41) #10
  br label %47

47:                                               ; preds = %24, %44, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler14NodeProperties18ReplaceValueInputsEPNS1_4NodeES4_(%"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %0, i64 0, i32 0
  %4 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %4, i64 0, i32 5
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %9, label %8, !prof !2

8:                                                ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4, i64 0, i64 0)) #11
  unreachable

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %0, i64 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = and i32 %11, 251658240
  %13 = icmp eq i32 %12, 251658240
  %14 = ptrtoint %"class.v8::internal::compiler::Node"* %0 to i64
  %15 = add i64 %14, 32
  br i1 %13, label %16, label %20

16:                                               ; preds = %9
  %17 = inttoptr i64 %15 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = add i64 %18, 16
  br label %20

20:                                               ; preds = %9, %16
  %21 = phi i64 [ %19, %16 ], [ %15, %9 ]
  %22 = inttoptr i64 %21 to %"class.v8::internal::compiler::Node"**
  %23 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %22, align 8
  %24 = icmp eq %"class.v8::internal::compiler::Node"* %23, %1
  br i1 %24, label %39, label %25

25:                                               ; preds = %20
  br i1 %13, label %28, label %26

26:                                               ; preds = %25
  %27 = bitcast %"class.v8::internal::compiler::Node"* %0 to %"struct.v8::internal::compiler::Node::Use"*
  br label %31

28:                                               ; preds = %25
  %29 = inttoptr i64 %15 to %"struct.v8::internal::compiler::Node::Use"**
  %30 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %29, align 8
  br label %31

31:                                               ; preds = %28, %26
  %32 = phi %"struct.v8::internal::compiler::Node::Use"* [ %27, %26 ], [ %30, %28 ]
  %33 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %32, i64 -1
  %34 = icmp eq %"class.v8::internal::compiler::Node"* %23, null
  br i1 %34, label %36, label %35

35:                                               ; preds = %31
  tail call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %23, %"struct.v8::internal::compiler::Node::Use"* %33) #10
  br label %36

36:                                               ; preds = %35, %31
  store %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** %22, align 8
  %37 = icmp eq %"class.v8::internal::compiler::Node"* %1, null
  br i1 %37, label %39, label %38

38:                                               ; preds = %36
  tail call void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %1, %"struct.v8::internal::compiler::Node::Use"* %33) #10
  br label %39

39:                                               ; preds = %20, %36, %38
  %40 = add nsw i32 %6, -1
  %41 = icmp sgt i32 %40, 0
  br i1 %41, label %42, label %47

42:                                               ; preds = %39, %42
  %43 = phi i32 [ %45, %42 ], [ %40, %39 ]
  %44 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler4Node11RemoveInputEi(%"class.v8::internal::compiler::Node"* %0, i32 %43) #10
  %45 = add nsw i32 %43, -1
  %46 = icmp sgt i32 %45, 0
  br i1 %46, label %42, label %47

47:                                               ; preds = %42, %39
  ret void
}

declare %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler4Node11RemoveInputEi(%"class.v8::internal::compiler::Node"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler14NodeProperties19ReplaceContextInputEPNS1_4NodeES4_(%"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %0, i64 0, i32 0
  %4 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %3, align 8
  %5 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %4) #10
  br i1 %5, label %7, label %6, !prof !2

6:                                                ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.5, i64 0, i64 0)) #11
  unreachable

7:                                                ; preds = %2
  %8 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %3, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %8, i64 0, i32 5
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %0, i64 0, i32 3
  %12 = load i32, i32* %11, align 4
  %13 = and i32 %12, 251658240
  %14 = icmp eq i32 %13, 251658240
  %15 = ptrtoint %"class.v8::internal::compiler::Node"* %0 to i64
  %16 = add i64 %15, 32
  br i1 %14, label %17, label %21

17:                                               ; preds = %7
  %18 = inttoptr i64 %16 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = add i64 %19, 16
  br label %21

21:                                               ; preds = %7, %17
  %22 = phi i64 [ %20, %17 ], [ %16, %7 ]
  %23 = inttoptr i64 %22 to %"class.v8::internal::compiler::Node"**
  %24 = sext i32 %10 to i64
  %25 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %23, i64 %24
  %26 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %25, align 8
  %27 = icmp eq %"class.v8::internal::compiler::Node"* %26, %1
  br i1 %27, label %44, label %28

28:                                               ; preds = %21
  br i1 %14, label %31, label %29

29:                                               ; preds = %28
  %30 = bitcast %"class.v8::internal::compiler::Node"* %0 to %"struct.v8::internal::compiler::Node::Use"*
  br label %34

31:                                               ; preds = %28
  %32 = inttoptr i64 %16 to %"struct.v8::internal::compiler::Node::Use"**
  %33 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %32, align 8
  br label %34

34:                                               ; preds = %31, %29
  %35 = phi %"struct.v8::internal::compiler::Node::Use"* [ %30, %29 ], [ %33, %31 ]
  %36 = xor i32 %10, -1
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %35, i64 %37
  %39 = icmp eq %"class.v8::internal::compiler::Node"* %26, null
  br i1 %39, label %41, label %40

40:                                               ; preds = %34
  tail call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %26, %"struct.v8::internal::compiler::Node::Use"* %38) #10
  br label %41

41:                                               ; preds = %40, %34
  store %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** %25, align 8
  %42 = icmp eq %"class.v8::internal::compiler::Node"* %1, null
  br i1 %42, label %44, label %43

43:                                               ; preds = %41
  tail call void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %1, %"struct.v8::internal::compiler::Node::Use"* %38) #10
  br label %44

44:                                               ; preds = %21, %41, %43
  ret void
}

declare zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler14NodeProperties19ReplaceControlInputEPNS1_4NodeES4_i(%"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, i32) local_unnamed_addr #2 align 2 {
  %4 = icmp sgt i32 %2, -1
  br i1 %4, label %6, label %5, !prof !2

5:                                                ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0)) #11
  unreachable

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %0, i64 0, i32 0
  %8 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %8, i64 0, i32 7
  %10 = load i32, i32* %9, align 4
  %11 = icmp sgt i32 %10, %2
  br i1 %11, label %13, label %12, !prof !2

12:                                               ; preds = %6
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.6, i64 0, i64 0)) #11
  unreachable

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %8, i64 0, i32 5
  %15 = load i32, i32* %14, align 4
  %16 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %8) #10
  %17 = zext i1 %16 to i32
  %18 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %7, align 8
  %19 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %18) #10
  %20 = zext i1 %19 to i32
  %21 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %7, align 8
  %22 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %21, i64 0, i32 6
  %23 = load i32, i32* %22, align 8
  %24 = add i32 %15, %2
  %25 = add i32 %24, %17
  %26 = add i32 %25, %20
  %27 = add i32 %26, %23
  %28 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 4
  %30 = and i32 %29, 251658240
  %31 = icmp eq i32 %30, 251658240
  %32 = ptrtoint %"class.v8::internal::compiler::Node"* %0 to i64
  %33 = add i64 %32, 32
  br i1 %31, label %34, label %38

34:                                               ; preds = %13
  %35 = inttoptr i64 %33 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = add i64 %36, 16
  br label %38

38:                                               ; preds = %13, %34
  %39 = phi i64 [ %37, %34 ], [ %33, %13 ]
  %40 = inttoptr i64 %39 to %"class.v8::internal::compiler::Node"**
  %41 = sext i32 %27 to i64
  %42 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %40, i64 %41
  %43 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %42, align 8
  %44 = icmp eq %"class.v8::internal::compiler::Node"* %43, %1
  br i1 %44, label %61, label %45

45:                                               ; preds = %38
  br i1 %31, label %48, label %46

46:                                               ; preds = %45
  %47 = bitcast %"class.v8::internal::compiler::Node"* %0 to %"struct.v8::internal::compiler::Node::Use"*
  br label %51

48:                                               ; preds = %45
  %49 = inttoptr i64 %33 to %"struct.v8::internal::compiler::Node::Use"**
  %50 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %49, align 8
  br label %51

51:                                               ; preds = %48, %46
  %52 = phi %"struct.v8::internal::compiler::Node::Use"* [ %47, %46 ], [ %50, %48 ]
  %53 = xor i32 %27, -1
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %52, i64 %54
  %56 = icmp eq %"class.v8::internal::compiler::Node"* %43, null
  br i1 %56, label %58, label %57

57:                                               ; preds = %51
  tail call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %43, %"struct.v8::internal::compiler::Node::Use"* %55) #10
  br label %58

58:                                               ; preds = %57, %51
  store %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** %42, align 8
  %59 = icmp eq %"class.v8::internal::compiler::Node"* %1, null
  br i1 %59, label %61, label %60

60:                                               ; preds = %58
  tail call void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %1, %"struct.v8::internal::compiler::Node::Use"* %55) #10
  br label %61

61:                                               ; preds = %38, %58, %60
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler14NodeProperties18ReplaceEffectInputEPNS1_4NodeES4_i(%"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, i32) local_unnamed_addr #2 align 2 {
  %4 = icmp sgt i32 %2, -1
  br i1 %4, label %6, label %5, !prof !2

5:                                                ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0)) #11
  unreachable

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %0, i64 0, i32 0
  %8 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %8, i64 0, i32 6
  %10 = load i32, i32* %9, align 8
  %11 = icmp sgt i32 %10, %2
  br i1 %11, label %13, label %12, !prof !2

12:                                               ; preds = %6
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.7, i64 0, i64 0)) #11
  unreachable

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %8, i64 0, i32 5
  %15 = load i32, i32* %14, align 4
  %16 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %8) #10
  %17 = zext i1 %16 to i32
  %18 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %7, align 8
  %19 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %18) #10
  %20 = zext i1 %19 to i32
  %21 = add i32 %15, %2
  %22 = add i32 %21, %17
  %23 = add i32 %22, %20
  %24 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %0, i64 0, i32 3
  %25 = load i32, i32* %24, align 4
  %26 = and i32 %25, 251658240
  %27 = icmp eq i32 %26, 251658240
  %28 = ptrtoint %"class.v8::internal::compiler::Node"* %0 to i64
  %29 = add i64 %28, 32
  br i1 %27, label %30, label %34

30:                                               ; preds = %13
  %31 = inttoptr i64 %29 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = add i64 %32, 16
  br label %34

34:                                               ; preds = %13, %30
  %35 = phi i64 [ %33, %30 ], [ %29, %13 ]
  %36 = inttoptr i64 %35 to %"class.v8::internal::compiler::Node"**
  %37 = sext i32 %23 to i64
  %38 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %36, i64 %37
  %39 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %38, align 8
  %40 = icmp eq %"class.v8::internal::compiler::Node"* %39, %1
  br i1 %40, label %57, label %41

41:                                               ; preds = %34
  br i1 %27, label %44, label %42

42:                                               ; preds = %41
  %43 = bitcast %"class.v8::internal::compiler::Node"* %0 to %"struct.v8::internal::compiler::Node::Use"*
  br label %47

44:                                               ; preds = %41
  %45 = inttoptr i64 %29 to %"struct.v8::internal::compiler::Node::Use"**
  %46 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %45, align 8
  br label %47

47:                                               ; preds = %44, %42
  %48 = phi %"struct.v8::internal::compiler::Node::Use"* [ %43, %42 ], [ %46, %44 ]
  %49 = xor i32 %23, -1
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %48, i64 %50
  %52 = icmp eq %"class.v8::internal::compiler::Node"* %39, null
  br i1 %52, label %54, label %53

53:                                               ; preds = %47
  tail call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %39, %"struct.v8::internal::compiler::Node::Use"* %51) #10
  br label %54

54:                                               ; preds = %53, %47
  store %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** %38, align 8
  %55 = icmp eq %"class.v8::internal::compiler::Node"* %1, null
  br i1 %55, label %57, label %56

56:                                               ; preds = %54
  tail call void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %1, %"struct.v8::internal::compiler::Node::Use"* %51) #10
  br label %57

57:                                               ; preds = %34, %54, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler14NodeProperties22ReplaceFrameStateInputEPNS1_4NodeES4_(%"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %0, i64 0, i32 0
  %4 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %3, align 8
  %5 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %4) #10
  br i1 %5, label %7, label %6, !prof !2

6:                                                ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.8, i64 0, i64 0)) #11
  unreachable

7:                                                ; preds = %2
  %8 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %3, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %8, i64 0, i32 5
  %10 = load i32, i32* %9, align 4
  %11 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %8) #10
  %12 = zext i1 %11 to i32
  %13 = add nsw i32 %10, %12
  %14 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %0, i64 0, i32 3
  %15 = load i32, i32* %14, align 4
  %16 = and i32 %15, 251658240
  %17 = icmp eq i32 %16, 251658240
  %18 = ptrtoint %"class.v8::internal::compiler::Node"* %0 to i64
  %19 = add i64 %18, 32
  br i1 %17, label %20, label %24

20:                                               ; preds = %7
  %21 = inttoptr i64 %19 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, 16
  br label %24

24:                                               ; preds = %7, %20
  %25 = phi i64 [ %23, %20 ], [ %19, %7 ]
  %26 = inttoptr i64 %25 to %"class.v8::internal::compiler::Node"**
  %27 = sext i32 %13 to i64
  %28 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %26, i64 %27
  %29 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %28, align 8
  %30 = icmp eq %"class.v8::internal::compiler::Node"* %29, %1
  br i1 %30, label %47, label %31

31:                                               ; preds = %24
  br i1 %17, label %34, label %32

32:                                               ; preds = %31
  %33 = bitcast %"class.v8::internal::compiler::Node"* %0 to %"struct.v8::internal::compiler::Node::Use"*
  br label %37

34:                                               ; preds = %31
  %35 = inttoptr i64 %19 to %"struct.v8::internal::compiler::Node::Use"**
  %36 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %35, align 8
  br label %37

37:                                               ; preds = %34, %32
  %38 = phi %"struct.v8::internal::compiler::Node::Use"* [ %33, %32 ], [ %36, %34 ]
  %39 = xor i32 %13, -1
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %38, i64 %40
  %42 = icmp eq %"class.v8::internal::compiler::Node"* %29, null
  br i1 %42, label %44, label %43

43:                                               ; preds = %37
  tail call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %29, %"struct.v8::internal::compiler::Node::Use"* %41) #10
  br label %44

44:                                               ; preds = %43, %37
  store %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** %28, align 8
  %45 = icmp eq %"class.v8::internal::compiler::Node"* %1, null
  br i1 %45, label %47, label %46

46:                                               ; preds = %44
  tail call void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %1, %"struct.v8::internal::compiler::Node::Use"* %41) #10
  br label %47

47:                                               ; preds = %24, %44, %46
  ret void
}

declare zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler14NodeProperties20RemoveNonValueInputsEPNS1_4NodeE(%"class.v8::internal::compiler::Node"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %0, i64 0, i32 0
  %3 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %3, i64 0, i32 5
  %5 = load i32, i32* %4, align 4
  tail call void @_ZN2v88internal8compiler4Node14TrimInputCountEi(%"class.v8::internal::compiler::Node"* %0, i32 %5) #10
  ret void
}

declare void @_ZN2v88internal8compiler4Node14TrimInputCountEi(%"class.v8::internal::compiler::Node"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler14NodeProperties17RemoveValueInputsEPNS1_4NodeE(%"class.v8::internal::compiler::Node"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %0, i64 0, i32 0
  %3 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %3, i64 0, i32 5
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %12

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %9, %7 ], [ %5, %1 ]
  %9 = add nsw i32 %8, -1
  %10 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler4Node11RemoveInputEi(%"class.v8::internal::compiler::Node"* %0, i32 %9) #10
  %11 = icmp sgt i32 %9, 0
  br i1 %11, label %7, label %12

12:                                               ; preds = %7, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler14NodeProperties17MergeControlToEndEPNS1_5GraphEPNS1_21CommonOperatorBuilderEPNS1_4NodeE(%"class.v8::internal::compiler::Graph"* nocapture readonly, %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %0, i64 0, i32 2
  %5 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %0, i64 0, i32 0
  %7 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %6, align 8
  tail call void @_ZN2v88internal8compiler4Node11AppendInputEPNS0_4ZoneEPS2_(%"class.v8::internal::compiler::Node"* %5, %"class.v8::internal::Zone"* %7, %"class.v8::internal::compiler::Node"* %2) #10
  %8 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %4, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %8, i64 0, i32 3
  %10 = load i32, i32* %9, align 4
  %11 = and i32 %10, 251658240
  %12 = icmp eq i32 %11, 251658240
  br i1 %12, label %16, label %13

13:                                               ; preds = %3
  %14 = lshr i32 %10, 24
  %15 = and i32 %14, 15
  br label %23

16:                                               ; preds = %3
  %17 = ptrtoint %"class.v8::internal::compiler::Node"* %8 to i64
  %18 = add i64 %17, 32
  %19 = inttoptr i64 %18 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %20 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %19, align 8
  %21 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %20, i64 0, i32 1
  %22 = load i32, i32* %21, align 8
  br label %23

23:                                               ; preds = %13, %16
  %24 = phi i32 [ %15, %13 ], [ %22, %16 ]
  %25 = sext i32 %24 to i64
  %26 = tail call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder3EndEm(%"class.v8::internal::compiler::CommonOperatorBuilder"* %1, i64 %25) #10
  %27 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %8, i64 0, i32 0
  store %"class.v8::internal::compiler::Operator"* %26, %"class.v8::internal::compiler::Operator"** %27, align 8
  ret void
}

declare void @_ZN2v88internal8compiler4Node11AppendInputEPNS0_4ZoneEPS2_(%"class.v8::internal::compiler::Node"*, %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #4

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder3EndEm(%"class.v8::internal::compiler::CommonOperatorBuilder"*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler14NodeProperties20RemoveControlFromEndEPNS1_5GraphEPNS1_21CommonOperatorBuilderEPNS1_4NodeE(%"class.v8::internal::compiler::Graph"* nocapture readonly, %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::Node"* readnone) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %0, i64 0, i32 2
  %5 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %5, i64 0, i32 0
  %7 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %7, i64 0, i32 7
  %9 = load i32, i32* %8, align 4
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %17, label %57

11:                                               ; preds = %46
  %12 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %35, i64 0, i32 0
  %13 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %13, i64 0, i32 7
  %15 = load i32, i32* %14, align 4
  %16 = icmp slt i32 %53, %15
  br i1 %16, label %17, label %54

17:                                               ; preds = %3, %11
  %18 = phi %"class.v8::internal::compiler::Operator"* [ %13, %11 ], [ %7, %3 ]
  %19 = phi %"class.v8::internal::compiler::Operator"** [ %12, %11 ], [ %6, %3 ]
  %20 = phi i32 [ %53, %11 ], [ 0, %3 ]
  %21 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %18, i64 0, i32 5
  %22 = load i32, i32* %21, align 4
  %23 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %18) #10
  %24 = zext i1 %23 to i32
  %25 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %19, align 8
  %26 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %25) #10
  %27 = zext i1 %26 to i32
  %28 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %19, align 8
  %29 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %28, i64 0, i32 6
  %30 = load i32, i32* %29, align 8
  %31 = add i32 %22, %20
  %32 = add i32 %31, %24
  %33 = add i32 %32, %27
  %34 = add i32 %33, %30
  %35 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %4, align 8
  %36 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %35, i64 0, i32 3
  %37 = load i32, i32* %36, align 4
  %38 = and i32 %37, 251658240
  %39 = icmp eq i32 %38, 251658240
  %40 = ptrtoint %"class.v8::internal::compiler::Node"* %35 to i64
  %41 = add i64 %40, 32
  br i1 %39, label %42, label %46

42:                                               ; preds = %17
  %43 = inttoptr i64 %41 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = add i64 %44, 16
  br label %46

46:                                               ; preds = %17, %42
  %47 = phi i64 [ %45, %42 ], [ %41, %17 ]
  %48 = inttoptr i64 %47 to %"class.v8::internal::compiler::Node"**
  %49 = sext i32 %34 to i64
  %50 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %48, i64 %49
  %51 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %50, align 8
  %52 = icmp eq %"class.v8::internal::compiler::Node"* %51, %2
  %53 = add nuw nsw i32 %20, 1
  br i1 %52, label %54, label %11

54:                                               ; preds = %11, %46
  %55 = phi i32 [ %34, %46 ], [ -1, %11 ]
  %56 = icmp eq i32 %55, -1
  br i1 %56, label %57, label %58, !prof !3

57:                                               ; preds = %3, %54
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.9, i64 0, i64 0)) #11
  unreachable

58:                                               ; preds = %54
  %59 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler4Node11RemoveInputEi(%"class.v8::internal::compiler::Node"* %35, i32 %55) #10
  %60 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %4, align 8
  %61 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %60, i64 0, i32 3
  %62 = load i32, i32* %61, align 4
  %63 = and i32 %62, 251658240
  %64 = icmp eq i32 %63, 251658240
  br i1 %64, label %68, label %65

65:                                               ; preds = %58
  %66 = lshr i32 %62, 24
  %67 = and i32 %66, 15
  br label %75

68:                                               ; preds = %58
  %69 = ptrtoint %"class.v8::internal::compiler::Node"* %60 to i64
  %70 = add i64 %69, 32
  %71 = inttoptr i64 %70 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %72 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %71, align 8
  %73 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %72, i64 0, i32 1
  %74 = load i32, i32* %73, align 8
  br label %75

75:                                               ; preds = %65, %68
  %76 = phi i32 [ %67, %65 ], [ %74, %68 ]
  %77 = sext i32 %76 to i64
  %78 = tail call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder3EndEm(%"class.v8::internal::compiler::CommonOperatorBuilder"* %1, i64 %77) #10
  %79 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %60, i64 0, i32 0
  store %"class.v8::internal::compiler::Operator"* %78, %"class.v8::internal::compiler::Operator"** %79, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler14NodeProperties11ReplaceUsesEPNS1_4NodeES4_S4_S4_S4_(%"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #2 align 2 {
  %6 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %0, i64 0, i32 4
  %7 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %6, align 8
  %8 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %5
  %10 = icmp eq %"class.v8::internal::compiler::Node"* %3, null
  %11 = icmp eq %"class.v8::internal::compiler::Node"* %4, null
  %12 = icmp eq %"class.v8::internal::compiler::Node"* %2, null
  %13 = icmp eq %"class.v8::internal::compiler::Node"* %1, null
  br label %15

14:                                               ; preds = %167, %5
  ret void

15:                                               ; preds = %167, %9
  %16 = phi %"struct.v8::internal::compiler::Node::Use"* [ %7, %9 ], [ %18, %167 ]
  %17 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %16, i64 0, i32 0
  %18 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %17, align 8
  %19 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %16, i64 0, i32 2
  %20 = load i32, i32* %19, align 8
  %21 = lshr i32 %20, 1
  %22 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %16, i64 1
  %23 = zext i32 %21 to i64
  %24 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %22, i64 %23
  %25 = and i32 %20, 1
  %26 = icmp eq i32 %25, 0
  %27 = ptrtoint %"struct.v8::internal::compiler::Node::Use"* %24 to i64
  %28 = select i1 %26, i64 16, i64 32
  %29 = add i64 %28, %27
  %30 = inttoptr i64 %29 to %"class.v8::internal::compiler::Node"**
  %31 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %30, i64 %23
  br i1 %26, label %34, label %32

32:                                               ; preds = %15
  %33 = bitcast %"struct.v8::internal::compiler::Node::Use"* %24 to %"class.v8::internal::compiler::Node"*
  br label %37

34:                                               ; preds = %15
  %35 = bitcast %"struct.v8::internal::compiler::Node::Use"* %24 to %"class.v8::internal::compiler::Node"**
  %36 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %35, align 8
  br label %37

37:                                               ; preds = %34, %32
  %38 = phi %"class.v8::internal::compiler::Node"* [ %33, %32 ], [ %36, %34 ]
  %39 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %38, i64 0, i32 0
  %40 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %39, align 8
  %41 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %40, i64 0, i32 5
  %42 = load i32, i32* %41, align 4
  %43 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %40) #10
  %44 = zext i1 %43 to i32
  %45 = add nsw i32 %42, %44
  %46 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %39, align 8
  %47 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %46) #10
  %48 = zext i1 %47 to i32
  %49 = add nsw i32 %45, %48
  %50 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %39, align 8
  %51 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %50, i64 0, i32 6
  %52 = load i32, i32* %51, align 8
  %53 = add nsw i32 %49, %52
  %54 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %50, i64 0, i32 7
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, 0
  %57 = load i32, i32* %19, align 8
  %58 = lshr i32 %57, 1
  br i1 %56, label %117, label %59

59:                                               ; preds = %37
  %60 = icmp sge i32 %58, %53
  %61 = add nsw i32 %55, %53
  %62 = icmp slt i32 %58, %61
  %63 = and i1 %62, %60
  br i1 %63, label %64, label %117

64:                                               ; preds = %59
  %65 = zext i32 %58 to i64
  %66 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %22, i64 %65
  %67 = and i32 %57, 1
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %71, label %69

69:                                               ; preds = %64
  %70 = bitcast %"struct.v8::internal::compiler::Node::Use"* %66 to %"class.v8::internal::compiler::Node"*
  br label %74

71:                                               ; preds = %64
  %72 = bitcast %"struct.v8::internal::compiler::Node::Use"* %66 to %"class.v8::internal::compiler::Node"**
  %73 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %72, align 8
  br label %74

74:                                               ; preds = %69, %71
  %75 = phi %"class.v8::internal::compiler::Node"* [ %70, %69 ], [ %73, %71 ]
  %76 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %75, i64 0, i32 0
  %77 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %76, align 8
  %78 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %77, i64 0, i32 2
  %79 = load i16, i16* %78, align 8
  %80 = icmp eq i16 %79, 6
  br i1 %80, label %81, label %89

81:                                               ; preds = %74
  %82 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %31, align 8
  %83 = icmp eq %"class.v8::internal::compiler::Node"* %82, %3
  br i1 %83, label %167, label %84

84:                                               ; preds = %81
  %85 = icmp eq %"class.v8::internal::compiler::Node"* %82, null
  br i1 %85, label %87, label %86

86:                                               ; preds = %84
  tail call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %82, %"struct.v8::internal::compiler::Node::Use"* nonnull %16) #10
  br label %87

87:                                               ; preds = %86, %84
  store %"class.v8::internal::compiler::Node"* %3, %"class.v8::internal::compiler::Node"** %31, align 8
  br i1 %10, label %167, label %88

88:                                               ; preds = %87
  tail call void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %3, %"struct.v8::internal::compiler::Node::Use"* nonnull %16) #10
  br label %167

89:                                               ; preds = %74
  br i1 %68, label %92, label %90

90:                                               ; preds = %89
  %91 = bitcast %"struct.v8::internal::compiler::Node::Use"* %66 to %"class.v8::internal::compiler::Node"*
  br label %95

92:                                               ; preds = %89
  %93 = bitcast %"struct.v8::internal::compiler::Node::Use"* %66 to %"class.v8::internal::compiler::Node"**
  %94 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %93, align 8
  br label %95

95:                                               ; preds = %90, %92
  %96 = phi %"class.v8::internal::compiler::Node"* [ %91, %90 ], [ %94, %92 ]
  %97 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %96, i64 0, i32 0
  %98 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %97, align 8
  %99 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %98, i64 0, i32 2
  %100 = load i16, i16* %99, align 8
  %101 = icmp eq i16 %100, 7
  %102 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %31, align 8
  br i1 %101, label %103, label %110

103:                                              ; preds = %95
  %104 = icmp eq %"class.v8::internal::compiler::Node"* %102, %4
  br i1 %104, label %167, label %105

105:                                              ; preds = %103
  %106 = icmp eq %"class.v8::internal::compiler::Node"* %102, null
  br i1 %106, label %108, label %107

107:                                              ; preds = %105
  tail call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %102, %"struct.v8::internal::compiler::Node::Use"* nonnull %16) #10
  br label %108

108:                                              ; preds = %107, %105
  store %"class.v8::internal::compiler::Node"* %4, %"class.v8::internal::compiler::Node"** %31, align 8
  br i1 %11, label %167, label %109

109:                                              ; preds = %108
  tail call void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %4, %"struct.v8::internal::compiler::Node::Use"* nonnull %16) #10
  br label %167

110:                                              ; preds = %95
  %111 = icmp eq %"class.v8::internal::compiler::Node"* %102, %3
  br i1 %111, label %167, label %112

112:                                              ; preds = %110
  %113 = icmp eq %"class.v8::internal::compiler::Node"* %102, null
  br i1 %113, label %115, label %114

114:                                              ; preds = %112
  tail call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %102, %"struct.v8::internal::compiler::Node::Use"* nonnull %16) #10
  br label %115

115:                                              ; preds = %114, %112
  store %"class.v8::internal::compiler::Node"* %3, %"class.v8::internal::compiler::Node"** %31, align 8
  br i1 %10, label %167, label %116

116:                                              ; preds = %115
  tail call void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %3, %"struct.v8::internal::compiler::Node::Use"* nonnull %16) #10
  br label %167

117:                                              ; preds = %37, %59
  %118 = zext i32 %58 to i64
  %119 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %22, i64 %118
  %120 = and i32 %57, 1
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %124, label %122

122:                                              ; preds = %117
  %123 = bitcast %"struct.v8::internal::compiler::Node::Use"* %119 to %"class.v8::internal::compiler::Node"*
  br label %127

124:                                              ; preds = %117
  %125 = bitcast %"struct.v8::internal::compiler::Node::Use"* %119 to %"class.v8::internal::compiler::Node"**
  %126 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %125, align 8
  br label %127

127:                                              ; preds = %124, %122
  %128 = phi %"class.v8::internal::compiler::Node"* [ %123, %122 ], [ %126, %124 ]
  %129 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %128, i64 0, i32 0
  %130 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %129, align 8
  %131 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %130, i64 0, i32 5
  %132 = load i32, i32* %131, align 4
  %133 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %130) #10
  %134 = zext i1 %133 to i32
  %135 = add nsw i32 %132, %134
  %136 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %129, align 8
  %137 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %136) #10
  %138 = zext i1 %137 to i32
  %139 = add nsw i32 %135, %138
  %140 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %129, align 8
  %141 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %140, i64 0, i32 6
  %142 = load i32, i32* %141, align 8
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %159, label %144

144:                                              ; preds = %127
  %145 = load i32, i32* %19, align 8
  %146 = lshr i32 %145, 1
  %147 = icmp sge i32 %146, %139
  %148 = add nsw i32 %142, %139
  %149 = icmp slt i32 %146, %148
  %150 = and i1 %149, %147
  br i1 %150, label %151, label %159

151:                                              ; preds = %144
  %152 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %31, align 8
  %153 = icmp eq %"class.v8::internal::compiler::Node"* %152, %2
  br i1 %153, label %167, label %154

154:                                              ; preds = %151
  %155 = icmp eq %"class.v8::internal::compiler::Node"* %152, null
  br i1 %155, label %157, label %156

156:                                              ; preds = %154
  tail call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %152, %"struct.v8::internal::compiler::Node::Use"* nonnull %16) #10
  br label %157

157:                                              ; preds = %156, %154
  store %"class.v8::internal::compiler::Node"* %2, %"class.v8::internal::compiler::Node"** %31, align 8
  br i1 %12, label %167, label %158

158:                                              ; preds = %157
  tail call void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %2, %"struct.v8::internal::compiler::Node::Use"* nonnull %16) #10
  br label %167

159:                                              ; preds = %127, %144
  %160 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %31, align 8
  %161 = icmp eq %"class.v8::internal::compiler::Node"* %160, %1
  br i1 %161, label %167, label %162

162:                                              ; preds = %159
  %163 = icmp eq %"class.v8::internal::compiler::Node"* %160, null
  br i1 %163, label %165, label %164

164:                                              ; preds = %162
  tail call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %160, %"struct.v8::internal::compiler::Node::Use"* nonnull %16) #10
  br label %165

165:                                              ; preds = %164, %162
  store %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** %31, align 8
  br i1 %13, label %167, label %166

166:                                              ; preds = %165
  tail call void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %1, %"struct.v8::internal::compiler::Node::Use"* nonnull %16) #10
  br label %167

167:                                              ; preds = %166, %165, %159, %158, %157, %151, %116, %115, %110, %109, %108, %103, %88, %87, %81
  %168 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %18, null
  br i1 %168, label %14, label %15
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal8compiler14NodeProperties8ChangeOpEPNS1_4NodeEPKNS1_8OperatorE(%"class.v8::internal::compiler::Node"* nocapture, %"class.v8::internal::compiler::Operator"*) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %0, i64 0, i32 0
  store %"class.v8::internal::compiler::Operator"* %1, %"class.v8::internal::compiler::Operator"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler14NodeProperties20FindFrameStateBeforeEPNS1_4NodeES4_(%"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"* readnone) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %0, i64 0, i32 0
  %4 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %4, i64 0, i32 6
  %6 = load i32, i32* %5, align 8
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %9, label %8, !prof !2

8:                                                ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.7, i64 0, i64 0)) #11
  unreachable

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %4, i64 0, i32 5
  %11 = load i32, i32* %10, align 4
  %12 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %4) #10
  %13 = zext i1 %12 to i32
  %14 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %3, align 8
  %15 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %14) #10
  %16 = zext i1 %15 to i32
  %17 = add i32 %11, %13
  %18 = add i32 %17, %16
  %19 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %0, i64 0, i32 3
  %20 = load i32, i32* %19, align 4
  %21 = and i32 %20, 251658240
  %22 = icmp eq i32 %21, 251658240
  %23 = ptrtoint %"class.v8::internal::compiler::Node"* %0 to i64
  %24 = add i64 %23, 32
  br i1 %22, label %25, label %29

25:                                               ; preds = %9
  %26 = inttoptr i64 %24 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, 16
  br label %29

29:                                               ; preds = %9, %25
  %30 = phi i64 [ %24, %9 ], [ %28, %25 ]
  br label %31

31:                                               ; preds = %63, %29
  %32 = phi i64 [ %30, %29 ], [ %64, %63 ]
  %33 = phi i32 [ %18, %29 ], [ %56, %63 ]
  %34 = inttoptr i64 %32 to %"class.v8::internal::compiler::Node"**
  %35 = sext i32 %33 to i64
  %36 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %34, i64 %35
  %37 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %36, align 8
  %38 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %37, i64 0, i32 0
  %39 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %38, align 8
  %40 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %39, i64 0, i32 2
  %41 = load i16, i16* %40, align 8
  switch i16 %41, label %42 [
    i16 38, label %69
    i16 62, label %95
    i16 60, label %95
  ]

42:                                               ; preds = %31
  %43 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %39, i64 0, i32 6
  %44 = load i32, i32* %43, align 8
  %45 = icmp sgt i32 %44, 0
  br i1 %45, label %47, label %46, !prof !2

46:                                               ; preds = %42
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.7, i64 0, i64 0)) #11
  unreachable

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %39, i64 0, i32 5
  %49 = load i32, i32* %48, align 4
  %50 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %39) #10
  %51 = zext i1 %50 to i32
  %52 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %38, align 8
  %53 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %52) #10
  %54 = zext i1 %53 to i32
  %55 = add i32 %49, %51
  %56 = add i32 %55, %54
  %57 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %37, i64 0, i32 3
  %58 = load i32, i32* %57, align 4
  %59 = and i32 %58, 251658240
  %60 = icmp eq i32 %59, 251658240
  %61 = ptrtoint %"class.v8::internal::compiler::Node"* %37 to i64
  %62 = add i64 %61, 32
  br i1 %60, label %65, label %63

63:                                               ; preds = %47, %65
  %64 = phi i64 [ %68, %65 ], [ %62, %47 ]
  br label %31

65:                                               ; preds = %47
  %66 = inttoptr i64 %62 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = add i64 %67, 16
  br label %63

69:                                               ; preds = %31
  %70 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %39) #10
  br i1 %70, label %72, label %71, !prof !2

71:                                               ; preds = %69
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.8, i64 0, i64 0)) #11
  unreachable

72:                                               ; preds = %69
  %73 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %38, align 8
  %74 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %73, i64 0, i32 5
  %75 = load i32, i32* %74, align 4
  %76 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %73) #10
  %77 = zext i1 %76 to i32
  %78 = add nsw i32 %75, %77
  %79 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %37, i64 0, i32 3
  %80 = load i32, i32* %79, align 4
  %81 = and i32 %80, 251658240
  %82 = icmp eq i32 %81, 251658240
  %83 = ptrtoint %"class.v8::internal::compiler::Node"* %37 to i64
  %84 = add i64 %83, 32
  br i1 %82, label %85, label %89

85:                                               ; preds = %72
  %86 = inttoptr i64 %84 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = add i64 %87, 16
  br label %89

89:                                               ; preds = %72, %85
  %90 = phi i64 [ %88, %85 ], [ %84, %72 ]
  %91 = inttoptr i64 %90 to %"class.v8::internal::compiler::Node"**
  %92 = sext i32 %78 to i64
  %93 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %91, i64 %92
  %94 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %93, align 8
  br label %95

95:                                               ; preds = %31, %31, %89
  %96 = phi %"class.v8::internal::compiler::Node"* [ %94, %89 ], [ %1, %31 ], [ %1, %31 ]
  ret %"class.v8::internal::compiler::Node"* %96
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler14NodeProperties14FindProjectionEPNS1_4NodeEm(%"class.v8::internal::compiler::Node"*, i64) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %0, i64 0, i32 4
  %4 = bitcast %"struct.v8::internal::compiler::Node::Use"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %37, label %7

7:                                                ; preds = %2, %33
  %8 = phi i64 [ %35, %33 ], [ %5, %2 ]
  %9 = inttoptr i64 %8 to %"struct.v8::internal::compiler::Node::Use"*
  %10 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %9, i64 1
  %11 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %9, i64 0, i32 2
  %12 = load i32, i32* %11, align 8
  %13 = lshr i32 %12, 1
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %10, i64 %14
  %16 = and i32 %12, 1
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %7
  %19 = bitcast %"struct.v8::internal::compiler::Node::Use"* %15 to %"class.v8::internal::compiler::Node"*
  br label %23

20:                                               ; preds = %7
  %21 = bitcast %"struct.v8::internal::compiler::Node::Use"* %15 to %"class.v8::internal::compiler::Node"**
  %22 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %21, align 8
  br label %23

23:                                               ; preds = %18, %20
  %24 = phi %"class.v8::internal::compiler::Node"* [ %19, %18 ], [ %22, %20 ]
  %25 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %24, i64 0, i32 0
  %26 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %25, align 8
  %27 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %26, i64 0, i32 2
  %28 = load i16, i16* %27, align 8
  %29 = icmp eq i16 %28, 55
  br i1 %29, label %30, label %33

30:                                               ; preds = %23
  %31 = tail call i64 @_ZN2v88internal8compiler17ProjectionIndexOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %26) #10
  %32 = icmp eq i64 %31, %1
  br i1 %32, label %37, label %33

33:                                               ; preds = %23, %30
  %34 = inttoptr i64 %8 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %37, label %7

37:                                               ; preds = %30, %33, %2
  %38 = phi %"class.v8::internal::compiler::Node"* [ null, %2 ], [ null, %33 ], [ %24, %30 ]
  ret %"class.v8::internal::compiler::Node"* %38
}

declare i64 @_ZN2v88internal8compiler17ProjectionIndexOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler14NodeProperties23CollectValueProjectionsEPNS1_4NodeEPS4_m(%"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** nocapture, i64) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %0, i64 0, i32 4
  %5 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %4, align 8
  %6 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %44, %3
  ret void

8:                                                ; preds = %3, %44
  %9 = phi %"struct.v8::internal::compiler::Node::Use"* [ %11, %44 ], [ %5, %3 ]
  %10 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %9, i64 0, i32 0
  %11 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %10, align 8
  %12 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %9, i64 0, i32 2
  %13 = load i32, i32* %12, align 8
  %14 = lshr i32 %13, 1
  %15 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %9, i64 1
  %16 = zext i32 %14 to i64
  %17 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %15, i64 %16
  %18 = and i32 %13, 1
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %22, label %20

20:                                               ; preds = %8
  %21 = bitcast %"struct.v8::internal::compiler::Node::Use"* %17 to %"class.v8::internal::compiler::Node"*
  br label %25

22:                                               ; preds = %8
  %23 = bitcast %"struct.v8::internal::compiler::Node::Use"* %17 to %"class.v8::internal::compiler::Node"**
  %24 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %23, align 8
  br label %25

25:                                               ; preds = %20, %22
  %26 = phi %"class.v8::internal::compiler::Node"* [ %21, %20 ], [ %24, %22 ]
  %27 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %26, i64 0, i32 0
  %28 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %27, align 8
  %29 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %28, i64 0, i32 5
  %30 = load i32, i32* %29, align 4
  %31 = icmp slt i32 %14, %30
  br i1 %31, label %32, label %44

32:                                               ; preds = %25
  br i1 %19, label %35, label %33

33:                                               ; preds = %32
  %34 = bitcast %"struct.v8::internal::compiler::Node::Use"* %17 to %"class.v8::internal::compiler::Node"*
  br label %38

35:                                               ; preds = %32
  %36 = bitcast %"struct.v8::internal::compiler::Node::Use"* %17 to %"class.v8::internal::compiler::Node"**
  %37 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %36, align 8
  br label %38

38:                                               ; preds = %33, %35
  %39 = phi %"class.v8::internal::compiler::Node"* [ %34, %33 ], [ %37, %35 ]
  %40 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %39, i64 0, i32 0
  %41 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %40, align 8
  %42 = tail call i64 @_ZN2v88internal8compiler17ProjectionIndexOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %41) #10
  %43 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1, i64 %42
  store %"class.v8::internal::compiler::Node"* %39, %"class.v8::internal::compiler::Node"** %43, align 8
  br label %44

44:                                               ; preds = %25, %38
  %45 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %11, null
  br i1 %45, label %7, label %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler14NodeProperties25CollectControlProjectionsEPNS1_4NodeEPS4_m(%"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** nocapture, i64) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %0, i64 0, i32 4
  %5 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %4, align 8
  %6 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  %8 = add i64 %2, -1
  br label %10

9:                                                ; preds = %80, %3
  ret void

10:                                               ; preds = %80, %7
  %11 = phi i64 [ 0, %7 ], [ %81, %80 ]
  %12 = phi %"struct.v8::internal::compiler::Node::Use"* [ %5, %7 ], [ %14, %80 ]
  %13 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %12, i64 0, i32 0
  %14 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %13, align 8
  %15 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %12, i64 0, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = lshr i32 %16, 1
  %18 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %12, i64 1
  %19 = zext i32 %17 to i64
  %20 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %18, i64 %19
  %21 = and i32 %16, 1
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %10
  %24 = bitcast %"struct.v8::internal::compiler::Node::Use"* %20 to %"class.v8::internal::compiler::Node"*
  br label %28

25:                                               ; preds = %10
  %26 = bitcast %"struct.v8::internal::compiler::Node::Use"* %20 to %"class.v8::internal::compiler::Node"**
  %27 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %26, align 8
  br label %28

28:                                               ; preds = %25, %23
  %29 = phi %"class.v8::internal::compiler::Node"* [ %24, %23 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %29, i64 0, i32 0
  %31 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %30, align 8
  %32 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %31, i64 0, i32 5
  %33 = load i32, i32* %32, align 4
  %34 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %31) #10
  %35 = zext i1 %34 to i32
  %36 = add nsw i32 %33, %35
  %37 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %30, align 8
  %38 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %37) #10
  %39 = zext i1 %38 to i32
  %40 = add nsw i32 %36, %39
  %41 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %30, align 8
  %42 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %41, i64 0, i32 6
  %43 = load i32, i32* %42, align 8
  %44 = add nsw i32 %40, %43
  %45 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %41, i64 0, i32 7
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %80, label %48

48:                                               ; preds = %28
  %49 = load i32, i32* %15, align 8
  %50 = lshr i32 %49, 1
  %51 = icmp sge i32 %50, %44
  %52 = add nsw i32 %46, %44
  %53 = icmp slt i32 %50, %52
  %54 = and i1 %53, %51
  br i1 %54, label %55, label %80

55:                                               ; preds = %48
  %56 = zext i32 %50 to i64
  %57 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %18, i64 %56
  %58 = and i32 %49, 1
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %62, label %60

60:                                               ; preds = %55
  %61 = bitcast %"struct.v8::internal::compiler::Node::Use"* %57 to %"class.v8::internal::compiler::Node"*
  br label %65

62:                                               ; preds = %55
  %63 = bitcast %"struct.v8::internal::compiler::Node::Use"* %57 to %"class.v8::internal::compiler::Node"**
  %64 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %63, align 8
  br label %65

65:                                               ; preds = %60, %62
  %66 = phi %"class.v8::internal::compiler::Node"* [ %61, %60 ], [ %64, %62 ]
  %67 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %66, i64 0, i32 0
  %68 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %67, align 8
  %69 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %68, i64 0, i32 2
  %70 = load i16, i16* %69, align 8
  switch i16 %70, label %80 [
    i16 4, label %76
    i16 5, label %71
    i16 6, label %76
    i16 7, label %72
    i16 8, label %73
    i16 9, label %75
  ]

71:                                               ; preds = %65
  br label %76

72:                                               ; preds = %65
  br label %76

73:                                               ; preds = %65
  %74 = add i64 %11, 1
  br label %76

75:                                               ; preds = %65
  br label %76

76:                                               ; preds = %65, %65, %75, %73, %72, %71
  %77 = phi i64 [ %11, %75 ], [ %74, %73 ], [ %11, %72 ], [ %11, %71 ], [ %11, %65 ], [ %11, %65 ]
  %78 = phi i64 [ %8, %75 ], [ %11, %73 ], [ 1, %72 ], [ 1, %71 ], [ 0, %65 ], [ 0, %65 ]
  %79 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1, i64 %78
  store %"class.v8::internal::compiler::Node"* %66, %"class.v8::internal::compiler::Node"** %79, align 8
  br label %80

80:                                               ; preds = %28, %76, %65, %48
  %81 = phi i64 [ %11, %48 ], [ %77, %76 ], [ %11, %65 ], [ %11, %28 ]
  %82 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %14, null
  br i1 %82, label %9, label %10
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal8compiler14NodeProperties6IsSameEPNS1_4NodeES4_(%"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %0, i64 0, i32 0
  %4 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %4, i64 0, i32 2
  %6 = load i16, i16* %5, align 8
  %7 = icmp eq i16 %6, 207
  br i1 %7, label %15, label %8

8:                                                ; preds = %33, %2
  %9 = phi %"class.v8::internal::compiler::Node"* [ %0, %2 ], [ %36, %33 ]
  %10 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %11 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %11, i64 0, i32 2
  %13 = load i16, i16* %12, align 8
  %14 = icmp eq i16 %13, 207
  br i1 %14, label %42, label %69

15:                                               ; preds = %2, %33
  %16 = phi %"class.v8::internal::compiler::Operator"* [ %38, %33 ], [ %4, %2 ]
  %17 = phi %"class.v8::internal::compiler::Node"* [ %36, %33 ], [ %0, %2 ]
  %18 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %16, i64 0, i32 5
  %19 = load i32, i32* %18, align 4
  %20 = icmp sgt i32 %19, 0
  br i1 %20, label %22, label %21, !prof !2

21:                                               ; preds = %15
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0)) #11
  unreachable

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %17, i64 0, i32 3
  %24 = load i32, i32* %23, align 4
  %25 = and i32 %24, 251658240
  %26 = icmp eq i32 %25, 251658240
  %27 = ptrtoint %"class.v8::internal::compiler::Node"* %17 to i64
  %28 = add i64 %27, 32
  br i1 %26, label %29, label %33

29:                                               ; preds = %22
  %30 = inttoptr i64 %28 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = add i64 %31, 16
  br label %33

33:                                               ; preds = %22, %29
  %34 = phi i64 [ %32, %29 ], [ %28, %22 ]
  %35 = inttoptr i64 %34 to %"class.v8::internal::compiler::Node"**
  %36 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %35, align 8
  %37 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %36, i64 0, i32 0
  %38 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %37, align 8
  %39 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %38, i64 0, i32 2
  %40 = load i16, i16* %39, align 8
  %41 = icmp eq i16 %40, 207
  br i1 %41, label %15, label %8

42:                                               ; preds = %8, %60
  %43 = phi %"class.v8::internal::compiler::Operator"* [ %65, %60 ], [ %11, %8 ]
  %44 = phi %"class.v8::internal::compiler::Node"* [ %63, %60 ], [ %1, %8 ]
  %45 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %43, i64 0, i32 5
  %46 = load i32, i32* %45, align 4
  %47 = icmp sgt i32 %46, 0
  br i1 %47, label %49, label %48, !prof !2

48:                                               ; preds = %42
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0)) #11
  unreachable

49:                                               ; preds = %42
  %50 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %44, i64 0, i32 3
  %51 = load i32, i32* %50, align 4
  %52 = and i32 %51, 251658240
  %53 = icmp eq i32 %52, 251658240
  %54 = ptrtoint %"class.v8::internal::compiler::Node"* %44 to i64
  %55 = add i64 %54, 32
  br i1 %53, label %56, label %60

56:                                               ; preds = %49
  %57 = inttoptr i64 %55 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = add i64 %58, 16
  br label %60

60:                                               ; preds = %49, %56
  %61 = phi i64 [ %59, %56 ], [ %55, %49 ]
  %62 = inttoptr i64 %61 to %"class.v8::internal::compiler::Node"**
  %63 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %63, i64 0, i32 0
  %65 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %64, align 8
  %66 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %65, i64 0, i32 2
  %67 = load i16, i16* %66, align 8
  %68 = icmp eq i16 %67, 207
  br i1 %68, label %42, label %69

69:                                               ; preds = %60, %8
  %70 = phi %"class.v8::internal::compiler::Node"* [ %1, %8 ], [ %63, %60 ]
  %71 = icmp eq %"class.v8::internal::compiler::Node"* %9, %70
  ret i1 %71
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler14NodeProperties14GetJSCreateMapEPNS1_12JSHeapBrokerEPNS1_4NodeE(%"class.v8::base::Optional.1245"* noalias nocapture sret, %"class.v8::internal::compiler::JSHeapBroker"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.v8::base::Optional.1270", align 8
  %6 = alloca %"class.v8::base::Optional.1270", align 8
  %7 = alloca %"class.v8::base::Optional.1270", align 8
  %8 = alloca <2 x i64>, align 16
  %9 = alloca <2 x i64>, align 16
  %10 = bitcast <2 x i64>* %9 to %"class.v8::internal::compiler::ObjectRef"*
  %11 = alloca %"class.v8::internal::compiler::JSFunctionRef", align 8
  %12 = alloca <2 x i64>, align 16
  %13 = alloca %"class.v8::internal::compiler::MapRef", align 8
  %14 = alloca %"class.v8::internal::StdoutStream", align 8
  %15 = alloca %"class.std::__1::basic_string", align 8
  %16 = alloca %"class.v8::internal::compiler::MapRef", align 8
  %17 = alloca %"class.v8::internal::compiler::ObjectRef", align 8
  %18 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 0
  %19 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %19, i64 0, i32 5
  %21 = load i32, i32* %20, align 4
  %22 = icmp sgt i32 %21, 0
  br i1 %22, label %24, label %23, !prof !2

23:                                               ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0)) #11
  unreachable

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 3
  %26 = load i32, i32* %25, align 4
  %27 = and i32 %26, 251658240
  %28 = icmp eq i32 %27, 251658240
  %29 = ptrtoint %"class.v8::internal::compiler::Node"* %2 to i64
  %30 = add i64 %29, 32
  br i1 %28, label %31, label %35

31:                                               ; preds = %24
  %32 = inttoptr i64 %30 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = add i64 %33, 16
  br label %35

35:                                               ; preds = %24, %31
  %36 = phi i64 [ %34, %31 ], [ %30, %24 ]
  %37 = inttoptr i64 %36 to i64*
  br label %38

38:                                               ; preds = %84, %35
  %39 = phi i64* [ %37, %35 ], [ %85, %84 ]
  %40 = load i64, i64* %39, align 8
  %41 = inttoptr i64 %40 to %"class.v8::internal::compiler::Node"*
  %42 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %41, i64 0, i32 0
  %43 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %42, align 8
  %44 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %43, i64 0, i32 2
  %45 = load i16, i16* %44, align 8
  switch i16 %45, label %86 [
    i16 59, label %46
    i16 58, label %64
  ]

46:                                               ; preds = %38
  %47 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %43, i64 0, i32 5
  %48 = load i32, i32* %47, align 4
  %49 = icmp sgt i32 %48, 0
  br i1 %49, label %51, label %50, !prof !2

50:                                               ; preds = %46
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0)) #11
  unreachable

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %41, i64 0, i32 3
  %53 = load i32, i32* %52, align 4
  %54 = and i32 %53, 251658240
  %55 = icmp eq i32 %54, 251658240
  %56 = add i64 %40, 32
  br i1 %55, label %57, label %61

57:                                               ; preds = %51
  %58 = inttoptr i64 %56 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = add i64 %59, 16
  br label %61

61:                                               ; preds = %57, %51
  %62 = phi i64 [ %60, %57 ], [ %56, %51 ]
  %63 = inttoptr i64 %62 to i64*
  br label %84

64:                                               ; preds = %38
  %65 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %43, i64 0, i32 5
  %66 = load i32, i32* %65, align 4
  %67 = icmp sgt i32 %66, 1
  br i1 %67, label %69, label %68, !prof !2

68:                                               ; preds = %64
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0)) #11
  unreachable

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %41, i64 0, i32 3
  %71 = load i32, i32* %70, align 4
  %72 = and i32 %71, 251658240
  %73 = icmp eq i32 %72, 251658240
  %74 = add i64 %40, 32
  br i1 %73, label %75, label %79

75:                                               ; preds = %69
  %76 = inttoptr i64 %74 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, 16
  br label %79

79:                                               ; preds = %75, %69
  %80 = phi i64 [ %78, %75 ], [ %74, %69 ]
  %81 = inttoptr i64 %80 to %"class.v8::internal::compiler::Node"**
  %82 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %81, i64 1
  %83 = bitcast %"class.v8::internal::compiler::Node"** %82 to i64*
  br label %84

84:                                               ; preds = %79, %61
  %85 = phi i64* [ %83, %79 ], [ %63, %61 ]
  br label %38

86:                                               ; preds = %38
  %87 = icmp eq i16 %45, 30
  br i1 %87, label %88, label %92

88:                                               ; preds = %86
  %89 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %43, i64 1
  %90 = bitcast %"class.v8::internal::compiler::Operator"* %89 to i64**
  %91 = load i64*, i64** %90, align 8
  br label %92

92:                                               ; preds = %86, %88
  %93 = phi i64* [ %91, %88 ], [ null, %86 ]
  %94 = icmp sgt i32 %21, 1
  br i1 %94, label %96, label %95, !prof !2

95:                                               ; preds = %92
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0)) #11
  unreachable

96:                                               ; preds = %92
  br i1 %28, label %97, label %101

97:                                               ; preds = %96
  %98 = inttoptr i64 %30 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = add i64 %99, 16
  br label %101

101:                                              ; preds = %96, %97
  %102 = phi i64 [ %100, %97 ], [ %30, %96 ]
  %103 = inttoptr i64 %102 to %"class.v8::internal::compiler::Node"**
  %104 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %103, i64 1
  %105 = bitcast %"class.v8::internal::compiler::Node"** %104 to i64*
  br label %106

106:                                              ; preds = %152, %101
  %107 = phi i64* [ %105, %101 ], [ %153, %152 ]
  %108 = load i64, i64* %107, align 8
  %109 = inttoptr i64 %108 to %"class.v8::internal::compiler::Node"*
  %110 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %109, i64 0, i32 0
  %111 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %110, align 8
  %112 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %111, i64 0, i32 2
  %113 = load i16, i16* %112, align 8
  switch i16 %113, label %154 [
    i16 59, label %114
    i16 58, label %132
  ]

114:                                              ; preds = %106
  %115 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %111, i64 0, i32 5
  %116 = load i32, i32* %115, align 4
  %117 = icmp sgt i32 %116, 0
  br i1 %117, label %119, label %118, !prof !2

118:                                              ; preds = %114
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0)) #11
  unreachable

119:                                              ; preds = %114
  %120 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %109, i64 0, i32 3
  %121 = load i32, i32* %120, align 4
  %122 = and i32 %121, 251658240
  %123 = icmp eq i32 %122, 251658240
  %124 = add i64 %108, 32
  br i1 %123, label %125, label %129

125:                                              ; preds = %119
  %126 = inttoptr i64 %124 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = add i64 %127, 16
  br label %129

129:                                              ; preds = %125, %119
  %130 = phi i64 [ %128, %125 ], [ %124, %119 ]
  %131 = inttoptr i64 %130 to i64*
  br label %152

132:                                              ; preds = %106
  %133 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %111, i64 0, i32 5
  %134 = load i32, i32* %133, align 4
  %135 = icmp sgt i32 %134, 1
  br i1 %135, label %137, label %136, !prof !2

136:                                              ; preds = %132
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0)) #11
  unreachable

137:                                              ; preds = %132
  %138 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %109, i64 0, i32 3
  %139 = load i32, i32* %138, align 4
  %140 = and i32 %139, 251658240
  %141 = icmp eq i32 %140, 251658240
  %142 = add i64 %108, 32
  br i1 %141, label %143, label %147

143:                                              ; preds = %137
  %144 = inttoptr i64 %142 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = add i64 %145, 16
  br label %147

147:                                              ; preds = %143, %137
  %148 = phi i64 [ %146, %143 ], [ %142, %137 ]
  %149 = inttoptr i64 %148 to %"class.v8::internal::compiler::Node"**
  %150 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %149, i64 1
  %151 = bitcast %"class.v8::internal::compiler::Node"** %150 to i64*
  br label %152

152:                                              ; preds = %147, %129
  %153 = phi i64* [ %151, %147 ], [ %131, %129 ]
  br label %106

154:                                              ; preds = %106
  %155 = icmp eq i16 %113, 30
  br i1 %155, label %156, label %160

156:                                              ; preds = %154
  %157 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %111, i64 1
  %158 = bitcast %"class.v8::internal::compiler::Operator"* %157 to i64**
  %159 = load i64*, i64** %158, align 8
  br label %160

160:                                              ; preds = %154, %156
  %161 = phi i64* [ %159, %156 ], [ null, %154 ]
  %162 = bitcast <2 x i64>* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %162) #10
  %163 = and i1 %87, %155
  br i1 %163, label %164, label %302

164:                                              ; preds = %160
  %165 = getelementptr inbounds %"class.v8::base::Optional.1270", %"class.v8::base::Optional.1270"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %165) #10
  call void @_ZN2v88internal8compiler10TryMakeRefINS0_10HeapObjectEvEENS_4base8OptionalINS1_10ref_traitsIT_E8ref_typeEEEPNS1_12JSHeapBrokerENS0_6HandleIS7_EENS4_5FlagsINS1_19GetOrCreateDataFlagEiEE(%"class.v8::base::Optional.1270"* nonnull sret %7, %"class.v8::internal::compiler::JSHeapBroker"* %1, i64* %161, i32 3) #10
  %166 = load i8, i8* %165, align 8, !range !4
  %167 = icmp eq i8 %166, 1
  br i1 %167, label %169, label %168, !prof !2

168:                                              ; preds = %164
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.16, i64 0, i64 0)) #11
  unreachable

169:                                              ; preds = %164
  %170 = getelementptr inbounds %"class.v8::base::Optional.1270", %"class.v8::base::Optional.1270"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %171 = bitcast %"class.v8::internal::compiler::ObjectData"** %170 to <2 x i64>*
  %172 = load <2 x i64>, <2 x i64>* %171, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %165) #10
  store <2 x i64> %172, <2 x i64>* %8, align 16
  %173 = bitcast <2 x i64>* %8 to %"class.v8::internal::compiler::ObjectRef"*
  %174 = call zeroext i1 @_ZNK2v88internal8compiler9ObjectRef12IsJSFunctionEv(%"class.v8::internal::compiler::ObjectRef"* nonnull %173) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %162) #10
  br i1 %174, label %175, label %304

175:                                              ; preds = %169
  %176 = bitcast <2 x i64>* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %176) #10
  %177 = getelementptr inbounds %"class.v8::base::Optional.1270", %"class.v8::base::Optional.1270"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %177) #10
  call void @_ZN2v88internal8compiler10TryMakeRefINS0_10HeapObjectEvEENS_4base8OptionalINS1_10ref_traitsIT_E8ref_typeEEEPNS1_12JSHeapBrokerENS0_6HandleIS7_EENS4_5FlagsINS1_19GetOrCreateDataFlagEiEE(%"class.v8::base::Optional.1270"* nonnull sret %6, %"class.v8::internal::compiler::JSHeapBroker"* %1, i64* %93, i32 3) #10
  %178 = load i8, i8* %177, align 8, !range !4
  %179 = icmp eq i8 %178, 1
  br i1 %179, label %181, label %180, !prof !2

180:                                              ; preds = %175
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.16, i64 0, i64 0)) #11
  unreachable

181:                                              ; preds = %175
  %182 = getelementptr inbounds %"class.v8::base::Optional.1270", %"class.v8::base::Optional.1270"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %183 = bitcast %"class.v8::internal::compiler::ObjectData"** %182 to <2 x i64>*
  %184 = load <2 x i64>, <2 x i64>* %183, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %177) #10
  store <2 x i64> %184, <2 x i64>* %9, align 16
  %185 = bitcast %"class.v8::internal::compiler::JSFunctionRef"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %185) #10
  %186 = bitcast <2 x i64>* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %186) #10
  %187 = getelementptr inbounds %"class.v8::base::Optional.1270", %"class.v8::base::Optional.1270"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %187) #10
  call void @_ZN2v88internal8compiler10TryMakeRefINS0_10HeapObjectEvEENS_4base8OptionalINS1_10ref_traitsIT_E8ref_typeEEEPNS1_12JSHeapBrokerENS0_6HandleIS7_EENS4_5FlagsINS1_19GetOrCreateDataFlagEiEE(%"class.v8::base::Optional.1270"* nonnull sret %5, %"class.v8::internal::compiler::JSHeapBroker"* %1, i64* %161, i32 3) #10
  %188 = load i8, i8* %187, align 8, !range !4
  %189 = icmp eq i8 %188, 1
  br i1 %189, label %191, label %190, !prof !2

190:                                              ; preds = %181
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.16, i64 0, i64 0)) #11
  unreachable

191:                                              ; preds = %181
  %192 = getelementptr inbounds %"class.v8::base::Optional.1270", %"class.v8::base::Optional.1270"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %193 = bitcast %"class.v8::internal::compiler::ObjectData"** %192 to <2 x i64>*
  %194 = load <2 x i64>, <2 x i64>* %193, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %187) #10
  store <2 x i64> %194, <2 x i64>* %12, align 16
  %195 = bitcast <2 x i64>* %12 to %"class.v8::internal::compiler::ObjectRef"*
  %196 = call { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } @_ZNK2v88internal8compiler9ObjectRef12AsJSFunctionEv(%"class.v8::internal::compiler::ObjectRef"* nonnull %195) #10
  %197 = getelementptr inbounds %"class.v8::internal::compiler::JSFunctionRef", %"class.v8::internal::compiler::JSFunctionRef"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %198 = extractvalue { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } %196, 0
  store %"class.v8::internal::compiler::ObjectData"* %198, %"class.v8::internal::compiler::ObjectData"** %197, align 8
  %199 = getelementptr inbounds %"class.v8::internal::compiler::JSFunctionRef", %"class.v8::internal::compiler::JSFunctionRef"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %200 = extractvalue { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } %196, 1
  store %"class.v8::internal::compiler::JSHeapBroker"* %200, %"class.v8::internal::compiler::JSHeapBroker"** %199, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %186) #10
  %201 = bitcast %"class.v8::internal::compiler::MapRef"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %201) #10
  %202 = getelementptr inbounds %"class.v8::internal::compiler::JSFunctionRef", %"class.v8::internal::compiler::JSFunctionRef"* %11, i64 0, i32 0, i32 0, i32 0
  %203 = call { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } @_ZNK2v88internal8compiler13HeapObjectRef3mapEv(%"class.v8::internal::compiler::HeapObjectRef"* nonnull %202) #10
  %204 = getelementptr inbounds %"class.v8::internal::compiler::MapRef", %"class.v8::internal::compiler::MapRef"* %13, i64 0, i32 0, i32 0, i32 0
  %205 = extractvalue { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } %203, 0
  store %"class.v8::internal::compiler::ObjectData"* %205, %"class.v8::internal::compiler::ObjectData"** %204, align 8
  %206 = getelementptr inbounds %"class.v8::internal::compiler::MapRef", %"class.v8::internal::compiler::MapRef"* %13, i64 0, i32 0, i32 0, i32 1
  %207 = extractvalue { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } %203, 1
  store %"class.v8::internal::compiler::JSHeapBroker"* %207, %"class.v8::internal::compiler::JSHeapBroker"** %206, align 8
  %208 = call zeroext i1 @_ZNK2v88internal8compiler6MapRef18has_prototype_slotEv(%"class.v8::internal::compiler::MapRef"* nonnull %13) #10
  br i1 %208, label %209, label %298

209:                                              ; preds = %191
  %210 = call zeroext i1 @_ZNK2v88internal8compiler13JSFunctionRef15has_initial_mapEv(%"class.v8::internal::compiler::JSFunctionRef"* nonnull %11) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %201) #10
  br i1 %210, label %211, label %300

211:                                              ; preds = %209
  %212 = call zeroext i1 @_ZNK2v88internal8compiler13JSFunctionRef10serializedEv(%"class.v8::internal::compiler::JSFunctionRef"* nonnull %11) #10
  br i1 %212, label %280, label %213

213:                                              ; preds = %211
  %214 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %1, i64 0, i32 7
  %215 = load i8, i8* %214, align 4, !range !4
  %216 = icmp eq i8 %215, 0
  br i1 %216, label %276, label %217

217:                                              ; preds = %213
  %218 = bitcast %"class.v8::internal::StdoutStream"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 240, i8* nonnull %218) #10
  %219 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %14, i64 0, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVNSt3__19basic_iosIcNS_11char_traitsIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %219, align 8
  %220 = bitcast %"class.v8::internal::StdoutStream"* %14 to %"class.v8::internal::OFStream"*
  %221 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal8OFStreamC2EP8_IO_FILE(%"class.v8::internal::OFStream"* nonnull %220, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 1), %struct._IO_FILE* %221) #10
  %222 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %14, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %222, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %219, align 8
  %223 = call %"class.v8::base::RecursiveMutex"* @_ZN2v88internal12StdoutStream14GetStdoutMutexEv() #10
  %224 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %14, i64 0, i32 1, i32 0
  store %"class.v8::base::RecursiveMutex"* %223, %"class.v8::base::RecursiveMutex"** %224, align 8
  call void @_ZN2v84base14RecursiveMutex4LockEv(%"class.v8::base::RecursiveMutex"* %223) #10
  %225 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %225) #10
  call void @_ZNK2v88internal8compiler12JSHeapBroker5TraceEv(%"class.std::__1::basic_string"* nonnull sret %15, %"class.v8::internal::compiler::JSHeapBroker"* %1) #10
  %226 = bitcast %"class.v8::internal::StdoutStream"* %14 to %"class.std::__1::basic_ostream"*
  %227 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %228 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %227, i64 0, i32 1, i32 0
  %229 = load i8, i8* %228, align 1
  %230 = icmp slt i8 %229, 0
  %231 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %232 = load i8*, i8** %231, align 8
  %233 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %234 = load i64, i64* %233, align 8
  %235 = zext i8 %229 to i64
  %236 = select i1 %230, i8* %232, i8* %225
  %237 = select i1 %230, i64 %234, i64 %235
  %238 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %226, i8* %236, i64 %237) #10
  %239 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %226, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i64 0, i64 0), i64 8) #10
  %240 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %226, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i64 0, i64 0), i64 15) #10
  %241 = getelementptr inbounds %"class.v8::internal::compiler::JSFunctionRef", %"class.v8::internal::compiler::JSFunctionRef"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %242 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEERKNS1_9ObjectRefE(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %226, %"class.v8::internal::compiler::ObjectRef"* nonnull dereferenceable(16) %241) #10
  %243 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %226, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0), i64 2) #10
  %244 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %226, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.13, i64 0, i64 0), i64 40) #10
  %245 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %226, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0), i64 1) #10
  %246 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* nonnull %226, i32 337) #10
  %247 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %226, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0), i64 1) #10
  %248 = bitcast %"class.v8::internal::StdoutStream"* %14 to i8**
  %249 = load i8*, i8** %248, align 8
  %250 = getelementptr i8, i8* %249, i64 -24
  %251 = bitcast i8* %250 to i64*
  %252 = load i64, i64* %251, align 8
  %253 = getelementptr inbounds i8, i8* %218, i64 %252
  %254 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %254) #10
  %255 = bitcast i8* %253 to %"class.std::__1::ios_base"*
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %255) #10
  %256 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #10
  %257 = bitcast %"class.std::__1::locale::facet"* %256 to %"class.std::__1::ctype"*
  %258 = bitcast %"class.std::__1::locale::facet"* %256 to i8 (%"class.std::__1::ctype"*, i8)***
  %259 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %258, align 8
  %260 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %259, i64 7
  %261 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %260, align 8
  %262 = call signext i8 %261(%"class.std::__1::ctype"* %257, i8 signext 10) #10
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %254) #10
  %263 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(%"class.std::__1::basic_ostream"* nonnull %226, i8 signext %262) #10
  %264 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(%"class.std::__1::basic_ostream"* nonnull %226) #10
  %265 = load i8, i8* %228, align 1
  %266 = icmp slt i8 %265, 0
  br i1 %266, label %267, label %269

267:                                              ; preds = %217
  %268 = load i8*, i8** %231, align 8
  call void @_ZdlPv(i8* %268) #12
  br label %269

269:                                              ; preds = %217, %267
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %225) #10
  %270 = bitcast %"class.v8::internal::StdoutStream"* %14 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %270, align 8
  %271 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %14, i64 0, i32 2
  %272 = bitcast %"class.std::__1::basic_ios.base"* %271 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %272, align 8
  %273 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %224, align 8
  call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %273) #10
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %270, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %272, align 8
  %274 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %14, i64 0, i32 0, i32 1, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %274) #10
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* nonnull %226, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #10
  %275 = bitcast %"class.std::__1::basic_ios.base"* %271 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %275) #10
  call void @llvm.lifetime.end.p0i8(i64 240, i8* nonnull %218) #10
  br label %276

276:                                              ; preds = %213, %269
  %277 = getelementptr inbounds %"class.v8::base::Optional.1245", %"class.v8::base::Optional.1245"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %277, align 8
  %278 = getelementptr inbounds %"class.v8::base::Optional.1245", %"class.v8::base::Optional.1245"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %279 = bitcast %union.anon.1249* %278 to i8*
  store i8 0, i8* %279, align 8
  br label %301

280:                                              ; preds = %211
  %281 = bitcast %"class.v8::internal::compiler::MapRef"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %281) #10
  %282 = call { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } @_ZNK2v88internal8compiler13JSFunctionRef11initial_mapEv(%"class.v8::internal::compiler::JSFunctionRef"* nonnull %11) #10
  %283 = getelementptr inbounds %"class.v8::internal::compiler::MapRef", %"class.v8::internal::compiler::MapRef"* %16, i64 0, i32 0, i32 0, i32 0
  %284 = extractvalue { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } %282, 0
  store %"class.v8::internal::compiler::ObjectData"* %284, %"class.v8::internal::compiler::ObjectData"** %283, align 8
  %285 = getelementptr inbounds %"class.v8::internal::compiler::MapRef", %"class.v8::internal::compiler::MapRef"* %16, i64 0, i32 0, i32 0, i32 1
  %286 = extractvalue { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } %282, 1
  store %"class.v8::internal::compiler::JSHeapBroker"* %286, %"class.v8::internal::compiler::JSHeapBroker"** %285, align 8
  %287 = bitcast %"class.v8::internal::compiler::ObjectRef"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %287) #10
  %288 = call { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } @_ZNK2v88internal8compiler6MapRef14GetConstructorEv(%"class.v8::internal::compiler::MapRef"* nonnull %16) #10
  %289 = getelementptr inbounds %"class.v8::internal::compiler::ObjectRef", %"class.v8::internal::compiler::ObjectRef"* %17, i64 0, i32 0
  %290 = extractvalue { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } %288, 0
  store %"class.v8::internal::compiler::ObjectData"* %290, %"class.v8::internal::compiler::ObjectData"** %289, align 8
  %291 = getelementptr inbounds %"class.v8::internal::compiler::ObjectRef", %"class.v8::internal::compiler::ObjectRef"* %17, i64 0, i32 1
  %292 = extractvalue { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } %288, 1
  store %"class.v8::internal::compiler::JSHeapBroker"* %292, %"class.v8::internal::compiler::JSHeapBroker"** %291, align 8
  %293 = call zeroext i1 @_ZNK2v88internal8compiler9ObjectRef6equalsERKS2_(%"class.v8::internal::compiler::ObjectRef"* nonnull %17, %"class.v8::internal::compiler::ObjectRef"* nonnull dereferenceable(16) %10) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %287) #10
  br i1 %293, label %294, label %298

294:                                              ; preds = %280
  %295 = getelementptr inbounds %"class.v8::base::Optional.1245", %"class.v8::base::Optional.1245"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %295, align 8
  %296 = getelementptr inbounds %"class.v8::base::Optional.1245", %"class.v8::base::Optional.1245"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %297 = bitcast %"class.v8::internal::compiler::MapRef"* %296 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %297, i8* nonnull align 8 %281, i64 16, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %281) #10
  br label %301

298:                                              ; preds = %191, %280
  %299 = phi i8* [ %281, %280 ], [ %201, %191 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %299) #10
  br label %300

300:                                              ; preds = %298, %209
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %185) #10
  br label %302

301:                                              ; preds = %294, %276
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %185) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %176) #10
  br label %308

302:                                              ; preds = %160, %300
  %303 = phi i8* [ %176, %300 ], [ %162, %160 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %303) #10
  br label %304

304:                                              ; preds = %302, %169
  %305 = getelementptr inbounds %"class.v8::base::Optional.1245", %"class.v8::base::Optional.1245"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %305, align 8
  %306 = getelementptr inbounds %"class.v8::base::Optional.1245", %"class.v8::base::Optional.1245"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %307 = bitcast %union.anon.1249* %306 to i8*
  store i8 0, i8* %307, align 8
  br label %308

308:                                              ; preds = %301, %304
  ret void
}

declare zeroext i1 @_ZNK2v88internal8compiler9ObjectRef12IsJSFunctionEv(%"class.v8::internal::compiler::ObjectRef"*) local_unnamed_addr #4

declare { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } @_ZNK2v88internal8compiler9ObjectRef12AsJSFunctionEv(%"class.v8::internal::compiler::ObjectRef"*) local_unnamed_addr #4

declare { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } @_ZNK2v88internal8compiler13HeapObjectRef3mapEv(%"class.v8::internal::compiler::HeapObjectRef"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK2v88internal8compiler6MapRef18has_prototype_slotEv(%"class.v8::internal::compiler::MapRef"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK2v88internal8compiler13JSFunctionRef15has_initial_mapEv(%"class.v8::internal::compiler::JSFunctionRef"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK2v88internal8compiler13JSFunctionRef10serializedEv(%"class.v8::internal::compiler::JSFunctionRef"*) local_unnamed_addr #4

declare void @_ZNK2v88internal8compiler12JSHeapBroker5TraceEv(%"class.std::__1::basic_string"* sret, %"class.v8::internal::compiler::JSHeapBroker"*) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal12StdoutStreamD1Ev(%"class.v8::internal::StdoutStream"*) unnamed_addr #6 comdat align 2 {
  %2 = bitcast %"class.v8::internal::StdoutStream"* %0 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_ios.base"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 1, i32 0
  %6 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %5, align 8
  tail call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %6) #10
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 0, i32 1, i32 0
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %7) #10
  %8 = bitcast %"class.v8::internal::StdoutStream"* %0 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %8, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #10
  %9 = bitcast %"class.std::__1::basic_ios.base"* %3 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %9) #10
  ret void
}

declare { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } @_ZNK2v88internal8compiler13JSFunctionRef11initial_mapEv(%"class.v8::internal::compiler::JSFunctionRef"*) local_unnamed_addr #4

declare { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } @_ZNK2v88internal8compiler6MapRef14GetConstructorEv(%"class.v8::internal::compiler::MapRef"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK2v88internal8compiler9ObjectRef6equalsERKS2_(%"class.v8::internal::compiler::ObjectRef"*, %"class.v8::internal::compiler::ObjectRef"* dereferenceable(16)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal8compiler14NodeProperties15InferMapsUnsafeEPNS1_12JSHeapBrokerEPNS1_4NodeES6_PNS0_13ZoneHandleSetINS0_3MapEEE(%"class.v8::internal::compiler::JSHeapBroker"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::ZoneHandleSet"* nocapture) local_unnamed_addr #2 align 2 {
  %5 = alloca %"class.v8::base::Optional.1270", align 8
  %6 = alloca %"class.v8::base::Optional.1270", align 8
  %7 = alloca <2 x i64>, align 16
  %8 = bitcast <2 x i64>* %7 to %"class.v8::internal::compiler::HeapObjectRef"*
  %9 = alloca %"class.v8::internal::compiler::JSObjectRef", align 8
  %10 = alloca %"class.v8::internal::compiler::MapRef", align 8
  %11 = alloca %"class.v8::internal::compiler::MapRef", align 8
  %12 = alloca %"class.v8::base::Optional.1245", align 8
  %13 = alloca %"class.v8::internal::compiler::MapRef", align 8
  %14 = alloca %"class.v8::internal::compiler::JSFunctionRef", align 8
  %15 = alloca <2 x i64>, align 16
  %16 = bitcast <2 x i64>* %15 to %"class.v8::internal::compiler::NativeContextRef"*
  %17 = alloca %"class.v8::internal::compiler::MapRef", align 8
  %18 = alloca <2 x i64>, align 16
  %19 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  br label %20

20:                                               ; preds = %65, %4
  %21 = phi i64 [ %19, %4 ], [ %67, %65 ]
  %22 = inttoptr i64 %21 to %"class.v8::internal::compiler::Node"*
  %23 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %22, i64 0, i32 0
  %24 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %24, i64 0, i32 2
  %26 = load i16, i16* %25, align 8
  switch i16 %26, label %111 [
    i16 59, label %27
    i16 58, label %45
    i16 30, label %68
  ]

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %24, i64 0, i32 5
  %29 = load i32, i32* %28, align 4
  %30 = icmp sgt i32 %29, 0
  br i1 %30, label %32, label %31, !prof !2

31:                                               ; preds = %27
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0)) #11
  unreachable

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %22, i64 0, i32 3
  %34 = load i32, i32* %33, align 4
  %35 = and i32 %34, 251658240
  %36 = icmp eq i32 %35, 251658240
  %37 = add i64 %21, 32
  br i1 %36, label %38, label %42

38:                                               ; preds = %32
  %39 = inttoptr i64 %37 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = add i64 %40, 16
  br label %42

42:                                               ; preds = %38, %32
  %43 = phi i64 [ %41, %38 ], [ %37, %32 ]
  %44 = inttoptr i64 %43 to i64*
  br label %65

45:                                               ; preds = %20
  %46 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %24, i64 0, i32 5
  %47 = load i32, i32* %46, align 4
  %48 = icmp sgt i32 %47, 1
  br i1 %48, label %50, label %49, !prof !2

49:                                               ; preds = %45
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0)) #11
  unreachable

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %22, i64 0, i32 3
  %52 = load i32, i32* %51, align 4
  %53 = and i32 %52, 251658240
  %54 = icmp eq i32 %53, 251658240
  %55 = add i64 %21, 32
  br i1 %54, label %56, label %60

56:                                               ; preds = %50
  %57 = inttoptr i64 %55 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = add i64 %58, 16
  br label %60

60:                                               ; preds = %56, %50
  %61 = phi i64 [ %59, %56 ], [ %55, %50 ]
  %62 = inttoptr i64 %61 to %"class.v8::internal::compiler::Node"**
  %63 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %62, i64 1
  %64 = bitcast %"class.v8::internal::compiler::Node"** %63 to i64*
  br label %65

65:                                               ; preds = %60, %42
  %66 = phi i64* [ %64, %60 ], [ %44, %42 ]
  %67 = load i64, i64* %66, align 8
  br label %20

68:                                               ; preds = %20
  %69 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %24, i64 1
  %70 = bitcast %"class.v8::internal::compiler::Operator"* %69 to i64**
  %71 = load i64*, i64** %70, align 8
  %72 = bitcast <2 x i64>* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %72) #10
  %73 = getelementptr inbounds %"class.v8::base::Optional.1270", %"class.v8::base::Optional.1270"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %73) #10
  call void @_ZN2v88internal8compiler10TryMakeRefINS0_10HeapObjectEvEENS_4base8OptionalINS1_10ref_traitsIT_E8ref_typeEEEPNS1_12JSHeapBrokerENS0_6HandleIS7_EENS4_5FlagsINS1_19GetOrCreateDataFlagEiEE(%"class.v8::base::Optional.1270"* nonnull sret %6, %"class.v8::internal::compiler::JSHeapBroker"* %0, i64* %71, i32 3) #10
  %74 = load i8, i8* %73, align 8, !range !4
  %75 = icmp eq i8 %74, 1
  br i1 %75, label %77, label %76, !prof !2

76:                                               ; preds = %68
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.16, i64 0, i64 0)) #11
  unreachable

77:                                               ; preds = %68
  %78 = getelementptr inbounds %"class.v8::base::Optional.1270", %"class.v8::base::Optional.1270"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %79 = bitcast %"class.v8::internal::compiler::ObjectData"** %78 to <2 x i64>*
  %80 = load <2 x i64>, <2 x i64>* %79, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %73) #10
  store <2 x i64> %80, <2 x i64>* %7, align 16
  %81 = bitcast <2 x i64>* %7 to %"class.v8::internal::compiler::ObjectRef"*
  %82 = call zeroext i1 @_ZNK2v88internal8compiler9ObjectRef10IsJSObjectEv(%"class.v8::internal::compiler::ObjectRef"* nonnull %81) #10
  %83 = bitcast %"class.v8::internal::compiler::JSObjectRef"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %83) #10
  br i1 %82, label %84, label %91

84:                                               ; preds = %77
  %85 = call { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } @_ZNK2v88internal8compiler9ObjectRef10AsJSObjectEv(%"class.v8::internal::compiler::ObjectRef"* nonnull %81) #10
  %86 = getelementptr inbounds %"class.v8::internal::compiler::JSObjectRef", %"class.v8::internal::compiler::JSObjectRef"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %87 = extractvalue { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } %85, 0
  store %"class.v8::internal::compiler::ObjectData"* %87, %"class.v8::internal::compiler::ObjectData"** %86, align 8
  %88 = getelementptr inbounds %"class.v8::internal::compiler::JSObjectRef", %"class.v8::internal::compiler::JSObjectRef"* %9, i64 0, i32 0, i32 0, i32 0, i32 1
  %89 = extractvalue { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } %85, 1
  store %"class.v8::internal::compiler::JSHeapBroker"* %89, %"class.v8::internal::compiler::JSHeapBroker"** %88, align 8
  %90 = call zeroext i1 @_ZNK2v88internal8compiler12JSHeapBroker24IsArrayOrObjectPrototypeERKNS1_11JSObjectRefE(%"class.v8::internal::compiler::JSHeapBroker"* %0, %"class.v8::internal::compiler::JSObjectRef"* nonnull dereferenceable(16) %9) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %83) #10
  br i1 %90, label %110, label %92

91:                                               ; preds = %77
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %83) #10
  br label %92

92:                                               ; preds = %84, %91
  %93 = bitcast %"class.v8::internal::compiler::MapRef"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %93) #10
  %94 = call { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } @_ZNK2v88internal8compiler13HeapObjectRef3mapEv(%"class.v8::internal::compiler::HeapObjectRef"* nonnull %8) #10
  %95 = getelementptr inbounds %"class.v8::internal::compiler::MapRef", %"class.v8::internal::compiler::MapRef"* %10, i64 0, i32 0, i32 0, i32 0
  %96 = extractvalue { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } %94, 0
  store %"class.v8::internal::compiler::ObjectData"* %96, %"class.v8::internal::compiler::ObjectData"** %95, align 8
  %97 = getelementptr inbounds %"class.v8::internal::compiler::MapRef", %"class.v8::internal::compiler::MapRef"* %10, i64 0, i32 0, i32 0, i32 1
  %98 = extractvalue { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } %94, 1
  store %"class.v8::internal::compiler::JSHeapBroker"* %98, %"class.v8::internal::compiler::JSHeapBroker"** %97, align 8
  %99 = call zeroext i1 @_ZNK2v88internal8compiler6MapRef9is_stableEv(%"class.v8::internal::compiler::MapRef"* nonnull %10) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %93) #10
  br i1 %99, label %100, label %110

100:                                              ; preds = %92
  %101 = bitcast %"class.v8::internal::compiler::MapRef"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %101) #10
  %102 = call { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } @_ZNK2v88internal8compiler13HeapObjectRef3mapEv(%"class.v8::internal::compiler::HeapObjectRef"* nonnull %8) #10
  %103 = getelementptr inbounds %"class.v8::internal::compiler::MapRef", %"class.v8::internal::compiler::MapRef"* %11, i64 0, i32 0, i32 0, i32 0
  %104 = extractvalue { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } %102, 0
  store %"class.v8::internal::compiler::ObjectData"* %104, %"class.v8::internal::compiler::ObjectData"** %103, align 8
  %105 = getelementptr inbounds %"class.v8::internal::compiler::MapRef", %"class.v8::internal::compiler::MapRef"* %11, i64 0, i32 0, i32 0, i32 1
  %106 = extractvalue { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } %102, 1
  store %"class.v8::internal::compiler::JSHeapBroker"* %106, %"class.v8::internal::compiler::JSHeapBroker"** %105, align 8
  %107 = call i64* @_ZNK2v88internal8compiler6MapRef6objectEv(%"class.v8::internal::compiler::MapRef"* nonnull %11) #10
  %108 = ptrtoint i64* %107 to i64
  %109 = getelementptr inbounds %"class.v8::internal::ZoneHandleSet", %"class.v8::internal::ZoneHandleSet"* %3, i64 0, i32 0
  store i64 %108, i64* %109, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %101) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %72) #10
  br label %841

110:                                              ; preds = %92, %84
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %72) #10
  br label %111

111:                                              ; preds = %20, %110
  br label %112

112:                                              ; preds = %111, %835
  %113 = phi i32 [ %740, %835 ], [ 1, %111 ]
  %114 = phi %"class.v8::internal::compiler::Node"* [ %840, %835 ], [ %2, %111 ]
  %115 = phi %"class.v8::internal::compiler::Node"* [ %741, %835 ], [ %1, %111 ]
  br label %116

116:                                              ; preds = %112, %723
  %117 = phi i32 [ 2, %723 ], [ %113, %112 ]
  %118 = phi %"class.v8::internal::compiler::Node"* [ %728, %723 ], [ %114, %112 ]
  %119 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %118, i64 0, i32 0
  %120 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %119, align 8
  %121 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %120, i64 0, i32 2
  %122 = load i16, i16* %121, align 8
  switch i16 %122, label %729 [
    i16 57, label %141
    i16 210, label %235
    i16 778, label %135
    i16 796, label %129
    i16 272, label %425
    i16 838, label %739
    i16 840, label %739
    i16 271, label %739
    i16 276, label %739
    i16 40, label %123
    i16 36, label %663
  ]

123:                                              ; preds = %116
  %124 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %115, i64 0, i32 0
  %125 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %124, align 8
  %126 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %125, i64 0, i32 2
  %127 = load i16, i16* %126, align 8
  %128 = icmp eq i16 %127, 207
  br i1 %128, label %613, label %640

129:                                              ; preds = %116
  %130 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %115, i64 0, i32 0
  %131 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %130, align 8
  %132 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %131, i64 0, i32 2
  %133 = load i16, i16* %132, align 8
  %134 = icmp eq i16 %133, 207
  br i1 %134, label %370, label %397

135:                                              ; preds = %116
  %136 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %115, i64 0, i32 0
  %137 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %136, align 8
  %138 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %137, i64 0, i32 2
  %139 = load i16, i16* %138, align 8
  %140 = icmp eq i16 %139, 207
  br i1 %140, label %329, label %356

141:                                              ; preds = %116
  %142 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %120, i64 0, i32 5
  %143 = load i32, i32* %142, align 4
  %144 = icmp sgt i32 %143, 0
  br i1 %144, label %146, label %145, !prof !2

145:                                              ; preds = %141
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0)) #11
  unreachable

146:                                              ; preds = %141
  %147 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %118, i64 0, i32 3
  %148 = load i32, i32* %147, align 4
  %149 = and i32 %148, 251658240
  %150 = icmp eq i32 %149, 251658240
  %151 = ptrtoint %"class.v8::internal::compiler::Node"* %118 to i64
  %152 = add i64 %151, 32
  br i1 %150, label %153, label %157

153:                                              ; preds = %146
  %154 = inttoptr i64 %152 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = add i64 %155, 16
  br label %157

157:                                              ; preds = %146, %153
  %158 = phi i64 [ %156, %153 ], [ %152, %146 ]
  %159 = inttoptr i64 %158 to %"class.v8::internal::compiler::Node"**
  %160 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %159, align 8
  %161 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %115, i64 0, i32 0
  %162 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %161, align 8
  %163 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %162, i64 0, i32 2
  %164 = load i16, i16* %163, align 8
  %165 = icmp eq i16 %164, 207
  br i1 %165, label %173, label %166

166:                                              ; preds = %191, %157
  %167 = phi %"class.v8::internal::compiler::Node"* [ %115, %157 ], [ %194, %191 ]
  %168 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %160, i64 0, i32 0
  %169 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %168, align 8
  %170 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %169, i64 0, i32 2
  %171 = load i16, i16* %170, align 8
  %172 = icmp eq i16 %171, 207
  br i1 %172, label %200, label %227

173:                                              ; preds = %157, %191
  %174 = phi %"class.v8::internal::compiler::Operator"* [ %196, %191 ], [ %162, %157 ]
  %175 = phi %"class.v8::internal::compiler::Node"* [ %194, %191 ], [ %115, %157 ]
  %176 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %174, i64 0, i32 5
  %177 = load i32, i32* %176, align 4
  %178 = icmp sgt i32 %177, 0
  br i1 %178, label %180, label %179, !prof !2

179:                                              ; preds = %173
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0)) #11
  unreachable

180:                                              ; preds = %173
  %181 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %175, i64 0, i32 3
  %182 = load i32, i32* %181, align 4
  %183 = and i32 %182, 251658240
  %184 = icmp eq i32 %183, 251658240
  %185 = ptrtoint %"class.v8::internal::compiler::Node"* %175 to i64
  %186 = add i64 %185, 32
  br i1 %184, label %187, label %191

187:                                              ; preds = %180
  %188 = inttoptr i64 %186 to i64*
  %189 = load i64, i64* %188, align 8
  %190 = add i64 %189, 16
  br label %191

191:                                              ; preds = %187, %180
  %192 = phi i64 [ %190, %187 ], [ %186, %180 ]
  %193 = inttoptr i64 %192 to %"class.v8::internal::compiler::Node"**
  %194 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %193, align 8
  %195 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %194, i64 0, i32 0
  %196 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %195, align 8
  %197 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %196, i64 0, i32 2
  %198 = load i16, i16* %197, align 8
  %199 = icmp eq i16 %198, 207
  br i1 %199, label %173, label %166

200:                                              ; preds = %166, %218
  %201 = phi %"class.v8::internal::compiler::Operator"* [ %223, %218 ], [ %169, %166 ]
  %202 = phi %"class.v8::internal::compiler::Node"* [ %221, %218 ], [ %160, %166 ]
  %203 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %201, i64 0, i32 5
  %204 = load i32, i32* %203, align 4
  %205 = icmp sgt i32 %204, 0
  br i1 %205, label %207, label %206, !prof !2

206:                                              ; preds = %200
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0)) #11
  unreachable

207:                                              ; preds = %200
  %208 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %202, i64 0, i32 3
  %209 = load i32, i32* %208, align 4
  %210 = and i32 %209, 251658240
  %211 = icmp eq i32 %210, 251658240
  %212 = ptrtoint %"class.v8::internal::compiler::Node"* %202 to i64
  %213 = add i64 %212, 32
  br i1 %211, label %214, label %218

214:                                              ; preds = %207
  %215 = inttoptr i64 %213 to i64*
  %216 = load i64, i64* %215, align 8
  %217 = add i64 %216, 16
  br label %218

218:                                              ; preds = %214, %207
  %219 = phi i64 [ %217, %214 ], [ %213, %207 ]
  %220 = inttoptr i64 %219 to %"class.v8::internal::compiler::Node"**
  %221 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %220, align 8
  %222 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %221, i64 0, i32 0
  %223 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %222, align 8
  %224 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %223, i64 0, i32 2
  %225 = load i16, i16* %224, align 8
  %226 = icmp eq i16 %225, 207
  br i1 %226, label %200, label %227

227:                                              ; preds = %218, %166
  %228 = phi %"class.v8::internal::compiler::Node"* [ %160, %166 ], [ %221, %218 ]
  %229 = icmp eq %"class.v8::internal::compiler::Node"* %167, %228
  br i1 %229, label %230, label %739

230:                                              ; preds = %227
  %231 = call dereferenceable(8) %"class.v8::internal::ZoneHandleSet"* @_ZN2v88internal8compiler14MapGuardMapsOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %120) #10
  %232 = getelementptr inbounds %"class.v8::internal::ZoneHandleSet", %"class.v8::internal::ZoneHandleSet"* %231, i64 0, i32 0
  %233 = getelementptr inbounds %"class.v8::internal::ZoneHandleSet", %"class.v8::internal::ZoneHandleSet"* %3, i64 0, i32 0
  %234 = load i64, i64* %232, align 8
  store i64 %234, i64* %233, align 8
  br label %841

235:                                              ; preds = %116
  %236 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %120, i64 0, i32 5
  %237 = load i32, i32* %236, align 4
  %238 = icmp sgt i32 %237, 0
  br i1 %238, label %240, label %239, !prof !2

239:                                              ; preds = %235
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0)) #11
  unreachable

240:                                              ; preds = %235
  %241 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %118, i64 0, i32 3
  %242 = load i32, i32* %241, align 4
  %243 = and i32 %242, 251658240
  %244 = icmp eq i32 %243, 251658240
  %245 = ptrtoint %"class.v8::internal::compiler::Node"* %118 to i64
  %246 = add i64 %245, 32
  br i1 %244, label %247, label %251

247:                                              ; preds = %240
  %248 = inttoptr i64 %246 to i64*
  %249 = load i64, i64* %248, align 8
  %250 = add i64 %249, 16
  br label %251

251:                                              ; preds = %240, %247
  %252 = phi i64 [ %250, %247 ], [ %246, %240 ]
  %253 = inttoptr i64 %252 to %"class.v8::internal::compiler::Node"**
  %254 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %253, align 8
  %255 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %115, i64 0, i32 0
  %256 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %255, align 8
  %257 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %256, i64 0, i32 2
  %258 = load i16, i16* %257, align 8
  %259 = icmp eq i16 %258, 207
  br i1 %259, label %267, label %260

260:                                              ; preds = %285, %251
  %261 = phi %"class.v8::internal::compiler::Node"* [ %115, %251 ], [ %288, %285 ]
  %262 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %254, i64 0, i32 0
  %263 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %262, align 8
  %264 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %263, i64 0, i32 2
  %265 = load i16, i16* %264, align 8
  %266 = icmp eq i16 %265, 207
  br i1 %266, label %294, label %321

267:                                              ; preds = %251, %285
  %268 = phi %"class.v8::internal::compiler::Operator"* [ %290, %285 ], [ %256, %251 ]
  %269 = phi %"class.v8::internal::compiler::Node"* [ %288, %285 ], [ %115, %251 ]
  %270 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %268, i64 0, i32 5
  %271 = load i32, i32* %270, align 4
  %272 = icmp sgt i32 %271, 0
  br i1 %272, label %274, label %273, !prof !2

273:                                              ; preds = %267
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0)) #11
  unreachable

274:                                              ; preds = %267
  %275 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %269, i64 0, i32 3
  %276 = load i32, i32* %275, align 4
  %277 = and i32 %276, 251658240
  %278 = icmp eq i32 %277, 251658240
  %279 = ptrtoint %"class.v8::internal::compiler::Node"* %269 to i64
  %280 = add i64 %279, 32
  br i1 %278, label %281, label %285

281:                                              ; preds = %274
  %282 = inttoptr i64 %280 to i64*
  %283 = load i64, i64* %282, align 8
  %284 = add i64 %283, 16
  br label %285

285:                                              ; preds = %281, %274
  %286 = phi i64 [ %284, %281 ], [ %280, %274 ]
  %287 = inttoptr i64 %286 to %"class.v8::internal::compiler::Node"**
  %288 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %287, align 8
  %289 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %288, i64 0, i32 0
  %290 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %289, align 8
  %291 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %290, i64 0, i32 2
  %292 = load i16, i16* %291, align 8
  %293 = icmp eq i16 %292, 207
  br i1 %293, label %267, label %260

294:                                              ; preds = %260, %312
  %295 = phi %"class.v8::internal::compiler::Operator"* [ %317, %312 ], [ %263, %260 ]
  %296 = phi %"class.v8::internal::compiler::Node"* [ %315, %312 ], [ %254, %260 ]
  %297 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %295, i64 0, i32 5
  %298 = load i32, i32* %297, align 4
  %299 = icmp sgt i32 %298, 0
  br i1 %299, label %301, label %300, !prof !2

300:                                              ; preds = %294
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0)) #11
  unreachable

301:                                              ; preds = %294
  %302 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %296, i64 0, i32 3
  %303 = load i32, i32* %302, align 4
  %304 = and i32 %303, 251658240
  %305 = icmp eq i32 %304, 251658240
  %306 = ptrtoint %"class.v8::internal::compiler::Node"* %296 to i64
  %307 = add i64 %306, 32
  br i1 %305, label %308, label %312

308:                                              ; preds = %301
  %309 = inttoptr i64 %307 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = add i64 %310, 16
  br label %312

312:                                              ; preds = %308, %301
  %313 = phi i64 [ %311, %308 ], [ %307, %301 ]
  %314 = inttoptr i64 %313 to %"class.v8::internal::compiler::Node"**
  %315 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %314, align 8
  %316 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %315, i64 0, i32 0
  %317 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %316, align 8
  %318 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %317, i64 0, i32 2
  %319 = load i16, i16* %318, align 8
  %320 = icmp eq i16 %319, 207
  br i1 %320, label %294, label %321

321:                                              ; preds = %312, %260
  %322 = phi %"class.v8::internal::compiler::Node"* [ %254, %260 ], [ %315, %312 ]
  %323 = icmp eq %"class.v8::internal::compiler::Node"* %261, %322
  br i1 %323, label %324, label %739

324:                                              ; preds = %321
  %325 = call dereferenceable(32) %"class.v8::internal::compiler::CheckMapsParameters"* @_ZN2v88internal8compiler21CheckMapsParametersOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %120) #10
  %326 = getelementptr inbounds %"class.v8::internal::compiler::CheckMapsParameters", %"class.v8::internal::compiler::CheckMapsParameters"* %325, i64 0, i32 1, i32 0
  %327 = getelementptr inbounds %"class.v8::internal::ZoneHandleSet", %"class.v8::internal::ZoneHandleSet"* %3, i64 0, i32 0
  %328 = load i64, i64* %326, align 8
  store i64 %328, i64* %327, align 8
  br label %841

329:                                              ; preds = %135, %347
  %330 = phi %"class.v8::internal::compiler::Operator"* [ %352, %347 ], [ %137, %135 ]
  %331 = phi %"class.v8::internal::compiler::Node"* [ %350, %347 ], [ %115, %135 ]
  %332 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %330, i64 0, i32 5
  %333 = load i32, i32* %332, align 4
  %334 = icmp sgt i32 %333, 0
  br i1 %334, label %336, label %335, !prof !2

335:                                              ; preds = %329
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0)) #11
  unreachable

336:                                              ; preds = %329
  %337 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %331, i64 0, i32 3
  %338 = load i32, i32* %337, align 4
  %339 = and i32 %338, 251658240
  %340 = icmp eq i32 %339, 251658240
  %341 = ptrtoint %"class.v8::internal::compiler::Node"* %331 to i64
  %342 = add i64 %341, 32
  br i1 %340, label %343, label %347

343:                                              ; preds = %336
  %344 = inttoptr i64 %342 to i64*
  %345 = load i64, i64* %344, align 8
  %346 = add i64 %345, 16
  br label %347

347:                                              ; preds = %343, %336
  %348 = phi i64 [ %346, %343 ], [ %342, %336 ]
  %349 = inttoptr i64 %348 to %"class.v8::internal::compiler::Node"**
  %350 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %349, align 8
  %351 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %350, i64 0, i32 0
  %352 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %351, align 8
  %353 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %352, i64 0, i32 2
  %354 = load i16, i16* %353, align 8
  %355 = icmp eq i16 %354, 207
  br i1 %355, label %329, label %356

356:                                              ; preds = %347, %135
  %357 = phi %"class.v8::internal::compiler::Node"* [ %115, %135 ], [ %350, %347 ]
  %358 = icmp eq %"class.v8::internal::compiler::Node"* %357, %118
  br i1 %358, label %359, label %739

359:                                              ; preds = %356
  %360 = getelementptr inbounds %"class.v8::base::Optional.1245", %"class.v8::base::Optional.1245"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %360) #10
  call void @_ZN2v88internal8compiler14NodeProperties14GetJSCreateMapEPNS1_12JSHeapBrokerEPNS1_4NodeE(%"class.v8::base::Optional.1245"* nonnull sret %12, %"class.v8::internal::compiler::JSHeapBroker"* %0, %"class.v8::internal::compiler::Node"* %115)
  %361 = load i8, i8* %360, align 8, !range !4
  %362 = icmp eq i8 %361, 0
  br i1 %362, label %368, label %363

363:                                              ; preds = %359
  %364 = getelementptr inbounds %"class.v8::base::Optional.1245", %"class.v8::base::Optional.1245"* %12, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %365 = call i64* @_ZNK2v88internal8compiler6MapRef6objectEv(%"class.v8::internal::compiler::MapRef"* %364) #10
  %366 = ptrtoint i64* %365 to i64
  %367 = getelementptr inbounds %"class.v8::internal::ZoneHandleSet", %"class.v8::internal::ZoneHandleSet"* %3, i64 0, i32 0
  store i64 %366, i64* %367, align 8
  br label %368

368:                                              ; preds = %359, %363
  %369 = phi i32 [ %117, %363 ], [ 0, %359 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %360) #10
  br label %841

370:                                              ; preds = %129, %388
  %371 = phi %"class.v8::internal::compiler::Operator"* [ %393, %388 ], [ %131, %129 ]
  %372 = phi %"class.v8::internal::compiler::Node"* [ %391, %388 ], [ %115, %129 ]
  %373 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %371, i64 0, i32 5
  %374 = load i32, i32* %373, align 4
  %375 = icmp sgt i32 %374, 0
  br i1 %375, label %377, label %376, !prof !2

376:                                              ; preds = %370
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0)) #11
  unreachable

377:                                              ; preds = %370
  %378 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %372, i64 0, i32 3
  %379 = load i32, i32* %378, align 4
  %380 = and i32 %379, 251658240
  %381 = icmp eq i32 %380, 251658240
  %382 = ptrtoint %"class.v8::internal::compiler::Node"* %372 to i64
  %383 = add i64 %382, 32
  br i1 %381, label %384, label %388

384:                                              ; preds = %377
  %385 = inttoptr i64 %383 to i64*
  %386 = load i64, i64* %385, align 8
  %387 = add i64 %386, 16
  br label %388

388:                                              ; preds = %384, %377
  %389 = phi i64 [ %387, %384 ], [ %383, %377 ]
  %390 = inttoptr i64 %389 to %"class.v8::internal::compiler::Node"**
  %391 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %390, align 8
  %392 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %391, i64 0, i32 0
  %393 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %392, align 8
  %394 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %393, i64 0, i32 2
  %395 = load i16, i16* %394, align 8
  %396 = icmp eq i16 %395, 207
  br i1 %396, label %370, label %397

397:                                              ; preds = %388, %129
  %398 = phi %"class.v8::internal::compiler::Node"* [ %115, %129 ], [ %391, %388 ]
  %399 = icmp eq %"class.v8::internal::compiler::Node"* %398, %118
  br i1 %399, label %400, label %739

400:                                              ; preds = %397
  %401 = bitcast %"class.v8::internal::compiler::MapRef"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %401) #10
  %402 = bitcast %"class.v8::internal::compiler::JSFunctionRef"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %402) #10
  %403 = bitcast <2 x i64>* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %403) #10
  %404 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %405 = load i8, i8* %404, align 8, !range !4
  %406 = icmp eq i8 %405, 1
  br i1 %406, label %408, label %407, !prof !2

407:                                              ; preds = %400
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.16, i64 0, i64 0)) #11
  unreachable

408:                                              ; preds = %400
  %409 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %410 = bitcast %"class.v8::internal::compiler::ObjectData"** %409 to <2 x i64>*
  %411 = load <2 x i64>, <2 x i64>* %410, align 8
  store <2 x i64> %411, <2 x i64>* %15, align 16
  %412 = call { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } @_ZNK2v88internal8compiler16NativeContextRef16promise_functionEv(%"class.v8::internal::compiler::NativeContextRef"* nonnull %16) #10
  %413 = getelementptr inbounds %"class.v8::internal::compiler::JSFunctionRef", %"class.v8::internal::compiler::JSFunctionRef"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %414 = extractvalue { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } %412, 0
  store %"class.v8::internal::compiler::ObjectData"* %414, %"class.v8::internal::compiler::ObjectData"** %413, align 8
  %415 = getelementptr inbounds %"class.v8::internal::compiler::JSFunctionRef", %"class.v8::internal::compiler::JSFunctionRef"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %416 = extractvalue { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } %412, 1
  store %"class.v8::internal::compiler::JSHeapBroker"* %416, %"class.v8::internal::compiler::JSHeapBroker"** %415, align 8
  %417 = call { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } @_ZNK2v88internal8compiler13JSFunctionRef11initial_mapEv(%"class.v8::internal::compiler::JSFunctionRef"* nonnull %14) #10
  %418 = getelementptr inbounds %"class.v8::internal::compiler::MapRef", %"class.v8::internal::compiler::MapRef"* %13, i64 0, i32 0, i32 0, i32 0
  %419 = extractvalue { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } %417, 0
  store %"class.v8::internal::compiler::ObjectData"* %419, %"class.v8::internal::compiler::ObjectData"** %418, align 8
  %420 = getelementptr inbounds %"class.v8::internal::compiler::MapRef", %"class.v8::internal::compiler::MapRef"* %13, i64 0, i32 0, i32 0, i32 1
  %421 = extractvalue { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } %417, 1
  store %"class.v8::internal::compiler::JSHeapBroker"* %421, %"class.v8::internal::compiler::JSHeapBroker"** %420, align 8
  %422 = call i64* @_ZNK2v88internal8compiler6MapRef6objectEv(%"class.v8::internal::compiler::MapRef"* nonnull %13) #10
  %423 = ptrtoint i64* %422 to i64
  %424 = getelementptr inbounds %"class.v8::internal::ZoneHandleSet", %"class.v8::internal::ZoneHandleSet"* %3, i64 0, i32 0
  store i64 %423, i64* %424, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %403) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %402) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %401) #10
  br label %841

425:                                              ; preds = %116
  %426 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %120, i64 0, i32 5
  %427 = load i32, i32* %426, align 4
  %428 = icmp sgt i32 %427, 0
  br i1 %428, label %430, label %429, !prof !2

429:                                              ; preds = %425
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0)) #11
  unreachable

430:                                              ; preds = %425
  %431 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %118, i64 0, i32 3
  %432 = load i32, i32* %431, align 4
  %433 = and i32 %432, 251658240
  %434 = icmp eq i32 %433, 251658240
  %435 = ptrtoint %"class.v8::internal::compiler::Node"* %118 to i64
  %436 = add i64 %435, 32
  br i1 %434, label %437, label %441

437:                                              ; preds = %430
  %438 = inttoptr i64 %436 to i64*
  %439 = load i64, i64* %438, align 8
  %440 = add i64 %439, 16
  br label %441

441:                                              ; preds = %430, %437
  %442 = phi i64 [ %440, %437 ], [ %436, %430 ]
  %443 = inttoptr i64 %442 to %"class.v8::internal::compiler::Node"**
  %444 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %443, align 8
  %445 = call dereferenceable(56) %"struct.v8::internal::compiler::FieldAccess"* @_ZN2v88internal8compiler13FieldAccessOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %120) #10
  %446 = getelementptr inbounds %"struct.v8::internal::compiler::FieldAccess", %"struct.v8::internal::compiler::FieldAccess"* %445, i64 0, i32 0
  %447 = load i8, i8* %446, align 8
  %448 = icmp eq i8 %447, 1
  br i1 %448, label %449, label %739

449:                                              ; preds = %441
  %450 = getelementptr inbounds %"struct.v8::internal::compiler::FieldAccess", %"struct.v8::internal::compiler::FieldAccess"* %445, i64 0, i32 2
  %451 = load i32, i32* %450, align 4
  %452 = icmp eq i32 %451, 0
  br i1 %452, label %453, label %739

453:                                              ; preds = %449
  %454 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %115, i64 0, i32 0
  %455 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %454, align 8
  %456 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %455, i64 0, i32 2
  %457 = load i16, i16* %456, align 8
  %458 = icmp eq i16 %457, 207
  br i1 %458, label %466, label %459

459:                                              ; preds = %484, %453
  %460 = phi %"class.v8::internal::compiler::Node"* [ %115, %453 ], [ %487, %484 ]
  %461 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %444, i64 0, i32 0
  %462 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %461, align 8
  %463 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %462, i64 0, i32 2
  %464 = load i16, i16* %463, align 8
  %465 = icmp eq i16 %464, 207
  br i1 %465, label %493, label %520

466:                                              ; preds = %453, %484
  %467 = phi %"class.v8::internal::compiler::Operator"* [ %489, %484 ], [ %455, %453 ]
  %468 = phi %"class.v8::internal::compiler::Node"* [ %487, %484 ], [ %115, %453 ]
  %469 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %467, i64 0, i32 5
  %470 = load i32, i32* %469, align 4
  %471 = icmp sgt i32 %470, 0
  br i1 %471, label %473, label %472, !prof !2

472:                                              ; preds = %466
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0)) #11
  unreachable

473:                                              ; preds = %466
  %474 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %468, i64 0, i32 3
  %475 = load i32, i32* %474, align 4
  %476 = and i32 %475, 251658240
  %477 = icmp eq i32 %476, 251658240
  %478 = ptrtoint %"class.v8::internal::compiler::Node"* %468 to i64
  %479 = add i64 %478, 32
  br i1 %477, label %480, label %484

480:                                              ; preds = %473
  %481 = inttoptr i64 %479 to i64*
  %482 = load i64, i64* %481, align 8
  %483 = add i64 %482, 16
  br label %484

484:                                              ; preds = %480, %473
  %485 = phi i64 [ %483, %480 ], [ %479, %473 ]
  %486 = inttoptr i64 %485 to %"class.v8::internal::compiler::Node"**
  %487 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %486, align 8
  %488 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %487, i64 0, i32 0
  %489 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %488, align 8
  %490 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %489, i64 0, i32 2
  %491 = load i16, i16* %490, align 8
  %492 = icmp eq i16 %491, 207
  br i1 %492, label %466, label %459

493:                                              ; preds = %459, %511
  %494 = phi %"class.v8::internal::compiler::Operator"* [ %516, %511 ], [ %462, %459 ]
  %495 = phi %"class.v8::internal::compiler::Node"* [ %514, %511 ], [ %444, %459 ]
  %496 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %494, i64 0, i32 5
  %497 = load i32, i32* %496, align 4
  %498 = icmp sgt i32 %497, 0
  br i1 %498, label %500, label %499, !prof !2

499:                                              ; preds = %493
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0)) #11
  unreachable

500:                                              ; preds = %493
  %501 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %495, i64 0, i32 3
  %502 = load i32, i32* %501, align 4
  %503 = and i32 %502, 251658240
  %504 = icmp eq i32 %503, 251658240
  %505 = ptrtoint %"class.v8::internal::compiler::Node"* %495 to i64
  %506 = add i64 %505, 32
  br i1 %504, label %507, label %511

507:                                              ; preds = %500
  %508 = inttoptr i64 %506 to i64*
  %509 = load i64, i64* %508, align 8
  %510 = add i64 %509, 16
  br label %511

511:                                              ; preds = %507, %500
  %512 = phi i64 [ %510, %507 ], [ %506, %500 ]
  %513 = inttoptr i64 %512 to %"class.v8::internal::compiler::Node"**
  %514 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %513, align 8
  %515 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %514, i64 0, i32 0
  %516 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %515, align 8
  %517 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %516, i64 0, i32 2
  %518 = load i16, i16* %517, align 8
  %519 = icmp eq i16 %518, 207
  br i1 %519, label %493, label %520

520:                                              ; preds = %511, %459
  %521 = phi %"class.v8::internal::compiler::Node"* [ %444, %459 ], [ %514, %511 ]
  %522 = icmp eq %"class.v8::internal::compiler::Node"* %460, %521
  br i1 %522, label %523, label %739

523:                                              ; preds = %520
  %524 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %119, align 8
  %525 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %524, i64 0, i32 5
  %526 = load i32, i32* %525, align 4
  %527 = icmp sgt i32 %526, 1
  br i1 %527, label %529, label %528, !prof !2

528:                                              ; preds = %523
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0)) #11
  unreachable

529:                                              ; preds = %523
  %530 = load i32, i32* %431, align 4
  %531 = and i32 %530, 251658240
  %532 = icmp eq i32 %531, 251658240
  br i1 %532, label %533, label %537

533:                                              ; preds = %529
  %534 = inttoptr i64 %436 to i64*
  %535 = load i64, i64* %534, align 8
  %536 = add i64 %535, 16
  br label %537

537:                                              ; preds = %529, %533
  %538 = phi i64 [ %536, %533 ], [ %436, %529 ]
  %539 = inttoptr i64 %538 to %"class.v8::internal::compiler::Node"**
  %540 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %539, i64 1
  %541 = bitcast %"class.v8::internal::compiler::Node"** %540 to i64*
  br label %542

542:                                              ; preds = %588, %537
  %543 = phi i64* [ %541, %537 ], [ %589, %588 ]
  %544 = load i64, i64* %543, align 8
  %545 = inttoptr i64 %544 to %"class.v8::internal::compiler::Node"*
  %546 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %545, i64 0, i32 0
  %547 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %546, align 8
  %548 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %547, i64 0, i32 2
  %549 = load i16, i16* %548, align 8
  switch i16 %549, label %739 [
    i16 59, label %550
    i16 58, label %568
    i16 30, label %590
  ]

550:                                              ; preds = %542
  %551 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %547, i64 0, i32 5
  %552 = load i32, i32* %551, align 4
  %553 = icmp sgt i32 %552, 0
  br i1 %553, label %555, label %554, !prof !2

554:                                              ; preds = %550
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0)) #11
  unreachable

555:                                              ; preds = %550
  %556 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %545, i64 0, i32 3
  %557 = load i32, i32* %556, align 4
  %558 = and i32 %557, 251658240
  %559 = icmp eq i32 %558, 251658240
  %560 = add i64 %544, 32
  br i1 %559, label %561, label %565

561:                                              ; preds = %555
  %562 = inttoptr i64 %560 to i64*
  %563 = load i64, i64* %562, align 8
  %564 = add i64 %563, 16
  br label %565

565:                                              ; preds = %561, %555
  %566 = phi i64 [ %564, %561 ], [ %560, %555 ]
  %567 = inttoptr i64 %566 to i64*
  br label %588

568:                                              ; preds = %542
  %569 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %547, i64 0, i32 5
  %570 = load i32, i32* %569, align 4
  %571 = icmp sgt i32 %570, 1
  br i1 %571, label %573, label %572, !prof !2

572:                                              ; preds = %568
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0)) #11
  unreachable

573:                                              ; preds = %568
  %574 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %545, i64 0, i32 3
  %575 = load i32, i32* %574, align 4
  %576 = and i32 %575, 251658240
  %577 = icmp eq i32 %576, 251658240
  %578 = add i64 %544, 32
  br i1 %577, label %579, label %583

579:                                              ; preds = %573
  %580 = inttoptr i64 %578 to i64*
  %581 = load i64, i64* %580, align 8
  %582 = add i64 %581, 16
  br label %583

583:                                              ; preds = %579, %573
  %584 = phi i64 [ %582, %579 ], [ %578, %573 ]
  %585 = inttoptr i64 %584 to %"class.v8::internal::compiler::Node"**
  %586 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %585, i64 1
  %587 = bitcast %"class.v8::internal::compiler::Node"** %586 to i64*
  br label %588

588:                                              ; preds = %583, %565
  %589 = phi i64* [ %587, %583 ], [ %567, %565 ]
  br label %542

590:                                              ; preds = %542
  %591 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %547, i64 1
  %592 = bitcast %"class.v8::internal::compiler::Operator"* %591 to i64**
  %593 = load i64*, i64** %592, align 8
  %594 = bitcast %"class.v8::internal::compiler::MapRef"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %594) #10
  %595 = bitcast <2 x i64>* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %595) #10
  %596 = getelementptr inbounds %"class.v8::base::Optional.1270", %"class.v8::base::Optional.1270"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %596) #10
  call void @_ZN2v88internal8compiler10TryMakeRefINS0_10HeapObjectEvEENS_4base8OptionalINS1_10ref_traitsIT_E8ref_typeEEEPNS1_12JSHeapBrokerENS0_6HandleIS7_EENS4_5FlagsINS1_19GetOrCreateDataFlagEiEE(%"class.v8::base::Optional.1270"* nonnull sret %5, %"class.v8::internal::compiler::JSHeapBroker"* %0, i64* %593, i32 3) #10
  %597 = load i8, i8* %596, align 8, !range !4
  %598 = icmp eq i8 %597, 1
  br i1 %598, label %600, label %599, !prof !2

599:                                              ; preds = %590
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.16, i64 0, i64 0)) #11
  unreachable

600:                                              ; preds = %590
  %601 = getelementptr inbounds %"class.v8::base::Optional.1270", %"class.v8::base::Optional.1270"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %602 = bitcast %"class.v8::internal::compiler::ObjectData"** %601 to <2 x i64>*
  %603 = load <2 x i64>, <2 x i64>* %602, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %596) #10
  store <2 x i64> %603, <2 x i64>* %18, align 16
  %604 = bitcast <2 x i64>* %18 to %"class.v8::internal::compiler::ObjectRef"*
  %605 = call { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } @_ZNK2v88internal8compiler9ObjectRef5AsMapEv(%"class.v8::internal::compiler::ObjectRef"* nonnull %604) #10
  %606 = getelementptr inbounds %"class.v8::internal::compiler::MapRef", %"class.v8::internal::compiler::MapRef"* %17, i64 0, i32 0, i32 0, i32 0
  %607 = extractvalue { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } %605, 0
  store %"class.v8::internal::compiler::ObjectData"* %607, %"class.v8::internal::compiler::ObjectData"** %606, align 8
  %608 = getelementptr inbounds %"class.v8::internal::compiler::MapRef", %"class.v8::internal::compiler::MapRef"* %17, i64 0, i32 0, i32 0, i32 1
  %609 = extractvalue { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } %605, 1
  store %"class.v8::internal::compiler::JSHeapBroker"* %609, %"class.v8::internal::compiler::JSHeapBroker"** %608, align 8
  %610 = call i64* @_ZNK2v88internal8compiler6MapRef6objectEv(%"class.v8::internal::compiler::MapRef"* nonnull %17) #10
  %611 = ptrtoint i64* %610 to i64
  %612 = getelementptr inbounds %"class.v8::internal::ZoneHandleSet", %"class.v8::internal::ZoneHandleSet"* %3, i64 0, i32 0
  store i64 %611, i64* %612, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %595) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %594) #10
  br label %841

613:                                              ; preds = %123, %631
  %614 = phi %"class.v8::internal::compiler::Operator"* [ %636, %631 ], [ %125, %123 ]
  %615 = phi %"class.v8::internal::compiler::Node"* [ %634, %631 ], [ %115, %123 ]
  %616 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %614, i64 0, i32 5
  %617 = load i32, i32* %616, align 4
  %618 = icmp sgt i32 %617, 0
  br i1 %618, label %620, label %619, !prof !2

619:                                              ; preds = %613
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0)) #11
  unreachable

620:                                              ; preds = %613
  %621 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %615, i64 0, i32 3
  %622 = load i32, i32* %621, align 4
  %623 = and i32 %622, 251658240
  %624 = icmp eq i32 %623, 251658240
  %625 = ptrtoint %"class.v8::internal::compiler::Node"* %615 to i64
  %626 = add i64 %625, 32
  br i1 %624, label %627, label %631

627:                                              ; preds = %620
  %628 = inttoptr i64 %626 to i64*
  %629 = load i64, i64* %628, align 8
  %630 = add i64 %629, 16
  br label %631

631:                                              ; preds = %627, %620
  %632 = phi i64 [ %630, %627 ], [ %626, %620 ]
  %633 = inttoptr i64 %632 to %"class.v8::internal::compiler::Node"**
  %634 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %633, align 8
  %635 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %634, i64 0, i32 0
  %636 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %635, align 8
  %637 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %636, i64 0, i32 2
  %638 = load i16, i16* %637, align 8
  %639 = icmp eq i16 %638, 207
  br i1 %639, label %613, label %640

640:                                              ; preds = %631, %123
  %641 = phi %"class.v8::internal::compiler::Node"* [ %115, %123 ], [ %634, %631 ]
  %642 = icmp eq %"class.v8::internal::compiler::Node"* %641, %118
  br i1 %642, label %643, label %739

643:                                              ; preds = %640
  %644 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %120, i64 0, i32 5
  %645 = load i32, i32* %644, align 4
  %646 = icmp sgt i32 %645, 0
  br i1 %646, label %648, label %647, !prof !2

647:                                              ; preds = %643
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0)) #11
  unreachable

648:                                              ; preds = %643
  %649 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %118, i64 0, i32 3
  %650 = load i32, i32* %649, align 4
  %651 = and i32 %650, 251658240
  %652 = icmp eq i32 %651, 251658240
  %653 = ptrtoint %"class.v8::internal::compiler::Node"* %118 to i64
  %654 = add i64 %653, 32
  br i1 %652, label %655, label %659

655:                                              ; preds = %648
  %656 = inttoptr i64 %654 to i64*
  %657 = load i64, i64* %656, align 8
  %658 = add i64 %657, 16
  br label %659

659:                                              ; preds = %648, %655
  %660 = phi i64 [ %658, %655 ], [ %654, %648 ]
  %661 = inttoptr i64 %660 to %"class.v8::internal::compiler::Node"**
  %662 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %661, align 8
  br label %739

663:                                              ; preds = %116
  %664 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %120, i64 0, i32 7
  %665 = load i32, i32* %664, align 4
  %666 = icmp sgt i32 %665, 0
  br i1 %666, label %668, label %667, !prof !2

667:                                              ; preds = %663
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.6, i64 0, i64 0)) #11
  unreachable

668:                                              ; preds = %663
  %669 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %120, i64 0, i32 5
  %670 = load i32, i32* %669, align 4
  %671 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %120) #10
  %672 = zext i1 %671 to i32
  %673 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %119, align 8
  %674 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %673) #10
  %675 = zext i1 %674 to i32
  %676 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %119, align 8
  %677 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %676, i64 0, i32 6
  %678 = load i32, i32* %677, align 8
  %679 = add i32 %670, %672
  %680 = add i32 %679, %675
  %681 = add i32 %680, %678
  %682 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %118, i64 0, i32 3
  %683 = load i32, i32* %682, align 4
  %684 = and i32 %683, 251658240
  %685 = icmp eq i32 %684, 251658240
  %686 = ptrtoint %"class.v8::internal::compiler::Node"* %118 to i64
  %687 = add i64 %686, 32
  br i1 %685, label %688, label %692

688:                                              ; preds = %668
  %689 = inttoptr i64 %687 to i64*
  %690 = load i64, i64* %689, align 8
  %691 = add i64 %690, 16
  br label %692

692:                                              ; preds = %668, %688
  %693 = phi i64 [ %691, %688 ], [ %687, %668 ]
  %694 = inttoptr i64 %693 to %"class.v8::internal::compiler::Node"**
  %695 = sext i32 %681 to i64
  %696 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %694, i64 %695
  %697 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %696, align 8
  %698 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %697, i64 0, i32 0
  %699 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %698, align 8
  %700 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %699, i64 0, i32 2
  %701 = load i16, i16* %700, align 8
  %702 = icmp eq i16 %701, 1
  br i1 %702, label %703, label %841

703:                                              ; preds = %692
  %704 = icmp sgt i32 %678, 0
  br i1 %704, label %706, label %705, !prof !2

705:                                              ; preds = %703
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.7, i64 0, i64 0)) #11
  unreachable

706:                                              ; preds = %703
  %707 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %676, i64 0, i32 5
  %708 = load i32, i32* %707, align 4
  %709 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %676) #10
  %710 = zext i1 %709 to i32
  %711 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %119, align 8
  %712 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %711) #10
  %713 = zext i1 %712 to i32
  %714 = add i32 %708, %710
  %715 = add i32 %714, %713
  %716 = load i32, i32* %682, align 4
  %717 = and i32 %716, 251658240
  %718 = icmp eq i32 %717, 251658240
  br i1 %718, label %719, label %723

719:                                              ; preds = %706
  %720 = inttoptr i64 %687 to i64*
  %721 = load i64, i64* %720, align 8
  %722 = add i64 %721, 16
  br label %723

723:                                              ; preds = %706, %719
  %724 = phi i64 [ %722, %719 ], [ %687, %706 ]
  %725 = inttoptr i64 %724 to %"class.v8::internal::compiler::Node"**
  %726 = sext i32 %715 to i64
  %727 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %725, i64 %726
  %728 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %727, align 8
  br label %116

729:                                              ; preds = %116
  %730 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %120, i64 0, i32 6
  %731 = load i32, i32* %730, align 8
  %732 = icmp eq i32 %731, 1
  br i1 %732, label %733, label %841

733:                                              ; preds = %729
  %734 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %120, i64 0, i32 3, i32 0
  %735 = load i8, i8* %734, align 2
  %736 = and i8 %735, 16
  %737 = icmp eq i8 %736, 0
  %738 = select i1 %737, i32 2, i32 %117
  br label %739

739:                                              ; preds = %116, %116, %116, %116, %542, %441, %449, %520, %321, %227, %733, %356, %640, %659, %397
  %740 = phi i32 [ %117, %659 ], [ %117, %640 ], [ %117, %397 ], [ 2, %356 ], [ %738, %733 ], [ %117, %227 ], [ %117, %321 ], [ 2, %520 ], [ %117, %441 ], [ %117, %449 ], [ 2, %542 ], [ %117, %116 ], [ %117, %116 ], [ %117, %116 ], [ %117, %116 ]
  %741 = phi %"class.v8::internal::compiler::Node"* [ %662, %659 ], [ %115, %640 ], [ %115, %397 ], [ %115, %356 ], [ %115, %733 ], [ %115, %227 ], [ %115, %321 ], [ %115, %520 ], [ %115, %441 ], [ %115, %449 ], [ %115, %542 ], [ %115, %116 ], [ %115, %116 ], [ %115, %116 ], [ %115, %116 ]
  %742 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %741, i64 0, i32 0
  %743 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %742, align 8
  %744 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %743, i64 0, i32 2
  %745 = load i16, i16* %744, align 8
  %746 = icmp eq i16 %745, 207
  br i1 %746, label %753, label %747

747:                                              ; preds = %771, %739
  %748 = phi %"class.v8::internal::compiler::Node"* [ %741, %739 ], [ %774, %771 ]
  %749 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %119, align 8
  %750 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %749, i64 0, i32 2
  %751 = load i16, i16* %750, align 8
  %752 = icmp eq i16 %751, 207
  br i1 %752, label %780, label %807

753:                                              ; preds = %739, %771
  %754 = phi %"class.v8::internal::compiler::Operator"* [ %776, %771 ], [ %743, %739 ]
  %755 = phi %"class.v8::internal::compiler::Node"* [ %774, %771 ], [ %741, %739 ]
  %756 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %754, i64 0, i32 5
  %757 = load i32, i32* %756, align 4
  %758 = icmp sgt i32 %757, 0
  br i1 %758, label %760, label %759, !prof !2

759:                                              ; preds = %753
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0)) #11
  unreachable

760:                                              ; preds = %753
  %761 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %755, i64 0, i32 3
  %762 = load i32, i32* %761, align 4
  %763 = and i32 %762, 251658240
  %764 = icmp eq i32 %763, 251658240
  %765 = ptrtoint %"class.v8::internal::compiler::Node"* %755 to i64
  %766 = add i64 %765, 32
  br i1 %764, label %767, label %771

767:                                              ; preds = %760
  %768 = inttoptr i64 %766 to i64*
  %769 = load i64, i64* %768, align 8
  %770 = add i64 %769, 16
  br label %771

771:                                              ; preds = %767, %760
  %772 = phi i64 [ %770, %767 ], [ %766, %760 ]
  %773 = inttoptr i64 %772 to %"class.v8::internal::compiler::Node"**
  %774 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %773, align 8
  %775 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %774, i64 0, i32 0
  %776 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %775, align 8
  %777 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %776, i64 0, i32 2
  %778 = load i16, i16* %777, align 8
  %779 = icmp eq i16 %778, 207
  br i1 %779, label %753, label %747

780:                                              ; preds = %747, %798
  %781 = phi %"class.v8::internal::compiler::Operator"* [ %803, %798 ], [ %749, %747 ]
  %782 = phi %"class.v8::internal::compiler::Node"* [ %801, %798 ], [ %118, %747 ]
  %783 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %781, i64 0, i32 5
  %784 = load i32, i32* %783, align 4
  %785 = icmp sgt i32 %784, 0
  br i1 %785, label %787, label %786, !prof !2

786:                                              ; preds = %780
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0)) #11
  unreachable

787:                                              ; preds = %780
  %788 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %782, i64 0, i32 3
  %789 = load i32, i32* %788, align 4
  %790 = and i32 %789, 251658240
  %791 = icmp eq i32 %790, 251658240
  %792 = ptrtoint %"class.v8::internal::compiler::Node"* %782 to i64
  %793 = add i64 %792, 32
  br i1 %791, label %794, label %798

794:                                              ; preds = %787
  %795 = inttoptr i64 %793 to i64*
  %796 = load i64, i64* %795, align 8
  %797 = add i64 %796, 16
  br label %798

798:                                              ; preds = %794, %787
  %799 = phi i64 [ %797, %794 ], [ %793, %787 ]
  %800 = inttoptr i64 %799 to %"class.v8::internal::compiler::Node"**
  %801 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %800, align 8
  %802 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %801, i64 0, i32 0
  %803 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %802, align 8
  %804 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %803, i64 0, i32 2
  %805 = load i16, i16* %804, align 8
  %806 = icmp eq i16 %805, 207
  br i1 %806, label %780, label %807

807:                                              ; preds = %798, %747
  %808 = phi %"class.v8::internal::compiler::Node"* [ %118, %747 ], [ %801, %798 ]
  %809 = icmp eq %"class.v8::internal::compiler::Node"* %748, %808
  br i1 %809, label %841, label %810

810:                                              ; preds = %807
  %811 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %749, i64 0, i32 6
  %812 = load i32, i32* %811, align 8
  %813 = icmp sgt i32 %812, 0
  br i1 %813, label %815, label %814, !prof !2

814:                                              ; preds = %810
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.7, i64 0, i64 0)) #11
  unreachable

815:                                              ; preds = %810
  %816 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %749, i64 0, i32 5
  %817 = load i32, i32* %816, align 4
  %818 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %749) #10
  %819 = zext i1 %818 to i32
  %820 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %119, align 8
  %821 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %820) #10
  %822 = zext i1 %821 to i32
  %823 = add i32 %817, %819
  %824 = add i32 %823, %822
  %825 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %118, i64 0, i32 3
  %826 = load i32, i32* %825, align 4
  %827 = and i32 %826, 251658240
  %828 = icmp eq i32 %827, 251658240
  %829 = ptrtoint %"class.v8::internal::compiler::Node"* %118 to i64
  %830 = add i64 %829, 32
  br i1 %828, label %831, label %835

831:                                              ; preds = %815
  %832 = inttoptr i64 %830 to i64*
  %833 = load i64, i64* %832, align 8
  %834 = add i64 %833, 16
  br label %835

835:                                              ; preds = %815, %831
  %836 = phi i64 [ %834, %831 ], [ %830, %815 ]
  %837 = inttoptr i64 %836 to %"class.v8::internal::compiler::Node"**
  %838 = sext i32 %824 to i64
  %839 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %837, i64 %838
  %840 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %839, align 8
  br label %112

841:                                              ; preds = %729, %807, %692, %600, %324, %230, %368, %408, %100
  %842 = phi i32 [ 2, %100 ], [ %117, %600 ], [ %117, %408 ], [ %369, %368 ], [ %117, %324 ], [ %117, %230 ], [ 0, %692 ], [ 0, %807 ], [ 0, %729 ]
  ret i32 %842
}

declare zeroext i1 @_ZNK2v88internal8compiler9ObjectRef10IsJSObjectEv(%"class.v8::internal::compiler::ObjectRef"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK2v88internal8compiler12JSHeapBroker24IsArrayOrObjectPrototypeERKNS1_11JSObjectRefE(%"class.v8::internal::compiler::JSHeapBroker"*, %"class.v8::internal::compiler::JSObjectRef"* dereferenceable(16)) local_unnamed_addr #4

declare { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } @_ZNK2v88internal8compiler9ObjectRef10AsJSObjectEv(%"class.v8::internal::compiler::ObjectRef"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK2v88internal8compiler6MapRef9is_stableEv(%"class.v8::internal::compiler::MapRef"*) local_unnamed_addr #4

declare i64* @_ZNK2v88internal8compiler6MapRef6objectEv(%"class.v8::internal::compiler::MapRef"*) local_unnamed_addr #4

declare dereferenceable(8) %"class.v8::internal::ZoneHandleSet"* @_ZN2v88internal8compiler14MapGuardMapsOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #4

declare dereferenceable(32) %"class.v8::internal::compiler::CheckMapsParameters"* @_ZN2v88internal8compiler21CheckMapsParametersOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #4

declare { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } @_ZNK2v88internal8compiler16NativeContextRef16promise_functionEv(%"class.v8::internal::compiler::NativeContextRef"*) local_unnamed_addr #4

declare dereferenceable(56) %"struct.v8::internal::compiler::FieldAccess"* @_ZN2v88internal8compiler13FieldAccessOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #4

declare { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } @_ZNK2v88internal8compiler9ObjectRef5AsMapEv(%"class.v8::internal::compiler::ObjectRef"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal8compiler14NodeProperties29NoObservableSideEffectBetweenEPNS1_4NodeES4_(%"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"* readnone) local_unnamed_addr #2 align 2 {
  %3 = icmp eq %"class.v8::internal::compiler::Node"* %0, %1
  br i1 %3, label %43, label %4

4:                                                ; preds = %2, %36
  %5 = phi %"class.v8::internal::compiler::Node"* [ %41, %36 ], [ %0, %2 ]
  %6 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %5, i64 0, i32 0
  %7 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %7, i64 0, i32 6
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %43

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %7, i64 0, i32 3, i32 0
  %13 = load i8, i8* %12, align 2
  %14 = and i8 %13, 16
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %43, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %7, i64 0, i32 5
  %18 = load i32, i32* %17, align 4
  %19 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %7) #10
  %20 = zext i1 %19 to i32
  %21 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %6, align 8
  %22 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %21) #10
  %23 = zext i1 %22 to i32
  %24 = add i32 %18, %20
  %25 = add i32 %24, %23
  %26 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %5, i64 0, i32 3
  %27 = load i32, i32* %26, align 4
  %28 = and i32 %27, 251658240
  %29 = icmp eq i32 %28, 251658240
  %30 = ptrtoint %"class.v8::internal::compiler::Node"* %5 to i64
  %31 = add i64 %30, 32
  br i1 %29, label %32, label %36

32:                                               ; preds = %16
  %33 = inttoptr i64 %31 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = add i64 %34, 16
  br label %36

36:                                               ; preds = %16, %32
  %37 = phi i64 [ %35, %32 ], [ %31, %16 ]
  %38 = inttoptr i64 %37 to %"class.v8::internal::compiler::Node"**
  %39 = sext i32 %25 to i64
  %40 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %38, i64 %39
  %41 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %40, align 8
  %42 = icmp eq %"class.v8::internal::compiler::Node"* %41, %1
  br i1 %42, label %43, label %4

43:                                               ; preds = %11, %36, %4, %2
  %44 = phi i1 [ true, %2 ], [ false, %4 ], [ true, %36 ], [ false, %11 ]
  ret i1 %44
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal8compiler14NodeProperties14CanBePrimitiveEPNS1_12JSHeapBrokerEPNS1_4NodeES6_(%"class.v8::internal::compiler::JSHeapBroker"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.v8::base::Optional.1270", align 8
  %5 = alloca <2 x i64>, align 16
  %6 = bitcast <2 x i64>* %5 to %"class.v8::internal::compiler::HeapObjectRef"*
  %7 = alloca %"class.v8::internal::compiler::MapRef", align 8
  %8 = alloca %"class.v8::internal::compiler::MapInference", align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %10 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %10, i64 0, i32 2
  %12 = load i16, i16* %11, align 8
  switch i16 %12, label %84 [
    i16 825, label %92
    i16 826, label %92
    i16 827, label %92
    i16 828, label %92
    i16 777, label %92
    i16 778, label %92
    i16 779, label %92
    i16 780, label %92
    i16 781, label %92
    i16 782, label %92
    i16 783, label %92
    i16 784, label %92
    i16 785, label %92
    i16 786, label %92
    i16 787, label %92
    i16 788, label %92
    i16 789, label %92
    i16 790, label %92
    i16 791, label %92
    i16 792, label %92
    i16 793, label %92
    i16 794, label %92
    i16 795, label %92
    i16 796, label %92
    i16 797, label %92
    i16 798, label %92
    i16 799, label %92
    i16 213, label %92
    i16 219, label %92
    i16 812, label %92
    i16 774, label %92
    i16 30, label %13
  ]

13:                                               ; preds = %3
  %14 = bitcast <2 x i64>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #10
  %15 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  br label %16

16:                                               ; preds = %61, %13
  %17 = phi i64 [ %15, %13 ], [ %63, %61 ]
  %18 = inttoptr i64 %17 to %"class.v8::internal::compiler::Node"*
  %19 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %18, i64 0, i32 0
  %20 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %20, i64 0, i32 2
  %22 = load i16, i16* %21, align 8
  switch i16 %22, label %64 [
    i16 59, label %23
    i16 58, label %41
    i16 30, label %65
  ]

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %20, i64 0, i32 5
  %25 = load i32, i32* %24, align 4
  %26 = icmp sgt i32 %25, 0
  br i1 %26, label %28, label %27, !prof !2

27:                                               ; preds = %23
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0)) #11
  unreachable

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %18, i64 0, i32 3
  %30 = load i32, i32* %29, align 4
  %31 = and i32 %30, 251658240
  %32 = icmp eq i32 %31, 251658240
  %33 = add i64 %17, 32
  br i1 %32, label %34, label %38

34:                                               ; preds = %28
  %35 = inttoptr i64 %33 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = add i64 %36, 16
  br label %38

38:                                               ; preds = %34, %28
  %39 = phi i64 [ %37, %34 ], [ %33, %28 ]
  %40 = inttoptr i64 %39 to i64*
  br label %61

41:                                               ; preds = %16
  %42 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %20, i64 0, i32 5
  %43 = load i32, i32* %42, align 4
  %44 = icmp sgt i32 %43, 1
  br i1 %44, label %46, label %45, !prof !2

45:                                               ; preds = %41
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0)) #11
  unreachable

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %18, i64 0, i32 3
  %48 = load i32, i32* %47, align 4
  %49 = and i32 %48, 251658240
  %50 = icmp eq i32 %49, 251658240
  %51 = add i64 %17, 32
  br i1 %50, label %52, label %56

52:                                               ; preds = %46
  %53 = inttoptr i64 %51 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = add i64 %54, 16
  br label %56

56:                                               ; preds = %52, %46
  %57 = phi i64 [ %55, %52 ], [ %51, %46 ]
  %58 = inttoptr i64 %57 to %"class.v8::internal::compiler::Node"**
  %59 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %58, i64 1
  %60 = bitcast %"class.v8::internal::compiler::Node"** %59 to i64*
  br label %61

61:                                               ; preds = %56, %38
  %62 = phi i64* [ %60, %56 ], [ %40, %38 ]
  %63 = load i64, i64* %62, align 8
  br label %16

64:                                               ; preds = %16
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.22, i64 0, i64 0)) #11
  unreachable

65:                                               ; preds = %16
  %66 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %20, i64 1
  %67 = bitcast %"class.v8::internal::compiler::Operator"* %66 to i64**
  %68 = load i64*, i64** %67, align 8
  %69 = getelementptr inbounds %"class.v8::base::Optional.1270", %"class.v8::base::Optional.1270"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %69) #10
  call void @_ZN2v88internal8compiler10TryMakeRefINS0_10HeapObjectEvEENS_4base8OptionalINS1_10ref_traitsIT_E8ref_typeEEEPNS1_12JSHeapBrokerENS0_6HandleIS7_EENS4_5FlagsINS1_19GetOrCreateDataFlagEiEE(%"class.v8::base::Optional.1270"* nonnull sret %4, %"class.v8::internal::compiler::JSHeapBroker"* %0, i64* %68, i32 3) #10
  %70 = load i8, i8* %69, align 8, !range !4
  %71 = icmp eq i8 %70, 1
  br i1 %71, label %73, label %72, !prof !2

72:                                               ; preds = %65
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.16, i64 0, i64 0)) #11
  unreachable

73:                                               ; preds = %65
  %74 = getelementptr inbounds %"class.v8::base::Optional.1270", %"class.v8::base::Optional.1270"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %75 = bitcast %"class.v8::internal::compiler::ObjectData"** %74 to <2 x i64>*
  %76 = load <2 x i64>, <2 x i64>* %75, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69) #10
  store <2 x i64> %76, <2 x i64>* %5, align 16
  %77 = bitcast %"class.v8::internal::compiler::MapRef"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %77) #10
  %78 = call { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } @_ZNK2v88internal8compiler13HeapObjectRef3mapEv(%"class.v8::internal::compiler::HeapObjectRef"* nonnull %6) #10
  %79 = getelementptr inbounds %"class.v8::internal::compiler::MapRef", %"class.v8::internal::compiler::MapRef"* %7, i64 0, i32 0, i32 0, i32 0
  %80 = extractvalue { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } %78, 0
  store %"class.v8::internal::compiler::ObjectData"* %80, %"class.v8::internal::compiler::ObjectData"** %79, align 8
  %81 = getelementptr inbounds %"class.v8::internal::compiler::MapRef", %"class.v8::internal::compiler::MapRef"* %7, i64 0, i32 0, i32 0, i32 1
  %82 = extractvalue { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } %78, 1
  store %"class.v8::internal::compiler::JSHeapBroker"* %82, %"class.v8::internal::compiler::JSHeapBroker"** %81, align 8
  %83 = call zeroext i1 @_ZNK2v88internal8compiler6MapRef14IsPrimitiveMapEv(%"class.v8::internal::compiler::MapRef"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %77) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #10
  br label %92

84:                                               ; preds = %3
  %85 = bitcast %"class.v8::internal::compiler::MapInference"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %85) #10
  call void @_ZN2v88internal8compiler12MapInferenceC1EPNS1_12JSHeapBrokerEPNS1_4NodeES6_(%"class.v8::internal::compiler::MapInference"* nonnull %8, %"class.v8::internal::compiler::JSHeapBroker"* %0, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* %2) #10
  %86 = call zeroext i1 @_ZNK2v88internal8compiler12MapInference8HaveMapsEv(%"class.v8::internal::compiler::MapInference"* nonnull %8) #10
  br i1 %86, label %87, label %90

87:                                               ; preds = %84
  %88 = call zeroext i1 @_ZNK2v88internal8compiler12MapInference31AllOfInstanceTypesAreJSReceiverEv(%"class.v8::internal::compiler::MapInference"* nonnull %8) #10
  %89 = xor i1 %88, true
  br label %90

90:                                               ; preds = %87, %84
  %91 = phi i1 [ true, %84 ], [ %89, %87 ]
  call void @_ZN2v88internal8compiler12MapInferenceD1Ev(%"class.v8::internal::compiler::MapInference"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %85) #10
  br label %92

92:                                               ; preds = %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %90, %73
  %93 = phi i1 [ %91, %90 ], [ %83, %73 ], [ false, %3 ], [ false, %3 ], [ false, %3 ], [ false, %3 ], [ false, %3 ], [ false, %3 ], [ false, %3 ], [ false, %3 ], [ false, %3 ], [ false, %3 ], [ false, %3 ], [ false, %3 ], [ false, %3 ], [ false, %3 ], [ false, %3 ], [ false, %3 ], [ false, %3 ], [ false, %3 ], [ false, %3 ], [ false, %3 ], [ false, %3 ], [ false, %3 ], [ false, %3 ], [ false, %3 ], [ false, %3 ], [ false, %3 ], [ false, %3 ], [ false, %3 ], [ false, %3 ], [ false, %3 ], [ false, %3 ]
  ret i1 %93
}

declare zeroext i1 @_ZNK2v88internal8compiler6MapRef14IsPrimitiveMapEv(%"class.v8::internal::compiler::MapRef"*) local_unnamed_addr #4

declare void @_ZN2v88internal8compiler12MapInferenceC1EPNS1_12JSHeapBrokerEPNS1_4NodeES6_(%"class.v8::internal::compiler::MapInference"*, %"class.v8::internal::compiler::JSHeapBroker"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*) unnamed_addr #4

declare zeroext i1 @_ZNK2v88internal8compiler12MapInference8HaveMapsEv(%"class.v8::internal::compiler::MapInference"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK2v88internal8compiler12MapInference31AllOfInstanceTypesAreJSReceiverEv(%"class.v8::internal::compiler::MapInference"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN2v88internal8compiler12MapInferenceD1Ev(%"class.v8::internal::compiler::MapInference"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal8compiler14NodeProperties20CanBeNullOrUndefinedEPNS1_12JSHeapBrokerEPNS1_4NodeES6_(%"class.v8::internal::compiler::JSHeapBroker"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.v8::base::Optional.1270", align 8
  %5 = alloca <2 x i64>, align 16
  %6 = bitcast <2 x i64>* %5 to %"class.v8::internal::compiler::HeapObjectRef"*
  %7 = alloca %"class.v8::internal::compiler::MapRef", align 8
  %8 = tail call zeroext i1 @_ZN2v88internal8compiler14NodeProperties14CanBePrimitiveEPNS1_12JSHeapBrokerEPNS1_4NodeES6_(%"class.v8::internal::compiler::JSHeapBroker"* %0, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* %2)
  br i1 %8, label %9, label %88

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %11 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %11, i64 0, i32 2
  %13 = load i16, i16* %12, align 8
  switch i16 %13, label %87 [
    i16 209, label %88
    i16 212, label %88
    i16 215, label %88
    i16 216, label %88
    i16 217, label %88
    i16 769, label %88
    i16 770, label %88
    i16 771, label %88
    i16 772, label %88
    i16 773, label %88
    i16 775, label %88
    i16 290, label %88
    i16 30, label %14
  ]

14:                                               ; preds = %9
  %15 = bitcast <2 x i64>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #10
  %16 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  br label %17

17:                                               ; preds = %62, %14
  %18 = phi i64 [ %16, %14 ], [ %64, %62 ]
  %19 = inttoptr i64 %18 to %"class.v8::internal::compiler::Node"*
  %20 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %19, i64 0, i32 0
  %21 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %21, i64 0, i32 2
  %23 = load i16, i16* %22, align 8
  switch i16 %23, label %65 [
    i16 59, label %24
    i16 58, label %42
    i16 30, label %66
  ]

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %21, i64 0, i32 5
  %26 = load i32, i32* %25, align 4
  %27 = icmp sgt i32 %26, 0
  br i1 %27, label %29, label %28, !prof !2

28:                                               ; preds = %24
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0)) #11
  unreachable

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %19, i64 0, i32 3
  %31 = load i32, i32* %30, align 4
  %32 = and i32 %31, 251658240
  %33 = icmp eq i32 %32, 251658240
  %34 = add i64 %18, 32
  br i1 %33, label %35, label %39

35:                                               ; preds = %29
  %36 = inttoptr i64 %34 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = add i64 %37, 16
  br label %39

39:                                               ; preds = %35, %29
  %40 = phi i64 [ %38, %35 ], [ %34, %29 ]
  %41 = inttoptr i64 %40 to i64*
  br label %62

42:                                               ; preds = %17
  %43 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %21, i64 0, i32 5
  %44 = load i32, i32* %43, align 4
  %45 = icmp sgt i32 %44, 1
  br i1 %45, label %47, label %46, !prof !2

46:                                               ; preds = %42
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0)) #11
  unreachable

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %19, i64 0, i32 3
  %49 = load i32, i32* %48, align 4
  %50 = and i32 %49, 251658240
  %51 = icmp eq i32 %50, 251658240
  %52 = add i64 %18, 32
  br i1 %51, label %53, label %57

53:                                               ; preds = %47
  %54 = inttoptr i64 %52 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = add i64 %55, 16
  br label %57

57:                                               ; preds = %53, %47
  %58 = phi i64 [ %56, %53 ], [ %52, %47 ]
  %59 = inttoptr i64 %58 to %"class.v8::internal::compiler::Node"**
  %60 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %59, i64 1
  %61 = bitcast %"class.v8::internal::compiler::Node"** %60 to i64*
  br label %62

62:                                               ; preds = %57, %39
  %63 = phi i64* [ %61, %57 ], [ %41, %39 ]
  %64 = load i64, i64* %63, align 8
  br label %17

65:                                               ; preds = %17
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.22, i64 0, i64 0)) #11
  unreachable

66:                                               ; preds = %17
  %67 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %21, i64 1
  %68 = bitcast %"class.v8::internal::compiler::Operator"* %67 to i64**
  %69 = load i64*, i64** %68, align 8
  %70 = getelementptr inbounds %"class.v8::base::Optional.1270", %"class.v8::base::Optional.1270"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %70) #10
  call void @_ZN2v88internal8compiler10TryMakeRefINS0_10HeapObjectEvEENS_4base8OptionalINS1_10ref_traitsIT_E8ref_typeEEEPNS1_12JSHeapBrokerENS0_6HandleIS7_EENS4_5FlagsINS1_19GetOrCreateDataFlagEiEE(%"class.v8::base::Optional.1270"* nonnull sret %4, %"class.v8::internal::compiler::JSHeapBroker"* %0, i64* %69, i32 3) #10
  %71 = load i8, i8* %70, align 8, !range !4
  %72 = icmp eq i8 %71, 1
  br i1 %72, label %74, label %73, !prof !2

73:                                               ; preds = %66
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.16, i64 0, i64 0)) #11
  unreachable

74:                                               ; preds = %66
  %75 = getelementptr inbounds %"class.v8::base::Optional.1270", %"class.v8::base::Optional.1270"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %76 = bitcast %"class.v8::internal::compiler::ObjectData"** %75 to <2 x i64>*
  %77 = load <2 x i64>, <2 x i64>* %76, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70) #10
  store <2 x i64> %77, <2 x i64>* %5, align 16
  %78 = bitcast %"class.v8::internal::compiler::MapRef"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %78) #10
  %79 = call { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } @_ZNK2v88internal8compiler13HeapObjectRef3mapEv(%"class.v8::internal::compiler::HeapObjectRef"* nonnull %6) #10
  %80 = getelementptr inbounds %"class.v8::internal::compiler::MapRef", %"class.v8::internal::compiler::MapRef"* %7, i64 0, i32 0, i32 0, i32 0
  %81 = extractvalue { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } %79, 0
  store %"class.v8::internal::compiler::ObjectData"* %81, %"class.v8::internal::compiler::ObjectData"** %80, align 8
  %82 = getelementptr inbounds %"class.v8::internal::compiler::MapRef", %"class.v8::internal::compiler::MapRef"* %7, i64 0, i32 0, i32 0, i32 1
  %83 = extractvalue { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } %79, 1
  store %"class.v8::internal::compiler::JSHeapBroker"* %83, %"class.v8::internal::compiler::JSHeapBroker"** %82, align 8
  %84 = call zeroext i8 @_ZNK2v88internal8compiler6MapRef12oddball_typeEv(%"class.v8::internal::compiler::MapRef"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %78) #10
  %85 = or i8 %84, 1
  %86 = icmp eq i8 %85, 3
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #10
  br label %88

87:                                               ; preds = %9
  br label %88

88:                                               ; preds = %3, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %87, %74
  %89 = phi i1 [ true, %87 ], [ %86, %74 ], [ false, %9 ], [ false, %9 ], [ false, %9 ], [ false, %9 ], [ false, %9 ], [ false, %9 ], [ false, %9 ], [ false, %9 ], [ false, %9 ], [ false, %9 ], [ false, %9 ], [ false, %9 ], [ false, %3 ]
  ret i1 %89
}

declare zeroext i8 @_ZNK2v88internal8compiler6MapRef12oddball_typeEv(%"class.v8::internal::compiler::MapRef"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler14NodeProperties15GetOuterContextEPNS1_4NodeEPm(%"class.v8::internal::compiler::Node"*, i64* nocapture) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %0, i64 0, i32 0
  %4 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %3, align 8
  %5 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %4) #10
  br i1 %5, label %7, label %6, !prof !2

6:                                                ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.5, i64 0, i64 0)) #11
  unreachable

7:                                                ; preds = %2
  %8 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %3, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %8, i64 0, i32 5
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %0, i64 0, i32 3
  %12 = load i32, i32* %11, align 4
  %13 = and i32 %12, 251658240
  %14 = icmp eq i32 %13, 251658240
  %15 = ptrtoint %"class.v8::internal::compiler::Node"* %0 to i64
  %16 = add i64 %15, 32
  br i1 %14, label %17, label %21

17:                                               ; preds = %7
  %18 = inttoptr i64 %16 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = add i64 %19, 16
  br label %21

21:                                               ; preds = %7, %17
  %22 = phi i64 [ %20, %17 ], [ %16, %7 ]
  %23 = inttoptr i64 %22 to %"class.v8::internal::compiler::Node"**
  %24 = sext i32 %10 to i64
  %25 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %23, i64 %24
  %26 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %25, align 8
  %27 = load i64, i64* %1, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %63, label %29

29:                                               ; preds = %21, %54
  %30 = phi %"class.v8::internal::compiler::Node"* [ %59, %54 ], [ %26, %21 ]
  %31 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %30, i64 0, i32 0
  %32 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %31, align 8
  %33 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %32, i64 0, i32 2
  %34 = load i16, i16* %33, align 8
  %35 = and i16 %34, -4
  %36 = icmp eq i16 %35, 816
  br i1 %36, label %37, label %63

37:                                               ; preds = %29
  %38 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %32) #10
  br i1 %38, label %40, label %39, !prof !2

39:                                               ; preds = %37
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.5, i64 0, i64 0)) #11
  unreachable

40:                                               ; preds = %37
  %41 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %31, align 8
  %42 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %41, i64 0, i32 5
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %30, i64 0, i32 3
  %45 = load i32, i32* %44, align 4
  %46 = and i32 %45, 251658240
  %47 = icmp eq i32 %46, 251658240
  %48 = ptrtoint %"class.v8::internal::compiler::Node"* %30 to i64
  %49 = add i64 %48, 32
  br i1 %47, label %50, label %54

50:                                               ; preds = %40
  %51 = inttoptr i64 %49 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = add i64 %52, 16
  br label %54

54:                                               ; preds = %40, %50
  %55 = phi i64 [ %53, %50 ], [ %49, %40 ]
  %56 = inttoptr i64 %55 to %"class.v8::internal::compiler::Node"**
  %57 = sext i32 %43 to i64
  %58 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %56, i64 %57
  %59 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %58, align 8
  %60 = load i64, i64* %1, align 8
  %61 = add i64 %60, -1
  store i64 %61, i64* %1, align 8
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %63, label %29

63:                                               ; preds = %29, %54, %21
  %64 = phi %"class.v8::internal::compiler::Node"* [ %26, %21 ], [ %59, %54 ], [ %30, %29 ]
  ret %"class.v8::internal::compiler::Node"* %64
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN2v88internal8compiler14NodeProperties12GetTypeOrAnyEPKNS1_4NodeE(%"class.v8::internal::compiler::Node"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %0, i64 0, i32 1, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  %5 = select i1 %4, i64 4294967295, i64 %3
  ret i64 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal8compiler14NodeProperties22AllValueInputsAreTypedEPNS1_4NodeE(%"class.v8::internal::compiler::Node"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %0, i64 0, i32 0
  %3 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %3, i64 0, i32 5
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %43

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %0, i64 0, i32 3
  %9 = load i32, i32* %8, align 4
  %10 = and i32 %9, 251658240
  %11 = icmp eq i32 %10, 251658240
  %12 = ptrtoint %"class.v8::internal::compiler::Node"* %0 to i64
  %13 = add i64 %12, 32
  %14 = inttoptr i64 %13 to %"class.v8::internal::compiler::Node"**
  br i1 %11, label %17, label %15

15:                                               ; preds = %7
  %16 = zext i32 %5 to i64
  br label %35

17:                                               ; preds = %7
  %18 = inttoptr i64 %13 to i64*
  %19 = zext i32 %5 to i64
  %20 = load i64, i64* %18, align 8
  %21 = add i64 %20, 16
  %22 = inttoptr i64 %21 to %"class.v8::internal::compiler::Node"**
  br label %23

23:                                               ; preds = %31, %17
  %24 = phi i64 [ 0, %17 ], [ %30, %31 ]
  %25 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %22, i64 %24
  %26 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %25, align 8
  %27 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %26, i64 0, i32 1, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = icmp eq i64 %28, 0
  %30 = add nuw nsw i64 %24, 1
  br i1 %29, label %43, label %31

31:                                               ; preds = %23
  %32 = icmp eq i64 %30, %19
  br i1 %32, label %43, label %23

33:                                               ; preds = %35
  %34 = icmp eq i64 %42, %16
  br i1 %34, label %43, label %35

35:                                               ; preds = %33, %15
  %36 = phi i64 [ 0, %15 ], [ %42, %33 ]
  %37 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %14, i64 %36
  %38 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %37, align 8
  %39 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %38, i64 0, i32 1, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, 0
  %42 = add nuw nsw i64 %36, 1
  br i1 %41, label %43, label %33

43:                                               ; preds = %35, %33, %23, %31, %1
  %44 = phi i1 [ true, %1 ], [ false, %23 ], [ true, %31 ], [ false, %35 ], [ true, %33 ]
  ret i1 %44
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal8compiler14NodeProperties13IsFreshObjectEPNS1_4NodeE(%"class.v8::internal::compiler::Node"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %0, i64 0, i32 0
  %3 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %3, i64 0, i32 2
  %5 = load i16, i16* %4, align 8
  switch i16 %5, label %80 [
    i16 197, label %86
    i16 198, label %86
    i16 49, label %6
  ]

6:                                                ; preds = %1
  %7 = tail call %"class.v8::internal::compiler::CallDescriptor"* @_ZN2v88internal8compiler16CallDescriptorOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %3) #10
  %8 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %7, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 6
  br i1 %10, label %11, label %86

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %0, i64 0, i32 3
  %13 = load i32, i32* %12, align 4
  %14 = and i32 %13, 251658240
  %15 = icmp eq i32 %14, 251658240
  %16 = ptrtoint %"class.v8::internal::compiler::Node"* %0 to i64
  %17 = add i64 %16, 32
  br i1 %15, label %18, label %22

18:                                               ; preds = %11
  %19 = inttoptr i64 %17 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, 16
  br label %22

22:                                               ; preds = %11, %18
  %23 = phi i64 [ %21, %18 ], [ %17, %11 ]
  %24 = inttoptr i64 %23 to i64*
  br label %25

25:                                               ; preds = %71, %22
  %26 = phi i64* [ %24, %22 ], [ %72, %71 ]
  %27 = load i64, i64* %26, align 8
  %28 = inttoptr i64 %27 to %"class.v8::internal::compiler::Node"*
  %29 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %28, i64 0, i32 0
  %30 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %29, align 8
  %31 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %30, i64 0, i32 2
  %32 = load i16, i16* %31, align 8
  switch i16 %32, label %86 [
    i16 59, label %33
    i16 58, label %51
    i16 28, label %73
  ]

33:                                               ; preds = %25
  %34 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %30, i64 0, i32 5
  %35 = load i32, i32* %34, align 4
  %36 = icmp sgt i32 %35, 0
  br i1 %36, label %38, label %37, !prof !2

37:                                               ; preds = %33
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0)) #11
  unreachable

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %28, i64 0, i32 3
  %40 = load i32, i32* %39, align 4
  %41 = and i32 %40, 251658240
  %42 = icmp eq i32 %41, 251658240
  %43 = add i64 %27, 32
  br i1 %42, label %44, label %48

44:                                               ; preds = %38
  %45 = inttoptr i64 %43 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = add i64 %46, 16
  br label %48

48:                                               ; preds = %44, %38
  %49 = phi i64 [ %47, %44 ], [ %43, %38 ]
  %50 = inttoptr i64 %49 to i64*
  br label %71

51:                                               ; preds = %25
  %52 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %30, i64 0, i32 5
  %53 = load i32, i32* %52, align 4
  %54 = icmp sgt i32 %53, 1
  br i1 %54, label %56, label %55, !prof !2

55:                                               ; preds = %51
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0)) #11
  unreachable

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %28, i64 0, i32 3
  %58 = load i32, i32* %57, align 4
  %59 = and i32 %58, 251658240
  %60 = icmp eq i32 %59, 251658240
  %61 = add i64 %27, 32
  br i1 %60, label %62, label %66

62:                                               ; preds = %56
  %63 = inttoptr i64 %61 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = add i64 %64, 16
  br label %66

66:                                               ; preds = %62, %56
  %67 = phi i64 [ %65, %62 ], [ %61, %56 ]
  %68 = inttoptr i64 %67 to %"class.v8::internal::compiler::Node"**
  %69 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %68, i64 1
  %70 = bitcast %"class.v8::internal::compiler::Node"** %69 to i64*
  br label %71

71:                                               ; preds = %66, %48
  %72 = phi i64* [ %70, %66 ], [ %50, %48 ]
  br label %25

73:                                               ; preds = %25
  %74 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %30, i64 1
  %75 = bitcast %"class.v8::internal::compiler::Operator"* %74 to double*
  %76 = load double, double* %75, align 8
  %77 = fptosi double %76 to i32
  %78 = add i32 %77, -1060
  %79 = icmp ult i32 %78, 7
  br i1 %79, label %81, label %86

80:                                               ; preds = %1
  br label %86

81:                                               ; preds = %73
  %82 = trunc i32 %78 to i7
  %83 = lshr i7 -51, %82
  %84 = and i7 %83, 1
  %85 = icmp ne i7 %84, 0
  ret i1 %85

86:                                               ; preds = %25, %73, %1, %1, %80, %6
  %87 = phi i1 [ true, %1 ], [ false, %6 ], [ true, %1 ], [ false, %80 ], [ false, %73 ], [ false, %25 ]
  ret i1 %87
}

declare %"class.v8::internal::compiler::CallDescriptor"* @_ZN2v88internal8compiler16CallDescriptorOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal8compiler14NodeProperties8HashCodeEPNS1_4NodeE(%"class.v8::internal::compiler::Node"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %0, i64 0, i32 0
  %3 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %2, align 8
  %4 = bitcast %"class.v8::internal::compiler::Operator"* %3 to i64 (%"class.v8::internal::compiler::Operator"*)***
  %5 = load i64 (%"class.v8::internal::compiler::Operator"*)**, i64 (%"class.v8::internal::compiler::Operator"*)*** %4, align 8
  %6 = getelementptr inbounds i64 (%"class.v8::internal::compiler::Operator"*)*, i64 (%"class.v8::internal::compiler::Operator"*)** %5, i64 3
  %7 = load i64 (%"class.v8::internal::compiler::Operator"*)*, i64 (%"class.v8::internal::compiler::Operator"*)** %6, align 8
  %8 = tail call i64 %7(%"class.v8::internal::compiler::Operator"* %3) #10
  %9 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %0, i64 0, i32 3
  %10 = load i32, i32* %9, align 4
  %11 = and i32 %10, 251658240
  %12 = icmp eq i32 %11, 251658240
  br i1 %12, label %18, label %13

13:                                               ; preds = %1
  %14 = lshr i32 %10, 24
  %15 = and i32 %14, 15
  %16 = ptrtoint %"class.v8::internal::compiler::Node"* %0 to i64
  %17 = add i64 %16, 32
  br label %25

18:                                               ; preds = %1
  %19 = ptrtoint %"class.v8::internal::compiler::Node"* %0 to i64
  %20 = add i64 %19, 32
  %21 = inttoptr i64 %20 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %22 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %21, align 8
  %23 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %22, i64 0, i32 1
  %24 = load i32, i32* %23, align 8
  br label %25

25:                                               ; preds = %13, %18
  %26 = phi i64 [ %17, %13 ], [ %20, %18 ]
  %27 = phi i32 [ %15, %13 ], [ %24, %18 ]
  %28 = tail call i64 @_ZN2v84base10hash_valueEj(i32 %27) #10
  %29 = tail call i64 @_ZN2v84base12hash_combineEmm(i64 0, i64 %28) #10
  %30 = tail call i64 @_ZN2v84base10hash_valueEm(i64 %8) #10
  %31 = tail call i64 @_ZN2v84base12hash_combineEmm(i64 %29, i64 %30) #10
  %32 = load i32, i32* %9, align 4
  %33 = lshr i32 %32, 24
  %34 = and i32 %33, 15
  %35 = icmp eq i32 %34, 15
  br i1 %35, label %36, label %43

36:                                               ; preds = %25
  %37 = inttoptr i64 %26 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %38 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %37, align 8
  %39 = ptrtoint %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %38 to i64
  %40 = add i64 %39, 16
  %41 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %38, i64 0, i32 1
  %42 = load i32, i32* %41, align 8
  br label %43

43:                                               ; preds = %25, %36
  %44 = phi i32 [ %42, %36 ], [ %34, %25 ]
  %45 = phi i64 [ %40, %36 ], [ %26, %25 ]
  %46 = inttoptr i64 %45 to %"class.v8::internal::compiler::Node"**
  %47 = sext i32 %44 to i64
  %48 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %46, i64 %47
  %49 = icmp eq i32 %44, 0
  br i1 %49, label %50, label %52

50:                                               ; preds = %52, %43
  %51 = phi i64 [ %31, %43 ], [ %62, %52 ]
  ret i64 %51

52:                                               ; preds = %43, %52
  %53 = phi i64 [ %62, %52 ], [ %31, %43 ]
  %54 = phi %"class.v8::internal::compiler::Node"** [ %63, %52 ], [ %46, %43 ]
  %55 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %54, align 8
  %56 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %55, i64 0, i32 3
  %57 = load i32, i32* %56, align 4
  %58 = and i32 %57, 16777215
  %59 = tail call i64 @_ZN2v84base10hash_valueEj(i32 %58) #10
  %60 = tail call i64 @_ZN2v84base12hash_combineEmm(i64 0, i64 %59) #10
  %61 = tail call i64 @_ZN2v84base10hash_valueEm(i64 %53) #10
  %62 = tail call i64 @_ZN2v84base12hash_combineEmm(i64 %60, i64 %61) #10
  %63 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %54, i64 1
  %64 = icmp eq %"class.v8::internal::compiler::Node"** %63, %48
  br i1 %64, label %50, label %52
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal8compiler14NodeProperties6EqualsEPNS1_4NodeES4_(%"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %0, i64 0, i32 0
  %4 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %6 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %5, align 8
  %7 = bitcast %"class.v8::internal::compiler::Operator"* %4 to i1 (%"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"*)***
  %8 = load i1 (%"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"*)**, i1 (%"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"*)*, i1 (%"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"*)** %8, i64 2
  %10 = load i1 (%"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"*)*, i1 (%"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"*)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.v8::internal::compiler::Operator"* %4, %"class.v8::internal::compiler::Operator"* %6) #10
  br i1 %11, label %12, label %92

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %0, i64 0, i32 3
  %14 = load i32, i32* %13, align 4
  %15 = and i32 %14, 251658240
  %16 = icmp eq i32 %15, 251658240
  br i1 %16, label %20, label %17

17:                                               ; preds = %12
  %18 = lshr i32 %14, 24
  %19 = and i32 %18, 15
  br label %27

20:                                               ; preds = %12
  %21 = ptrtoint %"class.v8::internal::compiler::Node"* %0 to i64
  %22 = add i64 %21, 32
  %23 = inttoptr i64 %22 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %24 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %23, align 8
  %25 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %24, i64 0, i32 1
  %26 = load i32, i32* %25, align 8
  br label %27

27:                                               ; preds = %17, %20
  %28 = phi i32 [ %19, %17 ], [ %26, %20 ]
  %29 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %30 = load i32, i32* %29, align 4
  %31 = and i32 %30, 251658240
  %32 = icmp eq i32 %31, 251658240
  br i1 %32, label %36, label %33

33:                                               ; preds = %27
  %34 = lshr i32 %30, 24
  %35 = and i32 %34, 15
  br label %43

36:                                               ; preds = %27
  %37 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %38 = add i64 %37, 32
  %39 = inttoptr i64 %38 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %40 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %39, align 8
  %41 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %40, i64 0, i32 1
  %42 = load i32, i32* %41, align 8
  br label %43

43:                                               ; preds = %33, %36
  %44 = phi i32 [ %35, %33 ], [ %42, %36 ]
  %45 = icmp eq i32 %28, %44
  br i1 %45, label %46, label %92

46:                                               ; preds = %43
  %47 = lshr i32 %14, 24
  %48 = and i32 %47, 15
  %49 = icmp eq i32 %48, 15
  %50 = ptrtoint %"class.v8::internal::compiler::Node"* %0 to i64
  %51 = add i64 %50, 32
  br i1 %49, label %52, label %59

52:                                               ; preds = %46
  %53 = inttoptr i64 %51 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %54 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %53, align 8
  %55 = ptrtoint %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %54 to i64
  %56 = add i64 %55, 16
  %57 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %54, i64 0, i32 1
  %58 = load i32, i32* %57, align 8
  br label %59

59:                                               ; preds = %46, %52
  %60 = phi i32 [ %58, %52 ], [ %48, %46 ]
  %61 = phi i64 [ %56, %52 ], [ %51, %46 ]
  %62 = inttoptr i64 %61 to %"class.v8::internal::compiler::Node"**
  %63 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %64 = add i64 %63, 32
  br i1 %32, label %65, label %69

65:                                               ; preds = %59
  %66 = inttoptr i64 %64 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = add i64 %67, 16
  br label %69

69:                                               ; preds = %59, %65
  %70 = phi i64 [ %68, %65 ], [ %64, %59 ]
  %71 = sext i32 %60 to i64
  %72 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %62, i64 %71
  %73 = icmp eq i32 %60, 0
  br i1 %73, label %92, label %74

74:                                               ; preds = %69
  %75 = inttoptr i64 %70 to %"class.v8::internal::compiler::Node"**
  br label %76

76:                                               ; preds = %74, %88
  %77 = phi %"class.v8::internal::compiler::Node"** [ %89, %88 ], [ %62, %74 ]
  %78 = phi %"class.v8::internal::compiler::Node"** [ %90, %88 ], [ %75, %74 ]
  %79 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %77, align 8
  %80 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %79, i64 0, i32 3
  %81 = load i32, i32* %80, align 4
  %82 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %78, align 8
  %83 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %82, i64 0, i32 3
  %84 = load i32, i32* %83, align 4
  %85 = xor i32 %84, %81
  %86 = and i32 %85, 16777215
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %92

88:                                               ; preds = %76
  %89 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %77, i64 1
  %90 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %78, i64 1
  %91 = icmp eq %"class.v8::internal::compiler::Node"** %89, %72
  br i1 %91, label %92, label %76

92:                                               ; preds = %76, %88, %69, %43, %2
  %93 = phi i1 [ false, %2 ], [ false, %43 ], [ true, %69 ], [ false, %76 ], [ true, %88 ]
  ret i1 %93
}

declare void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"*, %"struct.v8::internal::compiler::Node::Use"*) local_unnamed_addr #4

declare void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"*, %"struct.v8::internal::compiler::Node::Use"*) local_unnamed_addr #4

declare void @_ZN2v88internal8OFStreamC2EP8_IO_FILE(%"class.v8::internal::OFStream"*, i8**, %struct._IO_FILE*) unnamed_addr #4

declare %"class.v8::base::RecursiveMutex"* @_ZN2v88internal12StdoutStream14GetStdoutMutexEv() local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8OFStreamD1Ev(%"class.v8::internal::OFStream"*) unnamed_addr #2 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_ios.base"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 1, i32 0
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %5) #10
  %6 = bitcast %"class.v8::internal::OFStream"* %0 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %6, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #10
  %7 = bitcast %"class.std::__1::basic_ios.base"* %3 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8OFStreamD0Ev(%"class.v8::internal::OFStream"*) unnamed_addr #2 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_ios.base"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 1, i32 0
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %5) #10
  %6 = bitcast %"class.v8::internal::OFStream"* %0 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %6, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #10
  %7 = bitcast %"class.std::__1::basic_ios.base"* %3 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %7) #10
  %8 = bitcast %"class.v8::internal::OFStream"* %0 to i8*
  tail call void @_ZdlPv(i8* %8) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N2v88internal8OFStreamD1Ev(%"class.v8::internal::OFStream"*) unnamed_addr #2 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i8*
  %3 = bitcast %"class.v8::internal::OFStream"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 80
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 8
  %13 = bitcast i8* %12 to %"class.std::__1::basic_streambuf"*
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %13) #10
  %14 = bitcast i8* %8 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %14, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #10
  %15 = bitcast i8* %10 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %15) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N2v88internal8OFStreamD0Ev(%"class.v8::internal::OFStream"*) unnamed_addr #2 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i8*
  %3 = bitcast %"class.v8::internal::OFStream"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 80
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 8
  %13 = bitcast i8* %12 to %"class.std::__1::basic_streambuf"*
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %13) #10
  %14 = bitcast i8* %8 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %14, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #10
  %15 = bitcast i8* %10 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %15) #10
  tail call void @_ZdlPv(i8* %8) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare void @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #2 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #2 align 2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal12StdoutStreamD0Ev(%"class.v8::internal::StdoutStream"*) unnamed_addr #6 comdat align 2 {
  %2 = bitcast %"class.v8::internal::StdoutStream"* %0 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_ios.base"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 1, i32 0
  %6 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %5, align 8
  tail call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %6) #10
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 0, i32 1, i32 0
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %7) #10
  %8 = bitcast %"class.v8::internal::StdoutStream"* %0 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %8, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #10
  %9 = bitcast %"class.std::__1::basic_ios.base"* %3 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %9) #10
  %10 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N2v88internal12StdoutStreamD1Ev(%"class.v8::internal::StdoutStream"*) unnamed_addr #6 comdat align 2 {
  %2 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8*
  %3 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 88
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 80
  %13 = bitcast i8* %12 to %"class.v8::base::RecursiveMutex"**
  %14 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %13, align 8
  tail call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %14) #10
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %15 = getelementptr inbounds i8, i8* %8, i64 8
  %16 = bitcast i8* %15 to %"class.std::__1::basic_streambuf"*
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %16) #10
  %17 = bitcast i8* %8 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %17, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #10
  %18 = bitcast i8* %10 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %18) #10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N2v88internal12StdoutStreamD0Ev(%"class.v8::internal::StdoutStream"*) unnamed_addr #6 comdat align 2 {
  %2 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8*
  %3 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 88
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 80
  %13 = bitcast i8* %12 to %"class.v8::base::RecursiveMutex"**
  %14 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %13, align 8
  tail call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %14) #10
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %15 = getelementptr inbounds i8, i8* %8, i64 8
  %16 = bitcast i8* %15 to %"class.std::__1::basic_streambuf"*
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %16) #10
  %17 = bitcast i8* %8 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %17, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #10
  %18 = bitcast i8* %10 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %18) #10
  tail call void @_ZdlPv(i8* %8) #12
  ret void
}

declare void @_ZN2v84base14RecursiveMutex4LockEv(%"class.v8::base::RecursiveMutex"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"*, i8**) unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"*) local_unnamed_addr #4

declare i64 @_ZN2v84base12hash_combineEmm(i64, i64) local_unnamed_addr #4

declare i64 @_ZN2v84base10hash_valueEj(i32) local_unnamed_addr #4

declare i64 @_ZN2v84base10hash_valueEm(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #2 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #10
  %7 = load i8, i8* %6, align 8, !range !4
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #10
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #10
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #10
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #10
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #2 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #10
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #10
  %32 = icmp ult i64 %17, 23
  br i1 %32, label %42, label %33

33:                                               ; preds = %30
  %34 = add nuw i64 %17, 16
  %35 = and i64 %34, -16
  %36 = tail call i8* @_Znwm(i64 %35) #12
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %36, i8** %37, align 8
  %38 = or i64 %35, -9223372036854775808
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %17, i64* %40, align 8
  %41 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %46

42:                                               ; preds = %30
  %43 = trunc i64 %17 to i8
  %44 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  store i8 %43, i8* %45, align 1
  br label %46

46:                                               ; preds = %33, %42
  %47 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %41, %33 ], [ %44, %42 ]
  %48 = phi i8* [ %36, %33 ], [ %31, %42 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %48, i8 %5, i64 %17, i1 false) #10
  %49 = getelementptr inbounds i8, i8* %48, i64 %17
  store i8 0, i8* %49, align 1
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = select i1 %52, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #10
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %50, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %46
  %65 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %65) #12
  br label %66

66:                                               ; preds = %46, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #10
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #10
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #7

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #4

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler10TryMakeRefINS0_10HeapObjectEvEENS_4base8OptionalINS1_10ref_traitsIT_E8ref_typeEEEPNS1_12JSHeapBrokerENS0_6HandleIS7_EENS4_5FlagsINS1_19GetOrCreateDataFlagEiEE(%"class.v8::base::Optional.1270"* noalias sret, %"class.v8::internal::compiler::JSHeapBroker"*, i64*, i32) local_unnamed_addr #2 comdat {
  %5 = alloca %"class.std::__1::locale", align 8
  %6 = alloca %"class.v8::internal::StdoutStream", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"struct.v8::internal::Brief", align 8
  %9 = alloca %"class.v8::internal::compiler::HeapObjectRef", align 8
  %10 = tail call %"class.v8::internal::compiler::ObjectData"* @_ZN2v88internal8compiler12JSHeapBroker18TryGetOrCreateDataENS0_6HandleINS0_6ObjectEEENS_4base5FlagsINS1_19GetOrCreateDataFlagEiEE(%"class.v8::internal::compiler::JSHeapBroker"* %1, i64* %2, i32 %3) #10
  %11 = icmp eq %"class.v8::internal::compiler::ObjectData"* %10, null
  br i1 %11, label %12, label %79

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %1, i64 0, i32 7
  %14 = load i8, i8* %13, align 4, !range !4
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %77, label %16

16:                                               ; preds = %12
  %17 = bitcast %"class.v8::internal::StdoutStream"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 240, i8* nonnull %17) #10
  %18 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %6, i64 0, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVNSt3__19basic_iosIcNS_11char_traitsIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8
  %19 = bitcast %"class.v8::internal::StdoutStream"* %6 to %"class.v8::internal::OFStream"*
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal8OFStreamC2EP8_IO_FILE(%"class.v8::internal::OFStream"* nonnull %19, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 1), %struct._IO_FILE* %20) #10
  %21 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %6, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %21, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %18, align 8
  %22 = call %"class.v8::base::RecursiveMutex"* @_ZN2v88internal12StdoutStream14GetStdoutMutexEv() #10
  %23 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %6, i64 0, i32 1, i32 0
  store %"class.v8::base::RecursiveMutex"* %22, %"class.v8::base::RecursiveMutex"** %23, align 8
  call void @_ZN2v84base14RecursiveMutex4LockEv(%"class.v8::base::RecursiveMutex"* %22) #10
  %24 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #10
  call void @_ZNK2v88internal8compiler12JSHeapBroker5TraceEv(%"class.std::__1::basic_string"* nonnull sret %7, %"class.v8::internal::compiler::JSHeapBroker"* %1) #10
  %25 = bitcast %"class.v8::internal::StdoutStream"* %6 to %"class.std::__1::basic_ostream"*
  %26 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = zext i8 %28 to i64
  %35 = select i1 %29, i8* %31, i8* %24
  %36 = select i1 %29, i64 %33, i64 %34
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %25, i8* %35, i64 %36) #10
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %25, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i64 0, i64 0), i64 8) #10
  %39 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %25, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.18, i64 0, i64 0), i64 15) #10
  %40 = bitcast %"struct.v8::internal::Brief"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #10
  %41 = load i64, i64* %2, align 8
  %42 = getelementptr inbounds %"struct.v8::internal::Brief", %"struct.v8::internal::Brief"* %8, i64 0, i32 0
  store i64 %41, i64* %42, align 8
  %43 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEERKNS0_5BriefE(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %25, %"struct.v8::internal::Brief"* nonnull dereferenceable(8) %8) #10
  %44 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %25, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0), i64 2) #10
  %45 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %25, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19, i64 0, i64 0), i64 38) #10
  %46 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %25, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0), i64 1) #10
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* nonnull %25, i32 598) #10
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %25, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0), i64 1) #10
  %49 = bitcast %"class.v8::internal::StdoutStream"* %6 to i8**
  %50 = load i8*, i8** %49, align 8
  %51 = getelementptr i8, i8* %50, i64 -24
  %52 = bitcast i8* %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = getelementptr inbounds i8, i8* %17, i64 %53
  %55 = bitcast %"class.std::__1::locale"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #10
  %56 = bitcast i8* %54 to %"class.std::__1::ios_base"*
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %5, %"class.std::__1::ios_base"* %56) #10
  %57 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %5, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #10
  %58 = bitcast %"class.std::__1::locale::facet"* %57 to %"class.std::__1::ctype"*
  %59 = bitcast %"class.std::__1::locale::facet"* %57 to i8 (%"class.std::__1::ctype"*, i8)***
  %60 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %59, align 8
  %61 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %60, i64 7
  %62 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %61, align 8
  %63 = call signext i8 %62(%"class.std::__1::ctype"* %58, i8 signext 10) #10
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #10
  %64 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(%"class.std::__1::basic_ostream"* nonnull %25, i8 signext %63) #10
  %65 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(%"class.std::__1::basic_ostream"* nonnull %25) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #10
  %66 = load i8, i8* %27, align 1
  %67 = icmp slt i8 %66, 0
  br i1 %67, label %68, label %70

68:                                               ; preds = %16
  %69 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %69) #12
  br label %70

70:                                               ; preds = %16, %68
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #10
  %71 = bitcast %"class.v8::internal::StdoutStream"* %6 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %71, align 8
  %72 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %6, i64 0, i32 2
  %73 = bitcast %"class.std::__1::basic_ios.base"* %72 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %73, align 8
  %74 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %23, align 8
  call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %74) #10
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %71, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %73, align 8
  %75 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %6, i64 0, i32 0, i32 1, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %75) #10
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* nonnull %25, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #10
  %76 = bitcast %"class.std::__1::basic_ios.base"* %72 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %76) #10
  call void @llvm.lifetime.end.p0i8(i64 240, i8* nonnull %17) #10
  br label %77

77:                                               ; preds = %12, %70
  %78 = getelementptr inbounds %"class.v8::base::Optional.1270", %"class.v8::base::Optional.1270"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 24, i1 false)
  br label %90

79:                                               ; preds = %4
  %80 = bitcast %"class.v8::internal::compiler::HeapObjectRef"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %80) #10
  %81 = getelementptr inbounds %"class.v8::internal::compiler::HeapObjectRef", %"class.v8::internal::compiler::HeapObjectRef"* %9, i64 0, i32 0
  %82 = getelementptr inbounds %"class.v8::internal::compiler::HeapObjectRef", %"class.v8::internal::compiler::HeapObjectRef"* %9, i64 0, i32 0, i32 0
  store %"class.v8::internal::compiler::ObjectData"* %10, %"class.v8::internal::compiler::ObjectData"** %82, align 8
  %83 = getelementptr inbounds %"class.v8::internal::compiler::HeapObjectRef", %"class.v8::internal::compiler::HeapObjectRef"* %9, i64 0, i32 0, i32 1
  store %"class.v8::internal::compiler::JSHeapBroker"* %1, %"class.v8::internal::compiler::JSHeapBroker"** %83, align 8
  %84 = call zeroext i1 @_ZNK2v88internal8compiler9ObjectRef12IsHeapObjectEv(%"class.v8::internal::compiler::ObjectRef"* nonnull %81) #10
  br i1 %84, label %86, label %85, !prof !2

85:                                               ; preds = %79
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.20, i64 0, i64 0)) #11
  unreachable

86:                                               ; preds = %79
  %87 = getelementptr inbounds %"class.v8::base::Optional.1270", %"class.v8::base::Optional.1270"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %87, align 8
  %88 = getelementptr inbounds %"class.v8::base::Optional.1270", %"class.v8::base::Optional.1270"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %89 = bitcast %"class.v8::internal::compiler::HeapObjectRef"* %88 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* nonnull align 8 %80, i64 16, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %80) #10
  br label %90

90:                                               ; preds = %86, %77
  ret void
}

declare %"class.v8::internal::compiler::ObjectData"* @_ZN2v88internal8compiler12JSHeapBroker18TryGetOrCreateDataENS0_6HandleINS0_6ObjectEEENS_4base5FlagsINS1_19GetOrCreateDataFlagEiEE(%"class.v8::internal::compiler::JSHeapBroker"*, i64*, i32) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEERKNS0_5BriefE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"struct.v8::internal::Brief"* dereferenceable(8)) local_unnamed_addr #4

declare zeroext i1 @_ZNK2v88internal8compiler9ObjectRef12IsHeapObjectEv(%"class.v8::internal::compiler::ObjectRef"*) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEERKNS1_9ObjectRefE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"class.v8::internal::compiler::ObjectRef"* dereferenceable(16)) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(%"class.std::__1::basic_ostream"*, i8 signext) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(%"class.std::__1::basic_ostream"*) local_unnamed_addr #4

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
