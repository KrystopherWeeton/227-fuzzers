; ModuleID = '../../base/timer/lap_timer.cc'
source_filename = "../../base/timer/lap_timer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::LapTimer" = type <{ i32, [4 x i8], %"class.base::TimeDelta", i32, i32, %"class.base::ThreadTicks", %"class.base::TimeTicks", %"class.base::ThreadTicks", %"class.base::TimeTicks", i32, i32, i32, [4 x i8] }>
%"class.base::TimeDelta" = type { i64 }
%"class.base::ThreadTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase.0" }
%"class.base::time_internal::TimeBase.0" = type { i64 }

@_ZN4base8LapTimerC1EiNS_9TimeDeltaEiNS0_11TimerMethodE = hidden unnamed_addr alias void (%"class.base::LapTimer"*, i32, i64, i32, i32), void (%"class.base::LapTimer"*, i32, i64, i32, i32)* @_ZN4base8LapTimerC2EiNS_9TimeDeltaEiNS0_11TimerMethodE
@_ZN4base8LapTimerC1ENS0_11TimerMethodE = hidden unnamed_addr alias void (%"class.base::LapTimer"*, i32), void (%"class.base::LapTimer"*, i32)* @_ZN4base8LapTimerC2ENS0_11TimerMethodE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8LapTimerC2EiNS_9TimeDeltaEiNS0_11TimerMethodE(%"class.base::LapTimer"* nocapture, i32, i64, i32, i32) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 0
  store i32 %1, i32* %6, align 8
  %7 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 2, i32 0
  store i64 %2, i64* %7, align 8
  %8 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 3
  store i32 %3, i32* %8, align 8
  %9 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 4
  store i32 %4, i32* %9, align 4
  %10 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 5, i32 0, i32 0
  %11 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 10
  %12 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 11
  %13 = bitcast i64* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 44, i1 false)
  store i32 %1, i32* %11, align 4
  store i32 %3, i32* %12, align 8
  %14 = icmp eq i32 %4, 0
  br i1 %14, label %15, label %19

15:                                               ; preds = %5
  %16 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 7, i32 0, i32 0
  %17 = tail call i64 @_ZN4base11ThreadTicks3NowEv() #5
  store i64 %17, i64* %10, align 8
  %18 = tail call i64 @_ZN4base11ThreadTicks3NowEv() #5
  store i64 %18, i64* %16, align 8
  br label %24

19:                                               ; preds = %5
  %20 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 8, i32 0, i32 0
  %21 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 6, i32 0, i32 0
  %22 = tail call i64 @_ZN4base9TimeTicks3NowEv() #5
  store i64 %22, i64* %21, align 8
  %23 = tail call i64 @_ZN4base9TimeTicks3NowEv() #5
  store i64 %23, i64* %20, align 8
  br label %24

24:                                               ; preds = %15, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8LapTimer5ResetEv(%"class.base::LapTimer"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 9
  store i32 0, i32* %2, align 8
  %3 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 10
  store i32 %4, i32* %5, align 4
  %6 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 3
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 11
  store i32 %7, i32* %8, align 8
  %9 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 4
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %17

12:                                               ; preds = %1
  %13 = tail call i64 @_ZN4base11ThreadTicks3NowEv() #5
  %14 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 5, i32 0, i32 0
  store i64 %13, i64* %14, align 8
  %15 = tail call i64 @_ZN4base11ThreadTicks3NowEv() #5
  %16 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 7, i32 0, i32 0
  store i64 %15, i64* %16, align 8
  br label %22

17:                                               ; preds = %1
  %18 = tail call i64 @_ZN4base9TimeTicks3NowEv() #5
  %19 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 6, i32 0, i32 0
  store i64 %18, i64* %19, align 8
  %20 = tail call i64 @_ZN4base9TimeTicks3NowEv() #5
  %21 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 8, i32 0, i32 0
  store i64 %20, i64* %21, align 8
  br label %22

22:                                               ; preds = %12, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8LapTimerC2ENS0_11TimerMethodE(%"class.base::LapTimer"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 0
  store i32 5, i32* %3, align 8
  %4 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 2, i32 0
  store i64 3000000, i64* %4, align 8
  %5 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 3
  store i32 10, i32* %5, align 8
  %6 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 4
  store i32 %1, i32* %6, align 4
  %7 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 5, i32 0, i32 0
  %8 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 10
  %9 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 11
  %10 = bitcast i64* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 44, i1 false) #5
  store i32 5, i32* %8, align 4
  store i32 10, i32* %9, align 8
  %11 = icmp eq i32 %1, 0
  br i1 %11, label %12, label %16

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 7, i32 0, i32 0
  %14 = tail call i64 @_ZN4base11ThreadTicks3NowEv() #5
  store i64 %14, i64* %7, align 8
  %15 = tail call i64 @_ZN4base11ThreadTicks3NowEv() #5
  store i64 %15, i64* %13, align 8
  br label %21

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 8, i32 0, i32 0
  %18 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 6, i32 0, i32 0
  %19 = tail call i64 @_ZN4base9TimeTicks3NowEv() #5
  store i64 %19, i64* %18, align 8
  %20 = tail call i64 @_ZN4base9TimeTicks3NowEv() #5
  store i64 %20, i64* %17, align 8
  br label %21

21:                                               ; preds = %12, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8LapTimer5StartEv(%"class.base::LapTimer"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %10

5:                                                ; preds = %1
  %6 = tail call i64 @_ZN4base11ThreadTicks3NowEv() #5
  %7 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 5, i32 0, i32 0
  store i64 %6, i64* %7, align 8
  %8 = tail call i64 @_ZN4base11ThreadTicks3NowEv() #5
  %9 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 7, i32 0, i32 0
  store i64 %8, i64* %9, align 8
  br label %15

10:                                               ; preds = %1
  %11 = tail call i64 @_ZN4base9TimeTicks3NowEv() #5
  %12 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 6, i32 0, i32 0
  store i64 %11, i64* %12, align 8
  %13 = tail call i64 @_ZN4base9TimeTicks3NowEv() #5
  %14 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 8, i32 0, i32 0
  store i64 %13, i64* %14, align 8
  br label %15

15:                                               ; preds = %10, %5
  ret void
}

declare i64 @_ZN4base11ThreadTicks3NowEv() local_unnamed_addr #1

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4base8LapTimer10IsWarmedUpEv(%"class.base::LapTimer"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 10
  %3 = load i32, i32* %2, align 4
  %4 = icmp slt i32 %3, 1
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8LapTimer7NextLapEv(%"class.base::LapTimer"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 10
  %3 = load i32, i32* %2, align 4
  %4 = icmp slt i32 %3, 1
  br i1 %4, label %22, label %5

5:                                                ; preds = %1
  %6 = add nsw i32 %3, -1
  store i32 %6, i32* %2, align 4
  %7 = icmp eq i32 %3, 1
  br i1 %7, label %8, label %43

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 4
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %17

12:                                               ; preds = %8
  %13 = tail call i64 @_ZN4base11ThreadTicks3NowEv() #5
  %14 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 5, i32 0, i32 0
  store i64 %13, i64* %14, align 8
  %15 = tail call i64 @_ZN4base11ThreadTicks3NowEv() #5
  %16 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 7, i32 0, i32 0
  store i64 %15, i64* %16, align 8
  br label %43

17:                                               ; preds = %8
  %18 = tail call i64 @_ZN4base9TimeTicks3NowEv() #5
  %19 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 6, i32 0, i32 0
  store i64 %18, i64* %19, align 8
  %20 = tail call i64 @_ZN4base9TimeTicks3NowEv() #5
  %21 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 8, i32 0, i32 0
  store i64 %20, i64* %21, align 8
  br label %43

22:                                               ; preds = %1
  %23 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 9
  %24 = load i32, i32* %23, align 8
  %25 = add nsw i32 %24, 1
  store i32 %25, i32* %23, align 8
  %26 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 11
  %27 = load i32, i32* %26, align 8
  %28 = add nsw i32 %27, -1
  store i32 %28, i32* %26, align 8
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %43

30:                                               ; preds = %22
  %31 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 4
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %37

34:                                               ; preds = %30
  %35 = tail call i64 @_ZN4base9TimeTicks3NowEv() #5
  %36 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 8, i32 0, i32 0
  store i64 %35, i64* %36, align 8
  br label %40

37:                                               ; preds = %30
  %38 = tail call i64 @_ZN4base11ThreadTicks3NowEv() #5
  %39 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 7, i32 0, i32 0
  store i64 %38, i64* %39, align 8
  br label %40

40:                                               ; preds = %37, %34
  %41 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 3
  %42 = load i32, i32* %41, align 8
  store i32 %42, i32* %26, align 8
  br label %43

43:                                               ; preds = %17, %12, %22, %5, %40
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK4base8LapTimer18GetAccumulatedTimeEv(%"class.base::LapTimer"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 1
  %5 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 5, i32 0, i32 0
  %6 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 7, i32 0, i32 0
  %7 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 6, i32 0, i32 0
  %8 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 8, i32 0, i32 0
  %9 = select i1 %4, i64* %8, i64* %6
  %10 = select i1 %4, i64* %7, i64* %5
  %11 = load i64, i64* %10, align 8
  %12 = load i64, i64* %9, align 8
  %13 = sub nsw i64 %12, %11
  ret i64 %13
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4base8LapTimer19HasTimeLimitExpiredEv(%"class.base::LapTimer"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 1
  %5 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 6, i32 0, i32 0
  %6 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 8, i32 0, i32 0
  %7 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 5, i32 0, i32 0
  %8 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 7, i32 0, i32 0
  %9 = select i1 %4, i64* %6, i64* %8
  %10 = select i1 %4, i64* %5, i64* %7
  %11 = load i64, i64* %10, align 8
  %12 = load i64, i64* %9, align 8
  %13 = sub nsw i64 %12, %11
  %14 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 2, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = icmp sge i64 %13, %15
  ret i1 %16
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4base8LapTimer15HasTimedAllLapsEv(%"class.base::LapTimer"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 9
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 3
  %7 = load i32, i32* %6, align 8
  %8 = srem i32 %3, %7
  %9 = icmp eq i32 %8, 0
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi i1 [ false, %1 ], [ %9, %5 ]
  ret i1 %11
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZNK4base8LapTimer10TimePerLapEv(%"class.base::LapTimer"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 1
  %5 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 6, i32 0, i32 0
  %6 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 8, i32 0, i32 0
  %7 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 5, i32 0, i32 0
  %8 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 7, i32 0, i32 0
  %9 = select i1 %4, i64* %6, i64* %8
  %10 = select i1 %4, i64* %5, i64* %7
  %11 = load i64, i64* %10, align 8
  %12 = load i64, i64* %9, align 8
  %13 = sub nsw i64 %12, %11
  %14 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 9
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %24, label %17, !prof !2

17:                                               ; preds = %1
  %18 = icmp eq i64 %13, -9223372036854775808
  %19 = icmp eq i32 %15, -1
  %20 = and i1 %18, %19
  br i1 %20, label %24, label %21, !prof !2

21:                                               ; preds = %17
  %22 = sext i32 %15 to i64
  %23 = sdiv i64 %13, %22
  br label %30

24:                                               ; preds = %17, %1
  %25 = lshr i64 %13, 63
  %26 = trunc i64 %25 to i32
  %27 = lshr i32 %15, 31
  %28 = icmp eq i32 %27, %26
  %29 = select i1 %28, i64 9223372036854775807, i64 -9223372036854775808
  br label %30

30:                                               ; preds = %21, %24
  %31 = phi i64 [ %23, %21 ], [ %29, %24 ]
  ret i64 %31
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden float @_ZNK4base8LapTimer13LapsPerSecondEv(%"class.base::LapTimer"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 9
  %3 = load i32, i32* %2, align 8
  %4 = sitofp i32 %3 to double
  %5 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 4
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 1
  %8 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 6, i32 0, i32 0
  %9 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 8, i32 0, i32 0
  %10 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 5, i32 0, i32 0
  %11 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 7, i32 0, i32 0
  %12 = select i1 %7, i64* %9, i64* %11
  %13 = select i1 %7, i64* %8, i64* %10
  %14 = load i64, i64* %13, align 8
  %15 = load i64, i64* %12, align 8
  %16 = sub nsw i64 %15, %14
  %17 = add i64 %16, -9223372036854775807
  %18 = icmp ult i64 %17, 2
  br i1 %18, label %22, label %19

19:                                               ; preds = %1
  %20 = sitofp i64 %16 to double
  %21 = fdiv double %20, 1.000000e+06
  br label %25

22:                                               ; preds = %1
  %23 = icmp slt i64 %16, 0
  %24 = select i1 %23, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %25

25:                                               ; preds = %19, %22
  %26 = phi double [ %24, %22 ], [ %21, %19 ]
  %27 = fdiv double %4, %26
  %28 = fptrunc double %27 to float
  ret float %28
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK4base8LapTimer7NumLapsEv(%"class.base::LapTimer"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.base::LapTimer", %"class.base::LapTimer"* %0, i64 0, i32 9
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
