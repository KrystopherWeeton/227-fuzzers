; ModuleID = '../../third_party/pdfium/fpdfsdk/pwl/cpwl_edit_impl.cpp'
source_filename = "../../third_party/pdfium/fpdfsdk/pwl/cpwl_edit_impl.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.CPWL_EditImpl::Iterator" = type { %"class.fxcrt::UnownedPtr", %"class.fxcrt::UnownedPtr.87" }
%"class.fxcrt::UnownedPtr" = type { %class.CPWL_EditImpl* }
%"class.fxcrt::UnownedPtr.87" = type { %"class.CPVT_VariableText::Iterator"* }
%class.CPWL_EditImpl = type { i8, i8, i8, i8, i8, i32, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.1", %"class.fxcrt::UnownedPtr.20", %struct.CPVT_WordPlace, %struct.CPVT_WordPlace, %"class.CPWL_EditImpl::SelectState", %class.CFX_PTemplate, %class.CFX_PTemplate, %"class.std::__1::unique_ptr.57", %"class.CPWL_EditImpl::RefreshState", %class.CFX_PTemplate, %"class.CPWL_EditImpl::UndoStack", %class.CFX_FloatRect }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.CPWL_EditImpl::Provider"* }
%"class.CPWL_EditImpl::Provider" = type { %"class.CPVT_VariableText::Provider" }
%"class.CPVT_VariableText::Provider" = type { i32 (...)**, %"class.fxcrt::UnownedPtr.9" }
%"class.fxcrt::UnownedPtr.9" = type { %class.IPVT_FontMap* }
%class.IPVT_FontMap = type { i32 (...)** }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %class.CPVT_VariableText* }
%class.CPVT_VariableText = type { i8, i8, i8, i8, i16, i32, i32, i32, float, float, float, %"class.std::__1::vector", %"class.fxcrt::UnownedPtr.8", %"class.std::__1::unique_ptr.10", %class.CFX_FloatRect, %class.CPVT_FloatRect }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.4"*, %"class.std::__1::unique_ptr.4"*, %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::unique_ptr.4" = type opaque
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.std::__1::unique_ptr.4"* }
%"class.fxcrt::UnownedPtr.8" = type { %"class.CPVT_VariableText::Provider"* }
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.CPVT_VariableText::Iterator"* }
%class.CPVT_FloatRect = type { %class.CFX_FloatRect }
%"class.fxcrt::UnownedPtr.20" = type { %class.CPWL_Edit* }
%class.CPWL_Edit = type { %class.CPWL_Wnd.base, i8, i8, i8, %class.CFX_FloatRect, %"class.std::__1::unique_ptr.48", %"class.fxcrt::UnownedPtr.54", %"class.fxcrt::UnownedPtr.55", %"class.fxcrt::UnownedPtr.56" }
%class.CPWL_Wnd.base = type <{ i32 (...)**, %"class.fxcrt::Observable", %"class.CPWL_Wnd::CreateParams", %"class.std::__1::unique_ptr.32", %"class.fxcrt::UnownedPtr.38", %"class.std::__1::vector.39", %"class.fxcrt::UnownedPtr.47", %class.CFX_FloatRect, %class.CFX_FloatRect, i8, i8, i8 }>
%"class.fxcrt::Observable" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.21", %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { i64 }
%"class.CPWL_Wnd::CreateParams" = type <{ %class.CFX_FloatRect, %"class.fxcrt::ObservedPtr", %"class.fxcrt::UnownedPtr.29", %"class.fxcrt::UnownedPtr.9", %"class.fxcrt::ObservedPtr.30", %"class.fxcrt::UnownedPtr.31", i32, %struct.CFX_Color, i32, i32, %struct.CFX_Color, %struct.CFX_Color, i32, float, %struct.CPWL_Dash, [4 x i8], %class.CPWL_MsgControl*, i32, [4 x i8] }>
%"class.fxcrt::ObservedPtr" = type { %"class.fxcrt::Observable::ObserverIface", %"class.CFX_Timer::HandlerIface"* }
%"class.fxcrt::Observable::ObserverIface" = type { i32 (...)** }
%"class.CFX_Timer::HandlerIface" = type { i32 (...)**, %"class.fxcrt::Observable" }
%"class.fxcrt::UnownedPtr.29" = type { %class.IPWL_SystemHandler* }
%class.IPWL_SystemHandler = type { i32 (...)** }
%"class.fxcrt::ObservedPtr.30" = type { %"class.fxcrt::Observable::ObserverIface", %"class.CPWL_Wnd::ProviderIface"* }
%"class.CPWL_Wnd::ProviderIface" = type { i32 (...)**, %"class.fxcrt::Observable" }
%"class.fxcrt::UnownedPtr.31" = type { %"class.CPWL_Wnd::FocusHandlerIface"* }
%"class.CPWL_Wnd::FocusHandlerIface" = type { i32 (...)** }
%struct.CFX_Color = type { i32, float, float, float, float }
%struct.CPWL_Dash = type { i32, i32, i32 }
%class.CPWL_MsgControl = type opaque
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.IPWL_SystemHandler::PerWindowData"* }
%"class.IPWL_SystemHandler::PerWindowData" = type { i32 (...)** }
%"class.fxcrt::UnownedPtr.38" = type { %class.CPWL_Wnd* }
%class.CPWL_Wnd = type <{ i32 (...)**, %"class.fxcrt::Observable", %"class.CPWL_Wnd::CreateParams", %"class.std::__1::unique_ptr.32", %"class.fxcrt::UnownedPtr.38", %"class.std::__1::vector.39", %"class.fxcrt::UnownedPtr.47", %class.CFX_FloatRect, %class.CFX_FloatRect, i8, i8, i8, [5 x i8] }>
%"class.std::__1::vector.39" = type { %"class.std::__1::__vector_base.40" }
%"class.std::__1::__vector_base.40" = type { %"class.std::__1::unique_ptr.41"*, %"class.std::__1::unique_ptr.41"*, %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::unique_ptr.41" = type opaque
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.std::__1::unique_ptr.41"* }
%"class.fxcrt::UnownedPtr.47" = type { %class.CPWL_ScrollBar* }
%class.CPWL_ScrollBar = type <{ %class.CPWL_Wnd.base, [5 x i8], %"class.CFX_Timer::CallbackIface", %struct.PWL_SCROLL_INFO, [4 x i8], %"class.fxcrt::UnownedPtr.88", %"class.fxcrt::UnownedPtr.88", %"class.fxcrt::UnownedPtr.88", %"class.std::__1::unique_ptr.89", %struct.PWL_SCROLL_PRIVATEDATA, i8, i8, [2 x i8], float, float, [4 x i8] }>
%"class.CFX_Timer::CallbackIface" = type { i32 (...)** }
%struct.PWL_SCROLL_INFO = type { float, float, float, float, float }
%"class.fxcrt::UnownedPtr.88" = type { %class.CPWL_SBButton* }
%class.CPWL_SBButton = type { %class.CPWL_Wnd.base, i8, i8, [3 x i8] }
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %class.CFX_Timer* }
%class.CFX_Timer = type { i32, %"class.fxcrt::ObservedPtr", %"class.fxcrt::UnownedPtr.92" }
%"class.fxcrt::UnownedPtr.92" = type { %"class.CFX_Timer::CallbackIface"* }
%struct.PWL_SCROLL_PRIVATEDATA = type { %struct.PWL_FLOATRANGE, float, float, float, float }
%struct.PWL_FLOATRANGE = type { float, float }
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %class.CPWL_EditImpl* }
%"class.fxcrt::UnownedPtr.54" = type { %class.CPWL_Caret* }
%class.CPWL_Caret = type opaque
%"class.fxcrt::UnownedPtr.55" = type { %class.IPWL_FillerNotify* }
%class.IPWL_FillerNotify = type opaque
%"class.fxcrt::UnownedPtr.56" = type { %class.CFFL_FormFiller* }
%class.CFFL_FormFiller = type opaque
%struct.CPVT_WordPlace = type { i32, i32, i32 }
%"class.CPWL_EditImpl::SelectState" = type { %struct.CPVT_WordPlace, %struct.CPVT_WordPlace }
%"class.std::__1::unique_ptr.57" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.CPWL_EditImpl::Iterator"* }
%"class.CPWL_EditImpl::RefreshState" = type { %"class.std::__1::vector.63", %"class.std::__1::vector.63", %"class.std::__1::vector.70" }
%"class.std::__1::vector.63" = type { %"class.std::__1::__vector_base.64" }
%"class.std::__1::__vector_base.64" = type { %"struct.CPWL_EditImpl::RefreshState::LineRect"*, %"struct.CPWL_EditImpl::RefreshState::LineRect"*, %"class.std::__1::__compressed_pair.65" }
%"struct.CPWL_EditImpl::RefreshState::LineRect" = type { %struct.CPVT_WordRange, %class.CFX_FloatRect }
%struct.CPVT_WordRange = type { %struct.CPVT_WordPlace, %struct.CPVT_WordPlace }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"struct.CPWL_EditImpl::RefreshState::LineRect"* }
%"class.std::__1::vector.70" = type { %"class.std::__1::__vector_base.71" }
%"class.std::__1::__vector_base.71" = type { %class.CFX_FloatRect*, %class.CFX_FloatRect*, %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %class.CFX_FloatRect* }
%class.CFX_PTemplate = type { float, float }
%"class.CPWL_EditImpl::UndoStack" = type <{ %"class.std::__1::deque", i64, i8, [7 x i8] }>
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.83" }
%"struct.std::__1::__split_buffer" = type { %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"**, %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.210" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"struct.std::__1::__compressed_pair_elem.211" = type { %"class.CPWL_EditImpl::UndoItemIface"* }
%"class.CPWL_EditImpl::UndoItemIface" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.std::__1::unique_ptr.77"** }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%class.CFX_FloatRect = type { float, float, float, float }
%"class.CPVT_VariableText::Iterator" = type { %struct.CPVT_WordPlace, %"class.fxcrt::UnownedPtr.13" }
%"class.fxcrt::UnownedPtr.13" = type { %class.CPVT_VariableText* }
%"class.CPWL_EditImpl::UndoInsertWord" = type { %"class.CPWL_EditImpl::UndoItemIface", %"class.fxcrt::UnownedPtr", %struct.CPVT_WordPlace, %struct.CPVT_WordPlace, i16, i32 }
%"class.CPWL_EditImpl::UndoInsertReturn" = type { %"class.CPWL_EditImpl::UndoItemIface", %"class.fxcrt::UnownedPtr", %struct.CPVT_WordPlace, %struct.CPVT_WordPlace }
%"class.CPWL_EditImpl::UndoReplaceSelection" = type <{ %"class.CPWL_EditImpl::UndoItemIface", %"class.fxcrt::UnownedPtr", i8, [7 x i8] }>
%"class.CPWL_EditImpl::UndoBackspace" = type { %"class.CPWL_EditImpl::UndoItemIface", %"class.fxcrt::UnownedPtr", %struct.CPVT_WordPlace, %struct.CPVT_WordPlace, i16, i32 }
%"class.CPWL_EditImpl::UndoDelete" = type <{ %"class.CPWL_EditImpl::UndoItemIface", %"class.fxcrt::UnownedPtr", %struct.CPVT_WordPlace, %struct.CPVT_WordPlace, i16, [2 x i8], i32, i8, [7 x i8] }>
%"class.CPWL_EditImpl::UndoClear" = type { %"class.CPWL_EditImpl::UndoItemIface", %"class.fxcrt::UnownedPtr", %struct.CPVT_WordRange, %"class.fxcrt::WideString" }
%"class.fxcrt::WideString" = type { %"class.fxcrt::RetainPtr.215" }
%"class.fxcrt::RetainPtr.215" = type { %"class.std::__1::unique_ptr.216" }
%"class.std::__1::unique_ptr.216" = type { %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"class.fxcrt::StringDataTemplate.219"* }
%"class.fxcrt::StringDataTemplate.219" = type <{ i64, i64, i64, [1 x i32], [4 x i8] }>
%"class.CPWL_EditImpl::UndoInsertText" = type <{ %"class.CPWL_EditImpl::UndoItemIface", %"class.fxcrt::UnownedPtr", %struct.CPVT_WordPlace, %struct.CPVT_WordPlace, %"class.fxcrt::WideString", i32, [4 x i8] }>
%class.CPVT_Word = type { i16, i32, %struct.CPVT_WordPlace, %class.CFX_PTemplate, float, float, float, i32, float }
%class.CPVT_Line = type { %struct.CPVT_WordPlace, %struct.CPVT_WordPlace, %class.CFX_PTemplate, float, float, float }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr.96" }
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %class.CPDF_Font* }
%class.CPDF_Font = type { %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.fxcrt::UnownedPtr.99", %class.CFX_Font, %"class.std::__1::vector.148", %"class.fxcrt::RetainPtr.156", %"class.fxcrt::RetainPtr.195", %"class.fxcrt::ByteString", %"class.std::__1::unique_ptr.201", i8, i32, i32, i32, i32, i32, %struct.FX_RECT }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.fxcrt::UnownedPtr.99" = type { %class.CPDF_Document* }
%class.CPDF_Document = type opaque
%class.CFX_Font = type <{ %"class.fxcrt::RetainPtr.100", %"class.std::__1::unique_ptr.105", %"class.fxcrt::RetainPtr.111", %"class.fxcrt::RetainPtr.127", %"class.std::__1::unique_ptr.133", %"class.std::__1::unique_ptr.139", %"class.std::__1::vector.143", %"class.pdfium::span", i8, i8, [6 x i8] }>
%"class.fxcrt::RetainPtr.100" = type { %"class.std::__1::unique_ptr.101" }
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %class.IFX_SeekableReadStream* }
%class.IFX_SeekableReadStream = type opaque
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %struct.FT_StreamRec_* }
%struct.FT_StreamRec_ = type { i8*, i64, i64, %union.FT_StreamDesc_, %union.FT_StreamDesc_, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, void (%struct.FT_StreamRec_*)*, %struct.FT_MemoryRec_*, i8*, i8* }
%union.FT_StreamDesc_ = type { i64 }
%struct.FT_MemoryRec_ = type { i8*, i8* (%struct.FT_MemoryRec_*, i64)*, void (%struct.FT_MemoryRec_*, i8*)*, i8* (%struct.FT_MemoryRec_*, i64, i64, i8*)* }
%"class.fxcrt::RetainPtr.111" = type { %"class.std::__1::unique_ptr.112" }
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %class.CFX_Face* }
%class.CFX_Face = type { %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.std::__1::unique_ptr.115", %"class.fxcrt::RetainPtr.119" }
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %struct.FT_FaceRec_* }
%struct.FT_FaceRec_ = type { i64, i64, i64, i64, i64, i8*, i8*, i32, %struct.FT_Bitmap_Size_*, i32, %struct.FT_CharMapRec_**, %struct.FT_Generic_, %struct.FT_BBox_, i16, i16, i16, i16, i16, i16, i16, i16, %struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, %struct.FT_CharMapRec_*, %struct.FT_DriverRec_*, %struct.FT_MemoryRec_*, %struct.FT_StreamRec_*, %struct.FT_ListRec_, %struct.FT_Generic_, i8*, %struct.FT_Face_InternalRec_* }
%struct.FT_Bitmap_Size_ = type { i16, i16, i64, i64, i64 }
%struct.FT_BBox_ = type { i64, i64, i64, i64 }
%struct.FT_GlyphSlotRec_ = type { %struct.FT_LibraryRec_*, %struct.FT_FaceRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Generic_, %struct.FT_Glyph_Metrics_, i64, i64, %struct.FT_Vector_, i32, %struct.FT_Bitmap_, i32, i32, %struct.FT_Outline_, i32, %struct.FT_SubGlyphRec_*, i8*, i64, i64, i64, i8*, %struct.FT_Slot_InternalRec_* }
%struct.FT_LibraryRec_ = type opaque
%struct.FT_Glyph_Metrics_ = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.FT_Vector_ = type { i64, i64 }
%struct.FT_Bitmap_ = type { i32, i32, i32, i8*, i16, i8, i8, i8* }
%struct.FT_Outline_ = type { i16, i16, %struct.FT_Vector_*, i8*, i16*, i32 }
%struct.FT_SubGlyphRec_ = type opaque
%struct.FT_Slot_InternalRec_ = type opaque
%struct.FT_SizeRec_ = type { %struct.FT_FaceRec_*, %struct.FT_Generic_, %struct.FT_Size_Metrics_, %struct.FT_Size_InternalRec_* }
%struct.FT_Size_Metrics_ = type { i16, i16, i64, i64, i64, i64, i64, i64 }
%struct.FT_Size_InternalRec_ = type opaque
%struct.FT_CharMapRec_ = type { %struct.FT_FaceRec_*, i32, i16, i16 }
%struct.FT_DriverRec_ = type opaque
%struct.FT_ListRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_* }
%struct.FT_ListNodeRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_*, i8* }
%struct.FT_Generic_ = type { i8*, void (i8*)* }
%struct.FT_Face_InternalRec_ = type opaque
%"class.fxcrt::RetainPtr.119" = type { %"class.std::__1::unique_ptr.120" }
%"class.std::__1::unique_ptr.120" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"class.fxcrt::Retainable"* }
%"class.fxcrt::RetainPtr.127" = type { %"class.std::__1::unique_ptr.128" }
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %class.CFX_GlyphCache* }
%class.CFX_GlyphCache = type opaque
%"class.std::__1::unique_ptr.133" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %class.CFX_SubstFont* }
%class.CFX_SubstFont = type opaque
%"class.std::__1::unique_ptr.139" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { i8* }
%"class.std::__1::vector.143" = type { %"class.std::__1::__vector_base.144" }
%"class.std::__1::__vector_base.144" = type { i8*, i8*, %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr.147", i64 }
%"class.fxcrt::UnownedPtr.147" = type { i8* }
%"class.std::__1::vector.148" = type { %"class.std::__1::__vector_base.149" }
%"class.std::__1::__vector_base.149" = type { %"class.std::__1::unique_ptr.150"*, %"class.std::__1::unique_ptr.150"*, %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::unique_ptr.150" = type opaque
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.std::__1::unique_ptr.150"* }
%"class.fxcrt::RetainPtr.156" = type { %"class.std::__1::unique_ptr.157" }
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %class.CPDF_StreamAcc* }
%class.CPDF_StreamAcc = type { %"class.fxcrt::Retainable", %"class.fxcrt::MaybeOwned", i32, %"class.fxcrt::ByteString", %"class.fxcrt::RetainPtr.166", %"class.fxcrt::RetainPtr.187" }
%"class.fxcrt::MaybeOwned" = type { %"class.std::__1::unique_ptr.139", %"class.fxcrt::UnownedPtr.147" }
%"class.fxcrt::RetainPtr.166" = type { %"class.std::__1::unique_ptr.167" }
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %class.CPDF_Dictionary* }
%class.CPDF_Dictionary = type { %class.CPDF_Object, i32, %"class.fxcrt::WeakPtr", %"class.std::__1::map" }
%class.CPDF_Object = type { %"class.fxcrt::Retainable", i32, i32 }
%"class.fxcrt::WeakPtr" = type { %"class.fxcrt::RetainPtr.170" }
%"class.fxcrt::RetainPtr.170" = type { %"class.std::__1::unique_ptr.171" }
%"class.std::__1::unique_ptr.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* }
%"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle" = type { i64, %"class.std::__1::unique_ptr.298" }
%"class.std::__1::unique_ptr.298" = type { %"class.std::__1::__compressed_pair.299" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"class.fxcrt::StringPoolTemplate"* }
%"class.fxcrt::StringPoolTemplate" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.301", %"class.std::__1::__compressed_pair.309", %"class.std::__1::__compressed_pair.314", %"class.std::__1::__compressed_pair.316", [4 x i8] }>
%"class.std::__1::unique_ptr.301" = type { %"class.std::__1::__compressed_pair.302" }
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.303", %"struct.std::__1::__compressed_pair_elem.304" }
%"struct.std::__1::__compressed_pair_elem.303" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.304" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.305" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.314" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { float }
%"class.std::__1::map" = type { %"class.std::__1::__tree.176" }
%"class.std::__1::__tree.176" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.177", %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.fxcrt::RetainPtr.187" = type { %"class.std::__1::unique_ptr.188" }
%"class.std::__1::unique_ptr.188" = type { %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %class.CPDF_Stream* }
%class.CPDF_Stream = type opaque
%"class.fxcrt::RetainPtr.195" = type { %"class.std::__1::unique_ptr.196" }
%"class.std::__1::unique_ptr.196" = type { %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %class.CPDF_Dictionary* }
%"class.fxcrt::ByteString" = type { %"class.fxcrt::RetainPtr.160" }
%"class.fxcrt::RetainPtr.160" = type { %"class.std::__1::unique_ptr.161" }
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>
%"class.std::__1::unique_ptr.201" = type { %"class.std::__1::__compressed_pair.202" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %class.CPDF_ToUnicodeMap* }
%class.CPDF_ToUnicodeMap = type opaque
%struct.FX_RECT = type { i32, i32, i32, i32 }
%"class.std::__1::__vector_base_common" = type { i8 }
%class.CFX_RenderDevice = type { i32 (...)**, %"class.fxcrt::RetainPtr.223", i32, i32, i32, i32, i8, %struct.FX_RECT, %"class.std::__1::unique_ptr.229" }
%"class.fxcrt::RetainPtr.223" = type { %"class.std::__1::unique_ptr.224" }
%"class.std::__1::unique_ptr.224" = type { %"class.std::__1::__compressed_pair.225" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %class.CFX_DIBitmap* }
%class.CFX_DIBitmap = type opaque
%"class.std::__1::unique_ptr.229" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %class.RenderDeviceDriverIface* }
%class.RenderDeviceDriverIface = type { i32 (...)** }
%class.CFX_Matrix = type { float, float, float, float, float, float }
%class.CPDF_RenderOptions = type { i8, i8, %"struct.CPDF_RenderOptions::Options", %"struct.CPDF_RenderOptions::ColorScheme", %"class.fxcrt::RetainPtr.323" }
%"struct.CPDF_RenderOptions::Options" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"struct.CPDF_RenderOptions::ColorScheme" = type { i32, i32, i32, i32 }
%"class.fxcrt::RetainPtr.323" = type { %"class.std::__1::unique_ptr.324" }
%"class.std::__1::unique_ptr.324" = type { %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %class.CPDF_OCContext* }
%class.CPDF_OCContext = type { %"class.fxcrt::Retainable", %"class.fxcrt::UnownedPtr.99", i32, %"class.std::__1::map.327" }
%"class.std::__1::map.327" = type { %"class.std::__1::__tree.328" }
%"class.std::__1::__tree.328" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.329", %"class.std::__1::__compressed_pair.333" }
%"class.std::__1::__compressed_pair.329" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.CFX_RenderDevice::StateRestorer" = type { %"class.fxcrt::UnownedPtr.240" }
%"class.fxcrt::UnownedPtr.240" = type { %class.CFX_RenderDevice* }
%class.CFX_PathData = type { %"class.std::__1::vector.241" }
%"class.std::__1::vector.241" = type { %"class.std::__1::__vector_base.242" }
%"class.std::__1::__vector_base.242" = type { %class.FX_PATHPOINT*, %class.FX_PATHPOINT*, %"class.std::__1::__compressed_pair.243" }
%class.FX_PATHPOINT = type <{ %class.CFX_PTemplate, i8, i8, [2 x i8] }>
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %class.FX_PATHPOINT* }
%struct.CFX_FillRenderOptions = type { i8, i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%class.CFX_GraphStateData = type { i8, i8, float, float, float, %"class.std::__1::vector.248" }
%"class.std::__1::vector.248" = type { %"class.std::__1::__vector_base.249" }
%"class.std::__1::__vector_base.249" = type { float*, float*, %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { float* }
%"class.std::__1::basic_ios" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32, [4 x i8] }>
%"struct.std::__1::__split_buffer.347" = type { %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"**, %"class.std::__1::__compressed_pair.348" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.79", %"struct.std::__1::__compressed_pair_elem.349" }
%"struct.std::__1::__compressed_pair_elem.349" = type { %"class.std::__1::allocator.81"* }
%"class.std::__1::allocator.81" = type { i8 }

$_ZNSt3__112__deque_baseINS_10unique_ptrIN13CPWL_EditImpl13UndoItemIfaceENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE5clearEv = comdat any

$_ZNSt3__15dequeINS_10unique_ptrIN13CPWL_EditImpl13UndoItemIfaceENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPNS_10unique_ptrIN13CPWL_EditImpl13UndoItemIfaceENS_14default_deleteIS3_EEEENS_9allocatorIS7_EEE9push_backEOS7_ = comdat any

$_ZNSt3__114__split_bufferIPNS_10unique_ptrIN13CPWL_EditImpl13UndoItemIfaceENS_14default_deleteIS3_EEEENS_9allocatorIS7_EEE10push_frontEOS7_ = comdat any

$_ZNSt3__114__split_bufferIPNS_10unique_ptrIN13CPWL_EditImpl13UndoItemIfaceENS_14default_deleteIS3_EEEERNS_9allocatorIS7_EEE10push_frontERKS7_ = comdat any

@_ZTVN13CPWL_EditImpl8ProviderE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.CPWL_EditImpl::Provider"*)* @_ZN13CPWL_EditImpl8ProviderD2Ev to i8*), i8* bitcast (void (%"class.CPWL_EditImpl::Provider"*)* @_ZN13CPWL_EditImpl8ProviderD0Ev to i8*), i8* bitcast (i32 (%"class.CPWL_EditImpl::Provider"*, i32, i16)* @_ZN13CPWL_EditImpl8Provider12GetCharWidthEit to i8*), i8* bitcast (i32 (%"class.CPVT_VariableText::Provider"*, i32)* @_ZN17CPVT_VariableText8Provider13GetTypeAscentEi to i8*), i8* bitcast (i32 (%"class.CPVT_VariableText::Provider"*, i32)* @_ZN17CPVT_VariableText8Provider14GetTypeDescentEi to i8*), i8* bitcast (i32 (%"class.CPWL_EditImpl::Provider"*, i16, i32, i32)* @_ZN13CPWL_EditImpl8Provider16GetWordFontIndexEtii to i8*), i8* bitcast (i32 (%"class.CPVT_VariableText::Provider"*)* @_ZN17CPVT_VariableText8Provider19GetDefaultFontIndexEv to i8*)] }, align 8
@_ZTVN13CPWL_EditImpl14UndoInsertWordE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.CPWL_EditImpl::UndoInsertWord"*)* @_ZN13CPWL_EditImpl14UndoInsertWordD2Ev to i8*), i8* bitcast (void (%"class.CPWL_EditImpl::UndoInsertWord"*)* @_ZN13CPWL_EditImpl14UndoInsertWordD0Ev to i8*), i8* bitcast (i32 (%"class.CPWL_EditImpl::UndoInsertWord"*)* @_ZN13CPWL_EditImpl14UndoInsertWord4UndoEv to i8*), i8* bitcast (i32 (%"class.CPWL_EditImpl::UndoInsertWord"*)* @_ZN13CPWL_EditImpl14UndoInsertWord4RedoEv to i8*)] }, align 8
@_ZTVN13CPWL_EditImpl16UndoInsertReturnE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.CPWL_EditImpl::UndoInsertReturn"*)* @_ZN13CPWL_EditImpl16UndoInsertReturnD2Ev to i8*), i8* bitcast (void (%"class.CPWL_EditImpl::UndoInsertReturn"*)* @_ZN13CPWL_EditImpl16UndoInsertReturnD0Ev to i8*), i8* bitcast (i32 (%"class.CPWL_EditImpl::UndoInsertReturn"*)* @_ZN13CPWL_EditImpl16UndoInsertReturn4UndoEv to i8*), i8* bitcast (i32 (%"class.CPWL_EditImpl::UndoInsertReturn"*)* @_ZN13CPWL_EditImpl16UndoInsertReturn4RedoEv to i8*)] }, align 8
@_ZTVN13CPWL_EditImpl20UndoReplaceSelectionE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.CPWL_EditImpl::UndoReplaceSelection"*)* @_ZN13CPWL_EditImpl20UndoReplaceSelectionD2Ev to i8*), i8* bitcast (void (%"class.CPWL_EditImpl::UndoReplaceSelection"*)* @_ZN13CPWL_EditImpl20UndoReplaceSelectionD0Ev to i8*), i8* bitcast (i32 (%"class.CPWL_EditImpl::UndoReplaceSelection"*)* @_ZN13CPWL_EditImpl20UndoReplaceSelection4UndoEv to i8*), i8* bitcast (i32 (%"class.CPWL_EditImpl::UndoReplaceSelection"*)* @_ZN13CPWL_EditImpl20UndoReplaceSelection4RedoEv to i8*)] }, align 8
@_ZTVN13CPWL_EditImpl13UndoBackspaceE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.CPWL_EditImpl::UndoBackspace"*)* @_ZN13CPWL_EditImpl13UndoBackspaceD2Ev to i8*), i8* bitcast (void (%"class.CPWL_EditImpl::UndoBackspace"*)* @_ZN13CPWL_EditImpl13UndoBackspaceD0Ev to i8*), i8* bitcast (i32 (%"class.CPWL_EditImpl::UndoBackspace"*)* @_ZN13CPWL_EditImpl13UndoBackspace4UndoEv to i8*), i8* bitcast (i32 (%"class.CPWL_EditImpl::UndoBackspace"*)* @_ZN13CPWL_EditImpl13UndoBackspace4RedoEv to i8*)] }, align 8
@_ZTVN13CPWL_EditImpl10UndoDeleteE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.CPWL_EditImpl::UndoDelete"*)* @_ZN13CPWL_EditImpl10UndoDeleteD2Ev to i8*), i8* bitcast (void (%"class.CPWL_EditImpl::UndoDelete"*)* @_ZN13CPWL_EditImpl10UndoDeleteD0Ev to i8*), i8* bitcast (i32 (%"class.CPWL_EditImpl::UndoDelete"*)* @_ZN13CPWL_EditImpl10UndoDelete4UndoEv to i8*), i8* bitcast (i32 (%"class.CPWL_EditImpl::UndoDelete"*)* @_ZN13CPWL_EditImpl10UndoDelete4RedoEv to i8*)] }, align 8
@_ZTVN13CPWL_EditImpl9UndoClearE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.CPWL_EditImpl::UndoClear"*)* @_ZN13CPWL_EditImpl9UndoClearD2Ev to i8*), i8* bitcast (void (%"class.CPWL_EditImpl::UndoClear"*)* @_ZN13CPWL_EditImpl9UndoClearD0Ev to i8*), i8* bitcast (i32 (%"class.CPWL_EditImpl::UndoClear"*)* @_ZN13CPWL_EditImpl9UndoClear4UndoEv to i8*), i8* bitcast (i32 (%"class.CPWL_EditImpl::UndoClear"*)* @_ZN13CPWL_EditImpl9UndoClear4RedoEv to i8*)] }, align 8
@_ZTVN13CPWL_EditImpl14UndoInsertTextE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.CPWL_EditImpl::UndoInsertText"*)* @_ZN13CPWL_EditImpl14UndoInsertTextD2Ev to i8*), i8* bitcast (void (%"class.CPWL_EditImpl::UndoInsertText"*)* @_ZN13CPWL_EditImpl14UndoInsertTextD0Ev to i8*), i8* bitcast (i32 (%"class.CPWL_EditImpl::UndoInsertText"*)* @_ZN13CPWL_EditImpl14UndoInsertText4UndoEv to i8*), i8* bitcast (i32 (%"class.CPWL_EditImpl::UndoInsertText"*)* @_ZN13CPWL_EditImpl14UndoInsertText4RedoEv to i8*)] }, align 8
@.str.1 = private unnamed_addr constant [3 x i32] [i32 13, i32 10, i32 0], align 4
@_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [5 x i8*], [5 x i8*] }, align 8
@_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant [4 x i8*], align 8
@_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [16 x i8*] }, align 8

@_ZN13CPWL_EditImpl8IteratorC1EPS_PN17CPVT_VariableText8IteratorE = hidden unnamed_addr alias void (%"class.CPWL_EditImpl::Iterator"*, %class.CPWL_EditImpl*, %"class.CPVT_VariableText::Iterator"*), void (%"class.CPWL_EditImpl::Iterator"*, %class.CPWL_EditImpl*, %"class.CPVT_VariableText::Iterator"*)* @_ZN13CPWL_EditImpl8IteratorC2EPS_PN17CPVT_VariableText8IteratorE
@_ZN13CPWL_EditImpl8IteratorD1Ev = hidden unnamed_addr alias void (%"class.CPWL_EditImpl::Iterator"*), void (%"class.CPWL_EditImpl::Iterator"*)* @_ZN13CPWL_EditImpl8IteratorD2Ev
@_ZN13CPWL_EditImpl8ProviderC1EP12IPVT_FontMap = hidden unnamed_addr alias void (%"class.CPWL_EditImpl::Provider"*, %class.IPVT_FontMap*), void (%"class.CPWL_EditImpl::Provider"*, %class.IPVT_FontMap*)* @_ZN13CPWL_EditImpl8ProviderC2EP12IPVT_FontMap
@_ZN13CPWL_EditImpl8ProviderD1Ev = hidden unnamed_addr alias void (%"class.CPWL_EditImpl::Provider"*), void (%"class.CPWL_EditImpl::Provider"*)* @_ZN13CPWL_EditImpl8ProviderD2Ev
@_ZN13CPWL_EditImpl12RefreshStateC1Ev = hidden unnamed_addr alias void (%"class.CPWL_EditImpl::RefreshState"*), void (%"class.CPWL_EditImpl::RefreshState"*)* @_ZN13CPWL_EditImpl12RefreshStateC2Ev
@_ZN13CPWL_EditImpl12RefreshStateD1Ev = hidden unnamed_addr alias void (%"class.CPWL_EditImpl::RefreshState"*), void (%"class.CPWL_EditImpl::RefreshState"*)* @_ZN13CPWL_EditImpl12RefreshStateD2Ev
@_ZN13CPWL_EditImpl9UndoStackC1Ev = hidden unnamed_addr alias void (%"class.CPWL_EditImpl::UndoStack"*), void (%"class.CPWL_EditImpl::UndoStack"*)* @_ZN13CPWL_EditImpl9UndoStackC2Ev
@_ZN13CPWL_EditImpl9UndoStackD1Ev = hidden unnamed_addr alias void (%"class.CPWL_EditImpl::UndoStack"*), void (%"class.CPWL_EditImpl::UndoStack"*)* @_ZN13CPWL_EditImpl9UndoStackD2Ev
@_ZN13CPWL_EditImpl14UndoInsertWordC1EPS_RK14CPVT_WordPlaceS4_ti = hidden unnamed_addr alias void (%"class.CPWL_EditImpl::UndoInsertWord"*, %class.CPWL_EditImpl*, %struct.CPVT_WordPlace*, %struct.CPVT_WordPlace*, i16, i32), void (%"class.CPWL_EditImpl::UndoInsertWord"*, %class.CPWL_EditImpl*, %struct.CPVT_WordPlace*, %struct.CPVT_WordPlace*, i16, i32)* @_ZN13CPWL_EditImpl14UndoInsertWordC2EPS_RK14CPVT_WordPlaceS4_ti
@_ZN13CPWL_EditImpl14UndoInsertWordD1Ev = hidden unnamed_addr alias void (%"class.CPWL_EditImpl::UndoInsertWord"*), void (%"class.CPWL_EditImpl::UndoInsertWord"*)* @_ZN13CPWL_EditImpl14UndoInsertWordD2Ev
@_ZN13CPWL_EditImpl16UndoInsertReturnC1EPS_RK14CPVT_WordPlaceS4_ = hidden unnamed_addr alias void (%"class.CPWL_EditImpl::UndoInsertReturn"*, %class.CPWL_EditImpl*, %struct.CPVT_WordPlace*, %struct.CPVT_WordPlace*), void (%"class.CPWL_EditImpl::UndoInsertReturn"*, %class.CPWL_EditImpl*, %struct.CPVT_WordPlace*, %struct.CPVT_WordPlace*)* @_ZN13CPWL_EditImpl16UndoInsertReturnC2EPS_RK14CPVT_WordPlaceS4_
@_ZN13CPWL_EditImpl16UndoInsertReturnD1Ev = hidden unnamed_addr alias void (%"class.CPWL_EditImpl::UndoInsertReturn"*), void (%"class.CPWL_EditImpl::UndoInsertReturn"*)* @_ZN13CPWL_EditImpl16UndoInsertReturnD2Ev
@_ZN13CPWL_EditImpl20UndoReplaceSelectionC1EPS_b = hidden unnamed_addr alias void (%"class.CPWL_EditImpl::UndoReplaceSelection"*, %class.CPWL_EditImpl*, i1), void (%"class.CPWL_EditImpl::UndoReplaceSelection"*, %class.CPWL_EditImpl*, i1)* @_ZN13CPWL_EditImpl20UndoReplaceSelectionC2EPS_b
@_ZN13CPWL_EditImpl20UndoReplaceSelectionD1Ev = hidden unnamed_addr alias void (%"class.CPWL_EditImpl::UndoReplaceSelection"*), void (%"class.CPWL_EditImpl::UndoReplaceSelection"*)* @_ZN13CPWL_EditImpl20UndoReplaceSelectionD2Ev
@_ZN13CPWL_EditImpl13UndoBackspaceC1EPS_RK14CPVT_WordPlaceS4_ti = hidden unnamed_addr alias void (%"class.CPWL_EditImpl::UndoBackspace"*, %class.CPWL_EditImpl*, %struct.CPVT_WordPlace*, %struct.CPVT_WordPlace*, i16, i32), void (%"class.CPWL_EditImpl::UndoBackspace"*, %class.CPWL_EditImpl*, %struct.CPVT_WordPlace*, %struct.CPVT_WordPlace*, i16, i32)* @_ZN13CPWL_EditImpl13UndoBackspaceC2EPS_RK14CPVT_WordPlaceS4_ti
@_ZN13CPWL_EditImpl13UndoBackspaceD1Ev = hidden unnamed_addr alias void (%"class.CPWL_EditImpl::UndoBackspace"*), void (%"class.CPWL_EditImpl::UndoBackspace"*)* @_ZN13CPWL_EditImpl13UndoBackspaceD2Ev
@_ZN13CPWL_EditImpl10UndoDeleteC1EPS_RK14CPVT_WordPlaceS4_tib = hidden unnamed_addr alias void (%"class.CPWL_EditImpl::UndoDelete"*, %class.CPWL_EditImpl*, %struct.CPVT_WordPlace*, %struct.CPVT_WordPlace*, i16, i32, i1), void (%"class.CPWL_EditImpl::UndoDelete"*, %class.CPWL_EditImpl*, %struct.CPVT_WordPlace*, %struct.CPVT_WordPlace*, i16, i32, i1)* @_ZN13CPWL_EditImpl10UndoDeleteC2EPS_RK14CPVT_WordPlaceS4_tib
@_ZN13CPWL_EditImpl10UndoDeleteD1Ev = hidden unnamed_addr alias void (%"class.CPWL_EditImpl::UndoDelete"*), void (%"class.CPWL_EditImpl::UndoDelete"*)* @_ZN13CPWL_EditImpl10UndoDeleteD2Ev
@_ZN13CPWL_EditImpl9UndoClearC1EPS_RK14CPVT_WordRangeRKN5fxcrt10WideStringE = hidden unnamed_addr alias void (%"class.CPWL_EditImpl::UndoClear"*, %class.CPWL_EditImpl*, %struct.CPVT_WordRange*, %"class.fxcrt::WideString"*), void (%"class.CPWL_EditImpl::UndoClear"*, %class.CPWL_EditImpl*, %struct.CPVT_WordRange*, %"class.fxcrt::WideString"*)* @_ZN13CPWL_EditImpl9UndoClearC2EPS_RK14CPVT_WordRangeRKN5fxcrt10WideStringE
@_ZN13CPWL_EditImpl9UndoClearD1Ev = hidden unnamed_addr alias void (%"class.CPWL_EditImpl::UndoClear"*), void (%"class.CPWL_EditImpl::UndoClear"*)* @_ZN13CPWL_EditImpl9UndoClearD2Ev
@_ZN13CPWL_EditImpl14UndoInsertTextC1EPS_RK14CPVT_WordPlaceS4_RKN5fxcrt10WideStringEi = hidden unnamed_addr alias void (%"class.CPWL_EditImpl::UndoInsertText"*, %class.CPWL_EditImpl*, %struct.CPVT_WordPlace*, %struct.CPVT_WordPlace*, %"class.fxcrt::WideString"*, i32), void (%"class.CPWL_EditImpl::UndoInsertText"*, %class.CPWL_EditImpl*, %struct.CPVT_WordPlace*, %struct.CPVT_WordPlace*, %"class.fxcrt::WideString"*, i32)* @_ZN13CPWL_EditImpl14UndoInsertTextC2EPS_RK14CPVT_WordPlaceS4_RKN5fxcrt10WideStringEi
@_ZN13CPWL_EditImpl14UndoInsertTextD1Ev = hidden unnamed_addr alias void (%"class.CPWL_EditImpl::UndoInsertText"*), void (%"class.CPWL_EditImpl::UndoInsertText"*)* @_ZN13CPWL_EditImpl14UndoInsertTextD2Ev
@_ZN13CPWL_EditImplC1Ev = hidden unnamed_addr alias void (%class.CPWL_EditImpl*), void (%class.CPWL_EditImpl*)* @_ZN13CPWL_EditImplC2Ev
@_ZN13CPWL_EditImplD1Ev = hidden unnamed_addr alias void (%class.CPWL_EditImpl*), void (%class.CPWL_EditImpl*)* @_ZN13CPWL_EditImplD2Ev
@_ZN13CPWL_EditImpl11SelectStateC1Ev = hidden unnamed_addr alias void (%"class.CPWL_EditImpl::SelectState"*), void (%"class.CPWL_EditImpl::SelectState"*)* @_ZN13CPWL_EditImpl11SelectStateC2Ev
@_ZN13CPWL_EditImpl11SelectStateC1ERK14CPVT_WordRange = hidden unnamed_addr alias void (%"class.CPWL_EditImpl::SelectState"*, %struct.CPVT_WordRange*), void (%"class.CPWL_EditImpl::SelectState"*, %struct.CPVT_WordRange*)* @_ZN13CPWL_EditImpl11SelectStateC2ERK14CPVT_WordRange

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN13CPWL_EditImpl8IteratorC2EPS_PN17CPVT_VariableText8IteratorE(%"class.CPWL_EditImpl::Iterator"* nocapture, %class.CPWL_EditImpl*, %"class.CPVT_VariableText::Iterator"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.CPWL_EditImpl::Iterator", %"class.CPWL_EditImpl::Iterator"* %0, i64 0, i32 0, i32 0
  store %class.CPWL_EditImpl* %1, %class.CPWL_EditImpl** %4, align 8
  %5 = getelementptr inbounds %"class.CPWL_EditImpl::Iterator", %"class.CPWL_EditImpl::Iterator"* %0, i64 0, i32 1, i32 0
  store %"class.CPVT_VariableText::Iterator"* %2, %"class.CPVT_VariableText::Iterator"** %5, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN13CPWL_EditImpl8IteratorD2Ev(%"class.CPWL_EditImpl::Iterator"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN13CPWL_EditImpl8Iterator8NextWordEv(%"class.CPWL_EditImpl::Iterator"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.CPWL_EditImpl::Iterator", %"class.CPWL_EditImpl::Iterator"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.CPVT_VariableText::Iterator"*, %"class.CPVT_VariableText::Iterator"** %2, align 8
  %4 = tail call zeroext i1 @_ZN17CPVT_VariableText8Iterator8NextWordEv(%"class.CPVT_VariableText::Iterator"* %3) #12
  ret i1 %4
}

declare zeroext i1 @_ZN17CPVT_VariableText8Iterator8NextWordEv(%"class.CPVT_VariableText::Iterator"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK13CPWL_EditImpl8Iterator7GetWordER9CPVT_Word(%"class.CPWL_EditImpl::Iterator"* nocapture readonly, %class.CPVT_Word* dereferenceable(48)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.CPWL_EditImpl::Iterator", %"class.CPWL_EditImpl::Iterator"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.CPVT_VariableText::Iterator"*, %"class.CPVT_VariableText::Iterator"** %3, align 8
  %5 = tail call zeroext i1 @_ZNK17CPVT_VariableText8Iterator7GetWordER9CPVT_Word(%"class.CPVT_VariableText::Iterator"* %4, %class.CPVT_Word* dereferenceable(48) %1) #12
  br i1 %5, label %6, label %52

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.CPWL_EditImpl::Iterator", %"class.CPWL_EditImpl::Iterator"* %0, i64 0, i32 0, i32 0
  %8 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %7, align 8
  %9 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %8, i64 0, i32 7, i32 0, i32 0, i32 0
  %10 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %9, align 8, !noalias !2
  %11 = tail call { <2 x float>, <2 x float> } @_ZNK17CPVT_VariableText14GetContentRectEv(%class.CPVT_VariableText* %10) #12, !noalias !2
  %12 = extractvalue { <2 x float>, <2 x float> } %11, 0
  %13 = extractvalue { <2 x float>, <2 x float> } %11, 1
  %14 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %9, align 8, !noalias !2
  %15 = tail call dereferenceable(16) %class.CFX_FloatRect* @_ZNK17CPVT_VariableText12GetPlateRectEv(%class.CPVT_VariableText* %14) #12, !noalias !2
  %16 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %15, i64 0, i32 0
  %17 = load float, float* %16, align 4, !noalias !2
  %18 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %15, i64 0, i32 1
  %19 = load float, float* %18, align 4, !noalias !2
  %20 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %15, i64 0, i32 3
  %21 = load float, float* %20, align 4, !noalias !2
  %22 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %8, i64 0, i32 5
  %23 = load i32, i32* %22, align 8, !noalias !2
  switch i32 %23, label %37 [
    i32 2, label %31
    i32 1, label %24
  ]

24:                                               ; preds = %6
  %25 = fsub float %21, %19
  %26 = extractelement <2 x float> %13, i32 1
  %27 = extractelement <2 x float> %12, i32 1
  %28 = fsub float %26, %27
  %29 = fsub float %25, %28
  %30 = fmul float %29, 5.000000e-01
  br label %37

31:                                               ; preds = %6
  %32 = fsub float %21, %19
  %33 = extractelement <2 x float> %13, i32 1
  %34 = extractelement <2 x float> %12, i32 1
  %35 = fsub float %33, %34
  %36 = fsub float %32, %35
  br label %37

37:                                               ; preds = %6, %24, %31
  %38 = phi float [ %36, %31 ], [ %30, %24 ], [ 0.000000e+00, %6 ]
  %39 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %1, i64 0, i32 3, i32 0
  %40 = load float, float* %39, align 4, !noalias !2
  %41 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %8, i64 0, i32 12, i32 0
  %42 = load float, float* %41, align 8, !noalias !2
  %43 = fsub float %42, %17
  %44 = fsub float %40, %43
  %45 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %1, i64 0, i32 3, i32 1
  %46 = load float, float* %45, align 4, !noalias !2
  %47 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %8, i64 0, i32 12, i32 1
  %48 = load float, float* %47, align 4, !noalias !2
  %49 = fadd float %38, %48
  %50 = fsub float %49, %21
  %51 = fsub float %46, %50
  store float %44, float* %39, align 4
  store float %51, float* %45, align 4
  br label %52

52:                                               ; preds = %2, %37
  %53 = phi i1 [ true, %37 ], [ false, %2 ]
  ret i1 %53
}

declare zeroext i1 @_ZNK17CPVT_VariableText8Iterator7GetWordER9CPVT_Word(%"class.CPVT_VariableText::Iterator"*, %class.CPVT_Word* dereferenceable(48)) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK13CPWL_EditImpl8VTToEditERK13CFX_PTemplateIfE(%class.CFX_PTemplate* noalias nocapture sret, %class.CPWL_EditImpl* nocapture readonly, %class.CFX_PTemplate* nocapture readonly dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %1, i64 0, i32 7, i32 0, i32 0, i32 0
  %5 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %4, align 8
  %6 = tail call { <2 x float>, <2 x float> } @_ZNK17CPVT_VariableText14GetContentRectEv(%class.CPVT_VariableText* %5) #12
  %7 = extractvalue { <2 x float>, <2 x float> } %6, 0
  %8 = extractvalue { <2 x float>, <2 x float> } %6, 1
  %9 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %4, align 8
  %10 = tail call dereferenceable(16) %class.CFX_FloatRect* @_ZNK17CPVT_VariableText12GetPlateRectEv(%class.CPVT_VariableText* %9) #12
  %11 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %10, i64 0, i32 0
  %12 = load float, float* %11, align 4
  %13 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %10, i64 0, i32 1
  %14 = load float, float* %13, align 4
  %15 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %10, i64 0, i32 3
  %16 = load float, float* %15, align 4
  %17 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %1, i64 0, i32 5
  %18 = load i32, i32* %17, align 8
  switch i32 %18, label %32 [
    i32 2, label %26
    i32 1, label %19
  ]

19:                                               ; preds = %3
  %20 = fsub float %16, %14
  %21 = extractelement <2 x float> %8, i32 1
  %22 = extractelement <2 x float> %7, i32 1
  %23 = fsub float %21, %22
  %24 = fsub float %20, %23
  %25 = fmul float %24, 5.000000e-01
  br label %32

26:                                               ; preds = %3
  %27 = fsub float %16, %14
  %28 = extractelement <2 x float> %8, i32 1
  %29 = extractelement <2 x float> %7, i32 1
  %30 = fsub float %28, %29
  %31 = fsub float %27, %30
  br label %32

32:                                               ; preds = %3, %26, %19
  %33 = phi float [ %31, %26 ], [ %25, %19 ], [ 0.000000e+00, %3 ]
  %34 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %2, i64 0, i32 0
  %35 = load float, float* %34, align 4
  %36 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %1, i64 0, i32 12, i32 0
  %37 = load float, float* %36, align 8
  %38 = fsub float %37, %12
  %39 = fsub float %35, %38
  %40 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %2, i64 0, i32 1
  %41 = load float, float* %40, align 4
  %42 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %1, i64 0, i32 12, i32 1
  %43 = load float, float* %42, align 4
  %44 = fadd float %33, %43
  %45 = fsub float %44, %16
  %46 = fsub float %41, %45
  %47 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %0, i64 0, i32 0
  store float %39, float* %47, align 4
  %48 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %0, i64 0, i32 1
  store float %46, float* %48, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK13CPWL_EditImpl8Iterator7GetLineER9CPVT_Line(%"class.CPWL_EditImpl::Iterator"* nocapture readonly, %class.CPVT_Line* dereferenceable(44)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.CPWL_EditImpl::Iterator", %"class.CPWL_EditImpl::Iterator"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.CPVT_VariableText::Iterator"*, %"class.CPVT_VariableText::Iterator"** %3, align 8
  %5 = tail call zeroext i1 @_ZNK17CPVT_VariableText8Iterator7GetLineER9CPVT_Line(%"class.CPVT_VariableText::Iterator"* %4, %class.CPVT_Line* dereferenceable(44) %1) #12
  br i1 %5, label %6, label %52

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.CPWL_EditImpl::Iterator", %"class.CPWL_EditImpl::Iterator"* %0, i64 0, i32 0, i32 0
  %8 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %7, align 8
  %9 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %8, i64 0, i32 7, i32 0, i32 0, i32 0
  %10 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %9, align 8, !noalias !5
  %11 = tail call { <2 x float>, <2 x float> } @_ZNK17CPVT_VariableText14GetContentRectEv(%class.CPVT_VariableText* %10) #12, !noalias !5
  %12 = extractvalue { <2 x float>, <2 x float> } %11, 0
  %13 = extractvalue { <2 x float>, <2 x float> } %11, 1
  %14 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %9, align 8, !noalias !5
  %15 = tail call dereferenceable(16) %class.CFX_FloatRect* @_ZNK17CPVT_VariableText12GetPlateRectEv(%class.CPVT_VariableText* %14) #12, !noalias !5
  %16 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %15, i64 0, i32 0
  %17 = load float, float* %16, align 4, !noalias !5
  %18 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %15, i64 0, i32 1
  %19 = load float, float* %18, align 4, !noalias !5
  %20 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %15, i64 0, i32 3
  %21 = load float, float* %20, align 4, !noalias !5
  %22 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %8, i64 0, i32 5
  %23 = load i32, i32* %22, align 8, !noalias !5
  switch i32 %23, label %37 [
    i32 2, label %31
    i32 1, label %24
  ]

24:                                               ; preds = %6
  %25 = fsub float %21, %19
  %26 = extractelement <2 x float> %13, i32 1
  %27 = extractelement <2 x float> %12, i32 1
  %28 = fsub float %26, %27
  %29 = fsub float %25, %28
  %30 = fmul float %29, 5.000000e-01
  br label %37

31:                                               ; preds = %6
  %32 = fsub float %21, %19
  %33 = extractelement <2 x float> %13, i32 1
  %34 = extractelement <2 x float> %12, i32 1
  %35 = fsub float %33, %34
  %36 = fsub float %32, %35
  br label %37

37:                                               ; preds = %6, %24, %31
  %38 = phi float [ %36, %31 ], [ %30, %24 ], [ 0.000000e+00, %6 ]
  %39 = getelementptr inbounds %class.CPVT_Line, %class.CPVT_Line* %1, i64 0, i32 2, i32 0
  %40 = load float, float* %39, align 4, !noalias !5
  %41 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %8, i64 0, i32 12, i32 0
  %42 = load float, float* %41, align 8, !noalias !5
  %43 = fsub float %42, %17
  %44 = fsub float %40, %43
  %45 = getelementptr inbounds %class.CPVT_Line, %class.CPVT_Line* %1, i64 0, i32 2, i32 1
  %46 = load float, float* %45, align 4, !noalias !5
  %47 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %8, i64 0, i32 12, i32 1
  %48 = load float, float* %47, align 4, !noalias !5
  %49 = fadd float %38, %48
  %50 = fsub float %49, %21
  %51 = fsub float %46, %50
  store float %44, float* %39, align 4
  store float %51, float* %45, align 4
  br label %52

52:                                               ; preds = %2, %37
  %53 = phi i1 [ true, %37 ], [ false, %2 ]
  ret i1 %53
}

declare zeroext i1 @_ZNK17CPVT_VariableText8Iterator7GetLineER9CPVT_Line(%"class.CPVT_VariableText::Iterator"*, %class.CPVT_Line* dereferenceable(44)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl8Iterator5SetAtEi(%"class.CPWL_EditImpl::Iterator"* nocapture readonly, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.CPWL_EditImpl::Iterator", %"class.CPWL_EditImpl::Iterator"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.CPVT_VariableText::Iterator"*, %"class.CPVT_VariableText::Iterator"** %3, align 8
  tail call void @_ZN17CPVT_VariableText8Iterator5SetAtEi(%"class.CPVT_VariableText::Iterator"* %4, i32 %1) #12
  ret void
}

declare void @_ZN17CPVT_VariableText8Iterator5SetAtEi(%"class.CPVT_VariableText::Iterator"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl8Iterator5SetAtERK14CPVT_WordPlace(%"class.CPWL_EditImpl::Iterator"* nocapture readonly, %struct.CPVT_WordPlace* dereferenceable(12)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.CPWL_EditImpl::Iterator", %"class.CPWL_EditImpl::Iterator"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.CPVT_VariableText::Iterator"*, %"class.CPVT_VariableText::Iterator"** %3, align 8
  tail call void @_ZN17CPVT_VariableText8Iterator5SetAtERK14CPVT_WordPlace(%"class.CPVT_VariableText::Iterator"* %4, %struct.CPVT_WordPlace* dereferenceable(12) %1) #12
  ret void
}

declare void @_ZN17CPVT_VariableText8Iterator5SetAtERK14CPVT_WordPlace(%"class.CPVT_VariableText::Iterator"*, %struct.CPVT_WordPlace* dereferenceable(12)) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(12) %struct.CPVT_WordPlace* @_ZNK13CPWL_EditImpl8Iterator5GetAtEv(%"class.CPWL_EditImpl::Iterator"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.CPWL_EditImpl::Iterator", %"class.CPWL_EditImpl::Iterator"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.CPVT_VariableText::Iterator"*, %"class.CPVT_VariableText::Iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.CPVT_VariableText::Iterator", %"class.CPVT_VariableText::Iterator"* %3, i64 0, i32 0
  ret %struct.CPVT_WordPlace* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl8ProviderC2EP12IPVT_FontMap(%"class.CPWL_EditImpl::Provider"*, %class.IPVT_FontMap*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.CPWL_EditImpl::Provider", %"class.CPWL_EditImpl::Provider"* %0, i64 0, i32 0
  tail call void @_ZN17CPVT_VariableText8ProviderC2EP12IPVT_FontMap(%"class.CPVT_VariableText::Provider"* %3, %class.IPVT_FontMap* %1) #12
  %4 = getelementptr inbounds %"class.CPWL_EditImpl::Provider", %"class.CPWL_EditImpl::Provider"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN13CPWL_EditImpl8ProviderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  ret void
}

declare void @_ZN17CPVT_VariableText8ProviderC2EP12IPVT_FontMap(%"class.CPVT_VariableText::Provider"*, %class.IPVT_FontMap*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN17CPVT_VariableText8ProviderD2Ev(%"class.CPVT_VariableText::Provider"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl8ProviderD2Ev(%"class.CPWL_EditImpl::Provider"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.CPWL_EditImpl::Provider", %"class.CPWL_EditImpl::Provider"* %0, i64 0, i32 0
  tail call void @_ZN17CPVT_VariableText8ProviderD2Ev(%"class.CPVT_VariableText::Provider"* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl8ProviderD0Ev(%"class.CPWL_EditImpl::Provider"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.CPWL_EditImpl::Provider", %"class.CPWL_EditImpl::Provider"* %0, i64 0, i32 0
  tail call void @_ZN17CPVT_VariableText8ProviderD2Ev(%"class.CPVT_VariableText::Provider"* %2) #12
  %3 = bitcast %"class.CPWL_EditImpl::Provider"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #13
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN13CPWL_EditImpl8Provider12GetCharWidthEit(%"class.CPWL_EditImpl::Provider"* nocapture readonly, i32, i16 zeroext) unnamed_addr #2 align 2 {
  %4 = alloca %"class.fxcrt::RetainPtr", align 8
  %5 = bitcast %"class.fxcrt::RetainPtr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CPDF_Font* inttoptr (i64 -6148914691236517206 to %class.CPDF_Font*), %class.CPDF_Font** %6, align 8
  %7 = getelementptr inbounds %"class.CPWL_EditImpl::Provider", %"class.CPWL_EditImpl::Provider"* %0, i64 0, i32 0, i32 1, i32 0
  %8 = load %class.IPVT_FontMap*, %class.IPVT_FontMap** %7, align 8
  %9 = bitcast %class.IPVT_FontMap* %8 to void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)***
  %10 = load void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)**, void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)*, void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)** %10, i64 2
  %12 = load void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)*, void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)** %11, align 8
  call void %12(%"class.fxcrt::RetainPtr"* nonnull sret %4, %class.IPVT_FontMap* %8, i32 %1) #12
  %13 = load %class.CPDF_Font*, %class.CPDF_Font** %6, align 8
  %14 = icmp eq %class.CPDF_Font* %13, null
  br i1 %14, label %15, label %16

15:                                               ; preds = %3
  store %class.CPDF_Font* null, %class.CPDF_Font** %6, align 8
  br label %62

16:                                               ; preds = %3
  %17 = bitcast %class.CPDF_Font* %13 to i1 (%class.CPDF_Font*)***
  %18 = load i1 (%class.CPDF_Font*)**, i1 (%class.CPDF_Font*)*** %17, align 8
  %19 = getelementptr inbounds i1 (%class.CPDF_Font*)*, i1 (%class.CPDF_Font*)** %18, i64 16
  %20 = load i1 (%class.CPDF_Font*)*, i1 (%class.CPDF_Font*)** %19, align 8
  %21 = call zeroext i1 %20(%class.CPDF_Font* nonnull %13) #12
  br i1 %21, label %22, label %30

22:                                               ; preds = %16
  %23 = load %class.CPDF_Font*, %class.CPDF_Font** %6, align 8
  %24 = zext i16 %2 to i32
  %25 = bitcast %class.CPDF_Font* %23 to i32 (%class.CPDF_Font*, i32)***
  %26 = load i32 (%class.CPDF_Font*, i32)**, i32 (%class.CPDF_Font*, i32)*** %25, align 8
  %27 = getelementptr inbounds i32 (%class.CPDF_Font*, i32)*, i32 (%class.CPDF_Font*, i32)** %26, i64 22
  %28 = load i32 (%class.CPDF_Font*, i32)*, i32 (%class.CPDF_Font*, i32)** %27, align 8
  %29 = call i32 %28(%class.CPDF_Font* %23, i32 signext %24) #12
  br label %37

30:                                               ; preds = %16
  %31 = load %class.IPVT_FontMap*, %class.IPVT_FontMap** %7, align 8
  %32 = bitcast %class.IPVT_FontMap* %31 to i32 (%class.IPVT_FontMap*, i32, i16)***
  %33 = load i32 (%class.IPVT_FontMap*, i32, i16)**, i32 (%class.IPVT_FontMap*, i32, i16)*** %32, align 8
  %34 = getelementptr inbounds i32 (%class.IPVT_FontMap*, i32, i16)*, i32 (%class.IPVT_FontMap*, i32, i16)** %33, i64 5
  %35 = load i32 (%class.IPVT_FontMap*, i32, i16)*, i32 (%class.IPVT_FontMap*, i32, i16)** %34, align 8
  %36 = call i32 %35(%class.IPVT_FontMap* %31, i32 %1, i16 zeroext %2) #12
  br label %37

37:                                               ; preds = %30, %22
  %38 = phi i32 [ %29, %22 ], [ %36, %30 ]
  %39 = icmp eq i32 %38, -1
  br i1 %39, label %47, label %40

40:                                               ; preds = %37
  %41 = load %class.CPDF_Font*, %class.CPDF_Font** %6, align 8
  %42 = bitcast %class.CPDF_Font* %41 to i32 (%class.CPDF_Font*, i32)***
  %43 = load i32 (%class.CPDF_Font*, i32)**, i32 (%class.CPDF_Font*, i32)*** %42, align 8
  %44 = getelementptr inbounds i32 (%class.CPDF_Font*, i32)*, i32 (%class.CPDF_Font*, i32)** %43, i64 24
  %45 = load i32 (%class.CPDF_Font*, i32)*, i32 (%class.CPDF_Font*, i32)** %44, align 8
  %46 = call i32 %45(%class.CPDF_Font* %41, i32 %38) #12
  br label %47

47:                                               ; preds = %40, %37
  %48 = phi i32 [ 0, %37 ], [ %46, %40 ]
  %49 = load %class.CPDF_Font*, %class.CPDF_Font** %6, align 8
  store %class.CPDF_Font* null, %class.CPDF_Font** %6, align 8
  %50 = icmp eq %class.CPDF_Font* %49, null
  br i1 %50, label %62, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %49, i64 0, i32 0, i32 1
  %53 = load i64, i64* %52, align 8
  %54 = add nsw i64 %53, -1
  store i64 %54, i64* %52, align 8
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %56, label %62

56:                                               ; preds = %51
  %57 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %49, i64 0, i32 0
  %58 = bitcast %class.CPDF_Font* %49 to void (%"class.fxcrt::Retainable"*)***
  %59 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %59, i64 1
  %61 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %60, align 8
  call void %61(%"class.fxcrt::Retainable"* nonnull %57) #12
  br label %62

62:                                               ; preds = %15, %47, %51, %56
  %63 = phi i32 [ 0, %15 ], [ %48, %47 ], [ %48, %51 ], [ %48, %56 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  ret i32 %63
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN13CPWL_EditImpl8Provider16GetWordFontIndexEtii(%"class.CPWL_EditImpl::Provider"* nocapture readonly, i16 zeroext, i32, i32) unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %"class.CPWL_EditImpl::Provider", %"class.CPWL_EditImpl::Provider"* %0, i64 0, i32 0, i32 1, i32 0
  %6 = load %class.IPVT_FontMap*, %class.IPVT_FontMap** %5, align 8
  %7 = bitcast %class.IPVT_FontMap* %6 to i32 (%class.IPVT_FontMap*, i16, i32, i32)***
  %8 = load i32 (%class.IPVT_FontMap*, i16, i32, i32)**, i32 (%class.IPVT_FontMap*, i16, i32, i32)*** %7, align 8
  %9 = getelementptr inbounds i32 (%class.IPVT_FontMap*, i16, i32, i32)*, i32 (%class.IPVT_FontMap*, i16, i32, i32)** %8, i64 4
  %10 = load i32 (%class.IPVT_FontMap*, i16, i32, i32)*, i32 (%class.IPVT_FontMap*, i16, i32, i32)** %9, align 8
  %11 = tail call i32 %10(%class.IPVT_FontMap* %6, i16 zeroext %1, i32 %2, i32 %3) #12
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl12RefreshStateC2Ev(%"class.CPWL_EditImpl::RefreshState"* nocapture) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.CPWL_EditImpl::RefreshState"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 72, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl12RefreshStateD2Ev(%"class.CPWL_EditImpl::RefreshState"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.CPWL_EditImpl::RefreshState", %"class.CPWL_EditImpl::RefreshState"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %class.CFX_FloatRect*, %class.CFX_FloatRect** %2, align 8
  %4 = icmp eq %class.CFX_FloatRect* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %class.CFX_FloatRect* %3 to i64
  %7 = getelementptr inbounds %"class.CPWL_EditImpl::RefreshState", %"class.CPWL_EditImpl::RefreshState"* %0, i64 0, i32 2, i32 0, i32 1
  %8 = bitcast %class.CFX_FloatRect** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %class.CFX_FloatRect* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #13
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"class.CPWL_EditImpl::RefreshState", %"class.CPWL_EditImpl::RefreshState"* %0, i64 0, i32 1, i32 0, i32 0
  %12 = load %"struct.CPWL_EditImpl::RefreshState::LineRect"*, %"struct.CPWL_EditImpl::RefreshState::LineRect"** %11, align 8
  %13 = icmp eq %"struct.CPWL_EditImpl::RefreshState::LineRect"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = ptrtoint %"struct.CPWL_EditImpl::RefreshState::LineRect"* %12 to i64
  %16 = getelementptr inbounds %"class.CPWL_EditImpl::RefreshState", %"class.CPWL_EditImpl::RefreshState"* %0, i64 0, i32 1, i32 0, i32 1
  %17 = bitcast %"struct.CPWL_EditImpl::RefreshState::LineRect"** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = bitcast %"struct.CPWL_EditImpl::RefreshState::LineRect"* %12 to i8*
  tail call void @_ZdlPv(i8* %18) #13
  br label %19

19:                                               ; preds = %10, %14
  %20 = getelementptr inbounds %"class.CPWL_EditImpl::RefreshState", %"class.CPWL_EditImpl::RefreshState"* %0, i64 0, i32 0, i32 0, i32 0
  %21 = load %"struct.CPWL_EditImpl::RefreshState::LineRect"*, %"struct.CPWL_EditImpl::RefreshState::LineRect"** %20, align 8
  %22 = icmp eq %"struct.CPWL_EditImpl::RefreshState::LineRect"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = ptrtoint %"struct.CPWL_EditImpl::RefreshState::LineRect"* %21 to i64
  %25 = getelementptr inbounds %"class.CPWL_EditImpl::RefreshState", %"class.CPWL_EditImpl::RefreshState"* %0, i64 0, i32 0, i32 0, i32 1
  %26 = bitcast %"struct.CPWL_EditImpl::RefreshState::LineRect"** %25 to i64*
  store i64 %24, i64* %26, align 8
  %27 = bitcast %"struct.CPWL_EditImpl::RefreshState::LineRect"* %21 to i8*
  tail call void @_ZdlPv(i8* %27) #13
  br label %28

28:                                               ; preds = %19, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl12RefreshState12BeginRefreshEv(%"class.CPWL_EditImpl::RefreshState"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.CPWL_EditImpl::RefreshState", %"class.CPWL_EditImpl::RefreshState"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.std::__1::vector.63", %"class.std::__1::vector.63"* %2, i64 0, i32 0, i32 0
  %4 = load %"struct.CPWL_EditImpl::RefreshState::LineRect"*, %"struct.CPWL_EditImpl::RefreshState::LineRect"** %3, align 8
  %5 = icmp eq %"struct.CPWL_EditImpl::RefreshState::LineRect"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.CPWL_EditImpl::RefreshState::LineRect"* %4 to i64
  %8 = getelementptr inbounds %"class.CPWL_EditImpl::RefreshState", %"class.CPWL_EditImpl::RefreshState"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast %"struct.CPWL_EditImpl::RefreshState::LineRect"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.CPWL_EditImpl::RefreshState::LineRect"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #13
  %11 = bitcast %"class.std::__1::vector.63"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #12
  br label %12

12:                                               ; preds = %1, %6
  %13 = bitcast %"class.CPWL_EditImpl::RefreshState"* %0 to <2 x i64>*
  %14 = load <2 x i64>, <2 x i64>* %13, align 8
  %15 = bitcast %"class.std::__1::vector.63"* %2 to <2 x i64>*
  store <2 x i64> %14, <2 x i64>* %15, align 8
  %16 = getelementptr inbounds %"class.CPWL_EditImpl::RefreshState", %"class.CPWL_EditImpl::RefreshState"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"struct.CPWL_EditImpl::RefreshState::LineRect"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.CPWL_EditImpl::RefreshState", %"class.CPWL_EditImpl::RefreshState"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %20 = bitcast %"struct.CPWL_EditImpl::RefreshState::LineRect"** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = getelementptr inbounds %"class.CPWL_EditImpl::RefreshState", %"class.CPWL_EditImpl::RefreshState"* %0, i64 0, i32 2
  %22 = bitcast %"class.std::__1::vector.70"* %21 to i64*
  %23 = bitcast %"class.CPWL_EditImpl::RefreshState"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 24, i1 false)
  %24 = load i64, i64* %22, align 8
  %25 = getelementptr inbounds %"class.CPWL_EditImpl::RefreshState", %"class.CPWL_EditImpl::RefreshState"* %0, i64 0, i32 2, i32 0, i32 1
  %26 = bitcast %class.CFX_FloatRect** %25 to i64*
  store i64 %24, i64* %26, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl12RefreshState4PushERK14CPVT_WordRangeRK13CFX_FloatRect(%"class.CPWL_EditImpl::RefreshState"*, %struct.CPVT_WordRange* nocapture readonly dereferenceable(24), %class.CFX_FloatRect* nocapture readonly dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %4 = alloca %"struct.CPWL_EditImpl::RefreshState::LineRect", align 4
  %5 = bitcast %"struct.CPWL_EditImpl::RefreshState::LineRect"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5)
  %6 = bitcast %struct.CPVT_WordRange* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %5, i8* align 4 %6, i64 24, i1 false) #12
  %7 = getelementptr inbounds %"struct.CPWL_EditImpl::RefreshState::LineRect", %"struct.CPWL_EditImpl::RefreshState::LineRect"* %4, i64 0, i32 1
  %8 = bitcast %class.CFX_FloatRect* %7 to i8*
  %9 = bitcast %class.CFX_FloatRect* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 %9, i64 16, i1 false) #12
  %10 = getelementptr inbounds %"class.CPWL_EditImpl::RefreshState", %"class.CPWL_EditImpl::RefreshState"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"struct.CPWL_EditImpl::RefreshState::LineRect"*, %"struct.CPWL_EditImpl::RefreshState::LineRect"** %10, align 8
  %12 = getelementptr inbounds %"class.CPWL_EditImpl::RefreshState", %"class.CPWL_EditImpl::RefreshState"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %13 = load %"struct.CPWL_EditImpl::RefreshState::LineRect"*, %"struct.CPWL_EditImpl::RefreshState::LineRect"** %12, align 8
  %14 = icmp ult %"struct.CPWL_EditImpl::RefreshState::LineRect"* %11, %13
  %15 = ptrtoint %"struct.CPWL_EditImpl::RefreshState::LineRect"* %13 to i64
  br i1 %14, label %16, label %21

16:                                               ; preds = %3
  %17 = bitcast %"struct.CPWL_EditImpl::RefreshState::LineRect"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %17, i8* nonnull align 4 %5, i64 40, i1 false) #12
  %18 = getelementptr inbounds %"struct.CPWL_EditImpl::RefreshState::LineRect", %"struct.CPWL_EditImpl::RefreshState::LineRect"* %11, i64 1
  %19 = ptrtoint %"struct.CPWL_EditImpl::RefreshState::LineRect"* %18 to i64
  %20 = bitcast %"struct.CPWL_EditImpl::RefreshState::LineRect"** %10 to i64*
  store i64 %19, i64* %20, align 8
  br label %74

21:                                               ; preds = %3
  %22 = ptrtoint %"struct.CPWL_EditImpl::RefreshState::LineRect"* %11 to i64
  %23 = bitcast %"struct.CPWL_EditImpl::RefreshState::LineRect"** %10 to i64*
  %24 = bitcast %"class.CPWL_EditImpl::RefreshState"* %0 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %22, %25
  %27 = sdiv exact i64 %26, 40
  %28 = add nsw i64 %27, 1
  %29 = icmp ugt i64 %28, 461168601842738790
  br i1 %29, label %30, label %32

30:                                               ; preds = %21
  %31 = bitcast %"class.CPWL_EditImpl::RefreshState"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %31) #14
  unreachable

32:                                               ; preds = %21
  %33 = bitcast %"struct.CPWL_EditImpl::RefreshState::LineRect"** %12 to i64*
  %34 = sub i64 %15, %25
  %35 = sdiv exact i64 %34, 40
  %36 = icmp ult i64 %35, 230584300921369395
  br i1 %36, label %37, label %42

37:                                               ; preds = %32
  %38 = shl nsw i64 %35, 1
  %39 = icmp ult i64 %38, %28
  %40 = select i1 %39, i64 %28, i64 %38
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %47, label %42

42:                                               ; preds = %37, %32
  %43 = phi i64 [ %40, %37 ], [ 461168601842738790, %32 ]
  %44 = mul i64 %43, 40
  %45 = tail call i8* @_Znwm(i64 %44) #13
  %46 = bitcast i8* %45 to %"struct.CPWL_EditImpl::RefreshState::LineRect"*
  br label %47

47:                                               ; preds = %42, %37
  %48 = phi i64 [ %43, %42 ], [ 0, %37 ]
  %49 = phi %"struct.CPWL_EditImpl::RefreshState::LineRect"* [ %46, %42 ], [ null, %37 ]
  %50 = getelementptr inbounds %"struct.CPWL_EditImpl::RefreshState::LineRect", %"struct.CPWL_EditImpl::RefreshState::LineRect"* %49, i64 %27
  %51 = getelementptr inbounds %"struct.CPWL_EditImpl::RefreshState::LineRect", %"struct.CPWL_EditImpl::RefreshState::LineRect"* %49, i64 %48
  %52 = ptrtoint %"struct.CPWL_EditImpl::RefreshState::LineRect"* %51 to i64
  %53 = bitcast %"struct.CPWL_EditImpl::RefreshState::LineRect"* %50 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %53, i8* nonnull align 4 %5, i64 40, i1 false) #12
  %54 = getelementptr inbounds %"struct.CPWL_EditImpl::RefreshState::LineRect", %"struct.CPWL_EditImpl::RefreshState::LineRect"* %50, i64 1
  %55 = ptrtoint %"struct.CPWL_EditImpl::RefreshState::LineRect"* %54 to i64
  %56 = getelementptr inbounds %"class.CPWL_EditImpl::RefreshState", %"class.CPWL_EditImpl::RefreshState"* %0, i64 0, i32 0, i32 0, i32 0
  %57 = load %"struct.CPWL_EditImpl::RefreshState::LineRect"*, %"struct.CPWL_EditImpl::RefreshState::LineRect"** %56, align 8
  %58 = load i64, i64* %23, align 8
  %59 = ptrtoint %"struct.CPWL_EditImpl::RefreshState::LineRect"* %57 to i64
  %60 = sub i64 %58, %59
  %61 = sdiv exact i64 %60, -40
  %62 = getelementptr inbounds %"struct.CPWL_EditImpl::RefreshState::LineRect", %"struct.CPWL_EditImpl::RefreshState::LineRect"* %50, i64 %61
  %63 = ptrtoint %"struct.CPWL_EditImpl::RefreshState::LineRect"* %62 to i64
  %64 = icmp sgt i64 %60, 0
  br i1 %64, label %65, label %69

65:                                               ; preds = %47
  %66 = bitcast %"struct.CPWL_EditImpl::RefreshState::LineRect"* %62 to i8*
  %67 = bitcast %"struct.CPWL_EditImpl::RefreshState::LineRect"* %57 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %66, i8* align 4 %67, i64 %60, i1 false) #12
  %68 = load %"struct.CPWL_EditImpl::RefreshState::LineRect"*, %"struct.CPWL_EditImpl::RefreshState::LineRect"** %56, align 8
  br label %69

69:                                               ; preds = %65, %47
  %70 = phi %"struct.CPWL_EditImpl::RefreshState::LineRect"* [ %57, %47 ], [ %68, %65 ]
  store i64 %63, i64* %24, align 8
  store i64 %55, i64* %23, align 8
  store i64 %52, i64* %33, align 8
  %71 = icmp eq %"struct.CPWL_EditImpl::RefreshState::LineRect"* %70, null
  br i1 %71, label %74, label %72

72:                                               ; preds = %69
  %73 = bitcast %"struct.CPWL_EditImpl::RefreshState::LineRect"* %70 to i8*
  tail call void @_ZdlPv(i8* %73) #13
  br label %74

74:                                               ; preds = %16, %69, %72
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl12RefreshState9NoAnalyseEv(%"class.CPWL_EditImpl::RefreshState"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.CPWL_EditImpl::RefreshState", %"class.CPWL_EditImpl::RefreshState"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"struct.CPWL_EditImpl::RefreshState::LineRect"*, %"struct.CPWL_EditImpl::RefreshState::LineRect"** %2, align 8
  %4 = getelementptr inbounds %"class.CPWL_EditImpl::RefreshState", %"class.CPWL_EditImpl::RefreshState"* %0, i64 0, i32 1, i32 0, i32 1
  %5 = load %"struct.CPWL_EditImpl::RefreshState::LineRect"*, %"struct.CPWL_EditImpl::RefreshState::LineRect"** %4, align 8
  %6 = icmp eq %"struct.CPWL_EditImpl::RefreshState::LineRect"* %3, %5
  br i1 %6, label %7, label %13

7:                                                ; preds = %13, %1
  %8 = getelementptr inbounds %"class.CPWL_EditImpl::RefreshState", %"class.CPWL_EditImpl::RefreshState"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"struct.CPWL_EditImpl::RefreshState::LineRect"*, %"struct.CPWL_EditImpl::RefreshState::LineRect"** %8, align 8
  %10 = getelementptr inbounds %"class.CPWL_EditImpl::RefreshState", %"class.CPWL_EditImpl::RefreshState"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"struct.CPWL_EditImpl::RefreshState::LineRect"*, %"struct.CPWL_EditImpl::RefreshState::LineRect"** %10, align 8
  %12 = icmp eq %"struct.CPWL_EditImpl::RefreshState::LineRect"* %9, %11
  br i1 %12, label %18, label %19

13:                                               ; preds = %1, %13
  %14 = phi %"struct.CPWL_EditImpl::RefreshState::LineRect"* [ %16, %13 ], [ %3, %1 ]
  %15 = getelementptr inbounds %"struct.CPWL_EditImpl::RefreshState::LineRect", %"struct.CPWL_EditImpl::RefreshState::LineRect"* %14, i64 0, i32 1
  tail call void @_ZN13CPWL_EditImpl12RefreshState3AddERK13CFX_FloatRect(%"class.CPWL_EditImpl::RefreshState"* %0, %class.CFX_FloatRect* dereferenceable(16) %15)
  %16 = getelementptr inbounds %"struct.CPWL_EditImpl::RefreshState::LineRect", %"struct.CPWL_EditImpl::RefreshState::LineRect"* %14, i64 1
  %17 = icmp eq %"struct.CPWL_EditImpl::RefreshState::LineRect"* %16, %5
  br i1 %17, label %7, label %13

18:                                               ; preds = %19, %7
  ret void

19:                                               ; preds = %7, %19
  %20 = phi %"struct.CPWL_EditImpl::RefreshState::LineRect"* [ %22, %19 ], [ %9, %7 ]
  %21 = getelementptr inbounds %"struct.CPWL_EditImpl::RefreshState::LineRect", %"struct.CPWL_EditImpl::RefreshState::LineRect"* %20, i64 0, i32 1
  tail call void @_ZN13CPWL_EditImpl12RefreshState3AddERK13CFX_FloatRect(%"class.CPWL_EditImpl::RefreshState"* %0, %class.CFX_FloatRect* dereferenceable(16) %21)
  %22 = getelementptr inbounds %"struct.CPWL_EditImpl::RefreshState::LineRect", %"struct.CPWL_EditImpl::RefreshState::LineRect"* %20, i64 1
  %23 = icmp eq %"struct.CPWL_EditImpl::RefreshState::LineRect"* %22, %11
  br i1 %23, label %18, label %19
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl12RefreshState3AddERK13CFX_FloatRect(%"class.CPWL_EditImpl::RefreshState"*, %class.CFX_FloatRect* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %3 = alloca %class.CFX_FloatRect, align 4
  %4 = getelementptr inbounds %"class.CPWL_EditImpl::RefreshState", %"class.CPWL_EditImpl::RefreshState"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %4, i64 0, i32 0, i32 0
  %6 = load %class.CFX_FloatRect*, %class.CFX_FloatRect** %5, align 8
  %7 = getelementptr inbounds %"class.CPWL_EditImpl::RefreshState", %"class.CPWL_EditImpl::RefreshState"* %0, i64 0, i32 2, i32 0, i32 1
  %8 = load %class.CFX_FloatRect*, %class.CFX_FloatRect** %7, align 8
  %9 = icmp eq %class.CFX_FloatRect* %6, %8
  br i1 %9, label %18, label %12

10:                                               ; preds = %12
  %11 = icmp eq %class.CFX_FloatRect* %15, %8
  br i1 %11, label %16, label %12

12:                                               ; preds = %2, %10
  %13 = phi %class.CFX_FloatRect* [ %15, %10 ], [ %6, %2 ]
  %14 = tail call zeroext i1 @_ZNK13CFX_FloatRect8ContainsERKS_(%class.CFX_FloatRect* %13, %class.CFX_FloatRect* dereferenceable(16) %1) #12
  %15 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %13, i64 1
  br i1 %14, label %88, label %10

16:                                               ; preds = %10
  %17 = load %class.CFX_FloatRect*, %class.CFX_FloatRect** %7, align 8
  br label %18

18:                                               ; preds = %16, %2
  %19 = phi %class.CFX_FloatRect* [ %17, %16 ], [ %6, %2 ]
  %20 = bitcast %class.CFX_FloatRect* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20)
  %21 = bitcast %class.CFX_FloatRect* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %20, i8* align 4 %21, i64 16, i1 false)
  %22 = getelementptr inbounds %"class.CPWL_EditImpl::RefreshState", %"class.CPWL_EditImpl::RefreshState"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %23 = load %class.CFX_FloatRect*, %class.CFX_FloatRect** %22, align 8
  %24 = icmp ult %class.CFX_FloatRect* %19, %23
  %25 = ptrtoint %class.CFX_FloatRect* %23 to i64
  br i1 %24, label %26, label %31

26:                                               ; preds = %18
  %27 = bitcast %class.CFX_FloatRect* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %27, i8* nonnull align 4 %20, i64 16, i1 false) #12
  %28 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %19, i64 1
  %29 = ptrtoint %class.CFX_FloatRect* %28 to i64
  %30 = bitcast %class.CFX_FloatRect** %7 to i64*
  store i64 %29, i64* %30, align 8
  br label %87

31:                                               ; preds = %18
  %32 = ptrtoint %class.CFX_FloatRect* %19 to i64
  %33 = bitcast %class.CFX_FloatRect** %7 to i64*
  %34 = bitcast %"class.std::__1::vector.70"* %4 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = sub i64 %32, %35
  %37 = ashr exact i64 %36, 4
  %38 = add nsw i64 %37, 1
  %39 = icmp ugt i64 %38, 1152921504606846975
  br i1 %39, label %40, label %42

40:                                               ; preds = %31
  %41 = bitcast %"class.std::__1::vector.70"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %41) #14
  unreachable

42:                                               ; preds = %31
  %43 = bitcast %class.CFX_FloatRect** %22 to i64*
  %44 = sub i64 %25, %35
  %45 = ashr exact i64 %44, 4
  %46 = icmp ult i64 %45, 576460752303423487
  br i1 %46, label %47, label %55

47:                                               ; preds = %42
  %48 = ashr exact i64 %44, 3
  %49 = icmp ult i64 %48, %38
  %50 = select i1 %49, i64 %38, i64 %48
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %60, label %52

52:                                               ; preds = %47
  %53 = icmp ugt i64 %50, 1152921504606846975
  br i1 %53, label %54, label %55

54:                                               ; preds = %52
  tail call void @abort() #14
  unreachable

55:                                               ; preds = %52, %42
  %56 = phi i64 [ %50, %52 ], [ 1152921504606846975, %42 ]
  %57 = shl i64 %56, 4
  %58 = tail call i8* @_Znwm(i64 %57) #13
  %59 = bitcast i8* %58 to %class.CFX_FloatRect*
  br label %60

60:                                               ; preds = %55, %47
  %61 = phi i64 [ %56, %55 ], [ 0, %47 ]
  %62 = phi %class.CFX_FloatRect* [ %59, %55 ], [ null, %47 ]
  %63 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %62, i64 %37
  %64 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %62, i64 %61
  %65 = ptrtoint %class.CFX_FloatRect* %64 to i64
  %66 = bitcast %class.CFX_FloatRect* %63 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %66, i8* nonnull align 4 %20, i64 16, i1 false) #12
  %67 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %63, i64 1
  %68 = ptrtoint %class.CFX_FloatRect* %67 to i64
  %69 = load %class.CFX_FloatRect*, %class.CFX_FloatRect** %5, align 8
  %70 = load i64, i64* %33, align 8
  %71 = ptrtoint %class.CFX_FloatRect* %69 to i64
  %72 = sub i64 %70, %71
  %73 = ashr exact i64 %72, 4
  %74 = sub nsw i64 0, %73
  %75 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %63, i64 %74
  %76 = ptrtoint %class.CFX_FloatRect* %75 to i64
  %77 = icmp sgt i64 %72, 0
  br i1 %77, label %78, label %82

78:                                               ; preds = %60
  %79 = bitcast %class.CFX_FloatRect* %75 to i8*
  %80 = bitcast %class.CFX_FloatRect* %69 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %79, i8* align 4 %80, i64 %72, i1 false) #12
  %81 = load %class.CFX_FloatRect*, %class.CFX_FloatRect** %5, align 8
  br label %82

82:                                               ; preds = %78, %60
  %83 = phi %class.CFX_FloatRect* [ %69, %60 ], [ %81, %78 ]
  store i64 %76, i64* %34, align 8
  store i64 %68, i64* %33, align 8
  store i64 %65, i64* %43, align 8
  %84 = icmp eq %class.CFX_FloatRect* %83, null
  br i1 %84, label %87, label %85

85:                                               ; preds = %82
  %86 = bitcast %class.CFX_FloatRect* %83 to i8*
  tail call void @_ZdlPv(i8* %86) #13
  br label %87

87:                                               ; preds = %26, %82, %85
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20)
  br label %88

88:                                               ; preds = %12, %87
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.std::__1::vector.70"* @_ZN13CPWL_EditImpl12RefreshState15GetRefreshRectsEv(%"class.CPWL_EditImpl::RefreshState"* readnone) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.CPWL_EditImpl::RefreshState", %"class.CPWL_EditImpl::RefreshState"* %0, i64 0, i32 2
  ret %"class.std::__1::vector.70"* %2
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl12RefreshState10EndRefreshEv(%"class.CPWL_EditImpl::RefreshState"* nocapture) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.CPWL_EditImpl::RefreshState", %"class.CPWL_EditImpl::RefreshState"* %0, i64 0, i32 2
  %3 = bitcast %"class.std::__1::vector.70"* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.CPWL_EditImpl::RefreshState", %"class.CPWL_EditImpl::RefreshState"* %0, i64 0, i32 2, i32 0, i32 1
  %6 = bitcast %class.CFX_FloatRect** %5 to i64*
  store i64 %4, i64* %6, align 8
  ret void
}

declare zeroext i1 @_ZNK13CFX_FloatRect8ContainsERKS_(%class.CFX_FloatRect*, %class.CFX_FloatRect* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl9UndoStackC2Ev(%"class.CPWL_EditImpl::UndoStack"* nocapture) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.CPWL_EditImpl::UndoStack"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 57, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl9UndoStackD2Ev(%"class.CPWL_EditImpl::UndoStack"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.CPWL_EditImpl::UndoStack", %"class.CPWL_EditImpl::UndoStack"* %0, i64 0, i32 0, i32 0
  tail call void @_ZNSt3__112__deque_baseINS_10unique_ptrIN13CPWL_EditImpl13UndoItemIfaceENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE5clearEv(%"class.std::__1::__deque_base"* %2) #12
  %3 = getelementptr inbounds %"class.CPWL_EditImpl::UndoStack", %"class.CPWL_EditImpl::UndoStack"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %4 = load %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"*** %3, align 8
  %5 = getelementptr inbounds %"class.CPWL_EditImpl::UndoStack", %"class.CPWL_EditImpl::UndoStack"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %6 = load %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"*** %5, align 8
  %7 = icmp eq %"class.std::__1::unique_ptr.77"** %4, %6
  br i1 %7, label %26, label %8

8:                                                ; preds = %1, %8
  %9 = phi %"class.std::__1::unique_ptr.77"** [ %12, %8 ], [ %4, %1 ]
  %10 = bitcast %"class.std::__1::unique_ptr.77"** %9 to i8**
  %11 = load i8*, i8** %10, align 8
  tail call void @_ZdlPv(i8* %11) #13
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %9, i64 1
  %13 = icmp eq %"class.std::__1::unique_ptr.77"** %12, %6
  br i1 %13, label %14, label %8

14:                                               ; preds = %8
  %15 = load %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"*** %3, align 8
  %16 = load %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"*** %5, align 8
  %17 = icmp eq %"class.std::__1::unique_ptr.77"** %16, %15
  br i1 %17, label %26, label %18

18:                                               ; preds = %14
  %19 = ptrtoint %"class.std::__1::unique_ptr.77"** %15 to i64
  %20 = getelementptr %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %16, i64 -1
  %21 = ptrtoint %"class.std::__1::unique_ptr.77"** %20 to i64
  %22 = sub i64 %21, %19
  %23 = lshr i64 %22, 3
  %24 = xor i64 %23, -1
  %25 = getelementptr %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %16, i64 %24
  store %"class.std::__1::unique_ptr.77"** %25, %"class.std::__1::unique_ptr.77"*** %5, align 8
  br label %26

26:                                               ; preds = %18, %14, %1
  %27 = getelementptr inbounds %"class.CPWL_EditImpl::UndoStack", %"class.CPWL_EditImpl::UndoStack"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = load %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"*** %27, align 8
  %29 = icmp eq %"class.std::__1::unique_ptr.77"** %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %26
  %31 = bitcast %"class.std::__1::unique_ptr.77"** %28 to i8*
  tail call void @_ZdlPv(i8* %31) #13
  br label %32

32:                                               ; preds = %26, %30
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK13CPWL_EditImpl9UndoStack7CanUndoEv(%"class.CPWL_EditImpl::UndoStack"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.CPWL_EditImpl::UndoStack", %"class.CPWL_EditImpl::UndoStack"* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = icmp ne i64 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl9UndoStack4UndoEv(%"class.CPWL_EditImpl::UndoStack"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.CPWL_EditImpl::UndoStack", %"class.CPWL_EditImpl::UndoStack"* %0, i64 0, i32 2
  store i8 1, i8* %2, align 8
  %3 = getelementptr inbounds %"class.CPWL_EditImpl::UndoStack", %"class.CPWL_EditImpl::UndoStack"* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %34, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.CPWL_EditImpl::UndoStack", %"class.CPWL_EditImpl::UndoStack"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.CPWL_EditImpl::UndoStack", %"class.CPWL_EditImpl::UndoStack"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  br label %9

9:                                                ; preds = %6, %9
  %10 = phi i64 [ %4, %6 ], [ %28, %9 ]
  %11 = phi i32 [ 1, %6 ], [ %30, %9 ]
  %12 = add i64 %10, -1
  %13 = load i64, i64* %7, align 8
  %14 = add i64 %12, %13
  %15 = load %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"*** %8, align 8
  %16 = lshr i64 %14, 9
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %15, i64 %16
  %18 = load %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %17, align 8
  %19 = and i64 %14, 511
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr.77", %"class.std::__1::unique_ptr.77"* %18, i64 %19, i32 0, i32 0, i32 0
  %21 = load %"class.CPWL_EditImpl::UndoItemIface"*, %"class.CPWL_EditImpl::UndoItemIface"** %20, align 8
  %22 = bitcast %"class.CPWL_EditImpl::UndoItemIface"* %21 to i32 (%"class.CPWL_EditImpl::UndoItemIface"*)***
  %23 = load i32 (%"class.CPWL_EditImpl::UndoItemIface"*)**, i32 (%"class.CPWL_EditImpl::UndoItemIface"*)*** %22, align 8
  %24 = getelementptr inbounds i32 (%"class.CPWL_EditImpl::UndoItemIface"*)*, i32 (%"class.CPWL_EditImpl::UndoItemIface"*)** %23, i64 2
  %25 = load i32 (%"class.CPWL_EditImpl::UndoItemIface"*)*, i32 (%"class.CPWL_EditImpl::UndoItemIface"*)** %24, align 8
  %26 = tail call i32 %25(%"class.CPWL_EditImpl::UndoItemIface"* %21) #12
  %27 = load i64, i64* %3, align 8
  %28 = add i64 %27, -1
  store i64 %28, i64* %3, align 8
  %29 = add nsw i32 %11, -1
  %30 = add i32 %29, %26
  %31 = icmp ne i64 %28, 0
  %32 = icmp sgt i32 %30, 0
  %33 = and i1 %32, %31
  br i1 %33, label %9, label %34

34:                                               ; preds = %9, %1
  store i8 0, i8* %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK13CPWL_EditImpl9UndoStack7CanRedoEv(%"class.CPWL_EditImpl::UndoStack"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.CPWL_EditImpl::UndoStack", %"class.CPWL_EditImpl::UndoStack"* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.CPWL_EditImpl::UndoStack", %"class.CPWL_EditImpl::UndoStack"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp ult i64 %3, %5
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl9UndoStack4RedoEv(%"class.CPWL_EditImpl::UndoStack"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.CPWL_EditImpl::UndoStack", %"class.CPWL_EditImpl::UndoStack"* %0, i64 0, i32 2
  store i8 1, i8* %2, align 8
  %3 = getelementptr inbounds %"class.CPWL_EditImpl::UndoStack", %"class.CPWL_EditImpl::UndoStack"* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.CPWL_EditImpl::UndoStack", %"class.CPWL_EditImpl::UndoStack"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp ult i64 %4, %6
  br i1 %7, label %8, label %36

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.CPWL_EditImpl::UndoStack", %"class.CPWL_EditImpl::UndoStack"* %0, i64 0, i32 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.CPWL_EditImpl::UndoStack", %"class.CPWL_EditImpl::UndoStack"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  br label %11

11:                                               ; preds = %8, %11
  %12 = phi i64 [ %4, %8 ], [ %29, %11 ]
  %13 = phi i32 [ 1, %8 ], [ %31, %11 ]
  %14 = load i64, i64* %9, align 8
  %15 = add i64 %14, %12
  %16 = load %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"*** %10, align 8
  %17 = lshr i64 %15, 9
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %16, i64 %17
  %19 = load %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %18, align 8
  %20 = and i64 %15, 511
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr.77", %"class.std::__1::unique_ptr.77"* %19, i64 %20, i32 0, i32 0, i32 0
  %22 = load %"class.CPWL_EditImpl::UndoItemIface"*, %"class.CPWL_EditImpl::UndoItemIface"** %21, align 8
  %23 = bitcast %"class.CPWL_EditImpl::UndoItemIface"* %22 to i32 (%"class.CPWL_EditImpl::UndoItemIface"*)***
  %24 = load i32 (%"class.CPWL_EditImpl::UndoItemIface"*)**, i32 (%"class.CPWL_EditImpl::UndoItemIface"*)*** %23, align 8
  %25 = getelementptr inbounds i32 (%"class.CPWL_EditImpl::UndoItemIface"*)*, i32 (%"class.CPWL_EditImpl::UndoItemIface"*)** %24, i64 3
  %26 = load i32 (%"class.CPWL_EditImpl::UndoItemIface"*)*, i32 (%"class.CPWL_EditImpl::UndoItemIface"*)** %25, align 8
  %27 = tail call i32 %26(%"class.CPWL_EditImpl::UndoItemIface"* %22) #12
  %28 = load i64, i64* %3, align 8
  %29 = add i64 %28, 1
  store i64 %29, i64* %3, align 8
  %30 = add nsw i32 %13, -1
  %31 = add i32 %30, %27
  %32 = load i64, i64* %5, align 8
  %33 = icmp ult i64 %29, %32
  %34 = icmp sgt i32 %31, 0
  %35 = and i1 %34, %33
  br i1 %35, label %11, label %36

36:                                               ; preds = %11, %1
  store i8 0, i8* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl9UndoStack7AddItemENSt3__110unique_ptrINS_13UndoItemIfaceENS1_14default_deleteIS3_EEEE(%"class.CPWL_EditImpl::UndoStack"*, %"class.CPWL_EditImpl::UndoItemIface"*) local_unnamed_addr #2 align 2 {
  %3 = ptrtoint %"class.CPWL_EditImpl::UndoItemIface"* %1 to i64
  %4 = getelementptr inbounds %"class.CPWL_EditImpl::UndoStack", %"class.CPWL_EditImpl::UndoStack"* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.CPWL_EditImpl::UndoStack", %"class.CPWL_EditImpl::UndoStack"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %5, %7
  br i1 %8, label %9, label %60

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.CPWL_EditImpl::UndoStack", %"class.CPWL_EditImpl::UndoStack"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.CPWL_EditImpl::UndoStack", %"class.CPWL_EditImpl::UndoStack"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.CPWL_EditImpl::UndoStack", %"class.CPWL_EditImpl::UndoStack"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %13 = bitcast %"class.std::__1::unique_ptr.77"*** %12 to i64*
  %14 = bitcast %"class.std::__1::unique_ptr.77"*** %11 to i64*
  br label %15

15:                                               ; preds = %56, %9
  %16 = phi i64 [ %7, %9 ], [ %57, %56 ]
  %17 = load i64, i64* %10, align 8
  %18 = add i64 %16, -1
  %19 = add i64 %18, %17
  %20 = load %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"*** %11, align 8
  %21 = lshr i64 %19, 9
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %20, i64 %21
  %23 = load %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %22, align 8
  %24 = and i64 %19, 511
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.77", %"class.std::__1::unique_ptr.77"* %23, i64 %24, i32 0, i32 0, i32 0
  %26 = load %"class.CPWL_EditImpl::UndoItemIface"*, %"class.CPWL_EditImpl::UndoItemIface"** %25, align 8
  store %"class.CPWL_EditImpl::UndoItemIface"* null, %"class.CPWL_EditImpl::UndoItemIface"** %25, align 8
  %27 = icmp eq %"class.CPWL_EditImpl::UndoItemIface"* %26, null
  br i1 %27, label %33, label %28

28:                                               ; preds = %15
  %29 = bitcast %"class.CPWL_EditImpl::UndoItemIface"* %26 to void (%"class.CPWL_EditImpl::UndoItemIface"*)***
  %30 = load void (%"class.CPWL_EditImpl::UndoItemIface"*)**, void (%"class.CPWL_EditImpl::UndoItemIface"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.CPWL_EditImpl::UndoItemIface"*)*, void (%"class.CPWL_EditImpl::UndoItemIface"*)** %30, i64 1
  %32 = load void (%"class.CPWL_EditImpl::UndoItemIface"*)*, void (%"class.CPWL_EditImpl::UndoItemIface"*)** %31, align 8
  tail call void %32(%"class.CPWL_EditImpl::UndoItemIface"* nonnull %26) #12
  br label %33

33:                                               ; preds = %28, %15
  %34 = load i64, i64* %6, align 8
  %35 = add i64 %34, -1
  store i64 %35, i64* %6, align 8
  %36 = load i64, i64* %13, align 8
  %37 = load i64, i64* %14, align 8
  %38 = sub i64 %36, %37
  %39 = icmp eq i64 %38, 0
  %40 = shl i64 %38, 6
  %41 = add i64 %40, -1
  %42 = select i1 %39, i64 0, i64 %41
  %43 = load i64, i64* %10, align 8
  %44 = sub i64 1, %34
  %45 = sub i64 %44, %43
  %46 = add i64 %45, %42
  %47 = icmp ult i64 %46, 1024
  br i1 %47, label %56, label %48

48:                                               ; preds = %33
  %49 = inttoptr i64 %36 to %"class.std::__1::unique_ptr.77"**
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %49, i64 -1
  %51 = bitcast %"class.std::__1::unique_ptr.77"** %50 to i8**
  %52 = load i8*, i8** %51, align 8
  tail call void @_ZdlPv(i8* %52) #13
  %53 = load %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"*** %12, align 8
  %54 = getelementptr %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %53, i64 -1
  store %"class.std::__1::unique_ptr.77"** %54, %"class.std::__1::unique_ptr.77"*** %12, align 8
  %55 = load i64, i64* %6, align 8
  br label %56

56:                                               ; preds = %48, %33
  %57 = phi i64 [ %35, %33 ], [ %55, %48 ]
  %58 = load i64, i64* %4, align 8
  %59 = icmp ult i64 %58, %57
  br i1 %59, label %15, label %60

60:                                               ; preds = %56, %2
  %61 = phi i64 [ %7, %2 ], [ %57, %56 ]
  %62 = getelementptr inbounds %"class.CPWL_EditImpl::UndoStack", %"class.CPWL_EditImpl::UndoStack"* %0, i64 0, i32 0
  %63 = icmp ugt i64 %61, 9999
  br i1 %63, label %67, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.CPWL_EditImpl::UndoStack", %"class.CPWL_EditImpl::UndoStack"* %0, i64 0, i32 0, i32 0, i32 1
  %66 = load i64, i64* %65, align 8
  br label %101

67:                                               ; preds = %60
  %68 = getelementptr inbounds %"class.CPWL_EditImpl::UndoStack", %"class.CPWL_EditImpl::UndoStack"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %69 = load %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"*** %68, align 8
  %70 = getelementptr inbounds %"class.CPWL_EditImpl::UndoStack", %"class.CPWL_EditImpl::UndoStack"* %0, i64 0, i32 0, i32 0, i32 1
  %71 = load i64, i64* %70, align 8
  %72 = lshr i64 %71, 9
  %73 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %69, i64 %72
  %74 = load %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %73, align 8
  %75 = and i64 %71, 511
  %76 = getelementptr inbounds %"class.std::__1::unique_ptr.77", %"class.std::__1::unique_ptr.77"* %74, i64 %75, i32 0, i32 0, i32 0
  %77 = load %"class.CPWL_EditImpl::UndoItemIface"*, %"class.CPWL_EditImpl::UndoItemIface"** %76, align 8
  store %"class.CPWL_EditImpl::UndoItemIface"* null, %"class.CPWL_EditImpl::UndoItemIface"** %76, align 8
  %78 = icmp eq %"class.CPWL_EditImpl::UndoItemIface"* %77, null
  br i1 %78, label %84, label %79

79:                                               ; preds = %67
  %80 = bitcast %"class.CPWL_EditImpl::UndoItemIface"* %77 to void (%"class.CPWL_EditImpl::UndoItemIface"*)***
  %81 = load void (%"class.CPWL_EditImpl::UndoItemIface"*)**, void (%"class.CPWL_EditImpl::UndoItemIface"*)*** %80, align 8
  %82 = getelementptr inbounds void (%"class.CPWL_EditImpl::UndoItemIface"*)*, void (%"class.CPWL_EditImpl::UndoItemIface"*)** %81, i64 1
  %83 = load void (%"class.CPWL_EditImpl::UndoItemIface"*)*, void (%"class.CPWL_EditImpl::UndoItemIface"*)** %82, align 8
  tail call void %83(%"class.CPWL_EditImpl::UndoItemIface"* nonnull %77) #12
  br label %84

84:                                               ; preds = %79, %67
  %85 = bitcast i64* %70 to <2 x i64>*
  %86 = load <2 x i64>, <2 x i64>* %85, align 8
  %87 = add <2 x i64> %86, <i64 1, i64 -1>
  %88 = bitcast i64* %70 to <2 x i64>*
  store <2 x i64> %87, <2 x i64>* %88, align 8
  %89 = extractelement <2 x i64> %87, i32 0
  %90 = icmp ult i64 %89, 1024
  %91 = extractelement <2 x i64> %87, i32 1
  br i1 %90, label %101, label %92

92:                                               ; preds = %84
  %93 = bitcast %"class.std::__1::unique_ptr.77"*** %68 to i8***
  %94 = load i8**, i8*** %93, align 8
  %95 = load i8*, i8** %94, align 8
  tail call void @_ZdlPv(i8* %95) #13
  %96 = load %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"*** %68, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %96, i64 1
  store %"class.std::__1::unique_ptr.77"** %97, %"class.std::__1::unique_ptr.77"*** %68, align 8
  %98 = load i64, i64* %70, align 8
  %99 = add i64 %98, -512
  store i64 %99, i64* %70, align 8
  %100 = load i64, i64* %6, align 8
  br label %101

101:                                              ; preds = %64, %92, %84
  %102 = phi i64 [ %61, %64 ], [ %100, %92 ], [ %91, %84 ]
  %103 = phi i64 [ %66, %64 ], [ %99, %92 ], [ %89, %84 ]
  %104 = getelementptr inbounds %"class.CPWL_EditImpl::UndoStack", %"class.CPWL_EditImpl::UndoStack"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %105 = bitcast %"class.std::__1::unique_ptr.77"*** %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = getelementptr inbounds %"class.CPWL_EditImpl::UndoStack", %"class.CPWL_EditImpl::UndoStack"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %108 = bitcast %"class.std::__1::unique_ptr.77"*** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = sub i64 %106, %109
  %111 = icmp eq i64 %110, 0
  %112 = shl i64 %110, 6
  %113 = add i64 %112, -1
  %114 = select i1 %111, i64 0, i64 %113
  %115 = add i64 %102, %103
  %116 = icmp eq i64 %114, %115
  %117 = inttoptr i64 %109 to %"class.std::__1::unique_ptr.77"**
  %118 = inttoptr i64 %106 to %"class.std::__1::unique_ptr.77"**
  br i1 %116, label %119, label %126

119:                                              ; preds = %101
  %120 = getelementptr inbounds %"class.CPWL_EditImpl::UndoStack", %"class.CPWL_EditImpl::UndoStack"* %0, i64 0, i32 0, i32 0, i32 1
  tail call void @_ZNSt3__15dequeINS_10unique_ptrIN13CPWL_EditImpl13UndoItemIfaceENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %62) #12
  %121 = load i64, i64* %6, align 8
  %122 = load i64, i64* %120, align 8
  %123 = load %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"*** %107, align 8
  %124 = load %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"*** %104, align 8
  %125 = add i64 %122, %121
  br label %126

126:                                              ; preds = %119, %101
  %127 = phi i64 [ %125, %119 ], [ %115, %101 ]
  %128 = phi %"class.std::__1::unique_ptr.77"** [ %124, %119 ], [ %118, %101 ]
  %129 = phi %"class.std::__1::unique_ptr.77"** [ %123, %119 ], [ %117, %101 ]
  %130 = icmp eq %"class.std::__1::unique_ptr.77"** %128, %129
  br i1 %130, label %138, label %131

131:                                              ; preds = %126
  %132 = lshr i64 %127, 9
  %133 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %129, i64 %132
  %134 = load %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %133, align 8
  %135 = and i64 %127, 511
  %136 = getelementptr inbounds %"class.std::__1::unique_ptr.77", %"class.std::__1::unique_ptr.77"* %134, i64 %135
  %137 = bitcast %"class.std::__1::unique_ptr.77"* %136 to i64*
  br label %138

138:                                              ; preds = %131, %126
  %139 = phi i64* [ %137, %131 ], [ null, %126 ]
  store i64 %3, i64* %139, align 8
  %140 = load i64, i64* %6, align 8
  %141 = add i64 %140, 1
  store i64 %141, i64* %6, align 8
  store i64 %141, i64* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl9UndoStack11RemoveTailsEv(%"class.CPWL_EditImpl::UndoStack"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.CPWL_EditImpl::UndoStack", %"class.CPWL_EditImpl::UndoStack"* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.CPWL_EditImpl::UndoStack", %"class.CPWL_EditImpl::UndoStack"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp ult i64 %3, %5
  br i1 %6, label %7, label %58

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.CPWL_EditImpl::UndoStack", %"class.CPWL_EditImpl::UndoStack"* %0, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.CPWL_EditImpl::UndoStack", %"class.CPWL_EditImpl::UndoStack"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.CPWL_EditImpl::UndoStack", %"class.CPWL_EditImpl::UndoStack"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %11 = bitcast %"class.std::__1::unique_ptr.77"*** %10 to i64*
  %12 = bitcast %"class.std::__1::unique_ptr.77"*** %9 to i64*
  br label %13

13:                                               ; preds = %7, %54
  %14 = phi i64 [ %5, %7 ], [ %55, %54 ]
  %15 = load i64, i64* %8, align 8
  %16 = add i64 %14, -1
  %17 = add i64 %16, %15
  %18 = load %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"*** %9, align 8
  %19 = lshr i64 %17, 9
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %18, i64 %19
  %21 = load %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %20, align 8
  %22 = and i64 %17, 511
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.77", %"class.std::__1::unique_ptr.77"* %21, i64 %22, i32 0, i32 0, i32 0
  %24 = load %"class.CPWL_EditImpl::UndoItemIface"*, %"class.CPWL_EditImpl::UndoItemIface"** %23, align 8
  store %"class.CPWL_EditImpl::UndoItemIface"* null, %"class.CPWL_EditImpl::UndoItemIface"** %23, align 8
  %25 = icmp eq %"class.CPWL_EditImpl::UndoItemIface"* %24, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %13
  %27 = bitcast %"class.CPWL_EditImpl::UndoItemIface"* %24 to void (%"class.CPWL_EditImpl::UndoItemIface"*)***
  %28 = load void (%"class.CPWL_EditImpl::UndoItemIface"*)**, void (%"class.CPWL_EditImpl::UndoItemIface"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.CPWL_EditImpl::UndoItemIface"*)*, void (%"class.CPWL_EditImpl::UndoItemIface"*)** %28, i64 1
  %30 = load void (%"class.CPWL_EditImpl::UndoItemIface"*)*, void (%"class.CPWL_EditImpl::UndoItemIface"*)** %29, align 8
  tail call void %30(%"class.CPWL_EditImpl::UndoItemIface"* nonnull %24) #12
  br label %31

31:                                               ; preds = %26, %13
  %32 = load i64, i64* %4, align 8
  %33 = add i64 %32, -1
  store i64 %33, i64* %4, align 8
  %34 = load i64, i64* %11, align 8
  %35 = load i64, i64* %12, align 8
  %36 = sub i64 %34, %35
  %37 = icmp eq i64 %36, 0
  %38 = shl i64 %36, 6
  %39 = add i64 %38, -1
  %40 = select i1 %37, i64 0, i64 %39
  %41 = load i64, i64* %8, align 8
  %42 = sub i64 1, %32
  %43 = sub i64 %42, %41
  %44 = add i64 %43, %40
  %45 = icmp ult i64 %44, 1024
  br i1 %45, label %54, label %46

46:                                               ; preds = %31
  %47 = inttoptr i64 %34 to %"class.std::__1::unique_ptr.77"**
  %48 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %47, i64 -1
  %49 = bitcast %"class.std::__1::unique_ptr.77"** %48 to i8**
  %50 = load i8*, i8** %49, align 8
  tail call void @_ZdlPv(i8* %50) #13
  %51 = load %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"*** %10, align 8
  %52 = getelementptr %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %51, i64 -1
  store %"class.std::__1::unique_ptr.77"** %52, %"class.std::__1::unique_ptr.77"*** %10, align 8
  %53 = load i64, i64* %4, align 8
  br label %54

54:                                               ; preds = %31, %46
  %55 = phi i64 [ %33, %31 ], [ %53, %46 ]
  %56 = load i64, i64* %2, align 8
  %57 = icmp ult i64 %56, %55
  br i1 %57, label %13, label %58

58:                                               ; preds = %54, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl9UndoStack11RemoveHeadsEv(%"class.CPWL_EditImpl::UndoStack"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.CPWL_EditImpl::UndoStack", %"class.CPWL_EditImpl::UndoStack"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %3 = load %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"*** %2, align 8
  %4 = getelementptr inbounds %"class.CPWL_EditImpl::UndoStack", %"class.CPWL_EditImpl::UndoStack"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 9
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %3, i64 %6
  %8 = load %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %7, align 8
  %9 = and i64 %5, 511
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.77", %"class.std::__1::unique_ptr.77"* %8, i64 %9, i32 0, i32 0, i32 0
  %11 = load %"class.CPWL_EditImpl::UndoItemIface"*, %"class.CPWL_EditImpl::UndoItemIface"** %10, align 8
  store %"class.CPWL_EditImpl::UndoItemIface"* null, %"class.CPWL_EditImpl::UndoItemIface"** %10, align 8
  %12 = icmp eq %"class.CPWL_EditImpl::UndoItemIface"* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %1
  %14 = bitcast %"class.CPWL_EditImpl::UndoItemIface"* %11 to void (%"class.CPWL_EditImpl::UndoItemIface"*)***
  %15 = load void (%"class.CPWL_EditImpl::UndoItemIface"*)**, void (%"class.CPWL_EditImpl::UndoItemIface"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.CPWL_EditImpl::UndoItemIface"*)*, void (%"class.CPWL_EditImpl::UndoItemIface"*)** %15, i64 1
  %17 = load void (%"class.CPWL_EditImpl::UndoItemIface"*)*, void (%"class.CPWL_EditImpl::UndoItemIface"*)** %16, align 8
  tail call void %17(%"class.CPWL_EditImpl::UndoItemIface"* nonnull %11) #12
  br label %18

18:                                               ; preds = %13, %1
  %19 = bitcast i64* %4 to <2 x i64>*
  %20 = load <2 x i64>, <2 x i64>* %19, align 8
  %21 = add <2 x i64> %20, <i64 1, i64 -1>
  %22 = bitcast i64* %4 to <2 x i64>*
  store <2 x i64> %21, <2 x i64>* %22, align 8
  %23 = extractelement <2 x i64> %21, i32 0
  %24 = icmp ult i64 %23, 1024
  br i1 %24, label %33, label %25

25:                                               ; preds = %18
  %26 = bitcast %"class.std::__1::unique_ptr.77"*** %2 to i8***
  %27 = load i8**, i8*** %26, align 8
  %28 = load i8*, i8** %27, align 8
  tail call void @_ZdlPv(i8* %28) #13
  %29 = load %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"*** %2, align 8
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %29, i64 1
  store %"class.std::__1::unique_ptr.77"** %30, %"class.std::__1::unique_ptr.77"*** %2, align 8
  %31 = load i64, i64* %4, align 8
  %32 = add i64 %31, -512
  store i64 %32, i64* %4, align 8
  br label %33

33:                                               ; preds = %18, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl14UndoInsertWordC2EPS_RK14CPVT_WordPlaceS4_ti(%"class.CPWL_EditImpl::UndoInsertWord"* nocapture, %class.CPWL_EditImpl*, %struct.CPVT_WordPlace* nocapture readonly dereferenceable(12), %struct.CPVT_WordPlace* nocapture readonly dereferenceable(12), i16 zeroext, i32) unnamed_addr #2 align 2 {
  %7 = getelementptr inbounds %"class.CPWL_EditImpl::UndoInsertWord", %"class.CPWL_EditImpl::UndoInsertWord"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN13CPWL_EditImpl14UndoInsertWordE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.CPWL_EditImpl::UndoInsertWord", %"class.CPWL_EditImpl::UndoInsertWord"* %0, i64 0, i32 1, i32 0
  store %class.CPWL_EditImpl* %1, %class.CPWL_EditImpl** %8, align 8
  %9 = getelementptr inbounds %"class.CPWL_EditImpl::UndoInsertWord", %"class.CPWL_EditImpl::UndoInsertWord"* %0, i64 0, i32 2
  %10 = bitcast %struct.CPVT_WordPlace* %9 to i8*
  %11 = bitcast %struct.CPVT_WordPlace* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 4 %11, i64 12, i1 false)
  %12 = getelementptr inbounds %"class.CPWL_EditImpl::UndoInsertWord", %"class.CPWL_EditImpl::UndoInsertWord"* %0, i64 0, i32 3
  %13 = bitcast %struct.CPVT_WordPlace* %12 to i8*
  %14 = bitcast %struct.CPVT_WordPlace* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %13, i8* align 4 %14, i64 12, i1 false)
  %15 = getelementptr inbounds %"class.CPWL_EditImpl::UndoInsertWord", %"class.CPWL_EditImpl::UndoInsertWord"* %0, i64 0, i32 4
  store i16 %4, i16* %15, align 8
  %16 = getelementptr inbounds %"class.CPWL_EditImpl::UndoInsertWord", %"class.CPWL_EditImpl::UndoInsertWord"* %0, i64 0, i32 5
  store i32 %5, i32* %16, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN13CPWL_EditImpl14UndoInsertWordD2Ev(%"class.CPWL_EditImpl::UndoInsertWord"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.CPWL_EditImpl::UndoInsertWord", %"class.CPWL_EditImpl::UndoInsertWord"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN13CPWL_EditImpl14UndoInsertWordE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl14UndoInsertWordD0Ev(%"class.CPWL_EditImpl::UndoInsertWord"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.CPWL_EditImpl::UndoInsertWord"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN13CPWL_EditImpl14UndoInsertWord4RedoEv(%"class.CPWL_EditImpl::UndoInsertWord"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.CPWL_EditImpl::UndoInsertWord", %"class.CPWL_EditImpl::UndoInsertWord"* %0, i64 0, i32 1, i32 0
  %3 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %2, align 8
  %4 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 7, i32 0, i32 0, i32 0
  %5 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %4, align 8
  %6 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %5, i64 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11
  %11 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 1, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"class.CPWL_EditImpl::SelectState", %"class.CPWL_EditImpl::SelectState"* %10, i64 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %12, %14
  br i1 %15, label %16, label %28

16:                                               ; preds = %9
  %17 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 1, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %22, label %28

22:                                               ; preds = %16
  %23 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 1, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %24, %26
  br i1 %27, label %31, label %28

28:                                               ; preds = %22, %16, %9
  %29 = bitcast %"class.CPWL_EditImpl::SelectState"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %29, i8 -1, i64 24, i1 false) #12
  tail call void @_ZN13CPWL_EditImpl7RefreshEv(%class.CPWL_EditImpl* %3) #12
  %30 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %2, align 8
  br label %31

31:                                               ; preds = %1, %22, %28
  %32 = phi %class.CPWL_EditImpl* [ %3, %1 ], [ %3, %22 ], [ %30, %28 ]
  %33 = getelementptr inbounds %"class.CPWL_EditImpl::UndoInsertWord", %"class.CPWL_EditImpl::UndoInsertWord"* %0, i64 0, i32 2
  %34 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %32, i64 0, i32 9
  %35 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %32, i64 0, i32 10
  %36 = bitcast %struct.CPVT_WordPlace* %35 to i8*
  %37 = bitcast %struct.CPVT_WordPlace* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 4 %37, i64 12, i1 false) #12
  %38 = bitcast %struct.CPVT_WordPlace* %33 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 4 %38, i64 12, i1 false) #12
  %39 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %2, align 8
  %40 = getelementptr inbounds %"class.CPWL_EditImpl::UndoInsertWord", %"class.CPWL_EditImpl::UndoInsertWord"* %0, i64 0, i32 4
  %41 = load i16, i16* %40, align 8
  %42 = getelementptr inbounds %"class.CPWL_EditImpl::UndoInsertWord", %"class.CPWL_EditImpl::UndoInsertWord"* %0, i64 0, i32 5
  %43 = load i32, i32* %42, align 4
  %44 = tail call zeroext i1 @_ZN13CPWL_EditImpl10InsertWordEtib(%class.CPWL_EditImpl* %39, i16 zeroext %41, i32 %43, i1 zeroext false)
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl10SelectNoneEv(%class.CPWL_EditImpl*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %3 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %2, align 8
  %4 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %3, i64 0, i32 0
  %5 = load i8, i8* %4, align 8, !range !8
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %28, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11
  %9 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.CPWL_EditImpl::SelectState", %"class.CPWL_EditImpl::SelectState"* %8, i64 0, i32 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %14, label %26

14:                                               ; preds = %7
  %15 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %16, %18
  br i1 %19, label %20, label %26

20:                                               ; preds = %14
  %21 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %22, %24
  br i1 %25, label %28, label %26

26:                                               ; preds = %7, %14, %20
  %27 = bitcast %"class.CPWL_EditImpl::SelectState"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %27, i8 -1, i64 24, i1 false) #12
  tail call void @_ZN13CPWL_EditImpl7RefreshEv(%class.CPWL_EditImpl* %0)
  br label %28

28:                                               ; preds = %1, %20, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl8SetCaretERK14CPVT_WordPlace(%class.CPWL_EditImpl* nocapture, %struct.CPVT_WordPlace* nocapture readonly dereferenceable(12)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9
  %4 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 10
  %5 = bitcast %struct.CPVT_WordPlace* %4 to i8*
  %6 = bitcast %struct.CPVT_WordPlace* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 %6, i64 12, i1 false)
  %7 = bitcast %struct.CPVT_WordPlace* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 4 %7, i64 12, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN13CPWL_EditImpl10InsertWordEtib(%class.CPWL_EditImpl*, i16 zeroext, i32, i1 zeroext) local_unnamed_addr #2 align 2 {
  %5 = tail call zeroext i1 @_ZNK13CPWL_EditImpl14IsTextOverflowEv(%class.CPWL_EditImpl* %0)
  br i1 %5, label %76, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %8 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %7, align 8
  %9 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %8, i64 0, i32 0
  %10 = load i8, i8* %9, align 8, !range !8
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %76, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9
  tail call void @_ZNK17CPVT_VariableText15UpdateWordPlaceER14CPVT_WordPlace(%class.CPVT_VariableText* %8, %struct.CPVT_WordPlace* dereferenceable(12) %13) #12
  %14 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %7, align 8
  %15 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %16 = load %"class.CPWL_EditImpl::Provider"*, %"class.CPWL_EditImpl::Provider"** %15, align 8
  %17 = icmp eq %"class.CPWL_EditImpl::Provider"* %16, null
  br i1 %17, label %28, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.CPWL_EditImpl::Provider", %"class.CPWL_EditImpl::Provider"* %16, i64 0, i32 0, i32 1, i32 0
  %20 = load %class.IPVT_FontMap*, %class.IPVT_FontMap** %19, align 8
  %21 = icmp eq %class.IPVT_FontMap* %20, null
  br i1 %21, label %28, label %22

22:                                               ; preds = %18
  %23 = bitcast %class.IPVT_FontMap* %20 to i32 (%class.IPVT_FontMap*, i16, i32)***
  %24 = load i32 (%class.IPVT_FontMap*, i16, i32)**, i32 (%class.IPVT_FontMap*, i16, i32)*** %23, align 8
  %25 = getelementptr inbounds i32 (%class.IPVT_FontMap*, i16, i32)*, i32 (%class.IPVT_FontMap*, i16, i32)** %24, i64 6
  %26 = load i32 (%class.IPVT_FontMap*, i16, i32)*, i32 (%class.IPVT_FontMap*, i16, i32)** %25, align 8
  %27 = tail call i32 %26(%class.IPVT_FontMap* nonnull %20, i16 zeroext %1, i32 %2) #12
  br label %28

28:                                               ; preds = %12, %18, %22
  %29 = phi i32 [ %27, %22 ], [ %2, %18 ], [ %2, %12 ]
  %30 = tail call { i64, i32 } @_ZN17CPVT_VariableText10InsertWordERK14CPVT_WordPlaceti(%class.CPVT_VariableText* %14, %struct.CPVT_WordPlace* dereferenceable(12) %13, i16 zeroext %1, i32 %29) #12
  %31 = extractvalue { i64, i32 } %30, 0
  %32 = extractvalue { i64, i32 } %30, 1
  %33 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 10
  %34 = bitcast %struct.CPVT_WordPlace* %33 to i8*
  %35 = bitcast %struct.CPVT_WordPlace* %13 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %34, i8* align 4 %35, i64 12, i1 false) #12
  %36 = bitcast %struct.CPVT_WordPlace* %13 to i64*
  store i64 %31, i64* %36, align 8
  %37 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9, i32 2
  store i32 %32, i32* %37, align 8
  %38 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11
  %39 = bitcast %"class.CPWL_EditImpl::SelectState"* %38 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %39, i8* align 4 %35, i64 12, i1 false) #12
  %40 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1
  %41 = bitcast %struct.CPVT_WordPlace* %40 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %41, i8* align 4 %35, i64 12, i1 false) #12
  %42 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %33, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = trunc i64 %31 to i32
  %45 = icmp eq i32 %43, %44
  br i1 %45, label %46, label %56

46:                                               ; preds = %28
  %47 = lshr i64 %31, 32
  %48 = trunc i64 %47 to i32
  %49 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 10, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, %48
  br i1 %51, label %52, label %56

52:                                               ; preds = %46
  %53 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 10, i32 2
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, %32
  br i1 %55, label %76, label %56

56:                                               ; preds = %28, %46, %52
  br i1 %3, label %57, label %75

57:                                               ; preds = %56
  %58 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 4
  %59 = load i8, i8* %58, align 4, !range !8
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %75, label %61

61:                                               ; preds = %57
  %62 = ptrtoint %class.CPWL_EditImpl* %0 to i64
  %63 = tail call i8* @_Znwm(i64 48) #13
  %64 = bitcast i8* %63 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN13CPWL_EditImpl14UndoInsertWordE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %64, align 8
  %65 = getelementptr inbounds i8, i8* %63, i64 8
  %66 = bitcast i8* %65 to i64*
  store i64 %62, i64* %66, align 8
  %67 = getelementptr inbounds i8, i8* %63, i64 16
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* align 4 %34, i64 12, i1 false) #12
  %68 = getelementptr inbounds i8, i8* %63, i64 28
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %68, i8* align 4 %35, i64 12, i1 false) #12
  %69 = getelementptr inbounds i8, i8* %63, i64 40
  %70 = bitcast i8* %69 to i16*
  store i16 %1, i16* %70, align 8
  %71 = getelementptr inbounds i8, i8* %63, i64 44
  %72 = bitcast i8* %71 to i32*
  store i32 %2, i32* %72, align 4
  %73 = bitcast i8* %63 to %"class.CPWL_EditImpl::UndoItemIface"*
  %74 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 17
  tail call void @_ZN13CPWL_EditImpl9UndoStack7AddItemENSt3__110unique_ptrINS_13UndoItemIfaceENS1_14default_deleteIS3_EEEE(%"class.CPWL_EditImpl::UndoStack"* %74, %"class.CPWL_EditImpl::UndoItemIface"* nonnull %73) #12
  br label %75

75:                                               ; preds = %57, %61, %56
  tail call void @_ZN13CPWL_EditImpl15PaintInsertTextERK14CPVT_WordPlaceS2_(%class.CPWL_EditImpl* %0, %struct.CPVT_WordPlace* dereferenceable(12) %33, %struct.CPVT_WordPlace* dereferenceable(12) %13)
  br label %76

76:                                               ; preds = %6, %52, %4, %75
  %77 = phi i1 [ true, %75 ], [ false, %6 ], [ false, %4 ], [ false, %52 ]
  ret i1 %77
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN13CPWL_EditImpl14UndoInsertWord4UndoEv(%"class.CPWL_EditImpl::UndoInsertWord"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.CPWL_EditImpl::UndoInsertWord", %"class.CPWL_EditImpl::UndoInsertWord"* %0, i64 0, i32 1, i32 0
  %3 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %2, align 8
  %4 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 7, i32 0, i32 0, i32 0
  %5 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %4, align 8
  %6 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %5, i64 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11
  %11 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 1, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"class.CPWL_EditImpl::SelectState", %"class.CPWL_EditImpl::SelectState"* %10, i64 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %12, %14
  br i1 %15, label %16, label %28

16:                                               ; preds = %9
  %17 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 1, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %22, label %28

22:                                               ; preds = %16
  %23 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 1, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %24, %26
  br i1 %27, label %31, label %28

28:                                               ; preds = %22, %16, %9
  %29 = bitcast %"class.CPWL_EditImpl::SelectState"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %29, i8 -1, i64 24, i1 false) #12
  tail call void @_ZN13CPWL_EditImpl7RefreshEv(%class.CPWL_EditImpl* %3) #12
  %30 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %2, align 8
  br label %31

31:                                               ; preds = %1, %22, %28
  %32 = phi %class.CPWL_EditImpl* [ %3, %1 ], [ %3, %22 ], [ %30, %28 ]
  %33 = getelementptr inbounds %"class.CPWL_EditImpl::UndoInsertWord", %"class.CPWL_EditImpl::UndoInsertWord"* %0, i64 0, i32 3
  %34 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %32, i64 0, i32 9
  %35 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %32, i64 0, i32 10
  %36 = bitcast %struct.CPVT_WordPlace* %35 to i8*
  %37 = bitcast %struct.CPVT_WordPlace* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 4 %37, i64 12, i1 false) #12
  %38 = bitcast %struct.CPVT_WordPlace* %33 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 4 %38, i64 12, i1 false) #12
  %39 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %2, align 8
  %40 = tail call zeroext i1 @_ZN13CPWL_EditImpl9BackspaceEb(%class.CPWL_EditImpl* %39, i1 zeroext false)
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN13CPWL_EditImpl9BackspaceEb(%class.CPWL_EditImpl*, i1 zeroext) local_unnamed_addr #2 align 2 {
  %3 = alloca %class.CPVT_Word, align 16
  %4 = alloca %struct.CPVT_WordRange, align 4
  %5 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %6 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %5, align 8
  %7 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %6, i64 0, i32 0
  %8 = load i8, i8* %7, align 8, !range !8
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %130, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9
  %12 = tail call { i64, i32 } @_ZNK17CPVT_VariableText17GetBeginWordPlaceEv(%class.CPVT_VariableText* %6) #12
  %13 = extractvalue { i64, i32 } %12, 0
  %14 = extractvalue { i64, i32 } %12, 1
  %15 = trunc i64 %13 to i32
  %16 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %11, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, %15
  br i1 %18, label %19, label %29

19:                                               ; preds = %10
  %20 = lshr i64 %13, 32
  %21 = trunc i64 %20 to i32
  %22 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, %21
  br i1 %24, label %25, label %29

25:                                               ; preds = %19
  %26 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %14, %27
  br i1 %28, label %130, label %29

29:                                               ; preds = %10, %19, %25
  %30 = bitcast %class.CPVT_Word* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %30) #12
  %31 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %3, i64 0, i32 0
  %32 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %3, i64 0, i32 1
  %33 = bitcast %class.CPVT_Word* %3 to <4 x i32>*
  store <4 x i32> <i32 -1431655766, i32 0, i32 -1, i32 -1>, <4 x i32>* %33, align 16
  store i16 0, i16* %31, align 16
  %34 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %3, i64 0, i32 2, i32 2
  store i32 -1, i32* %34, align 8
  %35 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %3, i64 0, i32 3, i32 0
  %36 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %3, i64 0, i32 7
  %37 = bitcast float* %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %37, i8 0, i64 20, i1 false) #12
  store i32 -1, i32* %36, align 8
  %38 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %3, i64 0, i32 8
  store float 0.000000e+00, float* %38, align 4
  br i1 %1, label %39, label %43

39:                                               ; preds = %29
  %40 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %5, align 8
  %41 = tail call %"class.CPVT_VariableText::Iterator"* @_ZN17CPVT_VariableText11GetIteratorEv(%class.CPVT_VariableText* %40) #12
  tail call void @_ZN17CPVT_VariableText8Iterator5SetAtERK14CPVT_WordPlace(%"class.CPVT_VariableText::Iterator"* %41, %struct.CPVT_WordPlace* dereferenceable(12) %11) #12
  %42 = call zeroext i1 @_ZNK17CPVT_VariableText8Iterator7GetWordER9CPVT_Word(%"class.CPVT_VariableText::Iterator"* %41, %class.CPVT_Word* nonnull dereferenceable(48) %3) #12
  br label %43

43:                                               ; preds = %39, %29
  %44 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %5, align 8
  call void @_ZNK17CPVT_VariableText15UpdateWordPlaceER14CPVT_WordPlace(%class.CPVT_VariableText* %44, %struct.CPVT_WordPlace* dereferenceable(12) %11) #12
  %45 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %5, align 8
  %46 = call { i64, i32 } @_ZN17CPVT_VariableText13BackSpaceWordERK14CPVT_WordPlace(%class.CPVT_VariableText* %45, %struct.CPVT_WordPlace* dereferenceable(12) %11) #12
  %47 = extractvalue { i64, i32 } %46, 0
  %48 = extractvalue { i64, i32 } %46, 1
  %49 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 10
  %50 = bitcast %struct.CPVT_WordPlace* %49 to i8*
  %51 = bitcast %struct.CPVT_WordPlace* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %50, i8* align 4 %51, i64 12, i1 false) #12
  %52 = bitcast %struct.CPVT_WordPlace* %11 to i64*
  store i64 %47, i64* %52, align 8
  %53 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9, i32 2
  store i32 %48, i32* %53, align 8
  %54 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11
  %55 = bitcast %"class.CPWL_EditImpl::SelectState"* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %55, i8* align 4 %51, i64 12, i1 false) #12
  %56 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1
  %57 = bitcast %struct.CPVT_WordPlace* %56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %57, i8* align 4 %51, i64 12, i1 false) #12
  %58 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %49, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = trunc i64 %47 to i32
  %61 = icmp eq i32 %59, %60
  br i1 %61, label %62, label %72

62:                                               ; preds = %43
  %63 = lshr i64 %47, 32
  %64 = trunc i64 %63 to i32
  %65 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 10, i32 1
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, %64
  br i1 %67, label %68, label %72

68:                                               ; preds = %62
  %69 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 10, i32 2
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, %48
  br i1 %71, label %128, label %72

72:                                               ; preds = %43, %62, %68
  br i1 %1, label %73, label %93

73:                                               ; preds = %72
  %74 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 4
  %75 = load i8, i8* %74, align 4, !range !8
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %93, label %77

77:                                               ; preds = %73
  %78 = ptrtoint %class.CPWL_EditImpl* %0 to i64
  %79 = call i8* @_Znwm(i64 48) #13
  %80 = load i16, i16* %31, align 16
  %81 = load i32, i32* %32, align 4
  %82 = bitcast i8* %79 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN13CPWL_EditImpl13UndoBackspaceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %82, align 8
  %83 = getelementptr inbounds i8, i8* %79, i64 8
  %84 = bitcast i8* %83 to i64*
  store i64 %78, i64* %84, align 8
  %85 = getelementptr inbounds i8, i8* %79, i64 16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %85, i8* align 4 %50, i64 12, i1 false) #12
  %86 = getelementptr inbounds i8, i8* %79, i64 28
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %86, i8* align 4 %51, i64 12, i1 false) #12
  %87 = getelementptr inbounds i8, i8* %79, i64 40
  %88 = bitcast i8* %87 to i16*
  store i16 %80, i16* %88, align 8
  %89 = getelementptr inbounds i8, i8* %79, i64 44
  %90 = bitcast i8* %89 to i32*
  store i32 %81, i32* %90, align 4
  %91 = bitcast i8* %79 to %"class.CPWL_EditImpl::UndoItemIface"*
  %92 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 17
  call void @_ZN13CPWL_EditImpl9UndoStack7AddItemENSt3__110unique_ptrINS_13UndoItemIfaceENS1_14default_deleteIS3_EEEE(%"class.CPWL_EditImpl::UndoStack"* %92, %"class.CPWL_EditImpl::UndoItemIface"* nonnull %91) #12
  br label %93

93:                                               ; preds = %73, %77, %72
  %94 = bitcast %struct.CPVT_WordRange* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %94) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %94, i8* align 4 %51, i64 12, i1 false) #12
  %95 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %4, i64 0, i32 1
  %96 = bitcast %struct.CPVT_WordPlace* %95 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %96, i8* align 4 %50, i64 12, i1 false) #12
  %97 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %4, i64 0, i32 0, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %95, i64 0, i32 0
  %100 = load i32, i32* %99, align 4
  %101 = icmp eq i32 %98, %100
  br i1 %101, label %107, label %102

102:                                              ; preds = %93
  %103 = icmp sgt i32 %98, %100
  br i1 %103, label %104, label %127

104:                                              ; preds = %102
  %105 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %4, i64 0, i32 0, i32 1
  %106 = load i32, i32* %105, align 4
  br label %121

107:                                              ; preds = %93
  %108 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %4, i64 0, i32 0, i32 1
  %109 = load i32, i32* %108, align 4
  %110 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %4, i64 0, i32 1, i32 1
  %111 = load i32, i32* %110, align 4
  %112 = icmp eq i32 %109, %111
  br i1 %112, label %115, label %113

113:                                              ; preds = %107
  %114 = icmp sgt i32 %109, %111
  br i1 %114, label %121, label %127

115:                                              ; preds = %107
  %116 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %4, i64 0, i32 0, i32 2
  %117 = load i32, i32* %116, align 4
  %118 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %4, i64 0, i32 1, i32 2
  %119 = load i32, i32* %118, align 4
  %120 = icmp sgt i32 %117, %119
  br i1 %120, label %121, label %127

121:                                              ; preds = %115, %113, %104
  %122 = phi i32 [ %106, %104 ], [ %109, %113 ], [ %109, %115 ]
  %123 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %4, i64 0, i32 0, i32 2
  %124 = load i32, i32* %123, align 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %94, i8* align 4 %96, i64 12, i1 false) #12
  store i32 %98, i32* %99, align 4
  %125 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %4, i64 0, i32 1, i32 1
  store i32 %122, i32* %125, align 4
  %126 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %4, i64 0, i32 1, i32 2
  store i32 %124, i32* %126, align 4
  br label %127

127:                                              ; preds = %102, %113, %115, %121
  call void @_ZN13CPWL_EditImpl13RearrangePartERK14CPVT_WordRange(%class.CPWL_EditImpl* %0, %struct.CPVT_WordRange* nonnull dereferenceable(24) %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %94) #12
  call void @_ZN13CPWL_EditImpl13ScrollToCaretEv(%class.CPWL_EditImpl* %0)
  call void @_ZN13CPWL_EditImpl7RefreshEv(%class.CPWL_EditImpl* %0)
  call void @_ZN13CPWL_EditImpl14SetCaretOriginEv(%class.CPWL_EditImpl* %0)
  call void @_ZN13CPWL_EditImpl12SetCaretInfoEv(%class.CPWL_EditImpl* %0)
  br label %128

128:                                              ; preds = %68, %127
  %129 = phi i1 [ true, %127 ], [ false, %68 ]
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %30) #12
  br label %130

130:                                              ; preds = %2, %25, %128
  %131 = phi i1 [ %129, %128 ], [ false, %25 ], [ false, %2 ]
  ret i1 %131
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl16UndoInsertReturnC2EPS_RK14CPVT_WordPlaceS4_(%"class.CPWL_EditImpl::UndoInsertReturn"* nocapture, %class.CPWL_EditImpl*, %struct.CPVT_WordPlace* nocapture readonly dereferenceable(12), %struct.CPVT_WordPlace* nocapture readonly dereferenceable(12)) unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %"class.CPWL_EditImpl::UndoInsertReturn", %"class.CPWL_EditImpl::UndoInsertReturn"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN13CPWL_EditImpl16UndoInsertReturnE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.CPWL_EditImpl::UndoInsertReturn", %"class.CPWL_EditImpl::UndoInsertReturn"* %0, i64 0, i32 1, i32 0
  store %class.CPWL_EditImpl* %1, %class.CPWL_EditImpl** %6, align 8
  %7 = getelementptr inbounds %"class.CPWL_EditImpl::UndoInsertReturn", %"class.CPWL_EditImpl::UndoInsertReturn"* %0, i64 0, i32 2
  %8 = bitcast %struct.CPVT_WordPlace* %7 to i8*
  %9 = bitcast %struct.CPVT_WordPlace* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 4 %9, i64 12, i1 false)
  %10 = getelementptr inbounds %"class.CPWL_EditImpl::UndoInsertReturn", %"class.CPWL_EditImpl::UndoInsertReturn"* %0, i64 0, i32 3
  %11 = bitcast %struct.CPVT_WordPlace* %10 to i8*
  %12 = bitcast %struct.CPVT_WordPlace* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %11, i8* align 4 %12, i64 12, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN13CPWL_EditImpl16UndoInsertReturnD2Ev(%"class.CPWL_EditImpl::UndoInsertReturn"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.CPWL_EditImpl::UndoInsertReturn", %"class.CPWL_EditImpl::UndoInsertReturn"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN13CPWL_EditImpl16UndoInsertReturnE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl16UndoInsertReturnD0Ev(%"class.CPWL_EditImpl::UndoInsertReturn"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.CPWL_EditImpl::UndoInsertReturn"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN13CPWL_EditImpl16UndoInsertReturn4RedoEv(%"class.CPWL_EditImpl::UndoInsertReturn"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.CPWL_EditImpl::UndoInsertReturn", %"class.CPWL_EditImpl::UndoInsertReturn"* %0, i64 0, i32 1, i32 0
  %3 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %2, align 8
  %4 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 7, i32 0, i32 0, i32 0
  %5 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %4, align 8
  %6 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %5, i64 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11
  %11 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 1, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"class.CPWL_EditImpl::SelectState", %"class.CPWL_EditImpl::SelectState"* %10, i64 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %12, %14
  br i1 %15, label %16, label %28

16:                                               ; preds = %9
  %17 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 1, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %22, label %28

22:                                               ; preds = %16
  %23 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 1, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %24, %26
  br i1 %27, label %31, label %28

28:                                               ; preds = %22, %16, %9
  %29 = bitcast %"class.CPWL_EditImpl::SelectState"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %29, i8 -1, i64 24, i1 false) #12
  tail call void @_ZN13CPWL_EditImpl7RefreshEv(%class.CPWL_EditImpl* %3) #12
  %30 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %2, align 8
  br label %31

31:                                               ; preds = %1, %22, %28
  %32 = phi %class.CPWL_EditImpl* [ %3, %1 ], [ %3, %22 ], [ %30, %28 ]
  %33 = getelementptr inbounds %"class.CPWL_EditImpl::UndoInsertReturn", %"class.CPWL_EditImpl::UndoInsertReturn"* %0, i64 0, i32 2
  %34 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %32, i64 0, i32 9
  %35 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %32, i64 0, i32 10
  %36 = bitcast %struct.CPVT_WordPlace* %35 to i8*
  %37 = bitcast %struct.CPVT_WordPlace* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 4 %37, i64 12, i1 false) #12
  %38 = bitcast %struct.CPVT_WordPlace* %33 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 4 %38, i64 12, i1 false) #12
  %39 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %2, align 8
  %40 = tail call zeroext i1 @_ZN13CPWL_EditImpl12InsertReturnEb(%class.CPWL_EditImpl* %39, i1 zeroext false)
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN13CPWL_EditImpl12InsertReturnEb(%class.CPWL_EditImpl*, i1 zeroext) local_unnamed_addr #2 align 2 {
  %3 = alloca %struct.CPVT_WordRange, align 4
  %4 = tail call zeroext i1 @_ZNK13CPWL_EditImpl14IsTextOverflowEv(%class.CPWL_EditImpl* %0)
  br i1 %4, label %90, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %7 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %6, align 8
  %8 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %7, i64 0, i32 0
  %9 = load i8, i8* %8, align 8, !range !8
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %90, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9
  tail call void @_ZNK17CPVT_VariableText15UpdateWordPlaceER14CPVT_WordPlace(%class.CPVT_VariableText* %7, %struct.CPVT_WordPlace* dereferenceable(12) %12) #12
  %13 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %6, align 8
  %14 = tail call { i64, i32 } @_ZN17CPVT_VariableText13InsertSectionERK14CPVT_WordPlace(%class.CPVT_VariableText* %13, %struct.CPVT_WordPlace* dereferenceable(12) %12) #12
  %15 = extractvalue { i64, i32 } %14, 0
  %16 = extractvalue { i64, i32 } %14, 1
  %17 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 10
  %18 = bitcast %struct.CPVT_WordPlace* %17 to i8*
  %19 = bitcast %struct.CPVT_WordPlace* %12 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %18, i8* align 4 %19, i64 12, i1 false) #12
  %20 = bitcast %struct.CPVT_WordPlace* %12 to i64*
  store i64 %15, i64* %20, align 8
  %21 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9, i32 2
  store i32 %16, i32* %21, align 8
  %22 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11
  %23 = bitcast %"class.CPWL_EditImpl::SelectState"* %22 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %23, i8* align 4 %19, i64 12, i1 false) #12
  %24 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1
  %25 = bitcast %struct.CPVT_WordPlace* %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %25, i8* align 4 %19, i64 12, i1 false) #12
  %26 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %17, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = trunc i64 %15 to i32
  %29 = icmp eq i32 %27, %28
  br i1 %29, label %30, label %40

30:                                               ; preds = %11
  %31 = lshr i64 %15, 32
  %32 = trunc i64 %31 to i32
  %33 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 10, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, %32
  br i1 %35, label %36, label %40

36:                                               ; preds = %30
  %37 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 10, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, %16
  br i1 %39, label %90, label %40

40:                                               ; preds = %11, %30, %36
  br i1 %1, label %41, label %55

41:                                               ; preds = %40
  %42 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 4
  %43 = load i8, i8* %42, align 4, !range !8
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %55, label %45

45:                                               ; preds = %41
  %46 = ptrtoint %class.CPWL_EditImpl* %0 to i64
  %47 = tail call i8* @_Znwm(i64 40) #13
  %48 = bitcast i8* %47 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN13CPWL_EditImpl16UndoInsertReturnE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %48, align 8
  %49 = getelementptr inbounds i8, i8* %47, i64 8
  %50 = bitcast i8* %49 to i64*
  store i64 %46, i64* %50, align 8
  %51 = getelementptr inbounds i8, i8* %47, i64 16
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %51, i8* align 4 %18, i64 12, i1 false) #12
  %52 = getelementptr inbounds i8, i8* %47, i64 28
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %52, i8* align 4 %19, i64 12, i1 false) #12
  %53 = bitcast i8* %47 to %"class.CPWL_EditImpl::UndoItemIface"*
  %54 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 17
  tail call void @_ZN13CPWL_EditImpl9UndoStack7AddItemENSt3__110unique_ptrINS_13UndoItemIfaceENS1_14default_deleteIS3_EEEE(%"class.CPWL_EditImpl::UndoStack"* %54, %"class.CPWL_EditImpl::UndoItemIface"* nonnull %53) #12
  br label %55

55:                                               ; preds = %41, %45, %40
  %56 = bitcast %struct.CPVT_WordRange* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %56) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %56, i8* align 4 %18, i64 12, i1 false) #12
  %57 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %3, i64 0, i32 1
  %58 = bitcast %struct.CPVT_WordPlace* %57 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %58, i8* align 4 %19, i64 12, i1 false) #12
  %59 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %3, i64 0, i32 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %57, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %60, %62
  br i1 %63, label %69, label %64

64:                                               ; preds = %55
  %65 = icmp sgt i32 %60, %62
  br i1 %65, label %66, label %89

66:                                               ; preds = %64
  %67 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %3, i64 0, i32 0, i32 1
  %68 = load i32, i32* %67, align 4
  br label %83

69:                                               ; preds = %55
  %70 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %3, i64 0, i32 0, i32 1
  %71 = load i32, i32* %70, align 4
  %72 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %3, i64 0, i32 1, i32 1
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %71, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %69
  %76 = icmp sgt i32 %71, %73
  br i1 %76, label %83, label %89

77:                                               ; preds = %69
  %78 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %3, i64 0, i32 0, i32 2
  %79 = load i32, i32* %78, align 4
  %80 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %3, i64 0, i32 1, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = icmp sgt i32 %79, %81
  br i1 %82, label %83, label %89

83:                                               ; preds = %77, %75, %66
  %84 = phi i32 [ %68, %66 ], [ %71, %75 ], [ %71, %77 ]
  %85 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %3, i64 0, i32 0, i32 2
  %86 = load i32, i32* %85, align 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %56, i8* align 4 %58, i64 12, i1 false) #12
  store i32 %60, i32* %61, align 4
  %87 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %3, i64 0, i32 1, i32 1
  store i32 %84, i32* %87, align 4
  %88 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %3, i64 0, i32 1, i32 2
  store i32 %86, i32* %88, align 4
  br label %89

89:                                               ; preds = %64, %75, %77, %83
  call void @_ZN13CPWL_EditImpl13RearrangePartERK14CPVT_WordRange(%class.CPWL_EditImpl* %0, %struct.CPVT_WordRange* nonnull dereferenceable(24) %3)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %56) #12
  call void @_ZN13CPWL_EditImpl13ScrollToCaretEv(%class.CPWL_EditImpl* %0)
  call void @_ZN13CPWL_EditImpl7RefreshEv(%class.CPWL_EditImpl* %0)
  call void @_ZN13CPWL_EditImpl14SetCaretOriginEv(%class.CPWL_EditImpl* %0)
  call void @_ZN13CPWL_EditImpl12SetCaretInfoEv(%class.CPWL_EditImpl* %0)
  br label %90

90:                                               ; preds = %5, %36, %2, %89
  %91 = phi i1 [ true, %89 ], [ false, %5 ], [ false, %2 ], [ false, %36 ]
  ret i1 %91
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN13CPWL_EditImpl16UndoInsertReturn4UndoEv(%"class.CPWL_EditImpl::UndoInsertReturn"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.CPWL_EditImpl::UndoInsertReturn", %"class.CPWL_EditImpl::UndoInsertReturn"* %0, i64 0, i32 1, i32 0
  %3 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %2, align 8
  %4 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 7, i32 0, i32 0, i32 0
  %5 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %4, align 8
  %6 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %5, i64 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11
  %11 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 1, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"class.CPWL_EditImpl::SelectState", %"class.CPWL_EditImpl::SelectState"* %10, i64 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %12, %14
  br i1 %15, label %16, label %28

16:                                               ; preds = %9
  %17 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 1, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %22, label %28

22:                                               ; preds = %16
  %23 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 1, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %24, %26
  br i1 %27, label %31, label %28

28:                                               ; preds = %22, %16, %9
  %29 = bitcast %"class.CPWL_EditImpl::SelectState"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %29, i8 -1, i64 24, i1 false) #12
  tail call void @_ZN13CPWL_EditImpl7RefreshEv(%class.CPWL_EditImpl* %3) #12
  %30 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %2, align 8
  br label %31

31:                                               ; preds = %1, %22, %28
  %32 = phi %class.CPWL_EditImpl* [ %3, %1 ], [ %3, %22 ], [ %30, %28 ]
  %33 = getelementptr inbounds %"class.CPWL_EditImpl::UndoInsertReturn", %"class.CPWL_EditImpl::UndoInsertReturn"* %0, i64 0, i32 3
  %34 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %32, i64 0, i32 9
  %35 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %32, i64 0, i32 10
  %36 = bitcast %struct.CPVT_WordPlace* %35 to i8*
  %37 = bitcast %struct.CPVT_WordPlace* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 4 %37, i64 12, i1 false) #12
  %38 = bitcast %struct.CPVT_WordPlace* %33 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 4 %38, i64 12, i1 false) #12
  %39 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %2, align 8
  %40 = tail call zeroext i1 @_ZN13CPWL_EditImpl9BackspaceEb(%class.CPWL_EditImpl* %39, i1 zeroext false)
  ret i32 0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN13CPWL_EditImpl20UndoReplaceSelectionC2EPS_b(%"class.CPWL_EditImpl::UndoReplaceSelection"* nocapture, %class.CPWL_EditImpl*, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = zext i1 %2 to i8
  %5 = getelementptr inbounds %"class.CPWL_EditImpl::UndoReplaceSelection", %"class.CPWL_EditImpl::UndoReplaceSelection"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN13CPWL_EditImpl20UndoReplaceSelectionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.CPWL_EditImpl::UndoReplaceSelection", %"class.CPWL_EditImpl::UndoReplaceSelection"* %0, i64 0, i32 1, i32 0
  store %class.CPWL_EditImpl* %1, %class.CPWL_EditImpl** %6, align 8
  %7 = getelementptr inbounds %"class.CPWL_EditImpl::UndoReplaceSelection", %"class.CPWL_EditImpl::UndoReplaceSelection"* %0, i64 0, i32 2
  store i8 %4, i8* %7, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN13CPWL_EditImpl20UndoReplaceSelectionD2Ev(%"class.CPWL_EditImpl::UndoReplaceSelection"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.CPWL_EditImpl::UndoReplaceSelection", %"class.CPWL_EditImpl::UndoReplaceSelection"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN13CPWL_EditImpl20UndoReplaceSelectionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl20UndoReplaceSelectionD0Ev(%"class.CPWL_EditImpl::UndoReplaceSelection"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.CPWL_EditImpl::UndoReplaceSelection"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN13CPWL_EditImpl20UndoReplaceSelection4RedoEv(%"class.CPWL_EditImpl::UndoReplaceSelection"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.CPWL_EditImpl::UndoReplaceSelection", %"class.CPWL_EditImpl::UndoReplaceSelection"* %0, i64 0, i32 1, i32 0
  %3 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %2, align 8
  %4 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 7, i32 0, i32 0, i32 0
  %5 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %4, align 8
  %6 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %5, i64 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %30, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11
  %11 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 1, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"class.CPWL_EditImpl::SelectState", %"class.CPWL_EditImpl::SelectState"* %10, i64 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %12, %14
  br i1 %15, label %16, label %28

16:                                               ; preds = %9
  %17 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 1, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %22, label %28

22:                                               ; preds = %16
  %23 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 1, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %24, %26
  br i1 %27, label %30, label %28

28:                                               ; preds = %22, %16, %9
  %29 = bitcast %"class.CPWL_EditImpl::SelectState"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %29, i8 -1, i64 24, i1 false) #12
  tail call void @_ZN13CPWL_EditImpl7RefreshEv(%class.CPWL_EditImpl* %3) #12
  br label %30

30:                                               ; preds = %1, %22, %28
  %31 = getelementptr inbounds %"class.CPWL_EditImpl::UndoReplaceSelection", %"class.CPWL_EditImpl::UndoReplaceSelection"* %0, i64 0, i32 2
  %32 = load i8, i8* %31, align 8, !range !8
  %33 = icmp eq i8 %32, 0
  %34 = select i1 %33, i32 3, i32 0
  ret i32 %34
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN13CPWL_EditImpl20UndoReplaceSelection4UndoEv(%"class.CPWL_EditImpl::UndoReplaceSelection"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.CPWL_EditImpl::UndoReplaceSelection", %"class.CPWL_EditImpl::UndoReplaceSelection"* %0, i64 0, i32 1, i32 0
  %3 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %2, align 8
  %4 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 7, i32 0, i32 0, i32 0
  %5 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %4, align 8
  %6 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %5, i64 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %30, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11
  %11 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 1, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"class.CPWL_EditImpl::SelectState", %"class.CPWL_EditImpl::SelectState"* %10, i64 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %12, %14
  br i1 %15, label %16, label %28

16:                                               ; preds = %9
  %17 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 1, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %22, label %28

22:                                               ; preds = %16
  %23 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 1, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %24, %26
  br i1 %27, label %30, label %28

28:                                               ; preds = %22, %16, %9
  %29 = bitcast %"class.CPWL_EditImpl::SelectState"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %29, i8 -1, i64 24, i1 false) #12
  tail call void @_ZN13CPWL_EditImpl7RefreshEv(%class.CPWL_EditImpl* %3) #12
  br label %30

30:                                               ; preds = %1, %22, %28
  %31 = getelementptr inbounds %"class.CPWL_EditImpl::UndoReplaceSelection", %"class.CPWL_EditImpl::UndoReplaceSelection"* %0, i64 0, i32 2
  %32 = load i8, i8* %31, align 8, !range !8
  %33 = icmp eq i8 %32, 0
  %34 = select i1 %33, i32 0, i32 3
  ret i32 %34
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl13UndoBackspaceC2EPS_RK14CPVT_WordPlaceS4_ti(%"class.CPWL_EditImpl::UndoBackspace"* nocapture, %class.CPWL_EditImpl*, %struct.CPVT_WordPlace* nocapture readonly dereferenceable(12), %struct.CPVT_WordPlace* nocapture readonly dereferenceable(12), i16 zeroext, i32) unnamed_addr #2 align 2 {
  %7 = getelementptr inbounds %"class.CPWL_EditImpl::UndoBackspace", %"class.CPWL_EditImpl::UndoBackspace"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN13CPWL_EditImpl13UndoBackspaceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.CPWL_EditImpl::UndoBackspace", %"class.CPWL_EditImpl::UndoBackspace"* %0, i64 0, i32 1, i32 0
  store %class.CPWL_EditImpl* %1, %class.CPWL_EditImpl** %8, align 8
  %9 = getelementptr inbounds %"class.CPWL_EditImpl::UndoBackspace", %"class.CPWL_EditImpl::UndoBackspace"* %0, i64 0, i32 2
  %10 = bitcast %struct.CPVT_WordPlace* %9 to i8*
  %11 = bitcast %struct.CPVT_WordPlace* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 4 %11, i64 12, i1 false)
  %12 = getelementptr inbounds %"class.CPWL_EditImpl::UndoBackspace", %"class.CPWL_EditImpl::UndoBackspace"* %0, i64 0, i32 3
  %13 = bitcast %struct.CPVT_WordPlace* %12 to i8*
  %14 = bitcast %struct.CPVT_WordPlace* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %13, i8* align 4 %14, i64 12, i1 false)
  %15 = getelementptr inbounds %"class.CPWL_EditImpl::UndoBackspace", %"class.CPWL_EditImpl::UndoBackspace"* %0, i64 0, i32 4
  store i16 %4, i16* %15, align 8
  %16 = getelementptr inbounds %"class.CPWL_EditImpl::UndoBackspace", %"class.CPWL_EditImpl::UndoBackspace"* %0, i64 0, i32 5
  store i32 %5, i32* %16, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN13CPWL_EditImpl13UndoBackspaceD2Ev(%"class.CPWL_EditImpl::UndoBackspace"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.CPWL_EditImpl::UndoBackspace", %"class.CPWL_EditImpl::UndoBackspace"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN13CPWL_EditImpl13UndoBackspaceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl13UndoBackspaceD0Ev(%"class.CPWL_EditImpl::UndoBackspace"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.CPWL_EditImpl::UndoBackspace"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN13CPWL_EditImpl13UndoBackspace4RedoEv(%"class.CPWL_EditImpl::UndoBackspace"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.CPWL_EditImpl::UndoBackspace", %"class.CPWL_EditImpl::UndoBackspace"* %0, i64 0, i32 1, i32 0
  %3 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %2, align 8
  %4 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 7, i32 0, i32 0, i32 0
  %5 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %4, align 8
  %6 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %5, i64 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11
  %11 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 1, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"class.CPWL_EditImpl::SelectState", %"class.CPWL_EditImpl::SelectState"* %10, i64 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %12, %14
  br i1 %15, label %16, label %28

16:                                               ; preds = %9
  %17 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 1, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %22, label %28

22:                                               ; preds = %16
  %23 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 1, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %24, %26
  br i1 %27, label %31, label %28

28:                                               ; preds = %22, %16, %9
  %29 = bitcast %"class.CPWL_EditImpl::SelectState"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %29, i8 -1, i64 24, i1 false) #12
  tail call void @_ZN13CPWL_EditImpl7RefreshEv(%class.CPWL_EditImpl* %3) #12
  %30 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %2, align 8
  br label %31

31:                                               ; preds = %1, %22, %28
  %32 = phi %class.CPWL_EditImpl* [ %3, %1 ], [ %3, %22 ], [ %30, %28 ]
  %33 = getelementptr inbounds %"class.CPWL_EditImpl::UndoBackspace", %"class.CPWL_EditImpl::UndoBackspace"* %0, i64 0, i32 2
  %34 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %32, i64 0, i32 9
  %35 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %32, i64 0, i32 10
  %36 = bitcast %struct.CPVT_WordPlace* %35 to i8*
  %37 = bitcast %struct.CPVT_WordPlace* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 4 %37, i64 12, i1 false) #12
  %38 = bitcast %struct.CPVT_WordPlace* %33 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 4 %38, i64 12, i1 false) #12
  %39 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %2, align 8
  %40 = tail call zeroext i1 @_ZN13CPWL_EditImpl9BackspaceEb(%class.CPWL_EditImpl* %39, i1 zeroext false)
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN13CPWL_EditImpl13UndoBackspace4UndoEv(%"class.CPWL_EditImpl::UndoBackspace"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.CPWL_EditImpl::UndoBackspace", %"class.CPWL_EditImpl::UndoBackspace"* %0, i64 0, i32 1, i32 0
  %3 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %2, align 8
  %4 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 7, i32 0, i32 0, i32 0
  %5 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %4, align 8
  %6 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %5, i64 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11
  %11 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 1, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"class.CPWL_EditImpl::SelectState", %"class.CPWL_EditImpl::SelectState"* %10, i64 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %12, %14
  br i1 %15, label %16, label %28

16:                                               ; preds = %9
  %17 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 1, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %22, label %28

22:                                               ; preds = %16
  %23 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 1, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %24, %26
  br i1 %27, label %31, label %28

28:                                               ; preds = %22, %16, %9
  %29 = bitcast %"class.CPWL_EditImpl::SelectState"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %29, i8 -1, i64 24, i1 false) #12
  tail call void @_ZN13CPWL_EditImpl7RefreshEv(%class.CPWL_EditImpl* %3) #12
  %30 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %2, align 8
  br label %31

31:                                               ; preds = %1, %22, %28
  %32 = phi %class.CPWL_EditImpl* [ %3, %1 ], [ %3, %22 ], [ %30, %28 ]
  %33 = getelementptr inbounds %"class.CPWL_EditImpl::UndoBackspace", %"class.CPWL_EditImpl::UndoBackspace"* %0, i64 0, i32 3
  %34 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %32, i64 0, i32 9
  %35 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %32, i64 0, i32 10
  %36 = bitcast %struct.CPVT_WordPlace* %35 to i8*
  %37 = bitcast %struct.CPVT_WordPlace* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 4 %37, i64 12, i1 false) #12
  %38 = bitcast %struct.CPVT_WordPlace* %33 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 4 %38, i64 12, i1 false) #12
  %39 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %33, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %"class.CPWL_EditImpl::UndoBackspace", %"class.CPWL_EditImpl::UndoBackspace"* %0, i64 0, i32 2, i32 0
  %42 = load i32, i32* %41, align 8
  %43 = icmp eq i32 %40, %42
  %44 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %2, align 8
  br i1 %43, label %47, label %45

45:                                               ; preds = %31
  %46 = tail call zeroext i1 @_ZN13CPWL_EditImpl12InsertReturnEb(%class.CPWL_EditImpl* %44, i1 zeroext false)
  br label %53

47:                                               ; preds = %31
  %48 = getelementptr inbounds %"class.CPWL_EditImpl::UndoBackspace", %"class.CPWL_EditImpl::UndoBackspace"* %0, i64 0, i32 4
  %49 = load i16, i16* %48, align 8
  %50 = getelementptr inbounds %"class.CPWL_EditImpl::UndoBackspace", %"class.CPWL_EditImpl::UndoBackspace"* %0, i64 0, i32 5
  %51 = load i32, i32* %50, align 4
  %52 = tail call zeroext i1 @_ZN13CPWL_EditImpl10InsertWordEtib(%class.CPWL_EditImpl* %44, i16 zeroext %49, i32 %51, i1 zeroext false)
  br label %53

53:                                               ; preds = %47, %45
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl10UndoDeleteC2EPS_RK14CPVT_WordPlaceS4_tib(%"class.CPWL_EditImpl::UndoDelete"* nocapture, %class.CPWL_EditImpl*, %struct.CPVT_WordPlace* nocapture readonly dereferenceable(12), %struct.CPVT_WordPlace* nocapture readonly dereferenceable(12), i16 zeroext, i32, i1 zeroext) unnamed_addr #2 align 2 {
  %8 = zext i1 %6 to i8
  %9 = getelementptr inbounds %"class.CPWL_EditImpl::UndoDelete", %"class.CPWL_EditImpl::UndoDelete"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN13CPWL_EditImpl10UndoDeleteE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.CPWL_EditImpl::UndoDelete", %"class.CPWL_EditImpl::UndoDelete"* %0, i64 0, i32 1, i32 0
  store %class.CPWL_EditImpl* %1, %class.CPWL_EditImpl** %10, align 8
  %11 = getelementptr inbounds %"class.CPWL_EditImpl::UndoDelete", %"class.CPWL_EditImpl::UndoDelete"* %0, i64 0, i32 2
  %12 = bitcast %struct.CPVT_WordPlace* %11 to i8*
  %13 = bitcast %struct.CPVT_WordPlace* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 4 %13, i64 12, i1 false)
  %14 = getelementptr inbounds %"class.CPWL_EditImpl::UndoDelete", %"class.CPWL_EditImpl::UndoDelete"* %0, i64 0, i32 3
  %15 = bitcast %struct.CPVT_WordPlace* %14 to i8*
  %16 = bitcast %struct.CPVT_WordPlace* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %15, i8* align 4 %16, i64 12, i1 false)
  %17 = getelementptr inbounds %"class.CPWL_EditImpl::UndoDelete", %"class.CPWL_EditImpl::UndoDelete"* %0, i64 0, i32 4
  store i16 %4, i16* %17, align 8
  %18 = getelementptr inbounds %"class.CPWL_EditImpl::UndoDelete", %"class.CPWL_EditImpl::UndoDelete"* %0, i64 0, i32 6
  store i32 %5, i32* %18, align 4
  %19 = getelementptr inbounds %"class.CPWL_EditImpl::UndoDelete", %"class.CPWL_EditImpl::UndoDelete"* %0, i64 0, i32 7
  store i8 %8, i8* %19, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN13CPWL_EditImpl10UndoDeleteD2Ev(%"class.CPWL_EditImpl::UndoDelete"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.CPWL_EditImpl::UndoDelete", %"class.CPWL_EditImpl::UndoDelete"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN13CPWL_EditImpl10UndoDeleteE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl10UndoDeleteD0Ev(%"class.CPWL_EditImpl::UndoDelete"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.CPWL_EditImpl::UndoDelete"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN13CPWL_EditImpl10UndoDelete4RedoEv(%"class.CPWL_EditImpl::UndoDelete"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.CPWL_EditImpl::UndoDelete", %"class.CPWL_EditImpl::UndoDelete"* %0, i64 0, i32 1, i32 0
  %3 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %2, align 8
  %4 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 7, i32 0, i32 0, i32 0
  %5 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %4, align 8
  %6 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %5, i64 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11
  %11 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 1, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"class.CPWL_EditImpl::SelectState", %"class.CPWL_EditImpl::SelectState"* %10, i64 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %12, %14
  br i1 %15, label %16, label %28

16:                                               ; preds = %9
  %17 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 1, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %22, label %28

22:                                               ; preds = %16
  %23 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 1, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %24, %26
  br i1 %27, label %31, label %28

28:                                               ; preds = %22, %16, %9
  %29 = bitcast %"class.CPWL_EditImpl::SelectState"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %29, i8 -1, i64 24, i1 false) #12
  tail call void @_ZN13CPWL_EditImpl7RefreshEv(%class.CPWL_EditImpl* %3) #12
  %30 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %2, align 8
  br label %31

31:                                               ; preds = %1, %22, %28
  %32 = phi %class.CPWL_EditImpl* [ %3, %1 ], [ %3, %22 ], [ %30, %28 ]
  %33 = getelementptr inbounds %"class.CPWL_EditImpl::UndoDelete", %"class.CPWL_EditImpl::UndoDelete"* %0, i64 0, i32 2
  %34 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %32, i64 0, i32 9
  %35 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %32, i64 0, i32 10
  %36 = bitcast %struct.CPVT_WordPlace* %35 to i8*
  %37 = bitcast %struct.CPVT_WordPlace* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 4 %37, i64 12, i1 false) #12
  %38 = bitcast %struct.CPVT_WordPlace* %33 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 4 %38, i64 12, i1 false) #12
  %39 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %2, align 8
  %40 = tail call zeroext i1 @_ZN13CPWL_EditImpl6DeleteEb(%class.CPWL_EditImpl* %39, i1 zeroext false)
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN13CPWL_EditImpl6DeleteEb(%class.CPWL_EditImpl*, i1 zeroext) local_unnamed_addr #2 align 2 {
  %3 = alloca %class.CPVT_Word, align 16
  %4 = alloca %struct.CPVT_WordPlace, align 8
  %5 = alloca %struct.CPVT_WordRange, align 4
  %6 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %7 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %6, align 8
  %8 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %7, i64 0, i32 0
  %9 = load i8, i8* %8, align 8, !range !8
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %142, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9
  %13 = tail call { i64, i32 } @_ZNK17CPVT_VariableText15GetEndWordPlaceEv(%class.CPVT_VariableText* %7) #12
  %14 = extractvalue { i64, i32 } %13, 0
  %15 = extractvalue { i64, i32 } %13, 1
  %16 = trunc i64 %14 to i32
  %17 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %12, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, %16
  br i1 %19, label %20, label %30

20:                                               ; preds = %11
  %21 = lshr i64 %14, 32
  %22 = trunc i64 %21 to i32
  %23 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, %22
  br i1 %25, label %26, label %30

26:                                               ; preds = %20
  %27 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %15, %28
  br i1 %29, label %142, label %30

30:                                               ; preds = %11, %20, %26
  %31 = bitcast %class.CPVT_Word* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %31) #12
  %32 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %3, i64 0, i32 0
  %33 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %3, i64 0, i32 1
  %34 = bitcast %class.CPVT_Word* %3 to <4 x i32>*
  store <4 x i32> <i32 -1431655766, i32 0, i32 -1, i32 -1>, <4 x i32>* %34, align 16
  store i16 0, i16* %32, align 16
  %35 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %3, i64 0, i32 2, i32 2
  store i32 -1, i32* %35, align 8
  %36 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %3, i64 0, i32 3, i32 0
  %37 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %3, i64 0, i32 7
  %38 = bitcast float* %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %38, i8 0, i64 20, i1 false) #12
  store i32 -1, i32* %37, align 8
  %39 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %3, i64 0, i32 8
  store float 0.000000e+00, float* %39, align 4
  br i1 %1, label %40, label %51

40:                                               ; preds = %30
  %41 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %6, align 8
  %42 = tail call %"class.CPVT_VariableText::Iterator"* @_ZN17CPVT_VariableText11GetIteratorEv(%class.CPVT_VariableText* %41) #12
  %43 = bitcast %struct.CPVT_WordPlace* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %43) #12
  %44 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %6, align 8
  %45 = tail call { i64, i32 } @_ZNK17CPVT_VariableText16GetNextWordPlaceERK14CPVT_WordPlace(%class.CPVT_VariableText* %44, %struct.CPVT_WordPlace* dereferenceable(12) %12) #12
  %46 = extractvalue { i64, i32 } %45, 0
  %47 = extractvalue { i64, i32 } %45, 1
  %48 = bitcast %struct.CPVT_WordPlace* %4 to i64*
  store i64 %46, i64* %48, align 8
  %49 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %4, i64 0, i32 2
  store i32 %47, i32* %49, align 8
  call void @_ZN17CPVT_VariableText8Iterator5SetAtERK14CPVT_WordPlace(%"class.CPVT_VariableText::Iterator"* %42, %struct.CPVT_WordPlace* nonnull dereferenceable(12) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %43) #12
  %50 = call zeroext i1 @_ZNK17CPVT_VariableText8Iterator7GetWordER9CPVT_Word(%"class.CPVT_VariableText::Iterator"* %42, %class.CPVT_Word* nonnull dereferenceable(48) %3) #12
  br label %51

51:                                               ; preds = %40, %30
  %52 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %6, align 8
  call void @_ZNK17CPVT_VariableText15UpdateWordPlaceER14CPVT_WordPlace(%class.CPVT_VariableText* %52, %struct.CPVT_WordPlace* dereferenceable(12) %12) #12
  %53 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %6, align 8
  %54 = call { i64, i32 } @_ZNK17CPVT_VariableText18GetSectionEndPlaceERK14CPVT_WordPlace(%class.CPVT_VariableText* %53, %struct.CPVT_WordPlace* dereferenceable(12) %12) #12
  %55 = extractvalue { i64, i32 } %54, 0
  %56 = extractvalue { i64, i32 } %54, 1
  %57 = trunc i64 %55 to i32
  %58 = load i32, i32* %17, align 4
  %59 = icmp eq i32 %58, %57
  br i1 %59, label %60, label %71

60:                                               ; preds = %51
  %61 = lshr i64 %55, 32
  %62 = trunc i64 %61 to i32
  %63 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9, i32 1
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, %62
  br i1 %65, label %66, label %71

66:                                               ; preds = %60
  %67 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9, i32 2
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %56, %68
  %70 = zext i1 %69 to i8
  br label %71

71:                                               ; preds = %51, %60, %66
  %72 = phi i8 [ 0, %60 ], [ 0, %51 ], [ %70, %66 ]
  %73 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %6, align 8
  %74 = call { i64, i32 } @_ZN17CPVT_VariableText10DeleteWordERK14CPVT_WordPlace(%class.CPVT_VariableText* %73, %struct.CPVT_WordPlace* dereferenceable(12) %12) #12
  %75 = extractvalue { i64, i32 } %74, 0
  %76 = extractvalue { i64, i32 } %74, 1
  %77 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 10
  %78 = bitcast %struct.CPVT_WordPlace* %77 to i8*
  %79 = bitcast %struct.CPVT_WordPlace* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %78, i8* align 4 %79, i64 12, i1 false) #12
  %80 = bitcast %struct.CPVT_WordPlace* %12 to i64*
  store i64 %75, i64* %80, align 8
  %81 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9, i32 2
  store i32 %76, i32* %81, align 8
  %82 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11
  %83 = bitcast %"class.CPWL_EditImpl::SelectState"* %82 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %83, i8* align 4 %79, i64 12, i1 false) #12
  %84 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1
  %85 = bitcast %struct.CPVT_WordPlace* %84 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %85, i8* align 4 %79, i64 12, i1 false) #12
  br i1 %1, label %86, label %107

86:                                               ; preds = %71
  %87 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 4
  %88 = load i8, i8* %87, align 4, !range !8
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %107, label %90

90:                                               ; preds = %86
  %91 = ptrtoint %class.CPWL_EditImpl* %0 to i64
  %92 = call i8* @_Znwm(i64 56) #13
  %93 = load i16, i16* %32, align 16
  %94 = load i32, i32* %33, align 4
  %95 = bitcast i8* %92 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN13CPWL_EditImpl10UndoDeleteE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %95, align 8
  %96 = getelementptr inbounds i8, i8* %92, i64 8
  %97 = bitcast i8* %96 to i64*
  store i64 %91, i64* %97, align 8
  %98 = getelementptr inbounds i8, i8* %92, i64 16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %98, i8* align 4 %78, i64 12, i1 false) #12
  %99 = getelementptr inbounds i8, i8* %92, i64 28
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %99, i8* align 4 %79, i64 12, i1 false) #12
  %100 = getelementptr inbounds i8, i8* %92, i64 40
  %101 = bitcast i8* %100 to i16*
  store i16 %93, i16* %101, align 8
  %102 = getelementptr inbounds i8, i8* %92, i64 44
  %103 = bitcast i8* %102 to i32*
  store i32 %94, i32* %103, align 4
  %104 = getelementptr inbounds i8, i8* %92, i64 48
  store i8 %72, i8* %104, align 8
  %105 = bitcast i8* %92 to %"class.CPWL_EditImpl::UndoItemIface"*
  %106 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 17
  call void @_ZN13CPWL_EditImpl9UndoStack7AddItemENSt3__110unique_ptrINS_13UndoItemIfaceENS1_14default_deleteIS3_EEEE(%"class.CPWL_EditImpl::UndoStack"* %106, %"class.CPWL_EditImpl::UndoItemIface"* nonnull %105) #12
  br label %107

107:                                              ; preds = %90, %86, %71
  %108 = bitcast %struct.CPVT_WordRange* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %108) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %108, i8* align 4 %78, i64 12, i1 false) #12
  %109 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %5, i64 0, i32 1
  %110 = bitcast %struct.CPVT_WordPlace* %109 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %110, i8* align 4 %79, i64 12, i1 false) #12
  %111 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %5, i64 0, i32 0, i32 0
  %112 = load i32, i32* %111, align 4
  %113 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %109, i64 0, i32 0
  %114 = load i32, i32* %113, align 4
  %115 = icmp eq i32 %112, %114
  br i1 %115, label %121, label %116

116:                                              ; preds = %107
  %117 = icmp sgt i32 %112, %114
  br i1 %117, label %118, label %141

118:                                              ; preds = %116
  %119 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %5, i64 0, i32 0, i32 1
  %120 = load i32, i32* %119, align 4
  br label %135

121:                                              ; preds = %107
  %122 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %5, i64 0, i32 0, i32 1
  %123 = load i32, i32* %122, align 4
  %124 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %5, i64 0, i32 1, i32 1
  %125 = load i32, i32* %124, align 4
  %126 = icmp eq i32 %123, %125
  br i1 %126, label %129, label %127

127:                                              ; preds = %121
  %128 = icmp sgt i32 %123, %125
  br i1 %128, label %135, label %141

129:                                              ; preds = %121
  %130 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %5, i64 0, i32 0, i32 2
  %131 = load i32, i32* %130, align 4
  %132 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %5, i64 0, i32 1, i32 2
  %133 = load i32, i32* %132, align 4
  %134 = icmp sgt i32 %131, %133
  br i1 %134, label %135, label %141

135:                                              ; preds = %129, %127, %118
  %136 = phi i32 [ %120, %118 ], [ %123, %127 ], [ %123, %129 ]
  %137 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %5, i64 0, i32 0, i32 2
  %138 = load i32, i32* %137, align 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %108, i8* align 4 %110, i64 12, i1 false) #12
  store i32 %112, i32* %113, align 4
  %139 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %5, i64 0, i32 1, i32 1
  store i32 %136, i32* %139, align 4
  %140 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %5, i64 0, i32 1, i32 2
  store i32 %138, i32* %140, align 4
  br label %141

141:                                              ; preds = %116, %127, %129, %135
  call void @_ZN13CPWL_EditImpl13RearrangePartERK14CPVT_WordRange(%class.CPWL_EditImpl* %0, %struct.CPVT_WordRange* nonnull dereferenceable(24) %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %108) #12
  call void @_ZN13CPWL_EditImpl13ScrollToCaretEv(%class.CPWL_EditImpl* %0)
  call void @_ZN13CPWL_EditImpl7RefreshEv(%class.CPWL_EditImpl* %0)
  call void @_ZN13CPWL_EditImpl14SetCaretOriginEv(%class.CPWL_EditImpl* %0)
  call void @_ZN13CPWL_EditImpl12SetCaretInfoEv(%class.CPWL_EditImpl* %0)
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %31) #12
  br label %142

142:                                              ; preds = %2, %26, %141
  %143 = phi i1 [ true, %141 ], [ false, %26 ], [ false, %2 ]
  ret i1 %143
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN13CPWL_EditImpl10UndoDelete4UndoEv(%"class.CPWL_EditImpl::UndoDelete"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.CPWL_EditImpl::UndoDelete", %"class.CPWL_EditImpl::UndoDelete"* %0, i64 0, i32 1, i32 0
  %3 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %2, align 8
  %4 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 7, i32 0, i32 0, i32 0
  %5 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %4, align 8
  %6 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %5, i64 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11
  %11 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 1, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"class.CPWL_EditImpl::SelectState", %"class.CPWL_EditImpl::SelectState"* %10, i64 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %12, %14
  br i1 %15, label %16, label %28

16:                                               ; preds = %9
  %17 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 1, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %22, label %28

22:                                               ; preds = %16
  %23 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 1, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %24, %26
  br i1 %27, label %31, label %28

28:                                               ; preds = %22, %16, %9
  %29 = bitcast %"class.CPWL_EditImpl::SelectState"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %29, i8 -1, i64 24, i1 false) #12
  tail call void @_ZN13CPWL_EditImpl7RefreshEv(%class.CPWL_EditImpl* %3) #12
  %30 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %2, align 8
  br label %31

31:                                               ; preds = %1, %22, %28
  %32 = phi %class.CPWL_EditImpl* [ %3, %1 ], [ %3, %22 ], [ %30, %28 ]
  %33 = getelementptr inbounds %"class.CPWL_EditImpl::UndoDelete", %"class.CPWL_EditImpl::UndoDelete"* %0, i64 0, i32 3
  %34 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %32, i64 0, i32 9
  %35 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %32, i64 0, i32 10
  %36 = bitcast %struct.CPVT_WordPlace* %35 to i8*
  %37 = bitcast %struct.CPVT_WordPlace* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 4 %37, i64 12, i1 false) #12
  %38 = bitcast %struct.CPVT_WordPlace* %33 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 4 %38, i64 12, i1 false) #12
  %39 = getelementptr inbounds %"class.CPWL_EditImpl::UndoDelete", %"class.CPWL_EditImpl::UndoDelete"* %0, i64 0, i32 7
  %40 = load i8, i8* %39, align 8, !range !8
  %41 = icmp eq i8 %40, 0
  %42 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %2, align 8
  br i1 %41, label %45, label %43

43:                                               ; preds = %31
  %44 = tail call zeroext i1 @_ZN13CPWL_EditImpl12InsertReturnEb(%class.CPWL_EditImpl* %42, i1 zeroext false)
  br label %51

45:                                               ; preds = %31
  %46 = getelementptr inbounds %"class.CPWL_EditImpl::UndoDelete", %"class.CPWL_EditImpl::UndoDelete"* %0, i64 0, i32 4
  %47 = load i16, i16* %46, align 8
  %48 = getelementptr inbounds %"class.CPWL_EditImpl::UndoDelete", %"class.CPWL_EditImpl::UndoDelete"* %0, i64 0, i32 6
  %49 = load i32, i32* %48, align 4
  %50 = tail call zeroext i1 @_ZN13CPWL_EditImpl10InsertWordEtib(%class.CPWL_EditImpl* %42, i16 zeroext %47, i32 %49, i1 zeroext false)
  br label %51

51:                                               ; preds = %45, %43
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl9UndoClearC2EPS_RK14CPVT_WordRangeRKN5fxcrt10WideStringE(%"class.CPWL_EditImpl::UndoClear"*, %class.CPWL_EditImpl*, %struct.CPVT_WordRange* nocapture readonly dereferenceable(24), %"class.fxcrt::WideString"* dereferenceable(8)) unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %"class.CPWL_EditImpl::UndoClear", %"class.CPWL_EditImpl::UndoClear"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN13CPWL_EditImpl9UndoClearE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.CPWL_EditImpl::UndoClear", %"class.CPWL_EditImpl::UndoClear"* %0, i64 0, i32 1, i32 0
  store %class.CPWL_EditImpl* %1, %class.CPWL_EditImpl** %6, align 8
  %7 = getelementptr inbounds %"class.CPWL_EditImpl::UndoClear", %"class.CPWL_EditImpl::UndoClear"* %0, i64 0, i32 2
  %8 = bitcast %struct.CPVT_WordRange* %7 to i8*
  %9 = bitcast %struct.CPVT_WordRange* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 4 %9, i64 24, i1 false)
  %10 = getelementptr inbounds %"class.CPWL_EditImpl::UndoClear", %"class.CPWL_EditImpl::UndoClear"* %0, i64 0, i32 3
  tail call void @_ZN5fxcrt10WideStringC1ERKS0_(%"class.fxcrt::WideString"* %10, %"class.fxcrt::WideString"* dereferenceable(8) %3) #12
  ret void
}

declare void @_ZN5fxcrt10WideStringC1ERKS0_(%"class.fxcrt::WideString"*, %"class.fxcrt::WideString"* dereferenceable(8)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl9UndoClearD2Ev(%"class.CPWL_EditImpl::UndoClear"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.CPWL_EditImpl::UndoClear", %"class.CPWL_EditImpl::UndoClear"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN13CPWL_EditImpl9UndoClearE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.CPWL_EditImpl::UndoClear", %"class.CPWL_EditImpl::UndoClear"* %0, i64 0, i32 3
  tail call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* %3) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl9UndoClearD0Ev(%"class.CPWL_EditImpl::UndoClear"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.CPWL_EditImpl::UndoClear", %"class.CPWL_EditImpl::UndoClear"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN13CPWL_EditImpl9UndoClearE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.CPWL_EditImpl::UndoClear", %"class.CPWL_EditImpl::UndoClear"* %0, i64 0, i32 3
  tail call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* %3) #12
  %4 = bitcast %"class.CPWL_EditImpl::UndoClear"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN13CPWL_EditImpl9UndoClear4RedoEv(%"class.CPWL_EditImpl::UndoClear"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.CPWL_EditImpl::UndoClear", %"class.CPWL_EditImpl::UndoClear"* %0, i64 0, i32 1, i32 0
  %3 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %2, align 8
  %4 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 7, i32 0, i32 0, i32 0
  %5 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %4, align 8
  %6 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %5, i64 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11
  %11 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 1, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"class.CPWL_EditImpl::SelectState", %"class.CPWL_EditImpl::SelectState"* %10, i64 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %12, %14
  br i1 %15, label %16, label %28

16:                                               ; preds = %9
  %17 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 1, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %22, label %28

22:                                               ; preds = %16
  %23 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 1, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %24, %26
  br i1 %27, label %31, label %28

28:                                               ; preds = %22, %16, %9
  %29 = bitcast %"class.CPWL_EditImpl::SelectState"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %29, i8 -1, i64 24, i1 false) #12
  tail call void @_ZN13CPWL_EditImpl7RefreshEv(%class.CPWL_EditImpl* %3) #12
  %30 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %2, align 8
  br label %31

31:                                               ; preds = %1, %22, %28
  %32 = phi %class.CPWL_EditImpl* [ %3, %1 ], [ %3, %22 ], [ %30, %28 ]
  %33 = getelementptr inbounds %"class.CPWL_EditImpl::UndoClear", %"class.CPWL_EditImpl::UndoClear"* %0, i64 0, i32 2, i32 0
  %34 = getelementptr inbounds %"class.CPWL_EditImpl::UndoClear", %"class.CPWL_EditImpl::UndoClear"* %0, i64 0, i32 2, i32 1
  tail call void @_ZN13CPWL_EditImpl12SetSelectionERK14CPVT_WordPlaceS2_(%class.CPWL_EditImpl* %32, %struct.CPVT_WordPlace* dereferenceable(12) %33, %struct.CPVT_WordPlace* dereferenceable(12) %34)
  %35 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %2, align 8
  %36 = tail call zeroext i1 @_ZN13CPWL_EditImpl5ClearEb(%class.CPWL_EditImpl* %35, i1 zeroext false)
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl12SetSelectionERK14CPVT_WordPlaceS2_(%class.CPWL_EditImpl*, %struct.CPVT_WordPlace* nocapture readonly dereferenceable(12), %struct.CPVT_WordPlace* nocapture readonly dereferenceable(12)) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %5 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %4, align 8
  %6 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %5, i64 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %60, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11
  %11 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"class.CPWL_EditImpl::SelectState", %"class.CPWL_EditImpl::SelectState"* %10, i64 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %12, %14
  br i1 %15, label %16, label %28

16:                                               ; preds = %9
  %17 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %22, label %28

22:                                               ; preds = %16
  %23 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %24, %26
  br i1 %27, label %30, label %28

28:                                               ; preds = %22, %16, %9
  %29 = bitcast %"class.CPWL_EditImpl::SelectState"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %29, i8 -1, i64 24, i1 false) #12
  tail call void @_ZN13CPWL_EditImpl7RefreshEv(%class.CPWL_EditImpl* %0) #12
  br label %30

30:                                               ; preds = %22, %28
  %31 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11
  %32 = bitcast %"class.CPWL_EditImpl::SelectState"* %31 to i8*
  %33 = bitcast %struct.CPVT_WordPlace* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %32, i8* align 4 %33, i64 12, i1 false) #12
  %34 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1
  %35 = bitcast %struct.CPVT_WordPlace* %34 to i8*
  %36 = bitcast %struct.CPVT_WordPlace* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %35, i8* align 4 %36, i64 12, i1 false) #12
  %37 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9
  %38 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 10
  %39 = bitcast %struct.CPVT_WordPlace* %38 to i8*
  %40 = bitcast %struct.CPVT_WordPlace* %37 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %39, i8* align 4 %40, i64 12, i1 false) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 4 %35, i64 12, i1 false) #12
  tail call void @_ZN13CPWL_EditImpl13ScrollToCaretEv(%class.CPWL_EditImpl* %0)
  %41 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"class.CPWL_EditImpl::SelectState", %"class.CPWL_EditImpl::SelectState"* %31, i64 0, i32 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %42, %44
  br i1 %45, label %46, label %58

46:                                               ; preds = %30
  %47 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 1
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 0, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %48, %50
  br i1 %51, label %52, label %58

52:                                               ; preds = %46
  %53 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 2
  %54 = load i32, i32* %53, align 4
  %55 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 0, i32 2
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %54, %56
  br i1 %57, label %59, label %58

58:                                               ; preds = %30, %46, %52
  tail call void @_ZN13CPWL_EditImpl7RefreshEv(%class.CPWL_EditImpl* %0)
  br label %59

59:                                               ; preds = %58, %52
  tail call void @_ZN13CPWL_EditImpl12SetCaretInfoEv(%class.CPWL_EditImpl* %0)
  br label %60

60:                                               ; preds = %3, %59
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN13CPWL_EditImpl5ClearEb(%class.CPWL_EditImpl*, i1 zeroext) local_unnamed_addr #2 align 2 {
  %3 = alloca %struct.CPVT_WordRange, align 4
  %4 = alloca %struct.CPVT_WordRange, align 4
  %5 = alloca %"class.fxcrt::WideString", align 8
  %6 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %7 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %6, align 8
  %8 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %7, i64 0, i32 0
  %9 = load i8, i8* %8, align 8, !range !8
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %149, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11
  %13 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"class.CPWL_EditImpl::SelectState", %"class.CPWL_EditImpl::SelectState"* %12, i64 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %14, %16
  br i1 %17, label %18, label %30

18:                                               ; preds = %11
  %19 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %20, %22
  br i1 %23, label %24, label %30

24:                                               ; preds = %18
  %25 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %26, %28
  br i1 %29, label %149, label %30

30:                                               ; preds = %11, %18, %24
  %31 = bitcast %struct.CPVT_WordRange* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #12
  %32 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %4, i64 0, i32 0, i32 0
  %33 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %4, i64 0, i32 0, i32 1
  %34 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %4, i64 0, i32 0, i32 2
  %35 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %4, i64 0, i32 1, i32 1
  %36 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %4, i64 0, i32 1, i32 2
  %37 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1
  %38 = bitcast %"class.CPWL_EditImpl::SelectState"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %31, i8* align 4 %38, i64 12, i1 false) #12
  %39 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %4, i64 0, i32 1
  %40 = bitcast %struct.CPVT_WordPlace* %39 to i8*
  %41 = bitcast %struct.CPVT_WordPlace* %37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 12, i1 false) #12
  %42 = load i32, i32* %32, align 4, !alias.scope !9
  %43 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %39, i64 0, i32 0
  %44 = load i32, i32* %43, align 4, !alias.scope !9
  %45 = icmp eq i32 %42, %44
  br i1 %45, label %50, label %46

46:                                               ; preds = %30
  %47 = icmp sgt i32 %42, %44
  br i1 %47, label %48, label %63

48:                                               ; preds = %46
  %49 = load i32, i32* %33, align 4, !alias.scope !9
  br label %60

50:                                               ; preds = %30
  %51 = load i32, i32* %33, align 4, !alias.scope !9
  %52 = load i32, i32* %35, align 4, !alias.scope !9
  %53 = icmp eq i32 %51, %52
  br i1 %53, label %56, label %54

54:                                               ; preds = %50
  %55 = icmp sgt i32 %51, %52
  br i1 %55, label %60, label %63

56:                                               ; preds = %50
  %57 = load i32, i32* %34, align 4, !alias.scope !9
  %58 = load i32, i32* %36, align 4, !alias.scope !9
  %59 = icmp sgt i32 %57, %58
  br i1 %59, label %60, label %63

60:                                               ; preds = %56, %54, %48
  %61 = phi i32 [ %49, %48 ], [ %51, %54 ], [ %51, %56 ]
  %62 = load i32, i32* %34, align 4, !alias.scope !9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %31, i8* align 4 %40, i64 12, i1 false) #12, !alias.scope !9
  store i32 %42, i32* %43, align 4, !alias.scope !9
  store i32 %61, i32* %35, align 4, !alias.scope !9
  store i32 %62, i32* %36, align 4, !alias.scope !9
  br label %63

63:                                               ; preds = %46, %54, %56, %60
  br i1 %1, label %64, label %115

64:                                               ; preds = %63
  %65 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 4
  %66 = load i8, i8* %65, align 4, !range !8
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %115, label %68

68:                                               ; preds = %64
  %69 = ptrtoint %class.CPWL_EditImpl* %0 to i64
  %70 = bitcast %"class.fxcrt::WideString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %70) #12
  %71 = bitcast %struct.CPVT_WordRange* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #12, !noalias !12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %71, i8* align 4 %38, i64 12, i1 false) #12, !noalias !12
  %72 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %3, i64 0, i32 1
  %73 = bitcast %struct.CPVT_WordPlace* %72 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %73, i8* align 4 %41, i64 12, i1 false) #12, !noalias !12
  %74 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %3, i64 0, i32 0, i32 0
  %75 = load i32, i32* %74, align 4, !alias.scope !15, !noalias !12
  %76 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %72, i64 0, i32 0
  %77 = load i32, i32* %76, align 4, !alias.scope !15, !noalias !12
  %78 = icmp eq i32 %75, %77
  br i1 %78, label %84, label %79

79:                                               ; preds = %68
  %80 = icmp sgt i32 %75, %77
  br i1 %80, label %81, label %104

81:                                               ; preds = %79
  %82 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %3, i64 0, i32 0, i32 1
  %83 = load i32, i32* %82, align 4, !alias.scope !15, !noalias !12
  br label %98

84:                                               ; preds = %68
  %85 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %3, i64 0, i32 0, i32 1
  %86 = load i32, i32* %85, align 4, !alias.scope !15, !noalias !12
  %87 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %3, i64 0, i32 1, i32 1
  %88 = load i32, i32* %87, align 4, !alias.scope !15, !noalias !12
  %89 = icmp eq i32 %86, %88
  br i1 %89, label %92, label %90

90:                                               ; preds = %84
  %91 = icmp sgt i32 %86, %88
  br i1 %91, label %98, label %104

92:                                               ; preds = %84
  %93 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %3, i64 0, i32 0, i32 2
  %94 = load i32, i32* %93, align 4, !alias.scope !15, !noalias !12
  %95 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %3, i64 0, i32 1, i32 2
  %96 = load i32, i32* %95, align 4, !alias.scope !15, !noalias !12
  %97 = icmp sgt i32 %94, %96
  br i1 %97, label %98, label %104

98:                                               ; preds = %92, %90, %81
  %99 = phi i32 [ %83, %81 ], [ %86, %90 ], [ %86, %92 ]
  %100 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %3, i64 0, i32 0, i32 2
  %101 = load i32, i32* %100, align 4, !alias.scope !15, !noalias !12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %71, i8* align 4 %73, i64 12, i1 false) #12, !alias.scope !15, !noalias !12
  store i32 %75, i32* %76, align 4, !alias.scope !15, !noalias !12
  %102 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %3, i64 0, i32 1, i32 1
  store i32 %99, i32* %102, align 4, !alias.scope !15, !noalias !12
  %103 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %3, i64 0, i32 1, i32 2
  store i32 %101, i32* %103, align 4, !alias.scope !15, !noalias !12
  br label %104

104:                                              ; preds = %98, %92, %90, %79
  call void @_ZNK13CPWL_EditImpl12GetRangeTextERK14CPVT_WordRange(%"class.fxcrt::WideString"* nonnull sret %5, %class.CPWL_EditImpl* %0, %struct.CPVT_WordRange* nonnull dereferenceable(24) %3) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #12, !noalias !12
  %105 = call i8* @_Znwm(i64 48) #13
  %106 = bitcast i8* %105 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN13CPWL_EditImpl9UndoClearE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %106, align 8
  %107 = getelementptr inbounds i8, i8* %105, i64 8
  %108 = bitcast i8* %107 to i64*
  store i64 %69, i64* %108, align 8
  %109 = getelementptr inbounds i8, i8* %105, i64 16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %109, i8* nonnull align 4 %31, i64 24, i1 false) #12
  %110 = getelementptr inbounds i8, i8* %105, i64 40
  %111 = bitcast i8* %110 to %"class.fxcrt::WideString"*
  call void @_ZN5fxcrt10WideStringC1ERKS0_(%"class.fxcrt::WideString"* %111, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %5) #12
  %112 = bitcast i8* %105 to %"class.CPWL_EditImpl::UndoItemIface"*
  %113 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 17
  call void @_ZN13CPWL_EditImpl9UndoStack7AddItemENSt3__110unique_ptrINS_13UndoItemIfaceENS1_14default_deleteIS3_EEEE(%"class.CPWL_EditImpl::UndoStack"* %113, %"class.CPWL_EditImpl::UndoItemIface"* nonnull %112) #12
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70) #12
  %114 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %6, align 8
  br label %115

115:                                              ; preds = %64, %104, %63
  %116 = phi %class.CPVT_VariableText* [ %7, %64 ], [ %114, %104 ], [ %7, %63 ]
  %117 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %116, i64 0, i32 0
  %118 = load i8, i8* %117, align 8, !range !8
  %119 = icmp eq i8 %118, 0
  br i1 %119, label %138, label %120

120:                                              ; preds = %115
  %121 = load i32, i32* %13, align 4
  %122 = load i32, i32* %15, align 4
  %123 = icmp eq i32 %121, %122
  br i1 %123, label %124, label %136

124:                                              ; preds = %120
  %125 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 1
  %126 = load i32, i32* %125, align 4
  %127 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 0, i32 1
  %128 = load i32, i32* %127, align 4
  %129 = icmp eq i32 %126, %128
  br i1 %129, label %130, label %136

130:                                              ; preds = %124
  %131 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 2
  %132 = load i32, i32* %131, align 4
  %133 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 0, i32 2
  %134 = load i32, i32* %133, align 4
  %135 = icmp eq i32 %132, %134
  br i1 %135, label %138, label %136

136:                                              ; preds = %130, %124, %120
  call void @llvm.memset.p0i8.i64(i8* align 4 %38, i8 -1, i64 24, i1 false) #12
  call void @_ZN13CPWL_EditImpl7RefreshEv(%class.CPWL_EditImpl* %0) #12
  %137 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %6, align 8
  br label %138

138:                                              ; preds = %115, %130, %136
  %139 = phi %class.CPVT_VariableText* [ %116, %115 ], [ %116, %130 ], [ %137, %136 ]
  %140 = call { i64, i32 } @_ZN17CPVT_VariableText11DeleteWordsERK14CPVT_WordRange(%class.CPVT_VariableText* %139, %struct.CPVT_WordRange* nonnull dereferenceable(24) %4) #12
  %141 = extractvalue { i64, i32 } %140, 0
  %142 = extractvalue { i64, i32 } %140, 1
  %143 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9
  %144 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 10
  %145 = bitcast %struct.CPVT_WordPlace* %144 to i8*
  %146 = bitcast %struct.CPVT_WordPlace* %143 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %145, i8* align 4 %146, i64 12, i1 false) #12
  %147 = bitcast %struct.CPVT_WordPlace* %143 to i64*
  store i64 %141, i64* %147, align 8
  %148 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9, i32 2
  store i32 %142, i32* %148, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %38, i8* align 4 %146, i64 12, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %41, i8* align 4 %146, i64 12, i1 false) #12
  call void @_ZN13CPWL_EditImpl13RearrangePartERK14CPVT_WordRange(%class.CPWL_EditImpl* %0, %struct.CPVT_WordRange* nonnull dereferenceable(24) %4)
  call void @_ZN13CPWL_EditImpl13ScrollToCaretEv(%class.CPWL_EditImpl* %0)
  call void @_ZN13CPWL_EditImpl7RefreshEv(%class.CPWL_EditImpl* %0)
  call void @_ZN13CPWL_EditImpl14SetCaretOriginEv(%class.CPWL_EditImpl* %0)
  call void @_ZN13CPWL_EditImpl12SetCaretInfoEv(%class.CPWL_EditImpl* %0)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #12
  br label %149

149:                                              ; preds = %2, %24, %138
  %150 = phi i1 [ true, %138 ], [ false, %24 ], [ false, %2 ]
  ret i1 %150
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN13CPWL_EditImpl9UndoClear4UndoEv(%"class.CPWL_EditImpl::UndoClear"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.CPWL_EditImpl::UndoClear", %"class.CPWL_EditImpl::UndoClear"* %0, i64 0, i32 1, i32 0
  %3 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %2, align 8
  %4 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 7, i32 0, i32 0, i32 0
  %5 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %4, align 8
  %6 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %5, i64 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11
  %11 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 1, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"class.CPWL_EditImpl::SelectState", %"class.CPWL_EditImpl::SelectState"* %10, i64 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %12, %14
  br i1 %15, label %16, label %28

16:                                               ; preds = %9
  %17 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 1, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %22, label %28

22:                                               ; preds = %16
  %23 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 1, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %24, %26
  br i1 %27, label %31, label %28

28:                                               ; preds = %22, %16, %9
  %29 = bitcast %"class.CPWL_EditImpl::SelectState"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %29, i8 -1, i64 24, i1 false) #12
  tail call void @_ZN13CPWL_EditImpl7RefreshEv(%class.CPWL_EditImpl* %3) #12
  %30 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %2, align 8
  br label %31

31:                                               ; preds = %1, %22, %28
  %32 = phi %class.CPWL_EditImpl* [ %3, %1 ], [ %3, %22 ], [ %30, %28 ]
  %33 = getelementptr inbounds %"class.CPWL_EditImpl::UndoClear", %"class.CPWL_EditImpl::UndoClear"* %0, i64 0, i32 2, i32 0
  %34 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %32, i64 0, i32 9
  %35 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %32, i64 0, i32 10
  %36 = bitcast %struct.CPVT_WordPlace* %35 to i8*
  %37 = bitcast %struct.CPVT_WordPlace* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 4 %37, i64 12, i1 false) #12
  %38 = bitcast %struct.CPVT_WordPlace* %33 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 4 %38, i64 12, i1 false) #12
  %39 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %2, align 8
  %40 = tail call zeroext i1 @_ZNK13CPWL_EditImpl14IsTextOverflowEv(%class.CPWL_EditImpl* %39) #12
  br i1 %40, label %73, label %41

41:                                               ; preds = %31
  %42 = getelementptr inbounds %"class.CPWL_EditImpl::UndoClear", %"class.CPWL_EditImpl::UndoClear"* %0, i64 0, i32 3
  %43 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %39, i64 0, i32 7, i32 0, i32 0, i32 0
  %44 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %43, align 8
  %45 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %39, i64 0, i32 9
  tail call void @_ZNK17CPVT_VariableText15UpdateWordPlaceER14CPVT_WordPlace(%class.CPVT_VariableText* %44, %struct.CPVT_WordPlace* dereferenceable(12) %45) #12
  %46 = tail call { i64, i32 } @_ZN13CPWL_EditImpl12DoInsertTextERK14CPVT_WordPlaceRKN5fxcrt10WideStringEi(%class.CPWL_EditImpl* %39, %struct.CPVT_WordPlace* dereferenceable(12) %45, %"class.fxcrt::WideString"* dereferenceable(8) %42, i32 1) #12
  %47 = extractvalue { i64, i32 } %46, 0
  %48 = extractvalue { i64, i32 } %46, 1
  %49 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %39, i64 0, i32 10
  %50 = bitcast %struct.CPVT_WordPlace* %49 to i8*
  %51 = bitcast %struct.CPVT_WordPlace* %45 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %50, i8* align 4 %51, i64 12, i1 false) #12
  %52 = bitcast %struct.CPVT_WordPlace* %45 to i64*
  store i64 %47, i64* %52, align 8
  %53 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %39, i64 0, i32 9, i32 2
  store i32 %48, i32* %53, align 8
  %54 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %39, i64 0, i32 11
  %55 = bitcast %"class.CPWL_EditImpl::SelectState"* %54 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %55, i8* align 4 %51, i64 12, i1 false) #12
  %56 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %39, i64 0, i32 11, i32 1
  %57 = bitcast %struct.CPVT_WordPlace* %56 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %57, i8* align 4 %51, i64 12, i1 false) #12
  %58 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %49, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = trunc i64 %47 to i32
  %61 = icmp eq i32 %59, %60
  br i1 %61, label %62, label %72

62:                                               ; preds = %41
  %63 = lshr i64 %47, 32
  %64 = trunc i64 %63 to i32
  %65 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %39, i64 0, i32 10, i32 1
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, %64
  br i1 %67, label %68, label %72

68:                                               ; preds = %62
  %69 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %39, i64 0, i32 10, i32 2
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, %48
  br i1 %71, label %73, label %72

72:                                               ; preds = %68, %62, %41
  tail call void @_ZN13CPWL_EditImpl15PaintInsertTextERK14CPVT_WordPlaceS2_(%class.CPWL_EditImpl* %39, %struct.CPVT_WordPlace* dereferenceable(12) %49, %struct.CPVT_WordPlace* dereferenceable(12) %45) #12
  br label %73

73:                                               ; preds = %31, %68, %72
  %74 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %2, align 8
  %75 = getelementptr inbounds %"class.CPWL_EditImpl::UndoClear", %"class.CPWL_EditImpl::UndoClear"* %0, i64 0, i32 2, i32 1
  tail call void @_ZN13CPWL_EditImpl12SetSelectionERK14CPVT_WordPlaceS2_(%class.CPWL_EditImpl* %74, %struct.CPVT_WordPlace* dereferenceable(12) %33, %struct.CPVT_WordPlace* dereferenceable(12) %75)
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN13CPWL_EditImpl10InsertTextERKN5fxcrt10WideStringEib(%class.CPWL_EditImpl*, %"class.fxcrt::WideString"* dereferenceable(8), i32, i1 zeroext) local_unnamed_addr #2 align 2 {
  %5 = tail call zeroext i1 @_ZNK13CPWL_EditImpl14IsTextOverflowEv(%class.CPWL_EditImpl* %0)
  br i1 %5, label %56, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %8 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %7, align 8
  %9 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9
  tail call void @_ZNK17CPVT_VariableText15UpdateWordPlaceER14CPVT_WordPlace(%class.CPVT_VariableText* %8, %struct.CPVT_WordPlace* dereferenceable(12) %9) #12
  %10 = tail call { i64, i32 } @_ZN13CPWL_EditImpl12DoInsertTextERK14CPVT_WordPlaceRKN5fxcrt10WideStringEi(%class.CPWL_EditImpl* %0, %struct.CPVT_WordPlace* dereferenceable(12) %9, %"class.fxcrt::WideString"* dereferenceable(8) %1, i32 %2)
  %11 = extractvalue { i64, i32 } %10, 0
  %12 = extractvalue { i64, i32 } %10, 1
  %13 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 10
  %14 = bitcast %struct.CPVT_WordPlace* %13 to i8*
  %15 = bitcast %struct.CPVT_WordPlace* %9 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %14, i8* align 4 %15, i64 12, i1 false) #12
  %16 = bitcast %struct.CPVT_WordPlace* %9 to i64*
  store i64 %11, i64* %16, align 8
  %17 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9, i32 2
  store i32 %12, i32* %17, align 8
  %18 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11
  %19 = bitcast %"class.CPWL_EditImpl::SelectState"* %18 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %19, i8* align 4 %15, i64 12, i1 false) #12
  %20 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1
  %21 = bitcast %struct.CPVT_WordPlace* %20 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %21, i8* align 4 %15, i64 12, i1 false) #12
  %22 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %13, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = trunc i64 %11 to i32
  %25 = icmp eq i32 %23, %24
  br i1 %25, label %26, label %36

26:                                               ; preds = %6
  %27 = lshr i64 %11, 32
  %28 = trunc i64 %27 to i32
  %29 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 10, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, %28
  br i1 %31, label %32, label %36

32:                                               ; preds = %26
  %33 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 10, i32 2
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, %12
  br i1 %35, label %56, label %36

36:                                               ; preds = %6, %26, %32
  br i1 %3, label %37, label %55

37:                                               ; preds = %36
  %38 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 4
  %39 = load i8, i8* %38, align 4, !range !8
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %55, label %41

41:                                               ; preds = %37
  %42 = ptrtoint %class.CPWL_EditImpl* %0 to i64
  %43 = tail call i8* @_Znwm(i64 56) #13
  %44 = bitcast i8* %43 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN13CPWL_EditImpl14UndoInsertTextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %45 = getelementptr inbounds i8, i8* %43, i64 8
  %46 = bitcast i8* %45 to i64*
  store i64 %42, i64* %46, align 8
  %47 = getelementptr inbounds i8, i8* %43, i64 16
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 4 %14, i64 12, i1 false) #12
  %48 = getelementptr inbounds i8, i8* %43, i64 28
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %48, i8* align 4 %15, i64 12, i1 false) #12
  %49 = getelementptr inbounds i8, i8* %43, i64 40
  %50 = bitcast i8* %49 to %"class.fxcrt::WideString"*
  tail call void @_ZN5fxcrt10WideStringC1ERKS0_(%"class.fxcrt::WideString"* %50, %"class.fxcrt::WideString"* dereferenceable(8) %1) #12
  %51 = getelementptr inbounds i8, i8* %43, i64 48
  %52 = bitcast i8* %51 to i32*
  store i32 %2, i32* %52, align 8
  %53 = bitcast i8* %43 to %"class.CPWL_EditImpl::UndoItemIface"*
  %54 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 17
  tail call void @_ZN13CPWL_EditImpl9UndoStack7AddItemENSt3__110unique_ptrINS_13UndoItemIfaceENS1_14default_deleteIS3_EEEE(%"class.CPWL_EditImpl::UndoStack"* %54, %"class.CPWL_EditImpl::UndoItemIface"* nonnull %53) #12
  br label %55

55:                                               ; preds = %37, %41, %36
  tail call void @_ZN13CPWL_EditImpl15PaintInsertTextERK14CPVT_WordPlaceS2_(%class.CPWL_EditImpl* %0, %struct.CPVT_WordPlace* dereferenceable(12) %13, %struct.CPVT_WordPlace* dereferenceable(12) %9)
  br label %56

56:                                               ; preds = %32, %4, %55
  %57 = phi i1 [ true, %55 ], [ false, %4 ], [ false, %32 ]
  ret i1 %57
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl14UndoInsertTextC2EPS_RK14CPVT_WordPlaceS4_RKN5fxcrt10WideStringEi(%"class.CPWL_EditImpl::UndoInsertText"*, %class.CPWL_EditImpl*, %struct.CPVT_WordPlace* nocapture readonly dereferenceable(12), %struct.CPVT_WordPlace* nocapture readonly dereferenceable(12), %"class.fxcrt::WideString"* dereferenceable(8), i32) unnamed_addr #2 align 2 {
  %7 = getelementptr inbounds %"class.CPWL_EditImpl::UndoInsertText", %"class.CPWL_EditImpl::UndoInsertText"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN13CPWL_EditImpl14UndoInsertTextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.CPWL_EditImpl::UndoInsertText", %"class.CPWL_EditImpl::UndoInsertText"* %0, i64 0, i32 1, i32 0
  store %class.CPWL_EditImpl* %1, %class.CPWL_EditImpl** %8, align 8
  %9 = getelementptr inbounds %"class.CPWL_EditImpl::UndoInsertText", %"class.CPWL_EditImpl::UndoInsertText"* %0, i64 0, i32 2
  %10 = bitcast %struct.CPVT_WordPlace* %9 to i8*
  %11 = bitcast %struct.CPVT_WordPlace* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 4 %11, i64 12, i1 false)
  %12 = getelementptr inbounds %"class.CPWL_EditImpl::UndoInsertText", %"class.CPWL_EditImpl::UndoInsertText"* %0, i64 0, i32 3
  %13 = bitcast %struct.CPVT_WordPlace* %12 to i8*
  %14 = bitcast %struct.CPVT_WordPlace* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %13, i8* align 4 %14, i64 12, i1 false)
  %15 = getelementptr inbounds %"class.CPWL_EditImpl::UndoInsertText", %"class.CPWL_EditImpl::UndoInsertText"* %0, i64 0, i32 4
  tail call void @_ZN5fxcrt10WideStringC1ERKS0_(%"class.fxcrt::WideString"* %15, %"class.fxcrt::WideString"* dereferenceable(8) %4) #12
  %16 = getelementptr inbounds %"class.CPWL_EditImpl::UndoInsertText", %"class.CPWL_EditImpl::UndoInsertText"* %0, i64 0, i32 5
  store i32 %5, i32* %16, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl14UndoInsertTextD2Ev(%"class.CPWL_EditImpl::UndoInsertText"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.CPWL_EditImpl::UndoInsertText", %"class.CPWL_EditImpl::UndoInsertText"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN13CPWL_EditImpl14UndoInsertTextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.CPWL_EditImpl::UndoInsertText", %"class.CPWL_EditImpl::UndoInsertText"* %0, i64 0, i32 4
  tail call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl14UndoInsertTextD0Ev(%"class.CPWL_EditImpl::UndoInsertText"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.CPWL_EditImpl::UndoInsertText", %"class.CPWL_EditImpl::UndoInsertText"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN13CPWL_EditImpl14UndoInsertTextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.CPWL_EditImpl::UndoInsertText", %"class.CPWL_EditImpl::UndoInsertText"* %0, i64 0, i32 4
  tail call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* %3) #12
  %4 = bitcast %"class.CPWL_EditImpl::UndoInsertText"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN13CPWL_EditImpl14UndoInsertText4RedoEv(%"class.CPWL_EditImpl::UndoInsertText"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.CPWL_EditImpl::UndoInsertText", %"class.CPWL_EditImpl::UndoInsertText"* %0, i64 0, i32 1, i32 0
  %3 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %2, align 8
  %4 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 7, i32 0, i32 0, i32 0
  %5 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %4, align 8
  %6 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %5, i64 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11
  %11 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 1, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"class.CPWL_EditImpl::SelectState", %"class.CPWL_EditImpl::SelectState"* %10, i64 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %12, %14
  br i1 %15, label %16, label %28

16:                                               ; preds = %9
  %17 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 1, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %22, label %28

22:                                               ; preds = %16
  %23 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 1, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %24, %26
  br i1 %27, label %31, label %28

28:                                               ; preds = %22, %16, %9
  %29 = bitcast %"class.CPWL_EditImpl::SelectState"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %29, i8 -1, i64 24, i1 false) #12
  tail call void @_ZN13CPWL_EditImpl7RefreshEv(%class.CPWL_EditImpl* %3) #12
  %30 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %2, align 8
  br label %31

31:                                               ; preds = %1, %22, %28
  %32 = phi %class.CPWL_EditImpl* [ %3, %1 ], [ %3, %22 ], [ %30, %28 ]
  %33 = getelementptr inbounds %"class.CPWL_EditImpl::UndoInsertText", %"class.CPWL_EditImpl::UndoInsertText"* %0, i64 0, i32 2
  %34 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %32, i64 0, i32 9
  %35 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %32, i64 0, i32 10
  %36 = bitcast %struct.CPVT_WordPlace* %35 to i8*
  %37 = bitcast %struct.CPVT_WordPlace* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 4 %37, i64 12, i1 false) #12
  %38 = bitcast %struct.CPVT_WordPlace* %33 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 4 %38, i64 12, i1 false) #12
  %39 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %2, align 8
  %40 = getelementptr inbounds %"class.CPWL_EditImpl::UndoInsertText", %"class.CPWL_EditImpl::UndoInsertText"* %0, i64 0, i32 5
  %41 = load i32, i32* %40, align 8
  %42 = tail call zeroext i1 @_ZNK13CPWL_EditImpl14IsTextOverflowEv(%class.CPWL_EditImpl* %39) #12
  br i1 %42, label %75, label %43

43:                                               ; preds = %31
  %44 = getelementptr inbounds %"class.CPWL_EditImpl::UndoInsertText", %"class.CPWL_EditImpl::UndoInsertText"* %0, i64 0, i32 4
  %45 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %39, i64 0, i32 7, i32 0, i32 0, i32 0
  %46 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %45, align 8
  %47 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %39, i64 0, i32 9
  tail call void @_ZNK17CPVT_VariableText15UpdateWordPlaceER14CPVT_WordPlace(%class.CPVT_VariableText* %46, %struct.CPVT_WordPlace* dereferenceable(12) %47) #12
  %48 = tail call { i64, i32 } @_ZN13CPWL_EditImpl12DoInsertTextERK14CPVT_WordPlaceRKN5fxcrt10WideStringEi(%class.CPWL_EditImpl* %39, %struct.CPVT_WordPlace* dereferenceable(12) %47, %"class.fxcrt::WideString"* dereferenceable(8) %44, i32 %41) #12
  %49 = extractvalue { i64, i32 } %48, 0
  %50 = extractvalue { i64, i32 } %48, 1
  %51 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %39, i64 0, i32 10
  %52 = bitcast %struct.CPVT_WordPlace* %51 to i8*
  %53 = bitcast %struct.CPVT_WordPlace* %47 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %52, i8* align 4 %53, i64 12, i1 false) #12
  %54 = bitcast %struct.CPVT_WordPlace* %47 to i64*
  store i64 %49, i64* %54, align 8
  %55 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %39, i64 0, i32 9, i32 2
  store i32 %50, i32* %55, align 8
  %56 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %39, i64 0, i32 11
  %57 = bitcast %"class.CPWL_EditImpl::SelectState"* %56 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %57, i8* align 4 %53, i64 12, i1 false) #12
  %58 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %39, i64 0, i32 11, i32 1
  %59 = bitcast %struct.CPVT_WordPlace* %58 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %59, i8* align 4 %53, i64 12, i1 false) #12
  %60 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %51, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = trunc i64 %49 to i32
  %63 = icmp eq i32 %61, %62
  br i1 %63, label %64, label %74

64:                                               ; preds = %43
  %65 = lshr i64 %49, 32
  %66 = trunc i64 %65 to i32
  %67 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %39, i64 0, i32 10, i32 1
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %68, %66
  br i1 %69, label %70, label %74

70:                                               ; preds = %64
  %71 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %39, i64 0, i32 10, i32 2
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %72, %50
  br i1 %73, label %75, label %74

74:                                               ; preds = %70, %64, %43
  tail call void @_ZN13CPWL_EditImpl15PaintInsertTextERK14CPVT_WordPlaceS2_(%class.CPWL_EditImpl* %39, %struct.CPVT_WordPlace* dereferenceable(12) %51, %struct.CPVT_WordPlace* dereferenceable(12) %47) #12
  br label %75

75:                                               ; preds = %31, %70, %74
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN13CPWL_EditImpl14UndoInsertText4UndoEv(%"class.CPWL_EditImpl::UndoInsertText"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.CPWL_EditImpl::UndoInsertText", %"class.CPWL_EditImpl::UndoInsertText"* %0, i64 0, i32 1, i32 0
  %3 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %2, align 8
  %4 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 7, i32 0, i32 0, i32 0
  %5 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %4, align 8
  %6 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %5, i64 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11
  %11 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 1, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"class.CPWL_EditImpl::SelectState", %"class.CPWL_EditImpl::SelectState"* %10, i64 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %12, %14
  br i1 %15, label %16, label %28

16:                                               ; preds = %9
  %17 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 1, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %22, label %28

22:                                               ; preds = %16
  %23 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 1, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 11, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %24, %26
  br i1 %27, label %31, label %28

28:                                               ; preds = %22, %16, %9
  %29 = bitcast %"class.CPWL_EditImpl::SelectState"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %29, i8 -1, i64 24, i1 false) #12
  tail call void @_ZN13CPWL_EditImpl7RefreshEv(%class.CPWL_EditImpl* %3) #12
  %30 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %2, align 8
  br label %31

31:                                               ; preds = %1, %22, %28
  %32 = phi %class.CPWL_EditImpl* [ %3, %1 ], [ %3, %22 ], [ %30, %28 ]
  %33 = getelementptr inbounds %"class.CPWL_EditImpl::UndoInsertText", %"class.CPWL_EditImpl::UndoInsertText"* %0, i64 0, i32 2
  %34 = getelementptr inbounds %"class.CPWL_EditImpl::UndoInsertText", %"class.CPWL_EditImpl::UndoInsertText"* %0, i64 0, i32 3
  tail call void @_ZN13CPWL_EditImpl12SetSelectionERK14CPVT_WordPlaceS2_(%class.CPWL_EditImpl* %32, %struct.CPVT_WordPlace* dereferenceable(12) %33, %struct.CPVT_WordPlace* dereferenceable(12) %34)
  %35 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %2, align 8
  %36 = tail call zeroext i1 @_ZN13CPWL_EditImpl5ClearEb(%class.CPWL_EditImpl* %35, i1 zeroext false)
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl8DrawEditEP16CFX_RenderDeviceRK10CFX_MatrixPS_jRK13CFX_FloatRectRK13CFX_PTemplateIfEPK14CPVT_WordRangeP18IPWL_SystemHandlerP15CFFL_FormFiller(%class.CFX_RenderDevice*, %class.CFX_Matrix* dereferenceable(24), %class.CPWL_EditImpl*, i32, %class.CFX_FloatRect* dereferenceable(16), %class.CFX_PTemplate* nocapture readonly dereferenceable(8), %struct.CPVT_WordRange*, %class.IPWL_SystemHandler*, %class.CFFL_FormFiller*) local_unnamed_addr #2 align 2 {
  %10 = alloca %class.CFX_PTemplate, align 4
  %11 = alloca %class.CPDF_RenderOptions, align 8
  %12 = alloca %class.CFX_PTemplate, align 4
  %13 = alloca %class.CPDF_RenderOptions, align 8
  %14 = alloca %class.CFX_PTemplate, align 4
  %15 = alloca %class.CPDF_RenderOptions, align 8
  %16 = alloca %"class.std::__1::basic_ostringstream", align 8
  %17 = alloca %"class.CFX_RenderDevice::StateRestorer", align 8
  %18 = alloca { i64, i64 }, align 8
  %19 = bitcast { i64, i64 }* %18 to %struct.FX_RECT*
  %20 = alloca { <2 x float>, <2 x float> }, align 8
  %21 = bitcast { <2 x float>, <2 x float> }* %20 to %class.CFX_FloatRect*
  %22 = alloca %class.CPVT_Word, align 16
  %23 = alloca %class.CPVT_Line, align 4
  %24 = alloca %class.CFX_FloatRect, align 4
  %25 = alloca %class.CFX_PathData, align 8
  %26 = alloca i16, align 2
  %27 = bitcast i16* %26 to %struct.CFX_FillRenderOptions*
  %28 = alloca %class.CFX_PTemplate, align 4
  %29 = alloca %"class.fxcrt::RetainPtr", align 8
  %30 = alloca %"class.fxcrt::ByteString", align 8
  %31 = alloca %"class.std::__1::basic_string", align 8
  %32 = alloca %"class.fxcrt::ByteString", align 8
  %33 = alloca %class.CFX_PTemplate, align 4
  %34 = alloca %"class.fxcrt::RetainPtr", align 8
  %35 = alloca %"class.fxcrt::ByteString", align 8
  %36 = alloca %class.CFX_PTemplate, align 4
  %37 = alloca %"class.fxcrt::RetainPtr", align 8
  %38 = alloca %"class.fxcrt::ByteString", align 8
  %39 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %2, i64 0, i32 7, i32 0, i32 0, i32 0
  %40 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %39, align 8
  %41 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %40, i64 0, i32 6
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %48

44:                                               ; preds = %9
  %45 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %40, i64 0, i32 9
  %46 = load float, float* %45, align 8
  %47 = fcmp ole float %46, 0.000000e+00
  br label %48

48:                                               ; preds = %44, %9
  %49 = phi i1 [ false, %9 ], [ %47, %44 ]
  %50 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %40, i64 0, i32 4
  %51 = load i16, i16* %50, align 4
  %52 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %40, i64 0, i32 10
  %53 = load float, float* %52, align 4
  %54 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %2, i64 0, i32 11, i32 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %2, i64 0, i32 11, i32 0, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %2, i64 0, i32 11, i32 0, i32 2
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %2, i64 0, i32 11, i32 1, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %2, i64 0, i32 11, i32 1, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %2, i64 0, i32 11, i32 1, i32 2
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %55, %61
  br i1 %66, label %69, label %67

67:                                               ; preds = %48
  %68 = icmp sgt i32 %55, %61
  br i1 %68, label %75, label %76

69:                                               ; preds = %48
  %70 = icmp eq i32 %57, %63
  br i1 %70, label %73, label %71

71:                                               ; preds = %69
  %72 = icmp sgt i32 %57, %63
  br i1 %72, label %75, label %76

73:                                               ; preds = %69
  %74 = icmp sgt i32 %59, %65
  br i1 %74, label %75, label %76

75:                                               ; preds = %67, %73, %71
  br label %76

76:                                               ; preds = %67, %71, %73, %75
  %77 = phi i32 [ %57, %75 ], [ %57, %73 ], [ %63, %71 ], [ %63, %67 ]
  %78 = phi i32 [ %55, %75 ], [ %55, %73 ], [ %55, %71 ], [ %61, %67 ]
  %79 = phi i32 [ %59, %75 ], [ %65, %73 ], [ %65, %71 ], [ %65, %67 ]
  %80 = phi i32 [ %61, %75 ], [ %55, %73 ], [ %55, %71 ], [ %55, %67 ]
  %81 = phi i32 [ %63, %75 ], [ %57, %73 ], [ %57, %71 ], [ %57, %67 ]
  %82 = phi i32 [ %65, %75 ], [ %59, %73 ], [ %59, %71 ], [ %59, %67 ]
  %83 = bitcast %"class.std::__1::basic_ostringstream"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 264, i8* nonnull %83) #12
  %84 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %16, i64 0, i32 1
  %85 = bitcast %"class.std::__1::basic_stringbuf"* %84 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %85, i8 -86, i64 256, i1 false)
  %86 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %16, i64 0, i32 2, i32 0, i32 0
  %87 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %16, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %86, align 8
  %88 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %16, i64 0, i32 1
  %89 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %88, i64 0, i32 0
  %90 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %91 = bitcast %"class.std::__1::basic_ostringstream"* %16 to i64*
  store i64 %90, i64* %91, align 8
  %92 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %93 = bitcast %"class.std::__1::basic_ostringstream"* %16 to i8**
  %94 = inttoptr i64 %90 to i8*
  %95 = getelementptr i8, i8* %94, i64 -24
  %96 = bitcast i8* %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = getelementptr inbounds i8, i8* %83, i64 %97
  %99 = bitcast i8* %98 to i64*
  store i64 %92, i64* %99, align 8
  %100 = load i8*, i8** %93, align 8
  %101 = getelementptr i8, i8* %100, i64 -24
  %102 = bitcast i8* %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = getelementptr inbounds i8, i8* %83, i64 %103
  %105 = bitcast i8* %104 to %"class.std::__1::ios_base"*
  %106 = bitcast %"class.std::__1::basic_stringbuf"* %88 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %105, i8* %106) #12
  %107 = getelementptr inbounds i8, i8* %104, i64 136
  %108 = bitcast i8* %107 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %108, align 8
  %109 = getelementptr inbounds i8, i8* %104, i64 144
  %110 = bitcast i8* %109 to i32*
  store i32 -1, i32* %110, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %87, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %86, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %89) #12
  %111 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %88, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %111, align 8
  %112 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %16, i64 0, i32 1, i32 1
  %113 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %16, i64 0, i32 1, i32 3
  %114 = bitcast %"class.std::__1::basic_string"* %112 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %114, i8 0, i64 32, i1 false) #12
  store i32 16, i32* %113, align 8
  %115 = bitcast %"class.CFX_RenderDevice::StateRestorer"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %115) #12
  %116 = getelementptr inbounds %"class.CFX_RenderDevice::StateRestorer", %"class.CFX_RenderDevice::StateRestorer"* %17, i64 0, i32 0, i32 0
  store %class.CFX_RenderDevice* inttoptr (i64 -6148914691236517206 to %class.CFX_RenderDevice*), %class.CFX_RenderDevice** %116, align 8
  call void @_ZN16CFX_RenderDevice13StateRestorerC1EPS_(%"class.CFX_RenderDevice::StateRestorer"* nonnull %17, %class.CFX_RenderDevice* %0) #12
  %117 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %4, i64 0, i32 0
  %118 = load float, float* %117, align 4
  %119 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %4, i64 0, i32 2
  %120 = load float, float* %119, align 4
  %121 = fcmp ult float %118, %120
  br i1 %121, label %122, label %142

122:                                              ; preds = %76
  %123 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %4, i64 0, i32 1
  %124 = load float, float* %123, align 4
  %125 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %4, i64 0, i32 3
  %126 = load float, float* %125, align 4
  %127 = fcmp ult float %124, %126
  br i1 %127, label %128, label %142

128:                                              ; preds = %122
  %129 = bitcast { i64, i64 }* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %129) #12
  %130 = bitcast { <2 x float>, <2 x float> }* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %130) #12
  %131 = call { <2 x float>, <2 x float> } @_ZNK10CFX_Matrix13TransformRectERK13CFX_FloatRect(%class.CFX_Matrix* %1, %class.CFX_FloatRect* dereferenceable(16) %4) #12
  %132 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %20, i64 0, i32 0
  %133 = extractvalue { <2 x float>, <2 x float> } %131, 0
  store <2 x float> %133, <2 x float>* %132, align 8
  %134 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %20, i64 0, i32 1
  %135 = extractvalue { <2 x float>, <2 x float> } %131, 1
  store <2 x float> %135, <2 x float>* %134, align 8
  %136 = call { i64, i64 } @_ZNK13CFX_FloatRect8ToFxRectEv(%class.CFX_FloatRect* nonnull %21) #12
  %137 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i64 0, i32 0
  %138 = extractvalue { i64, i64 } %136, 0
  store i64 %138, i64* %137, align 8
  %139 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i64 0, i32 1
  %140 = extractvalue { i64, i64 } %136, 1
  store i64 %140, i64* %139, align 8
  %141 = call zeroext i1 @_ZN16CFX_RenderDevice12SetClip_RectERK7FX_RECT(%class.CFX_RenderDevice* %0, %struct.FX_RECT* nonnull dereferenceable(16) %19) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %130) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %129) #12
  br label %142

142:                                              ; preds = %122, %76, %128
  %143 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %2, i64 0, i32 14
  %144 = getelementptr inbounds %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.57"* %143, i64 0, i32 0, i32 0, i32 0
  %145 = load %"class.CPWL_EditImpl::Iterator"*, %"class.CPWL_EditImpl::Iterator"** %144, align 8
  %146 = icmp eq %"class.CPWL_EditImpl::Iterator"* %145, null
  br i1 %146, label %147, label %164

147:                                              ; preds = %142
  %148 = ptrtoint %class.CPWL_EditImpl* %2 to i64
  %149 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %39, align 8
  %150 = call %"class.CPVT_VariableText::Iterator"* @_ZN17CPVT_VariableText11GetIteratorEv(%class.CPVT_VariableText* %149) #12
  %151 = ptrtoint %"class.CPVT_VariableText::Iterator"* %150 to i64
  %152 = call i8* @_Znwm(i64 16) #13
  %153 = bitcast i8* %152 to i64*
  store i64 %148, i64* %153, align 8
  %154 = getelementptr inbounds i8, i8* %152, i64 8
  %155 = bitcast i8* %154 to i64*
  store i64 %151, i64* %155, align 8
  %156 = ptrtoint i8* %152 to i64
  %157 = load %"class.CPWL_EditImpl::Iterator"*, %"class.CPWL_EditImpl::Iterator"** %144, align 8
  %158 = bitcast %"class.std::__1::unique_ptr.57"* %143 to i64*
  store i64 %156, i64* %158, align 8
  %159 = icmp eq %"class.CPWL_EditImpl::Iterator"* %157, null
  %160 = bitcast i8* %152 to %"class.CPWL_EditImpl::Iterator"*
  br i1 %159, label %164, label %161

161:                                              ; preds = %147
  %162 = bitcast %"class.CPWL_EditImpl::Iterator"* %157 to i8*
  call void @_ZdlPv(i8* %162) #13
  %163 = load %"class.CPWL_EditImpl::Iterator"*, %"class.CPWL_EditImpl::Iterator"** %144, align 8
  br label %164

164:                                              ; preds = %142, %147, %161
  %165 = phi %"class.CPWL_EditImpl::Iterator"* [ %145, %142 ], [ %160, %147 ], [ %163, %161 ]
  %166 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %2, i64 0, i32 6, i32 0, i32 0, i32 0
  %167 = load %"class.CPWL_EditImpl::Provider"*, %"class.CPWL_EditImpl::Provider"** %166, align 8
  %168 = icmp eq %"class.CPWL_EditImpl::Provider"* %167, null
  br i1 %168, label %626, label %169

169:                                              ; preds = %164
  %170 = getelementptr inbounds %"class.CPWL_EditImpl::Provider", %"class.CPWL_EditImpl::Provider"* %167, i64 0, i32 0, i32 1, i32 0
  %171 = load %class.IPVT_FontMap*, %class.IPVT_FontMap** %170, align 8
  %172 = icmp eq %class.IPVT_FontMap* %171, null
  br i1 %172, label %626, label %173

173:                                              ; preds = %169
  %174 = icmp ne %struct.CPVT_WordRange* %6, null
  br i1 %174, label %175, label %179

175:                                              ; preds = %173
  %176 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %6, i64 0, i32 0
  %177 = getelementptr inbounds %"class.CPWL_EditImpl::Iterator", %"class.CPWL_EditImpl::Iterator"* %165, i64 0, i32 1, i32 0
  %178 = load %"class.CPVT_VariableText::Iterator"*, %"class.CPVT_VariableText::Iterator"** %177, align 8
  call void @_ZN17CPVT_VariableText8Iterator5SetAtERK14CPVT_WordPlace(%"class.CPVT_VariableText::Iterator"* %178, %struct.CPVT_WordPlace* dereferenceable(12) %176) #12
  br label %182

179:                                              ; preds = %173
  %180 = getelementptr inbounds %"class.CPWL_EditImpl::Iterator", %"class.CPWL_EditImpl::Iterator"* %165, i64 0, i32 1, i32 0
  %181 = load %"class.CPVT_VariableText::Iterator"*, %"class.CPVT_VariableText::Iterator"** %180, align 8
  call void @_ZN17CPVT_VariableText8Iterator5SetAtEi(%"class.CPVT_VariableText::Iterator"* %181, i32 0) #12
  br label %182

182:                                              ; preds = %179, %175
  %183 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %6, i64 0, i32 1, i32 2
  %184 = getelementptr inbounds %"class.CPWL_EditImpl::Iterator", %"class.CPWL_EditImpl::Iterator"* %165, i64 0, i32 1, i32 0
  %185 = load %"class.CPVT_VariableText::Iterator"*, %"class.CPVT_VariableText::Iterator"** %184, align 8
  %186 = call zeroext i1 @_ZN17CPVT_VariableText8Iterator8NextWordEv(%"class.CPVT_VariableText::Iterator"* %185) #12
  br i1 %186, label %187, label %559

187:                                              ; preds = %182
  %188 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %6, i64 0, i32 1, i32 0
  %189 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %6, i64 0, i32 1, i32 1
  %190 = icmp eq i32 %78, %80
  %191 = icmp eq i32 %77, %81
  %192 = and i1 %190, %191
  %193 = icmp eq i32 %79, %82
  %194 = and i1 %192, %193
  %195 = bitcast %class.IPWL_SystemHandler* %7 to i1 (%class.IPWL_SystemHandler*)***
  %196 = bitcast %class.CPVT_Word* %22 to i8*
  %197 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %22, i64 0, i32 0
  %198 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %22, i64 0, i32 2, i32 2
  %199 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %22, i64 0, i32 3, i32 0
  %200 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %22, i64 0, i32 7
  %201 = bitcast float* %199 to i8*
  %202 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %22, i64 0, i32 8
  %203 = getelementptr inbounds %"class.CPWL_EditImpl::Iterator", %"class.CPWL_EditImpl::Iterator"* %165, i64 0, i32 0, i32 0
  %204 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %22, i64 0, i32 3, i32 1
  %205 = bitcast %class.CPVT_Line* %23 to i8*
  %206 = getelementptr inbounds %class.CPVT_Line, %class.CPVT_Line* %23, i64 0, i32 2, i32 0
  %207 = getelementptr inbounds %class.CPVT_Line, %class.CPVT_Line* %23, i64 0, i32 2, i32 1
  %208 = getelementptr inbounds %class.CPVT_Line, %class.CPVT_Line* %23, i64 0, i32 4
  %209 = getelementptr inbounds %class.CPVT_Line, %class.CPVT_Line* %23, i64 0, i32 5
  %210 = bitcast float* %206 to i8*
  %211 = bitcast %class.CFX_PathData* %25 to i8*
  %212 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %22, i64 0, i32 6
  %213 = bitcast i16* %26 to i8*
  %214 = bitcast %class.CFX_FloatRect* %24 to i8*
  %215 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %24, i64 0, i32 0
  %216 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %24, i64 0, i32 1
  %217 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %24, i64 0, i32 2
  %218 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %24, i64 0, i32 3
  %219 = bitcast %class.IPWL_SystemHandler* %7 to void (%class.IPWL_SystemHandler*, %class.CFFL_FormFiller*, %class.CFX_FloatRect*)***
  %220 = bitcast %class.CFX_PTemplate* %33 to i8*
  %221 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %5, i64 0, i32 0
  %222 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %5, i64 0, i32 1
  %223 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %33, i64 0, i32 0
  %224 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %33, i64 0, i32 1
  %225 = bitcast %"class.fxcrt::RetainPtr"* %34 to i8*
  %226 = bitcast %class.IPVT_FontMap* %171 to void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)***
  %227 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %34, i64 0, i32 0, i32 0, i32 0, i32 0
  %228 = bitcast %"class.fxcrt::ByteString"* %35 to i8*
  %229 = bitcast %class.CFX_PTemplate* %12 to i8*
  %230 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %12, i64 0, i32 0
  %231 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %12, i64 0, i32 1
  %232 = getelementptr inbounds %class.CPDF_RenderOptions, %class.CPDF_RenderOptions* %13, i64 0, i32 0
  %233 = bitcast %class.CFX_PTemplate* %28 to i8*
  %234 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %28, i64 0, i32 0
  %235 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %28, i64 0, i32 1
  %236 = bitcast %"class.fxcrt::RetainPtr"* %29 to i8*
  %237 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %29, i64 0, i32 0, i32 0, i32 0, i32 0
  %238 = bitcast %"class.fxcrt::ByteString"* %30 to i8*
  %239 = bitcast %class.CFX_PTemplate* %10 to i8*
  %240 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %10, i64 0, i32 0
  %241 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %10, i64 0, i32 1
  %242 = getelementptr inbounds %class.CPDF_RenderOptions, %class.CPDF_RenderOptions* %11, i64 0, i32 0
  %243 = bitcast %"class.std::__1::basic_string"* %31 to i8*
  %244 = bitcast %"class.std::__1::basic_string"* %31 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %245 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %244, i64 0, i32 1, i32 0
  %246 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %247 = bitcast %"class.std::__1::basic_ostringstream"* %16 to %"class.std::__1::basic_ostream"*
  %248 = bitcast %"class.fxcrt::ByteString"* %32 to i8*
  %249 = bitcast %class.CPVT_Line* %23 to i8*
  %250 = bitcast %class.CFX_PathData* %25 to i8*
  %251 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %22, i64 0, i32 3, i32 0
  %252 = bitcast %class.CPVT_Word* %22 to <4 x i32>*
  br label %253

253:                                              ; preds = %187, %550
  %254 = phi i32 [ -1, %187 ], [ %556, %550 ]
  %255 = phi i8 [ 0, %187 ], [ %306, %550 ]
  %256 = phi i32 [ %3, %187 ], [ %555, %550 ]
  %257 = phi i32 [ %3, %187 ], [ %311, %550 ]
  %258 = phi i32 [ -1, %187 ], [ %554, %550 ]
  %259 = phi i32 [ -1, %187 ], [ %553, %550 ]
  %260 = phi float [ 0.000000e+00, %187 ], [ %552, %550 ]
  %261 = phi float [ 0.000000e+00, %187 ], [ %551, %550 ]
  %262 = load %"class.CPVT_VariableText::Iterator"*, %"class.CPVT_VariableText::Iterator"** %184, align 8
  %263 = getelementptr inbounds %"class.CPVT_VariableText::Iterator", %"class.CPVT_VariableText::Iterator"* %262, i64 0, i32 0, i32 0
  %264 = load i32, i32* %263, align 4
  %265 = getelementptr inbounds %"class.CPVT_VariableText::Iterator", %"class.CPVT_VariableText::Iterator"* %262, i64 0, i32 0, i32 1
  %266 = load i32, i32* %265, align 4
  %267 = getelementptr inbounds %"class.CPVT_VariableText::Iterator", %"class.CPVT_VariableText::Iterator"* %262, i64 0, i32 0, i32 2
  %268 = load i32, i32* %267, align 4
  br i1 %174, label %269, label %282

269:                                              ; preds = %253
  %270 = load i32, i32* %188, align 4
  %271 = icmp eq i32 %264, %270
  br i1 %271, label %274, label %272

272:                                              ; preds = %269
  %273 = icmp sgt i32 %264, %270
  br i1 %273, label %559, label %282

274:                                              ; preds = %269
  %275 = load i32, i32* %189, align 4
  %276 = icmp eq i32 %266, %275
  br i1 %276, label %279, label %277

277:                                              ; preds = %274
  %278 = icmp sgt i32 %266, %275
  br i1 %278, label %559, label %282

279:                                              ; preds = %274
  %280 = load i32, i32* %183, align 4
  %281 = icmp sgt i32 %268, %280
  br i1 %281, label %559, label %282

282:                                              ; preds = %277, %272, %279, %253
  br i1 %194, label %304, label %283

283:                                              ; preds = %282
  %284 = icmp eq i32 %264, %80
  br i1 %284, label %287, label %285

285:                                              ; preds = %283
  %286 = icmp sgt i32 %264, %80
  br i1 %286, label %293, label %304

287:                                              ; preds = %283
  %288 = icmp eq i32 %266, %81
  br i1 %288, label %291, label %289

289:                                              ; preds = %287
  %290 = icmp sgt i32 %266, %81
  br i1 %290, label %293, label %304

291:                                              ; preds = %287
  %292 = icmp sgt i32 %268, %82
  br i1 %292, label %293, label %304

293:                                              ; preds = %289, %285, %291
  %294 = icmp eq i32 %264, %78
  br i1 %294, label %297, label %295

295:                                              ; preds = %293
  %296 = icmp slt i32 %264, %78
  br i1 %296, label %303, label %304

297:                                              ; preds = %293
  %298 = icmp eq i32 %266, %77
  br i1 %298, label %301, label %299

299:                                              ; preds = %297
  %300 = icmp slt i32 %266, %77
  br i1 %300, label %303, label %304

301:                                              ; preds = %297
  %302 = icmp slt i32 %79, %268
  br i1 %302, label %304, label %303

303:                                              ; preds = %301, %299, %295
  br label %304

304:                                              ; preds = %301, %282, %299, %295, %289, %285, %291, %303
  %305 = phi i32 [ -1, %303 ], [ %3, %291 ], [ %3, %285 ], [ %3, %289 ], [ %3, %295 ], [ %3, %299 ], [ %257, %282 ], [ %3, %301 ]
  %306 = phi i8 [ 1, %303 ], [ 0, %291 ], [ 0, %285 ], [ 0, %289 ], [ 0, %295 ], [ 0, %299 ], [ %255, %282 ], [ 0, %301 ]
  %307 = load i1 (%class.IPWL_SystemHandler*)**, i1 (%class.IPWL_SystemHandler*)*** %195, align 8
  %308 = getelementptr inbounds i1 (%class.IPWL_SystemHandler*)*, i1 (%class.IPWL_SystemHandler*)** %307, i64 4
  %309 = load i1 (%class.IPWL_SystemHandler*)*, i1 (%class.IPWL_SystemHandler*)** %308, align 8
  %310 = call zeroext i1 %309(%class.IPWL_SystemHandler* %7) #12
  %311 = select i1 %310, i32 %3, i32 %305
  %312 = select i1 %310, i32 %3, i32 %256
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %196) #12
  store <4 x i32> <i32 -1431655766, i32 0, i32 -1, i32 -1>, <4 x i32>* %252, align 16
  store i16 0, i16* %197, align 16
  store i32 -1, i32* %198, align 8
  call void @llvm.memset.p0i8.i64(i8* align 4 %201, i8 0, i64 20, i1 false) #12
  store i32 -1, i32* %200, align 8
  store float 0.000000e+00, float* %202, align 4
  %313 = load %"class.CPVT_VariableText::Iterator"*, %"class.CPVT_VariableText::Iterator"** %184, align 8
  %314 = call zeroext i1 @_ZNK17CPVT_VariableText8Iterator7GetWordER9CPVT_Word(%"class.CPVT_VariableText::Iterator"* %313, %class.CPVT_Word* nonnull dereferenceable(48) %22) #12
  br i1 %314, label %315, label %550

315:                                              ; preds = %304
  %316 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %203, align 8
  %317 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %316, i64 0, i32 7, i32 0, i32 0, i32 0
  %318 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %317, align 8, !noalias !18
  %319 = call { <2 x float>, <2 x float> } @_ZNK17CPVT_VariableText14GetContentRectEv(%class.CPVT_VariableText* %318) #12, !noalias !18
  %320 = extractvalue { <2 x float>, <2 x float> } %319, 0
  %321 = extractvalue { <2 x float>, <2 x float> } %319, 1
  %322 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %317, align 8, !noalias !18
  %323 = call dereferenceable(16) %class.CFX_FloatRect* @_ZNK17CPVT_VariableText12GetPlateRectEv(%class.CPVT_VariableText* %322) #12, !noalias !18
  %324 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %323, i64 0, i32 0
  %325 = load float, float* %324, align 4, !noalias !18
  %326 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %323, i64 0, i32 1
  %327 = load float, float* %326, align 4, !noalias !18
  %328 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %323, i64 0, i32 3
  %329 = load float, float* %328, align 4, !noalias !18
  %330 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %316, i64 0, i32 5
  %331 = load i32, i32* %330, align 8, !noalias !18
  switch i32 %331, label %345 [
    i32 2, label %339
    i32 1, label %332
  ]

332:                                              ; preds = %315
  %333 = fsub float %329, %327
  %334 = extractelement <2 x float> %321, i32 1
  %335 = extractelement <2 x float> %320, i32 1
  %336 = fsub float %334, %335
  %337 = fsub float %333, %336
  %338 = fmul float %337, 5.000000e-01
  br label %345

339:                                              ; preds = %315
  %340 = fsub float %329, %327
  %341 = extractelement <2 x float> %321, i32 1
  %342 = extractelement <2 x float> %320, i32 1
  %343 = fsub float %341, %342
  %344 = fsub float %340, %343
  br label %345

345:                                              ; preds = %315, %332, %339
  %346 = phi float [ %344, %339 ], [ %338, %332 ], [ 0.000000e+00, %315 ]
  %347 = load float, float* %199, align 4, !noalias !18
  %348 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %316, i64 0, i32 12, i32 0
  %349 = load float, float* %348, align 8, !noalias !18
  %350 = fsub float %349, %325
  %351 = fsub float %347, %350
  %352 = load float, float* %204, align 4, !noalias !18
  %353 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %316, i64 0, i32 12, i32 1
  %354 = load float, float* %353, align 4, !noalias !18
  %355 = fadd float %346, %354
  %356 = fsub float %355, %329
  %357 = fsub float %352, %356
  store float %351, float* %199, align 4
  store float %357, float* %204, align 4
  %358 = and i8 %306, 1
  %359 = icmp eq i8 %358, 0
  br i1 %359, label %434, label %360

360:                                              ; preds = %345
  call void @llvm.lifetime.start.p0i8(i64 44, i8* nonnull %205) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %249, i8 -1, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* align 4 %210, i8 0, i64 20, i1 false) #12
  %361 = load %"class.CPVT_VariableText::Iterator"*, %"class.CPVT_VariableText::Iterator"** %184, align 8
  %362 = call zeroext i1 @_ZNK17CPVT_VariableText8Iterator7GetLineER9CPVT_Line(%"class.CPVT_VariableText::Iterator"* %361, %class.CPVT_Line* nonnull dereferenceable(44) %23) #12
  br i1 %362, label %363, label %406

363:                                              ; preds = %360
  %364 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %203, align 8
  %365 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %364, i64 0, i32 7, i32 0, i32 0, i32 0
  %366 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %365, align 8, !noalias !21
  %367 = call { <2 x float>, <2 x float> } @_ZNK17CPVT_VariableText14GetContentRectEv(%class.CPVT_VariableText* %366) #12, !noalias !21
  %368 = extractvalue { <2 x float>, <2 x float> } %367, 0
  %369 = extractvalue { <2 x float>, <2 x float> } %367, 1
  %370 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %365, align 8, !noalias !21
  %371 = call dereferenceable(16) %class.CFX_FloatRect* @_ZNK17CPVT_VariableText12GetPlateRectEv(%class.CPVT_VariableText* %370) #12, !noalias !21
  %372 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %371, i64 0, i32 0
  %373 = load float, float* %372, align 4, !noalias !21
  %374 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %371, i64 0, i32 1
  %375 = load float, float* %374, align 4, !noalias !21
  %376 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %371, i64 0, i32 3
  %377 = load float, float* %376, align 4, !noalias !21
  %378 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %364, i64 0, i32 5
  %379 = load i32, i32* %378, align 8, !noalias !21
  switch i32 %379, label %393 [
    i32 2, label %387
    i32 1, label %380
  ]

380:                                              ; preds = %363
  %381 = fsub float %377, %375
  %382 = extractelement <2 x float> %369, i32 1
  %383 = extractelement <2 x float> %368, i32 1
  %384 = fsub float %382, %383
  %385 = fsub float %381, %384
  %386 = fmul float %385, 5.000000e-01
  br label %393

387:                                              ; preds = %363
  %388 = fsub float %377, %375
  %389 = extractelement <2 x float> %369, i32 1
  %390 = extractelement <2 x float> %368, i32 1
  %391 = fsub float %389, %390
  %392 = fsub float %388, %391
  br label %393

393:                                              ; preds = %387, %380, %363
  %394 = phi float [ %392, %387 ], [ %386, %380 ], [ 0.000000e+00, %363 ]
  %395 = load float, float* %206, align 4, !noalias !21
  %396 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %364, i64 0, i32 12, i32 0
  %397 = load float, float* %396, align 8, !noalias !21
  %398 = fsub float %397, %373
  %399 = fsub float %395, %398
  %400 = load float, float* %207, align 4, !noalias !21
  %401 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %364, i64 0, i32 12, i32 1
  %402 = load float, float* %401, align 4, !noalias !21
  %403 = fadd float %394, %402
  %404 = fsub float %403, %377
  %405 = fsub float %400, %404
  store float %399, float* %206, align 4
  store float %405, float* %207, align 4
  br label %406

406:                                              ; preds = %360, %393
  %407 = load i1 (%class.IPWL_SystemHandler*)**, i1 (%class.IPWL_SystemHandler*)*** %195, align 8
  %408 = getelementptr inbounds i1 (%class.IPWL_SystemHandler*)*, i1 (%class.IPWL_SystemHandler*)** %407, i64 4
  %409 = load i1 (%class.IPWL_SystemHandler*)*, i1 (%class.IPWL_SystemHandler*)** %408, align 8
  %410 = call zeroext i1 %409(%class.IPWL_SystemHandler* %7) #12
  br i1 %410, label %411, label %423

411:                                              ; preds = %406
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %214) #12
  %412 = load float, float* %199, align 4
  %413 = load float, float* %207, align 4
  %414 = load float, float* %209, align 4
  %415 = fadd float %413, %414
  %416 = load float, float* %212, align 4
  %417 = fadd float %412, %416
  %418 = load float, float* %208, align 4
  %419 = fadd float %413, %418
  store float %412, float* %215, align 4
  store float %415, float* %216, align 4
  store float %417, float* %217, align 4
  store float %419, float* %218, align 4
  call void @_ZN13CFX_FloatRect9IntersectERKS_(%class.CFX_FloatRect* nonnull %24, %class.CFX_FloatRect* dereferenceable(16) %4) #12
  %420 = load void (%class.IPWL_SystemHandler*, %class.CFFL_FormFiller*, %class.CFX_FloatRect*)**, void (%class.IPWL_SystemHandler*, %class.CFFL_FormFiller*, %class.CFX_FloatRect*)*** %219, align 8
  %421 = getelementptr inbounds void (%class.IPWL_SystemHandler*, %class.CFFL_FormFiller*, %class.CFX_FloatRect*)*, void (%class.IPWL_SystemHandler*, %class.CFFL_FormFiller*, %class.CFX_FloatRect*)** %420, i64 3
  %422 = load void (%class.IPWL_SystemHandler*, %class.CFFL_FormFiller*, %class.CFX_FloatRect*)*, void (%class.IPWL_SystemHandler*, %class.CFFL_FormFiller*, %class.CFX_FloatRect*)** %421, align 8
  call void %422(%class.IPWL_SystemHandler* %7, %class.CFFL_FormFiller* %8, %class.CFX_FloatRect* nonnull dereferenceable(16) %24) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %214) #12
  br label %433

423:                                              ; preds = %406
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %211) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %250, i8 -86, i64 24, i1 false)
  call void @_ZN12CFX_PathDataC1Ev(%class.CFX_PathData* nonnull %25) #12
  %424 = load float, float* %199, align 4
  %425 = load float, float* %207, align 4
  %426 = load float, float* %209, align 4
  %427 = fadd float %425, %426
  %428 = load float, float* %212, align 4
  %429 = fadd float %424, %428
  %430 = load float, float* %208, align 4
  %431 = fadd float %425, %430
  call void @_ZN12CFX_PathData10AppendRectEffff(%class.CFX_PathData* nonnull %25, float %424, float %427, float %429, float %431) #12
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %213) #12
  store i16 2, i16* %26, align 2
  %432 = call zeroext i1 @_ZN16CFX_RenderDevice8DrawPathEPK12CFX_PathDataPK10CFX_MatrixPK18CFX_GraphStateDatajjRK21CFX_FillRenderOptions(%class.CFX_RenderDevice* %0, %class.CFX_PathData* nonnull %25, %class.CFX_Matrix* %1, %class.CFX_GraphStateData* null, i32 -16764047, i32 0, %struct.CFX_FillRenderOptions* nonnull dereferenceable(2) %27) #12
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %213) #12
  call void @_ZN12CFX_PathDataD1Ev(%class.CFX_PathData* nonnull %25) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %211) #12
  br label %433

433:                                              ; preds = %423, %411
  call void @llvm.lifetime.end.p0i8(i64 44, i8* nonnull %205) #12
  br label %434

434:                                              ; preds = %345, %433
  br i1 %49, label %435, label %511

435:                                              ; preds = %434
  %436 = icmp eq i32 %264, %258
  %437 = sub nsw i32 %264, %258
  %438 = sub nsw i32 %266, %259
  %439 = select i1 %436, i32 %438, i32 %437
  %440 = icmp eq i32 %439, 0
  br i1 %440, label %441, label %446

441:                                              ; preds = %435
  %442 = load i32, i32* %200, align 8
  %443 = icmp eq i32 %442, %254
  %444 = icmp eq i32 %312, %311
  %445 = and i1 %444, %443
  br i1 %445, label %505, label %446

446:                                              ; preds = %441, %435
  %447 = load i8*, i8** %93, align 8
  %448 = getelementptr i8, i8* %447, i64 -24
  %449 = bitcast i8* %448 to i64*
  %450 = load i64, i64* %449, align 8
  %451 = getelementptr inbounds i8, i8* %83, i64 %450
  %452 = getelementptr inbounds i8, i8* %451, i64 32
  %453 = bitcast i8* %452 to i32*
  %454 = load i32, i32* %453, align 8
  %455 = and i32 %454, 5
  %456 = icmp eq i32 %455, 0
  br i1 %456, label %457, label %501

457:                                              ; preds = %446
  %458 = getelementptr inbounds i8, i8* %451, i64 40
  %459 = bitcast i8* %458 to %"class.std::__1::basic_streambuf"**
  %460 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %459, align 8
  %461 = bitcast %"class.std::__1::basic_streambuf"* %460 to { i64, i64 } (%"class.std::__1::basic_streambuf"*, i64, i32, i32)***
  %462 = load { i64, i64 } (%"class.std::__1::basic_streambuf"*, i64, i32, i32)**, { i64, i64 } (%"class.std::__1::basic_streambuf"*, i64, i32, i32)*** %461, align 8
  %463 = getelementptr inbounds { i64, i64 } (%"class.std::__1::basic_streambuf"*, i64, i32, i32)*, { i64, i64 } (%"class.std::__1::basic_streambuf"*, i64, i32, i32)** %462, i64 4
  %464 = load { i64, i64 } (%"class.std::__1::basic_streambuf"*, i64, i32, i32)*, { i64, i64 } (%"class.std::__1::basic_streambuf"*, i64, i32, i32)** %463, align 8
  %465 = call { i64, i64 } %464(%"class.std::__1::basic_streambuf"* %460, i64 0, i32 1, i32 16) #12
  %466 = extractvalue { i64, i64 } %465, 1
  %467 = icmp sgt i64 %466, 0
  br i1 %467, label %468, label %501

468:                                              ; preds = %457
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %233) #12
  %469 = load float, float* %221, align 4
  %470 = fadd float %260, %469
  %471 = load float, float* %222, align 4
  %472 = fadd float %261, %471
  store float %470, float* %234, align 4
  store float %472, float* %235, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %236) #12
  %473 = load void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)**, void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)*** %226, align 8
  %474 = getelementptr inbounds void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)*, void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)** %473, i64 2
  %475 = load void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)*, void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)** %474, align 8
  call void %475(%"class.fxcrt::RetainPtr"* nonnull sret %29, %class.IPVT_FontMap* nonnull %171, i32 %254) #12
  %476 = load %class.CPDF_Font*, %class.CPDF_Font** %237, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %238) #12
  call void @_ZN5fxcrt10ByteStringC1ERKNSt3__119basic_ostringstreamIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.fxcrt::ByteString"* nonnull %30, %"class.std::__1::basic_ostringstream"* nonnull dereferenceable(264) %16) #12
  %477 = icmp eq %class.CPDF_Font* %476, null
  br i1 %477, label %481, label %478

478:                                              ; preds = %468
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %239) #12
  store float 0xFFFFFFFFE0000000, float* %240, align 4
  store float 0xFFFFFFFFE0000000, float* %241, align 4
  call void @_ZNK10CFX_Matrix9TransformERK13CFX_PTemplateIfE(%class.CFX_PTemplate* nonnull sret %10, %class.CFX_Matrix* %1, %class.CFX_PTemplate* nonnull dereferenceable(8) %28) #12
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %242) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %242, i8 -86, i64 40, i1 false) #12
  call void @_ZN18CPDF_RenderOptionsC1Ev(%class.CPDF_RenderOptions* nonnull %11) #12
  store i8 0, i8* %242, align 8
  %479 = load float, float* %240, align 4
  %480 = load float, float* %241, align 4
  call void @_ZN17CPDF_TextRenderer14DrawTextStringEP16CFX_RenderDeviceffP9CPDF_FontfRK10CFX_MatrixRKN5fxcrt10ByteStringEjRK18CPDF_RenderOptions(%class.CFX_RenderDevice* %0, float %479, float %480, %class.CPDF_Font* nonnull %476, float %53, %class.CFX_Matrix* dereferenceable(24) %1, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %30, i32 %312, %class.CPDF_RenderOptions* nonnull dereferenceable(40) %11) #12
  call void @_ZN18CPDF_RenderOptionsD1Ev(%class.CPDF_RenderOptions* nonnull %11) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %242) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %239) #12
  br label %481

481:                                              ; preds = %468, %478
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %30) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %238) #12
  %482 = load %class.CPDF_Font*, %class.CPDF_Font** %237, align 8
  store %class.CPDF_Font* null, %class.CPDF_Font** %237, align 8
  %483 = icmp eq %class.CPDF_Font* %482, null
  br i1 %483, label %495, label %484

484:                                              ; preds = %481
  %485 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %482, i64 0, i32 0, i32 1
  %486 = load i64, i64* %485, align 8
  %487 = add nsw i64 %486, -1
  store i64 %487, i64* %485, align 8
  %488 = icmp eq i64 %487, 0
  br i1 %488, label %489, label %495

489:                                              ; preds = %484
  %490 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %482, i64 0, i32 0
  %491 = bitcast %class.CPDF_Font* %482 to void (%"class.fxcrt::Retainable"*)***
  %492 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %491, align 8
  %493 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %492, i64 1
  %494 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %493, align 8
  call void %494(%"class.fxcrt::Retainable"* nonnull %490) #12
  br label %495

495:                                              ; preds = %481, %484, %489
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %236) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %233) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %243) #12
  store i8 0, i8* %245, align 1
  store i8 0, i8* %243, align 8
  call void @_ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE(%"class.std::__1::basic_stringbuf"* %88, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %31) #12
  %496 = load i8, i8* %245, align 1
  %497 = icmp slt i8 %496, 0
  br i1 %497, label %498, label %500

498:                                              ; preds = %495
  %499 = load i8*, i8** %246, align 8
  call void @_ZdlPv(i8* %499) #13
  br label %500

500:                                              ; preds = %495, %498
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %243) #12
  br label %501

501:                                              ; preds = %446, %500, %457
  %502 = load i32, i32* %200, align 8
  %503 = load float, float* %251, align 4
  %504 = load float, float* %204, align 4
  br label %505

505:                                              ; preds = %441, %501
  %506 = phi i32 [ %254, %441 ], [ %502, %501 ]
  %507 = phi float [ %261, %441 ], [ %504, %501 ]
  %508 = phi float [ %260, %441 ], [ %503, %501 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %248) #12
  %509 = load i16, i16* %197, align 16
  call void @_ZN13CPWL_EditImpl16GetPDFWordStringEitt(%"class.fxcrt::ByteString"* nonnull sret %32, %class.CPWL_EditImpl* %2, i32 %506, i16 zeroext %509, i16 zeroext %51)
  %510 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN5fxcrtlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_10ByteStringE(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %247, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %32) #12
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %32) #12
  br label %544

511:                                              ; preds = %434
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %220) #12
  %512 = load float, float* %199, align 4
  %513 = load float, float* %221, align 4
  %514 = fadd float %512, %513
  %515 = load float, float* %204, align 4
  %516 = load float, float* %222, align 4
  %517 = fadd float %515, %516
  store float %514, float* %223, align 4
  store float %517, float* %224, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %225) #12
  %518 = load i32, i32* %200, align 8
  %519 = load void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)**, void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)*** %226, align 8
  %520 = getelementptr inbounds void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)*, void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)** %519, i64 2
  %521 = load void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)*, void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)** %520, align 8
  call void %521(%"class.fxcrt::RetainPtr"* nonnull sret %34, %class.IPVT_FontMap* nonnull %171, i32 %518) #12
  %522 = load %class.CPDF_Font*, %class.CPDF_Font** %227, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %228) #12
  %523 = load i32, i32* %200, align 8
  %524 = load i16, i16* %197, align 16
  call void @_ZN13CPWL_EditImpl16GetPDFWordStringEitt(%"class.fxcrt::ByteString"* nonnull sret %35, %class.CPWL_EditImpl* %2, i32 %523, i16 zeroext %524, i16 zeroext %51)
  %525 = icmp eq %class.CPDF_Font* %522, null
  br i1 %525, label %529, label %526

526:                                              ; preds = %511
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %229) #12
  store float 0xFFFFFFFFE0000000, float* %230, align 4
  store float 0xFFFFFFFFE0000000, float* %231, align 4
  call void @_ZNK10CFX_Matrix9TransformERK13CFX_PTemplateIfE(%class.CFX_PTemplate* nonnull sret %12, %class.CFX_Matrix* %1, %class.CFX_PTemplate* nonnull dereferenceable(8) %33) #12
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %232) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %232, i8 -86, i64 40, i1 false) #12
  call void @_ZN18CPDF_RenderOptionsC1Ev(%class.CPDF_RenderOptions* nonnull %13) #12
  store i8 0, i8* %232, align 8
  %527 = load float, float* %230, align 4
  %528 = load float, float* %231, align 4
  call void @_ZN17CPDF_TextRenderer14DrawTextStringEP16CFX_RenderDeviceffP9CPDF_FontfRK10CFX_MatrixRKN5fxcrt10ByteStringEjRK18CPDF_RenderOptions(%class.CFX_RenderDevice* %0, float %527, float %528, %class.CPDF_Font* nonnull %522, float %53, %class.CFX_Matrix* dereferenceable(24) %1, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %35, i32 %311, %class.CPDF_RenderOptions* nonnull dereferenceable(40) %13) #12
  call void @_ZN18CPDF_RenderOptionsD1Ev(%class.CPDF_RenderOptions* nonnull %13) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %232) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %229) #12
  br label %529

529:                                              ; preds = %511, %526
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %35) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %228) #12
  %530 = load %class.CPDF_Font*, %class.CPDF_Font** %227, align 8
  store %class.CPDF_Font* null, %class.CPDF_Font** %227, align 8
  %531 = icmp eq %class.CPDF_Font* %530, null
  br i1 %531, label %543, label %532

532:                                              ; preds = %529
  %533 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %530, i64 0, i32 0, i32 1
  %534 = load i64, i64* %533, align 8
  %535 = add nsw i64 %534, -1
  store i64 %535, i64* %533, align 8
  %536 = icmp eq i64 %535, 0
  br i1 %536, label %537, label %543

537:                                              ; preds = %532
  %538 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %530, i64 0, i32 0
  %539 = bitcast %class.CPDF_Font* %530 to void (%"class.fxcrt::Retainable"*)***
  %540 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %539, align 8
  %541 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %540, i64 1
  %542 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %541, align 8
  call void %542(%"class.fxcrt::Retainable"* nonnull %538) #12
  br label %543

543:                                              ; preds = %529, %532, %537
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %225) #12
  br label %544

544:                                              ; preds = %505, %543
  %545 = phi i8* [ %220, %543 ], [ %248, %505 ]
  %546 = phi float [ %261, %543 ], [ %507, %505 ]
  %547 = phi float [ %260, %543 ], [ %508, %505 ]
  %548 = phi i32 [ %312, %543 ], [ %311, %505 ]
  %549 = phi i32 [ %254, %543 ], [ %506, %505 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %545) #12
  br label %550

550:                                              ; preds = %544, %304
  %551 = phi float [ %261, %304 ], [ %546, %544 ]
  %552 = phi float [ %260, %304 ], [ %547, %544 ]
  %553 = phi i32 [ %259, %304 ], [ %266, %544 ]
  %554 = phi i32 [ %258, %304 ], [ %264, %544 ]
  %555 = phi i32 [ %312, %304 ], [ %548, %544 ]
  %556 = phi i32 [ %254, %304 ], [ %549, %544 ]
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %196) #12
  %557 = load %"class.CPVT_VariableText::Iterator"*, %"class.CPVT_VariableText::Iterator"** %184, align 8
  %558 = call zeroext i1 @_ZN17CPVT_VariableText8Iterator8NextWordEv(%"class.CPVT_VariableText::Iterator"* %557) #12
  br i1 %558, label %253, label %559

559:                                              ; preds = %550, %279, %272, %277, %182
  %560 = phi float [ 0.000000e+00, %182 ], [ %261, %277 ], [ %261, %272 ], [ %261, %279 ], [ %551, %550 ]
  %561 = phi float [ 0.000000e+00, %182 ], [ %260, %277 ], [ %260, %272 ], [ %260, %279 ], [ %552, %550 ]
  %562 = phi i32 [ %3, %182 ], [ %256, %277 ], [ %256, %272 ], [ %256, %279 ], [ %555, %550 ]
  %563 = phi i32 [ -1, %182 ], [ %254, %277 ], [ %254, %272 ], [ %254, %279 ], [ %556, %550 ]
  %564 = load i8*, i8** %93, align 8
  %565 = getelementptr i8, i8* %564, i64 -24
  %566 = bitcast i8* %565 to i64*
  %567 = load i64, i64* %566, align 8
  %568 = getelementptr inbounds i8, i8* %83, i64 %567
  %569 = getelementptr inbounds i8, i8* %568, i64 32
  %570 = bitcast i8* %569 to i32*
  %571 = load i32, i32* %570, align 8
  %572 = and i32 %571, 5
  %573 = icmp eq i32 %572, 0
  br i1 %573, label %574, label %626

574:                                              ; preds = %559
  %575 = getelementptr inbounds i8, i8* %568, i64 40
  %576 = bitcast i8* %575 to %"class.std::__1::basic_streambuf"**
  %577 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %576, align 8
  %578 = bitcast %"class.std::__1::basic_streambuf"* %577 to { i64, i64 } (%"class.std::__1::basic_streambuf"*, i64, i32, i32)***
  %579 = load { i64, i64 } (%"class.std::__1::basic_streambuf"*, i64, i32, i32)**, { i64, i64 } (%"class.std::__1::basic_streambuf"*, i64, i32, i32)*** %578, align 8
  %580 = getelementptr inbounds { i64, i64 } (%"class.std::__1::basic_streambuf"*, i64, i32, i32)*, { i64, i64 } (%"class.std::__1::basic_streambuf"*, i64, i32, i32)** %579, i64 4
  %581 = load { i64, i64 } (%"class.std::__1::basic_streambuf"*, i64, i32, i32)*, { i64, i64 } (%"class.std::__1::basic_streambuf"*, i64, i32, i32)** %580, align 8
  %582 = call { i64, i64 } %581(%"class.std::__1::basic_streambuf"* %577, i64 0, i32 1, i32 16) #12
  %583 = extractvalue { i64, i64 } %582, 1
  %584 = icmp sgt i64 %583, 0
  br i1 %584, label %585, label %626

585:                                              ; preds = %574
  %586 = bitcast %class.CFX_PTemplate* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %586) #12
  %587 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %5, i64 0, i32 0
  %588 = load float, float* %587, align 4
  %589 = fadd float %561, %588
  %590 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %5, i64 0, i32 1
  %591 = load float, float* %590, align 4
  %592 = fadd float %560, %591
  %593 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %36, i64 0, i32 0
  store float %589, float* %593, align 4
  %594 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %36, i64 0, i32 1
  store float %592, float* %594, align 4
  %595 = bitcast %"class.fxcrt::RetainPtr"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %595) #12
  %596 = bitcast %class.IPVT_FontMap* %171 to void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)***
  %597 = load void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)**, void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)*** %596, align 8
  %598 = getelementptr inbounds void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)*, void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)** %597, i64 2
  %599 = load void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)*, void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)** %598, align 8
  call void %599(%"class.fxcrt::RetainPtr"* nonnull sret %37, %class.IPVT_FontMap* nonnull %171, i32 %563) #12
  %600 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %37, i64 0, i32 0, i32 0, i32 0, i32 0
  %601 = load %class.CPDF_Font*, %class.CPDF_Font** %600, align 8
  %602 = bitcast %"class.fxcrt::ByteString"* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %602) #12
  call void @_ZN5fxcrt10ByteStringC1ERKNSt3__119basic_ostringstreamIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.fxcrt::ByteString"* nonnull %38, %"class.std::__1::basic_ostringstream"* nonnull dereferenceable(264) %16) #12
  %603 = icmp eq %class.CPDF_Font* %601, null
  br i1 %603, label %611, label %604

604:                                              ; preds = %585
  %605 = bitcast %class.CFX_PTemplate* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %605) #12
  %606 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %14, i64 0, i32 0
  store float 0xFFFFFFFFE0000000, float* %606, align 4
  %607 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %14, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %607, align 4
  call void @_ZNK10CFX_Matrix9TransformERK13CFX_PTemplateIfE(%class.CFX_PTemplate* nonnull sret %14, %class.CFX_Matrix* %1, %class.CFX_PTemplate* nonnull dereferenceable(8) %36) #12
  %608 = getelementptr inbounds %class.CPDF_RenderOptions, %class.CPDF_RenderOptions* %15, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %608) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %608, i8 -86, i64 40, i1 false) #12
  call void @_ZN18CPDF_RenderOptionsC1Ev(%class.CPDF_RenderOptions* nonnull %15) #12
  store i8 0, i8* %608, align 8
  %609 = load float, float* %606, align 4
  %610 = load float, float* %607, align 4
  call void @_ZN17CPDF_TextRenderer14DrawTextStringEP16CFX_RenderDeviceffP9CPDF_FontfRK10CFX_MatrixRKN5fxcrt10ByteStringEjRK18CPDF_RenderOptions(%class.CFX_RenderDevice* %0, float %609, float %610, %class.CPDF_Font* nonnull %601, float %53, %class.CFX_Matrix* dereferenceable(24) %1, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %38, i32 %562, %class.CPDF_RenderOptions* nonnull dereferenceable(40) %15) #12
  call void @_ZN18CPDF_RenderOptionsD1Ev(%class.CPDF_RenderOptions* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %608) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %605) #12
  br label %611

611:                                              ; preds = %585, %604
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %38) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %602) #12
  %612 = load %class.CPDF_Font*, %class.CPDF_Font** %600, align 8
  store %class.CPDF_Font* null, %class.CPDF_Font** %600, align 8
  %613 = icmp eq %class.CPDF_Font* %612, null
  br i1 %613, label %625, label %614

614:                                              ; preds = %611
  %615 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %612, i64 0, i32 0, i32 1
  %616 = load i64, i64* %615, align 8
  %617 = add nsw i64 %616, -1
  store i64 %617, i64* %615, align 8
  %618 = icmp eq i64 %617, 0
  br i1 %618, label %619, label %625

619:                                              ; preds = %614
  %620 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %612, i64 0, i32 0
  %621 = bitcast %class.CPDF_Font* %612 to void (%"class.fxcrt::Retainable"*)***
  %622 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %621, align 8
  %623 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %622, i64 1
  %624 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %623, align 8
  call void %624(%"class.fxcrt::Retainable"* nonnull %620) #12
  br label %625

625:                                              ; preds = %611, %614, %619
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %595) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %586) #12
  br label %626

626:                                              ; preds = %559, %164, %574, %625, %169
  call void @_ZN16CFX_RenderDevice13StateRestorerD1Ev(%"class.CFX_RenderDevice::StateRestorer"* nonnull %17) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %115) #12
  %627 = load i64, i64* bitcast ([4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  store i64 %627, i64* %91, align 8
  %628 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %629 = inttoptr i64 %627 to i8*
  %630 = getelementptr i8, i8* %629, i64 -24
  %631 = bitcast i8* %630 to i64*
  %632 = load i64, i64* %631, align 8
  %633 = getelementptr inbounds i8, i8* %83, i64 %632
  %634 = bitcast i8* %633 to i64*
  store i64 %628, i64* %634, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %111, align 8
  %635 = bitcast %"class.std::__1::basic_string"* %112 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %636 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %635, i64 0, i32 1, i32 0
  %637 = load i8, i8* %636, align 1
  %638 = icmp slt i8 %637, 0
  br i1 %638, label %639, label %642

639:                                              ; preds = %626
  %640 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %112, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %641 = load i8*, i8** %640, align 8
  call void @_ZdlPv(i8* %641) #13
  br label %642

642:                                              ; preds = %626, %639
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %89) #12
  %643 = bitcast %"class.std::__1::basic_ostringstream"* %16 to %"class.std::__1::basic_ostream"*
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* nonnull %643, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #12
  %644 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %16, i64 0, i32 2
  %645 = bitcast %"class.std::__1::basic_ios.base"* %644 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %645) #12
  call void @llvm.lifetime.end.p0i8(i64 264, i8* nonnull %83) #12
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK13CPWL_EditImpl12GetCharArrayEv(%class.CPWL_EditImpl* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %3 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %2, align 8
  %4 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %3, i64 0, i32 6
  %5 = load i32, i32* %4, align 4
  ret i32 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZNK13CPWL_EditImpl12GetCharSpaceEv(%class.CPWL_EditImpl* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %3 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %2, align 8
  %4 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %3, i64 0, i32 9
  %5 = load float, float* %4, align 8
  ret float %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i16 @_ZNK13CPWL_EditImpl15GetPasswordCharEv(%class.CPWL_EditImpl* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %3 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %2, align 8
  %4 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %3, i64 0, i32 4
  %5 = load i16, i16* %4, align 4
  ret i16 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZNK13CPWL_EditImpl11GetFontSizeEv(%class.CPWL_EditImpl* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %3 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %2, align 8
  %4 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %3, i64 0, i32 10
  %5 = load float, float* %4, align 4
  ret float %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK13CPWL_EditImpl18GetSelectWordRangeEv(%struct.CPVT_WordRange* noalias nocapture sret, %class.CPWL_EditImpl* nocapture readonly) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %1, i64 0, i32 11
  %4 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %1, i64 0, i32 11, i32 1
  %5 = bitcast %struct.CPVT_WordRange* %0 to i8*
  %6 = bitcast %"class.CPWL_EditImpl::SelectState"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 %6, i64 12, i1 false) #12
  %7 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %0, i64 0, i32 1
  %8 = bitcast %struct.CPVT_WordPlace* %7 to i8*
  %9 = bitcast %struct.CPVT_WordPlace* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 %9, i64 12, i1 false) #12
  %10 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %0, i64 0, i32 0, i32 0
  %11 = load i32, i32* %10, align 4, !alias.scope !24
  %12 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %7, i64 0, i32 0
  %13 = load i32, i32* %12, align 4, !alias.scope !24
  %14 = icmp eq i32 %11, %13
  br i1 %14, label %20, label %15

15:                                               ; preds = %2
  %16 = icmp sgt i32 %11, %13
  br i1 %16, label %17, label %40

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %0, i64 0, i32 0, i32 1
  %19 = load i32, i32* %18, align 4, !alias.scope !24
  br label %34

20:                                               ; preds = %2
  %21 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %0, i64 0, i32 0, i32 1
  %22 = load i32, i32* %21, align 4, !alias.scope !24
  %23 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %0, i64 0, i32 1, i32 1
  %24 = load i32, i32* %23, align 4, !alias.scope !24
  %25 = icmp eq i32 %22, %24
  br i1 %25, label %28, label %26

26:                                               ; preds = %20
  %27 = icmp sgt i32 %22, %24
  br i1 %27, label %34, label %40

28:                                               ; preds = %20
  %29 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %0, i64 0, i32 0, i32 2
  %30 = load i32, i32* %29, align 4, !alias.scope !24
  %31 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %0, i64 0, i32 1, i32 2
  %32 = load i32, i32* %31, align 4, !alias.scope !24
  %33 = icmp sgt i32 %30, %32
  br i1 %33, label %34, label %40

34:                                               ; preds = %28, %26, %17
  %35 = phi i32 [ %19, %17 ], [ %22, %26 ], [ %22, %28 ]
  %36 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %0, i64 0, i32 0, i32 2
  %37 = load i32, i32* %36, align 4, !alias.scope !24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 %8, i64 12, i1 false) #12, !alias.scope !24
  store i32 %11, i32* %12, align 4, !alias.scope !24
  %38 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %0, i64 0, i32 1, i32 1
  store i32 %35, i32* %38, align 4, !alias.scope !24
  %39 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %0, i64 0, i32 1, i32 2
  store i32 %37, i32* %39, align 4, !alias.scope !24
  br label %40

40:                                               ; preds = %15, %26, %28, %34
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN16CFX_RenderDevice13StateRestorerC1EPS_(%"class.CFX_RenderDevice::StateRestorer"*, %class.CFX_RenderDevice*) unnamed_addr #3

declare zeroext i1 @_ZN16CFX_RenderDevice12SetClip_RectERK7FX_RECT(%class.CFX_RenderDevice*, %struct.FX_RECT* dereferenceable(16)) local_unnamed_addr #3

declare { <2 x float>, <2 x float> } @_ZNK10CFX_Matrix13TransformRectERK13CFX_FloatRect(%class.CFX_Matrix*, %class.CFX_FloatRect* dereferenceable(16)) local_unnamed_addr #3

declare { i64, i64 } @_ZNK13CFX_FloatRect8ToFxRectEv(%class.CFX_FloatRect*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.CPWL_EditImpl::Iterator"* @_ZN13CPWL_EditImpl11GetIteratorEv(%class.CPWL_EditImpl*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 14
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.57"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.CPWL_EditImpl::Iterator"*, %"class.CPWL_EditImpl::Iterator"** %3, align 8
  %5 = icmp eq %"class.CPWL_EditImpl::Iterator"* %4, null
  br i1 %5, label %6, label %24

6:                                                ; preds = %1
  %7 = ptrtoint %class.CPWL_EditImpl* %0 to i64
  %8 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %9 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %8, align 8
  %10 = tail call %"class.CPVT_VariableText::Iterator"* @_ZN17CPVT_VariableText11GetIteratorEv(%class.CPVT_VariableText* %9) #12
  %11 = ptrtoint %"class.CPVT_VariableText::Iterator"* %10 to i64
  %12 = tail call i8* @_Znwm(i64 16) #13
  %13 = bitcast i8* %12 to i64*
  store i64 %7, i64* %13, align 8
  %14 = getelementptr inbounds i8, i8* %12, i64 8
  %15 = bitcast i8* %14 to i64*
  store i64 %11, i64* %15, align 8
  %16 = ptrtoint i8* %12 to i64
  %17 = load %"class.CPWL_EditImpl::Iterator"*, %"class.CPWL_EditImpl::Iterator"** %3, align 8
  %18 = bitcast %"class.std::__1::unique_ptr.57"* %2 to i64*
  store i64 %16, i64* %18, align 8
  %19 = icmp eq %"class.CPWL_EditImpl::Iterator"* %17, null
  %20 = bitcast i8* %12 to %"class.CPWL_EditImpl::Iterator"*
  br i1 %19, label %24, label %21

21:                                               ; preds = %6
  %22 = bitcast %"class.CPWL_EditImpl::Iterator"* %17 to i8*
  tail call void @_ZdlPv(i8* %22) #13
  %23 = load %"class.CPWL_EditImpl::Iterator"*, %"class.CPWL_EditImpl::Iterator"** %3, align 8
  br label %24

24:                                               ; preds = %1, %6, %21
  %25 = phi %"class.CPWL_EditImpl::Iterator"* [ %4, %1 ], [ %20, %6 ], [ %23, %21 ]
  ret %"class.CPWL_EditImpl::Iterator"* %25
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %class.IPVT_FontMap* @_ZN13CPWL_EditImpl10GetFontMapEv(%class.CPWL_EditImpl* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %3 = load %"class.CPWL_EditImpl::Provider"*, %"class.CPWL_EditImpl::Provider"** %2, align 8
  %4 = icmp eq %"class.CPWL_EditImpl::Provider"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.CPWL_EditImpl::Provider", %"class.CPWL_EditImpl::Provider"* %3, i64 0, i32 0, i32 1, i32 0
  %7 = load %class.IPVT_FontMap*, %class.IPVT_FontMap** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %class.IPVT_FontMap* [ %7, %5 ], [ null, %1 ]
  ret %class.IPVT_FontMap* %9
}

declare void @_ZN13CFX_FloatRect9IntersectERKS_(%class.CFX_FloatRect*, %class.CFX_FloatRect* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZN12CFX_PathDataC1Ev(%class.CFX_PathData*) unnamed_addr #3

declare void @_ZN12CFX_PathData10AppendRectEffff(%class.CFX_PathData*, float, float, float, float) local_unnamed_addr #3

declare zeroext i1 @_ZN16CFX_RenderDevice8DrawPathEPK12CFX_PathDataPK10CFX_MatrixPK18CFX_GraphStateDatajjRK21CFX_FillRenderOptions(%class.CFX_RenderDevice*, %class.CFX_PathData*, %class.CFX_Matrix*, %class.CFX_GraphStateData*, i32, i32, %struct.CFX_FillRenderOptions* dereferenceable(2)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN12CFX_PathDataD1Ev(%class.CFX_PathData*) unnamed_addr #6

declare void @_ZN5fxcrt10ByteStringC1ERKNSt3__119basic_ostringstreamIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.fxcrt::ByteString"*, %"class.std::__1::basic_ostringstream"* dereferenceable(264)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"*) unnamed_addr #6

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN5fxcrtlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_10ByteStringE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl16GetPDFWordStringEitt(%"class.fxcrt::ByteString"* noalias sret, %class.CPWL_EditImpl* nocapture readonly, i32, i16 zeroext, i16 zeroext) local_unnamed_addr #2 align 2 {
  %6 = alloca %"class.fxcrt::RetainPtr", align 8
  %7 = alloca %"class.fxcrt::ByteString", align 8
  %8 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %1, i64 0, i32 6, i32 0, i32 0, i32 0
  %9 = load %"class.CPWL_EditImpl::Provider"*, %"class.CPWL_EditImpl::Provider"** %8, align 8
  %10 = icmp eq %"class.CPWL_EditImpl::Provider"* %9, null
  br i1 %10, label %15, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.CPWL_EditImpl::Provider", %"class.CPWL_EditImpl::Provider"* %9, i64 0, i32 0, i32 1, i32 0
  %13 = load %class.IPVT_FontMap*, %class.IPVT_FontMap** %12, align 8
  %14 = bitcast %class.IPVT_FontMap* %13 to void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)***
  br label %15

15:                                               ; preds = %5, %11
  %16 = phi void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)*** [ %14, %11 ], [ null, %5 ]
  %17 = phi %class.IPVT_FontMap* [ %13, %11 ], [ null, %5 ]
  %18 = bitcast %"class.fxcrt::RetainPtr"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #12
  %19 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CPDF_Font* inttoptr (i64 -6148914691236517206 to %class.CPDF_Font*), %class.CPDF_Font** %19, align 8
  %20 = load void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)**, void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)*** %16, align 8
  %21 = getelementptr inbounds void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)*, void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)** %20, i64 2
  %22 = load void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)*, void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)** %21, align 8
  call void %22(%"class.fxcrt::RetainPtr"* nonnull sret %6, %class.IPVT_FontMap* %17, i32 %2) #12
  %23 = load %class.CPDF_Font*, %class.CPDF_Font** %19, align 8
  %24 = icmp eq %class.CPDF_Font* %23, null
  br i1 %24, label %25, label %26

25:                                               ; preds = %15
  call void @_ZN5fxcrt10ByteStringC1Ev(%"class.fxcrt::ByteString"* %0) #12
  br label %61

26:                                               ; preds = %15
  %27 = bitcast %"class.fxcrt::ByteString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #12
  %28 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %28, align 8
  call void @_ZN5fxcrt10ByteStringC1Ev(%"class.fxcrt::ByteString"* nonnull %7) #12
  %29 = icmp eq i16 %4, 0
  br i1 %29, label %30, label %56

30:                                               ; preds = %26
  %31 = load %class.CPDF_Font*, %class.CPDF_Font** %19, align 8
  %32 = bitcast %class.CPDF_Font* %31 to i1 (%class.CPDF_Font*)***
  %33 = load i1 (%class.CPDF_Font*)**, i1 (%class.CPDF_Font*)*** %32, align 8
  %34 = getelementptr inbounds i1 (%class.CPDF_Font*)*, i1 (%class.CPDF_Font*)** %33, i64 16
  %35 = load i1 (%class.CPDF_Font*)*, i1 (%class.CPDF_Font*)** %34, align 8
  %36 = call zeroext i1 %35(%class.CPDF_Font* %31) #12
  br i1 %36, label %37, label %45

37:                                               ; preds = %30
  %38 = load %class.CPDF_Font*, %class.CPDF_Font** %19, align 8
  %39 = zext i16 %3 to i32
  %40 = bitcast %class.CPDF_Font* %38 to i32 (%class.CPDF_Font*, i32)***
  %41 = load i32 (%class.CPDF_Font*, i32)**, i32 (%class.CPDF_Font*, i32)*** %40, align 8
  %42 = getelementptr inbounds i32 (%class.CPDF_Font*, i32)*, i32 (%class.CPDF_Font*, i32)** %41, i64 22
  %43 = load i32 (%class.CPDF_Font*, i32)*, i32 (%class.CPDF_Font*, i32)** %42, align 8
  %44 = call i32 %43(%class.CPDF_Font* %38, i32 signext %39) #12
  br label %51

45:                                               ; preds = %30
  %46 = bitcast %class.IPVT_FontMap* %17 to i32 (%class.IPVT_FontMap*, i32, i16)***
  %47 = load i32 (%class.IPVT_FontMap*, i32, i16)**, i32 (%class.IPVT_FontMap*, i32, i16)*** %46, align 8
  %48 = getelementptr inbounds i32 (%class.IPVT_FontMap*, i32, i16)*, i32 (%class.IPVT_FontMap*, i32, i16)** %47, i64 5
  %49 = load i32 (%class.IPVT_FontMap*, i32, i16)*, i32 (%class.IPVT_FontMap*, i32, i16)** %48, align 8
  %50 = call i32 %49(%class.IPVT_FontMap* %17, i32 %2, i16 zeroext %3) #12
  br label %51

51:                                               ; preds = %45, %37
  %52 = phi i32 [ %44, %37 ], [ %50, %45 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %56, label %54

54:                                               ; preds = %51
  %55 = load %class.CPDF_Font*, %class.CPDF_Font** %19, align 8
  call void @_ZNK9CPDF_Font10AppendCharEPN5fxcrt10ByteStringEj(%class.CPDF_Font* %55, %"class.fxcrt::ByteString"* nonnull %7, i32 %52) #12
  br label %60

56:                                               ; preds = %51, %26
  %57 = phi i16 [ %4, %26 ], [ %3, %51 ]
  %58 = load %class.CPDF_Font*, %class.CPDF_Font** %19, align 8
  %59 = zext i16 %57 to i32
  call void @_ZNK9CPDF_Font10AppendCharEPN5fxcrt10ByteStringEj(%class.CPDF_Font* %58, %"class.fxcrt::ByteString"* nonnull %7, i32 %59) #12
  br label %60

60:                                               ; preds = %54, %56
  call void @_ZN5fxcrt10ByteStringC1EOS0_(%"class.fxcrt::ByteString"* %0, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %7) #12
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #12
  br label %61

61:                                               ; preds = %60, %25
  %62 = load %class.CPDF_Font*, %class.CPDF_Font** %19, align 8
  store %class.CPDF_Font* null, %class.CPDF_Font** %19, align 8
  %63 = icmp eq %class.CPDF_Font* %62, null
  br i1 %63, label %75, label %64

64:                                               ; preds = %61
  %65 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %62, i64 0, i32 0, i32 1
  %66 = load i64, i64* %65, align 8
  %67 = add nsw i64 %66, -1
  store i64 %67, i64* %65, align 8
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %69, label %75

69:                                               ; preds = %64
  %70 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %62, i64 0, i32 0
  %71 = bitcast %class.CPDF_Font* %62 to void (%"class.fxcrt::Retainable"*)***
  %72 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %72, i64 1
  %74 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %73, align 8
  call void %74(%"class.fxcrt::Retainable"* nonnull %70) #12
  br label %75

75:                                               ; preds = %61, %64, %69
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN16CFX_RenderDevice13StateRestorerD1Ev(%"class.CFX_RenderDevice::StateRestorer"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImplC2Ev(%class.CPWL_EditImpl* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 0
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 1
  store i8 0, i8* %3, align 1
  %4 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 2
  store i8 0, i8* %4, align 2
  %5 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 3
  store i8 1, i8* %5, align 1
  %6 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 4
  store i8 1, i8* %6, align 4
  %7 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 5
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 6
  %9 = bitcast %"class.std::__1::unique_ptr"* %8 to i64*
  store i64 0, i64* %9, align 8
  %10 = tail call i8* @_Znwm(i64 104) #13
  %11 = bitcast i8* %10 to %class.CPVT_VariableText*
  tail call void @_ZN17CPVT_VariableTextC1Ev(%class.CPVT_VariableText* nonnull %11) #12
  %12 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %13 = bitcast %class.CPVT_VariableText** %12 to i8**
  store i8* %10, i8** %13, align 8
  %14 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 8, i32 0
  store %class.CPWL_Edit* null, %class.CPWL_Edit** %14, align 8
  %15 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9, i32 0
  %16 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 12, i32 0
  %17 = bitcast i32* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 -1, i64 48, i1 false)
  %18 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 18
  %19 = bitcast %class.CFX_FloatRect* %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %19, i8 0, i64 16, i1 false) #12
  %20 = bitcast float* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %20, i8 0, i64 161, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImplD2Ev(%class.CPWL_EditImpl*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 17
  %3 = getelementptr inbounds %"class.CPWL_EditImpl::UndoStack", %"class.CPWL_EditImpl::UndoStack"* %2, i64 0, i32 0, i32 0
  tail call void @_ZNSt3__112__deque_baseINS_10unique_ptrIN13CPWL_EditImpl13UndoItemIfaceENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE5clearEv(%"class.std::__1::__deque_base"* %3) #12
  %4 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 1
  %5 = load %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"*** %4, align 8
  %6 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 2
  %7 = load %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"*** %6, align 8
  %8 = icmp eq %"class.std::__1::unique_ptr.77"** %5, %7
  br i1 %8, label %27, label %9

9:                                                ; preds = %1, %9
  %10 = phi %"class.std::__1::unique_ptr.77"** [ %13, %9 ], [ %5, %1 ]
  %11 = bitcast %"class.std::__1::unique_ptr.77"** %10 to i8**
  %12 = load i8*, i8** %11, align 8
  tail call void @_ZdlPv(i8* %12) #13
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %10, i64 1
  %14 = icmp eq %"class.std::__1::unique_ptr.77"** %13, %7
  br i1 %14, label %15, label %9

15:                                               ; preds = %9
  %16 = load %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"*** %4, align 8
  %17 = load %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"*** %6, align 8
  %18 = icmp eq %"class.std::__1::unique_ptr.77"** %17, %16
  br i1 %18, label %27, label %19

19:                                               ; preds = %15
  %20 = ptrtoint %"class.std::__1::unique_ptr.77"** %16 to i64
  %21 = getelementptr %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %17, i64 -1
  %22 = ptrtoint %"class.std::__1::unique_ptr.77"** %21 to i64
  %23 = sub i64 %22, %20
  %24 = lshr i64 %23, 3
  %25 = xor i64 %24, -1
  %26 = getelementptr %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %17, i64 %25
  store %"class.std::__1::unique_ptr.77"** %26, %"class.std::__1::unique_ptr.77"*** %6, align 8
  br label %27

27:                                               ; preds = %19, %15, %1
  %28 = getelementptr inbounds %"class.CPWL_EditImpl::UndoStack", %"class.CPWL_EditImpl::UndoStack"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"*** %28, align 8
  %30 = icmp eq %"class.std::__1::unique_ptr.77"** %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %27
  %32 = bitcast %"class.std::__1::unique_ptr.77"** %29 to i8*
  tail call void @_ZdlPv(i8* %32) #13
  br label %33

33:                                               ; preds = %27, %31
  %34 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 15, i32 2, i32 0, i32 0
  %35 = load %class.CFX_FloatRect*, %class.CFX_FloatRect** %34, align 8
  %36 = icmp eq %class.CFX_FloatRect* %35, null
  br i1 %36, label %42, label %37

37:                                               ; preds = %33
  %38 = ptrtoint %class.CFX_FloatRect* %35 to i64
  %39 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 15, i32 2, i32 0, i32 1
  %40 = bitcast %class.CFX_FloatRect** %39 to i64*
  store i64 %38, i64* %40, align 8
  %41 = bitcast %class.CFX_FloatRect* %35 to i8*
  tail call void @_ZdlPv(i8* %41) #13
  br label %42

42:                                               ; preds = %37, %33
  %43 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 15, i32 1, i32 0, i32 0
  %44 = load %"struct.CPWL_EditImpl::RefreshState::LineRect"*, %"struct.CPWL_EditImpl::RefreshState::LineRect"** %43, align 8
  %45 = icmp eq %"struct.CPWL_EditImpl::RefreshState::LineRect"* %44, null
  br i1 %45, label %51, label %46

46:                                               ; preds = %42
  %47 = ptrtoint %"struct.CPWL_EditImpl::RefreshState::LineRect"* %44 to i64
  %48 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 15, i32 1, i32 0, i32 1
  %49 = bitcast %"struct.CPWL_EditImpl::RefreshState::LineRect"** %48 to i64*
  store i64 %47, i64* %49, align 8
  %50 = bitcast %"struct.CPWL_EditImpl::RefreshState::LineRect"* %44 to i8*
  tail call void @_ZdlPv(i8* %50) #13
  br label %51

51:                                               ; preds = %46, %42
  %52 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %53 = load %"struct.CPWL_EditImpl::RefreshState::LineRect"*, %"struct.CPWL_EditImpl::RefreshState::LineRect"** %52, align 8
  %54 = icmp eq %"struct.CPWL_EditImpl::RefreshState::LineRect"* %53, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %51
  %56 = ptrtoint %"struct.CPWL_EditImpl::RefreshState::LineRect"* %53 to i64
  %57 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 15, i32 0, i32 0, i32 1
  %58 = bitcast %"struct.CPWL_EditImpl::RefreshState::LineRect"** %57 to i64*
  store i64 %56, i64* %58, align 8
  %59 = bitcast %"struct.CPWL_EditImpl::RefreshState::LineRect"* %53 to i8*
  tail call void @_ZdlPv(i8* %59) #13
  br label %60

60:                                               ; preds = %51, %55
  %61 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %62 = load %"class.CPWL_EditImpl::Iterator"*, %"class.CPWL_EditImpl::Iterator"** %61, align 8
  store %"class.CPWL_EditImpl::Iterator"* null, %"class.CPWL_EditImpl::Iterator"** %61, align 8
  %63 = icmp eq %"class.CPWL_EditImpl::Iterator"* %62, null
  br i1 %63, label %66, label %64

64:                                               ; preds = %60
  %65 = bitcast %"class.CPWL_EditImpl::Iterator"* %62 to i8*
  tail call void @_ZdlPv(i8* %65) #13
  br label %66

66:                                               ; preds = %60, %64
  %67 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %68 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %67, align 8
  store %class.CPVT_VariableText* null, %class.CPVT_VariableText** %67, align 8
  %69 = icmp eq %class.CPVT_VariableText* %68, null
  br i1 %69, label %72, label %70

70:                                               ; preds = %66
  tail call void @_ZN17CPVT_VariableTextD1Ev(%class.CPVT_VariableText* nonnull %68) #12
  %71 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %68, i64 0, i32 0
  tail call void @_ZdlPv(i8* %71) #13
  br label %72

72:                                               ; preds = %66, %70
  %73 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %74 = load %"class.CPWL_EditImpl::Provider"*, %"class.CPWL_EditImpl::Provider"** %73, align 8
  store %"class.CPWL_EditImpl::Provider"* null, %"class.CPWL_EditImpl::Provider"** %73, align 8
  %75 = icmp eq %"class.CPWL_EditImpl::Provider"* %74, null
  br i1 %75, label %81, label %76

76:                                               ; preds = %72
  %77 = bitcast %"class.CPWL_EditImpl::Provider"* %74 to void (%"class.CPWL_EditImpl::Provider"*)***
  %78 = load void (%"class.CPWL_EditImpl::Provider"*)**, void (%"class.CPWL_EditImpl::Provider"*)*** %77, align 8
  %79 = getelementptr inbounds void (%"class.CPWL_EditImpl::Provider"*)*, void (%"class.CPWL_EditImpl::Provider"*)** %78, i64 1
  %80 = load void (%"class.CPWL_EditImpl::Provider"*)*, void (%"class.CPWL_EditImpl::Provider"*)** %79, align 8
  tail call void %80(%"class.CPWL_EditImpl::Provider"* nonnull %74) #12
  br label %81

81:                                               ; preds = %72, %76
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl10InitializeEv(%class.CPWL_EditImpl*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %3 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %2, align 8
  tail call void @_ZN17CPVT_VariableText10InitializeEv(%class.CPVT_VariableText* %3) #12
  %4 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %2, align 8
  %5 = tail call { i64, i32 } @_ZNK17CPVT_VariableText17GetBeginWordPlaceEv(%class.CPVT_VariableText* %4) #12
  %6 = extractvalue { i64, i32 } %5, 0
  %7 = extractvalue { i64, i32 } %5, 1
  %8 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9
  %9 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 10
  %10 = bitcast %struct.CPVT_WordPlace* %9 to i8*
  %11 = bitcast %struct.CPVT_WordPlace* %8 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %10, i8* align 4 %11, i64 12, i1 false) #12
  %12 = bitcast %struct.CPVT_WordPlace* %8 to i64*
  store i64 %6, i64* %12, align 8
  %13 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9, i32 2
  store i32 %7, i32* %13, align 8
  tail call void @_ZN13CPWL_EditImpl14SetCaretOriginEv(%class.CPWL_EditImpl* %0)
  ret void
}

declare void @_ZN17CPVT_VariableText10InitializeEv(%class.CPVT_VariableText*) local_unnamed_addr #3

declare { i64, i32 } @_ZNK17CPVT_VariableText17GetBeginWordPlaceEv(%class.CPVT_VariableText*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl14SetCaretOriginEv(%class.CPWL_EditImpl*) local_unnamed_addr #2 align 2 {
  %2 = alloca %class.CPVT_Word, align 16
  %3 = alloca %class.CPVT_Line, align 4
  %4 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %5 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %4, align 8
  %6 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %5, i64 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %47, label %9

9:                                                ; preds = %1
  %10 = tail call %"class.CPVT_VariableText::Iterator"* @_ZN17CPVT_VariableText11GetIteratorEv(%class.CPVT_VariableText* %5) #12
  %11 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9
  tail call void @_ZN17CPVT_VariableText8Iterator5SetAtERK14CPVT_WordPlace(%"class.CPVT_VariableText::Iterator"* %10, %struct.CPVT_WordPlace* dereferenceable(12) %11) #12
  %12 = bitcast %class.CPVT_Word* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %12) #12
  %13 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %2, i64 0, i32 0
  %14 = bitcast %class.CPVT_Word* %2 to <4 x i32>*
  store <4 x i32> <i32 -1431655766, i32 0, i32 -1, i32 -1>, <4 x i32>* %14, align 16
  store i16 0, i16* %13, align 16
  %15 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %2, i64 0, i32 2, i32 2
  store i32 -1, i32* %15, align 8
  %16 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %2, i64 0, i32 3, i32 0
  %17 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %2, i64 0, i32 7
  %18 = bitcast float* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %18, i8 0, i64 20, i1 false) #12
  store i32 -1, i32* %17, align 8
  %19 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %2, i64 0, i32 8
  store float 0.000000e+00, float* %19, align 4
  %20 = bitcast %class.CPVT_Line* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 44, i8* nonnull %20) #12
  %21 = getelementptr inbounds %class.CPVT_Line, %class.CPVT_Line* %3, i64 0, i32 2, i32 0
  %22 = getelementptr inbounds %class.CPVT_Line, %class.CPVT_Line* %3, i64 0, i32 2, i32 1
  %23 = bitcast float* %21 to i8*
  %24 = bitcast %class.CPVT_Line* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %24, i8 -1, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* align 4 %23, i8 0, i64 20, i1 false) #12
  %25 = call zeroext i1 @_ZNK17CPVT_VariableText8Iterator7GetWordER9CPVT_Word(%"class.CPVT_VariableText::Iterator"* %10, %class.CPVT_Word* nonnull dereferenceable(48) %2) #12
  br i1 %25, label %26, label %33

26:                                               ; preds = %9
  %27 = load float, float* %16, align 4
  %28 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %2, i64 0, i32 6
  %29 = load float, float* %28, align 4
  %30 = fadd float %27, %29
  %31 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 16, i32 0
  store float %30, float* %31, align 8
  %32 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %2, i64 0, i32 3, i32 1
  br label %40

33:                                               ; preds = %9
  %34 = call zeroext i1 @_ZNK17CPVT_VariableText8Iterator7GetLineER9CPVT_Line(%"class.CPVT_VariableText::Iterator"* %10, %class.CPVT_Line* nonnull dereferenceable(44) %3) #12
  br i1 %34, label %35, label %46

35:                                               ; preds = %33
  %36 = bitcast float* %21 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 16
  %39 = bitcast %class.CFX_PTemplate* %38 to i32*
  store i32 %37, i32* %39, align 8
  br label %40

40:                                               ; preds = %26, %35
  %41 = phi float* [ %22, %35 ], [ %32, %26 ]
  %42 = bitcast float* %41 to i32*
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 16, i32 1
  %45 = bitcast float* %44 to i32*
  store i32 %43, i32* %45, align 4
  br label %46

46:                                               ; preds = %40, %33
  call void @llvm.lifetime.end.p0i8(i64 44, i8* nonnull %20) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %12) #12
  br label %47

47:                                               ; preds = %1, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl10SetFontMapEP12IPVT_FontMap(%class.CPWL_EditImpl* nocapture, %class.IPVT_FontMap*) local_unnamed_addr #2 align 2 {
  %3 = tail call i8* @_Znwm(i64 16) #13
  %4 = bitcast i8* %3 to %"class.CPVT_VariableText::Provider"*
  tail call void @_ZN17CPVT_VariableText8ProviderC2EP12IPVT_FontMap(%"class.CPVT_VariableText::Provider"* nonnull %4, %class.IPVT_FontMap* %1) #12
  %5 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN13CPWL_EditImpl8ProviderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = ptrtoint i8* %3 to i64
  %7 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 6
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %7, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.CPWL_EditImpl::Provider"*, %"class.CPWL_EditImpl::Provider"** %8, align 8
  %10 = bitcast %"class.std::__1::unique_ptr"* %7 to i64*
  store i64 %6, i64* %10, align 8
  %11 = icmp eq %"class.CPWL_EditImpl::Provider"* %9, null
  %12 = bitcast i8* %3 to %"class.CPWL_EditImpl::Provider"*
  br i1 %11, label %19, label %13

13:                                               ; preds = %2
  %14 = bitcast %"class.CPWL_EditImpl::Provider"* %9 to void (%"class.CPWL_EditImpl::Provider"*)***
  %15 = load void (%"class.CPWL_EditImpl::Provider"*)**, void (%"class.CPWL_EditImpl::Provider"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.CPWL_EditImpl::Provider"*)*, void (%"class.CPWL_EditImpl::Provider"*)** %15, i64 1
  %17 = load void (%"class.CPWL_EditImpl::Provider"*)*, void (%"class.CPWL_EditImpl::Provider"*)** %16, align 8
  tail call void %17(%"class.CPWL_EditImpl::Provider"* nonnull %9) #12
  %18 = load %"class.CPWL_EditImpl::Provider"*, %"class.CPWL_EditImpl::Provider"** %8, align 8
  br label %19

19:                                               ; preds = %13, %2
  %20 = phi %"class.CPWL_EditImpl::Provider"* [ %18, %13 ], [ %12, %2 ]
  %21 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %22 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %21, align 8
  %23 = getelementptr inbounds %"class.CPWL_EditImpl::Provider", %"class.CPWL_EditImpl::Provider"* %20, i64 0, i32 0
  tail call void @_ZN17CPVT_VariableText11SetProviderEPNS_8ProviderE(%class.CPVT_VariableText* %22, %"class.CPVT_VariableText::Provider"* %23) #12
  ret void
}

declare void @_ZN17CPVT_VariableText11SetProviderEPNS_8ProviderE(%class.CPVT_VariableText*, %"class.CPVT_VariableText::Provider"*) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN13CPWL_EditImpl9SetNotifyEP9CPWL_Edit(%class.CPWL_EditImpl* nocapture, %class.CPWL_Edit*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 8, i32 0
  store %class.CPWL_Edit* %1, %class.CPWL_Edit** %3, align 8
  ret void
}

declare %"class.CPVT_VariableText::Iterator"* @_ZN17CPVT_VariableText11GetIteratorEv(%class.CPVT_VariableText*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl12SetPlateRectERK13CFX_FloatRect(%class.CPWL_EditImpl*, %class.CFX_FloatRect* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %4 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %3, align 8
  tail call void @_ZN17CPVT_VariableText12SetPlateRectERK13CFX_FloatRect(%class.CPVT_VariableText* %4, %class.CFX_FloatRect* dereferenceable(16) %1) #12
  %5 = bitcast %class.CFX_FloatRect* %1 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %1, i64 0, i32 3
  %8 = bitcast float* %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 12
  %11 = bitcast %class.CFX_PTemplate* %10 to i32*
  store i32 %6, i32* %11, align 4
  %12 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 12, i32 1
  %13 = bitcast float* %12 to i32*
  store i32 %9, i32* %13, align 4
  %14 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %3, align 8
  %15 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %14, i64 0, i32 0
  %16 = load i8, i8* %15, align 8, !range !8
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %19, label %18

18:                                               ; preds = %2
  tail call void @_ZN13CPWL_EditImpl12RearrangeAllEv(%class.CPWL_EditImpl* %0) #12
  tail call void @_ZN13CPWL_EditImpl13ScrollToCaretEv(%class.CPWL_EditImpl* %0) #12
  tail call void @_ZN13CPWL_EditImpl7RefreshEv(%class.CPWL_EditImpl* %0) #12
  tail call void @_ZN13CPWL_EditImpl14SetCaretOriginEv(%class.CPWL_EditImpl* %0) #12
  tail call void @_ZN13CPWL_EditImpl12SetCaretInfoEv(%class.CPWL_EditImpl* %0) #12
  br label %19

19:                                               ; preds = %2, %18
  ret void
}

declare void @_ZN17CPVT_VariableText12SetPlateRectERK13CFX_FloatRect(%class.CPVT_VariableText*, %class.CFX_FloatRect* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl5PaintEv(%class.CPWL_EditImpl*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %3 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %2, align 8
  %4 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %3, i64 0, i32 0
  %5 = load i8, i8* %4, align 8, !range !8
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %1
  tail call void @_ZN13CPWL_EditImpl12RearrangeAllEv(%class.CPWL_EditImpl* %0)
  tail call void @_ZN13CPWL_EditImpl13ScrollToCaretEv(%class.CPWL_EditImpl* %0)
  tail call void @_ZN13CPWL_EditImpl7RefreshEv(%class.CPWL_EditImpl* %0)
  tail call void @_ZN13CPWL_EditImpl14SetCaretOriginEv(%class.CPWL_EditImpl* %0)
  tail call void @_ZN13CPWL_EditImpl12SetCaretInfoEv(%class.CPWL_EditImpl* %0)
  br label %8

8:                                                ; preds = %1, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl13SetAlignmentHEib(%class.CPWL_EditImpl*, i32, i1 zeroext) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %5 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %4, align 8
  %6 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %5, i64 0, i32 7
  store i32 %1, i32* %6, align 8
  br i1 %2, label %7, label %13

7:                                                ; preds = %3
  %8 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %4, align 8
  %9 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %8, i64 0, i32 0
  %10 = load i8, i8* %9, align 8, !range !8
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %13, label %12

12:                                               ; preds = %7
  tail call void @_ZN13CPWL_EditImpl12RearrangeAllEv(%class.CPWL_EditImpl* %0) #12
  tail call void @_ZN13CPWL_EditImpl13ScrollToCaretEv(%class.CPWL_EditImpl* %0) #12
  tail call void @_ZN13CPWL_EditImpl7RefreshEv(%class.CPWL_EditImpl* %0) #12
  tail call void @_ZN13CPWL_EditImpl14SetCaretOriginEv(%class.CPWL_EditImpl* %0) #12
  tail call void @_ZN13CPWL_EditImpl12SetCaretInfoEv(%class.CPWL_EditImpl* %0) #12
  br label %13

13:                                               ; preds = %12, %7, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl13SetAlignmentVEib(%class.CPWL_EditImpl*, i32, i1 zeroext) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 5
  store i32 %1, i32* %4, align 8
  br i1 %2, label %5, label %12

5:                                                ; preds = %3
  %6 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %7 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %6, align 8
  %8 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %7, i64 0, i32 0
  %9 = load i8, i8* %8, align 8, !range !8
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %5
  tail call void @_ZN13CPWL_EditImpl12RearrangeAllEv(%class.CPWL_EditImpl* %0) #12
  tail call void @_ZN13CPWL_EditImpl13ScrollToCaretEv(%class.CPWL_EditImpl* %0) #12
  tail call void @_ZN13CPWL_EditImpl7RefreshEv(%class.CPWL_EditImpl* %0) #12
  tail call void @_ZN13CPWL_EditImpl14SetCaretOriginEv(%class.CPWL_EditImpl* %0) #12
  tail call void @_ZN13CPWL_EditImpl12SetCaretInfoEv(%class.CPWL_EditImpl* %0) #12
  br label %12

12:                                               ; preds = %11, %5, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl15SetPasswordCharEtb(%class.CPWL_EditImpl*, i16 zeroext, i1 zeroext) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %5 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %4, align 8
  %6 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %5, i64 0, i32 4
  store i16 %1, i16* %6, align 4
  br i1 %2, label %7, label %13

7:                                                ; preds = %3
  %8 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %4, align 8
  %9 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %8, i64 0, i32 0
  %10 = load i8, i8* %9, align 8, !range !8
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %13, label %12

12:                                               ; preds = %7
  tail call void @_ZN13CPWL_EditImpl12RearrangeAllEv(%class.CPWL_EditImpl* %0) #12
  tail call void @_ZN13CPWL_EditImpl13ScrollToCaretEv(%class.CPWL_EditImpl* %0) #12
  tail call void @_ZN13CPWL_EditImpl7RefreshEv(%class.CPWL_EditImpl* %0) #12
  tail call void @_ZN13CPWL_EditImpl14SetCaretOriginEv(%class.CPWL_EditImpl* %0) #12
  tail call void @_ZN13CPWL_EditImpl12SetCaretInfoEv(%class.CPWL_EditImpl* %0) #12
  br label %13

13:                                               ; preds = %12, %7, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl12SetLimitCharEi(%class.CPWL_EditImpl*, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %4 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %3, align 8
  %5 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %4, i64 0, i32 5
  store i32 %1, i32* %5, align 8
  %6 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %3, align 8
  %7 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %6, i64 0, i32 0
  %8 = load i8, i8* %7, align 8, !range !8
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %2
  tail call void @_ZN13CPWL_EditImpl12RearrangeAllEv(%class.CPWL_EditImpl* %0) #12
  tail call void @_ZN13CPWL_EditImpl13ScrollToCaretEv(%class.CPWL_EditImpl* %0) #12
  tail call void @_ZN13CPWL_EditImpl7RefreshEv(%class.CPWL_EditImpl* %0) #12
  tail call void @_ZN13CPWL_EditImpl14SetCaretOriginEv(%class.CPWL_EditImpl* %0) #12
  tail call void @_ZN13CPWL_EditImpl12SetCaretInfoEv(%class.CPWL_EditImpl* %0) #12
  br label %11

11:                                               ; preds = %2, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl12SetCharArrayEi(%class.CPWL_EditImpl*, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %4 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %3, align 8
  %5 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %4, i64 0, i32 6
  store i32 %1, i32* %5, align 4
  %6 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %3, align 8
  %7 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %6, i64 0, i32 0
  %8 = load i8, i8* %7, align 8, !range !8
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %2
  tail call void @_ZN13CPWL_EditImpl12RearrangeAllEv(%class.CPWL_EditImpl* %0) #12
  tail call void @_ZN13CPWL_EditImpl13ScrollToCaretEv(%class.CPWL_EditImpl* %0) #12
  tail call void @_ZN13CPWL_EditImpl7RefreshEv(%class.CPWL_EditImpl* %0) #12
  tail call void @_ZN13CPWL_EditImpl14SetCaretOriginEv(%class.CPWL_EditImpl* %0) #12
  tail call void @_ZN13CPWL_EditImpl12SetCaretInfoEv(%class.CPWL_EditImpl* %0) #12
  br label %11

11:                                               ; preds = %2, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl12SetCharSpaceEf(%class.CPWL_EditImpl*, float) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %4 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %3, align 8
  %5 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %4, i64 0, i32 9
  store float %1, float* %5, align 8
  %6 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %3, align 8
  %7 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %6, i64 0, i32 0
  %8 = load i8, i8* %7, align 8, !range !8
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %2
  tail call void @_ZN13CPWL_EditImpl12RearrangeAllEv(%class.CPWL_EditImpl* %0) #12
  tail call void @_ZN13CPWL_EditImpl13ScrollToCaretEv(%class.CPWL_EditImpl* %0) #12
  tail call void @_ZN13CPWL_EditImpl7RefreshEv(%class.CPWL_EditImpl* %0) #12
  tail call void @_ZN13CPWL_EditImpl14SetCaretOriginEv(%class.CPWL_EditImpl* %0) #12
  tail call void @_ZN13CPWL_EditImpl12SetCaretInfoEv(%class.CPWL_EditImpl* %0) #12
  br label %11

11:                                               ; preds = %2, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl12SetMultiLineEbb(%class.CPWL_EditImpl*, i1 zeroext, i1 zeroext) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %5 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %4, align 8
  %6 = zext i1 %1 to i8
  %7 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %5, i64 0, i32 1
  store i8 %6, i8* %7, align 1
  br i1 %2, label %8, label %14

8:                                                ; preds = %3
  %9 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %4, align 8
  %10 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %9, i64 0, i32 0
  %11 = load i8, i8* %10, align 8, !range !8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %8
  tail call void @_ZN13CPWL_EditImpl12RearrangeAllEv(%class.CPWL_EditImpl* %0) #12
  tail call void @_ZN13CPWL_EditImpl13ScrollToCaretEv(%class.CPWL_EditImpl* %0) #12
  tail call void @_ZN13CPWL_EditImpl7RefreshEv(%class.CPWL_EditImpl* %0) #12
  tail call void @_ZN13CPWL_EditImpl14SetCaretOriginEv(%class.CPWL_EditImpl* %0) #12
  tail call void @_ZN13CPWL_EditImpl12SetCaretInfoEv(%class.CPWL_EditImpl* %0) #12
  br label %14

14:                                               ; preds = %13, %8, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl13SetAutoReturnEbb(%class.CPWL_EditImpl*, i1 zeroext, i1 zeroext) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %5 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %4, align 8
  %6 = zext i1 %1 to i8
  %7 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %5, i64 0, i32 2
  store i8 %6, i8* %7, align 2
  br i1 %2, label %8, label %14

8:                                                ; preds = %3
  %9 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %4, align 8
  %10 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %9, i64 0, i32 0
  %11 = load i8, i8* %10, align 8, !range !8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %8
  tail call void @_ZN13CPWL_EditImpl12RearrangeAllEv(%class.CPWL_EditImpl* %0) #12
  tail call void @_ZN13CPWL_EditImpl13ScrollToCaretEv(%class.CPWL_EditImpl* %0) #12
  tail call void @_ZN13CPWL_EditImpl7RefreshEv(%class.CPWL_EditImpl* %0) #12
  tail call void @_ZN13CPWL_EditImpl14SetCaretOriginEv(%class.CPWL_EditImpl* %0) #12
  tail call void @_ZN13CPWL_EditImpl12SetCaretInfoEv(%class.CPWL_EditImpl* %0) #12
  br label %14

14:                                               ; preds = %13, %8, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl15SetAutoFontSizeEbb(%class.CPWL_EditImpl*, i1 zeroext, i1 zeroext) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %5 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %4, align 8
  %6 = zext i1 %1 to i8
  %7 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %5, i64 0, i32 3
  store i8 %6, i8* %7, align 1
  br i1 %2, label %8, label %14

8:                                                ; preds = %3
  %9 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %4, align 8
  %10 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %9, i64 0, i32 0
  %11 = load i8, i8* %10, align 8, !range !8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %8
  tail call void @_ZN13CPWL_EditImpl12RearrangeAllEv(%class.CPWL_EditImpl* %0) #12
  tail call void @_ZN13CPWL_EditImpl13ScrollToCaretEv(%class.CPWL_EditImpl* %0) #12
  tail call void @_ZN13CPWL_EditImpl7RefreshEv(%class.CPWL_EditImpl* %0) #12
  tail call void @_ZN13CPWL_EditImpl14SetCaretOriginEv(%class.CPWL_EditImpl* %0) #12
  tail call void @_ZN13CPWL_EditImpl12SetCaretInfoEv(%class.CPWL_EditImpl* %0) #12
  br label %14

14:                                               ; preds = %13, %8, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl11SetFontSizeEf(%class.CPWL_EditImpl*, float) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %4 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %3, align 8
  %5 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %4, i64 0, i32 10
  store float %1, float* %5, align 4
  %6 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %3, align 8
  %7 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %6, i64 0, i32 0
  %8 = load i8, i8* %7, align 8, !range !8
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %2
  tail call void @_ZN13CPWL_EditImpl12RearrangeAllEv(%class.CPWL_EditImpl* %0) #12
  tail call void @_ZN13CPWL_EditImpl13ScrollToCaretEv(%class.CPWL_EditImpl* %0) #12
  tail call void @_ZN13CPWL_EditImpl7RefreshEv(%class.CPWL_EditImpl* %0) #12
  tail call void @_ZN13CPWL_EditImpl14SetCaretOriginEv(%class.CPWL_EditImpl* %0) #12
  tail call void @_ZN13CPWL_EditImpl12SetCaretInfoEv(%class.CPWL_EditImpl* %0) #12
  br label %11

11:                                               ; preds = %2, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl13SetAutoScrollEbb(%class.CPWL_EditImpl*, i1 zeroext, i1 zeroext) local_unnamed_addr #2 align 2 {
  %4 = zext i1 %1 to i8
  %5 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 0
  store i8 %4, i8* %5, align 8
  br i1 %2, label %6, label %13

6:                                                ; preds = %3
  %7 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %8 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %7, align 8
  %9 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %8, i64 0, i32 0
  %10 = load i8, i8* %9, align 8, !range !8
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %13, label %12

12:                                               ; preds = %6
  tail call void @_ZN13CPWL_EditImpl12RearrangeAllEv(%class.CPWL_EditImpl* %0) #12
  tail call void @_ZN13CPWL_EditImpl13ScrollToCaretEv(%class.CPWL_EditImpl* %0) #12
  tail call void @_ZN13CPWL_EditImpl7RefreshEv(%class.CPWL_EditImpl* %0) #12
  tail call void @_ZN13CPWL_EditImpl14SetCaretOriginEv(%class.CPWL_EditImpl* %0) #12
  tail call void @_ZN13CPWL_EditImpl12SetCaretInfoEv(%class.CPWL_EditImpl* %0) #12
  br label %13

13:                                               ; preds = %12, %6, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl15SetTextOverflowEbb(%class.CPWL_EditImpl*, i1 zeroext, i1 zeroext) local_unnamed_addr #2 align 2 {
  %4 = zext i1 %1 to i8
  %5 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 2
  store i8 %4, i8* %5, align 2
  br i1 %2, label %6, label %13

6:                                                ; preds = %3
  %7 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %8 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %7, align 8
  %9 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %8, i64 0, i32 0
  %10 = load i8, i8* %9, align 8, !range !8
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %13, label %12

12:                                               ; preds = %6
  tail call void @_ZN13CPWL_EditImpl12RearrangeAllEv(%class.CPWL_EditImpl* %0) #12
  tail call void @_ZN13CPWL_EditImpl13ScrollToCaretEv(%class.CPWL_EditImpl* %0) #12
  tail call void @_ZN13CPWL_EditImpl7RefreshEv(%class.CPWL_EditImpl* %0) #12
  tail call void @_ZN13CPWL_EditImpl14SetCaretOriginEv(%class.CPWL_EditImpl* %0) #12
  tail call void @_ZN13CPWL_EditImpl12SetCaretInfoEv(%class.CPWL_EditImpl* %0) #12
  br label %13

13:                                               ; preds = %12, %6, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl12SetSelectionEii(%class.CPWL_EditImpl*, i32, i32) local_unnamed_addr #2 align 2 {
  %4 = alloca %struct.CPVT_WordPlace, align 8
  %5 = alloca %struct.CPVT_WordPlace, align 8
  %6 = alloca %struct.CPVT_WordPlace, align 8
  %7 = alloca %struct.CPVT_WordPlace, align 8
  %8 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %9 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %8, align 8
  %10 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %9, i64 0, i32 0
  %11 = load i8, i8* %10, align 8, !range !8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %71, label %13

13:                                               ; preds = %3
  %14 = icmp eq i32 %1, 0
  %15 = icmp slt i32 %2, 0
  %16 = and i1 %14, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %13
  tail call void @_ZN13CPWL_EditImpl9SelectAllEv(%class.CPWL_EditImpl* %0)
  br label %71

18:                                               ; preds = %13
  %19 = icmp slt i32 %1, 0
  br i1 %19, label %20, label %41

20:                                               ; preds = %18
  %21 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11
  %22 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"class.CPWL_EditImpl::SelectState", %"class.CPWL_EditImpl::SelectState"* %21, i64 0, i32 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %23, %25
  br i1 %26, label %27, label %39

27:                                               ; preds = %20
  %28 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 0, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %29, %31
  br i1 %32, label %33, label %39

33:                                               ; preds = %27
  %34 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 0, i32 2
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %35, %37
  br i1 %38, label %71, label %39

39:                                               ; preds = %33, %27, %20
  %40 = bitcast %"class.CPWL_EditImpl::SelectState"* %21 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %40, i8 -1, i64 24, i1 false) #12
  tail call void @_ZN13CPWL_EditImpl7RefreshEv(%class.CPWL_EditImpl* %0) #12
  br label %71

41:                                               ; preds = %18
  %42 = icmp slt i32 %1, %2
  br i1 %42, label %43, label %57

43:                                               ; preds = %41
  %44 = bitcast %struct.CPVT_WordPlace* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %44) #12
  %45 = tail call { i64, i32 } @_ZNK17CPVT_VariableText20WordIndexToWordPlaceEi(%class.CPVT_VariableText* %9, i32 %1) #12
  %46 = extractvalue { i64, i32 } %45, 0
  %47 = extractvalue { i64, i32 } %45, 1
  %48 = bitcast %struct.CPVT_WordPlace* %4 to i64*
  store i64 %46, i64* %48, align 8
  %49 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %4, i64 0, i32 2
  store i32 %47, i32* %49, align 8
  %50 = bitcast %struct.CPVT_WordPlace* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %50) #12
  %51 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %8, align 8
  %52 = tail call { i64, i32 } @_ZNK17CPVT_VariableText20WordIndexToWordPlaceEi(%class.CPVT_VariableText* %51, i32 %2) #12
  %53 = extractvalue { i64, i32 } %52, 0
  %54 = extractvalue { i64, i32 } %52, 1
  %55 = bitcast %struct.CPVT_WordPlace* %5 to i64*
  store i64 %53, i64* %55, align 8
  %56 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %5, i64 0, i32 2
  store i32 %54, i32* %56, align 8
  call void @_ZN13CPWL_EditImpl12SetSelectionERK14CPVT_WordPlaceS2_(%class.CPWL_EditImpl* %0, %struct.CPVT_WordPlace* nonnull dereferenceable(12) %4, %struct.CPVT_WordPlace* nonnull dereferenceable(12) %5)
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %50) #12
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %44) #12
  br label %71

57:                                               ; preds = %41
  %58 = bitcast %struct.CPVT_WordPlace* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %58) #12
  %59 = tail call { i64, i32 } @_ZNK17CPVT_VariableText20WordIndexToWordPlaceEi(%class.CPVT_VariableText* %9, i32 %2) #12
  %60 = extractvalue { i64, i32 } %59, 0
  %61 = extractvalue { i64, i32 } %59, 1
  %62 = bitcast %struct.CPVT_WordPlace* %6 to i64*
  store i64 %60, i64* %62, align 8
  %63 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %6, i64 0, i32 2
  store i32 %61, i32* %63, align 8
  %64 = bitcast %struct.CPVT_WordPlace* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %64) #12
  %65 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %8, align 8
  %66 = tail call { i64, i32 } @_ZNK17CPVT_VariableText20WordIndexToWordPlaceEi(%class.CPVT_VariableText* %65, i32 %1) #12
  %67 = extractvalue { i64, i32 } %66, 0
  %68 = extractvalue { i64, i32 } %66, 1
  %69 = bitcast %struct.CPVT_WordPlace* %7 to i64*
  store i64 %67, i64* %69, align 8
  %70 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %7, i64 0, i32 2
  store i32 %68, i32* %70, align 8
  call void @_ZN13CPWL_EditImpl12SetSelectionERK14CPVT_WordPlaceS2_(%class.CPWL_EditImpl* %0, %struct.CPVT_WordPlace* nonnull dereferenceable(12) %6, %struct.CPVT_WordPlace* nonnull dereferenceable(12) %7)
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %64) #12
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %58) #12
  br label %71

71:                                               ; preds = %3, %39, %33, %17, %43, %57
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl9SelectAllEv(%class.CPWL_EditImpl*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %3 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %2, align 8
  %4 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %3, i64 0, i32 0
  %5 = load i8, i8* %4, align 8, !range !8
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %51, label %7

7:                                                ; preds = %1
  %8 = tail call { i64, i32 } @_ZNK17CPVT_VariableText17GetBeginWordPlaceEv(%class.CPVT_VariableText* %3) #12, !noalias !27
  %9 = extractvalue { i64, i32 } %8, 0
  %10 = extractvalue { i64, i32 } %8, 1
  %11 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %2, align 8, !noalias !27
  %12 = tail call { i64, i32 } @_ZNK17CPVT_VariableText15GetEndWordPlaceEv(%class.CPVT_VariableText* %11) #12, !noalias !27
  %13 = extractvalue { i64, i32 } %12, 0
  %14 = extractvalue { i64, i32 } %12, 1
  %15 = trunc i64 %13 to i32
  %16 = lshr i64 %13, 32
  %17 = trunc i64 %16 to i32
  %18 = trunc i64 %9 to i32
  %19 = icmp eq i32 %18, %15
  %20 = lshr i64 %9, 32
  %21 = trunc i64 %20 to i32
  br i1 %19, label %24, label %22

22:                                               ; preds = %7
  %23 = icmp sgt i32 %18, %15
  br i1 %23, label %30, label %31

24:                                               ; preds = %7
  %25 = icmp eq i32 %21, %17
  br i1 %25, label %28, label %26

26:                                               ; preds = %24
  %27 = icmp sgt i32 %21, %17
  br i1 %27, label %30, label %31

28:                                               ; preds = %24
  %29 = icmp sgt i32 %10, %14
  br i1 %29, label %30, label %31

30:                                               ; preds = %28, %26, %22
  br label %31

31:                                               ; preds = %22, %26, %28, %30
  %32 = phi i64 [ %13, %30 ], [ %9, %28 ], [ %9, %26 ], [ %9, %22 ]
  %33 = phi i32 [ %14, %30 ], [ %10, %28 ], [ %10, %26 ], [ %10, %22 ]
  %34 = phi i64 [ %9, %30 ], [ %13, %28 ], [ %13, %26 ], [ %13, %22 ]
  %35 = phi i64 [ %20, %30 ], [ %16, %28 ], [ %16, %26 ], [ %16, %22 ]
  %36 = phi i32 [ %10, %30 ], [ %14, %28 ], [ %14, %26 ], [ %14, %22 ]
  %37 = shl nuw i64 %35, 32
  %38 = and i64 %34, 4294967295
  %39 = or i64 %37, %38
  %40 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11
  %41 = bitcast %"class.CPWL_EditImpl::SelectState"* %40 to i64*
  store i64 %32, i64* %41, align 8
  %42 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 0, i32 2
  store i32 %33, i32* %42, align 8
  %43 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1
  %44 = bitcast %struct.CPVT_WordPlace* %43 to i64*
  store i64 %39, i64* %44, align 4
  %45 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 2
  store i32 %36, i32* %45, align 4
  %46 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9
  %47 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 10
  %48 = bitcast %struct.CPVT_WordPlace* %47 to i8*
  %49 = bitcast %struct.CPVT_WordPlace* %46 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %48, i8* align 4 %49, i64 12, i1 false) #12
  %50 = bitcast %struct.CPVT_WordPlace* %43 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 4 %50, i64 12, i1 false) #12
  tail call void @_ZN13CPWL_EditImpl13ScrollToCaretEv(%class.CPWL_EditImpl* %0)
  tail call void @_ZN13CPWL_EditImpl7RefreshEv(%class.CPWL_EditImpl* %0)
  tail call void @_ZN13CPWL_EditImpl12SetCaretInfoEv(%class.CPWL_EditImpl* %0)
  br label %51

51:                                               ; preds = %1, %31
  ret void
}

declare { i64, i32 } @_ZNK17CPVT_VariableText20WordIndexToWordPlaceEi(%class.CPVT_VariableText*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl11SelectState3SetERK14CPVT_WordPlaceS3_(%"class.CPWL_EditImpl::SelectState"* nocapture, %struct.CPVT_WordPlace* nocapture readonly dereferenceable(12), %struct.CPVT_WordPlace* nocapture readonly dereferenceable(12)) local_unnamed_addr #2 align 2 {
  %4 = bitcast %"class.CPWL_EditImpl::SelectState"* %0 to i8*
  %5 = bitcast %struct.CPVT_WordPlace* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 12, i1 false)
  %6 = getelementptr inbounds %"class.CPWL_EditImpl::SelectState", %"class.CPWL_EditImpl::SelectState"* %0, i64 0, i32 1
  %7 = bitcast %struct.CPVT_WordPlace* %6 to i8*
  %8 = bitcast %struct.CPVT_WordPlace* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 12, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl13ScrollToCaretEv(%class.CPWL_EditImpl*) local_unnamed_addr #2 align 2 {
  %2 = alloca %class.CPVT_Word, align 16
  %3 = alloca %class.CPVT_Line, align 4
  tail call void @_ZN13CPWL_EditImpl14SetScrollLimitEv(%class.CPWL_EditImpl* %0)
  %4 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %5 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %4, align 8
  %6 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %5, i64 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %281, label %9

9:                                                ; preds = %1
  %10 = tail call %"class.CPVT_VariableText::Iterator"* @_ZN17CPVT_VariableText11GetIteratorEv(%class.CPVT_VariableText* %5) #12
  %11 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9
  tail call void @_ZN17CPVT_VariableText8Iterator5SetAtERK14CPVT_WordPlace(%"class.CPVT_VariableText::Iterator"* %10, %struct.CPVT_WordPlace* dereferenceable(12) %11) #12
  %12 = bitcast %class.CPVT_Word* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %12) #12
  %13 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %2, i64 0, i32 0
  %14 = bitcast %class.CPVT_Word* %2 to <4 x i32>*
  store <4 x i32> <i32 -1431655766, i32 0, i32 -1, i32 -1>, <4 x i32>* %14, align 16
  store i16 0, i16* %13, align 16
  %15 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %2, i64 0, i32 2, i32 2
  store i32 -1, i32* %15, align 8
  %16 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %2, i64 0, i32 3, i32 0
  %17 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %2, i64 0, i32 7
  %18 = bitcast float* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %18, i8 0, i64 20, i1 false) #12
  store i32 -1, i32* %17, align 8
  %19 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %2, i64 0, i32 8
  store float 0.000000e+00, float* %19, align 4
  %20 = bitcast %class.CPVT_Line* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 44, i8* nonnull %20) #12
  %21 = getelementptr inbounds %class.CPVT_Line, %class.CPVT_Line* %3, i64 0, i32 2, i32 0
  %22 = getelementptr inbounds %class.CPVT_Line, %class.CPVT_Line* %3, i64 0, i32 2, i32 1
  %23 = getelementptr inbounds %class.CPVT_Line, %class.CPVT_Line* %3, i64 0, i32 4
  %24 = getelementptr inbounds %class.CPVT_Line, %class.CPVT_Line* %3, i64 0, i32 5
  %25 = bitcast float* %21 to i8*
  %26 = bitcast %class.CPVT_Line* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %26, i8 -1, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* align 4 %25, i8 0, i64 20, i1 false) #12
  %27 = call zeroext i1 @_ZNK17CPVT_VariableText8Iterator7GetWordER9CPVT_Word(%"class.CPVT_VariableText::Iterator"* %10, %class.CPVT_Word* nonnull dereferenceable(48) %2) #12
  br i1 %27, label %28, label %41

28:                                               ; preds = %9
  %29 = load float, float* %16, align 4
  %30 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %2, i64 0, i32 6
  %31 = load float, float* %30, align 4
  %32 = fadd float %29, %31
  %33 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %2, i64 0, i32 3, i32 1
  %34 = load float, float* %33, align 4
  %35 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %2, i64 0, i32 4
  %36 = load float, float* %35, align 4
  %37 = fadd float %34, %36
  %38 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %2, i64 0, i32 5
  %39 = load float, float* %38, align 16
  %40 = fadd float %34, %39
  br label %50

41:                                               ; preds = %9
  %42 = call zeroext i1 @_ZNK17CPVT_VariableText8Iterator7GetLineER9CPVT_Line(%"class.CPVT_VariableText::Iterator"* %10, %class.CPVT_Line* nonnull dereferenceable(44) %3) #12
  br i1 %42, label %43, label %50

43:                                               ; preds = %41
  %44 = load float, float* %21, align 4
  %45 = load float, float* %22, align 4
  %46 = load float, float* %23, align 4
  %47 = fadd float %45, %46
  %48 = load float, float* %24, align 4
  %49 = fadd float %45, %48
  br label %50

50:                                               ; preds = %41, %43, %28
  %51 = phi float [ %37, %28 ], [ %47, %43 ], [ 0.000000e+00, %41 ]
  %52 = phi float [ %32, %28 ], [ %44, %43 ], [ 0.000000e+00, %41 ]
  %53 = phi float [ %40, %28 ], [ %49, %43 ], [ 0.000000e+00, %41 ]
  %54 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %4, align 8, !noalias !30
  %55 = call { <2 x float>, <2 x float> } @_ZNK17CPVT_VariableText14GetContentRectEv(%class.CPVT_VariableText* %54) #12, !noalias !30
  %56 = extractvalue { <2 x float>, <2 x float> } %55, 0
  %57 = extractvalue { <2 x float>, <2 x float> } %55, 1
  %58 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %4, align 8, !noalias !30
  %59 = call dereferenceable(16) %class.CFX_FloatRect* @_ZNK17CPVT_VariableText12GetPlateRectEv(%class.CPVT_VariableText* %58) #12, !noalias !30
  %60 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %59, i64 0, i32 0
  %61 = load float, float* %60, align 4, !noalias !30
  %62 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %59, i64 0, i32 1
  %63 = load float, float* %62, align 4, !noalias !30
  %64 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %59, i64 0, i32 3
  %65 = load float, float* %64, align 4, !noalias !30
  %66 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 5
  %67 = load i32, i32* %66, align 8, !noalias !30
  switch i32 %67, label %81 [
    i32 2, label %75
    i32 1, label %68
  ]

68:                                               ; preds = %50
  %69 = fsub float %65, %63
  %70 = extractelement <2 x float> %57, i32 1
  %71 = extractelement <2 x float> %56, i32 1
  %72 = fsub float %70, %71
  %73 = fsub float %69, %72
  %74 = fmul float %73, 5.000000e-01
  br label %81

75:                                               ; preds = %50
  %76 = fsub float %65, %63
  %77 = extractelement <2 x float> %57, i32 1
  %78 = extractelement <2 x float> %56, i32 1
  %79 = fsub float %77, %78
  %80 = fsub float %76, %79
  br label %81

81:                                               ; preds = %50, %68, %75
  %82 = phi float [ %80, %75 ], [ %74, %68 ], [ 0.000000e+00, %50 ]
  %83 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 12, i32 0
  %84 = load float, float* %83, align 8, !noalias !30
  %85 = fsub float %84, %61
  %86 = fsub float %52, %85
  %87 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 12, i32 1
  %88 = load float, float* %87, align 4, !noalias !30
  %89 = fadd float %82, %88
  %90 = fsub float %89, %65
  %91 = fsub float %51, %90
  %92 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %4, align 8, !noalias !33
  %93 = call { <2 x float>, <2 x float> } @_ZNK17CPVT_VariableText14GetContentRectEv(%class.CPVT_VariableText* %92) #12, !noalias !33
  %94 = extractvalue { <2 x float>, <2 x float> } %93, 0
  %95 = extractvalue { <2 x float>, <2 x float> } %93, 1
  %96 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %4, align 8, !noalias !33
  %97 = call dereferenceable(16) %class.CFX_FloatRect* @_ZNK17CPVT_VariableText12GetPlateRectEv(%class.CPVT_VariableText* %96) #12, !noalias !33
  %98 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %97, i64 0, i32 1
  %99 = load float, float* %98, align 4, !noalias !33
  %100 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %97, i64 0, i32 3
  %101 = load float, float* %100, align 4, !noalias !33
  %102 = load i32, i32* %66, align 8, !noalias !33
  switch i32 %102, label %116 [
    i32 2, label %110
    i32 1, label %103
  ]

103:                                              ; preds = %81
  %104 = fsub float %101, %99
  %105 = extractelement <2 x float> %95, i32 1
  %106 = extractelement <2 x float> %94, i32 1
  %107 = fsub float %105, %106
  %108 = fsub float %104, %107
  %109 = fmul float %108, 5.000000e-01
  br label %116

110:                                              ; preds = %81
  %111 = fsub float %101, %99
  %112 = extractelement <2 x float> %95, i32 1
  %113 = extractelement <2 x float> %94, i32 1
  %114 = fsub float %112, %113
  %115 = fsub float %111, %114
  br label %116

116:                                              ; preds = %81, %103, %110
  %117 = phi float [ %115, %110 ], [ %109, %103 ], [ 0.000000e+00, %81 ]
  %118 = load float, float* %87, align 4, !noalias !33
  %119 = fadd float %117, %118
  %120 = fsub float %119, %101
  %121 = fsub float %53, %120
  %122 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %4, align 8
  %123 = call dereferenceable(16) %class.CFX_FloatRect* @_ZNK17CPVT_VariableText12GetPlateRectEv(%class.CPVT_VariableText* %122) #12
  %124 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %123, i64 0, i32 0
  %125 = load float, float* %124, align 4
  %126 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %123, i64 0, i32 1
  %127 = load float, float* %126, align 4
  %128 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %123, i64 0, i32 2
  %129 = load float, float* %128, align 4
  %130 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %123, i64 0, i32 3
  %131 = load float, float* %130, align 4
  %132 = fsub float %125, %129
  %133 = fpext float %132 to double
  %134 = fcmp olt double %133, 1.000000e-04
  %135 = fcmp ogt double %133, -1.000000e-04
  %136 = and i1 %134, %135
  br i1 %136, label %193, label %137

137:                                              ; preds = %116
  %138 = fcmp olt float %86, %125
  %139 = fsub float %86, %125
  %140 = fpext float %139 to double
  br i1 %138, label %141, label %145

141:                                              ; preds = %137
  %142 = fcmp olt double %140, 1.000000e-04
  %143 = fcmp ogt double %140, -1.000000e-04
  %144 = and i1 %142, %143
  br i1 %144, label %145, label %149

145:                                              ; preds = %137, %141
  %146 = fcmp olt double %140, 1.000000e-04
  %147 = fcmp ogt double %140, -1.000000e-04
  %148 = and i1 %146, %147
  br i1 %148, label %149, label %166

149:                                              ; preds = %145, %141
  %150 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 0
  %151 = load i8, i8* %150, align 8, !range !8
  %152 = icmp eq i8 %151, 0
  br i1 %152, label %193, label %153

153:                                              ; preds = %149
  %154 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %4, align 8
  %155 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %154, i64 0, i32 0
  %156 = load i8, i8* %155, align 8, !range !8
  %157 = icmp eq i8 %156, 0
  br i1 %157, label %193, label %158

158:                                              ; preds = %153
  %159 = load float, float* %83, align 8
  %160 = fsub float %159, %52
  %161 = fpext float %160 to double
  %162 = fcmp olt double %161, 1.000000e-04
  %163 = fcmp ogt double %161, -1.000000e-04
  %164 = and i1 %162, %163
  br i1 %164, label %193, label %165

165:                                              ; preds = %158
  store float %52, float* %83, align 8
  call void @_ZN13CPWL_EditImpl7RefreshEv(%class.CPWL_EditImpl* %0) #12
  br label %193

166:                                              ; preds = %145
  %167 = fcmp ogt float %86, %129
  br i1 %167, label %168, label %193

168:                                              ; preds = %166
  %169 = fsub float %86, %129
  %170 = fpext float %169 to double
  %171 = fcmp olt double %170, 1.000000e-04
  %172 = fcmp ogt double %170, -1.000000e-04
  %173 = and i1 %171, %172
  br i1 %173, label %193, label %174

174:                                              ; preds = %168
  %175 = fsub float %129, %125
  %176 = fsub float %52, %175
  %177 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 0
  %178 = load i8, i8* %177, align 8, !range !8
  %179 = icmp eq i8 %178, 0
  br i1 %179, label %193, label %180

180:                                              ; preds = %174
  %181 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %4, align 8
  %182 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %181, i64 0, i32 0
  %183 = load i8, i8* %182, align 8, !range !8
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %193, label %185

185:                                              ; preds = %180
  %186 = load float, float* %83, align 8
  %187 = fsub float %186, %176
  %188 = fpext float %187 to double
  %189 = fcmp olt double %188, 1.000000e-04
  %190 = fcmp ogt double %188, -1.000000e-04
  %191 = and i1 %189, %190
  br i1 %191, label %193, label %192

192:                                              ; preds = %185
  store float %176, float* %83, align 8
  call void @_ZN13CPWL_EditImpl7RefreshEv(%class.CPWL_EditImpl* %0) #12
  br label %193

193:                                              ; preds = %192, %185, %180, %174, %165, %158, %153, %149, %168, %116, %166
  %194 = fsub float %131, %127
  %195 = fpext float %194 to double
  %196 = fcmp olt double %195, 1.000000e-04
  %197 = fcmp ogt double %195, -1.000000e-04
  %198 = and i1 %196, %197
  br i1 %198, label %280, label %199

199:                                              ; preds = %193
  %200 = fcmp olt float %121, %127
  %201 = fsub float %121, %127
  %202 = fpext float %201 to double
  br i1 %200, label %203, label %207

203:                                              ; preds = %199
  %204 = fcmp olt double %202, 1.000000e-04
  %205 = fcmp ogt double %202, -1.000000e-04
  %206 = and i1 %204, %205
  br i1 %206, label %207, label %211

207:                                              ; preds = %199, %203
  %208 = fcmp olt double %202, 1.000000e-04
  %209 = fcmp ogt double %202, -1.000000e-04
  %210 = and i1 %208, %209
  br i1 %210, label %211, label %245

211:                                              ; preds = %207, %203
  %212 = fcmp olt float %91, %131
  br i1 %212, label %213, label %280

213:                                              ; preds = %211
  %214 = fsub float %91, %131
  %215 = fpext float %214 to double
  %216 = fcmp olt double %215, 1.000000e-04
  %217 = fcmp ogt double %215, -1.000000e-04
  %218 = and i1 %216, %217
  br i1 %218, label %280, label %219

219:                                              ; preds = %213
  %220 = fadd float %53, %194
  %221 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 0
  %222 = load i8, i8* %221, align 8, !range !8
  %223 = icmp eq i8 %222, 0
  br i1 %223, label %280, label %224

224:                                              ; preds = %219
  %225 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %4, align 8
  %226 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %225, i64 0, i32 0
  %227 = load i8, i8* %226, align 8, !range !8
  %228 = icmp eq i8 %227, 0
  br i1 %228, label %280, label %229

229:                                              ; preds = %224
  %230 = load float, float* %87, align 4
  %231 = fsub float %230, %220
  %232 = fpext float %231 to double
  %233 = fcmp olt double %232, 1.000000e-04
  %234 = fcmp ogt double %232, -1.000000e-04
  %235 = and i1 %233, %234
  br i1 %235, label %280, label %236

236:                                              ; preds = %229
  store float %220, float* %87, align 4
  call void @_ZN13CPWL_EditImpl7RefreshEv(%class.CPWL_EditImpl* %0) #12
  %237 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 8, i32 0
  %238 = load %class.CPWL_Edit*, %class.CPWL_Edit** %237, align 8
  %239 = icmp eq %class.CPWL_Edit* %238, null
  br i1 %239, label %280, label %240

240:                                              ; preds = %236
  %241 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 1
  %242 = load i8, i8* %241, align 1, !range !8
  %243 = icmp eq i8 %242, 0
  br i1 %243, label %244, label %280

244:                                              ; preds = %240
  store i8 1, i8* %241, align 1
  call void @_ZN9CPWL_Edit17SetScrollPositionEf(%class.CPWL_Edit* nonnull %238, float %220) #12
  store i8 0, i8* %241, align 1
  br label %280

245:                                              ; preds = %207
  %246 = fcmp ogt float %91, %131
  br i1 %246, label %247, label %280

247:                                              ; preds = %245
  %248 = fsub float %91, %131
  %249 = fpext float %248 to double
  %250 = fcmp uge double %249, 1.000000e-04
  %251 = fcmp ule double %249, -1.000000e-04
  %252 = or i1 %251, %250
  %253 = fcmp ogt float %121, %127
  %254 = and i1 %253, %252
  br i1 %254, label %255, label %280

255:                                              ; preds = %247
  %256 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 0
  %257 = load i8, i8* %256, align 8, !range !8
  %258 = icmp eq i8 %257, 0
  br i1 %258, label %280, label %259

259:                                              ; preds = %255
  %260 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %4, align 8
  %261 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %260, i64 0, i32 0
  %262 = load i8, i8* %261, align 8, !range !8
  %263 = icmp eq i8 %262, 0
  br i1 %263, label %280, label %264

264:                                              ; preds = %259
  %265 = load float, float* %87, align 4
  %266 = fsub float %265, %51
  %267 = fpext float %266 to double
  %268 = fcmp olt double %267, 1.000000e-04
  %269 = fcmp ogt double %267, -1.000000e-04
  %270 = and i1 %268, %269
  br i1 %270, label %280, label %271

271:                                              ; preds = %264
  store float %51, float* %87, align 4
  call void @_ZN13CPWL_EditImpl7RefreshEv(%class.CPWL_EditImpl* %0) #12
  %272 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 8, i32 0
  %273 = load %class.CPWL_Edit*, %class.CPWL_Edit** %272, align 8
  %274 = icmp eq %class.CPWL_Edit* %273, null
  br i1 %274, label %280, label %275

275:                                              ; preds = %271
  %276 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 1
  %277 = load i8, i8* %276, align 1, !range !8
  %278 = icmp eq i8 %277, 0
  br i1 %278, label %279, label %280

279:                                              ; preds = %275
  store i8 1, i8* %276, align 1
  call void @_ZN9CPWL_Edit17SetScrollPositionEf(%class.CPWL_Edit* nonnull %273, float %51) #12
  store i8 0, i8* %276, align 1
  br label %280

280:                                              ; preds = %247, %279, %275, %271, %264, %259, %255, %244, %240, %236, %229, %224, %219, %213, %193, %211, %245
  call void @llvm.lifetime.end.p0i8(i64 44, i8* nonnull %20) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %12) #12
  br label %281

281:                                              ; preds = %1, %280
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK13CPWL_EditImpl11SelectState7IsEmptyEv(%"class.CPWL_EditImpl::SelectState"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.CPWL_EditImpl::SelectState", %"class.CPWL_EditImpl::SelectState"* %0, i64 0, i32 1, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds %"class.CPWL_EditImpl::SelectState", %"class.CPWL_EditImpl::SelectState"* %0, i64 0, i32 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %3, %5
  br i1 %6, label %7, label %19

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.CPWL_EditImpl::SelectState", %"class.CPWL_EditImpl::SelectState"* %0, i64 0, i32 1, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %"class.CPWL_EditImpl::SelectState", %"class.CPWL_EditImpl::SelectState"* %0, i64 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %9, %11
  br i1 %12, label %13, label %19

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.CPWL_EditImpl::SelectState", %"class.CPWL_EditImpl::SelectState"* %0, i64 0, i32 1, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"class.CPWL_EditImpl::SelectState", %"class.CPWL_EditImpl::SelectState"* %0, i64 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %15, %17
  br label %19

19:                                               ; preds = %1, %7, %13
  %20 = phi i1 [ false, %7 ], [ false, %1 ], [ %18, %13 ]
  ret i1 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl7RefreshEv(%class.CPWL_EditImpl*) local_unnamed_addr #2 align 2 {
  %2 = alloca %struct.CPVT_WordRange, align 4
  %3 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 3
  %4 = load i8, i8* %3, align 1, !range !8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %103, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %8 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %7, align 8
  %9 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %8, i64 0, i32 0
  %10 = load i8, i8* %9, align 8, !range !8
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %103, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 15
  %14 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 15, i32 1
  %15 = getelementptr inbounds %"class.std::__1::vector.63", %"class.std::__1::vector.63"* %14, i64 0, i32 0, i32 0
  %16 = load %"struct.CPWL_EditImpl::RefreshState::LineRect"*, %"struct.CPWL_EditImpl::RefreshState::LineRect"** %15, align 8
  %17 = icmp eq %"struct.CPWL_EditImpl::RefreshState::LineRect"* %16, null
  br i1 %17, label %24, label %18

18:                                               ; preds = %12
  %19 = ptrtoint %"struct.CPWL_EditImpl::RefreshState::LineRect"* %16 to i64
  %20 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 15, i32 1, i32 0, i32 1
  %21 = bitcast %"struct.CPWL_EditImpl::RefreshState::LineRect"** %20 to i64*
  store i64 %19, i64* %21, align 8
  %22 = bitcast %"struct.CPWL_EditImpl::RefreshState::LineRect"* %16 to i8*
  tail call void @_ZdlPv(i8* %22) #13
  %23 = bitcast %"class.std::__1::vector.63"* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 24, i1 false) #12
  br label %24

24:                                               ; preds = %12, %18
  %25 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 15, i32 0, i32 0, i32 1
  %26 = bitcast %"class.CPWL_EditImpl::RefreshState"* %13 to <2 x i64>*
  %27 = load <2 x i64>, <2 x i64>* %26, align 8
  %28 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 15, i32 1, i32 0, i32 1
  %29 = bitcast %"class.std::__1::vector.63"* %14 to <2 x i64>*
  store <2 x i64> %27, <2 x i64>* %29, align 8
  %30 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 15, i32 0, i32 0, i32 2, i32 0, i32 0
  %31 = bitcast %"struct.CPWL_EditImpl::RefreshState::LineRect"** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 15, i32 1, i32 0, i32 2, i32 0, i32 0
  %34 = bitcast %"struct.CPWL_EditImpl::RefreshState::LineRect"** %33 to i64*
  store i64 %32, i64* %34, align 8
  %35 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 15, i32 2
  %36 = bitcast %"class.std::__1::vector.70"* %35 to i64*
  %37 = bitcast %"class.CPWL_EditImpl::RefreshState"* %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 24, i1 false) #12
  %38 = load i64, i64* %36, align 8
  %39 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 15, i32 2, i32 0, i32 1
  %40 = bitcast %class.CFX_FloatRect** %39 to i64*
  store i64 %38, i64* %40, align 8
  %41 = bitcast %struct.CPVT_WordRange* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #12
  call void @_ZNK13CPWL_EditImpl19GetVisibleWordRangeEv(%struct.CPVT_WordRange* nonnull sret %2, %class.CPWL_EditImpl* %0)
  call void @_ZN13CPWL_EditImpl20RefreshPushLineRectsERK14CPVT_WordRange(%class.CPWL_EditImpl* %0, %struct.CPVT_WordRange* nonnull dereferenceable(24) %2)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #12
  %42 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 15, i32 1, i32 0, i32 0
  %43 = load %"struct.CPWL_EditImpl::RefreshState::LineRect"*, %"struct.CPWL_EditImpl::RefreshState::LineRect"** %42, align 8
  %44 = load %"struct.CPWL_EditImpl::RefreshState::LineRect"*, %"struct.CPWL_EditImpl::RefreshState::LineRect"** %28, align 8
  %45 = icmp eq %"struct.CPWL_EditImpl::RefreshState::LineRect"* %43, %44
  br i1 %45, label %46, label %51

46:                                               ; preds = %51, %24
  %47 = getelementptr inbounds %"class.CPWL_EditImpl::RefreshState", %"class.CPWL_EditImpl::RefreshState"* %13, i64 0, i32 0, i32 0, i32 0
  %48 = load %"struct.CPWL_EditImpl::RefreshState::LineRect"*, %"struct.CPWL_EditImpl::RefreshState::LineRect"** %47, align 8
  %49 = load %"struct.CPWL_EditImpl::RefreshState::LineRect"*, %"struct.CPWL_EditImpl::RefreshState::LineRect"** %25, align 8
  %50 = icmp eq %"struct.CPWL_EditImpl::RefreshState::LineRect"* %48, %49
  br i1 %50, label %61, label %56

51:                                               ; preds = %24, %51
  %52 = phi %"struct.CPWL_EditImpl::RefreshState::LineRect"* [ %54, %51 ], [ %43, %24 ]
  %53 = getelementptr inbounds %"struct.CPWL_EditImpl::RefreshState::LineRect", %"struct.CPWL_EditImpl::RefreshState::LineRect"* %52, i64 0, i32 1
  tail call void @_ZN13CPWL_EditImpl12RefreshState3AddERK13CFX_FloatRect(%"class.CPWL_EditImpl::RefreshState"* %13, %class.CFX_FloatRect* dereferenceable(16) %53) #12
  %54 = getelementptr inbounds %"struct.CPWL_EditImpl::RefreshState::LineRect", %"struct.CPWL_EditImpl::RefreshState::LineRect"* %52, i64 1
  %55 = icmp eq %"struct.CPWL_EditImpl::RefreshState::LineRect"* %54, %44
  br i1 %55, label %46, label %51

56:                                               ; preds = %46, %56
  %57 = phi %"struct.CPWL_EditImpl::RefreshState::LineRect"* [ %59, %56 ], [ %48, %46 ]
  %58 = getelementptr inbounds %"struct.CPWL_EditImpl::RefreshState::LineRect", %"struct.CPWL_EditImpl::RefreshState::LineRect"* %57, i64 0, i32 1
  tail call void @_ZN13CPWL_EditImpl12RefreshState3AddERK13CFX_FloatRect(%"class.CPWL_EditImpl::RefreshState"* %13, %class.CFX_FloatRect* dereferenceable(16) %58) #12
  %59 = getelementptr inbounds %"struct.CPWL_EditImpl::RefreshState::LineRect", %"struct.CPWL_EditImpl::RefreshState::LineRect"* %57, i64 1
  %60 = icmp eq %"struct.CPWL_EditImpl::RefreshState::LineRect"* %59, %49
  br i1 %60, label %61, label %56

61:                                               ; preds = %56, %46
  %62 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 12
  %63 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 13
  %64 = bitcast %class.CFX_PTemplate* %62 to i32*
  %65 = load i32, i32* %64, align 4
  %66 = bitcast %class.CFX_PTemplate* %63 to i32*
  store i32 %65, i32* %66, align 4
  %67 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 12, i32 1
  %68 = bitcast float* %67 to i32*
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 13, i32 1
  %71 = bitcast float* %70 to i32*
  store i32 %69, i32* %71, align 4
  %72 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 8, i32 0
  %73 = load %class.CPWL_Edit*, %class.CPWL_Edit** %72, align 8
  %74 = icmp eq %class.CPWL_Edit* %73, null
  %75 = bitcast %class.CPWL_Edit* %73 to %class.CPWL_Wnd*
  br i1 %74, label %101, label %76

76:                                               ; preds = %61
  %77 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 1
  %78 = load i8, i8* %77, align 1, !range !8
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %80, label %101

80:                                               ; preds = %76
  store i8 1, i8* %77, align 1
  %81 = icmp eq %"class.std::__1::vector.70"* %35, null
  br i1 %81, label %98, label %82

82:                                               ; preds = %80
  %83 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %35, i64 0, i32 0, i32 0
  %84 = load %class.CFX_FloatRect*, %class.CFX_FloatRect** %83, align 8
  %85 = load %class.CFX_FloatRect*, %class.CFX_FloatRect** %39, align 8
  %86 = icmp eq %class.CFX_FloatRect* %84, %85
  br i1 %86, label %98, label %87

87:                                               ; preds = %82
  %88 = bitcast %class.CPWL_Edit** %72 to %class.CPWL_Wnd**
  %89 = tail call zeroext i1 @_ZN8CPWL_Wnd14InvalidateRectEPK13CFX_FloatRect(%class.CPWL_Wnd* nonnull %75, %class.CFX_FloatRect* %84) #12
  %90 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %84, i64 1
  %91 = icmp eq %class.CFX_FloatRect* %90, %85
  br i1 %91, label %98, label %92

92:                                               ; preds = %87, %92
  %93 = phi %class.CFX_FloatRect* [ %96, %92 ], [ %90, %87 ]
  %94 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %88, align 8
  %95 = tail call zeroext i1 @_ZN8CPWL_Wnd14InvalidateRectEPK13CFX_FloatRect(%class.CPWL_Wnd* %94, %class.CFX_FloatRect* %93) #12
  %96 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %93, i64 1
  %97 = icmp eq %class.CFX_FloatRect* %96, %85
  br i1 %97, label %98, label %92

98:                                               ; preds = %92, %87, %82, %80
  %99 = icmp eq i8* %77, null
  br i1 %99, label %101, label %100

100:                                              ; preds = %98
  store i8 0, i8* %77, align 1
  br label %101

101:                                              ; preds = %61, %100, %98, %76
  %102 = load i64, i64* %36, align 8
  store i64 %102, i64* %40, align 8
  br label %103

103:                                              ; preds = %6, %1, %101
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl12SetCaretInfoEv(%class.CPWL_EditImpl*) local_unnamed_addr #2 align 2 {
  %2 = alloca %class.CPVT_Word, align 16
  %3 = alloca %class.CPVT_Line, align 4
  %4 = alloca %class.CFX_PTemplate, align 4
  %5 = alloca %class.CFX_PTemplate, align 4
  %6 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 8, i32 0
  %7 = load %class.CPWL_Edit*, %class.CPWL_Edit** %6, align 8
  %8 = icmp eq %class.CPWL_Edit* %7, null
  br i1 %8, label %164, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 1
  %11 = load i8, i8* %10, align 1, !range !8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %164

13:                                               ; preds = %9
  %14 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %15 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %14, align 8
  %16 = tail call %"class.CPVT_VariableText::Iterator"* @_ZN17CPVT_VariableText11GetIteratorEv(%class.CPVT_VariableText* %15) #12
  %17 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9
  tail call void @_ZN17CPVT_VariableText8Iterator5SetAtERK14CPVT_WordPlace(%"class.CPVT_VariableText::Iterator"* %16, %struct.CPVT_WordPlace* dereferenceable(12) %17) #12
  %18 = bitcast %class.CPVT_Word* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %18) #12
  %19 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %2, i64 0, i32 0
  %20 = bitcast %class.CPVT_Word* %2 to <4 x i32>*
  store <4 x i32> <i32 -1431655766, i32 0, i32 -1, i32 -1>, <4 x i32>* %20, align 16
  store i16 0, i16* %19, align 16
  %21 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %2, i64 0, i32 2, i32 2
  store i32 -1, i32* %21, align 8
  %22 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %2, i64 0, i32 3, i32 0
  %23 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %2, i64 0, i32 7
  %24 = bitcast float* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %24, i8 0, i64 20, i1 false) #12
  store i32 -1, i32* %23, align 8
  %25 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %2, i64 0, i32 8
  store float 0.000000e+00, float* %25, align 4
  %26 = bitcast %class.CPVT_Line* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 44, i8* nonnull %26) #12
  %27 = getelementptr inbounds %class.CPVT_Line, %class.CPVT_Line* %3, i64 0, i32 2, i32 0
  %28 = getelementptr inbounds %class.CPVT_Line, %class.CPVT_Line* %3, i64 0, i32 2, i32 1
  %29 = getelementptr inbounds %class.CPVT_Line, %class.CPVT_Line* %3, i64 0, i32 4
  %30 = getelementptr inbounds %class.CPVT_Line, %class.CPVT_Line* %3, i64 0, i32 5
  %31 = bitcast float* %27 to i8*
  %32 = bitcast %class.CPVT_Line* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %32, i8 -1, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* align 4 %31, i8 0, i64 20, i1 false) #12
  %33 = call zeroext i1 @_ZNK17CPVT_VariableText8Iterator7GetWordER9CPVT_Word(%"class.CPVT_VariableText::Iterator"* %16, %class.CPVT_Word* nonnull dereferenceable(48) %2) #12
  br i1 %33, label %34, label %47

34:                                               ; preds = %13
  %35 = load float, float* %22, align 4
  %36 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %2, i64 0, i32 6
  %37 = load float, float* %36, align 4
  %38 = fadd float %35, %37
  %39 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %2, i64 0, i32 3, i32 1
  %40 = load float, float* %39, align 4
  %41 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %2, i64 0, i32 4
  %42 = load float, float* %41, align 4
  %43 = fadd float %40, %42
  %44 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %2, i64 0, i32 5
  %45 = load float, float* %44, align 16
  %46 = fadd float %40, %45
  br label %56

47:                                               ; preds = %13
  %48 = call zeroext i1 @_ZNK17CPVT_VariableText8Iterator7GetLineER9CPVT_Line(%"class.CPVT_VariableText::Iterator"* %16, %class.CPVT_Line* nonnull dereferenceable(44) %3) #12
  br i1 %48, label %49, label %56

49:                                               ; preds = %47
  %50 = load float, float* %27, align 4
  %51 = load float, float* %28, align 4
  %52 = load float, float* %29, align 4
  %53 = fadd float %51, %52
  %54 = load float, float* %30, align 4
  %55 = fadd float %51, %54
  br label %56

56:                                               ; preds = %47, %49, %34
  %57 = phi float [ %38, %34 ], [ %50, %49 ], [ 0.000000e+00, %47 ]
  %58 = phi float [ %46, %34 ], [ %55, %49 ], [ 0.000000e+00, %47 ]
  %59 = phi float [ %43, %34 ], [ %53, %49 ], [ 0.000000e+00, %47 ]
  %60 = load i8, i8* %10, align 1, !range !8
  store i8 1, i8* %10, align 1
  %61 = load %class.CPWL_Edit*, %class.CPWL_Edit** %6, align 8
  %62 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %63, %65
  br i1 %66, label %67, label %79

67:                                               ; preds = %56
  %68 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 1
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 0, i32 1
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %69, %71
  br i1 %72, label %73, label %79

73:                                               ; preds = %67
  %74 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 2
  %75 = load i32, i32* %74, align 4
  %76 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 0, i32 2
  %77 = load i32, i32* %76, align 4
  %78 = icmp eq i32 %75, %77
  br label %79

79:                                               ; preds = %56, %67, %73
  %80 = phi i1 [ false, %67 ], [ false, %56 ], [ %78, %73 ]
  %81 = bitcast %class.CFX_PTemplate* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %81) #12
  %82 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %14, align 8, !noalias !36
  %83 = call { <2 x float>, <2 x float> } @_ZNK17CPVT_VariableText14GetContentRectEv(%class.CPVT_VariableText* %82) #12, !noalias !36
  %84 = extractvalue { <2 x float>, <2 x float> } %83, 0
  %85 = extractvalue { <2 x float>, <2 x float> } %83, 1
  %86 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %14, align 8, !noalias !36
  %87 = call dereferenceable(16) %class.CFX_FloatRect* @_ZNK17CPVT_VariableText12GetPlateRectEv(%class.CPVT_VariableText* %86) #12, !noalias !36
  %88 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %87, i64 0, i32 0
  %89 = load float, float* %88, align 4, !noalias !36
  %90 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %87, i64 0, i32 1
  %91 = load float, float* %90, align 4, !noalias !36
  %92 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %87, i64 0, i32 3
  %93 = load float, float* %92, align 4, !noalias !36
  %94 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 5
  %95 = load i32, i32* %94, align 8, !noalias !36
  switch i32 %95, label %109 [
    i32 2, label %103
    i32 1, label %96
  ]

96:                                               ; preds = %79
  %97 = fsub float %93, %91
  %98 = extractelement <2 x float> %85, i32 1
  %99 = extractelement <2 x float> %84, i32 1
  %100 = fsub float %98, %99
  %101 = fsub float %97, %100
  %102 = fmul float %101, 5.000000e-01
  br label %109

103:                                              ; preds = %79
  %104 = fsub float %93, %91
  %105 = extractelement <2 x float> %85, i32 1
  %106 = extractelement <2 x float> %84, i32 1
  %107 = fsub float %105, %106
  %108 = fsub float %104, %107
  br label %109

109:                                              ; preds = %79, %96, %103
  %110 = phi float [ %108, %103 ], [ %102, %96 ], [ 0.000000e+00, %79 ]
  %111 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 12, i32 0
  %112 = load float, float* %111, align 8, !noalias !36
  %113 = fsub float %112, %89
  %114 = fsub float %57, %113
  %115 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 12, i32 1
  %116 = load float, float* %115, align 4, !noalias !36
  %117 = fadd float %110, %116
  %118 = fsub float %117, %93
  %119 = fsub float %59, %118
  %120 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %4, i64 0, i32 0
  store float %114, float* %120, align 4, !alias.scope !36
  %121 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %4, i64 0, i32 1
  store float %119, float* %121, align 4, !alias.scope !36
  %122 = bitcast %class.CFX_PTemplate* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %122) #12
  %123 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %14, align 8, !noalias !39
  %124 = call { <2 x float>, <2 x float> } @_ZNK17CPVT_VariableText14GetContentRectEv(%class.CPVT_VariableText* %123) #12, !noalias !39
  %125 = extractvalue { <2 x float>, <2 x float> } %124, 0
  %126 = extractvalue { <2 x float>, <2 x float> } %124, 1
  %127 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %14, align 8, !noalias !39
  %128 = call dereferenceable(16) %class.CFX_FloatRect* @_ZNK17CPVT_VariableText12GetPlateRectEv(%class.CPVT_VariableText* %127) #12, !noalias !39
  %129 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %128, i64 0, i32 0
  %130 = load float, float* %129, align 4, !noalias !39
  %131 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %128, i64 0, i32 1
  %132 = load float, float* %131, align 4, !noalias !39
  %133 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %128, i64 0, i32 3
  %134 = load float, float* %133, align 4, !noalias !39
  %135 = load i32, i32* %94, align 8, !noalias !39
  switch i32 %135, label %149 [
    i32 2, label %143
    i32 1, label %136
  ]

136:                                              ; preds = %109
  %137 = fsub float %134, %132
  %138 = extractelement <2 x float> %126, i32 1
  %139 = extractelement <2 x float> %125, i32 1
  %140 = fsub float %138, %139
  %141 = fsub float %137, %140
  %142 = fmul float %141, 5.000000e-01
  br label %149

143:                                              ; preds = %109
  %144 = fsub float %134, %132
  %145 = extractelement <2 x float> %126, i32 1
  %146 = extractelement <2 x float> %125, i32 1
  %147 = fsub float %145, %146
  %148 = fsub float %144, %147
  br label %149

149:                                              ; preds = %109, %136, %143
  %150 = phi float [ %148, %143 ], [ %142, %136 ], [ 0.000000e+00, %109 ]
  %151 = load float, float* %111, align 8, !noalias !39
  %152 = fsub float %151, %130
  %153 = fsub float %57, %152
  %154 = load float, float* %115, align 4, !noalias !39
  %155 = fadd float %150, %154
  %156 = fsub float %155, %134
  %157 = fsub float %58, %156
  %158 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %5, i64 0, i32 0
  store float %153, float* %158, align 4, !alias.scope !39
  %159 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %5, i64 0, i32 1
  store float %157, float* %159, align 4, !alias.scope !39
  %160 = call zeroext i1 @_ZN9CPWL_Edit8SetCaretEbRK13CFX_PTemplateIfES3_(%class.CPWL_Edit* %61, i1 zeroext %80, %class.CFX_PTemplate* nonnull dereferenceable(8) %4, %class.CFX_PTemplate* nonnull dereferenceable(8) %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %122) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %81) #12
  %161 = icmp eq i8* %10, null
  br i1 %161, label %163, label %162

162:                                              ; preds = %149
  store i8 %60, i8* %10, align 1
  br label %163

163:                                              ; preds = %149, %162
  call void @llvm.lifetime.end.p0i8(i64 44, i8* nonnull %26) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %18) #12
  br label %164

164:                                              ; preds = %1, %9, %163
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK13CPWL_EditImpl12GetSelectionEv(%class.CPWL_EditImpl*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %3 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %2, align 8
  %4 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %3, i64 0, i32 0
  %5 = load i8, i8* %4, align 8, !range !8
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %61, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11
  %9 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.CPWL_EditImpl::SelectState", %"class.CPWL_EditImpl::SelectState"* %8, i64 0, i32 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %14, label %28

14:                                               ; preds = %7
  %15 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %16, %18
  br i1 %19, label %20, label %32

20:                                               ; preds = %14
  %21 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %22, %24
  br i1 %25, label %26, label %32

26:                                               ; preds = %20
  %27 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9
  br label %51

28:                                               ; preds = %7
  %29 = getelementptr inbounds %"class.CPWL_EditImpl::SelectState", %"class.CPWL_EditImpl::SelectState"* %8, i64 0, i32 0
  %30 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1
  %31 = icmp slt i32 %12, %10
  br i1 %31, label %51, label %48

32:                                               ; preds = %14, %20
  %33 = getelementptr inbounds %"class.CPWL_EditImpl::SelectState", %"class.CPWL_EditImpl::SelectState"* %8, i64 0, i32 0
  %34 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1
  %35 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %36, %38
  br i1 %39, label %42, label %40

40:                                               ; preds = %32
  %41 = icmp slt i32 %36, %38
  br i1 %41, label %51, label %48

42:                                               ; preds = %32
  %43 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = icmp slt i32 %44, %46
  br i1 %47, label %51, label %48

48:                                               ; preds = %40, %28, %42
  %49 = phi %struct.CPVT_WordPlace* [ %34, %40 ], [ %30, %28 ], [ %34, %42 ]
  %50 = phi %struct.CPVT_WordPlace* [ %33, %40 ], [ %29, %28 ], [ %33, %42 ]
  br label %51

51:                                               ; preds = %42, %28, %40, %26, %48
  %52 = phi %struct.CPVT_WordPlace* [ %49, %48 ], [ %27, %26 ], [ %33, %40 ], [ %29, %28 ], [ %33, %42 ]
  %53 = phi %struct.CPVT_WordPlace* [ %50, %48 ], [ %27, %26 ], [ %34, %40 ], [ %30, %28 ], [ %34, %42 ]
  %54 = tail call i32 @_ZNK17CPVT_VariableText20WordPlaceToWordIndexERK14CPVT_WordPlace(%class.CPVT_VariableText* %3, %struct.CPVT_WordPlace* dereferenceable(12) %52) #12
  %55 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %2, align 8
  %56 = tail call i32 @_ZNK17CPVT_VariableText20WordPlaceToWordIndexERK14CPVT_WordPlace(%class.CPVT_VariableText* %55, %struct.CPVT_WordPlace* dereferenceable(12) %53) #12
  %57 = zext i32 %56 to i64
  %58 = shl nuw i64 %57, 32
  %59 = zext i32 %54 to i64
  %60 = or i64 %58, %59
  br label %61

61:                                               ; preds = %51, %1
  %62 = phi i64 [ -1, %1 ], [ %60, %51 ]
  ret i64 %62
}

declare i32 @_ZNK17CPVT_VariableText20WordPlaceToWordIndexERK14CPVT_WordPlace(%class.CPVT_VariableText*, %struct.CPVT_WordPlace* dereferenceable(12)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK13CPWL_EditImpl8GetCaretEv(%class.CPWL_EditImpl*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %3 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %2, align 8
  %4 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %3, i64 0, i32 0
  %5 = load i8, i8* %4, align 8, !range !8
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9
  %9 = tail call i32 @_ZNK17CPVT_VariableText20WordPlaceToWordIndexERK14CPVT_WordPlace(%class.CPVT_VariableText* %3, %struct.CPVT_WordPlace* dereferenceable(12) %8) #12
  br label %10

10:                                               ; preds = %1, %7
  %11 = phi i32 [ %9, %7 ], [ -1, %1 ]
  ret i32 %11
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { i64, i32 } @_ZNK13CPWL_EditImpl17GetCaretWordPlaceEv(%class.CPWL_EditImpl* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9
  %3 = bitcast %struct.CPVT_WordPlace* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = insertvalue { i64, i32 } undef, i64 %4, 0
  %8 = insertvalue { i64, i32 } %7, i32 %6, 1
  ret { i64, i32 } %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK13CPWL_EditImpl7GetTextEv(%"class.fxcrt::WideString"* noalias sret, %class.CPWL_EditImpl* nocapture readonly) local_unnamed_addr #2 align 2 {
  %3 = alloca %class.CPVT_Word, align 16
  %4 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate.219"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate.219"*), %"class.fxcrt::StringDataTemplate.219"** %4, align 8
  tail call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* %0) #12
  %5 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %1, i64 0, i32 7, i32 0, i32 0, i32 0
  %6 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %5, align 8
  %7 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %6, i64 0, i32 0
  %8 = load i8, i8* %7, align 8, !range !8
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %38, label %10

10:                                               ; preds = %2
  %11 = tail call %"class.CPVT_VariableText::Iterator"* @_ZN17CPVT_VariableText11GetIteratorEv(%class.CPVT_VariableText* %6) #12
  tail call void @_ZN17CPVT_VariableText8Iterator5SetAtEi(%"class.CPVT_VariableText::Iterator"* %11, i32 0) #12
  %12 = bitcast %class.CPVT_Word* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %12) #12
  %13 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %3, i64 0, i32 0
  %14 = bitcast %class.CPVT_Word* %3 to <4 x i32>*
  store <4 x i32> <i32 -1431655766, i32 0, i32 -1, i32 -1>, <4 x i32>* %14, align 16
  store i16 0, i16* %13, align 16
  %15 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %3, i64 0, i32 2, i32 2
  store i32 -1, i32* %15, align 8
  %16 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %3, i64 0, i32 3, i32 0
  %17 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %3, i64 0, i32 7
  %18 = bitcast float* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %18, i8 0, i64 20, i1 false) #12
  store i32 -1, i32* %17, align 8
  %19 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %3, i64 0, i32 8
  store float 0.000000e+00, float* %19, align 4
  %20 = getelementptr inbounds %"class.CPVT_VariableText::Iterator", %"class.CPVT_VariableText::Iterator"* %11, i64 0, i32 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = call zeroext i1 @_ZN17CPVT_VariableText8Iterator8NextWordEv(%"class.CPVT_VariableText::Iterator"* %11) #12
  br i1 %22, label %23, label %37

23:                                               ; preds = %10, %35
  %24 = phi i32 [ %25, %35 ], [ %21, %10 ]
  %25 = load i32, i32* %20, align 4
  %26 = call zeroext i1 @_ZNK17CPVT_VariableText8Iterator7GetWordER9CPVT_Word(%"class.CPVT_VariableText::Iterator"* %11, %class.CPVT_Word* nonnull dereferenceable(48) %3) #12
  br i1 %26, label %27, label %31

27:                                               ; preds = %23
  %28 = load i16, i16* %13, align 16
  %29 = zext i16 %28 to i32
  %30 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* %0, i32 signext %29) #12
  br label %31

31:                                               ; preds = %27, %23
  %32 = icmp eq i32 %24, %25
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEPKw(%"class.fxcrt::WideString"* %0, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @.str.1, i64 0, i64 0)) #12
  br label %35

35:                                               ; preds = %31, %33
  %36 = call zeroext i1 @_ZN17CPVT_VariableText8Iterator8NextWordEv(%"class.CPVT_VariableText::Iterator"* %11) #12
  br i1 %36, label %23, label %37

37:                                               ; preds = %35, %10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %12) #12
  br label %38

38:                                               ; preds = %2, %37
  ret void
}

declare void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"*) unnamed_addr #3

declare dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"*, i32 signext) local_unnamed_addr #3

declare dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEPKw(%"class.fxcrt::WideString"*, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK13CPWL_EditImpl12GetRangeTextERK14CPVT_WordRange(%"class.fxcrt::WideString"* noalias sret, %class.CPWL_EditImpl* nocapture readonly, %struct.CPVT_WordRange* nocapture readonly dereferenceable(24)) local_unnamed_addr #2 align 2 {
  %4 = alloca %struct.CPVT_WordRange, align 4
  %5 = alloca %class.CPVT_Word, align 16
  %6 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate.219"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate.219"*), %"class.fxcrt::StringDataTemplate.219"** %6, align 8
  tail call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* %0) #12
  %7 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %1, i64 0, i32 7, i32 0, i32 0, i32 0
  %8 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %7, align 8
  %9 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %8, i64 0, i32 0
  %10 = load i8, i8* %9, align 8, !range !8
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %68, label %12

12:                                               ; preds = %3
  %13 = tail call %"class.CPVT_VariableText::Iterator"* @_ZN17CPVT_VariableText11GetIteratorEv(%class.CPVT_VariableText* %8) #12
  %14 = bitcast %struct.CPVT_WordRange* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #12
  %15 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %4, i64 0, i32 0
  %16 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %4, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %4, i64 0, i32 1
  %18 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %17, i64 0, i32 0
  %19 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %4, i64 0, i32 1, i32 1
  %20 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %4, i64 0, i32 1, i32 2
  %21 = bitcast %struct.CPVT_WordRange* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %14, i8* align 4 %21, i64 24, i1 false)
  %22 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %7, align 8
  call void @_ZNK17CPVT_VariableText15UpdateWordPlaceER14CPVT_WordPlace(%class.CPVT_VariableText* %22, %struct.CPVT_WordPlace* nonnull dereferenceable(12) %15) #12
  %23 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %7, align 8
  call void @_ZNK17CPVT_VariableText15UpdateWordPlaceER14CPVT_WordPlace(%class.CPVT_VariableText* %23, %struct.CPVT_WordPlace* dereferenceable(12) %17) #12
  call void @_ZN17CPVT_VariableText8Iterator5SetAtERK14CPVT_WordPlace(%"class.CPVT_VariableText::Iterator"* %13, %struct.CPVT_WordPlace* nonnull dereferenceable(12) %15) #12
  %24 = bitcast %class.CPVT_Word* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %24) #12
  %25 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %5, i64 0, i32 0
  %26 = bitcast %class.CPVT_Word* %5 to <4 x i32>*
  store <4 x i32> <i32 -1431655766, i32 0, i32 -1, i32 -1>, <4 x i32>* %26, align 16
  store i16 0, i16* %25, align 16
  %27 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %5, i64 0, i32 2, i32 2
  store i32 -1, i32* %27, align 8
  %28 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %5, i64 0, i32 3, i32 0
  %29 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %5, i64 0, i32 7
  %30 = bitcast float* %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %30, i8 0, i64 20, i1 false) #12
  store i32 -1, i32* %29, align 8
  %31 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %5, i64 0, i32 8
  store float 0.000000e+00, float* %31, align 4
  %32 = load i32, i32* %16, align 4
  %33 = call zeroext i1 @_ZN17CPVT_VariableText8Iterator8NextWordEv(%"class.CPVT_VariableText::Iterator"* %13) #12
  br i1 %33, label %34, label %67

34:                                               ; preds = %12
  %35 = getelementptr inbounds %"class.CPVT_VariableText::Iterator", %"class.CPVT_VariableText::Iterator"* %13, i64 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.CPVT_VariableText::Iterator", %"class.CPVT_VariableText::Iterator"* %13, i64 0, i32 0, i32 1
  %37 = getelementptr inbounds %"class.CPVT_VariableText::Iterator", %"class.CPVT_VariableText::Iterator"* %13, i64 0, i32 0, i32 2
  br label %38

38:                                               ; preds = %34, %65
  %39 = phi i32 [ %32, %34 ], [ %40, %65 ]
  %40 = load i32, i32* %35, align 4
  %41 = load i32, i32* %36, align 4
  %42 = load i32, i32* %37, align 4
  %43 = load i32, i32* %18, align 4
  %44 = icmp eq i32 %40, %43
  br i1 %44, label %47, label %45

45:                                               ; preds = %38
  %46 = icmp sgt i32 %40, %43
  br i1 %46, label %67, label %55

47:                                               ; preds = %38
  %48 = load i32, i32* %19, align 4
  %49 = icmp eq i32 %41, %48
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  %51 = icmp sgt i32 %41, %48
  br i1 %51, label %67, label %55

52:                                               ; preds = %47
  %53 = load i32, i32* %20, align 4
  %54 = icmp sgt i32 %42, %53
  br i1 %54, label %67, label %55

55:                                               ; preds = %50, %45, %52
  %56 = call zeroext i1 @_ZNK17CPVT_VariableText8Iterator7GetWordER9CPVT_Word(%"class.CPVT_VariableText::Iterator"* %13, %class.CPVT_Word* nonnull dereferenceable(48) %5) #12
  br i1 %56, label %57, label %61

57:                                               ; preds = %55
  %58 = load i16, i16* %25, align 16
  %59 = zext i16 %58 to i32
  %60 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* %0, i32 signext %59) #12
  br label %61

61:                                               ; preds = %57, %55
  %62 = icmp eq i32 %39, %40
  br i1 %62, label %65, label %63

63:                                               ; preds = %61
  %64 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEPKw(%"class.fxcrt::WideString"* %0, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @.str.1, i64 0, i64 0)) #12
  br label %65

65:                                               ; preds = %63, %61
  %66 = call zeroext i1 @_ZN17CPVT_VariableText8Iterator8NextWordEv(%"class.CPVT_VariableText::Iterator"* %13) #12
  br i1 %66, label %38, label %67

67:                                               ; preds = %65, %52, %45, %50, %12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %24) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #12
  br label %68

68:                                               ; preds = %3, %67
  ret void
}

declare void @_ZNK17CPVT_VariableText15UpdateWordPlaceER14CPVT_WordPlace(%class.CPVT_VariableText*, %struct.CPVT_WordPlace* dereferenceable(12)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK13CPWL_EditImpl15GetSelectedTextEv(%"class.fxcrt::WideString"* noalias sret, %class.CPWL_EditImpl* nocapture readonly) local_unnamed_addr #2 align 2 {
  %3 = alloca %struct.CPVT_WordRange, align 4
  %4 = bitcast %struct.CPVT_WordRange* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #12
  %5 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %1, i64 0, i32 11
  %6 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %1, i64 0, i32 11, i32 1
  %7 = bitcast %"class.CPWL_EditImpl::SelectState"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %4, i8* align 4 %7, i64 12, i1 false) #12
  %8 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %3, i64 0, i32 1
  %9 = bitcast %struct.CPVT_WordPlace* %8 to i8*
  %10 = bitcast %struct.CPVT_WordPlace* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 4 %10, i64 12, i1 false) #12
  %11 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %3, i64 0, i32 0, i32 0
  %12 = load i32, i32* %11, align 4, !alias.scope !42
  %13 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %8, i64 0, i32 0
  %14 = load i32, i32* %13, align 4, !alias.scope !42
  %15 = icmp eq i32 %12, %14
  br i1 %15, label %21, label %16

16:                                               ; preds = %2
  %17 = icmp sgt i32 %12, %14
  br i1 %17, label %18, label %41

18:                                               ; preds = %16
  %19 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %3, i64 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 4, !alias.scope !42
  br label %35

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %3, i64 0, i32 0, i32 1
  %23 = load i32, i32* %22, align 4, !alias.scope !42
  %24 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %3, i64 0, i32 1, i32 1
  %25 = load i32, i32* %24, align 4, !alias.scope !42
  %26 = icmp eq i32 %23, %25
  br i1 %26, label %29, label %27

27:                                               ; preds = %21
  %28 = icmp sgt i32 %23, %25
  br i1 %28, label %35, label %41

29:                                               ; preds = %21
  %30 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %3, i64 0, i32 0, i32 2
  %31 = load i32, i32* %30, align 4, !alias.scope !42
  %32 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %3, i64 0, i32 1, i32 2
  %33 = load i32, i32* %32, align 4, !alias.scope !42
  %34 = icmp sgt i32 %31, %33
  br i1 %34, label %35, label %41

35:                                               ; preds = %29, %27, %18
  %36 = phi i32 [ %20, %18 ], [ %23, %27 ], [ %23, %29 ]
  %37 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %3, i64 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4, !alias.scope !42
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %4, i8* align 4 %9, i64 12, i1 false) #12, !alias.scope !42
  store i32 %12, i32* %13, align 4, !alias.scope !42
  %39 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %3, i64 0, i32 1, i32 1
  store i32 %36, i32* %39, align 4, !alias.scope !42
  %40 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %3, i64 0, i32 1, i32 2
  store i32 %38, i32* %40, align 4, !alias.scope !42
  br label %41

41:                                               ; preds = %16, %27, %29, %35
  call void @_ZNK13CPWL_EditImpl12GetRangeTextERK14CPVT_WordRange(%"class.fxcrt::WideString"* sret %0, %class.CPWL_EditImpl* %1, %struct.CPVT_WordRange* nonnull dereferenceable(24) %3)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK13CPWL_EditImpl11SelectState18ConvertToWordRangeEv(%struct.CPVT_WordRange* noalias nocapture sret, %"class.CPWL_EditImpl::SelectState"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.CPWL_EditImpl::SelectState", %"class.CPWL_EditImpl::SelectState"* %1, i64 0, i32 1
  %4 = bitcast %struct.CPVT_WordRange* %0 to i8*
  %5 = bitcast %"class.CPWL_EditImpl::SelectState"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 12, i1 false) #12
  %6 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %0, i64 0, i32 1
  %7 = bitcast %struct.CPVT_WordPlace* %6 to i8*
  %8 = bitcast %struct.CPVT_WordPlace* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 12, i1 false) #12
  %9 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %0, i64 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %6, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %19, label %14

14:                                               ; preds = %2
  %15 = icmp sgt i32 %10, %12
  br i1 %15, label %16, label %39

16:                                               ; preds = %14
  %17 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %0, i64 0, i32 0, i32 1
  %18 = load i32, i32* %17, align 4
  br label %33

19:                                               ; preds = %2
  %20 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %0, i64 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %0, i64 0, i32 1, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %21, %23
  br i1 %24, label %27, label %25

25:                                               ; preds = %19
  %26 = icmp sgt i32 %21, %23
  br i1 %26, label %33, label %39

27:                                               ; preds = %19
  %28 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %0, i64 0, i32 0, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %0, i64 0, i32 1, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = icmp sgt i32 %29, %31
  br i1 %32, label %33, label %39

33:                                               ; preds = %27, %25, %16
  %34 = phi i32 [ %18, %16 ], [ %21, %25 ], [ %21, %27 ]
  %35 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %0, i64 0, i32 0, i32 2
  %36 = load i32, i32* %35, align 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %7, i64 12, i1 false) #12
  store i32 %10, i32* %11, align 4
  %37 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %0, i64 0, i32 1, i32 1
  store i32 %34, i32* %37, align 4
  %38 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %0, i64 0, i32 1, i32 2
  store i32 %36, i32* %38, align 4
  br label %39

39:                                               ; preds = %14, %25, %27, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK13CPWL_EditImpl13GetTotalLinesEv(%class.CPWL_EditImpl* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %3 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %2, align 8
  %4 = tail call %"class.CPVT_VariableText::Iterator"* @_ZN17CPVT_VariableText11GetIteratorEv(%class.CPVT_VariableText* %3) #12
  tail call void @_ZN17CPVT_VariableText8Iterator5SetAtEi(%"class.CPVT_VariableText::Iterator"* %4, i32 0) #12
  br label %5

5:                                                ; preds = %5, %1
  %6 = phi i32 [ 1, %1 ], [ %8, %5 ]
  %7 = tail call zeroext i1 @_ZN17CPVT_VariableText8Iterator8NextLineEv(%"class.CPVT_VariableText::Iterator"* %4) #12
  %8 = add nuw nsw i32 %6, 1
  br i1 %7, label %5, label %9

9:                                                ; preds = %5
  ret i32 %6
}

declare zeroext i1 @_ZN17CPVT_VariableText8Iterator8NextLineEv(%"class.CPVT_VariableText::Iterator"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl7SetTextERKN5fxcrt10WideStringE(%class.CPWL_EditImpl*, %"class.fxcrt::WideString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %3 = alloca %struct.CPVT_WordPlace, align 4
  %4 = tail call zeroext i1 @_ZN13CPWL_EditImpl5ClearEv(%class.CPWL_EditImpl* %0)
  %5 = bitcast %struct.CPVT_WordPlace* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %5) #12
  %6 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %3, i64 0, i32 0
  store i32 0, i32* %6, align 4
  %7 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %3, i64 0, i32 1
  store i32 0, i32* %7, align 4
  %8 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %3, i64 0, i32 2
  store i32 -1, i32* %8, align 4
  %9 = call { i64, i32 } @_ZN13CPWL_EditImpl12DoInsertTextERK14CPVT_WordPlaceRKN5fxcrt10WideStringEi(%class.CPWL_EditImpl* %0, %struct.CPVT_WordPlace* nonnull dereferenceable(12) %3, %"class.fxcrt::WideString"* dereferenceable(8) %1, i32 1)
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %5) #12
  %10 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %11 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %10, align 8
  %12 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %11, i64 0, i32 0
  %13 = load i8, i8* %12, align 8, !range !8
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %16, label %15

15:                                               ; preds = %2
  tail call void @_ZN13CPWL_EditImpl12RearrangeAllEv(%class.CPWL_EditImpl* %0) #12
  tail call void @_ZN13CPWL_EditImpl13ScrollToCaretEv(%class.CPWL_EditImpl* %0) #12
  tail call void @_ZN13CPWL_EditImpl7RefreshEv(%class.CPWL_EditImpl* %0) #12
  tail call void @_ZN13CPWL_EditImpl14SetCaretOriginEv(%class.CPWL_EditImpl* %0) #12
  tail call void @_ZN13CPWL_EditImpl12SetCaretInfoEv(%class.CPWL_EditImpl* %0) #12
  br label %16

16:                                               ; preds = %2, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN13CPWL_EditImpl5ClearEv(%class.CPWL_EditImpl* nocapture) local_unnamed_addr #2 align 2 {
  %2 = alloca %struct.CPVT_WordRange, align 8
  %3 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %4 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %3, align 8
  %5 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %4, i64 0, i32 0
  %6 = load i8, i8* %5, align 8, !range !8
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %53, label %8

8:                                                ; preds = %1
  %9 = bitcast %struct.CPVT_WordRange* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #12
  %10 = tail call { i64, i32 } @_ZNK17CPVT_VariableText17GetBeginWordPlaceEv(%class.CPVT_VariableText* %4) #12, !noalias !45
  %11 = extractvalue { i64, i32 } %10, 0
  %12 = extractvalue { i64, i32 } %10, 1
  %13 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %3, align 8, !noalias !45
  %14 = tail call { i64, i32 } @_ZNK17CPVT_VariableText15GetEndWordPlaceEv(%class.CPVT_VariableText* %13) #12, !noalias !45
  %15 = extractvalue { i64, i32 } %14, 0
  %16 = extractvalue { i64, i32 } %14, 1
  %17 = bitcast %struct.CPVT_WordRange* %2 to i64*
  store i64 %11, i64* %17, align 8, !alias.scope !45
  %18 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %2, i64 0, i32 0, i32 2
  store i32 %12, i32* %18, align 8, !alias.scope !45
  %19 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %2, i64 0, i32 1
  %20 = bitcast %struct.CPVT_WordPlace* %19 to i8*
  %21 = bitcast %struct.CPVT_WordPlace* %19 to i64*
  store i64 %15, i64* %21, align 4, !alias.scope !45
  %22 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %2, i64 0, i32 1, i32 2
  store i32 %16, i32* %22, align 4, !alias.scope !45
  %23 = trunc i64 %11 to i32
  %24 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %19, i64 0, i32 0
  %25 = trunc i64 %15 to i32
  %26 = icmp eq i32 %23, %25
  %27 = lshr i64 %11, 32
  %28 = trunc i64 %27 to i32
  %29 = lshr i64 %15, 32
  %30 = trunc i64 %29 to i32
  br i1 %26, label %33, label %31

31:                                               ; preds = %8
  %32 = icmp sgt i32 %23, %25
  br i1 %32, label %39, label %41

33:                                               ; preds = %8
  %34 = icmp eq i32 %28, %30
  br i1 %34, label %37, label %35

35:                                               ; preds = %33
  %36 = icmp sgt i32 %28, %30
  br i1 %36, label %39, label %41

37:                                               ; preds = %33
  %38 = icmp sgt i32 %12, %16
  br i1 %38, label %39, label %41

39:                                               ; preds = %37, %35, %31
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 4 %20, i64 12, i1 false) #12, !alias.scope !45
  store i32 %23, i32* %24, align 4, !alias.scope !45
  %40 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %2, i64 0, i32 1, i32 1
  store i32 %28, i32* %40, align 4, !alias.scope !45
  store i32 %12, i32* %22, align 4, !alias.scope !45
  br label %41

41:                                               ; preds = %31, %35, %37, %39
  %42 = call { i64, i32 } @_ZN17CPVT_VariableText11DeleteWordsERK14CPVT_WordRange(%class.CPVT_VariableText* %4, %struct.CPVT_WordRange* nonnull dereferenceable(24) %2) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #12
  %43 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %3, align 8
  %44 = call { i64, i32 } @_ZNK17CPVT_VariableText17GetBeginWordPlaceEv(%class.CPVT_VariableText* %43) #12
  %45 = extractvalue { i64, i32 } %44, 0
  %46 = extractvalue { i64, i32 } %44, 1
  %47 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9
  %48 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 10
  %49 = bitcast %struct.CPVT_WordPlace* %48 to i8*
  %50 = bitcast %struct.CPVT_WordPlace* %47 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %49, i8* align 4 %50, i64 12, i1 false) #12
  %51 = bitcast %struct.CPVT_WordPlace* %47 to i64*
  store i64 %45, i64* %51, align 8
  %52 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9, i32 2
  store i32 %46, i32* %52, align 8
  br label %53

53:                                               ; preds = %1, %41
  %54 = phi i1 [ true, %41 ], [ false, %1 ]
  ret i1 %54
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_ZN13CPWL_EditImpl12DoInsertTextERK14CPVT_WordPlaceRKN5fxcrt10WideStringEi(%class.CPWL_EditImpl* nocapture readonly, %struct.CPVT_WordPlace* nocapture readonly dereferenceable(12), %"class.fxcrt::WideString"* nocapture readonly dereferenceable(8), i32) local_unnamed_addr #2 align 2 {
  %5 = alloca %struct.CPVT_WordPlace, align 8
  %6 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %5, i64 0, i32 2
  %7 = bitcast %struct.CPVT_WordPlace* %5 to i8*
  %8 = bitcast %struct.CPVT_WordPlace* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 4 %8, i64 12, i1 false)
  %9 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %10 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %9, align 8
  %11 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %10, i64 0, i32 0
  %12 = load i8, i8* %11, align 8, !range !8
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %93, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.fxcrt::StringDataTemplate.219"*, %"class.fxcrt::StringDataTemplate.219"** %15, align 8
  %17 = icmp eq %"class.fxcrt::StringDataTemplate.219"* %16, null
  br i1 %17, label %93, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.219", %"class.fxcrt::StringDataTemplate.219"* %16, i64 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = trunc i64 %20 to i32
  %22 = icmp sgt i32 %21, 0
  br i1 %22, label %23, label %93

23:                                               ; preds = %18
  %24 = bitcast %struct.CPVT_WordPlace* %5 to i64*
  %25 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  br label %26

26:                                               ; preds = %23, %89
  %27 = phi i64 [ 0, %23 ], [ %91, %89 ]
  %28 = phi i32 [ 0, %23 ], [ %87, %89 ]
  %29 = phi %"class.fxcrt::StringDataTemplate.219"* [ %16, %23 ], [ %90, %89 ]
  %30 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.219", %"class.fxcrt::StringDataTemplate.219"* %29, i64 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = icmp ugt i64 %31, %27
  br i1 %32, label %34, label %33, !prof !48

33:                                               ; preds = %89, %26
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !49
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !50
  unreachable

34:                                               ; preds = %26
  %35 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.219", %"class.fxcrt::StringDataTemplate.219"* %29, i64 0, i32 3, i64 %27
  %36 = load i32, i32* %35, align 4
  %37 = trunc i32 %36 to i16
  switch i16 %37, label %65 [
    i16 13, label %38
    i16 10, label %59
    i16 9, label %64
  ]

38:                                               ; preds = %34
  %39 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %9, align 8
  %40 = call { i64, i32 } @_ZN17CPVT_VariableText13InsertSectionERK14CPVT_WordPlace(%class.CPVT_VariableText* %39, %struct.CPVT_WordPlace* nonnull dereferenceable(12) %5) #12
  %41 = extractvalue { i64, i32 } %40, 0
  %42 = extractvalue { i64, i32 } %40, 1
  store i64 %41, i64* %24, align 8
  store i32 %42, i32* %6, align 8
  %43 = add nsw i32 %28, 1
  %44 = icmp slt i32 %43, %21
  br i1 %44, label %45, label %85

45:                                               ; preds = %38
  %46 = sext i32 %43 to i64
  %47 = load %"class.fxcrt::StringDataTemplate.219"*, %"class.fxcrt::StringDataTemplate.219"** %15, align 8
  %48 = icmp eq %"class.fxcrt::StringDataTemplate.219"* %47, null
  br i1 %48, label %53, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.219", %"class.fxcrt::StringDataTemplate.219"* %47, i64 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = icmp ugt i64 %51, %46
  br i1 %52, label %54, label %53, !prof !48

53:                                               ; preds = %49, %45
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !49
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !50
  unreachable

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.219", %"class.fxcrt::StringDataTemplate.219"* %47, i64 0, i32 3, i64 %46
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 10
  %58 = select i1 %57, i32 %43, i32 %28
  br label %85

59:                                               ; preds = %34
  %60 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %9, align 8
  %61 = call { i64, i32 } @_ZN17CPVT_VariableText13InsertSectionERK14CPVT_WordPlace(%class.CPVT_VariableText* %60, %struct.CPVT_WordPlace* nonnull dereferenceable(12) %5) #12
  %62 = extractvalue { i64, i32 } %61, 0
  %63 = extractvalue { i64, i32 } %61, 1
  store i64 %62, i64* %24, align 8
  store i32 %63, i32* %6, align 8
  br label %85

64:                                               ; preds = %34
  br label %65

65:                                               ; preds = %34, %64
  %66 = phi i16 [ %37, %34 ], [ 32, %64 ]
  %67 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %9, align 8
  %68 = load %"class.CPWL_EditImpl::Provider"*, %"class.CPWL_EditImpl::Provider"** %25, align 8
  %69 = icmp eq %"class.CPWL_EditImpl::Provider"* %68, null
  br i1 %69, label %80, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.CPWL_EditImpl::Provider", %"class.CPWL_EditImpl::Provider"* %68, i64 0, i32 0, i32 1, i32 0
  %72 = load %class.IPVT_FontMap*, %class.IPVT_FontMap** %71, align 8
  %73 = icmp eq %class.IPVT_FontMap* %72, null
  br i1 %73, label %80, label %74

74:                                               ; preds = %70
  %75 = bitcast %class.IPVT_FontMap* %72 to i32 (%class.IPVT_FontMap*, i16, i32)***
  %76 = load i32 (%class.IPVT_FontMap*, i16, i32)**, i32 (%class.IPVT_FontMap*, i16, i32)*** %75, align 8
  %77 = getelementptr inbounds i32 (%class.IPVT_FontMap*, i16, i32)*, i32 (%class.IPVT_FontMap*, i16, i32)** %76, i64 6
  %78 = load i32 (%class.IPVT_FontMap*, i16, i32)*, i32 (%class.IPVT_FontMap*, i16, i32)** %77, align 8
  %79 = call i32 %78(%class.IPVT_FontMap* nonnull %72, i16 zeroext %66, i32 %3) #12
  br label %80

80:                                               ; preds = %65, %70, %74
  %81 = phi i32 [ %79, %74 ], [ %3, %70 ], [ %3, %65 ]
  %82 = call { i64, i32 } @_ZN17CPVT_VariableText10InsertWordERK14CPVT_WordPlaceti(%class.CPVT_VariableText* %67, %struct.CPVT_WordPlace* nonnull dereferenceable(12) %5, i16 zeroext %66, i32 %81) #12
  %83 = extractvalue { i64, i32 } %82, 0
  %84 = extractvalue { i64, i32 } %82, 1
  store i64 %83, i64* %24, align 8
  store i32 %84, i32* %6, align 8
  br label %85

85:                                               ; preds = %54, %38, %80, %59
  %86 = phi i32 [ %28, %80 ], [ %28, %59 ], [ %28, %38 ], [ %58, %54 ]
  %87 = add nsw i32 %86, 1
  %88 = icmp slt i32 %87, %21
  br i1 %88, label %89, label %93

89:                                               ; preds = %85
  %90 = load %"class.fxcrt::StringDataTemplate.219"*, %"class.fxcrt::StringDataTemplate.219"** %15, align 8
  %91 = sext i32 %87 to i64
  %92 = icmp eq %"class.fxcrt::StringDataTemplate.219"* %90, null
  br i1 %92, label %33, label %26

93:                                               ; preds = %85, %14, %18, %4
  %94 = bitcast %struct.CPVT_WordPlace* %5 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = load i32, i32* %6, align 8
  %97 = insertvalue { i64, i32 } undef, i64 %95, 0
  %98 = insertvalue { i64, i32 } %97, i32 %96, 1
  ret { i64, i32 } %98
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN13CPWL_EditImpl10InsertWordEti(%class.CPWL_EditImpl*, i16 zeroext, i32) local_unnamed_addr #2 align 2 {
  %4 = tail call zeroext i1 @_ZN13CPWL_EditImpl10InsertWordEtib(%class.CPWL_EditImpl* %0, i16 zeroext %1, i32 %2, i1 zeroext true)
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN13CPWL_EditImpl12InsertReturnEv(%class.CPWL_EditImpl*) local_unnamed_addr #2 align 2 {
  %2 = tail call zeroext i1 @_ZN13CPWL_EditImpl12InsertReturnEb(%class.CPWL_EditImpl* %0, i1 zeroext true)
  ret i1 %2
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN13CPWL_EditImpl9BackspaceEv(%class.CPWL_EditImpl*) local_unnamed_addr #2 align 2 {
  %2 = tail call zeroext i1 @_ZN13CPWL_EditImpl9BackspaceEb(%class.CPWL_EditImpl* %0, i1 zeroext true)
  ret i1 %2
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN13CPWL_EditImpl6DeleteEv(%class.CPWL_EditImpl*) local_unnamed_addr #2 align 2 {
  %2 = tail call zeroext i1 @_ZN13CPWL_EditImpl6DeleteEb(%class.CPWL_EditImpl* %0, i1 zeroext true)
  ret i1 %2
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN13CPWL_EditImpl14ClearSelectionEv(%class.CPWL_EditImpl*) local_unnamed_addr #2 align 2 {
  %2 = tail call zeroext i1 @_ZN13CPWL_EditImpl5ClearEb(%class.CPWL_EditImpl* %0, i1 zeroext true)
  ret i1 %2
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN13CPWL_EditImpl10InsertTextERKN5fxcrt10WideStringEi(%class.CPWL_EditImpl*, %"class.fxcrt::WideString"* dereferenceable(8), i32) local_unnamed_addr #2 align 2 {
  %4 = tail call zeroext i1 @_ZN13CPWL_EditImpl10InsertTextERKN5fxcrt10WideStringEib(%class.CPWL_EditImpl* %0, %"class.fxcrt::WideString"* dereferenceable(8) %1, i32 %2, i1 zeroext true)
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK13CPWL_EditImpl14GetContentRectEv(%class.CPWL_EditImpl* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = alloca { <2 x float>, <2 x float> }, align 8
  %3 = bitcast { <2 x float>, <2 x float> }* %2 to %class.CFX_FloatRect*
  %4 = bitcast { <2 x float>, <2 x float> }* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #12
  %5 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %6 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %5, align 8
  %7 = tail call { <2 x float>, <2 x float> } @_ZNK17CPVT_VariableText14GetContentRectEv(%class.CPVT_VariableText* %6) #12
  %8 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %2, i64 0, i32 0
  %9 = extractvalue { <2 x float>, <2 x float> } %7, 0
  store <2 x float> %9, <2 x float>* %8, align 8
  %10 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %2, i64 0, i32 1
  %11 = extractvalue { <2 x float>, <2 x float> } %7, 1
  store <2 x float> %11, <2 x float>* %10, align 8
  %12 = call { <2 x float>, <2 x float> } @_ZNK13CPWL_EditImpl8VTToEditERK13CFX_FloatRect(%class.CPWL_EditImpl* %0, %class.CFX_FloatRect* nonnull dereferenceable(16) %3)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #12
  ret { <2 x float>, <2 x float> } %12
}

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK13CPWL_EditImpl8VTToEditERK13CFX_FloatRect(%class.CPWL_EditImpl* nocapture readonly, %class.CFX_FloatRect* nocapture readonly dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %1, i64 0, i32 0
  %4 = load float, float* %3, align 4
  %5 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %1, i64 0, i32 1
  %6 = load float, float* %5, align 4
  %7 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %8 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %7, align 8, !noalias !51
  %9 = tail call { <2 x float>, <2 x float> } @_ZNK17CPVT_VariableText14GetContentRectEv(%class.CPVT_VariableText* %8) #12, !noalias !51
  %10 = extractvalue { <2 x float>, <2 x float> } %9, 0
  %11 = extractvalue { <2 x float>, <2 x float> } %9, 1
  %12 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %7, align 8, !noalias !51
  %13 = tail call dereferenceable(16) %class.CFX_FloatRect* @_ZNK17CPVT_VariableText12GetPlateRectEv(%class.CPVT_VariableText* %12) #12, !noalias !51
  %14 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %13, i64 0, i32 0
  %15 = load float, float* %14, align 4, !noalias !51
  %16 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %13, i64 0, i32 1
  %17 = load float, float* %16, align 4, !noalias !51
  %18 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %13, i64 0, i32 3
  %19 = load float, float* %18, align 4, !noalias !51
  %20 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 5
  %21 = load i32, i32* %20, align 8, !noalias !51
  switch i32 %21, label %35 [
    i32 2, label %29
    i32 1, label %22
  ]

22:                                               ; preds = %2
  %23 = fsub float %19, %17
  %24 = extractelement <2 x float> %11, i32 1
  %25 = extractelement <2 x float> %10, i32 1
  %26 = fsub float %24, %25
  %27 = fsub float %23, %26
  %28 = fmul float %27, 5.000000e-01
  br label %35

29:                                               ; preds = %2
  %30 = fsub float %19, %17
  %31 = extractelement <2 x float> %11, i32 1
  %32 = extractelement <2 x float> %10, i32 1
  %33 = fsub float %31, %32
  %34 = fsub float %30, %33
  br label %35

35:                                               ; preds = %2, %22, %29
  %36 = phi float [ %34, %29 ], [ %28, %22 ], [ 0.000000e+00, %2 ]
  %37 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 12, i32 0
  %38 = load float, float* %37, align 8, !noalias !51
  %39 = fsub float %38, %15
  %40 = fsub float %4, %39
  %41 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 12, i32 1
  %42 = load float, float* %41, align 4, !noalias !51
  %43 = fadd float %36, %42
  %44 = fsub float %43, %19
  %45 = fsub float %6, %44
  %46 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %1, i64 0, i32 2
  %47 = load float, float* %46, align 4
  %48 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %1, i64 0, i32 3
  %49 = load float, float* %48, align 4
  %50 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %7, align 8, !noalias !54
  %51 = tail call { <2 x float>, <2 x float> } @_ZNK17CPVT_VariableText14GetContentRectEv(%class.CPVT_VariableText* %50) #12, !noalias !54
  %52 = extractvalue { <2 x float>, <2 x float> } %51, 0
  %53 = extractvalue { <2 x float>, <2 x float> } %51, 1
  %54 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %7, align 8, !noalias !54
  %55 = tail call dereferenceable(16) %class.CFX_FloatRect* @_ZNK17CPVT_VariableText12GetPlateRectEv(%class.CPVT_VariableText* %54) #12, !noalias !54
  %56 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %55, i64 0, i32 0
  %57 = load float, float* %56, align 4, !noalias !54
  %58 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %55, i64 0, i32 1
  %59 = load float, float* %58, align 4, !noalias !54
  %60 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %55, i64 0, i32 3
  %61 = load float, float* %60, align 4, !noalias !54
  %62 = load i32, i32* %20, align 8, !noalias !54
  switch i32 %62, label %76 [
    i32 2, label %70
    i32 1, label %63
  ]

63:                                               ; preds = %35
  %64 = fsub float %61, %59
  %65 = extractelement <2 x float> %53, i32 1
  %66 = extractelement <2 x float> %52, i32 1
  %67 = fsub float %65, %66
  %68 = fsub float %64, %67
  %69 = fmul float %68, 5.000000e-01
  br label %76

70:                                               ; preds = %35
  %71 = fsub float %61, %59
  %72 = extractelement <2 x float> %53, i32 1
  %73 = extractelement <2 x float> %52, i32 1
  %74 = fsub float %72, %73
  %75 = fsub float %71, %74
  br label %76

76:                                               ; preds = %35, %63, %70
  %77 = phi float [ %75, %70 ], [ %69, %63 ], [ 0.000000e+00, %35 ]
  %78 = load float, float* %37, align 8, !noalias !54
  %79 = fsub float %78, %57
  %80 = fsub float %47, %79
  %81 = load float, float* %41, align 4, !noalias !54
  %82 = fadd float %77, %81
  %83 = fsub float %82, %61
  %84 = fsub float %49, %83
  %85 = insertelement <2 x float> undef, float %40, i32 0
  %86 = insertelement <2 x float> %85, float %45, i32 1
  %87 = insertelement <2 x float> undef, float %80, i32 0
  %88 = insertelement <2 x float> %87, float %84, i32 1
  %89 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %86, 0
  %90 = insertvalue { <2 x float>, <2 x float> } %89, <2 x float> %88, 1
  ret { <2 x float>, <2 x float> } %90
}

declare { <2 x float>, <2 x float> } @_ZNK17CPVT_VariableText14GetContentRectEv(%class.CPVT_VariableText*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK13CPWL_EditImpl17GetWholeWordRangeEv(%struct.CPVT_WordRange* noalias nocapture sret, %class.CPWL_EditImpl* nocapture readonly) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %1, i64 0, i32 7, i32 0, i32 0, i32 0
  %4 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %3, align 8
  %5 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %4, i64 0, i32 0
  %6 = load i8, i8* %5, align 8, !range !8
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %41, label %8

8:                                                ; preds = %2
  %9 = tail call { i64, i32 } @_ZNK17CPVT_VariableText17GetBeginWordPlaceEv(%class.CPVT_VariableText* %4) #12
  %10 = extractvalue { i64, i32 } %9, 0
  %11 = extractvalue { i64, i32 } %9, 1
  %12 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %3, align 8
  %13 = tail call { i64, i32 } @_ZNK17CPVT_VariableText15GetEndWordPlaceEv(%class.CPVT_VariableText* %12) #12
  %14 = extractvalue { i64, i32 } %13, 0
  %15 = extractvalue { i64, i32 } %13, 1
  %16 = bitcast %struct.CPVT_WordRange* %0 to i8*
  %17 = bitcast %struct.CPVT_WordRange* %0 to i64*
  store i64 %10, i64* %17, align 4
  %18 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %0, i64 0, i32 0, i32 2
  store i32 %11, i32* %18, align 4
  %19 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %0, i64 0, i32 1
  %20 = bitcast %struct.CPVT_WordPlace* %19 to i8*
  %21 = bitcast %struct.CPVT_WordPlace* %19 to i64*
  store i64 %14, i64* %21, align 4
  %22 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %0, i64 0, i32 1, i32 2
  store i32 %15, i32* %22, align 4
  %23 = trunc i64 %10 to i32
  %24 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %19, i64 0, i32 0
  %25 = trunc i64 %14 to i32
  %26 = icmp eq i32 %23, %25
  %27 = lshr i64 %10, 32
  %28 = trunc i64 %27 to i32
  %29 = lshr i64 %14, 32
  %30 = trunc i64 %29 to i32
  br i1 %26, label %33, label %31

31:                                               ; preds = %8
  %32 = icmp sgt i32 %23, %25
  br i1 %32, label %39, label %43

33:                                               ; preds = %8
  %34 = icmp eq i32 %28, %30
  br i1 %34, label %37, label %35

35:                                               ; preds = %33
  %36 = icmp sgt i32 %28, %30
  br i1 %36, label %39, label %43

37:                                               ; preds = %33
  %38 = icmp sgt i32 %11, %15
  br i1 %38, label %39, label %43

39:                                               ; preds = %31, %37, %35
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %20, i64 12, i1 false) #12
  store i32 %23, i32* %24, align 4
  %40 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %0, i64 0, i32 1, i32 1
  store i32 %28, i32* %40, align 4
  store i32 %11, i32* %22, align 4
  br label %43

41:                                               ; preds = %2
  %42 = bitcast %struct.CPVT_WordRange* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %42, i8 -1, i64 24, i1 false) #12
  br label %43

43:                                               ; preds = %39, %37, %35, %31, %41
  ret void
}

declare { i64, i32 } @_ZNK17CPVT_VariableText15GetEndWordPlaceEv(%class.CPVT_VariableText*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK13CPWL_EditImpl19GetVisibleWordRangeEv(%struct.CPVT_WordRange* noalias nocapture sret, %class.CPWL_EditImpl* nocapture readonly) local_unnamed_addr #2 align 2 {
  %3 = alloca %class.CFX_PTemplate, align 4
  %4 = alloca %class.CFX_PTemplate, align 4
  %5 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %1, i64 0, i32 2
  %6 = load i8, i8* %5, align 2, !range !8
  %7 = icmp eq i8 %6, 0
  %8 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %1, i64 0, i32 7, i32 0, i32 0, i32 0
  %9 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %8, align 8
  %10 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %9, i64 0, i32 0
  %11 = load i8, i8* %10, align 8, !range !8
  %12 = icmp eq i8 %11, 0
  br i1 %7, label %49, label %13

13:                                               ; preds = %2
  br i1 %12, label %47, label %14

14:                                               ; preds = %13
  %15 = tail call { i64, i32 } @_ZNK17CPVT_VariableText17GetBeginWordPlaceEv(%class.CPVT_VariableText* %9) #12, !noalias !57
  %16 = extractvalue { i64, i32 } %15, 0
  %17 = extractvalue { i64, i32 } %15, 1
  %18 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %8, align 8, !noalias !57
  %19 = tail call { i64, i32 } @_ZNK17CPVT_VariableText15GetEndWordPlaceEv(%class.CPVT_VariableText* %18) #12, !noalias !57
  %20 = extractvalue { i64, i32 } %19, 0
  %21 = extractvalue { i64, i32 } %19, 1
  %22 = bitcast %struct.CPVT_WordRange* %0 to i8*
  %23 = bitcast %struct.CPVT_WordRange* %0 to i64*
  store i64 %16, i64* %23, align 4, !alias.scope !57
  %24 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %0, i64 0, i32 0, i32 2
  store i32 %17, i32* %24, align 4, !alias.scope !57
  %25 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %0, i64 0, i32 1
  %26 = bitcast %struct.CPVT_WordPlace* %25 to i8*
  %27 = bitcast %struct.CPVT_WordPlace* %25 to i64*
  store i64 %20, i64* %27, align 4, !alias.scope !57
  %28 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %0, i64 0, i32 1, i32 2
  store i32 %21, i32* %28, align 4, !alias.scope !57
  %29 = trunc i64 %16 to i32
  %30 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %25, i64 0, i32 0
  %31 = trunc i64 %20 to i32
  %32 = icmp eq i32 %29, %31
  %33 = lshr i64 %16, 32
  %34 = trunc i64 %33 to i32
  %35 = lshr i64 %20, 32
  %36 = trunc i64 %35 to i32
  br i1 %32, label %39, label %37

37:                                               ; preds = %14
  %38 = icmp sgt i32 %29, %31
  br i1 %38, label %45, label %172

39:                                               ; preds = %14
  %40 = icmp eq i32 %34, %36
  br i1 %40, label %43, label %41

41:                                               ; preds = %39
  %42 = icmp sgt i32 %34, %36
  br i1 %42, label %45, label %172

43:                                               ; preds = %39
  %44 = icmp sgt i32 %17, %21
  br i1 %44, label %45, label %172

45:                                               ; preds = %43, %41, %37
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %22, i8* align 4 %26, i64 12, i1 false) #12, !alias.scope !57
  store i32 %29, i32* %30, align 4, !alias.scope !57
  %46 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %0, i64 0, i32 1, i32 1
  store i32 %34, i32* %46, align 4, !alias.scope !57
  store i32 %17, i32* %28, align 4, !alias.scope !57
  br label %172

47:                                               ; preds = %13
  %48 = bitcast %struct.CPVT_WordRange* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %48, i8 -1, i64 24, i1 false) #12, !alias.scope !57
  br label %172

49:                                               ; preds = %2
  br i1 %12, label %170, label %50

50:                                               ; preds = %49
  %51 = tail call dereferenceable(16) %class.CFX_FloatRect* @_ZNK17CPVT_VariableText12GetPlateRectEv(%class.CPVT_VariableText* %9) #12
  %52 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %51, i64 0, i32 0
  %53 = load float, float* %52, align 4
  %54 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %51, i64 0, i32 1
  %55 = load float, float* %54, align 4
  %56 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %51, i64 0, i32 2
  %57 = load float, float* %56, align 4
  %58 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %51, i64 0, i32 3
  %59 = load float, float* %58, align 4
  %60 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %8, align 8
  %61 = bitcast %class.CFX_PTemplate* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #12
  %62 = tail call { <2 x float>, <2 x float> } @_ZNK17CPVT_VariableText14GetContentRectEv(%class.CPVT_VariableText* %60) #12, !noalias !60
  %63 = extractvalue { <2 x float>, <2 x float> } %62, 0
  %64 = extractvalue { <2 x float>, <2 x float> } %62, 1
  %65 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %8, align 8, !noalias !60
  %66 = tail call dereferenceable(16) %class.CFX_FloatRect* @_ZNK17CPVT_VariableText12GetPlateRectEv(%class.CPVT_VariableText* %65) #12, !noalias !60
  %67 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %66, i64 0, i32 0
  %68 = load float, float* %67, align 4, !noalias !60
  %69 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %66, i64 0, i32 1
  %70 = load float, float* %69, align 4, !noalias !60
  %71 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %66, i64 0, i32 3
  %72 = load float, float* %71, align 4, !noalias !60
  %73 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %1, i64 0, i32 5
  %74 = load i32, i32* %73, align 8, !noalias !60
  switch i32 %74, label %88 [
    i32 2, label %82
    i32 1, label %75
  ]

75:                                               ; preds = %50
  %76 = fsub float %72, %70
  %77 = extractelement <2 x float> %64, i32 1
  %78 = extractelement <2 x float> %63, i32 1
  %79 = fsub float %77, %78
  %80 = fsub float %76, %79
  %81 = fmul float %80, 5.000000e-01
  br label %88

82:                                               ; preds = %50
  %83 = fsub float %72, %70
  %84 = extractelement <2 x float> %64, i32 1
  %85 = extractelement <2 x float> %63, i32 1
  %86 = fsub float %84, %85
  %87 = fsub float %83, %86
  br label %88

88:                                               ; preds = %50, %75, %82
  %89 = phi float [ %87, %82 ], [ %81, %75 ], [ 0.000000e+00, %50 ]
  %90 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %1, i64 0, i32 12, i32 0
  %91 = load float, float* %90, align 8, !noalias !60
  %92 = fsub float %91, %68
  %93 = fadd float %53, %92
  %94 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %1, i64 0, i32 12, i32 1
  %95 = load float, float* %94, align 4, !noalias !60
  %96 = fadd float %89, %95
  %97 = fsub float %96, %72
  %98 = fadd float %59, %97
  %99 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %3, i64 0, i32 0
  store float %93, float* %99, align 4, !alias.scope !60
  %100 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %3, i64 0, i32 1
  store float %98, float* %100, align 4, !alias.scope !60
  %101 = call { i64, i32 } @_ZNK17CPVT_VariableText15SearchWordPlaceERK13CFX_PTemplateIfE(%class.CPVT_VariableText* %60, %class.CFX_PTemplate* nonnull dereferenceable(8) %3) #12
  %102 = extractvalue { i64, i32 } %101, 0
  %103 = extractvalue { i64, i32 } %101, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #12
  %104 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %8, align 8
  %105 = bitcast %class.CFX_PTemplate* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %105) #12
  %106 = call { <2 x float>, <2 x float> } @_ZNK17CPVT_VariableText14GetContentRectEv(%class.CPVT_VariableText* %104) #12, !noalias !63
  %107 = extractvalue { <2 x float>, <2 x float> } %106, 0
  %108 = extractvalue { <2 x float>, <2 x float> } %106, 1
  %109 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %8, align 8, !noalias !63
  %110 = call dereferenceable(16) %class.CFX_FloatRect* @_ZNK17CPVT_VariableText12GetPlateRectEv(%class.CPVT_VariableText* %109) #12, !noalias !63
  %111 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %110, i64 0, i32 0
  %112 = load float, float* %111, align 4, !noalias !63
  %113 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %110, i64 0, i32 1
  %114 = load float, float* %113, align 4, !noalias !63
  %115 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %110, i64 0, i32 3
  %116 = load float, float* %115, align 4, !noalias !63
  %117 = load i32, i32* %73, align 8, !noalias !63
  switch i32 %117, label %131 [
    i32 2, label %125
    i32 1, label %118
  ]

118:                                              ; preds = %88
  %119 = fsub float %116, %114
  %120 = extractelement <2 x float> %108, i32 1
  %121 = extractelement <2 x float> %107, i32 1
  %122 = fsub float %120, %121
  %123 = fsub float %119, %122
  %124 = fmul float %123, 5.000000e-01
  br label %131

125:                                              ; preds = %88
  %126 = fsub float %116, %114
  %127 = extractelement <2 x float> %108, i32 1
  %128 = extractelement <2 x float> %107, i32 1
  %129 = fsub float %127, %128
  %130 = fsub float %126, %129
  br label %131

131:                                              ; preds = %88, %118, %125
  %132 = phi float [ %130, %125 ], [ %124, %118 ], [ 0.000000e+00, %88 ]
  %133 = load float, float* %90, align 8, !noalias !63
  %134 = fsub float %133, %112
  %135 = fadd float %57, %134
  %136 = load float, float* %94, align 4, !noalias !63
  %137 = fadd float %132, %136
  %138 = fsub float %137, %116
  %139 = fadd float %55, %138
  %140 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %4, i64 0, i32 0
  store float %135, float* %140, align 4, !alias.scope !63
  %141 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %4, i64 0, i32 1
  store float %139, float* %141, align 4, !alias.scope !63
  %142 = call { i64, i32 } @_ZNK17CPVT_VariableText15SearchWordPlaceERK13CFX_PTemplateIfE(%class.CPVT_VariableText* %104, %class.CFX_PTemplate* nonnull dereferenceable(8) %4) #12
  %143 = extractvalue { i64, i32 } %142, 0
  %144 = extractvalue { i64, i32 } %142, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105) #12
  %145 = bitcast %struct.CPVT_WordRange* %0 to i8*
  %146 = bitcast %struct.CPVT_WordRange* %0 to i64*
  store i64 %102, i64* %146, align 4
  %147 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %0, i64 0, i32 0, i32 2
  store i32 %103, i32* %147, align 4
  %148 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %0, i64 0, i32 1
  %149 = bitcast %struct.CPVT_WordPlace* %148 to i8*
  %150 = bitcast %struct.CPVT_WordPlace* %148 to i64*
  store i64 %143, i64* %150, align 4
  %151 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %0, i64 0, i32 1, i32 2
  store i32 %144, i32* %151, align 4
  %152 = trunc i64 %102 to i32
  %153 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %148, i64 0, i32 0
  %154 = trunc i64 %143 to i32
  %155 = icmp eq i32 %152, %154
  %156 = lshr i64 %102, 32
  %157 = trunc i64 %156 to i32
  %158 = lshr i64 %143, 32
  %159 = trunc i64 %158 to i32
  br i1 %155, label %162, label %160

160:                                              ; preds = %131
  %161 = icmp sgt i32 %152, %154
  br i1 %161, label %168, label %172

162:                                              ; preds = %131
  %163 = icmp eq i32 %157, %159
  br i1 %163, label %166, label %164

164:                                              ; preds = %162
  %165 = icmp sgt i32 %157, %159
  br i1 %165, label %168, label %172

166:                                              ; preds = %162
  %167 = icmp sgt i32 %103, %144
  br i1 %167, label %168, label %172

168:                                              ; preds = %160, %166, %164
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %145, i8* align 4 %149, i64 12, i1 false) #12
  store i32 %152, i32* %153, align 4
  %169 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %0, i64 0, i32 1, i32 1
  store i32 %157, i32* %169, align 4
  store i32 %103, i32* %151, align 4
  br label %172

170:                                              ; preds = %49
  %171 = bitcast %struct.CPVT_WordRange* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %171, i8 -1, i64 24, i1 false) #12
  br label %172

172:                                              ; preds = %168, %166, %164, %160, %47, %45, %43, %41, %37, %170
  ret void
}

declare dereferenceable(16) %class.CFX_FloatRect* @_ZNK17CPVT_VariableText12GetPlateRectEv(%class.CPVT_VariableText*) local_unnamed_addr #3

declare { i64, i32 } @_ZNK17CPVT_VariableText15SearchWordPlaceERK13CFX_PTemplateIfE(%class.CPVT_VariableText*, %class.CFX_PTemplate* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK13CPWL_EditImpl8EditToVTERK13CFX_PTemplateIfE(%class.CFX_PTemplate* noalias nocapture sret, %class.CPWL_EditImpl* nocapture readonly, %class.CFX_PTemplate* nocapture readonly dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %1, i64 0, i32 7, i32 0, i32 0, i32 0
  %5 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %4, align 8
  %6 = tail call { <2 x float>, <2 x float> } @_ZNK17CPVT_VariableText14GetContentRectEv(%class.CPVT_VariableText* %5) #12
  %7 = extractvalue { <2 x float>, <2 x float> } %6, 0
  %8 = extractvalue { <2 x float>, <2 x float> } %6, 1
  %9 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %4, align 8
  %10 = tail call dereferenceable(16) %class.CFX_FloatRect* @_ZNK17CPVT_VariableText12GetPlateRectEv(%class.CPVT_VariableText* %9) #12
  %11 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %10, i64 0, i32 0
  %12 = load float, float* %11, align 4
  %13 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %10, i64 0, i32 1
  %14 = load float, float* %13, align 4
  %15 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %10, i64 0, i32 3
  %16 = load float, float* %15, align 4
  %17 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %1, i64 0, i32 5
  %18 = load i32, i32* %17, align 8
  switch i32 %18, label %32 [
    i32 2, label %26
    i32 1, label %19
  ]

19:                                               ; preds = %3
  %20 = fsub float %16, %14
  %21 = extractelement <2 x float> %8, i32 1
  %22 = extractelement <2 x float> %7, i32 1
  %23 = fsub float %21, %22
  %24 = fsub float %20, %23
  %25 = fmul float %24, 5.000000e-01
  br label %32

26:                                               ; preds = %3
  %27 = fsub float %16, %14
  %28 = extractelement <2 x float> %8, i32 1
  %29 = extractelement <2 x float> %7, i32 1
  %30 = fsub float %28, %29
  %31 = fsub float %27, %30
  br label %32

32:                                               ; preds = %3, %26, %19
  %33 = phi float [ %31, %26 ], [ %25, %19 ], [ 0.000000e+00, %3 ]
  %34 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %2, i64 0, i32 0
  %35 = load float, float* %34, align 4
  %36 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %1, i64 0, i32 12, i32 0
  %37 = load float, float* %36, align 8
  %38 = fsub float %37, %12
  %39 = fadd float %35, %38
  %40 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %2, i64 0, i32 1
  %41 = load float, float* %40, align 4
  %42 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %1, i64 0, i32 12, i32 1
  %43 = load float, float* %42, align 4
  %44 = fadd float %33, %43
  %45 = fsub float %44, %16
  %46 = fadd float %41, %45
  %47 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %0, i64 0, i32 0
  store float %39, float* %47, align 4
  %48 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %0, i64 0, i32 1
  store float %46, float* %48, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_ZNK13CPWL_EditImpl15SearchWordPlaceERK13CFX_PTemplateIfE(%class.CPWL_EditImpl* nocapture readonly, %class.CFX_PTemplate* nocapture readonly dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %3 = alloca %class.CFX_PTemplate, align 4
  %4 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %5 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %4, align 8
  %6 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %5, i64 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %59, label %9

9:                                                ; preds = %2
  %10 = bitcast %class.CFX_PTemplate* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #12
  %11 = tail call { <2 x float>, <2 x float> } @_ZNK17CPVT_VariableText14GetContentRectEv(%class.CPVT_VariableText* %5) #12, !noalias !66
  %12 = extractvalue { <2 x float>, <2 x float> } %11, 0
  %13 = extractvalue { <2 x float>, <2 x float> } %11, 1
  %14 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %4, align 8, !noalias !66
  %15 = tail call dereferenceable(16) %class.CFX_FloatRect* @_ZNK17CPVT_VariableText12GetPlateRectEv(%class.CPVT_VariableText* %14) #12, !noalias !66
  %16 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %15, i64 0, i32 0
  %17 = load float, float* %16, align 4, !noalias !66
  %18 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %15, i64 0, i32 1
  %19 = load float, float* %18, align 4, !noalias !66
  %20 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %15, i64 0, i32 3
  %21 = load float, float* %20, align 4, !noalias !66
  %22 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 5
  %23 = load i32, i32* %22, align 8, !noalias !66
  switch i32 %23, label %37 [
    i32 2, label %31
    i32 1, label %24
  ]

24:                                               ; preds = %9
  %25 = fsub float %21, %19
  %26 = extractelement <2 x float> %13, i32 1
  %27 = extractelement <2 x float> %12, i32 1
  %28 = fsub float %26, %27
  %29 = fsub float %25, %28
  %30 = fmul float %29, 5.000000e-01
  br label %37

31:                                               ; preds = %9
  %32 = fsub float %21, %19
  %33 = extractelement <2 x float> %13, i32 1
  %34 = extractelement <2 x float> %12, i32 1
  %35 = fsub float %33, %34
  %36 = fsub float %32, %35
  br label %37

37:                                               ; preds = %9, %24, %31
  %38 = phi float [ %36, %31 ], [ %30, %24 ], [ 0.000000e+00, %9 ]
  %39 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %1, i64 0, i32 0
  %40 = load float, float* %39, align 4, !noalias !66
  %41 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 12, i32 0
  %42 = load float, float* %41, align 8, !noalias !66
  %43 = fsub float %42, %17
  %44 = fadd float %40, %43
  %45 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %1, i64 0, i32 1
  %46 = load float, float* %45, align 4, !noalias !66
  %47 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 12, i32 1
  %48 = load float, float* %47, align 4, !noalias !66
  %49 = fadd float %38, %48
  %50 = fsub float %49, %21
  %51 = fadd float %46, %50
  %52 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %3, i64 0, i32 0
  store float %44, float* %52, align 4, !alias.scope !66
  %53 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %3, i64 0, i32 1
  store float %51, float* %53, align 4, !alias.scope !66
  %54 = call { i64, i32 } @_ZNK17CPVT_VariableText15SearchWordPlaceERK13CFX_PTemplateIfE(%class.CPVT_VariableText* %5, %class.CFX_PTemplate* nonnull dereferenceable(8) %3) #12
  %55 = extractvalue { i64, i32 } %54, 0
  %56 = extractvalue { i64, i32 } %54, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #12
  %57 = and i64 %55, -4294967296
  %58 = and i64 %55, 4294967295
  br label %59

59:                                               ; preds = %2, %37
  %60 = phi i64 [ %58, %37 ], [ 4294967295, %2 ]
  %61 = phi i64 [ %57, %37 ], [ -4294967296, %2 ]
  %62 = phi i32 [ %56, %37 ], [ -1, %2 ]
  %63 = or i64 %61, %60
  %64 = insertvalue { i64, i32 } undef, i64 %63, 0
  %65 = insertvalue { i64, i32 } %64, i32 %62, 1
  ret { i64, i32 } %65
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl12RearrangeAllEv(%class.CPWL_EditImpl*) local_unnamed_addr #2 align 2 {
  %2 = alloca %struct.PWL_SCROLL_INFO, align 4
  %3 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %4 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %3, align 8
  %5 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %4, i64 0, i32 0
  %6 = load i8, i8* %5, align 8, !range !8
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %72, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9
  tail call void @_ZNK17CPVT_VariableText15UpdateWordPlaceER14CPVT_WordPlace(%class.CPVT_VariableText* %4, %struct.CPVT_WordPlace* dereferenceable(12) %9) #12
  %10 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %3, align 8
  tail call void @_ZN17CPVT_VariableText12RearrangeAllEv(%class.CPVT_VariableText* %10) #12
  %11 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %3, align 8
  tail call void @_ZNK17CPVT_VariableText15UpdateWordPlaceER14CPVT_WordPlace(%class.CPVT_VariableText* %11, %struct.CPVT_WordPlace* dereferenceable(12) %9) #12
  %12 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 8, i32 0
  %13 = load %class.CPWL_Edit*, %class.CPWL_Edit** %12, align 8
  %14 = icmp eq %class.CPWL_Edit* %13, null
  br i1 %14, label %72, label %15

15:                                               ; preds = %8
  %16 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %3, align 8
  %17 = tail call dereferenceable(16) %class.CFX_FloatRect* @_ZNK17CPVT_VariableText12GetPlateRectEv(%class.CPVT_VariableText* %16) #12
  %18 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %17, i64 0, i32 1
  %19 = load float, float* %18, align 4
  %20 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %17, i64 0, i32 3
  %21 = load float, float* %20, align 4
  %22 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %3, align 8
  %23 = tail call { <2 x float>, <2 x float> } @_ZNK17CPVT_VariableText14GetContentRectEv(%class.CPVT_VariableText* %22) #12
  %24 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 1
  %25 = load i8, i8* %24, align 1, !range !8
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %27, label %41

27:                                               ; preds = %15
  %28 = extractvalue { <2 x float>, <2 x float> } %23, 1
  %29 = extractvalue { <2 x float>, <2 x float> } %23, 0
  store i8 1, i8* %24, align 1
  %30 = bitcast %struct.PWL_SCROLL_INFO* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %30) #12
  %31 = getelementptr inbounds %struct.PWL_SCROLL_INFO, %struct.PWL_SCROLL_INFO* %2, i64 0, i32 0
  %32 = getelementptr inbounds %struct.PWL_SCROLL_INFO, %struct.PWL_SCROLL_INFO* %2, i64 0, i32 1
  %33 = getelementptr inbounds %struct.PWL_SCROLL_INFO, %struct.PWL_SCROLL_INFO* %2, i64 0, i32 2
  %34 = getelementptr inbounds %struct.PWL_SCROLL_INFO, %struct.PWL_SCROLL_INFO* %2, i64 0, i32 3
  %35 = getelementptr inbounds %struct.PWL_SCROLL_INFO, %struct.PWL_SCROLL_INFO* %2, i64 0, i32 4
  %36 = fsub float %21, %19
  store float %36, float* %33, align 4
  %37 = extractelement <2 x float> %29, i32 1
  store float %37, float* %31, align 4
  %38 = extractelement <2 x float> %28, i32 1
  store float %38, float* %32, align 4
  %39 = fdiv float %36, 3.000000e+00
  store float %39, float* %35, align 4
  store float %36, float* %34, align 4
  %40 = load %class.CPWL_Edit*, %class.CPWL_Edit** %12, align 8
  call void @_ZN9CPWL_Edit13SetScrollInfoERK15PWL_SCROLL_INFO(%class.CPWL_Edit* %40, %struct.PWL_SCROLL_INFO* nonnull dereferenceable(20) %2) #12
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %30) #12
  store i8 0, i8* %24, align 1
  br label %41

41:                                               ; preds = %15, %27
  %42 = load %class.CPWL_Edit*, %class.CPWL_Edit** %12, align 8
  %43 = icmp eq %class.CPWL_Edit* %42, null
  br i1 %43, label %72, label %44

44:                                               ; preds = %41
  %45 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %3, align 8
  %46 = call { <2 x float>, <2 x float> } @_ZNK17CPVT_VariableText14GetContentRectEv(%class.CPVT_VariableText* %45) #12
  %47 = extractvalue { <2 x float>, <2 x float> } %46, 0
  %48 = extractvalue { <2 x float>, <2 x float> } %46, 1
  %49 = extractelement <2 x float> %48, i32 0
  %50 = extractelement <2 x float> %47, i32 0
  %51 = fsub float %49, %50
  %52 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 18
  %53 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 18, i32 2
  %54 = load float, float* %53, align 4
  %55 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %52, i64 0, i32 0
  %56 = load float, float* %55, align 4
  %57 = fsub float %54, %56
  %58 = fcmp une float %51, %57
  br i1 %58, label %69, label %59

59:                                               ; preds = %44
  %60 = extractelement <2 x float> %48, i32 1
  %61 = extractelement <2 x float> %47, i32 1
  %62 = fsub float %60, %61
  %63 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 18, i32 3
  %64 = load float, float* %63, align 4
  %65 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 18, i32 1
  %66 = load float, float* %65, align 4
  %67 = fsub float %64, %66
  %68 = fcmp une float %62, %67
  br i1 %68, label %69, label %72

69:                                               ; preds = %59, %44
  %70 = bitcast %class.CFX_FloatRect* %52 to <2 x float>*
  store <2 x float> %47, <2 x float>* %70, align 8
  %71 = bitcast float* %53 to <2 x float>*
  store <2 x float> %48, <2 x float>* %71, align 8
  br label %72

72:                                               ; preds = %1, %8, %69, %59, %41
  ret void
}

declare void @_ZN17CPVT_VariableText12RearrangeAllEv(%class.CPVT_VariableText*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl13SetScrollInfoEv(%class.CPWL_EditImpl*) local_unnamed_addr #2 align 2 {
  %2 = alloca %struct.PWL_SCROLL_INFO, align 4
  %3 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 8, i32 0
  %4 = load %class.CPWL_Edit*, %class.CPWL_Edit** %3, align 8
  %5 = icmp eq %class.CPWL_Edit* %4, null
  br i1 %5, label %35, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %8 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %7, align 8
  %9 = tail call dereferenceable(16) %class.CFX_FloatRect* @_ZNK17CPVT_VariableText12GetPlateRectEv(%class.CPVT_VariableText* %8) #12
  %10 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %9, i64 0, i32 1
  %11 = load float, float* %10, align 4
  %12 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %9, i64 0, i32 3
  %13 = load float, float* %12, align 4
  %14 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %7, align 8
  %15 = tail call { <2 x float>, <2 x float> } @_ZNK17CPVT_VariableText14GetContentRectEv(%class.CPVT_VariableText* %14) #12
  %16 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 1
  %17 = load i8, i8* %16, align 1, !range !8
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %35

19:                                               ; preds = %6
  %20 = extractvalue { <2 x float>, <2 x float> } %15, 1
  %21 = extractvalue { <2 x float>, <2 x float> } %15, 0
  store i8 1, i8* %16, align 1
  %22 = bitcast %struct.PWL_SCROLL_INFO* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %22) #12
  %23 = getelementptr inbounds %struct.PWL_SCROLL_INFO, %struct.PWL_SCROLL_INFO* %2, i64 0, i32 0
  %24 = getelementptr inbounds %struct.PWL_SCROLL_INFO, %struct.PWL_SCROLL_INFO* %2, i64 0, i32 1
  %25 = getelementptr inbounds %struct.PWL_SCROLL_INFO, %struct.PWL_SCROLL_INFO* %2, i64 0, i32 2
  %26 = getelementptr inbounds %struct.PWL_SCROLL_INFO, %struct.PWL_SCROLL_INFO* %2, i64 0, i32 3
  %27 = getelementptr inbounds %struct.PWL_SCROLL_INFO, %struct.PWL_SCROLL_INFO* %2, i64 0, i32 4
  %28 = fsub float %13, %11
  store float %28, float* %25, align 4
  %29 = extractelement <2 x float> %21, i32 1
  store float %29, float* %23, align 4
  %30 = extractelement <2 x float> %20, i32 1
  store float %30, float* %24, align 4
  %31 = fdiv float %28, 3.000000e+00
  store float %31, float* %27, align 4
  store float %28, float* %26, align 4
  %32 = load %class.CPWL_Edit*, %class.CPWL_Edit** %3, align 8
  call void @_ZN9CPWL_Edit13SetScrollInfoERK15PWL_SCROLL_INFO(%class.CPWL_Edit* %32, %struct.PWL_SCROLL_INFO* nonnull dereferenceable(20) %2) #12
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %22) #12
  %33 = icmp eq i8* %16, null
  br i1 %33, label %35, label %34

34:                                               ; preds = %19
  store i8 0, i8* %16, align 1
  br label %35

35:                                               ; preds = %1, %6, %19, %34
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl17SetContentChangedEv(%class.CPWL_EditImpl* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 8, i32 0
  %3 = load %class.CPWL_Edit*, %class.CPWL_Edit** %2, align 8
  %4 = icmp eq %class.CPWL_Edit* %3, null
  br i1 %4, label %34, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %7 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %6, align 8
  %8 = tail call { <2 x float>, <2 x float> } @_ZNK17CPVT_VariableText14GetContentRectEv(%class.CPVT_VariableText* %7) #12
  %9 = extractvalue { <2 x float>, <2 x float> } %8, 0
  %10 = extractvalue { <2 x float>, <2 x float> } %8, 1
  %11 = extractelement <2 x float> %10, i32 0
  %12 = extractelement <2 x float> %9, i32 0
  %13 = fsub float %11, %12
  %14 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 18
  %15 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 18, i32 2
  %16 = load float, float* %15, align 4
  %17 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %14, i64 0, i32 0
  %18 = load float, float* %17, align 4
  %19 = fsub float %16, %18
  %20 = fcmp une float %13, %19
  br i1 %20, label %31, label %21

21:                                               ; preds = %5
  %22 = extractelement <2 x float> %10, i32 1
  %23 = extractelement <2 x float> %9, i32 1
  %24 = fsub float %22, %23
  %25 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 18, i32 3
  %26 = load float, float* %25, align 4
  %27 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 18, i32 1
  %28 = load float, float* %27, align 4
  %29 = fsub float %26, %28
  %30 = fcmp une float %24, %29
  br i1 %30, label %31, label %34

31:                                               ; preds = %21, %5
  %32 = bitcast %class.CFX_FloatRect* %14 to <2 x float>*
  store <2 x float> %9, <2 x float>* %32, align 8
  %33 = bitcast float* %15 to <2 x float>*
  store <2 x float> %10, <2 x float>* %33, align 8
  br label %34

34:                                               ; preds = %1, %21, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl13RearrangePartERK14CPVT_WordRange(%class.CPWL_EditImpl*, %struct.CPVT_WordRange* dereferenceable(24)) local_unnamed_addr #2 align 2 {
  %3 = alloca %struct.PWL_SCROLL_INFO, align 4
  %4 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %5 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %4, align 8
  %6 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %5, i64 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %73, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9
  tail call void @_ZNK17CPVT_VariableText15UpdateWordPlaceER14CPVT_WordPlace(%class.CPVT_VariableText* %5, %struct.CPVT_WordPlace* dereferenceable(12) %10) #12
  %11 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %4, align 8
  tail call void @_ZN17CPVT_VariableText13RearrangePartERK14CPVT_WordRange(%class.CPVT_VariableText* %11, %struct.CPVT_WordRange* dereferenceable(24) %1) #12
  %12 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %4, align 8
  tail call void @_ZNK17CPVT_VariableText15UpdateWordPlaceER14CPVT_WordPlace(%class.CPVT_VariableText* %12, %struct.CPVT_WordPlace* dereferenceable(12) %10) #12
  %13 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 8, i32 0
  %14 = load %class.CPWL_Edit*, %class.CPWL_Edit** %13, align 8
  %15 = icmp eq %class.CPWL_Edit* %14, null
  br i1 %15, label %73, label %16

16:                                               ; preds = %9
  %17 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %4, align 8
  %18 = tail call dereferenceable(16) %class.CFX_FloatRect* @_ZNK17CPVT_VariableText12GetPlateRectEv(%class.CPVT_VariableText* %17) #12
  %19 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %18, i64 0, i32 1
  %20 = load float, float* %19, align 4
  %21 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %18, i64 0, i32 3
  %22 = load float, float* %21, align 4
  %23 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %4, align 8
  %24 = tail call { <2 x float>, <2 x float> } @_ZNK17CPVT_VariableText14GetContentRectEv(%class.CPVT_VariableText* %23) #12
  %25 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 1
  %26 = load i8, i8* %25, align 1, !range !8
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %42

28:                                               ; preds = %16
  %29 = extractvalue { <2 x float>, <2 x float> } %24, 1
  %30 = extractvalue { <2 x float>, <2 x float> } %24, 0
  store i8 1, i8* %25, align 1
  %31 = bitcast %struct.PWL_SCROLL_INFO* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %31) #12
  %32 = getelementptr inbounds %struct.PWL_SCROLL_INFO, %struct.PWL_SCROLL_INFO* %3, i64 0, i32 0
  %33 = getelementptr inbounds %struct.PWL_SCROLL_INFO, %struct.PWL_SCROLL_INFO* %3, i64 0, i32 1
  %34 = getelementptr inbounds %struct.PWL_SCROLL_INFO, %struct.PWL_SCROLL_INFO* %3, i64 0, i32 2
  %35 = getelementptr inbounds %struct.PWL_SCROLL_INFO, %struct.PWL_SCROLL_INFO* %3, i64 0, i32 3
  %36 = getelementptr inbounds %struct.PWL_SCROLL_INFO, %struct.PWL_SCROLL_INFO* %3, i64 0, i32 4
  %37 = fsub float %22, %20
  store float %37, float* %34, align 4
  %38 = extractelement <2 x float> %30, i32 1
  store float %38, float* %32, align 4
  %39 = extractelement <2 x float> %29, i32 1
  store float %39, float* %33, align 4
  %40 = fdiv float %37, 3.000000e+00
  store float %40, float* %36, align 4
  store float %37, float* %35, align 4
  %41 = load %class.CPWL_Edit*, %class.CPWL_Edit** %13, align 8
  call void @_ZN9CPWL_Edit13SetScrollInfoERK15PWL_SCROLL_INFO(%class.CPWL_Edit* %41, %struct.PWL_SCROLL_INFO* nonnull dereferenceable(20) %3) #12
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %31) #12
  store i8 0, i8* %25, align 1
  br label %42

42:                                               ; preds = %16, %28
  %43 = load %class.CPWL_Edit*, %class.CPWL_Edit** %13, align 8
  %44 = icmp eq %class.CPWL_Edit* %43, null
  br i1 %44, label %73, label %45

45:                                               ; preds = %42
  %46 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %4, align 8
  %47 = call { <2 x float>, <2 x float> } @_ZNK17CPVT_VariableText14GetContentRectEv(%class.CPVT_VariableText* %46) #12
  %48 = extractvalue { <2 x float>, <2 x float> } %47, 0
  %49 = extractvalue { <2 x float>, <2 x float> } %47, 1
  %50 = extractelement <2 x float> %49, i32 0
  %51 = extractelement <2 x float> %48, i32 0
  %52 = fsub float %50, %51
  %53 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 18
  %54 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 18, i32 2
  %55 = load float, float* %54, align 4
  %56 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %53, i64 0, i32 0
  %57 = load float, float* %56, align 4
  %58 = fsub float %55, %57
  %59 = fcmp une float %52, %58
  br i1 %59, label %70, label %60

60:                                               ; preds = %45
  %61 = extractelement <2 x float> %49, i32 1
  %62 = extractelement <2 x float> %48, i32 1
  %63 = fsub float %61, %62
  %64 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 18, i32 3
  %65 = load float, float* %64, align 4
  %66 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 18, i32 1
  %67 = load float, float* %66, align 4
  %68 = fsub float %65, %67
  %69 = fcmp une float %63, %68
  br i1 %69, label %70, label %73

70:                                               ; preds = %60, %45
  %71 = bitcast %class.CFX_FloatRect* %53 to <2 x float>*
  store <2 x float> %48, <2 x float>* %71, align 8
  %72 = bitcast float* %54 to <2 x float>*
  store <2 x float> %49, <2 x float>* %72, align 8
  br label %73

73:                                               ; preds = %2, %9, %70, %60, %42
  ret void
}

declare void @_ZN17CPVT_VariableText13RearrangePartERK14CPVT_WordRange(%class.CPVT_VariableText*, %struct.CPVT_WordRange* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN13CPWL_EditImpl11SelectState5ResetEv(%"class.CPWL_EditImpl::SelectState"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.CPWL_EditImpl::SelectState"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 -1, i64 24, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK13CPWL_EditImpl10IsSelectedEv(%class.CPWL_EditImpl* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %3, %5
  br i1 %6, label %7, label %19

7:                                                ; preds = %1
  %8 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %9, %11
  br i1 %12, label %13, label %19

13:                                               ; preds = %7
  %14 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = icmp ne i32 %15, %17
  br label %19

19:                                               ; preds = %1, %7, %13
  %20 = phi i1 [ true, %7 ], [ true, %1 ], [ %18, %13 ]
  ret i1 %20
}

declare void @_ZN9CPWL_Edit13SetScrollInfoERK15PWL_SCROLL_INFO(%class.CPWL_Edit*, %struct.PWL_SCROLL_INFO* dereferenceable(20)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl13SetScrollPosXEf(%class.CPWL_EditImpl*, float) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %21, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %8 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %7, align 8
  %9 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %8, i64 0, i32 0
  %10 = load i8, i8* %9, align 8, !range !8
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %21, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 12, i32 0
  %14 = load float, float* %13, align 8
  %15 = fsub float %14, %1
  %16 = fpext float %15 to double
  %17 = fcmp olt double %16, 1.000000e-04
  %18 = fcmp ogt double %16, -1.000000e-04
  %19 = and i1 %17, %18
  br i1 %19, label %21, label %20

20:                                               ; preds = %12
  store float %1, float* %13, align 8
  tail call void @_ZN13CPWL_EditImpl7RefreshEv(%class.CPWL_EditImpl* %0)
  br label %21

21:                                               ; preds = %6, %12, %2, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl13SetScrollPosYEf(%class.CPWL_EditImpl*, float) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %31, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %8 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %7, align 8
  %9 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %8, i64 0, i32 0
  %10 = load i8, i8* %9, align 8, !range !8
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %31, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 12, i32 1
  %14 = load float, float* %13, align 4
  %15 = fsub float %14, %1
  %16 = fpext float %15 to double
  %17 = fcmp olt double %16, 1.000000e-04
  %18 = fcmp ogt double %16, -1.000000e-04
  %19 = and i1 %17, %18
  br i1 %19, label %31, label %20

20:                                               ; preds = %12
  store float %1, float* %13, align 4
  tail call void @_ZN13CPWL_EditImpl7RefreshEv(%class.CPWL_EditImpl* %0)
  %21 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 8, i32 0
  %22 = load %class.CPWL_Edit*, %class.CPWL_Edit** %21, align 8
  %23 = icmp eq %class.CPWL_Edit* %22, null
  br i1 %23, label %31, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 1
  %26 = load i8, i8* %25, align 1, !range !8
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %24
  store i8 1, i8* %25, align 1
  tail call void @_ZN9CPWL_Edit17SetScrollPositionEf(%class.CPWL_Edit* nonnull %22, float %1) #12
  %29 = icmp eq i8* %25, null
  br i1 %29, label %31, label %30

30:                                               ; preds = %28
  store i8 0, i8* %25, align 1
  br label %31

31:                                               ; preds = %20, %6, %30, %28, %12, %24, %2
  ret void
}

declare void @_ZN9CPWL_Edit17SetScrollPositionEf(%class.CPWL_Edit*, float) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl12SetScrollPosERK13CFX_PTemplateIfE(%class.CPWL_EditImpl*, %class.CFX_PTemplate* nocapture readonly dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %1, i64 0, i32 0
  %4 = load float, float* %3, align 4
  %5 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 0
  %6 = load i8, i8* %5, align 8, !range !8
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %49, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %10 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %9, align 8
  %11 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %10, i64 0, i32 0
  %12 = load i8, i8* %11, align 8, !range !8
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %25, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 12, i32 0
  %16 = load float, float* %15, align 8
  %17 = fsub float %16, %4
  %18 = fpext float %17 to double
  %19 = fcmp olt double %18, 1.000000e-04
  %20 = fcmp ogt double %18, -1.000000e-04
  %21 = and i1 %19, %20
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  store float %4, float* %15, align 8
  tail call void @_ZN13CPWL_EditImpl7RefreshEv(%class.CPWL_EditImpl* %0) #12
  %23 = load i8, i8* %5, align 8
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %49, label %25

25:                                               ; preds = %14, %8, %22
  %26 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %1, i64 0, i32 1
  %27 = load float, float* %26, align 4
  %28 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %9, align 8
  %29 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %28, i64 0, i32 0
  %30 = load i8, i8* %29, align 8, !range !8
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %49, label %32

32:                                               ; preds = %25
  %33 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 12, i32 1
  %34 = load float, float* %33, align 4
  %35 = fsub float %34, %27
  %36 = fpext float %35 to double
  %37 = fcmp olt double %36, 1.000000e-04
  %38 = fcmp ogt double %36, -1.000000e-04
  %39 = and i1 %37, %38
  br i1 %39, label %49, label %40

40:                                               ; preds = %32
  store float %27, float* %33, align 4
  tail call void @_ZN13CPWL_EditImpl7RefreshEv(%class.CPWL_EditImpl* %0) #12
  %41 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 8, i32 0
  %42 = load %class.CPWL_Edit*, %class.CPWL_Edit** %41, align 8
  %43 = icmp eq %class.CPWL_Edit* %42, null
  br i1 %43, label %49, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 1
  %46 = load i8, i8* %45, align 1, !range !8
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %44
  store i8 1, i8* %45, align 1
  tail call void @_ZN9CPWL_Edit17SetScrollPositionEf(%class.CPWL_Edit* nonnull %42, float %27) #12
  store i8 0, i8* %45, align 1
  br label %49

49:                                               ; preds = %2, %22, %25, %32, %40, %44, %48
  tail call void @_ZN13CPWL_EditImpl14SetScrollLimitEv(%class.CPWL_EditImpl* %0)
  tail call void @_ZN13CPWL_EditImpl12SetCaretInfoEv(%class.CPWL_EditImpl* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl14SetScrollLimitEv(%class.CPWL_EditImpl*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %3 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %2, align 8
  %4 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %3, i64 0, i32 0
  %5 = load i8, i8* %4, align 8, !range !8
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %170, label %7

7:                                                ; preds = %1
  %8 = tail call { <2 x float>, <2 x float> } @_ZNK17CPVT_VariableText14GetContentRectEv(%class.CPVT_VariableText* %3) #12
  %9 = extractvalue { <2 x float>, <2 x float> } %8, 0
  %10 = extractvalue { <2 x float>, <2 x float> } %8, 1
  %11 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %2, align 8
  %12 = tail call dereferenceable(16) %class.CFX_FloatRect* @_ZNK17CPVT_VariableText12GetPlateRectEv(%class.CPVT_VariableText* %11) #12
  %13 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %12, i64 0, i32 0
  %14 = load float, float* %13, align 4
  %15 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %12, i64 0, i32 1
  %16 = load float, float* %15, align 4
  %17 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %12, i64 0, i32 2
  %18 = load float, float* %17, align 4
  %19 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %12, i64 0, i32 3
  %20 = load float, float* %19, align 4
  %21 = fsub float %18, %14
  %22 = extractelement <2 x float> %10, i32 0
  %23 = extractelement <2 x float> %9, i32 0
  %24 = fsub float %22, %23
  %25 = fcmp ogt float %21, %24
  br i1 %25, label %26, label %44

26:                                               ; preds = %7
  %27 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 0
  %28 = load i8, i8* %27, align 8, !range !8
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %83, label %30

30:                                               ; preds = %26
  %31 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %2, align 8
  %32 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %31, i64 0, i32 0
  %33 = load i8, i8* %32, align 8, !range !8
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %83, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 12, i32 0
  %37 = load float, float* %36, align 8
  %38 = fsub float %37, %14
  %39 = fpext float %38 to double
  %40 = fcmp olt double %39, 1.000000e-04
  %41 = fcmp ogt double %39, -1.000000e-04
  %42 = and i1 %40, %41
  br i1 %42, label %83, label %43

43:                                               ; preds = %35
  store float %14, float* %36, align 8
  tail call void @_ZN13CPWL_EditImpl7RefreshEv(%class.CPWL_EditImpl* %0) #12
  br label %83

44:                                               ; preds = %7
  %45 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 12, i32 0
  %46 = load float, float* %45, align 8
  %47 = fcmp olt float %46, %23
  br i1 %47, label %48, label %64

48:                                               ; preds = %44
  %49 = fsub float %46, %23
  %50 = fpext float %49 to double
  %51 = fcmp olt double %50, 1.000000e-04
  %52 = fcmp ogt double %50, -1.000000e-04
  %53 = and i1 %51, %52
  br i1 %53, label %64, label %54

54:                                               ; preds = %48
  %55 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 0
  %56 = load i8, i8* %55, align 8, !range !8
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %83, label %58

58:                                               ; preds = %54
  %59 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %2, align 8
  %60 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %59, i64 0, i32 0
  %61 = load i8, i8* %60, align 8, !range !8
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %83, label %63

63:                                               ; preds = %58
  store float %23, float* %45, align 8
  tail call void @_ZN13CPWL_EditImpl7RefreshEv(%class.CPWL_EditImpl* %0) #12
  br label %83

64:                                               ; preds = %48, %44
  %65 = fsub float %22, %21
  %66 = fcmp ogt float %46, %65
  br i1 %66, label %67, label %83

67:                                               ; preds = %64
  %68 = fsub float %46, %65
  %69 = fpext float %68 to double
  %70 = fcmp olt double %69, 1.000000e-04
  %71 = fcmp ogt double %69, -1.000000e-04
  %72 = and i1 %70, %71
  br i1 %72, label %83, label %73

73:                                               ; preds = %67
  %74 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 0
  %75 = load i8, i8* %74, align 8, !range !8
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %83, label %77

77:                                               ; preds = %73
  %78 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %2, align 8
  %79 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %78, i64 0, i32 0
  %80 = load i8, i8* %79, align 8, !range !8
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %83, label %82

82:                                               ; preds = %77
  store float %65, float* %45, align 8
  tail call void @_ZN13CPWL_EditImpl7RefreshEv(%class.CPWL_EditImpl* %0) #12
  br label %83

83:                                               ; preds = %67, %82, %77, %73, %63, %58, %54, %43, %35, %30, %26, %64
  %84 = fsub float %20, %16
  %85 = extractelement <2 x float> %10, i32 1
  %86 = extractelement <2 x float> %9, i32 1
  %87 = fsub float %85, %86
  %88 = fcmp ogt float %84, %87
  br i1 %88, label %89, label %115

89:                                               ; preds = %83
  %90 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 0
  %91 = load i8, i8* %90, align 8, !range !8
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %170, label %93

93:                                               ; preds = %89
  %94 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %2, align 8
  %95 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %94, i64 0, i32 0
  %96 = load i8, i8* %95, align 8, !range !8
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %170, label %98

98:                                               ; preds = %93
  %99 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 12, i32 1
  %100 = load float, float* %99, align 4
  %101 = fsub float %100, %20
  %102 = fpext float %101 to double
  %103 = fcmp olt double %102, 1.000000e-04
  %104 = fcmp ogt double %102, -1.000000e-04
  %105 = and i1 %103, %104
  br i1 %105, label %170, label %106

106:                                              ; preds = %98
  store float %20, float* %99, align 4
  tail call void @_ZN13CPWL_EditImpl7RefreshEv(%class.CPWL_EditImpl* %0) #12
  %107 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 8, i32 0
  %108 = load %class.CPWL_Edit*, %class.CPWL_Edit** %107, align 8
  %109 = icmp eq %class.CPWL_Edit* %108, null
  br i1 %109, label %170, label %110

110:                                              ; preds = %106
  %111 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 1
  %112 = load i8, i8* %111, align 1, !range !8
  %113 = icmp eq i8 %112, 0
  br i1 %113, label %114, label %170

114:                                              ; preds = %110
  store i8 1, i8* %111, align 1
  tail call void @_ZN9CPWL_Edit17SetScrollPositionEf(%class.CPWL_Edit* nonnull %108, float %20) #12
  store i8 0, i8* %111, align 1
  br label %170

115:                                              ; preds = %83
  %116 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 12, i32 1
  %117 = load float, float* %116, align 4
  %118 = fadd float %86, %84
  %119 = fcmp olt float %117, %118
  br i1 %119, label %120, label %144

120:                                              ; preds = %115
  %121 = fsub float %117, %118
  %122 = fpext float %121 to double
  %123 = fcmp olt double %122, 1.000000e-04
  %124 = fcmp ogt double %122, -1.000000e-04
  %125 = and i1 %123, %124
  br i1 %125, label %144, label %126

126:                                              ; preds = %120
  %127 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 0
  %128 = load i8, i8* %127, align 8, !range !8
  %129 = icmp eq i8 %128, 0
  br i1 %129, label %170, label %130

130:                                              ; preds = %126
  %131 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %2, align 8
  %132 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %131, i64 0, i32 0
  %133 = load i8, i8* %132, align 8, !range !8
  %134 = icmp eq i8 %133, 0
  br i1 %134, label %170, label %135

135:                                              ; preds = %130
  store float %118, float* %116, align 4
  tail call void @_ZN13CPWL_EditImpl7RefreshEv(%class.CPWL_EditImpl* %0) #12
  %136 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 8, i32 0
  %137 = load %class.CPWL_Edit*, %class.CPWL_Edit** %136, align 8
  %138 = icmp eq %class.CPWL_Edit* %137, null
  br i1 %138, label %170, label %139

139:                                              ; preds = %135
  %140 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 1
  %141 = load i8, i8* %140, align 1, !range !8
  %142 = icmp eq i8 %141, 0
  br i1 %142, label %143, label %170

143:                                              ; preds = %139
  store i8 1, i8* %140, align 1
  tail call void @_ZN9CPWL_Edit17SetScrollPositionEf(%class.CPWL_Edit* nonnull %137, float %118) #12
  store i8 0, i8* %140, align 1
  br label %170

144:                                              ; preds = %120, %115
  %145 = fcmp ogt float %117, %85
  br i1 %145, label %146, label %170

146:                                              ; preds = %144
  %147 = fsub float %117, %85
  %148 = fpext float %147 to double
  %149 = fcmp olt double %148, 1.000000e-04
  %150 = fcmp ogt double %148, -1.000000e-04
  %151 = and i1 %149, %150
  br i1 %151, label %170, label %152

152:                                              ; preds = %146
  %153 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 0
  %154 = load i8, i8* %153, align 8, !range !8
  %155 = icmp eq i8 %154, 0
  br i1 %155, label %170, label %156

156:                                              ; preds = %152
  %157 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %2, align 8
  %158 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %157, i64 0, i32 0
  %159 = load i8, i8* %158, align 8, !range !8
  %160 = icmp eq i8 %159, 0
  br i1 %160, label %170, label %161

161:                                              ; preds = %156
  store float %85, float* %116, align 4
  tail call void @_ZN13CPWL_EditImpl7RefreshEv(%class.CPWL_EditImpl* %0) #12
  %162 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 8, i32 0
  %163 = load %class.CPWL_Edit*, %class.CPWL_Edit** %162, align 8
  %164 = icmp eq %class.CPWL_Edit* %163, null
  br i1 %164, label %170, label %165

165:                                              ; preds = %161
  %166 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 1
  %167 = load i8, i8* %166, align 1, !range !8
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %170

169:                                              ; preds = %165
  store i8 1, i8* %166, align 1
  tail call void @_ZN9CPWL_Edit17SetScrollPositionEf(%class.CPWL_Edit* nonnull %163, float %85) #12
  store i8 0, i8* %166, align 1
  br label %170

170:                                              ; preds = %1, %144, %146, %89, %93, %98, %106, %110, %114, %126, %130, %135, %139, %143, %152, %156, %161, %165, %169
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK13CPWL_EditImpl12GetScrollPosEv(%class.CFX_PTemplate* noalias nocapture sret, %class.CPWL_EditImpl* nocapture readonly) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %1, i64 0, i32 12
  %4 = bitcast %class.CFX_PTemplate* %3 to i32*
  %5 = load i32, i32* %4, align 4
  %6 = bitcast %class.CFX_PTemplate* %0 to i32*
  store i32 %5, i32* %6, align 4
  %7 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %0, i64 0, i32 1
  %8 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %1, i64 0, i32 12, i32 1
  %9 = bitcast float* %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = bitcast float* %7 to i32*
  store i32 %10, i32* %11, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl20RefreshPushLineRectsERK14CPVT_WordRange(%class.CPWL_EditImpl*, %struct.CPVT_WordRange* nocapture readonly dereferenceable(24)) local_unnamed_addr #2 align 2 {
  %3 = alloca %struct.CPVT_WordPlace, align 4
  %4 = alloca %struct.CPVT_WordPlace, align 4
  %5 = alloca %class.CPVT_Line, align 4
  %6 = alloca %class.CFX_FloatRect, align 4
  %7 = alloca %struct.CPVT_WordRange, align 4
  %8 = alloca { <2 x float>, <2 x float> }, align 8
  %9 = bitcast { <2 x float>, <2 x float> }* %8 to %class.CFX_FloatRect*
  %10 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %11 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %10, align 8
  %12 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %11, i64 0, i32 0
  %13 = load i8, i8* %12, align 8, !range !8
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %106, label %15

15:                                               ; preds = %2
  %16 = tail call %"class.CPVT_VariableText::Iterator"* @_ZN17CPVT_VariableText11GetIteratorEv(%class.CPVT_VariableText* %11) #12
  %17 = bitcast %struct.CPVT_WordPlace* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %17) #12
  %18 = bitcast %struct.CPVT_WordRange* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %17, i8* align 4 %18, i64 12, i1 false)
  %19 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %10, align 8
  call void @_ZNK17CPVT_VariableText15UpdateWordPlaceER14CPVT_WordPlace(%class.CPVT_VariableText* %19, %struct.CPVT_WordPlace* nonnull dereferenceable(12) %3) #12
  %20 = bitcast %struct.CPVT_WordPlace* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %20) #12
  %21 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %4, i64 0, i32 0
  %22 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %4, i64 0, i32 1
  %23 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %1, i64 0, i32 1
  %24 = bitcast %struct.CPVT_WordPlace* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %20, i8* align 4 %24, i64 12, i1 false)
  %25 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %10, align 8
  call void @_ZNK17CPVT_VariableText15UpdateWordPlaceER14CPVT_WordPlace(%class.CPVT_VariableText* %25, %struct.CPVT_WordPlace* nonnull dereferenceable(12) %4) #12
  call void @_ZN17CPVT_VariableText8Iterator5SetAtERK14CPVT_WordPlace(%"class.CPVT_VariableText::Iterator"* %16, %struct.CPVT_WordPlace* nonnull dereferenceable(12) %3) #12
  %26 = bitcast %class.CPVT_Line* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 44, i8* nonnull %26) #12
  %27 = getelementptr inbounds %class.CPVT_Line, %class.CPVT_Line* %5, i64 0, i32 0, i32 0
  %28 = getelementptr inbounds %class.CPVT_Line, %class.CPVT_Line* %5, i64 0, i32 0, i32 1
  %29 = getelementptr inbounds %class.CPVT_Line, %class.CPVT_Line* %5, i64 0, i32 1
  %30 = getelementptr inbounds %class.CPVT_Line, %class.CPVT_Line* %5, i64 0, i32 2, i32 0
  %31 = getelementptr inbounds %class.CPVT_Line, %class.CPVT_Line* %5, i64 0, i32 2, i32 1
  %32 = getelementptr inbounds %class.CPVT_Line, %class.CPVT_Line* %5, i64 0, i32 3
  %33 = getelementptr inbounds %class.CPVT_Line, %class.CPVT_Line* %5, i64 0, i32 4
  %34 = getelementptr inbounds %class.CPVT_Line, %class.CPVT_Line* %5, i64 0, i32 5
  %35 = bitcast float* %30 to i8*
  %36 = bitcast %class.CPVT_Line* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %36, i8 -1, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* align 4 %35, i8 0, i64 20, i1 false) #12
  %37 = bitcast %class.CFX_FloatRect* %6 to i8*
  %38 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %6, i64 0, i32 0
  %39 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %6, i64 0, i32 1
  %40 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %6, i64 0, i32 2
  %41 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %6, i64 0, i32 3
  %42 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 15
  %43 = bitcast %struct.CPVT_WordRange* %7 to i8*
  %44 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %7, i64 0, i32 1
  %45 = bitcast %struct.CPVT_WordPlace* %44 to i8*
  %46 = bitcast %struct.CPVT_WordPlace* %29 to i8*
  %47 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %7, i64 0, i32 0, i32 0
  %48 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %44, i64 0, i32 0
  %49 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %7, i64 0, i32 0, i32 1
  %50 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %7, i64 0, i32 1, i32 1
  %51 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %7, i64 0, i32 0, i32 2
  %52 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %7, i64 0, i32 1, i32 2
  %53 = bitcast { <2 x float>, <2 x float> }* %8 to i8*
  %54 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 0
  %55 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 1
  br label %56

56:                                               ; preds = %100, %15
  %57 = call zeroext i1 @_ZNK17CPVT_VariableText8Iterator7GetLineER9CPVT_Line(%"class.CPVT_VariableText::Iterator"* %16, %class.CPVT_Line* nonnull dereferenceable(44) %5) #12
  br i1 %57, label %58, label %105

58:                                               ; preds = %56
  %59 = load i32, i32* %27, align 4
  %60 = load i32, i32* %21, align 4
  %61 = icmp eq i32 %59, %60
  br i1 %61, label %64, label %62

62:                                               ; preds = %58
  %63 = sub nsw i32 %59, %60
  br label %68

64:                                               ; preds = %58
  %65 = load i32, i32* %28, align 4
  %66 = load i32, i32* %22, align 4
  %67 = sub nsw i32 %65, %66
  br label %68

68:                                               ; preds = %62, %64
  %69 = phi i32 [ %63, %62 ], [ %67, %64 ]
  %70 = icmp sgt i32 %69, 0
  br i1 %70, label %105, label %71

71:                                               ; preds = %68
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #12
  %72 = load float, float* %30, align 4
  %73 = load float, float* %31, align 4
  %74 = load float, float* %34, align 4
  %75 = fadd float %73, %74
  %76 = load float, float* %32, align 4
  %77 = fadd float %72, %76
  %78 = load float, float* %33, align 4
  %79 = fadd float %73, %78
  store float %72, float* %38, align 4
  store float %75, float* %39, align 4
  store float %77, float* %40, align 4
  store float %79, float* %41, align 4
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %43, i8* nonnull align 4 %26, i64 12, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %45, i8* align 4 %46, i64 12, i1 false) #12
  %80 = load i32, i32* %47, align 4
  %81 = load i32, i32* %48, align 4
  %82 = icmp eq i32 %80, %81
  br i1 %82, label %87, label %83

83:                                               ; preds = %71
  %84 = icmp sgt i32 %80, %81
  br i1 %84, label %85, label %100

85:                                               ; preds = %83
  %86 = load i32, i32* %49, align 4
  br label %97

87:                                               ; preds = %71
  %88 = load i32, i32* %49, align 4
  %89 = load i32, i32* %50, align 4
  %90 = icmp eq i32 %88, %89
  br i1 %90, label %93, label %91

91:                                               ; preds = %87
  %92 = icmp sgt i32 %88, %89
  br i1 %92, label %97, label %100

93:                                               ; preds = %87
  %94 = load i32, i32* %51, align 4
  %95 = load i32, i32* %52, align 4
  %96 = icmp sgt i32 %94, %95
  br i1 %96, label %97, label %100

97:                                               ; preds = %93, %91, %85
  %98 = phi i32 [ %86, %85 ], [ %88, %91 ], [ %88, %93 ]
  %99 = load i32, i32* %51, align 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %43, i8* align 4 %45, i64 12, i1 false) #12
  store i32 %80, i32* %48, align 4
  store i32 %98, i32* %50, align 4
  store i32 %99, i32* %52, align 4
  br label %100

100:                                              ; preds = %83, %91, %93, %97
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %53) #12
  %101 = call { <2 x float>, <2 x float> } @_ZNK13CPWL_EditImpl8VTToEditERK13CFX_FloatRect(%class.CPWL_EditImpl* %0, %class.CFX_FloatRect* nonnull dereferenceable(16) %6)
  %102 = extractvalue { <2 x float>, <2 x float> } %101, 0
  store <2 x float> %102, <2 x float>* %54, align 8
  %103 = extractvalue { <2 x float>, <2 x float> } %101, 1
  store <2 x float> %103, <2 x float>* %55, align 8
  call void @_ZN13CPWL_EditImpl12RefreshState4PushERK14CPVT_WordRangeRK13CFX_FloatRect(%"class.CPWL_EditImpl::RefreshState"* %42, %struct.CPVT_WordRange* nonnull dereferenceable(24) %7, %class.CFX_FloatRect* nonnull dereferenceable(16) %9)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #12
  %104 = call zeroext i1 @_ZN17CPVT_VariableText8Iterator8NextLineEv(%"class.CPVT_VariableText::Iterator"* %16) #12
  br i1 %104, label %56, label %105

105:                                              ; preds = %68, %56, %100
  call void @llvm.lifetime.end.p0i8(i64 44, i8* nonnull %26) #12
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %20) #12
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %17) #12
  br label %106

106:                                              ; preds = %2, %105
  ret void
}

declare zeroext i1 @_ZN8CPWL_Wnd14InvalidateRectEPK13CFX_FloatRect(%class.CPWL_Wnd*, %class.CFX_FloatRect*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl16RefreshWordRangeERK14CPVT_WordRange(%class.CPWL_EditImpl*, %struct.CPVT_WordRange* nocapture readonly dereferenceable(24)) local_unnamed_addr #2 align 2 {
  %3 = alloca %struct.CPVT_WordRange, align 4
  %4 = alloca %class.CPVT_Word, align 16
  %5 = alloca %class.CPVT_Line, align 4
  %6 = alloca %class.CFX_FloatRect, align 4
  %7 = alloca { <2 x float>, <2 x float> }, align 8
  %8 = bitcast { <2 x float>, <2 x float> }* %7 to %class.CFX_FloatRect*
  %9 = alloca %class.CFX_FloatRect, align 4
  %10 = alloca { <2 x float>, <2 x float> }, align 8
  %11 = bitcast { <2 x float>, <2 x float> }* %10 to %class.CFX_FloatRect*
  %12 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %13 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %12, align 8
  %14 = tail call %"class.CPVT_VariableText::Iterator"* @_ZN17CPVT_VariableText11GetIteratorEv(%class.CPVT_VariableText* %13) #12
  %15 = bitcast %struct.CPVT_WordRange* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #12
  %16 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %3, i64 0, i32 0
  %17 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %3, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %3, i64 0, i32 0, i32 1
  %19 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %3, i64 0, i32 1
  %20 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %19, i64 0, i32 0
  %21 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %3, i64 0, i32 1, i32 1
  %22 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %3, i64 0, i32 1, i32 2
  %23 = bitcast %struct.CPVT_WordRange* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %15, i8* align 4 %23, i64 24, i1 false)
  %24 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %12, align 8
  call void @_ZNK17CPVT_VariableText15UpdateWordPlaceER14CPVT_WordPlace(%class.CPVT_VariableText* %24, %struct.CPVT_WordPlace* nonnull dereferenceable(12) %16) #12
  %25 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %12, align 8
  call void @_ZNK17CPVT_VariableText15UpdateWordPlaceER14CPVT_WordPlace(%class.CPVT_VariableText* %25, %struct.CPVT_WordPlace* dereferenceable(12) %19) #12
  call void @_ZN17CPVT_VariableText8Iterator5SetAtERK14CPVT_WordPlace(%"class.CPVT_VariableText::Iterator"* %14, %struct.CPVT_WordPlace* nonnull dereferenceable(12) %16) #12
  %26 = bitcast %class.CPVT_Word* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %26) #12
  %27 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %4, i64 0, i32 0
  %28 = bitcast %class.CPVT_Word* %4 to <4 x i32>*
  store <4 x i32> <i32 -1431655766, i32 0, i32 -1, i32 -1>, <4 x i32>* %28, align 16
  store i16 0, i16* %27, align 16
  %29 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %4, i64 0, i32 2, i32 2
  store i32 -1, i32* %29, align 8
  %30 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %4, i64 0, i32 3, i32 0
  %31 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %4, i64 0, i32 7
  %32 = bitcast float* %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %32, i8 0, i64 20, i1 false) #12
  store i32 -1, i32* %31, align 8
  %33 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %4, i64 0, i32 8
  store float 0.000000e+00, float* %33, align 4
  %34 = bitcast %class.CPVT_Line* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 44, i8* nonnull %34) #12
  %35 = getelementptr inbounds %class.CPVT_Line, %class.CPVT_Line* %5, i64 0, i32 2, i32 0
  %36 = getelementptr inbounds %class.CPVT_Line, %class.CPVT_Line* %5, i64 0, i32 2, i32 1
  %37 = getelementptr inbounds %class.CPVT_Line, %class.CPVT_Line* %5, i64 0, i32 3
  %38 = getelementptr inbounds %class.CPVT_Line, %class.CPVT_Line* %5, i64 0, i32 4
  %39 = getelementptr inbounds %class.CPVT_Line, %class.CPVT_Line* %5, i64 0, i32 5
  %40 = bitcast float* %35 to i8*
  %41 = bitcast %class.CPVT_Line* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %41, i8 -1, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* align 4 %40, i8 0, i64 20, i1 false) #12
  %42 = call zeroext i1 @_ZN17CPVT_VariableText8Iterator8NextWordEv(%"class.CPVT_VariableText::Iterator"* %14) #12
  br i1 %42, label %43, label %151

43:                                               ; preds = %2
  %44 = getelementptr inbounds %"class.CPVT_VariableText::Iterator", %"class.CPVT_VariableText::Iterator"* %14, i64 0, i32 0, i32 0
  %45 = getelementptr inbounds %"class.CPVT_VariableText::Iterator", %"class.CPVT_VariableText::Iterator"* %14, i64 0, i32 0, i32 1
  %46 = getelementptr inbounds %"class.CPVT_VariableText::Iterator", %"class.CPVT_VariableText::Iterator"* %14, i64 0, i32 0, i32 2
  %47 = bitcast %class.CFX_FloatRect* %9 to i8*
  %48 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %9, i64 0, i32 0
  %49 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %9, i64 0, i32 1
  %50 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %9, i64 0, i32 2
  %51 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %9, i64 0, i32 3
  %52 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 8, i32 0
  %53 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 1
  %54 = bitcast { <2 x float>, <2 x float> }* %10 to i8*
  %55 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %10, i64 0, i32 0
  %56 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %10, i64 0, i32 1
  %57 = bitcast %class.CPWL_Edit** %52 to %class.CPWL_Wnd**
  %58 = icmp eq i8* %53, null
  %59 = bitcast %class.CFX_FloatRect* %6 to i8*
  %60 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %6, i64 0, i32 0
  %61 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %6, i64 0, i32 1
  %62 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %6, i64 0, i32 2
  %63 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %6, i64 0, i32 3
  %64 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %4, i64 0, i32 6
  %65 = bitcast { <2 x float>, <2 x float> }* %7 to i8*
  %66 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 0
  %67 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 1
  %68 = bitcast { <2 x float>, <2 x float> }* %10 to i8*
  %69 = bitcast { <2 x float>, <2 x float> }* %7 to i8*
  br label %70

70:                                               ; preds = %43, %148
  %71 = load i32, i32* %44, align 4
  %72 = load i32, i32* %45, align 4
  %73 = load i32, i32* %46, align 4
  %74 = load i32, i32* %20, align 4
  %75 = icmp eq i32 %71, %74
  br i1 %75, label %78, label %76

76:                                               ; preds = %70
  %77 = icmp sgt i32 %71, %74
  br i1 %77, label %151, label %86

78:                                               ; preds = %70
  %79 = load i32, i32* %21, align 4
  %80 = icmp eq i32 %72, %79
  br i1 %80, label %83, label %81

81:                                               ; preds = %78
  %82 = icmp sgt i32 %72, %79
  br i1 %82, label %151, label %86

83:                                               ; preds = %78
  %84 = load i32, i32* %22, align 4
  %85 = icmp sgt i32 %73, %84
  br i1 %85, label %151, label %86

86:                                               ; preds = %81, %76, %83
  %87 = call zeroext i1 @_ZNK17CPVT_VariableText8Iterator7GetWordER9CPVT_Word(%"class.CPVT_VariableText::Iterator"* %14, %class.CPVT_Word* nonnull dereferenceable(48) %4) #12
  %88 = call zeroext i1 @_ZNK17CPVT_VariableText8Iterator7GetLineER9CPVT_Line(%"class.CPVT_VariableText::Iterator"* %14, %class.CPVT_Line* nonnull dereferenceable(44) %5) #12
  %89 = load i32, i32* %17, align 4
  %90 = icmp eq i32 %71, %89
  %91 = sub nsw i32 %71, %89
  %92 = load i32, i32* %18, align 4
  %93 = sub nsw i32 %72, %92
  %94 = select i1 %90, i32 %93, i32 %91
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %104, label %96

96:                                               ; preds = %86
  %97 = load i32, i32* %20, align 4
  %98 = icmp eq i32 %71, %97
  %99 = sub nsw i32 %71, %97
  %100 = load i32, i32* %21, align 4
  %101 = sub nsw i32 %72, %100
  %102 = select i1 %98, i32 %101, i32 %99
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %125

104:                                              ; preds = %96, %86
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %59) #12
  %105 = load float, float* %30, align 4
  %106 = load float, float* %36, align 4
  %107 = load float, float* %39, align 4
  %108 = fadd float %106, %107
  %109 = load float, float* %64, align 4
  %110 = fadd float %105, %109
  %111 = load float, float* %38, align 4
  %112 = fadd float %106, %111
  store float %105, float* %60, align 4
  store float %108, float* %61, align 4
  store float %110, float* %62, align 4
  store float %112, float* %63, align 4
  %113 = load %class.CPWL_Edit*, %class.CPWL_Edit** %52, align 8
  %114 = icmp eq %class.CPWL_Edit* %113, null
  br i1 %114, label %148, label %115

115:                                              ; preds = %104
  %116 = load i8, i8* %53, align 1, !range !8
  %117 = icmp eq i8 %116, 0
  br i1 %117, label %118, label %148

118:                                              ; preds = %115
  store i8 1, i8* %53, align 1
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %65) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 -1, i64 16, i1 false)
  %119 = call { <2 x float>, <2 x float> } @_ZNK13CPWL_EditImpl8VTToEditERK13CFX_FloatRect(%class.CPWL_EditImpl* %0, %class.CFX_FloatRect* nonnull dereferenceable(16) %6)
  %120 = extractvalue { <2 x float>, <2 x float> } %119, 0
  store <2 x float> %120, <2 x float>* %66, align 8
  %121 = extractvalue { <2 x float>, <2 x float> } %119, 1
  store <2 x float> %121, <2 x float>* %67, align 8
  %122 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %57, align 8
  %123 = call zeroext i1 @_ZN8CPWL_Wnd14InvalidateRectEPK13CFX_FloatRect(%class.CPWL_Wnd* %122, %class.CFX_FloatRect* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %65) #12
  br i1 %58, label %148, label %124

124:                                              ; preds = %118
  store i8 0, i8* %53, align 1
  br label %148

125:                                              ; preds = %96
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %47) #12
  %126 = load float, float* %35, align 4
  %127 = load float, float* %36, align 4
  %128 = load float, float* %39, align 4
  %129 = fadd float %127, %128
  %130 = load float, float* %37, align 4
  %131 = fadd float %126, %130
  %132 = load float, float* %38, align 4
  %133 = fadd float %127, %132
  store float %126, float* %48, align 4
  store float %129, float* %49, align 4
  store float %131, float* %50, align 4
  store float %133, float* %51, align 4
  %134 = load %class.CPWL_Edit*, %class.CPWL_Edit** %52, align 8
  %135 = icmp eq %class.CPWL_Edit* %134, null
  br i1 %135, label %146, label %136

136:                                              ; preds = %125
  %137 = load i8, i8* %53, align 1, !range !8
  %138 = icmp eq i8 %137, 0
  br i1 %138, label %139, label %146

139:                                              ; preds = %136
  store i8 1, i8* %53, align 1
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %68, i8 -1, i64 16, i1 false)
  %140 = call { <2 x float>, <2 x float> } @_ZNK13CPWL_EditImpl8VTToEditERK13CFX_FloatRect(%class.CPWL_EditImpl* %0, %class.CFX_FloatRect* nonnull dereferenceable(16) %9)
  %141 = extractvalue { <2 x float>, <2 x float> } %140, 0
  store <2 x float> %141, <2 x float>* %55, align 8
  %142 = extractvalue { <2 x float>, <2 x float> } %140, 1
  store <2 x float> %142, <2 x float>* %56, align 8
  %143 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %57, align 8
  %144 = call zeroext i1 @_ZN8CPWL_Wnd14InvalidateRectEPK13CFX_FloatRect(%class.CPWL_Wnd* %143, %class.CFX_FloatRect* nonnull %11) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54) #12
  br i1 %58, label %146, label %145

145:                                              ; preds = %139
  store i8 0, i8* %53, align 1
  br label %146

146:                                              ; preds = %125, %145, %139, %136
  %147 = call zeroext i1 @_ZN17CPVT_VariableText8Iterator8NextLineEv(%"class.CPVT_VariableText::Iterator"* %14) #12
  br label %148

148:                                              ; preds = %115, %118, %124, %104, %146
  %149 = phi i8* [ %47, %146 ], [ %59, %104 ], [ %59, %124 ], [ %59, %118 ], [ %59, %115 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %149) #12
  %150 = call zeroext i1 @_ZN17CPVT_VariableText8Iterator8NextWordEv(%"class.CPVT_VariableText::Iterator"* %14) #12
  br i1 %150, label %70, label %151

151:                                              ; preds = %148, %83, %76, %81, %2
  call void @llvm.lifetime.end.p0i8(i64 44, i8* nonnull %34) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %26) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #12
  ret void
}

declare zeroext i1 @_ZN9CPWL_Edit8SetCaretEbRK13CFX_PTemplateIfES3_(%class.CPWL_Edit*, i1 zeroext, %class.CFX_PTemplate* dereferenceable(8), %class.CFX_PTemplate* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl11OnMouseDownERK13CFX_PTemplateIfEbb(%class.CPWL_EditImpl*, %class.CFX_PTemplate* nocapture readonly dereferenceable(8), i1 zeroext, i1 zeroext) local_unnamed_addr #2 align 2 {
  %5 = alloca %class.CFX_PTemplate, align 4
  %6 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %7 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %6, align 8
  %8 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %7, i64 0, i32 0
  %9 = load i8, i8* %8, align 8, !range !8
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %92, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11
  %13 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"class.CPWL_EditImpl::SelectState", %"class.CPWL_EditImpl::SelectState"* %12, i64 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %14, %16
  br i1 %17, label %18, label %30

18:                                               ; preds = %11
  %19 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %20, %22
  br i1 %23, label %24, label %30

24:                                               ; preds = %18
  %25 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %26, %28
  br i1 %29, label %33, label %30

30:                                               ; preds = %24, %18, %11
  %31 = bitcast %"class.CPWL_EditImpl::SelectState"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %31, i8 -1, i64 24, i1 false) #12
  tail call void @_ZN13CPWL_EditImpl7RefreshEv(%class.CPWL_EditImpl* %0) #12
  %32 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %6, align 8
  br label %33

33:                                               ; preds = %24, %30
  %34 = phi %class.CPVT_VariableText* [ %7, %24 ], [ %32, %30 ]
  %35 = bitcast %class.CFX_PTemplate* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #12
  %36 = tail call { <2 x float>, <2 x float> } @_ZNK17CPVT_VariableText14GetContentRectEv(%class.CPVT_VariableText* %34) #12, !noalias !69
  %37 = extractvalue { <2 x float>, <2 x float> } %36, 0
  %38 = extractvalue { <2 x float>, <2 x float> } %36, 1
  %39 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %6, align 8, !noalias !69
  %40 = tail call dereferenceable(16) %class.CFX_FloatRect* @_ZNK17CPVT_VariableText12GetPlateRectEv(%class.CPVT_VariableText* %39) #12, !noalias !69
  %41 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %40, i64 0, i32 0
  %42 = load float, float* %41, align 4, !noalias !69
  %43 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %40, i64 0, i32 1
  %44 = load float, float* %43, align 4, !noalias !69
  %45 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %40, i64 0, i32 3
  %46 = load float, float* %45, align 4, !noalias !69
  %47 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 5
  %48 = load i32, i32* %47, align 8, !noalias !69
  switch i32 %48, label %62 [
    i32 2, label %56
    i32 1, label %49
  ]

49:                                               ; preds = %33
  %50 = fsub float %46, %44
  %51 = extractelement <2 x float> %38, i32 1
  %52 = extractelement <2 x float> %37, i32 1
  %53 = fsub float %51, %52
  %54 = fsub float %50, %53
  %55 = fmul float %54, 5.000000e-01
  br label %62

56:                                               ; preds = %33
  %57 = fsub float %46, %44
  %58 = extractelement <2 x float> %38, i32 1
  %59 = extractelement <2 x float> %37, i32 1
  %60 = fsub float %58, %59
  %61 = fsub float %57, %60
  br label %62

62:                                               ; preds = %33, %49, %56
  %63 = phi float [ %61, %56 ], [ %55, %49 ], [ 0.000000e+00, %33 ]
  %64 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %1, i64 0, i32 0
  %65 = load float, float* %64, align 4, !noalias !69
  %66 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 12, i32 0
  %67 = load float, float* %66, align 8, !noalias !69
  %68 = fsub float %67, %42
  %69 = fadd float %65, %68
  %70 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %1, i64 0, i32 1
  %71 = load float, float* %70, align 4, !noalias !69
  %72 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 12, i32 1
  %73 = load float, float* %72, align 4, !noalias !69
  %74 = fadd float %63, %73
  %75 = fsub float %74, %46
  %76 = fadd float %71, %75
  %77 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %5, i64 0, i32 0
  store float %69, float* %77, align 4, !alias.scope !69
  %78 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %5, i64 0, i32 1
  store float %76, float* %78, align 4, !alias.scope !69
  %79 = call { i64, i32 } @_ZNK17CPVT_VariableText15SearchWordPlaceERK13CFX_PTemplateIfE(%class.CPVT_VariableText* %34, %class.CFX_PTemplate* nonnull dereferenceable(8) %5) #12
  %80 = extractvalue { i64, i32 } %79, 0
  %81 = extractvalue { i64, i32 } %79, 1
  %82 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9
  %83 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 10
  %84 = bitcast %struct.CPVT_WordPlace* %83 to i8*
  %85 = bitcast %struct.CPVT_WordPlace* %82 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %84, i8* align 4 %85, i64 12, i1 false) #12
  %86 = bitcast %struct.CPVT_WordPlace* %82 to i64*
  store i64 %80, i64* %86, align 8
  %87 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9, i32 2
  store i32 %81, i32* %87, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #12
  %88 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11
  %89 = bitcast %"class.CPWL_EditImpl::SelectState"* %88 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %89, i8* align 4 %85, i64 12, i1 false) #12
  %90 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1
  %91 = bitcast %struct.CPVT_WordPlace* %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %91, i8* align 4 %85, i64 12, i1 false) #12
  call void @_ZN13CPWL_EditImpl13ScrollToCaretEv(%class.CPWL_EditImpl* %0)
  call void @_ZN13CPWL_EditImpl14SetCaretOriginEv(%class.CPWL_EditImpl* %0)
  call void @_ZN13CPWL_EditImpl12SetCaretInfoEv(%class.CPWL_EditImpl* %0)
  br label %92

92:                                               ; preds = %4, %62
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl11OnMouseMoveERK13CFX_PTemplateIfEbb(%class.CPWL_EditImpl*, %class.CFX_PTemplate* nocapture readonly dereferenceable(8), i1 zeroext, i1 zeroext) local_unnamed_addr #2 align 2 {
  %5 = alloca %class.CFX_PTemplate, align 4
  %6 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %7 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %6, align 8
  %8 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %7, i64 0, i32 0
  %9 = load i8, i8* %8, align 8, !range !8
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %82, label %11

11:                                               ; preds = %4
  %12 = bitcast %class.CFX_PTemplate* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #12
  %13 = tail call { <2 x float>, <2 x float> } @_ZNK17CPVT_VariableText14GetContentRectEv(%class.CPVT_VariableText* %7) #12, !noalias !72
  %14 = extractvalue { <2 x float>, <2 x float> } %13, 0
  %15 = extractvalue { <2 x float>, <2 x float> } %13, 1
  %16 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %6, align 8, !noalias !72
  %17 = tail call dereferenceable(16) %class.CFX_FloatRect* @_ZNK17CPVT_VariableText12GetPlateRectEv(%class.CPVT_VariableText* %16) #12, !noalias !72
  %18 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %17, i64 0, i32 0
  %19 = load float, float* %18, align 4, !noalias !72
  %20 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %17, i64 0, i32 1
  %21 = load float, float* %20, align 4, !noalias !72
  %22 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %17, i64 0, i32 3
  %23 = load float, float* %22, align 4, !noalias !72
  %24 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 5
  %25 = load i32, i32* %24, align 8, !noalias !72
  switch i32 %25, label %39 [
    i32 2, label %33
    i32 1, label %26
  ]

26:                                               ; preds = %11
  %27 = fsub float %23, %21
  %28 = extractelement <2 x float> %15, i32 1
  %29 = extractelement <2 x float> %14, i32 1
  %30 = fsub float %28, %29
  %31 = fsub float %27, %30
  %32 = fmul float %31, 5.000000e-01
  br label %39

33:                                               ; preds = %11
  %34 = fsub float %23, %21
  %35 = extractelement <2 x float> %15, i32 1
  %36 = extractelement <2 x float> %14, i32 1
  %37 = fsub float %35, %36
  %38 = fsub float %34, %37
  br label %39

39:                                               ; preds = %11, %26, %33
  %40 = phi float [ %38, %33 ], [ %32, %26 ], [ 0.000000e+00, %11 ]
  %41 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %1, i64 0, i32 0
  %42 = load float, float* %41, align 4, !noalias !72
  %43 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 12, i32 0
  %44 = load float, float* %43, align 8, !noalias !72
  %45 = fsub float %44, %19
  %46 = fadd float %42, %45
  %47 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %1, i64 0, i32 1
  %48 = load float, float* %47, align 4, !noalias !72
  %49 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 12, i32 1
  %50 = load float, float* %49, align 4, !noalias !72
  %51 = fadd float %40, %50
  %52 = fsub float %51, %23
  %53 = fadd float %48, %52
  %54 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %5, i64 0, i32 0
  store float %46, float* %54, align 4, !alias.scope !72
  %55 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %5, i64 0, i32 1
  store float %53, float* %55, align 4, !alias.scope !72
  %56 = call { i64, i32 } @_ZNK17CPVT_VariableText15SearchWordPlaceERK13CFX_PTemplateIfE(%class.CPVT_VariableText* %7, %class.CFX_PTemplate* nonnull dereferenceable(8) %5) #12
  %57 = extractvalue { i64, i32 } %56, 0
  %58 = extractvalue { i64, i32 } %56, 1
  %59 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9
  %60 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 10
  %61 = bitcast %struct.CPVT_WordPlace* %60 to i8*
  %62 = bitcast %struct.CPVT_WordPlace* %59 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %61, i8* align 4 %62, i64 12, i1 false) #12
  %63 = bitcast %struct.CPVT_WordPlace* %59 to i64*
  store i64 %57, i64* %63, align 8
  %64 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9, i32 2
  store i32 %58, i32* %64, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #12
  %65 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %60, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = trunc i64 %57 to i32
  %68 = icmp eq i32 %66, %67
  br i1 %68, label %69, label %79

69:                                               ; preds = %39
  %70 = lshr i64 %57, 32
  %71 = trunc i64 %70 to i32
  %72 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 10, i32 1
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, %71
  br i1 %74, label %75, label %79

75:                                               ; preds = %69
  %76 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 10, i32 2
  %77 = load i32, i32* %76, align 4
  %78 = icmp eq i32 %77, %58
  br i1 %78, label %82, label %79

79:                                               ; preds = %39, %69, %75
  %80 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1
  %81 = bitcast %struct.CPVT_WordPlace* %80 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %81, i8* align 4 %62, i64 12, i1 false) #12
  call void @_ZN13CPWL_EditImpl13ScrollToCaretEv(%class.CPWL_EditImpl* %0)
  call void @_ZN13CPWL_EditImpl7RefreshEv(%class.CPWL_EditImpl* %0)
  call void @_ZN13CPWL_EditImpl14SetCaretOriginEv(%class.CPWL_EditImpl* %0)
  call void @_ZN13CPWL_EditImpl12SetCaretInfoEv(%class.CPWL_EditImpl* %0)
  br label %82

82:                                               ; preds = %4, %75, %79
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl11SelectState9SetEndPosERK14CPVT_WordPlace(%"class.CPWL_EditImpl::SelectState"* nocapture, %struct.CPVT_WordPlace* nocapture readonly dereferenceable(12)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.CPWL_EditImpl::SelectState", %"class.CPWL_EditImpl::SelectState"* %0, i64 0, i32 1
  %4 = bitcast %struct.CPVT_WordPlace* %3 to i8*
  %5 = bitcast %struct.CPVT_WordPlace* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 12, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl7OnVK_UPEbb(%class.CPWL_EditImpl*, i1 zeroext, i1 zeroext) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %5 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %4, align 8
  %6 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %5, i64 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %86, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9
  %11 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 16
  %12 = tail call { i64, i32 } @_ZNK17CPVT_VariableText14GetUpWordPlaceERK14CPVT_WordPlaceRK13CFX_PTemplateIfE(%class.CPVT_VariableText* %5, %struct.CPVT_WordPlace* dereferenceable(12) %10, %class.CFX_PTemplate* dereferenceable(8) %11) #12
  %13 = extractvalue { i64, i32 } %12, 0
  %14 = extractvalue { i64, i32 } %12, 1
  %15 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 10
  %16 = bitcast %struct.CPVT_WordPlace* %15 to i8*
  %17 = bitcast %struct.CPVT_WordPlace* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %17, i64 12, i1 false) #12
  %18 = bitcast %struct.CPVT_WordPlace* %10 to i64*
  store i64 %13, i64* %18, align 8
  %19 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9, i32 2
  store i32 %14, i32* %19, align 8
  %20 = trunc i64 %13 to i32
  %21 = lshr i64 %13, 32
  %22 = trunc i64 %21 to i32
  br i1 %1, label %23, label %59

23:                                               ; preds = %9
  %24 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11
  %25 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.CPWL_EditImpl::SelectState", %"class.CPWL_EditImpl::SelectState"* %24, i64 0, i32 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %26, %28
  br i1 %29, label %30, label %44

30:                                               ; preds = %23
  %31 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 0, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %32, %34
  br i1 %35, label %36, label %44

36:                                               ; preds = %30
  %37 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 0, i32 2
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %38, %40
  br i1 %41, label %42, label %44

42:                                               ; preds = %36
  %43 = bitcast %"class.CPWL_EditImpl::SelectState"* %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %43, i8* align 4 %16, i64 12, i1 false) #12
  br label %44

44:                                               ; preds = %36, %30, %23, %42
  %45 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1
  %46 = bitcast %struct.CPVT_WordPlace* %45 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %46, i8* align 4 %17, i64 12, i1 false) #12
  %47 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %15, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %48, %20
  br i1 %49, label %50, label %58

50:                                               ; preds = %44
  %51 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 10, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, %22
  br i1 %53, label %54, label %58

54:                                               ; preds = %50
  %55 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 10, i32 2
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %14, %56
  br i1 %57, label %86, label %58

58:                                               ; preds = %54, %44, %50
  tail call void @_ZN13CPWL_EditImpl13ScrollToCaretEv(%class.CPWL_EditImpl* %0)
  tail call void @_ZN13CPWL_EditImpl7RefreshEv(%class.CPWL_EditImpl* %0)
  tail call void @_ZN13CPWL_EditImpl12SetCaretInfoEv(%class.CPWL_EditImpl* %0)
  br label %86

59:                                               ; preds = %9
  %60 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %4, align 8
  %61 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %60, i64 0, i32 0
  %62 = load i8, i8* %61, align 8, !range !8
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %85, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11
  %66 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = getelementptr inbounds %"class.CPWL_EditImpl::SelectState", %"class.CPWL_EditImpl::SelectState"* %65, i64 0, i32 0, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %67, %69
  br i1 %70, label %71, label %83

71:                                               ; preds = %64
  %72 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 1
  %73 = load i32, i32* %72, align 4
  %74 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 0, i32 1
  %75 = load i32, i32* %74, align 4
  %76 = icmp eq i32 %73, %75
  br i1 %76, label %77, label %83

77:                                               ; preds = %71
  %78 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 2
  %79 = load i32, i32* %78, align 4
  %80 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = icmp eq i32 %79, %81
  br i1 %82, label %85, label %83

83:                                               ; preds = %77, %71, %64
  %84 = bitcast %"class.CPWL_EditImpl::SelectState"* %65 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %84, i8 -1, i64 24, i1 false) #12
  tail call void @_ZN13CPWL_EditImpl7RefreshEv(%class.CPWL_EditImpl* %0) #12
  br label %85

85:                                               ; preds = %59, %77, %83
  tail call void @_ZN13CPWL_EditImpl13ScrollToCaretEv(%class.CPWL_EditImpl* %0)
  tail call void @_ZN13CPWL_EditImpl12SetCaretInfoEv(%class.CPWL_EditImpl* %0)
  br label %86

86:                                               ; preds = %54, %3, %58, %85
  ret void
}

declare { i64, i32 } @_ZNK17CPVT_VariableText14GetUpWordPlaceERK14CPVT_WordPlaceRK13CFX_PTemplateIfE(%class.CPVT_VariableText*, %struct.CPVT_WordPlace* dereferenceable(12), %class.CFX_PTemplate* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl9OnVK_DOWNEbb(%class.CPWL_EditImpl*, i1 zeroext, i1 zeroext) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %5 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %4, align 8
  %6 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %5, i64 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %86, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9
  %11 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 16
  %12 = tail call { i64, i32 } @_ZNK17CPVT_VariableText16GetDownWordPlaceERK14CPVT_WordPlaceRK13CFX_PTemplateIfE(%class.CPVT_VariableText* %5, %struct.CPVT_WordPlace* dereferenceable(12) %10, %class.CFX_PTemplate* dereferenceable(8) %11) #12
  %13 = extractvalue { i64, i32 } %12, 0
  %14 = extractvalue { i64, i32 } %12, 1
  %15 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 10
  %16 = bitcast %struct.CPVT_WordPlace* %15 to i8*
  %17 = bitcast %struct.CPVT_WordPlace* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %17, i64 12, i1 false) #12
  %18 = bitcast %struct.CPVT_WordPlace* %10 to i64*
  store i64 %13, i64* %18, align 8
  %19 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9, i32 2
  store i32 %14, i32* %19, align 8
  %20 = trunc i64 %13 to i32
  %21 = lshr i64 %13, 32
  %22 = trunc i64 %21 to i32
  br i1 %1, label %23, label %59

23:                                               ; preds = %9
  %24 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11
  %25 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.CPWL_EditImpl::SelectState", %"class.CPWL_EditImpl::SelectState"* %24, i64 0, i32 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %26, %28
  br i1 %29, label %30, label %44

30:                                               ; preds = %23
  %31 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 0, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %32, %34
  br i1 %35, label %36, label %44

36:                                               ; preds = %30
  %37 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 0, i32 2
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %38, %40
  br i1 %41, label %42, label %44

42:                                               ; preds = %36
  %43 = bitcast %"class.CPWL_EditImpl::SelectState"* %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %43, i8* align 4 %16, i64 12, i1 false) #12
  br label %44

44:                                               ; preds = %36, %30, %23, %42
  %45 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1
  %46 = bitcast %struct.CPVT_WordPlace* %45 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %46, i8* align 4 %17, i64 12, i1 false) #12
  %47 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %15, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %48, %20
  br i1 %49, label %50, label %58

50:                                               ; preds = %44
  %51 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 10, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, %22
  br i1 %53, label %54, label %58

54:                                               ; preds = %50
  %55 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 10, i32 2
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %14, %56
  br i1 %57, label %86, label %58

58:                                               ; preds = %54, %44, %50
  tail call void @_ZN13CPWL_EditImpl13ScrollToCaretEv(%class.CPWL_EditImpl* %0)
  tail call void @_ZN13CPWL_EditImpl7RefreshEv(%class.CPWL_EditImpl* %0)
  tail call void @_ZN13CPWL_EditImpl12SetCaretInfoEv(%class.CPWL_EditImpl* %0)
  br label %86

59:                                               ; preds = %9
  %60 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %4, align 8
  %61 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %60, i64 0, i32 0
  %62 = load i8, i8* %61, align 8, !range !8
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %85, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11
  %66 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = getelementptr inbounds %"class.CPWL_EditImpl::SelectState", %"class.CPWL_EditImpl::SelectState"* %65, i64 0, i32 0, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %67, %69
  br i1 %70, label %71, label %83

71:                                               ; preds = %64
  %72 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 1
  %73 = load i32, i32* %72, align 4
  %74 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 0, i32 1
  %75 = load i32, i32* %74, align 4
  %76 = icmp eq i32 %73, %75
  br i1 %76, label %77, label %83

77:                                               ; preds = %71
  %78 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 2
  %79 = load i32, i32* %78, align 4
  %80 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = icmp eq i32 %79, %81
  br i1 %82, label %85, label %83

83:                                               ; preds = %77, %71, %64
  %84 = bitcast %"class.CPWL_EditImpl::SelectState"* %65 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %84, i8 -1, i64 24, i1 false) #12
  tail call void @_ZN13CPWL_EditImpl7RefreshEv(%class.CPWL_EditImpl* %0) #12
  br label %85

85:                                               ; preds = %59, %77, %83
  tail call void @_ZN13CPWL_EditImpl13ScrollToCaretEv(%class.CPWL_EditImpl* %0)
  tail call void @_ZN13CPWL_EditImpl12SetCaretInfoEv(%class.CPWL_EditImpl* %0)
  br label %86

86:                                               ; preds = %54, %3, %58, %85
  ret void
}

declare { i64, i32 } @_ZNK17CPVT_VariableText16GetDownWordPlaceERK14CPVT_WordPlaceRK13CFX_PTemplateIfE(%class.CPVT_VariableText*, %struct.CPVT_WordPlace* dereferenceable(12), %class.CFX_PTemplate* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl9OnVK_LEFTEbb(%class.CPWL_EditImpl*, i1 zeroext, i1 zeroext) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %5 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %4, align 8
  %6 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %5, i64 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %225, label %9

9:                                                ; preds = %3
  br i1 %1, label %10, label %102

10:                                               ; preds = %9
  %11 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9
  %12 = tail call { i64, i32 } @_ZNK17CPVT_VariableText17GetLineBeginPlaceERK14CPVT_WordPlace(%class.CPVT_VariableText* %5, %struct.CPVT_WordPlace* dereferenceable(12) %11) #12
  %13 = extractvalue { i64, i32 } %12, 0
  %14 = extractvalue { i64, i32 } %12, 1
  %15 = trunc i64 %13 to i32
  %16 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %11, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, %15
  br i1 %18, label %19, label %54

19:                                               ; preds = %10
  %20 = lshr i64 %13, 32
  %21 = trunc i64 %20 to i32
  %22 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, %21
  br i1 %24, label %25, label %54

25:                                               ; preds = %19
  %26 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %14, %27
  br i1 %28, label %29, label %54

29:                                               ; preds = %25
  %30 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %4, align 8
  %31 = tail call { i64, i32 } @_ZNK17CPVT_VariableText20GetSectionBeginPlaceERK14CPVT_WordPlace(%class.CPVT_VariableText* %30, %struct.CPVT_WordPlace* dereferenceable(12) %11) #12
  %32 = extractvalue { i64, i32 } %31, 0
  %33 = extractvalue { i64, i32 } %31, 1
  %34 = trunc i64 %32 to i32
  %35 = load i32, i32* %16, align 4
  %36 = icmp eq i32 %35, %34
  br i1 %36, label %37, label %45

37:                                               ; preds = %29
  %38 = lshr i64 %32, 32
  %39 = trunc i64 %38 to i32
  %40 = load i32, i32* %22, align 4
  %41 = icmp eq i32 %40, %39
  br i1 %41, label %42, label %45

42:                                               ; preds = %37
  %43 = load i32, i32* %26, align 4
  %44 = icmp eq i32 %33, %43
  br i1 %44, label %54, label %45

45:                                               ; preds = %42, %29, %37
  %46 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %4, align 8
  %47 = tail call { i64, i32 } @_ZNK17CPVT_VariableText16GetPrevWordPlaceERK14CPVT_WordPlace(%class.CPVT_VariableText* %46, %struct.CPVT_WordPlace* dereferenceable(12) %11) #12
  %48 = extractvalue { i64, i32 } %47, 0
  %49 = extractvalue { i64, i32 } %47, 1
  %50 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 10
  %51 = bitcast %struct.CPVT_WordPlace* %50 to i8*
  %52 = bitcast %struct.CPVT_WordPlace* %11 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %51, i8* align 4 %52, i64 12, i1 false) #12
  %53 = bitcast %struct.CPVT_WordPlace* %11 to i64*
  store i64 %48, i64* %53, align 8
  store i32 %49, i32* %26, align 8
  br label %54

54:                                               ; preds = %42, %10, %19, %25, %45
  %55 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %4, align 8
  %56 = tail call { i64, i32 } @_ZNK17CPVT_VariableText16GetPrevWordPlaceERK14CPVT_WordPlace(%class.CPVT_VariableText* %55, %struct.CPVT_WordPlace* dereferenceable(12) %11) #12
  %57 = extractvalue { i64, i32 } %56, 0
  %58 = extractvalue { i64, i32 } %56, 1
  %59 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 10
  %60 = bitcast %struct.CPVT_WordPlace* %59 to i8*
  %61 = bitcast %struct.CPVT_WordPlace* %11 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %60, i8* align 4 %61, i64 12, i1 false) #12
  %62 = bitcast %struct.CPVT_WordPlace* %11 to i64*
  store i64 %57, i64* %62, align 8
  %63 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9, i32 2
  store i32 %58, i32* %63, align 8
  %64 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11
  %65 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = getelementptr inbounds %"class.CPWL_EditImpl::SelectState", %"class.CPWL_EditImpl::SelectState"* %64, i64 0, i32 0, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %66, %68
  %70 = trunc i64 %57 to i32
  %71 = lshr i64 %57, 32
  %72 = trunc i64 %71 to i32
  br i1 %69, label %73, label %87

73:                                               ; preds = %54
  %74 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 1
  %75 = load i32, i32* %74, align 4
  %76 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 0, i32 1
  %77 = load i32, i32* %76, align 4
  %78 = icmp eq i32 %75, %77
  br i1 %78, label %79, label %87

79:                                               ; preds = %73
  %80 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 0, i32 2
  %83 = load i32, i32* %82, align 4
  %84 = icmp eq i32 %81, %83
  br i1 %84, label %85, label %87

85:                                               ; preds = %79
  %86 = bitcast %"class.CPWL_EditImpl::SelectState"* %64 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %86, i8* align 4 %60, i64 12, i1 false) #12
  br label %87

87:                                               ; preds = %79, %73, %54, %85
  %88 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1
  %89 = bitcast %struct.CPVT_WordPlace* %88 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %89, i8* align 4 %61, i64 12, i1 false) #12
  %90 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %59, i64 0, i32 0
  %91 = load i32, i32* %90, align 4
  %92 = icmp eq i32 %91, %70
  br i1 %92, label %93, label %101

93:                                               ; preds = %87
  %94 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 10, i32 1
  %95 = load i32, i32* %94, align 4
  %96 = icmp eq i32 %95, %72
  br i1 %96, label %97, label %101

97:                                               ; preds = %93
  %98 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 10, i32 2
  %99 = load i32, i32* %98, align 4
  %100 = icmp eq i32 %58, %99
  br i1 %100, label %225, label %101

101:                                              ; preds = %97, %87, %93
  tail call void @_ZN13CPWL_EditImpl13ScrollToCaretEv(%class.CPWL_EditImpl* %0)
  tail call void @_ZN13CPWL_EditImpl7RefreshEv(%class.CPWL_EditImpl* %0)
  tail call void @_ZN13CPWL_EditImpl12SetCaretInfoEv(%class.CPWL_EditImpl* %0)
  br label %225

102:                                              ; preds = %9
  %103 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11
  %104 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 0
  %105 = load i32, i32* %104, align 4
  %106 = getelementptr inbounds %"class.CPWL_EditImpl::SelectState", %"class.CPWL_EditImpl::SelectState"* %103, i64 0, i32 0, i32 0
  %107 = load i32, i32* %106, align 4
  %108 = icmp eq i32 %105, %107
  br i1 %108, label %109, label %121

109:                                              ; preds = %102
  %110 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 1
  %111 = load i32, i32* %110, align 4
  %112 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 0, i32 1
  %113 = load i32, i32* %112, align 4
  %114 = icmp eq i32 %111, %113
  br i1 %114, label %115, label %124

115:                                              ; preds = %109
  %116 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 2
  %117 = load i32, i32* %116, align 4
  %118 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 0, i32 2
  %119 = load i32, i32* %118, align 4
  %120 = icmp eq i32 %117, %119
  br i1 %120, label %171, label %124

121:                                              ; preds = %102
  %122 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1
  %123 = icmp slt i32 %107, %105
  br i1 %123, label %139, label %145

124:                                              ; preds = %109, %115
  %125 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1
  %126 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 0, i32 1
  %127 = load i32, i32* %126, align 4
  %128 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 1
  %129 = load i32, i32* %128, align 4
  %130 = icmp eq i32 %127, %129
  br i1 %130, label %133, label %131

131:                                              ; preds = %124
  %132 = icmp slt i32 %127, %129
  br i1 %132, label %139, label %145

133:                                              ; preds = %124
  %134 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 0, i32 2
  %135 = load i32, i32* %134, align 4
  %136 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 2
  %137 = load i32, i32* %136, align 4
  %138 = icmp slt i32 %135, %137
  br i1 %138, label %139, label %145

139:                                              ; preds = %131, %121, %133
  %140 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9
  %141 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 10
  %142 = bitcast %struct.CPVT_WordPlace* %141 to i8*
  %143 = bitcast %struct.CPVT_WordPlace* %140 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %142, i8* align 4 %143, i64 12, i1 false) #12
  %144 = bitcast %"class.CPWL_EditImpl::SelectState"* %103 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %143, i8* align 4 %144, i64 12, i1 false) #12
  br label %152

145:                                              ; preds = %131, %121, %133
  %146 = phi %struct.CPVT_WordPlace* [ %125, %131 ], [ %122, %121 ], [ %125, %133 ]
  %147 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9
  %148 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 10
  %149 = bitcast %struct.CPVT_WordPlace* %148 to i8*
  %150 = bitcast %struct.CPVT_WordPlace* %147 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %149, i8* align 4 %150, i64 12, i1 false) #12
  %151 = bitcast %struct.CPVT_WordPlace* %146 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %150, i8* align 4 %151, i64 12, i1 false) #12
  br label %152

152:                                              ; preds = %145, %139
  %153 = load i8, i8* %6, align 8, !range !8
  %154 = icmp eq i8 %153, 0
  br i1 %154, label %170, label %155

155:                                              ; preds = %152
  br i1 %108, label %156, label %168

156:                                              ; preds = %155
  %157 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 1
  %158 = load i32, i32* %157, align 4
  %159 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 0, i32 1
  %160 = load i32, i32* %159, align 4
  %161 = icmp eq i32 %158, %160
  br i1 %161, label %162, label %168

162:                                              ; preds = %156
  %163 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 2
  %164 = load i32, i32* %163, align 4
  %165 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 0, i32 2
  %166 = load i32, i32* %165, align 4
  %167 = icmp eq i32 %164, %166
  br i1 %167, label %170, label %168

168:                                              ; preds = %162, %156, %155
  %169 = bitcast %"class.CPWL_EditImpl::SelectState"* %103 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %169, i8 -1, i64 24, i1 false) #12
  tail call void @_ZN13CPWL_EditImpl7RefreshEv(%class.CPWL_EditImpl* %0) #12
  br label %170

170:                                              ; preds = %152, %162, %168
  tail call void @_ZN13CPWL_EditImpl13ScrollToCaretEv(%class.CPWL_EditImpl* %0)
  tail call void @_ZN13CPWL_EditImpl12SetCaretInfoEv(%class.CPWL_EditImpl* %0)
  br label %225

171:                                              ; preds = %115
  %172 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9
  %173 = tail call { i64, i32 } @_ZNK17CPVT_VariableText17GetLineBeginPlaceERK14CPVT_WordPlace(%class.CPVT_VariableText* %5, %struct.CPVT_WordPlace* dereferenceable(12) %172) #12
  %174 = extractvalue { i64, i32 } %173, 0
  %175 = extractvalue { i64, i32 } %173, 1
  %176 = trunc i64 %174 to i32
  %177 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %172, i64 0, i32 0
  %178 = load i32, i32* %177, align 4
  %179 = icmp eq i32 %178, %176
  br i1 %179, label %180, label %215

180:                                              ; preds = %171
  %181 = lshr i64 %174, 32
  %182 = trunc i64 %181 to i32
  %183 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9, i32 1
  %184 = load i32, i32* %183, align 4
  %185 = icmp eq i32 %184, %182
  br i1 %185, label %186, label %215

186:                                              ; preds = %180
  %187 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9, i32 2
  %188 = load i32, i32* %187, align 4
  %189 = icmp eq i32 %175, %188
  br i1 %189, label %190, label %215

190:                                              ; preds = %186
  %191 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %4, align 8
  %192 = tail call { i64, i32 } @_ZNK17CPVT_VariableText20GetSectionBeginPlaceERK14CPVT_WordPlace(%class.CPVT_VariableText* %191, %struct.CPVT_WordPlace* dereferenceable(12) %172) #12
  %193 = extractvalue { i64, i32 } %192, 0
  %194 = extractvalue { i64, i32 } %192, 1
  %195 = trunc i64 %193 to i32
  %196 = load i32, i32* %177, align 4
  %197 = icmp eq i32 %196, %195
  br i1 %197, label %198, label %206

198:                                              ; preds = %190
  %199 = lshr i64 %193, 32
  %200 = trunc i64 %199 to i32
  %201 = load i32, i32* %183, align 4
  %202 = icmp eq i32 %201, %200
  br i1 %202, label %203, label %206

203:                                              ; preds = %198
  %204 = load i32, i32* %187, align 4
  %205 = icmp eq i32 %194, %204
  br i1 %205, label %215, label %206

206:                                              ; preds = %203, %190, %198
  %207 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %4, align 8
  %208 = tail call { i64, i32 } @_ZNK17CPVT_VariableText16GetPrevWordPlaceERK14CPVT_WordPlace(%class.CPVT_VariableText* %207, %struct.CPVT_WordPlace* dereferenceable(12) %172) #12
  %209 = extractvalue { i64, i32 } %208, 0
  %210 = extractvalue { i64, i32 } %208, 1
  %211 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 10
  %212 = bitcast %struct.CPVT_WordPlace* %211 to i8*
  %213 = bitcast %struct.CPVT_WordPlace* %172 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %212, i8* align 4 %213, i64 12, i1 false) #12
  %214 = bitcast %struct.CPVT_WordPlace* %172 to i64*
  store i64 %209, i64* %214, align 8
  store i32 %210, i32* %187, align 8
  br label %215

215:                                              ; preds = %203, %171, %180, %186, %206
  %216 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %4, align 8
  %217 = tail call { i64, i32 } @_ZNK17CPVT_VariableText16GetPrevWordPlaceERK14CPVT_WordPlace(%class.CPVT_VariableText* %216, %struct.CPVT_WordPlace* dereferenceable(12) %172) #12
  %218 = extractvalue { i64, i32 } %217, 0
  %219 = extractvalue { i64, i32 } %217, 1
  %220 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 10
  %221 = bitcast %struct.CPVT_WordPlace* %220 to i8*
  %222 = bitcast %struct.CPVT_WordPlace* %172 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %221, i8* align 4 %222, i64 12, i1 false) #12
  %223 = bitcast %struct.CPVT_WordPlace* %172 to i64*
  store i64 %218, i64* %223, align 8
  %224 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9, i32 2
  store i32 %219, i32* %224, align 8
  tail call void @_ZN13CPWL_EditImpl13ScrollToCaretEv(%class.CPWL_EditImpl* %0)
  tail call void @_ZN13CPWL_EditImpl14SetCaretOriginEv(%class.CPWL_EditImpl* %0)
  tail call void @_ZN13CPWL_EditImpl12SetCaretInfoEv(%class.CPWL_EditImpl* %0)
  br label %225

225:                                              ; preds = %97, %3, %170, %215, %101
  ret void
}

declare { i64, i32 } @_ZNK17CPVT_VariableText17GetLineBeginPlaceERK14CPVT_WordPlace(%class.CPVT_VariableText*, %struct.CPVT_WordPlace* dereferenceable(12)) local_unnamed_addr #3

declare { i64, i32 } @_ZNK17CPVT_VariableText20GetSectionBeginPlaceERK14CPVT_WordPlace(%class.CPVT_VariableText*, %struct.CPVT_WordPlace* dereferenceable(12)) local_unnamed_addr #3

declare { i64, i32 } @_ZNK17CPVT_VariableText16GetPrevWordPlaceERK14CPVT_WordPlace(%class.CPVT_VariableText*, %struct.CPVT_WordPlace* dereferenceable(12)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl10OnVK_RIGHTEbb(%class.CPWL_EditImpl*, i1 zeroext, i1 zeroext) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %5 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %4, align 8
  %6 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %5, i64 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %217, label %9

9:                                                ; preds = %3
  br i1 %1, label %10, label %99

10:                                               ; preds = %9
  %11 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9
  %12 = tail call { i64, i32 } @_ZNK17CPVT_VariableText16GetNextWordPlaceERK14CPVT_WordPlace(%class.CPVT_VariableText* %5, %struct.CPVT_WordPlace* dereferenceable(12) %11) #12
  %13 = extractvalue { i64, i32 } %12, 0
  %14 = extractvalue { i64, i32 } %12, 1
  %15 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 10
  %16 = bitcast %struct.CPVT_WordPlace* %15 to i8*
  %17 = bitcast %struct.CPVT_WordPlace* %11 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %17, i64 12, i1 false) #12
  %18 = bitcast %struct.CPVT_WordPlace* %11 to i64*
  store i64 %13, i64* %18, align 8
  %19 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9, i32 2
  store i32 %14, i32* %19, align 8
  %20 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %4, align 8
  %21 = tail call { i64, i32 } @_ZNK17CPVT_VariableText15GetLineEndPlaceERK14CPVT_WordPlace(%class.CPVT_VariableText* %20, %struct.CPVT_WordPlace* dereferenceable(12) %11) #12
  %22 = extractvalue { i64, i32 } %21, 0
  %23 = extractvalue { i64, i32 } %21, 1
  %24 = trunc i64 %22 to i32
  %25 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %11, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, %24
  br i1 %27, label %28, label %59

28:                                               ; preds = %10
  %29 = lshr i64 %22, 32
  %30 = trunc i64 %29 to i32
  %31 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, %30
  br i1 %33, label %34, label %59

34:                                               ; preds = %28
  %35 = load i32, i32* %19, align 4
  %36 = icmp eq i32 %23, %35
  br i1 %36, label %37, label %59

37:                                               ; preds = %34
  %38 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %4, align 8
  %39 = tail call { i64, i32 } @_ZNK17CPVT_VariableText18GetSectionEndPlaceERK14CPVT_WordPlace(%class.CPVT_VariableText* %38, %struct.CPVT_WordPlace* dereferenceable(12) %11) #12
  %40 = extractvalue { i64, i32 } %39, 0
  %41 = extractvalue { i64, i32 } %39, 1
  %42 = trunc i64 %40 to i32
  %43 = load i32, i32* %25, align 4
  %44 = icmp eq i32 %43, %42
  br i1 %44, label %45, label %53

45:                                               ; preds = %37
  %46 = lshr i64 %40, 32
  %47 = trunc i64 %46 to i32
  %48 = load i32, i32* %31, align 4
  %49 = icmp eq i32 %48, %47
  br i1 %49, label %50, label %53

50:                                               ; preds = %45
  %51 = load i32, i32* %19, align 4
  %52 = icmp eq i32 %41, %51
  br i1 %52, label %59, label %53

53:                                               ; preds = %50, %37, %45
  %54 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %4, align 8
  %55 = tail call { i64, i32 } @_ZNK17CPVT_VariableText16GetNextWordPlaceERK14CPVT_WordPlace(%class.CPVT_VariableText* %54, %struct.CPVT_WordPlace* dereferenceable(12) %11) #12
  %56 = extractvalue { i64, i32 } %55, 0
  %57 = extractvalue { i64, i32 } %55, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %17, i64 12, i1 false) #12
  store i64 %56, i64* %18, align 8
  store i32 %57, i32* %19, align 8
  %58 = trunc i64 %56 to i32
  br label %59

59:                                               ; preds = %50, %10, %28, %34, %53
  %60 = phi i32 [ %42, %50 ], [ %26, %10 ], [ %24, %28 ], [ %24, %34 ], [ %58, %53 ]
  %61 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11
  %62 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr inbounds %"class.CPWL_EditImpl::SelectState", %"class.CPWL_EditImpl::SelectState"* %61, i64 0, i32 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %63, %65
  br i1 %66, label %67, label %81

67:                                               ; preds = %59
  %68 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 1
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 0, i32 1
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %69, %71
  br i1 %72, label %73, label %81

73:                                               ; preds = %67
  %74 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 2
  %75 = load i32, i32* %74, align 4
  %76 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 0, i32 2
  %77 = load i32, i32* %76, align 4
  %78 = icmp eq i32 %75, %77
  br i1 %78, label %79, label %81

79:                                               ; preds = %73
  %80 = bitcast %"class.CPWL_EditImpl::SelectState"* %61 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %80, i8* align 4 %16, i64 12, i1 false) #12
  br label %81

81:                                               ; preds = %73, %67, %59, %79
  %82 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1
  %83 = bitcast %struct.CPVT_WordPlace* %82 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %83, i8* align 4 %17, i64 12, i1 false) #12
  %84 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %15, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = icmp eq i32 %60, %85
  br i1 %86, label %87, label %98

87:                                               ; preds = %81
  %88 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9, i32 1
  %89 = load i32, i32* %88, align 4
  %90 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 10, i32 1
  %91 = load i32, i32* %90, align 4
  %92 = icmp eq i32 %89, %91
  br i1 %92, label %93, label %98

93:                                               ; preds = %87
  %94 = load i32, i32* %19, align 4
  %95 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 10, i32 2
  %96 = load i32, i32* %95, align 4
  %97 = icmp eq i32 %94, %96
  br i1 %97, label %217, label %98

98:                                               ; preds = %93, %81, %87
  tail call void @_ZN13CPWL_EditImpl13ScrollToCaretEv(%class.CPWL_EditImpl* %0)
  tail call void @_ZN13CPWL_EditImpl7RefreshEv(%class.CPWL_EditImpl* %0)
  tail call void @_ZN13CPWL_EditImpl12SetCaretInfoEv(%class.CPWL_EditImpl* %0)
  br label %217

99:                                               ; preds = %9
  %100 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11
  %101 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 0
  %102 = load i32, i32* %101, align 4
  %103 = getelementptr inbounds %"class.CPWL_EditImpl::SelectState", %"class.CPWL_EditImpl::SelectState"* %100, i64 0, i32 0, i32 0
  %104 = load i32, i32* %103, align 4
  %105 = icmp eq i32 %102, %104
  br i1 %105, label %106, label %118

106:                                              ; preds = %99
  %107 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 1
  %108 = load i32, i32* %107, align 4
  %109 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 0, i32 1
  %110 = load i32, i32* %109, align 4
  %111 = icmp eq i32 %108, %110
  br i1 %111, label %112, label %121

112:                                              ; preds = %106
  %113 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 2
  %114 = load i32, i32* %113, align 4
  %115 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 0, i32 2
  %116 = load i32, i32* %115, align 4
  %117 = icmp eq i32 %114, %116
  br i1 %117, label %168, label %121

118:                                              ; preds = %99
  %119 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1
  %120 = icmp sgt i32 %104, %102
  br i1 %120, label %136, label %142

121:                                              ; preds = %106, %112
  %122 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1
  %123 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 0, i32 1
  %124 = load i32, i32* %123, align 4
  %125 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 1
  %126 = load i32, i32* %125, align 4
  %127 = icmp eq i32 %124, %126
  br i1 %127, label %130, label %128

128:                                              ; preds = %121
  %129 = icmp sgt i32 %124, %126
  br i1 %129, label %136, label %142

130:                                              ; preds = %121
  %131 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 0, i32 2
  %132 = load i32, i32* %131, align 4
  %133 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 2
  %134 = load i32, i32* %133, align 4
  %135 = icmp sgt i32 %132, %134
  br i1 %135, label %136, label %142

136:                                              ; preds = %128, %118, %130
  %137 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9
  %138 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 10
  %139 = bitcast %struct.CPVT_WordPlace* %138 to i8*
  %140 = bitcast %struct.CPVT_WordPlace* %137 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %139, i8* align 4 %140, i64 12, i1 false) #12
  %141 = bitcast %"class.CPWL_EditImpl::SelectState"* %100 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %140, i8* align 4 %141, i64 12, i1 false) #12
  br label %149

142:                                              ; preds = %128, %118, %130
  %143 = phi %struct.CPVT_WordPlace* [ %122, %128 ], [ %119, %118 ], [ %122, %130 ]
  %144 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9
  %145 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 10
  %146 = bitcast %struct.CPVT_WordPlace* %145 to i8*
  %147 = bitcast %struct.CPVT_WordPlace* %144 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %146, i8* align 4 %147, i64 12, i1 false) #12
  %148 = bitcast %struct.CPVT_WordPlace* %143 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %147, i8* align 4 %148, i64 12, i1 false) #12
  br label %149

149:                                              ; preds = %142, %136
  %150 = load i8, i8* %6, align 8, !range !8
  %151 = icmp eq i8 %150, 0
  br i1 %151, label %167, label %152

152:                                              ; preds = %149
  br i1 %105, label %153, label %165

153:                                              ; preds = %152
  %154 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 1
  %155 = load i32, i32* %154, align 4
  %156 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 0, i32 1
  %157 = load i32, i32* %156, align 4
  %158 = icmp eq i32 %155, %157
  br i1 %158, label %159, label %165

159:                                              ; preds = %153
  %160 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 2
  %161 = load i32, i32* %160, align 4
  %162 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 0, i32 2
  %163 = load i32, i32* %162, align 4
  %164 = icmp eq i32 %161, %163
  br i1 %164, label %167, label %165

165:                                              ; preds = %159, %153, %152
  %166 = bitcast %"class.CPWL_EditImpl::SelectState"* %100 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %166, i8 -1, i64 24, i1 false) #12
  tail call void @_ZN13CPWL_EditImpl7RefreshEv(%class.CPWL_EditImpl* %0) #12
  br label %167

167:                                              ; preds = %149, %159, %165
  tail call void @_ZN13CPWL_EditImpl13ScrollToCaretEv(%class.CPWL_EditImpl* %0)
  tail call void @_ZN13CPWL_EditImpl12SetCaretInfoEv(%class.CPWL_EditImpl* %0)
  br label %217

168:                                              ; preds = %112
  %169 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9
  %170 = tail call { i64, i32 } @_ZNK17CPVT_VariableText16GetNextWordPlaceERK14CPVT_WordPlace(%class.CPVT_VariableText* %5, %struct.CPVT_WordPlace* dereferenceable(12) %169) #12
  %171 = extractvalue { i64, i32 } %170, 0
  %172 = extractvalue { i64, i32 } %170, 1
  %173 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 10
  %174 = bitcast %struct.CPVT_WordPlace* %173 to i8*
  %175 = bitcast %struct.CPVT_WordPlace* %169 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %174, i8* align 4 %175, i64 12, i1 false) #12
  %176 = bitcast %struct.CPVT_WordPlace* %169 to i64*
  store i64 %171, i64* %176, align 8
  %177 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9, i32 2
  store i32 %172, i32* %177, align 8
  %178 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %4, align 8
  %179 = tail call { i64, i32 } @_ZNK17CPVT_VariableText15GetLineEndPlaceERK14CPVT_WordPlace(%class.CPVT_VariableText* %178, %struct.CPVT_WordPlace* dereferenceable(12) %169) #12
  %180 = extractvalue { i64, i32 } %179, 0
  %181 = extractvalue { i64, i32 } %179, 1
  %182 = trunc i64 %180 to i32
  %183 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %169, i64 0, i32 0
  %184 = load i32, i32* %183, align 4
  %185 = icmp eq i32 %184, %182
  br i1 %185, label %186, label %216

186:                                              ; preds = %168
  %187 = lshr i64 %180, 32
  %188 = trunc i64 %187 to i32
  %189 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9, i32 1
  %190 = load i32, i32* %189, align 4
  %191 = icmp eq i32 %190, %188
  br i1 %191, label %192, label %216

192:                                              ; preds = %186
  %193 = load i32, i32* %177, align 4
  %194 = icmp eq i32 %181, %193
  br i1 %194, label %195, label %216

195:                                              ; preds = %192
  %196 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %4, align 8
  %197 = tail call { i64, i32 } @_ZNK17CPVT_VariableText18GetSectionEndPlaceERK14CPVT_WordPlace(%class.CPVT_VariableText* %196, %struct.CPVT_WordPlace* dereferenceable(12) %169) #12
  %198 = extractvalue { i64, i32 } %197, 0
  %199 = extractvalue { i64, i32 } %197, 1
  %200 = trunc i64 %198 to i32
  %201 = load i32, i32* %183, align 4
  %202 = icmp eq i32 %201, %200
  br i1 %202, label %203, label %211

203:                                              ; preds = %195
  %204 = lshr i64 %198, 32
  %205 = trunc i64 %204 to i32
  %206 = load i32, i32* %189, align 4
  %207 = icmp eq i32 %206, %205
  br i1 %207, label %208, label %211

208:                                              ; preds = %203
  %209 = load i32, i32* %177, align 4
  %210 = icmp eq i32 %199, %209
  br i1 %210, label %216, label %211

211:                                              ; preds = %208, %195, %203
  %212 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %4, align 8
  %213 = tail call { i64, i32 } @_ZNK17CPVT_VariableText16GetNextWordPlaceERK14CPVT_WordPlace(%class.CPVT_VariableText* %212, %struct.CPVT_WordPlace* dereferenceable(12) %169) #12
  %214 = extractvalue { i64, i32 } %213, 0
  %215 = extractvalue { i64, i32 } %213, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %174, i8* align 4 %175, i64 12, i1 false) #12
  store i64 %214, i64* %176, align 8
  store i32 %215, i32* %177, align 8
  br label %216

216:                                              ; preds = %208, %168, %186, %192, %211
  tail call void @_ZN13CPWL_EditImpl13ScrollToCaretEv(%class.CPWL_EditImpl* %0)
  tail call void @_ZN13CPWL_EditImpl14SetCaretOriginEv(%class.CPWL_EditImpl* %0)
  tail call void @_ZN13CPWL_EditImpl12SetCaretInfoEv(%class.CPWL_EditImpl* %0)
  br label %217

217:                                              ; preds = %93, %3, %167, %216, %98
  ret void
}

declare { i64, i32 } @_ZNK17CPVT_VariableText16GetNextWordPlaceERK14CPVT_WordPlace(%class.CPVT_VariableText*, %struct.CPVT_WordPlace* dereferenceable(12)) local_unnamed_addr #3

declare { i64, i32 } @_ZNK17CPVT_VariableText15GetLineEndPlaceERK14CPVT_WordPlace(%class.CPVT_VariableText*, %struct.CPVT_WordPlace* dereferenceable(12)) local_unnamed_addr #3

declare { i64, i32 } @_ZNK17CPVT_VariableText18GetSectionEndPlaceERK14CPVT_WordPlace(%class.CPVT_VariableText*, %struct.CPVT_WordPlace* dereferenceable(12)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl9OnVK_HOMEEbb(%class.CPWL_EditImpl*, i1 zeroext, i1 zeroext) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %5 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %4, align 8
  %6 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %5, i64 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %145, label %9

9:                                                ; preds = %3
  br i1 %1, label %10, label %57

10:                                               ; preds = %9
  br i1 %2, label %11, label %16

11:                                               ; preds = %10
  %12 = tail call { i64, i32 } @_ZNK17CPVT_VariableText17GetBeginWordPlaceEv(%class.CPVT_VariableText* %5) #12
  %13 = extractvalue { i64, i32 } %12, 0
  %14 = extractvalue { i64, i32 } %12, 1
  %15 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9
  br label %21

16:                                               ; preds = %10
  %17 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9
  %18 = tail call { i64, i32 } @_ZNK17CPVT_VariableText17GetLineBeginPlaceERK14CPVT_WordPlace(%class.CPVT_VariableText* %5, %struct.CPVT_WordPlace* dereferenceable(12) %17) #12
  %19 = extractvalue { i64, i32 } %18, 0
  %20 = extractvalue { i64, i32 } %18, 1
  br label %21

21:                                               ; preds = %16, %11
  %22 = phi %struct.CPVT_WordPlace* [ %17, %16 ], [ %15, %11 ]
  %23 = phi i64 [ %19, %16 ], [ %13, %11 ]
  %24 = phi i32 [ %20, %16 ], [ %14, %11 ]
  %25 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 10
  %26 = bitcast %struct.CPVT_WordPlace* %25 to i8*
  %27 = bitcast %struct.CPVT_WordPlace* %22 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %26, i8* align 4 %27, i64 12, i1 false) #12
  %28 = bitcast %struct.CPVT_WordPlace* %22 to i64*
  store i64 %23, i64* %28, align 8
  %29 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9, i32 2
  store i32 %24, i32* %29, align 8
  %30 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11
  %31 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %"class.CPWL_EditImpl::SelectState", %"class.CPWL_EditImpl::SelectState"* %30, i64 0, i32 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %32, %34
  br i1 %35, label %36, label %52

36:                                               ; preds = %21
  %37 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %38, %40
  br i1 %41, label %42, label %52

42:                                               ; preds = %36
  %43 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %44, %46
  br i1 %47, label %48, label %52

48:                                               ; preds = %42
  %49 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 10
  %50 = bitcast %"class.CPWL_EditImpl::SelectState"* %30 to i8*
  %51 = bitcast %struct.CPVT_WordPlace* %49 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %50, i8* align 4 %51, i64 12, i1 false) #12
  br label %52

52:                                               ; preds = %42, %36, %21, %48
  %53 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9
  %54 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1
  %55 = bitcast %struct.CPVT_WordPlace* %54 to i8*
  %56 = bitcast %struct.CPVT_WordPlace* %53 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %55, i8* align 4 %56, i64 12, i1 false) #12
  tail call void @_ZN13CPWL_EditImpl13ScrollToCaretEv(%class.CPWL_EditImpl* %0)
  tail call void @_ZN13CPWL_EditImpl7RefreshEv(%class.CPWL_EditImpl* %0)
  br label %144

57:                                               ; preds = %9
  %58 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11
  %59 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds %"class.CPWL_EditImpl::SelectState", %"class.CPWL_EditImpl::SelectState"* %58, i64 0, i32 0, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %60, %62
  br i1 %63, label %64, label %76

64:                                               ; preds = %57
  %65 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 1
  %66 = load i32, i32* %65, align 4
  %67 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 0, i32 1
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %66, %68
  br i1 %69, label %70, label %80

70:                                               ; preds = %64
  %71 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 2
  %72 = load i32, i32* %71, align 4
  %73 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 0, i32 2
  %74 = load i32, i32* %73, align 4
  %75 = icmp eq i32 %72, %74
  br i1 %75, label %124, label %80

76:                                               ; preds = %57
  %77 = getelementptr inbounds %"class.CPWL_EditImpl::SelectState", %"class.CPWL_EditImpl::SelectState"* %58, i64 0, i32 0
  %78 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1
  %79 = icmp slt i32 %60, %62
  br label %96

80:                                               ; preds = %64, %70
  %81 = getelementptr inbounds %"class.CPWL_EditImpl::SelectState", %"class.CPWL_EditImpl::SelectState"* %58, i64 0, i32 0
  %82 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1
  %83 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 1
  %84 = load i32, i32* %83, align 4
  %85 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 0, i32 1
  %86 = load i32, i32* %85, align 4
  %87 = icmp eq i32 %84, %86
  br i1 %87, label %90, label %88

88:                                               ; preds = %80
  %89 = icmp slt i32 %84, %86
  br label %96

90:                                               ; preds = %80
  %91 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 2
  %92 = load i32, i32* %91, align 4
  %93 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 0, i32 2
  %94 = load i32, i32* %93, align 4
  %95 = icmp slt i32 %92, %94
  br label %96

96:                                               ; preds = %76, %88, %90
  %97 = phi %struct.CPVT_WordPlace* [ %78, %76 ], [ %82, %88 ], [ %82, %90 ]
  %98 = phi %struct.CPVT_WordPlace* [ %77, %76 ], [ %81, %88 ], [ %81, %90 ]
  %99 = phi i1 [ %79, %76 ], [ %89, %88 ], [ %95, %90 ]
  %100 = select i1 %99, %struct.CPVT_WordPlace* %97, %struct.CPVT_WordPlace* %98
  %101 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9
  %102 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 10
  %103 = bitcast %struct.CPVT_WordPlace* %102 to i8*
  %104 = bitcast %struct.CPVT_WordPlace* %101 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %103, i8* align 4 %104, i64 12, i1 false) #12
  %105 = bitcast %struct.CPVT_WordPlace* %100 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %104, i8* align 4 %105, i64 12, i1 false) #12
  %106 = load i8, i8* %6, align 8, !range !8
  %107 = icmp eq i8 %106, 0
  br i1 %107, label %123, label %108

108:                                              ; preds = %96
  br i1 %63, label %109, label %121

109:                                              ; preds = %108
  %110 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 1
  %111 = load i32, i32* %110, align 4
  %112 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 0, i32 1
  %113 = load i32, i32* %112, align 4
  %114 = icmp eq i32 %111, %113
  br i1 %114, label %115, label %121

115:                                              ; preds = %109
  %116 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 2
  %117 = load i32, i32* %116, align 4
  %118 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 0, i32 2
  %119 = load i32, i32* %118, align 4
  %120 = icmp eq i32 %117, %119
  br i1 %120, label %123, label %121

121:                                              ; preds = %115, %109, %108
  %122 = bitcast %"class.CPWL_EditImpl::SelectState"* %58 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %122, i8 -1, i64 24, i1 false) #12
  tail call void @_ZN13CPWL_EditImpl7RefreshEv(%class.CPWL_EditImpl* %0) #12
  br label %123

123:                                              ; preds = %96, %115, %121
  tail call void @_ZN13CPWL_EditImpl13ScrollToCaretEv(%class.CPWL_EditImpl* %0)
  br label %144

124:                                              ; preds = %70
  br i1 %2, label %125, label %130

125:                                              ; preds = %124
  %126 = tail call { i64, i32 } @_ZNK17CPVT_VariableText17GetBeginWordPlaceEv(%class.CPVT_VariableText* %5) #12
  %127 = extractvalue { i64, i32 } %126, 0
  %128 = extractvalue { i64, i32 } %126, 1
  %129 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9
  br label %135

130:                                              ; preds = %124
  %131 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9
  %132 = tail call { i64, i32 } @_ZNK17CPVT_VariableText17GetLineBeginPlaceERK14CPVT_WordPlace(%class.CPVT_VariableText* %5, %struct.CPVT_WordPlace* dereferenceable(12) %131) #12
  %133 = extractvalue { i64, i32 } %132, 0
  %134 = extractvalue { i64, i32 } %132, 1
  br label %135

135:                                              ; preds = %130, %125
  %136 = phi %struct.CPVT_WordPlace* [ %131, %130 ], [ %129, %125 ]
  %137 = phi i64 [ %133, %130 ], [ %127, %125 ]
  %138 = phi i32 [ %134, %130 ], [ %128, %125 ]
  %139 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 10
  %140 = bitcast %struct.CPVT_WordPlace* %139 to i8*
  %141 = bitcast %struct.CPVT_WordPlace* %136 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %140, i8* align 4 %141, i64 12, i1 false) #12
  %142 = bitcast %struct.CPVT_WordPlace* %136 to i64*
  store i64 %137, i64* %142, align 8
  %143 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9, i32 2
  store i32 %138, i32* %143, align 8
  tail call void @_ZN13CPWL_EditImpl13ScrollToCaretEv(%class.CPWL_EditImpl* %0)
  tail call void @_ZN13CPWL_EditImpl14SetCaretOriginEv(%class.CPWL_EditImpl* %0)
  br label %144

144:                                              ; preds = %52, %135, %123
  tail call void @_ZN13CPWL_EditImpl12SetCaretInfoEv(%class.CPWL_EditImpl* %0)
  br label %145

145:                                              ; preds = %144, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl8OnVK_ENDEbb(%class.CPWL_EditImpl*, i1 zeroext, i1 zeroext) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %5 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %4, align 8
  %6 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %5, i64 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %145, label %9

9:                                                ; preds = %3
  br i1 %1, label %10, label %57

10:                                               ; preds = %9
  br i1 %2, label %11, label %16

11:                                               ; preds = %10
  %12 = tail call { i64, i32 } @_ZNK17CPVT_VariableText15GetEndWordPlaceEv(%class.CPVT_VariableText* %5) #12
  %13 = extractvalue { i64, i32 } %12, 0
  %14 = extractvalue { i64, i32 } %12, 1
  %15 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9
  br label %21

16:                                               ; preds = %10
  %17 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9
  %18 = tail call { i64, i32 } @_ZNK17CPVT_VariableText15GetLineEndPlaceERK14CPVT_WordPlace(%class.CPVT_VariableText* %5, %struct.CPVT_WordPlace* dereferenceable(12) %17) #12
  %19 = extractvalue { i64, i32 } %18, 0
  %20 = extractvalue { i64, i32 } %18, 1
  br label %21

21:                                               ; preds = %16, %11
  %22 = phi %struct.CPVT_WordPlace* [ %17, %16 ], [ %15, %11 ]
  %23 = phi i64 [ %19, %16 ], [ %13, %11 ]
  %24 = phi i32 [ %20, %16 ], [ %14, %11 ]
  %25 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 10
  %26 = bitcast %struct.CPVT_WordPlace* %25 to i8*
  %27 = bitcast %struct.CPVT_WordPlace* %22 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %26, i8* align 4 %27, i64 12, i1 false) #12
  %28 = bitcast %struct.CPVT_WordPlace* %22 to i64*
  store i64 %23, i64* %28, align 8
  %29 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9, i32 2
  store i32 %24, i32* %29, align 8
  %30 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11
  %31 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %"class.CPWL_EditImpl::SelectState", %"class.CPWL_EditImpl::SelectState"* %30, i64 0, i32 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %32, %34
  br i1 %35, label %36, label %52

36:                                               ; preds = %21
  %37 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %38, %40
  br i1 %41, label %42, label %52

42:                                               ; preds = %36
  %43 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %44, %46
  br i1 %47, label %48, label %52

48:                                               ; preds = %42
  %49 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 10
  %50 = bitcast %"class.CPWL_EditImpl::SelectState"* %30 to i8*
  %51 = bitcast %struct.CPVT_WordPlace* %49 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %50, i8* align 4 %51, i64 12, i1 false) #12
  br label %52

52:                                               ; preds = %42, %36, %21, %48
  %53 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9
  %54 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1
  %55 = bitcast %struct.CPVT_WordPlace* %54 to i8*
  %56 = bitcast %struct.CPVT_WordPlace* %53 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %55, i8* align 4 %56, i64 12, i1 false) #12
  tail call void @_ZN13CPWL_EditImpl13ScrollToCaretEv(%class.CPWL_EditImpl* %0)
  tail call void @_ZN13CPWL_EditImpl7RefreshEv(%class.CPWL_EditImpl* %0)
  br label %144

57:                                               ; preds = %9
  %58 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11
  %59 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds %"class.CPWL_EditImpl::SelectState", %"class.CPWL_EditImpl::SelectState"* %58, i64 0, i32 0, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %60, %62
  br i1 %63, label %64, label %76

64:                                               ; preds = %57
  %65 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 1
  %66 = load i32, i32* %65, align 4
  %67 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 0, i32 1
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %66, %68
  br i1 %69, label %70, label %80

70:                                               ; preds = %64
  %71 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 2
  %72 = load i32, i32* %71, align 4
  %73 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 0, i32 2
  %74 = load i32, i32* %73, align 4
  %75 = icmp eq i32 %72, %74
  br i1 %75, label %124, label %80

76:                                               ; preds = %57
  %77 = getelementptr inbounds %"class.CPWL_EditImpl::SelectState", %"class.CPWL_EditImpl::SelectState"* %58, i64 0, i32 0
  %78 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1
  %79 = icmp slt i32 %62, %60
  br label %96

80:                                               ; preds = %64, %70
  %81 = getelementptr inbounds %"class.CPWL_EditImpl::SelectState", %"class.CPWL_EditImpl::SelectState"* %58, i64 0, i32 0
  %82 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1
  %83 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 0, i32 1
  %84 = load i32, i32* %83, align 4
  %85 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 1
  %86 = load i32, i32* %85, align 4
  %87 = icmp eq i32 %84, %86
  br i1 %87, label %90, label %88

88:                                               ; preds = %80
  %89 = icmp slt i32 %84, %86
  br label %96

90:                                               ; preds = %80
  %91 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 0, i32 2
  %92 = load i32, i32* %91, align 4
  %93 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 2
  %94 = load i32, i32* %93, align 4
  %95 = icmp slt i32 %92, %94
  br label %96

96:                                               ; preds = %76, %88, %90
  %97 = phi %struct.CPVT_WordPlace* [ %78, %76 ], [ %82, %88 ], [ %82, %90 ]
  %98 = phi %struct.CPVT_WordPlace* [ %77, %76 ], [ %81, %88 ], [ %81, %90 ]
  %99 = phi i1 [ %79, %76 ], [ %89, %88 ], [ %95, %90 ]
  %100 = select i1 %99, %struct.CPVT_WordPlace* %97, %struct.CPVT_WordPlace* %98
  %101 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9
  %102 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 10
  %103 = bitcast %struct.CPVT_WordPlace* %102 to i8*
  %104 = bitcast %struct.CPVT_WordPlace* %101 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %103, i8* align 4 %104, i64 12, i1 false) #12
  %105 = bitcast %struct.CPVT_WordPlace* %100 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %104, i8* align 4 %105, i64 12, i1 false) #12
  %106 = load i8, i8* %6, align 8, !range !8
  %107 = icmp eq i8 %106, 0
  br i1 %107, label %123, label %108

108:                                              ; preds = %96
  br i1 %63, label %109, label %121

109:                                              ; preds = %108
  %110 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 1
  %111 = load i32, i32* %110, align 4
  %112 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 0, i32 1
  %113 = load i32, i32* %112, align 4
  %114 = icmp eq i32 %111, %113
  br i1 %114, label %115, label %121

115:                                              ; preds = %109
  %116 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 1, i32 2
  %117 = load i32, i32* %116, align 4
  %118 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 11, i32 0, i32 2
  %119 = load i32, i32* %118, align 4
  %120 = icmp eq i32 %117, %119
  br i1 %120, label %123, label %121

121:                                              ; preds = %115, %109, %108
  %122 = bitcast %"class.CPWL_EditImpl::SelectState"* %58 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %122, i8 -1, i64 24, i1 false) #12
  tail call void @_ZN13CPWL_EditImpl7RefreshEv(%class.CPWL_EditImpl* %0) #12
  br label %123

123:                                              ; preds = %96, %115, %121
  tail call void @_ZN13CPWL_EditImpl13ScrollToCaretEv(%class.CPWL_EditImpl* %0)
  br label %144

124:                                              ; preds = %70
  br i1 %2, label %125, label %130

125:                                              ; preds = %124
  %126 = tail call { i64, i32 } @_ZNK17CPVT_VariableText15GetEndWordPlaceEv(%class.CPVT_VariableText* %5) #12
  %127 = extractvalue { i64, i32 } %126, 0
  %128 = extractvalue { i64, i32 } %126, 1
  %129 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9
  br label %135

130:                                              ; preds = %124
  %131 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9
  %132 = tail call { i64, i32 } @_ZNK17CPVT_VariableText15GetLineEndPlaceERK14CPVT_WordPlace(%class.CPVT_VariableText* %5, %struct.CPVT_WordPlace* dereferenceable(12) %131) #12
  %133 = extractvalue { i64, i32 } %132, 0
  %134 = extractvalue { i64, i32 } %132, 1
  br label %135

135:                                              ; preds = %130, %125
  %136 = phi %struct.CPVT_WordPlace* [ %131, %130 ], [ %129, %125 ]
  %137 = phi i64 [ %133, %130 ], [ %127, %125 ]
  %138 = phi i32 [ %134, %130 ], [ %128, %125 ]
  %139 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 10
  %140 = bitcast %struct.CPVT_WordPlace* %139 to i8*
  %141 = bitcast %struct.CPVT_WordPlace* %136 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %140, i8* align 4 %141, i64 12, i1 false) #12
  %142 = bitcast %struct.CPVT_WordPlace* %136 to i64*
  store i64 %137, i64* %142, align 8
  %143 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 9, i32 2
  store i32 %138, i32* %143, align 8
  tail call void @_ZN13CPWL_EditImpl13ScrollToCaretEv(%class.CPWL_EditImpl* %0)
  tail call void @_ZN13CPWL_EditImpl14SetCaretOriginEv(%class.CPWL_EditImpl* %0)
  br label %144

144:                                              ; preds = %52, %135, %123
  tail call void @_ZN13CPWL_EditImpl12SetCaretInfoEv(%class.CPWL_EditImpl* %0)
  br label %145

145:                                              ; preds = %144, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK13CPWL_EditImpl14IsTextOverflowEv(%class.CPWL_EditImpl* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %62

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 2
  %7 = load i8, i8* %6, align 2, !range !8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %62

9:                                                ; preds = %5
  %10 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %11 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %10, align 8
  %12 = tail call dereferenceable(16) %class.CFX_FloatRect* @_ZNK17CPVT_VariableText12GetPlateRectEv(%class.CPVT_VariableText* %11) #12
  %13 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %12, i64 0, i32 0
  %14 = load float, float* %13, align 4
  %15 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %12, i64 0, i32 1
  %16 = load float, float* %15, align 4
  %17 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %12, i64 0, i32 2
  %18 = load float, float* %17, align 4
  %19 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %12, i64 0, i32 3
  %20 = load float, float* %19, align 4
  %21 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %10, align 8
  %22 = tail call { <2 x float>, <2 x float> } @_ZNK17CPVT_VariableText14GetContentRectEv(%class.CPVT_VariableText* %21) #12
  %23 = extractvalue { <2 x float>, <2 x float> } %22, 0
  %24 = extractvalue { <2 x float>, <2 x float> } %22, 1
  %25 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %10, align 8
  %26 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %25, i64 0, i32 1
  %27 = load i8, i8* %26, align 1, !range !8
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %49, label %29

29:                                               ; preds = %9
  %30 = tail call %"class.CPVT_VariableText::Iterator"* @_ZN17CPVT_VariableText11GetIteratorEv(%class.CPVT_VariableText* %25) #12
  tail call void @_ZN17CPVT_VariableText8Iterator5SetAtEi(%"class.CPVT_VariableText::Iterator"* %30, i32 0) #12
  br label %31

31:                                               ; preds = %31, %29
  %32 = phi i32 [ 1, %29 ], [ %34, %31 ]
  %33 = tail call zeroext i1 @_ZN17CPVT_VariableText8Iterator8NextLineEv(%"class.CPVT_VariableText::Iterator"* %30) #12
  %34 = add nuw nsw i32 %32, 1
  br i1 %33, label %31, label %35

35:                                               ; preds = %31
  %36 = icmp ugt i32 %32, 1
  br i1 %36, label %37, label %49

37:                                               ; preds = %35
  %38 = extractelement <2 x float> %24, i32 1
  %39 = extractelement <2 x float> %23, i32 1
  %40 = fsub float %38, %39
  %41 = fsub float %20, %16
  %42 = fcmp ogt float %40, %41
  br i1 %42, label %43, label %49

43:                                               ; preds = %37
  %44 = fsub float %40, %41
  %45 = fpext float %44 to double
  %46 = fcmp olt double %45, 1.000000e-04
  %47 = fcmp ogt double %45, -1.000000e-04
  %48 = and i1 %46, %47
  br i1 %48, label %49, label %62

49:                                               ; preds = %9, %43, %37, %35
  %50 = extractelement <2 x float> %24, i32 0
  %51 = extractelement <2 x float> %23, i32 0
  %52 = fsub float %50, %51
  %53 = fsub float %18, %14
  %54 = fcmp ogt float %52, %53
  br i1 %54, label %55, label %61

55:                                               ; preds = %49
  %56 = fsub float %52, %53
  %57 = fpext float %56 to double
  %58 = fcmp olt double %57, 1.000000e-04
  %59 = fcmp ogt double %57, -1.000000e-04
  %60 = and i1 %58, %59
  br i1 %60, label %61, label %62

61:                                               ; preds = %55, %49
  br label %62

62:                                               ; preds = %43, %55, %1, %5, %61
  %63 = phi i1 [ false, %61 ], [ false, %5 ], [ false, %1 ], [ true, %55 ], [ true, %43 ]
  ret i1 %63
}

declare { i64, i32 } @_ZN17CPVT_VariableText10InsertWordERK14CPVT_WordPlaceti(%class.CPVT_VariableText*, %struct.CPVT_WordPlace* dereferenceable(12), i16 zeroext, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN13CPWL_EditImpl21GetCharSetFromUnicodeEti(%class.CPWL_EditImpl* nocapture readonly, i16 zeroext, i32) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %5 = load %"class.CPWL_EditImpl::Provider"*, %"class.CPWL_EditImpl::Provider"** %4, align 8
  %6 = icmp eq %"class.CPWL_EditImpl::Provider"* %5, null
  br i1 %6, label %17, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.CPWL_EditImpl::Provider", %"class.CPWL_EditImpl::Provider"* %5, i64 0, i32 0, i32 1, i32 0
  %9 = load %class.IPVT_FontMap*, %class.IPVT_FontMap** %8, align 8
  %10 = icmp eq %class.IPVT_FontMap* %9, null
  br i1 %10, label %17, label %11

11:                                               ; preds = %7
  %12 = bitcast %class.IPVT_FontMap* %9 to i32 (%class.IPVT_FontMap*, i16, i32)***
  %13 = load i32 (%class.IPVT_FontMap*, i16, i32)**, i32 (%class.IPVT_FontMap*, i16, i32)*** %12, align 8
  %14 = getelementptr inbounds i32 (%class.IPVT_FontMap*, i16, i32)*, i32 (%class.IPVT_FontMap*, i16, i32)** %13, i64 6
  %15 = load i32 (%class.IPVT_FontMap*, i16, i32)*, i32 (%class.IPVT_FontMap*, i16, i32)** %14, align 8
  %16 = tail call i32 %15(%class.IPVT_FontMap* nonnull %9, i16 zeroext %1, i32 %2) #12
  br label %17

17:                                               ; preds = %3, %7, %11
  %18 = phi i32 [ %16, %11 ], [ %2, %7 ], [ %2, %3 ]
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl15AddEditUndoItemENSt3__110unique_ptrINS_13UndoItemIfaceENS0_14default_deleteIS2_EEEE(%class.CPWL_EditImpl*, %"class.CPWL_EditImpl::UndoItemIface"*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 17
  tail call void @_ZN13CPWL_EditImpl9UndoStack7AddItemENSt3__110unique_ptrINS_13UndoItemIfaceENS1_14default_deleteIS3_EEEE(%"class.CPWL_EditImpl::UndoStack"* %3, %"class.CPWL_EditImpl::UndoItemIface"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl15PaintInsertTextERK14CPVT_WordPlaceS2_(%class.CPWL_EditImpl*, %struct.CPVT_WordPlace* nocapture readonly dereferenceable(12), %struct.CPVT_WordPlace* nocapture readonly dereferenceable(12)) local_unnamed_addr #2 align 2 {
  %4 = alloca %struct.CPVT_WordRange, align 4
  %5 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %6 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %5, align 8
  %7 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %6, i64 0, i32 0
  %8 = load i8, i8* %7, align 8, !range !8
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %47, label %10

10:                                               ; preds = %3
  %11 = bitcast %struct.CPVT_WordRange* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #12
  %12 = bitcast %struct.CPVT_WordPlace* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %11, i8* align 4 %12, i64 12, i1 false) #12
  %13 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %4, i64 0, i32 1
  %14 = bitcast %struct.CPVT_WordPlace* %13 to i8*
  %15 = bitcast %struct.CPVT_WordPlace* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %14, i8* align 4 %15, i64 12, i1 false) #12
  %16 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %4, i64 0, i32 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %13, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %17, %19
  br i1 %20, label %26, label %21

21:                                               ; preds = %10
  %22 = icmp sgt i32 %17, %19
  br i1 %22, label %23, label %46

23:                                               ; preds = %21
  %24 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %4, i64 0, i32 0, i32 1
  %25 = load i32, i32* %24, align 4
  br label %40

26:                                               ; preds = %10
  %27 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %4, i64 0, i32 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %4, i64 0, i32 1, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %28, %30
  br i1 %31, label %34, label %32

32:                                               ; preds = %26
  %33 = icmp sgt i32 %28, %30
  br i1 %33, label %40, label %46

34:                                               ; preds = %26
  %35 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %4, i64 0, i32 0, i32 2
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %4, i64 0, i32 1, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = icmp sgt i32 %36, %38
  br i1 %39, label %40, label %46

40:                                               ; preds = %34, %32, %23
  %41 = phi i32 [ %25, %23 ], [ %28, %32 ], [ %28, %34 ]
  %42 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %4, i64 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %11, i8* align 4 %14, i64 12, i1 false) #12
  store i32 %17, i32* %18, align 4
  %44 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %4, i64 0, i32 1, i32 1
  store i32 %41, i32* %44, align 4
  %45 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %4, i64 0, i32 1, i32 2
  store i32 %43, i32* %45, align 4
  br label %46

46:                                               ; preds = %21, %32, %34, %40
  call void @_ZN13CPWL_EditImpl13RearrangePartERK14CPVT_WordRange(%class.CPWL_EditImpl* %0, %struct.CPVT_WordRange* nonnull dereferenceable(24) %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #12
  call void @_ZN13CPWL_EditImpl13ScrollToCaretEv(%class.CPWL_EditImpl* %0)
  call void @_ZN13CPWL_EditImpl7RefreshEv(%class.CPWL_EditImpl* %0)
  call void @_ZN13CPWL_EditImpl14SetCaretOriginEv(%class.CPWL_EditImpl* %0)
  call void @_ZN13CPWL_EditImpl12SetCaretInfoEv(%class.CPWL_EditImpl* %0)
  br label %47

47:                                               ; preds = %3, %46
  ret void
}

declare { i64, i32 } @_ZN17CPVT_VariableText13InsertSectionERK14CPVT_WordPlace(%class.CPVT_VariableText*, %struct.CPVT_WordPlace* dereferenceable(12)) local_unnamed_addr #3

declare { i64, i32 } @_ZN17CPVT_VariableText13BackSpaceWordERK14CPVT_WordPlace(%class.CPVT_VariableText*, %struct.CPVT_WordPlace* dereferenceable(12)) local_unnamed_addr #3

declare { i64, i32 } @_ZN17CPVT_VariableText10DeleteWordERK14CPVT_WordPlace(%class.CPVT_VariableText*, %struct.CPVT_WordPlace* dereferenceable(12)) local_unnamed_addr #3

declare { i64, i32 } @_ZN17CPVT_VariableText11DeleteWordsERK14CPVT_WordRange(%class.CPVT_VariableText*, %struct.CPVT_WordRange* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl16ReplaceSelectionERKN5fxcrt10WideStringE(%class.CPWL_EditImpl*, %"class.fxcrt::WideString"* dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %3 = ptrtoint %class.CPWL_EditImpl* %0 to i64
  %4 = tail call i8* @_Znwm(i64 24) #13
  %5 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN13CPWL_EditImpl20UndoReplaceSelectionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds i8, i8* %4, i64 8
  %7 = bitcast i8* %6 to i64*
  store i64 %3, i64* %7, align 8
  %8 = getelementptr inbounds i8, i8* %4, i64 16
  store i8 0, i8* %8, align 8
  %9 = bitcast i8* %4 to %"class.CPWL_EditImpl::UndoItemIface"*
  %10 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 17
  tail call void @_ZN13CPWL_EditImpl9UndoStack7AddItemENSt3__110unique_ptrINS_13UndoItemIfaceENS1_14default_deleteIS3_EEEE(%"class.CPWL_EditImpl::UndoStack"* %10, %"class.CPWL_EditImpl::UndoItemIface"* nonnull %9) #12
  %11 = tail call zeroext i1 @_ZN13CPWL_EditImpl5ClearEb(%class.CPWL_EditImpl* %0, i1 zeroext true) #12
  %12 = tail call zeroext i1 @_ZN13CPWL_EditImpl10InsertTextERKN5fxcrt10WideStringEib(%class.CPWL_EditImpl* %0, %"class.fxcrt::WideString"* dereferenceable(8) %1, i32 1, i1 zeroext true) #12
  %13 = tail call i8* @_Znwm(i64 24) #13
  %14 = bitcast i8* %13 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN13CPWL_EditImpl20UndoReplaceSelectionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %15 = getelementptr inbounds i8, i8* %13, i64 8
  %16 = bitcast i8* %15 to i64*
  store i64 %3, i64* %16, align 8
  %17 = getelementptr inbounds i8, i8* %13, i64 16
  store i8 1, i8* %17, align 8
  %18 = bitcast i8* %13 to %"class.CPWL_EditImpl::UndoItemIface"*
  tail call void @_ZN13CPWL_EditImpl9UndoStack7AddItemENSt3__110unique_ptrINS_13UndoItemIfaceENS1_14default_deleteIS3_EEEE(%"class.CPWL_EditImpl::UndoStack"* %10, %"class.CPWL_EditImpl::UndoItemIface"* nonnull %18) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN13CPWL_EditImpl4RedoEv(%class.CPWL_EditImpl* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 4
  %3 = load i8, i8* %2, align 4, !range !8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %41, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 17, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 17, i32 0, i32 0, i32 2, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp ult i64 %7, %9
  br i1 %10, label %11, label %41

11:                                               ; preds = %5
  %12 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 17, i32 2
  store i8 1, i8* %12, align 8
  %13 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 17, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 1
  br label %15

15:                                               ; preds = %15, %11
  %16 = phi i64 [ %7, %11 ], [ %33, %15 ]
  %17 = phi i32 [ 1, %11 ], [ %35, %15 ]
  %18 = load i64, i64* %13, align 8
  %19 = add i64 %18, %16
  %20 = load %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"*** %14, align 8
  %21 = lshr i64 %19, 9
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %20, i64 %21
  %23 = load %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %22, align 8
  %24 = and i64 %19, 511
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.77", %"class.std::__1::unique_ptr.77"* %23, i64 %24, i32 0, i32 0, i32 0
  %26 = load %"class.CPWL_EditImpl::UndoItemIface"*, %"class.CPWL_EditImpl::UndoItemIface"** %25, align 8
  %27 = bitcast %"class.CPWL_EditImpl::UndoItemIface"* %26 to i32 (%"class.CPWL_EditImpl::UndoItemIface"*)***
  %28 = load i32 (%"class.CPWL_EditImpl::UndoItemIface"*)**, i32 (%"class.CPWL_EditImpl::UndoItemIface"*)*** %27, align 8
  %29 = getelementptr inbounds i32 (%"class.CPWL_EditImpl::UndoItemIface"*)*, i32 (%"class.CPWL_EditImpl::UndoItemIface"*)** %28, i64 3
  %30 = load i32 (%"class.CPWL_EditImpl::UndoItemIface"*)*, i32 (%"class.CPWL_EditImpl::UndoItemIface"*)** %29, align 8
  %31 = tail call i32 %30(%"class.CPWL_EditImpl::UndoItemIface"* %26) #12
  %32 = load i64, i64* %6, align 8
  %33 = add i64 %32, 1
  store i64 %33, i64* %6, align 8
  %34 = add nsw i32 %17, -1
  %35 = add i32 %34, %31
  %36 = load i64, i64* %8, align 8
  %37 = icmp ult i64 %33, %36
  %38 = icmp sgt i32 %35, 0
  %39 = and i1 %38, %37
  br i1 %39, label %15, label %40

40:                                               ; preds = %15
  store i8 0, i8* %12, align 8
  br label %41

41:                                               ; preds = %5, %1, %40
  %42 = phi i1 [ true, %40 ], [ false, %1 ], [ false, %5 ]
  ret i1 %42
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN13CPWL_EditImpl4UndoEv(%class.CPWL_EditImpl* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 4
  %3 = load i8, i8* %2, align 4, !range !8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %39, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 17, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %39, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 17, i32 2
  store i8 1, i8* %10, align 8
  %11 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 17, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 1
  br label %13

13:                                               ; preds = %13, %9
  %14 = phi i64 [ %7, %9 ], [ %32, %13 ]
  %15 = phi i32 [ 1, %9 ], [ %34, %13 ]
  %16 = add i64 %14, -1
  %17 = load i64, i64* %11, align 8
  %18 = add i64 %16, %17
  %19 = load %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"*** %12, align 8
  %20 = lshr i64 %18, 9
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %19, i64 %20
  %22 = load %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %21, align 8
  %23 = and i64 %18, 511
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr.77", %"class.std::__1::unique_ptr.77"* %22, i64 %23, i32 0, i32 0, i32 0
  %25 = load %"class.CPWL_EditImpl::UndoItemIface"*, %"class.CPWL_EditImpl::UndoItemIface"** %24, align 8
  %26 = bitcast %"class.CPWL_EditImpl::UndoItemIface"* %25 to i32 (%"class.CPWL_EditImpl::UndoItemIface"*)***
  %27 = load i32 (%"class.CPWL_EditImpl::UndoItemIface"*)**, i32 (%"class.CPWL_EditImpl::UndoItemIface"*)*** %26, align 8
  %28 = getelementptr inbounds i32 (%"class.CPWL_EditImpl::UndoItemIface"*)*, i32 (%"class.CPWL_EditImpl::UndoItemIface"*)** %27, i64 2
  %29 = load i32 (%"class.CPWL_EditImpl::UndoItemIface"*)*, i32 (%"class.CPWL_EditImpl::UndoItemIface"*)** %28, align 8
  %30 = tail call i32 %29(%"class.CPWL_EditImpl::UndoItemIface"* %25) #12
  %31 = load i64, i64* %6, align 8
  %32 = add i64 %31, -1
  store i64 %32, i64* %6, align 8
  %33 = add nsw i32 %15, -1
  %34 = add i32 %33, %30
  %35 = icmp ne i64 %32, 0
  %36 = icmp sgt i32 %34, 0
  %37 = and i1 %36, %35
  br i1 %37, label %13, label %38

38:                                               ; preds = %13
  store i8 0, i8* %10, align 8
  br label %39

39:                                               ; preds = %5, %1, %38
  %40 = phi i1 [ true, %38 ], [ false, %1 ], [ false, %5 ]
  ret i1 %40
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_ZNK13CPWL_EditImpl20WordIndexToWordPlaceEi(%class.CPWL_EditImpl* nocapture readonly, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %4 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %3, align 8
  %5 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %4, i64 0, i32 0
  %6 = load i8, i8* %5, align 8, !range !8
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = tail call { i64, i32 } @_ZNK17CPVT_VariableText20WordIndexToWordPlaceEi(%class.CPVT_VariableText* %4, i32 %1) #12
  %10 = extractvalue { i64, i32 } %9, 0
  %11 = extractvalue { i64, i32 } %9, 1
  %12 = and i64 %10, -4294967296
  %13 = and i64 %10, 4294967295
  br label %14

14:                                               ; preds = %2, %8
  %15 = phi i64 [ %13, %8 ], [ 4294967295, %2 ]
  %16 = phi i64 [ %12, %8 ], [ -4294967296, %2 ]
  %17 = phi i32 [ %11, %8 ], [ -1, %2 ]
  %18 = or i64 %16, %15
  %19 = insertvalue { i64, i32 } undef, i64 %18, 0
  %20 = insertvalue { i64, i32 } %19, i32 %17, 1
  ret { i64, i32 } %20
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK13CPWL_EditImpl10IsTextFullEv(%class.CPWL_EditImpl* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %3 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %2, align 8
  %4 = tail call i32 @_ZNK17CPVT_VariableText13GetTotalWordsEv(%class.CPVT_VariableText* %3) #12
  %5 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %2, align 8
  %6 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %5, i64 0, i32 5
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %5, i64 0, i32 6
  %9 = load i32, i32* %8, align 4
  %10 = tail call zeroext i1 @_ZNK13CPWL_EditImpl14IsTextOverflowEv(%class.CPWL_EditImpl* %0)
  br i1 %10, label %19, label %11

11:                                               ; preds = %1
  %12 = icmp slt i32 %7, 1
  %13 = icmp slt i32 %4, %7
  %14 = or i1 %12, %13
  br i1 %14, label %15, label %19

15:                                               ; preds = %11
  %16 = icmp sgt i32 %9, 0
  %17 = icmp sge i32 %4, %9
  %18 = and i1 %16, %17
  ret i1 %18

19:                                               ; preds = %11, %1
  ret i1 true
}

declare i32 @_ZNK17CPVT_VariableText13GetTotalWordsEv(%class.CPVT_VariableText*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK13CPWL_EditImpl7CanUndoEv(%class.CPWL_EditImpl* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 4
  %3 = load i8, i8* %2, align 4, !range !8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 17, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp ne i64 %7, 0
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i1 [ %8, %5 ], [ false, %1 ]
  ret i1 %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK13CPWL_EditImpl7CanRedoEv(%class.CPWL_EditImpl* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 4
  %3 = load i8, i8* %2, align 4, !range !8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 17, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 17, i32 0, i32 0, i32 2, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp ult i64 %7, %9
  br label %11

11:                                               ; preds = %1, %5
  %12 = phi i1 [ %10, %5 ], [ false, %1 ]
  ret i1 %12
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN13CPWL_EditImpl13EnableRefreshEb(%class.CPWL_EditImpl* nocapture, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 3
  store i8 %3, i8* %4, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN13CPWL_EditImpl10EnableUndoEb(%class.CPWL_EditImpl* nocapture, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %0, i64 0, i32 4
  store i8 %3, i8* %4, align 4
  ret void
}

declare void @_ZN5fxcrt10ByteStringC1Ev(%"class.fxcrt::ByteString"*) unnamed_addr #3

declare void @_ZNK9CPDF_Font10AppendCharEPN5fxcrt10ByteStringEj(%class.CPDF_Font*, %"class.fxcrt::ByteString"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5fxcrt10ByteStringC1EOS0_(%"class.fxcrt::ByteString"*, %"class.fxcrt::ByteString"* dereferenceable(8)) unnamed_addr #6

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN13CPWL_EditImpl11SelectStateC2Ev(%"class.CPWL_EditImpl::SelectState"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.CPWL_EditImpl::SelectState"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 -1, i64 24, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_EditImpl11SelectStateC2ERK14CPVT_WordRange(%"class.CPWL_EditImpl::SelectState"* nocapture, %struct.CPVT_WordRange* nocapture readonly dereferenceable(24)) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.CPWL_EditImpl::SelectState", %"class.CPWL_EditImpl::SelectState"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %1, i64 0, i32 1
  %5 = bitcast %"class.CPWL_EditImpl::SelectState"* %0 to i8*
  %6 = bitcast %struct.CPVT_WordRange* %1 to i8*
  %7 = getelementptr %"class.CPWL_EditImpl::SelectState", %"class.CPWL_EditImpl::SelectState"* %0, i64 0, i32 1
  %8 = bitcast %struct.CPVT_WordPlace* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %8, i8 -1, i64 12, i1 false)
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 %6, i64 12, i1 false) #12
  %9 = bitcast %struct.CPVT_WordPlace* %3 to i8*
  %10 = bitcast %struct.CPVT_WordPlace* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 4 %10, i64 12, i1 false) #12
  ret void
}

declare i32 @_ZN17CPVT_VariableText8Provider13GetTypeAscentEi(%"class.CPVT_VariableText::Provider"*, i32) unnamed_addr #3

declare i32 @_ZN17CPVT_VariableText8Provider14GetTypeDescentEi(%"class.CPVT_VariableText::Provider"*, i32) unnamed_addr #3

declare i32 @_ZN17CPVT_VariableText8Provider19GetDefaultFontIndexEv(%"class.CPVT_VariableText::Provider"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__deque_baseINS_10unique_ptrIN13CPWL_EditImpl13UndoItemIfaceENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE5clearEv(%"class.std::__1::__deque_base"*) local_unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 0, i32 1
  %3 = load %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"*** %2, align 8
  %4 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 9
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %3, i64 %6
  %8 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 0, i32 2
  %9 = load %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"*** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr.77"** %9, %3
  %11 = ptrtoint %"class.std::__1::unique_ptr.77"** %9 to i64
  %12 = ptrtoint %"class.std::__1::unique_ptr.77"** %3 to i64
  %13 = bitcast %"class.std::__1::unique_ptr.77"** %3 to i8**
  br i1 %10, label %14, label %16

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 2, i32 0, i32 0
  br label %29

16:                                               ; preds = %1
  %17 = load %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %7, align 8
  %18 = and i64 %5, 511
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.77", %"class.std::__1::unique_ptr.77"* %17, i64 %18
  %20 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 2, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, %5
  %23 = lshr i64 %22, 9
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %3, i64 %23
  %25 = load %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %24, align 8
  %26 = and i64 %22, 511
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr.77", %"class.std::__1::unique_ptr.77"* %25, i64 %26
  %28 = icmp eq %"class.std::__1::unique_ptr.77"* %27, %19
  br i1 %28, label %29, label %47

29:                                               ; preds = %14, %16
  %30 = phi i64* [ %15, %14 ], [ %20, %16 ]
  %31 = bitcast %"class.std::__1::unique_ptr.77"*** %8 to i64*
  br label %38

32:                                               ; preds = %69
  %33 = bitcast %"class.std::__1::unique_ptr.77"*** %8 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.std::__1::unique_ptr.77"*** %2 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = inttoptr i64 %36 to i8**
  br label %38

38:                                               ; preds = %29, %32
  %39 = phi i64* [ %30, %29 ], [ %20, %32 ]
  %40 = phi i64* [ %31, %29 ], [ %33, %32 ]
  %41 = phi i8** [ %13, %29 ], [ %37, %32 ]
  %42 = phi i64 [ %12, %29 ], [ %36, %32 ]
  %43 = phi i64 [ %11, %29 ], [ %34, %32 ]
  store i64 0, i64* %39, align 8
  %44 = sub i64 %43, %42
  %45 = ashr exact i64 %44, 3
  %46 = icmp ugt i64 %45, 2
  br i1 %46, label %74, label %85

47:                                               ; preds = %16, %69
  %48 = phi %"class.std::__1::unique_ptr.77"* [ %72, %69 ], [ %19, %16 ]
  %49 = phi %"class.std::__1::unique_ptr.77"** [ %71, %69 ], [ %7, %16 ]
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.77", %"class.std::__1::unique_ptr.77"* %48, i64 0, i32 0, i32 0, i32 0
  %51 = load %"class.CPWL_EditImpl::UndoItemIface"*, %"class.CPWL_EditImpl::UndoItemIface"** %50, align 8
  store %"class.CPWL_EditImpl::UndoItemIface"* null, %"class.CPWL_EditImpl::UndoItemIface"** %50, align 8
  %52 = icmp eq %"class.CPWL_EditImpl::UndoItemIface"* %51, null
  br i1 %52, label %58, label %53

53:                                               ; preds = %47
  %54 = bitcast %"class.CPWL_EditImpl::UndoItemIface"* %51 to void (%"class.CPWL_EditImpl::UndoItemIface"*)***
  %55 = load void (%"class.CPWL_EditImpl::UndoItemIface"*)**, void (%"class.CPWL_EditImpl::UndoItemIface"*)*** %54, align 8
  %56 = getelementptr inbounds void (%"class.CPWL_EditImpl::UndoItemIface"*)*, void (%"class.CPWL_EditImpl::UndoItemIface"*)** %55, i64 1
  %57 = load void (%"class.CPWL_EditImpl::UndoItemIface"*)*, void (%"class.CPWL_EditImpl::UndoItemIface"*)** %56, align 8
  tail call void %57(%"class.CPWL_EditImpl::UndoItemIface"* nonnull %51) #12
  br label %58

58:                                               ; preds = %47, %53
  %59 = getelementptr inbounds %"class.std::__1::unique_ptr.77", %"class.std::__1::unique_ptr.77"* %48, i64 1
  %60 = ptrtoint %"class.std::__1::unique_ptr.77"* %59 to i64
  %61 = bitcast %"class.std::__1::unique_ptr.77"** %49 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = sub i64 %60, %62
  %64 = icmp eq i64 %63, 4096
  br i1 %64, label %65, label %69

65:                                               ; preds = %58
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %49, i64 1
  %67 = bitcast %"class.std::__1::unique_ptr.77"** %66 to i64*
  %68 = load i64, i64* %67, align 8
  br label %69

69:                                               ; preds = %58, %65
  %70 = phi i64 [ %68, %65 ], [ %60, %58 ]
  %71 = phi %"class.std::__1::unique_ptr.77"** [ %66, %65 ], [ %49, %58 ]
  %72 = inttoptr i64 %70 to %"class.std::__1::unique_ptr.77"*
  %73 = icmp eq %"class.std::__1::unique_ptr.77"* %27, %72
  br i1 %73, label %32, label %47

74:                                               ; preds = %38, %74
  %75 = phi i8** [ %84, %74 ], [ %41, %38 ]
  %76 = load i8*, i8** %75, align 8
  tail call void @_ZdlPv(i8* %76) #13
  %77 = load %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"*** %2, align 8
  %78 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %77, i64 1
  store %"class.std::__1::unique_ptr.77"** %78, %"class.std::__1::unique_ptr.77"*** %2, align 8
  %79 = load i64, i64* %40, align 8
  %80 = ptrtoint %"class.std::__1::unique_ptr.77"** %78 to i64
  %81 = sub i64 %79, %80
  %82 = ashr exact i64 %81, 3
  %83 = icmp ugt i64 %82, 2
  %84 = bitcast %"class.std::__1::unique_ptr.77"** %78 to i8**
  br i1 %83, label %74, label %85

85:                                               ; preds = %74, %38
  %86 = phi i64 [ %45, %38 ], [ %82, %74 ]
  switch i64 %86, label %90 [
    i64 1, label %88
    i64 2, label %87
  ]

87:                                               ; preds = %85
  br label %88

88:                                               ; preds = %85, %87
  %89 = phi i64 [ 512, %87 ], [ 256, %85 ]
  store i64 %89, i64* %4, align 8
  br label %90

90:                                               ; preds = %88, %85
  ret void
}

declare void @_ZNK10CFX_Matrix9TransformERK13CFX_PTemplateIfE(%class.CFX_PTemplate* sret, %class.CFX_Matrix*, %class.CFX_PTemplate* dereferenceable(8)) local_unnamed_addr #3

declare void @_ZN18CPDF_RenderOptionsC1Ev(%class.CPDF_RenderOptions*) unnamed_addr #3

declare void @_ZN17CPDF_TextRenderer14DrawTextStringEP16CFX_RenderDeviceffP9CPDF_FontfRK10CFX_MatrixRKN5fxcrt10ByteStringEjRK18CPDF_RenderOptions(%class.CFX_RenderDevice*, float, float, %class.CPDF_Font*, float, %class.CFX_Matrix* dereferenceable(24), %"class.fxcrt::ByteString"* dereferenceable(8), i32, %class.CPDF_RenderOptions* dereferenceable(40)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN18CPDF_RenderOptionsD1Ev(%class.CPDF_RenderOptions*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"*, i8**) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeINS_10unique_ptrIN13CPWL_EditImpl13UndoItemIfaceENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE19__add_back_capacityEv(%"class.std::__1::deque"*) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.std::__1::unique_ptr.77"*, align 8
  %3 = alloca %"class.std::__1::unique_ptr.77"*, align 8
  %4 = alloca %"struct.std::__1::__split_buffer.347", align 8
  %5 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, 511
  br i1 %7, label %8, label %162

8:                                                ; preds = %1
  %9 = add i64 %6, -512
  store i64 %9, i64* %5, align 8
  %10 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"*** %10, align 8
  %12 = bitcast %"class.std::__1::unique_ptr.77"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %11, i64 1
  store %"class.std::__1::unique_ptr.77"** %14, %"class.std::__1::unique_ptr.77"*** %10, align 8
  %15 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %16 = load %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"*** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %18 = load %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"*** %17, align 8
  %19 = icmp eq %"class.std::__1::unique_ptr.77"** %16, %18
  %20 = ptrtoint %"class.std::__1::unique_ptr.77"** %18 to i64
  %21 = bitcast %"class.std::__1::unique_ptr.77"** %16 to i64*
  br i1 %19, label %22, label %158

22:                                               ; preds = %8
  %23 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"*** %23, align 8
  %25 = icmp ugt %"class.std::__1::unique_ptr.77"** %14, %24
  %26 = ptrtoint %"class.std::__1::unique_ptr.77"** %24 to i64
  br i1 %25, label %27, label %47

27:                                               ; preds = %22
  %28 = ptrtoint %"class.std::__1::unique_ptr.77"** %14 to i64
  %29 = sub i64 %28, %26
  %30 = ashr exact i64 %29, 3
  %31 = add nsw i64 %30, 1
  %32 = sdiv i64 %31, -2
  %33 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %14, i64 %32
  %34 = ptrtoint %"class.std::__1::unique_ptr.77"** %16 to i64
  %35 = sub i64 %34, %28
  %36 = ashr exact i64 %35, 3
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %27
  %39 = bitcast %"class.std::__1::unique_ptr.77"** %33 to i8*
  %40 = bitcast %"class.std::__1::unique_ptr.77"** %14 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 %35, i1 false) #12
  %41 = load %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"*** %10, align 8
  br label %42

42:                                               ; preds = %38, %27
  %43 = phi %"class.std::__1::unique_ptr.77"** [ %14, %27 ], [ %41, %38 ]
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %33, i64 %36
  store %"class.std::__1::unique_ptr.77"** %44, %"class.std::__1::unique_ptr.77"*** %15, align 8
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %43, i64 %32
  store %"class.std::__1::unique_ptr.77"** %45, %"class.std::__1::unique_ptr.77"*** %10, align 8
  %46 = bitcast %"class.std::__1::unique_ptr.77"** %44 to i64*
  br label %158

47:                                               ; preds = %22
  %48 = bitcast %"class.std::__1::unique_ptr.77"*** %17 to i64*
  %49 = bitcast %"class.std::__1::deque"* %0 to i64*
  %50 = sub i64 %20, %26
  %51 = ashr exact i64 %50, 2
  %52 = icmp eq i64 %50, 0
  %53 = select i1 %52, i64 1, i64 %51
  %54 = icmp ugt i64 %53, 2305843009213693951
  br i1 %54, label %55, label %56

55:                                               ; preds = %47
  tail call void @abort() #14
  unreachable

56:                                               ; preds = %47
  %57 = lshr i64 %53, 2
  %58 = shl i64 %53, 3
  %59 = tail call i8* @_Znwm(i64 %58) #13
  %60 = bitcast i8* %59 to %"class.std::__1::unique_ptr.77"**
  %61 = ptrtoint i8* %59 to i64
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %60, i64 %57
  %63 = ptrtoint %"class.std::__1::unique_ptr.77"** %62 to i64
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %60, i64 %53
  %65 = ptrtoint %"class.std::__1::unique_ptr.77"** %64 to i64
  %66 = ptrtoint %"class.std::__1::unique_ptr.77"** %14 to i64
  %67 = ptrtoint %"class.std::__1::unique_ptr.77"** %16 to i64
  %68 = sub i64 %67, %66
  %69 = ashr exact i64 %68, 3
  %70 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %62, i64 %69
  %71 = icmp eq i64 %68, 0
  br i1 %71, label %147, label %72

72:                                               ; preds = %56
  %73 = add i64 %68, -8
  %74 = lshr i64 %73, 3
  %75 = add nuw nsw i64 %74, 1
  %76 = and i64 %75, 7
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %93, label %78

78:                                               ; preds = %72, %78
  %79 = phi %"class.std::__1::unique_ptr.77"** [ %86, %78 ], [ %62, %72 ]
  %80 = phi i64 [ %87, %78 ], [ %63, %72 ]
  %81 = phi %"class.std::__1::unique_ptr.77"** [ %88, %78 ], [ %14, %72 ]
  %82 = phi i64 [ %89, %78 ], [ %76, %72 ]
  %83 = bitcast %"class.std::__1::unique_ptr.77"** %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = inttoptr i64 %80 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %79, i64 1
  %87 = ptrtoint %"class.std::__1::unique_ptr.77"** %86 to i64
  %88 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %81, i64 1
  %89 = add i64 %82, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %78, !llvm.loop !75

91:                                               ; preds = %78
  %92 = ptrtoint %"class.std::__1::unique_ptr.77"** %86 to i64
  br label %93

93:                                               ; preds = %72, %91
  %94 = phi %"class.std::__1::unique_ptr.77"** [ %62, %72 ], [ %86, %91 ]
  %95 = phi i64 [ %63, %72 ], [ %92, %91 ]
  %96 = phi %"class.std::__1::unique_ptr.77"** [ %14, %72 ], [ %88, %91 ]
  %97 = icmp ult i64 %73, 56
  br i1 %97, label %144, label %98

98:                                               ; preds = %93, %98
  %99 = phi %"class.std::__1::unique_ptr.77"** [ %140, %98 ], [ %94, %93 ]
  %100 = phi i64 [ %141, %98 ], [ %95, %93 ]
  %101 = phi %"class.std::__1::unique_ptr.77"** [ %142, %98 ], [ %96, %93 ]
  %102 = bitcast %"class.std::__1::unique_ptr.77"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %99, i64 1
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %101, i64 1
  %107 = bitcast %"class.std::__1::unique_ptr.77"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.std::__1::unique_ptr.77"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %99, i64 2
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %101, i64 2
  %112 = bitcast %"class.std::__1::unique_ptr.77"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.77"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %99, i64 3
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %101, i64 3
  %117 = bitcast %"class.std::__1::unique_ptr.77"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"class.std::__1::unique_ptr.77"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %99, i64 4
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %101, i64 4
  %122 = bitcast %"class.std::__1::unique_ptr.77"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.std::__1::unique_ptr.77"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %99, i64 5
  %126 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %101, i64 5
  %127 = bitcast %"class.std::__1::unique_ptr.77"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.std::__1::unique_ptr.77"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %99, i64 6
  %131 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %101, i64 6
  %132 = bitcast %"class.std::__1::unique_ptr.77"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast %"class.std::__1::unique_ptr.77"** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %99, i64 7
  %136 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %101, i64 7
  %137 = bitcast %"class.std::__1::unique_ptr.77"** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %"class.std::__1::unique_ptr.77"** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %99, i64 8
  %141 = ptrtoint %"class.std::__1::unique_ptr.77"** %140 to i64
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %101, i64 8
  %143 = icmp eq %"class.std::__1::unique_ptr.77"** %70, %140
  br i1 %143, label %144, label %98

144:                                              ; preds = %98, %93
  %145 = ptrtoint %"class.std::__1::unique_ptr.77"** %70 to i64
  %146 = load %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"*** %23, align 8
  br label %147

147:                                              ; preds = %144, %56
  %148 = phi %"class.std::__1::unique_ptr.77"** [ %146, %144 ], [ %24, %56 ]
  %149 = phi i64 [ %145, %144 ], [ %63, %56 ]
  store i64 %61, i64* %49, align 8
  %150 = bitcast %"class.std::__1::unique_ptr.77"*** %10 to i64*
  store i64 %63, i64* %150, align 8
  %151 = bitcast %"class.std::__1::unique_ptr.77"*** %15 to i64*
  store i64 %149, i64* %151, align 8
  store i64 %65, i64* %48, align 8
  %152 = icmp eq %"class.std::__1::unique_ptr.77"** %148, null
  %153 = inttoptr i64 %149 to i64*
  br i1 %152, label %158, label %154

154:                                              ; preds = %147
  %155 = bitcast %"class.std::__1::unique_ptr.77"** %148 to i8*
  tail call void @_ZdlPv(i8* %155) #13
  %156 = bitcast %"class.std::__1::unique_ptr.77"*** %15 to i64**
  %157 = load i64*, i64** %156, align 8
  br label %158

158:                                              ; preds = %8, %42, %147, %154
  %159 = phi i64* [ %157, %154 ], [ %153, %147 ], [ %46, %42 ], [ %21, %8 ]
  store i64 %13, i64* %159, align 8
  %160 = load %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"*** %15, align 8
  %161 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %160, i64 1
  store %"class.std::__1::unique_ptr.77"** %161, %"class.std::__1::unique_ptr.77"*** %15, align 8
  br label %460

162:                                              ; preds = %1
  %163 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %164 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %165 = bitcast %"class.std::__1::unique_ptr.77"*** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %168 = bitcast %"class.std::__1::unique_ptr.77"*** %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = sub i64 %166, %169
  %171 = ashr exact i64 %170, 3
  %172 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %173 = bitcast %"class.std::__1::unique_ptr.77"*** %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = bitcast %"class.std::__1::deque"* %0 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = sub i64 %174, %176
  %178 = ashr exact i64 %177, 3
  %179 = icmp ult i64 %171, %178
  %180 = inttoptr i64 %166 to %"class.std::__1::unique_ptr.77"**
  %181 = inttoptr i64 %169 to %"class.std::__1::unique_ptr.77"**
  br i1 %179, label %182, label %337

182:                                              ; preds = %162
  %183 = icmp eq i64 %174, %166
  br i1 %183, label %188, label %184

184:                                              ; preds = %182
  %185 = bitcast %"class.std::__1::unique_ptr.77"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185) #12
  %186 = tail call i8* @_Znwm(i64 4096) #13
  %187 = bitcast %"class.std::__1::unique_ptr.77"** %2 to i8**
  store i8* %186, i8** %187, align 8
  call void @_ZNSt3__114__split_bufferIPNS_10unique_ptrIN13CPWL_EditImpl13UndoItemIfaceENS_14default_deleteIS3_EEEENS_9allocatorIS7_EEE9push_backEOS7_(%"struct.std::__1::__split_buffer"* %163, %"class.std::__1::unique_ptr.77"** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185) #12
  br label %460

188:                                              ; preds = %182
  %189 = bitcast %"class.std::__1::unique_ptr.77"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %189) #12
  %190 = tail call i8* @_Znwm(i64 4096) #13
  %191 = bitcast %"class.std::__1::unique_ptr.77"** %3 to i8**
  store i8* %190, i8** %191, align 8
  call void @_ZNSt3__114__split_bufferIPNS_10unique_ptrIN13CPWL_EditImpl13UndoItemIfaceENS_14default_deleteIS3_EEEENS_9allocatorIS7_EEE10push_frontEOS7_(%"struct.std::__1::__split_buffer"* %163, %"class.std::__1::unique_ptr.77"** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %189) #12
  %192 = load %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"*** %167, align 8
  %193 = bitcast %"class.std::__1::unique_ptr.77"** %192 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %192, i64 1
  store %"class.std::__1::unique_ptr.77"** %195, %"class.std::__1::unique_ptr.77"*** %167, align 8
  %196 = load %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"*** %164, align 8
  %197 = load %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"*** %172, align 8
  %198 = icmp eq %"class.std::__1::unique_ptr.77"** %196, %197
  %199 = ptrtoint %"class.std::__1::unique_ptr.77"** %197 to i64
  %200 = bitcast %"class.std::__1::unique_ptr.77"** %196 to i64*
  br i1 %198, label %201, label %333

201:                                              ; preds = %188
  %202 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %203 = load %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"*** %202, align 8
  %204 = icmp ugt %"class.std::__1::unique_ptr.77"** %195, %203
  %205 = ptrtoint %"class.std::__1::unique_ptr.77"** %203 to i64
  br i1 %204, label %206, label %226

206:                                              ; preds = %201
  %207 = ptrtoint %"class.std::__1::unique_ptr.77"** %195 to i64
  %208 = sub i64 %207, %205
  %209 = ashr exact i64 %208, 3
  %210 = add nsw i64 %209, 1
  %211 = sdiv i64 %210, -2
  %212 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %195, i64 %211
  %213 = ptrtoint %"class.std::__1::unique_ptr.77"** %196 to i64
  %214 = sub i64 %213, %207
  %215 = ashr exact i64 %214, 3
  %216 = icmp eq i64 %214, 0
  br i1 %216, label %221, label %217

217:                                              ; preds = %206
  %218 = bitcast %"class.std::__1::unique_ptr.77"** %212 to i8*
  %219 = bitcast %"class.std::__1::unique_ptr.77"** %195 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 %214, i1 false) #12
  %220 = load %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"*** %167, align 8
  br label %221

221:                                              ; preds = %217, %206
  %222 = phi %"class.std::__1::unique_ptr.77"** [ %195, %206 ], [ %220, %217 ]
  %223 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %212, i64 %215
  store %"class.std::__1::unique_ptr.77"** %223, %"class.std::__1::unique_ptr.77"*** %164, align 8
  %224 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %222, i64 %211
  store %"class.std::__1::unique_ptr.77"** %224, %"class.std::__1::unique_ptr.77"*** %167, align 8
  %225 = bitcast %"class.std::__1::unique_ptr.77"** %223 to i64*
  br label %333

226:                                              ; preds = %201
  %227 = sub i64 %199, %205
  %228 = ashr exact i64 %227, 2
  %229 = icmp eq i64 %227, 0
  %230 = select i1 %229, i64 1, i64 %228
  %231 = icmp ugt i64 %230, 2305843009213693951
  br i1 %231, label %232, label %233

232:                                              ; preds = %226
  call void @abort() #14
  unreachable

233:                                              ; preds = %226
  %234 = lshr i64 %230, 2
  %235 = shl i64 %230, 3
  %236 = call i8* @_Znwm(i64 %235) #13
  %237 = bitcast i8* %236 to %"class.std::__1::unique_ptr.77"**
  %238 = ptrtoint i8* %236 to i64
  %239 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %237, i64 %234
  %240 = ptrtoint %"class.std::__1::unique_ptr.77"** %239 to i64
  %241 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %237, i64 %230
  %242 = ptrtoint %"class.std::__1::unique_ptr.77"** %241 to i64
  %243 = ptrtoint %"class.std::__1::unique_ptr.77"** %195 to i64
  %244 = ptrtoint %"class.std::__1::unique_ptr.77"** %196 to i64
  %245 = sub i64 %244, %243
  %246 = ashr exact i64 %245, 3
  %247 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %239, i64 %246
  %248 = icmp eq i64 %245, 0
  br i1 %248, label %324, label %249

249:                                              ; preds = %233
  %250 = add i64 %245, -8
  %251 = lshr i64 %250, 3
  %252 = add nuw nsw i64 %251, 1
  %253 = and i64 %252, 7
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %270, label %255

255:                                              ; preds = %249, %255
  %256 = phi %"class.std::__1::unique_ptr.77"** [ %263, %255 ], [ %239, %249 ]
  %257 = phi i64 [ %264, %255 ], [ %240, %249 ]
  %258 = phi %"class.std::__1::unique_ptr.77"** [ %265, %255 ], [ %195, %249 ]
  %259 = phi i64 [ %266, %255 ], [ %253, %249 ]
  %260 = bitcast %"class.std::__1::unique_ptr.77"** %258 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = inttoptr i64 %257 to i64*
  store i64 %261, i64* %262, align 8
  %263 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %256, i64 1
  %264 = ptrtoint %"class.std::__1::unique_ptr.77"** %263 to i64
  %265 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %258, i64 1
  %266 = add i64 %259, -1
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %268, label %255, !llvm.loop !77

268:                                              ; preds = %255
  %269 = ptrtoint %"class.std::__1::unique_ptr.77"** %263 to i64
  br label %270

270:                                              ; preds = %249, %268
  %271 = phi %"class.std::__1::unique_ptr.77"** [ %239, %249 ], [ %263, %268 ]
  %272 = phi i64 [ %240, %249 ], [ %269, %268 ]
  %273 = phi %"class.std::__1::unique_ptr.77"** [ %195, %249 ], [ %265, %268 ]
  %274 = icmp ult i64 %250, 56
  br i1 %274, label %321, label %275

275:                                              ; preds = %270, %275
  %276 = phi %"class.std::__1::unique_ptr.77"** [ %317, %275 ], [ %271, %270 ]
  %277 = phi i64 [ %318, %275 ], [ %272, %270 ]
  %278 = phi %"class.std::__1::unique_ptr.77"** [ %319, %275 ], [ %273, %270 ]
  %279 = bitcast %"class.std::__1::unique_ptr.77"** %278 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = inttoptr i64 %277 to i64*
  store i64 %280, i64* %281, align 8
  %282 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %276, i64 1
  %283 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %278, i64 1
  %284 = bitcast %"class.std::__1::unique_ptr.77"** %283 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = bitcast %"class.std::__1::unique_ptr.77"** %282 to i64*
  store i64 %285, i64* %286, align 8
  %287 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %276, i64 2
  %288 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %278, i64 2
  %289 = bitcast %"class.std::__1::unique_ptr.77"** %288 to i64*
  %290 = load i64, i64* %289, align 8
  %291 = bitcast %"class.std::__1::unique_ptr.77"** %287 to i64*
  store i64 %290, i64* %291, align 8
  %292 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %276, i64 3
  %293 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %278, i64 3
  %294 = bitcast %"class.std::__1::unique_ptr.77"** %293 to i64*
  %295 = load i64, i64* %294, align 8
  %296 = bitcast %"class.std::__1::unique_ptr.77"** %292 to i64*
  store i64 %295, i64* %296, align 8
  %297 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %276, i64 4
  %298 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %278, i64 4
  %299 = bitcast %"class.std::__1::unique_ptr.77"** %298 to i64*
  %300 = load i64, i64* %299, align 8
  %301 = bitcast %"class.std::__1::unique_ptr.77"** %297 to i64*
  store i64 %300, i64* %301, align 8
  %302 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %276, i64 5
  %303 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %278, i64 5
  %304 = bitcast %"class.std::__1::unique_ptr.77"** %303 to i64*
  %305 = load i64, i64* %304, align 8
  %306 = bitcast %"class.std::__1::unique_ptr.77"** %302 to i64*
  store i64 %305, i64* %306, align 8
  %307 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %276, i64 6
  %308 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %278, i64 6
  %309 = bitcast %"class.std::__1::unique_ptr.77"** %308 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = bitcast %"class.std::__1::unique_ptr.77"** %307 to i64*
  store i64 %310, i64* %311, align 8
  %312 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %276, i64 7
  %313 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %278, i64 7
  %314 = bitcast %"class.std::__1::unique_ptr.77"** %313 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = bitcast %"class.std::__1::unique_ptr.77"** %312 to i64*
  store i64 %315, i64* %316, align 8
  %317 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %276, i64 8
  %318 = ptrtoint %"class.std::__1::unique_ptr.77"** %317 to i64
  %319 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %278, i64 8
  %320 = icmp eq %"class.std::__1::unique_ptr.77"** %247, %317
  br i1 %320, label %321, label %275

321:                                              ; preds = %275, %270
  %322 = ptrtoint %"class.std::__1::unique_ptr.77"** %247 to i64
  %323 = load %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"*** %202, align 8
  br label %324

324:                                              ; preds = %321, %233
  %325 = phi %"class.std::__1::unique_ptr.77"** [ %323, %321 ], [ %203, %233 ]
  %326 = phi i64 [ %322, %321 ], [ %240, %233 ]
  store i64 %238, i64* %175, align 8
  store i64 %240, i64* %168, align 8
  store i64 %326, i64* %165, align 8
  store i64 %242, i64* %173, align 8
  %327 = icmp eq %"class.std::__1::unique_ptr.77"** %325, null
  %328 = inttoptr i64 %326 to i64*
  br i1 %327, label %333, label %329

329:                                              ; preds = %324
  %330 = bitcast %"class.std::__1::unique_ptr.77"** %325 to i8*
  call void @_ZdlPv(i8* %330) #13
  %331 = bitcast %"class.std::__1::unique_ptr.77"*** %164 to i64**
  %332 = load i64*, i64** %331, align 8
  br label %333

333:                                              ; preds = %188, %221, %324, %329
  %334 = phi i64* [ %332, %329 ], [ %328, %324 ], [ %225, %221 ], [ %200, %188 ]
  store i64 %194, i64* %334, align 8
  %335 = load %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"*** %164, align 8
  %336 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %335, i64 1
  store %"class.std::__1::unique_ptr.77"** %336, %"class.std::__1::unique_ptr.77"*** %164, align 8
  br label %460

337:                                              ; preds = %162
  %338 = bitcast %"struct.std::__1::__split_buffer.347"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %338) #12
  %339 = getelementptr inbounds %"struct.std::__1::__split_buffer.347", %"struct.std::__1::__split_buffer.347"* %4, i64 0, i32 1
  %340 = getelementptr inbounds %"struct.std::__1::__split_buffer.347", %"struct.std::__1::__split_buffer.347"* %4, i64 0, i32 2
  %341 = getelementptr inbounds %"struct.std::__1::__split_buffer.347", %"struct.std::__1::__split_buffer.347"* %4, i64 0, i32 3, i32 0, i32 0
  %342 = getelementptr inbounds %"struct.std::__1::__split_buffer.347", %"struct.std::__1::__split_buffer.347"* %4, i64 0, i32 3, i32 1, i32 0
  %343 = ashr exact i64 %177, 2
  %344 = icmp eq i64 %177, 0
  %345 = select i1 %344, i64 1, i64 %343
  %346 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3
  %347 = bitcast %"struct.std::__1::__split_buffer.347"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %347, i8 -86, i64 24, i1 false)
  store %"class.std::__1::unique_ptr.77"** null, %"class.std::__1::unique_ptr.77"*** %341, align 8
  %348 = bitcast %"class.std::__1::allocator.81"** %342 to %"class.std::__1::__compressed_pair.78"**
  store %"class.std::__1::__compressed_pair.78"* %346, %"class.std::__1::__compressed_pair.78"** %348, align 8
  %349 = icmp ugt i64 %345, 2305843009213693951
  br i1 %349, label %350, label %351

350:                                              ; preds = %337
  tail call void @abort() #14
  unreachable

351:                                              ; preds = %337
  %352 = shl i64 %345, 3
  %353 = tail call i8* @_Znwm(i64 %352) #13
  %354 = bitcast i8* %353 to %"class.std::__1::unique_ptr.77"**
  %355 = bitcast %"struct.std::__1::__split_buffer.347"* %4 to i8**
  store i8* %353, i8** %355, align 8
  %356 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %354, i64 %171
  store %"class.std::__1::unique_ptr.77"** %356, %"class.std::__1::unique_ptr.77"*** %340, align 8
  store %"class.std::__1::unique_ptr.77"** %356, %"class.std::__1::unique_ptr.77"*** %339, align 8
  %357 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %354, i64 %345
  store %"class.std::__1::unique_ptr.77"** %357, %"class.std::__1::unique_ptr.77"*** %341, align 8
  %358 = tail call i8* @_Znwm(i64 4096) #13
  %359 = ptrtoint i8* %358 to i64
  %360 = icmp eq i64 %171, %345
  %361 = ptrtoint %"class.std::__1::unique_ptr.77"** %357 to i64
  %362 = ptrtoint i8* %353 to i64
  %363 = ptrtoint %"class.std::__1::unique_ptr.77"** %356 to i64
  br i1 %360, label %364, label %398

364:                                              ; preds = %351
  %365 = icmp ugt %"class.std::__1::unique_ptr.77"** %356, %354
  br i1 %365, label %366, label %373

366:                                              ; preds = %364
  %367 = sub i64 %363, %362
  %368 = ashr exact i64 %367, 3
  %369 = add nsw i64 %368, 1
  %370 = sdiv i64 %369, -2
  %371 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %356, i64 %370
  store %"class.std::__1::unique_ptr.77"** %371, %"class.std::__1::unique_ptr.77"*** %340, align 8
  store %"class.std::__1::unique_ptr.77"** %371, %"class.std::__1::unique_ptr.77"*** %339, align 8
  %372 = ptrtoint %"class.std::__1::unique_ptr.77"** %371 to i64
  br label %398

373:                                              ; preds = %364
  %374 = sub i64 %361, %362
  %375 = ashr exact i64 %374, 2
  %376 = icmp eq i64 %374, 0
  %377 = select i1 %376, i64 1, i64 %375
  %378 = icmp ugt i64 %377, 2305843009213693951
  br i1 %378, label %379, label %380

379:                                              ; preds = %373
  tail call void @abort() #14
  unreachable

380:                                              ; preds = %373
  %381 = bitcast %"struct.std::__1::__split_buffer.347"* %4 to i64*
  %382 = bitcast %"class.std::__1::unique_ptr.77"*** %341 to i64*
  %383 = lshr i64 %377, 2
  %384 = shl i64 %377, 3
  %385 = tail call i8* @_Znwm(i64 %384) #13
  %386 = bitcast i8* %385 to %"class.std::__1::unique_ptr.77"**
  %387 = ptrtoint i8* %385 to i64
  %388 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %386, i64 %383
  %389 = ptrtoint %"class.std::__1::unique_ptr.77"** %388 to i64
  %390 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %386, i64 %377
  %391 = ptrtoint %"class.std::__1::unique_ptr.77"** %390 to i64
  store i64 %387, i64* %381, align 8
  %392 = bitcast %"class.std::__1::unique_ptr.77"*** %339 to i64*
  store i64 %389, i64* %392, align 8
  %393 = bitcast %"class.std::__1::unique_ptr.77"*** %340 to i64*
  store i64 %389, i64* %393, align 8
  store i64 %391, i64* %382, align 8
  tail call void @_ZdlPv(i8* nonnull %353) #13
  %394 = load %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"*** %164, align 8
  %395 = load %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"*** %167, align 8
  %396 = ptrtoint %"class.std::__1::unique_ptr.77"** %395 to i64
  %397 = ptrtoint %"class.std::__1::unique_ptr.77"** %394 to i64
  br label %398

398:                                              ; preds = %351, %366, %380
  %399 = phi i64 [ %391, %380 ], [ %361, %366 ], [ %361, %351 ]
  %400 = phi i64 [ %397, %380 ], [ %166, %366 ], [ %166, %351 ]
  %401 = phi i64 [ %389, %380 ], [ %372, %366 ], [ %363, %351 ]
  %402 = phi i64 [ %396, %380 ], [ %169, %366 ], [ %169, %351 ]
  %403 = phi i64 [ %387, %380 ], [ %362, %366 ], [ %362, %351 ]
  %404 = phi %"class.std::__1::unique_ptr.77"** [ %395, %380 ], [ %181, %366 ], [ %181, %351 ]
  %405 = phi %"class.std::__1::unique_ptr.77"** [ %394, %380 ], [ %180, %366 ], [ %180, %351 ]
  %406 = phi %"class.std::__1::unique_ptr.77"** [ %388, %380 ], [ %371, %366 ], [ %356, %351 ]
  %407 = bitcast %"class.std::__1::unique_ptr.77"** %406 to i64*
  store i64 %359, i64* %407, align 8
  %408 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %406, i64 1
  store %"class.std::__1::unique_ptr.77"** %408, %"class.std::__1::unique_ptr.77"*** %340, align 8
  %409 = icmp eq %"class.std::__1::unique_ptr.77"** %405, %404
  br i1 %409, label %410, label %455

410:                                              ; preds = %398
  %411 = ptrtoint %"class.std::__1::unique_ptr.77"** %408 to i64
  %412 = bitcast %"struct.std::__1::__split_buffer.347"* %4 to i64*
  %413 = bitcast %"class.std::__1::unique_ptr.77"*** %339 to i64*
  %414 = bitcast %"class.std::__1::unique_ptr.77"*** %340 to i64*
  %415 = bitcast %"class.std::__1::unique_ptr.77"*** %341 to i64*
  br label %427

416:                                              ; preds = %455
  %417 = ptrtoint %"class.std::__1::unique_ptr.77"** %458 to i64
  %418 = bitcast %"struct.std::__1::__split_buffer.347"* %4 to i64*
  %419 = load i64, i64* %418, align 8
  %420 = bitcast %"class.std::__1::unique_ptr.77"*** %339 to i64*
  %421 = load i64, i64* %420, align 8
  %422 = load i64, i64* %165, align 8
  %423 = bitcast %"class.std::__1::unique_ptr.77"*** %340 to i64*
  %424 = load i64, i64* %423, align 8
  %425 = bitcast %"class.std::__1::unique_ptr.77"*** %341 to i64*
  %426 = load i64, i64* %425, align 8
  br label %427

427:                                              ; preds = %410, %416
  %428 = phi i64* [ %415, %410 ], [ %425, %416 ]
  %429 = phi i64* [ %414, %410 ], [ %423, %416 ]
  %430 = phi i64* [ %413, %410 ], [ %420, %416 ]
  %431 = phi i64* [ %412, %410 ], [ %418, %416 ]
  %432 = phi i64 [ %399, %410 ], [ %426, %416 ]
  %433 = phi i64 [ %411, %410 ], [ %424, %416 ]
  %434 = phi i64 [ %400, %410 ], [ %422, %416 ]
  %435 = phi i64 [ %401, %410 ], [ %421, %416 ]
  %436 = phi i64 [ %402, %410 ], [ %417, %416 ]
  %437 = phi i64 [ %403, %410 ], [ %419, %416 ]
  %438 = load i64, i64* %175, align 8
  store i64 %437, i64* %175, align 8
  store i64 %438, i64* %431, align 8
  store i64 %435, i64* %168, align 8
  store i64 %436, i64* %430, align 8
  store i64 %433, i64* %165, align 8
  store i64 %434, i64* %429, align 8
  %439 = load i64, i64* %173, align 8
  store i64 %432, i64* %173, align 8
  store i64 %439, i64* %428, align 8
  %440 = inttoptr i64 %436 to %"class.std::__1::unique_ptr.77"**
  %441 = inttoptr i64 %434 to %"class.std::__1::unique_ptr.77"**
  %442 = icmp eq %"class.std::__1::unique_ptr.77"** %441, %440
  br i1 %442, label %450, label %443

443:                                              ; preds = %427
  %444 = getelementptr %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %441, i64 -1
  %445 = ptrtoint %"class.std::__1::unique_ptr.77"** %444 to i64
  %446 = sub i64 %445, %436
  %447 = lshr i64 %446, 3
  %448 = xor i64 %447, -1
  %449 = getelementptr %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %441, i64 %448
  store %"class.std::__1::unique_ptr.77"** %449, %"class.std::__1::unique_ptr.77"*** %340, align 8
  br label %450

450:                                              ; preds = %443, %427
  %451 = icmp eq i64 %438, 0
  br i1 %451, label %454, label %452

452:                                              ; preds = %450
  %453 = inttoptr i64 %438 to i8*
  call void @_ZdlPv(i8* %453) #13
  br label %454

454:                                              ; preds = %450, %452
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %338) #12
  br label %460

455:                                              ; preds = %398, %455
  %456 = phi %"class.std::__1::unique_ptr.77"** [ %457, %455 ], [ %405, %398 ]
  %457 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %456, i64 -1
  call void @_ZNSt3__114__split_bufferIPNS_10unique_ptrIN13CPWL_EditImpl13UndoItemIfaceENS_14default_deleteIS3_EEEERNS_9allocatorIS7_EEE10push_frontERKS7_(%"struct.std::__1::__split_buffer.347"* nonnull %4, %"class.std::__1::unique_ptr.77"** dereferenceable(8) %457)
  %458 = load %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"*** %167, align 8
  %459 = icmp eq %"class.std::__1::unique_ptr.77"** %457, %458
  br i1 %459, label %416, label %455

460:                                              ; preds = %454, %333, %184, %158
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPNS_10unique_ptrIN13CPWL_EditImpl13UndoItemIfaceENS_14default_deleteIS3_EEEENS_9allocatorIS7_EEE9push_backEOS7_(%"struct.std::__1::__split_buffer"*, %"class.std::__1::unique_ptr.77"** dereferenceable(8)) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"*** %5, align 8
  %7 = icmp eq %"class.std::__1::unique_ptr.77"** %4, %6
  %8 = ptrtoint %"class.std::__1::unique_ptr.77"** %6 to i64
  %9 = bitcast %"class.std::__1::unique_ptr.77"** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %12 = load %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %14 = load %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"*** %13, align 8
  %15 = icmp ugt %"class.std::__1::unique_ptr.77"** %12, %14
  %16 = ptrtoint %"class.std::__1::unique_ptr.77"** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"class.std::__1::unique_ptr.77"** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %12, i64 %22
  %24 = ptrtoint %"class.std::__1::unique_ptr.77"** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"class.std::__1::unique_ptr.77"** %23 to i8*
  %30 = bitcast %"class.std::__1::unique_ptr.77"** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #12
  %31 = load %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"class.std::__1::unique_ptr.77"** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %23, i64 %26
  store %"class.std::__1::unique_ptr.77"** %34, %"class.std::__1::unique_ptr.77"*** %3, align 8
  %35 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %33, i64 %22
  store %"class.std::__1::unique_ptr.77"** %35, %"class.std::__1::unique_ptr.77"*** %11, align 8
  %36 = bitcast %"class.std::__1::unique_ptr.77"** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast %"class.std::__1::unique_ptr.77"*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #14
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #13
  %50 = bitcast i8* %49 to %"class.std::__1::unique_ptr.77"**
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %50, i64 %47
  %53 = ptrtoint %"class.std::__1::unique_ptr.77"** %52 to i64
  %54 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %50, i64 %43
  %55 = ptrtoint %"class.std::__1::unique_ptr.77"** %54 to i64
  %56 = ptrtoint %"class.std::__1::unique_ptr.77"** %12 to i64
  %57 = ptrtoint %"class.std::__1::unique_ptr.77"** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi %"class.std::__1::unique_ptr.77"** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi %"class.std::__1::unique_ptr.77"** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast %"class.std::__1::unique_ptr.77"** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %69, i64 1
  %77 = ptrtoint %"class.std::__1::unique_ptr.77"** %76 to i64
  %78 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !78

81:                                               ; preds = %68
  %82 = ptrtoint %"class.std::__1::unique_ptr.77"** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi %"class.std::__1::unique_ptr.77"** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi %"class.std::__1::unique_ptr.77"** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi %"class.std::__1::unique_ptr.77"** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi %"class.std::__1::unique_ptr.77"** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast %"class.std::__1::unique_ptr.77"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %89, i64 1
  %96 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %91, i64 1
  %97 = bitcast %"class.std::__1::unique_ptr.77"** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"class.std::__1::unique_ptr.77"** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %89, i64 2
  %101 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %91, i64 2
  %102 = bitcast %"class.std::__1::unique_ptr.77"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"class.std::__1::unique_ptr.77"** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %89, i64 3
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %91, i64 3
  %107 = bitcast %"class.std::__1::unique_ptr.77"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.std::__1::unique_ptr.77"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %89, i64 4
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %91, i64 4
  %112 = bitcast %"class.std::__1::unique_ptr.77"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.77"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %89, i64 5
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %91, i64 5
  %117 = bitcast %"class.std::__1::unique_ptr.77"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"class.std::__1::unique_ptr.77"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %89, i64 6
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %91, i64 6
  %122 = bitcast %"class.std::__1::unique_ptr.77"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.std::__1::unique_ptr.77"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %89, i64 7
  %126 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %91, i64 7
  %127 = bitcast %"class.std::__1::unique_ptr.77"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.std::__1::unique_ptr.77"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %89, i64 8
  %131 = ptrtoint %"class.std::__1::unique_ptr.77"** %130 to i64
  %132 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %91, i64 8
  %133 = icmp eq %"class.std::__1::unique_ptr.77"** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint %"class.std::__1::unique_ptr.77"** %60 to i64
  %136 = load %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"*** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi %"class.std::__1::unique_ptr.77"** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast %"class.std::__1::unique_ptr.77"*** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast %"class.std::__1::unique_ptr.77"*** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq %"class.std::__1::unique_ptr.77"** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast %"class.std::__1::unique_ptr.77"** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #13
  %146 = bitcast %"class.std::__1::unique_ptr.77"*** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast %"class.std::__1::unique_ptr.77"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"*** %3, align 8
  %153 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %152, i64 1
  store %"class.std::__1::unique_ptr.77"** %153, %"class.std::__1::unique_ptr.77"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPNS_10unique_ptrIN13CPWL_EditImpl13UndoItemIfaceENS_14default_deleteIS3_EEEENS_9allocatorIS7_EEE10push_frontEOS7_(%"struct.std::__1::__split_buffer"*, %"class.std::__1::unique_ptr.77"** dereferenceable(8)) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %4 = load %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %6 = load %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"*** %5, align 8
  %7 = icmp eq %"class.std::__1::unique_ptr.77"** %4, %6
  %8 = ptrtoint %"class.std::__1::unique_ptr.77"** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %11 = load %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"*** %12, align 8
  %14 = icmp ult %"class.std::__1::unique_ptr.77"** %11, %13
  %15 = bitcast %"class.std::__1::unique_ptr.77"*** %12 to i64*
  %16 = ptrtoint %"class.std::__1::unique_ptr.77"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"class.std::__1::unique_ptr.77"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %11, i64 %22
  %24 = ptrtoint %"class.std::__1::unique_ptr.77"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %23, i64 %29
  %31 = bitcast %"class.std::__1::unique_ptr.77"** %30 to i8*
  %32 = bitcast %"class.std::__1::unique_ptr.77"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #12
  %33 = load %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"class.std::__1::unique_ptr.77"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"class.std::__1::unique_ptr.77"** [ %30, %27 ], [ %23, %17 ]
  store %"class.std::__1::unique_ptr.77"** %36, %"class.std::__1::unique_ptr.77"*** %3, align 8
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %35, i64 %22
  store %"class.std::__1::unique_ptr.77"** %37, %"class.std::__1::unique_ptr.77"*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #14
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #13
  %51 = bitcast i8* %50 to %"class.std::__1::unique_ptr.77"**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %51, i64 %48
  %54 = ptrtoint %"class.std::__1::unique_ptr.77"** %53 to i64
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %51, i64 %43
  %56 = ptrtoint %"class.std::__1::unique_ptr.77"** %55 to i64
  %57 = ptrtoint %"class.std::__1::unique_ptr.77"** %4 to i64
  %58 = ptrtoint %"class.std::__1::unique_ptr.77"** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"class.std::__1::unique_ptr.77"** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"class.std::__1::unique_ptr.77"** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"class.std::__1::unique_ptr.77"** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %70, i64 1
  %78 = ptrtoint %"class.std::__1::unique_ptr.77"** %77 to i64
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !79

82:                                               ; preds = %69
  %83 = ptrtoint %"class.std::__1::unique_ptr.77"** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"class.std::__1::unique_ptr.77"** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"class.std::__1::unique_ptr.77"** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"class.std::__1::unique_ptr.77"** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"class.std::__1::unique_ptr.77"** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"class.std::__1::unique_ptr.77"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %90, i64 1
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %92, i64 1
  %98 = bitcast %"class.std::__1::unique_ptr.77"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"class.std::__1::unique_ptr.77"** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %90, i64 2
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %92, i64 2
  %103 = bitcast %"class.std::__1::unique_ptr.77"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"class.std::__1::unique_ptr.77"** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %90, i64 3
  %107 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %92, i64 3
  %108 = bitcast %"class.std::__1::unique_ptr.77"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.std::__1::unique_ptr.77"** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %90, i64 4
  %112 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %92, i64 4
  %113 = bitcast %"class.std::__1::unique_ptr.77"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.std::__1::unique_ptr.77"** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %90, i64 5
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %92, i64 5
  %118 = bitcast %"class.std::__1::unique_ptr.77"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.77"** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %90, i64 6
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %92, i64 6
  %123 = bitcast %"class.std::__1::unique_ptr.77"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.std::__1::unique_ptr.77"** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %90, i64 7
  %127 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %92, i64 7
  %128 = bitcast %"class.std::__1::unique_ptr.77"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.std::__1::unique_ptr.77"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %90, i64 8
  %132 = ptrtoint %"class.std::__1::unique_ptr.77"** %131 to i64
  %133 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %92, i64 8
  %134 = icmp eq %"class.std::__1::unique_ptr.77"** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"class.std::__1::unique_ptr.77"** %61 to i64
  %137 = load %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"class.std::__1::unique_ptr.77"** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"class.std::__1::unique_ptr.77"*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"class.std::__1::unique_ptr.77"*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"class.std::__1::unique_ptr.77"** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"class.std::__1::unique_ptr.77"** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #13
  %146 = load %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"class.std::__1::unique_ptr.77"** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %148, i64 -1
  %150 = bitcast %"class.std::__1::unique_ptr.77"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"class.std::__1::unique_ptr.77"** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"*** %3, align 8
  %154 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %153, i64 -1
  store %"class.std::__1::unique_ptr.77"** %154, %"class.std::__1::unique_ptr.77"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPNS_10unique_ptrIN13CPWL_EditImpl13UndoItemIfaceENS_14default_deleteIS3_EEEERNS_9allocatorIS7_EEE10push_frontERKS7_(%"struct.std::__1::__split_buffer.347"*, %"class.std::__1::unique_ptr.77"** dereferenceable(8)) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.347", %"struct.std::__1::__split_buffer.347"* %0, i64 0, i32 1
  %4 = load %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.347", %"struct.std::__1::__split_buffer.347"* %0, i64 0, i32 0
  %6 = load %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"*** %5, align 8
  %7 = icmp eq %"class.std::__1::unique_ptr.77"** %4, %6
  %8 = ptrtoint %"class.std::__1::unique_ptr.77"** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.347", %"struct.std::__1::__split_buffer.347"* %0, i64 0, i32 2
  %11 = load %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.347", %"struct.std::__1::__split_buffer.347"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"*** %12, align 8
  %14 = icmp ult %"class.std::__1::unique_ptr.77"** %11, %13
  %15 = bitcast %"class.std::__1::unique_ptr.77"*** %12 to i64*
  %16 = ptrtoint %"class.std::__1::unique_ptr.77"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"class.std::__1::unique_ptr.77"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %11, i64 %22
  %24 = ptrtoint %"class.std::__1::unique_ptr.77"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %23, i64 %29
  %31 = bitcast %"class.std::__1::unique_ptr.77"** %30 to i8*
  %32 = bitcast %"class.std::__1::unique_ptr.77"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #12
  %33 = load %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"class.std::__1::unique_ptr.77"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"class.std::__1::unique_ptr.77"** [ %30, %27 ], [ %23, %17 ]
  store %"class.std::__1::unique_ptr.77"** %36, %"class.std::__1::unique_ptr.77"*** %3, align 8
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %35, i64 %22
  store %"class.std::__1::unique_ptr.77"** %37, %"class.std::__1::unique_ptr.77"*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.347"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #14
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #13
  %51 = bitcast i8* %50 to %"class.std::__1::unique_ptr.77"**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %51, i64 %48
  %54 = ptrtoint %"class.std::__1::unique_ptr.77"** %53 to i64
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %51, i64 %43
  %56 = ptrtoint %"class.std::__1::unique_ptr.77"** %55 to i64
  %57 = ptrtoint %"class.std::__1::unique_ptr.77"** %4 to i64
  %58 = ptrtoint %"class.std::__1::unique_ptr.77"** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"class.std::__1::unique_ptr.77"** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"class.std::__1::unique_ptr.77"** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"class.std::__1::unique_ptr.77"** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %70, i64 1
  %78 = ptrtoint %"class.std::__1::unique_ptr.77"** %77 to i64
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !80

82:                                               ; preds = %69
  %83 = ptrtoint %"class.std::__1::unique_ptr.77"** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"class.std::__1::unique_ptr.77"** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"class.std::__1::unique_ptr.77"** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"class.std::__1::unique_ptr.77"** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"class.std::__1::unique_ptr.77"** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"class.std::__1::unique_ptr.77"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %90, i64 1
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %92, i64 1
  %98 = bitcast %"class.std::__1::unique_ptr.77"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"class.std::__1::unique_ptr.77"** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %90, i64 2
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %92, i64 2
  %103 = bitcast %"class.std::__1::unique_ptr.77"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"class.std::__1::unique_ptr.77"** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %90, i64 3
  %107 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %92, i64 3
  %108 = bitcast %"class.std::__1::unique_ptr.77"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.std::__1::unique_ptr.77"** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %90, i64 4
  %112 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %92, i64 4
  %113 = bitcast %"class.std::__1::unique_ptr.77"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.std::__1::unique_ptr.77"** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %90, i64 5
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %92, i64 5
  %118 = bitcast %"class.std::__1::unique_ptr.77"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.77"** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %90, i64 6
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %92, i64 6
  %123 = bitcast %"class.std::__1::unique_ptr.77"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.std::__1::unique_ptr.77"** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %90, i64 7
  %127 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %92, i64 7
  %128 = bitcast %"class.std::__1::unique_ptr.77"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.std::__1::unique_ptr.77"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %90, i64 8
  %132 = ptrtoint %"class.std::__1::unique_ptr.77"** %131 to i64
  %133 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %92, i64 8
  %134 = icmp eq %"class.std::__1::unique_ptr.77"** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"class.std::__1::unique_ptr.77"** %61 to i64
  %137 = load %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"class.std::__1::unique_ptr.77"** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"class.std::__1::unique_ptr.77"*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"class.std::__1::unique_ptr.77"*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"class.std::__1::unique_ptr.77"** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"class.std::__1::unique_ptr.77"** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #13
  %146 = load %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"class.std::__1::unique_ptr.77"** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %148, i64 -1
  %150 = bitcast %"class.std::__1::unique_ptr.77"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"class.std::__1::unique_ptr.77"** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"class.std::__1::unique_ptr.77"**, %"class.std::__1::unique_ptr.77"*** %3, align 8
  %154 = getelementptr inbounds %"class.std::__1::unique_ptr.77"*, %"class.std::__1::unique_ptr.77"** %153, i64 -1
  store %"class.std::__1::unique_ptr.77"** %154, %"class.std::__1::unique_ptr.77"*** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #4

declare void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"*, i8*) local_unnamed_addr #3

declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #3

declare void @_ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE(%"class.std::__1::basic_stringbuf"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3

declare void @_ZN17CPVT_VariableTextC1Ev(%class.CPVT_VariableText*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN17CPVT_VariableTextD1Ev(%class.CPVT_VariableText*) unnamed_addr #6

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK13CPWL_EditImpl8VTToEditERK13CFX_PTemplateIfE: argument 0"}
!4 = distinct !{!4, !"_ZNK13CPWL_EditImpl8VTToEditERK13CFX_PTemplateIfE"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK13CPWL_EditImpl8VTToEditERK13CFX_PTemplateIfE: argument 0"}
!7 = distinct !{!7, !"_ZNK13CPWL_EditImpl8VTToEditERK13CFX_PTemplateIfE"}
!8 = !{i8 0, i8 2}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNK13CPWL_EditImpl11SelectState18ConvertToWordRangeEv: argument 0"}
!11 = distinct !{!11, !"_ZNK13CPWL_EditImpl11SelectState18ConvertToWordRangeEv"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNK13CPWL_EditImpl15GetSelectedTextEv: argument 0"}
!14 = distinct !{!14, !"_ZNK13CPWL_EditImpl15GetSelectedTextEv"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNK13CPWL_EditImpl11SelectState18ConvertToWordRangeEv: argument 0"}
!17 = distinct !{!17, !"_ZNK13CPWL_EditImpl11SelectState18ConvertToWordRangeEv"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNK13CPWL_EditImpl8VTToEditERK13CFX_PTemplateIfE: argument 0"}
!20 = distinct !{!20, !"_ZNK13CPWL_EditImpl8VTToEditERK13CFX_PTemplateIfE"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZNK13CPWL_EditImpl8VTToEditERK13CFX_PTemplateIfE: argument 0"}
!23 = distinct !{!23, !"_ZNK13CPWL_EditImpl8VTToEditERK13CFX_PTemplateIfE"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZNK13CPWL_EditImpl11SelectState18ConvertToWordRangeEv: argument 0"}
!26 = distinct !{!26, !"_ZNK13CPWL_EditImpl11SelectState18ConvertToWordRangeEv"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZNK13CPWL_EditImpl17GetWholeWordRangeEv: argument 0"}
!29 = distinct !{!29, !"_ZNK13CPWL_EditImpl17GetWholeWordRangeEv"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZNK13CPWL_EditImpl8VTToEditERK13CFX_PTemplateIfE: argument 0"}
!32 = distinct !{!32, !"_ZNK13CPWL_EditImpl8VTToEditERK13CFX_PTemplateIfE"}
!33 = !{!34}
!34 = distinct !{!34, !35, !"_ZNK13CPWL_EditImpl8VTToEditERK13CFX_PTemplateIfE: argument 0"}
!35 = distinct !{!35, !"_ZNK13CPWL_EditImpl8VTToEditERK13CFX_PTemplateIfE"}
!36 = !{!37}
!37 = distinct !{!37, !38, !"_ZNK13CPWL_EditImpl8VTToEditERK13CFX_PTemplateIfE: argument 0"}
!38 = distinct !{!38, !"_ZNK13CPWL_EditImpl8VTToEditERK13CFX_PTemplateIfE"}
!39 = !{!40}
!40 = distinct !{!40, !41, !"_ZNK13CPWL_EditImpl8VTToEditERK13CFX_PTemplateIfE: argument 0"}
!41 = distinct !{!41, !"_ZNK13CPWL_EditImpl8VTToEditERK13CFX_PTemplateIfE"}
!42 = !{!43}
!43 = distinct !{!43, !44, !"_ZNK13CPWL_EditImpl11SelectState18ConvertToWordRangeEv: argument 0"}
!44 = distinct !{!44, !"_ZNK13CPWL_EditImpl11SelectState18ConvertToWordRangeEv"}
!45 = !{!46}
!46 = distinct !{!46, !47, !"_ZNK13CPWL_EditImpl17GetWholeWordRangeEv: argument 0"}
!47 = distinct !{!47, !"_ZNK13CPWL_EditImpl17GetWholeWordRangeEv"}
!48 = !{!"branch_weights", i32 2000, i32 1}
!49 = !{i32 -2143598925}
!50 = !{i32 -2143598904}
!51 = !{!52}
!52 = distinct !{!52, !53, !"_ZNK13CPWL_EditImpl8VTToEditERK13CFX_PTemplateIfE: argument 0"}
!53 = distinct !{!53, !"_ZNK13CPWL_EditImpl8VTToEditERK13CFX_PTemplateIfE"}
!54 = !{!55}
!55 = distinct !{!55, !56, !"_ZNK13CPWL_EditImpl8VTToEditERK13CFX_PTemplateIfE: argument 0"}
!56 = distinct !{!56, !"_ZNK13CPWL_EditImpl8VTToEditERK13CFX_PTemplateIfE"}
!57 = !{!58}
!58 = distinct !{!58, !59, !"_ZNK13CPWL_EditImpl17GetWholeWordRangeEv: argument 0"}
!59 = distinct !{!59, !"_ZNK13CPWL_EditImpl17GetWholeWordRangeEv"}
!60 = !{!61}
!61 = distinct !{!61, !62, !"_ZNK13CPWL_EditImpl8EditToVTERK13CFX_PTemplateIfE: argument 0"}
!62 = distinct !{!62, !"_ZNK13CPWL_EditImpl8EditToVTERK13CFX_PTemplateIfE"}
!63 = !{!64}
!64 = distinct !{!64, !65, !"_ZNK13CPWL_EditImpl8EditToVTERK13CFX_PTemplateIfE: argument 0"}
!65 = distinct !{!65, !"_ZNK13CPWL_EditImpl8EditToVTERK13CFX_PTemplateIfE"}
!66 = !{!67}
!67 = distinct !{!67, !68, !"_ZNK13CPWL_EditImpl8EditToVTERK13CFX_PTemplateIfE: argument 0"}
!68 = distinct !{!68, !"_ZNK13CPWL_EditImpl8EditToVTERK13CFX_PTemplateIfE"}
!69 = !{!70}
!70 = distinct !{!70, !71, !"_ZNK13CPWL_EditImpl8EditToVTERK13CFX_PTemplateIfE: argument 0"}
!71 = distinct !{!71, !"_ZNK13CPWL_EditImpl8EditToVTERK13CFX_PTemplateIfE"}
!72 = !{!73}
!73 = distinct !{!73, !74, !"_ZNK13CPWL_EditImpl8EditToVTERK13CFX_PTemplateIfE: argument 0"}
!74 = distinct !{!74, !"_ZNK13CPWL_EditImpl8EditToVTERK13CFX_PTemplateIfE"}
!75 = distinct !{!75, !76}
!76 = !{!"llvm.loop.unroll.disable"}
!77 = distinct !{!77, !76}
!78 = distinct !{!78, !76}
!79 = distinct !{!79, !76}
!80 = distinct !{!80, !76}
