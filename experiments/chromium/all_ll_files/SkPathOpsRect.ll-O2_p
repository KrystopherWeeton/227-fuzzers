; ModuleID = '../../third_party/skia/src/pathops/SkPathOpsRect.cpp'
source_filename = "../../third_party/skia/src/pathops/SkPathOpsRect.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.SkDRect = type { double, double, double, double }
%struct.SkDQuad = type { [3 x %struct.SkDPoint] }
%struct.SkDPoint = type { double, double }
%struct.SkDConic = type { %struct.SkDQuad, float }
%struct.SkDCubic = type { [4 x %struct.SkDPoint] }
%class.SkTCurve = type { i32 (...)** }

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7SkDRect9setBoundsERK7SkDQuadS2_dd(%struct.SkDRect* nocapture, %struct.SkDQuad* dereferenceable(48), %struct.SkDQuad* dereferenceable(48), double, double) local_unnamed_addr #0 align 2 {
  %6 = alloca [2 x double], align 16
  %7 = bitcast %struct.SkDQuad* %2 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.SkDRect, %struct.SkDRect* %0, i64 0, i32 2
  %10 = bitcast double* %9 to i64*
  store i64 %8, i64* %10, align 8
  %11 = bitcast %struct.SkDRect* %0 to i64*
  store i64 %8, i64* %11, align 8
  %12 = getelementptr inbounds %struct.SkDQuad, %struct.SkDQuad* %2, i64 0, i32 0, i64 0, i32 1
  %13 = bitcast double* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %struct.SkDRect, %struct.SkDRect* %0, i64 0, i32 3
  %16 = bitcast double* %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = getelementptr inbounds %struct.SkDRect, %struct.SkDRect* %0, i64 0, i32 1
  %18 = bitcast double* %17 to i64*
  store i64 %14, i64* %18, align 8
  %19 = getelementptr inbounds %struct.SkDRect, %struct.SkDRect* %0, i64 0, i32 0
  %20 = getelementptr inbounds %struct.SkDQuad, %struct.SkDQuad* %2, i64 0, i32 0, i64 2, i32 0
  %21 = load double, double* %20, align 8
  %22 = bitcast i64 %8 to double
  %23 = fcmp olt double %21, %22
  %24 = select i1 %23, double %21, double %22
  store double %24, double* %19, align 8
  %25 = getelementptr inbounds %struct.SkDQuad, %struct.SkDQuad* %2, i64 0, i32 0, i64 2, i32 1
  %26 = load double, double* %25, align 8
  %27 = bitcast i64 %14 to double
  %28 = fcmp olt double %26, %27
  %29 = select i1 %28, double %26, double %27
  store double %29, double* %17, align 8
  %30 = load double, double* %20, align 8
  %31 = fcmp ogt double %30, %22
  %32 = select i1 %31, double %30, double %22
  store double %32, double* %9, align 8
  %33 = load double, double* %25, align 8
  %34 = fcmp ogt double %33, %27
  %35 = select i1 %34, double %33, double %27
  store double %35, double* %15, align 8
  %36 = bitcast [2 x double]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #3
  %37 = bitcast [2 x double]* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %37, i8 -1, i64 16, i1 false)
  %38 = tail call zeroext i1 @_ZNK7SkDQuad12monotonicInXEv(%struct.SkDQuad* %2) #3
  br i1 %38, label %43, label %39

39:                                               ; preds = %5
  %40 = getelementptr inbounds [2 x double], [2 x double]* %6, i64 0, i64 0
  %41 = getelementptr inbounds %struct.SkDQuad, %struct.SkDQuad* %2, i64 0, i32 0, i64 0, i32 0
  %42 = call i32 @_ZN7SkDQuad11FindExtremaEPKdPd(double* %41, double* nonnull %40) #3
  br label %43

43:                                               ; preds = %39, %5
  %44 = phi i32 [ 0, %5 ], [ %42, %39 ]
  %45 = call zeroext i1 @_ZNK7SkDQuad12monotonicInYEv(%struct.SkDQuad* %2) #3
  br i1 %45, label %51, label %46

46:                                               ; preds = %43
  %47 = sext i32 %44 to i64
  %48 = getelementptr inbounds [2 x double], [2 x double]* %6, i64 0, i64 %47
  %49 = call i32 @_ZN7SkDQuad11FindExtremaEPKdPd(double* %12, double* %48) #3
  %50 = add nsw i32 %49, %44
  br label %51

51:                                               ; preds = %46, %43
  %52 = phi i32 [ %44, %43 ], [ %50, %46 ]
  %53 = icmp sgt i32 %52, 0
  br i1 %53, label %54, label %57

54:                                               ; preds = %51
  %55 = fsub double %4, %3
  %56 = zext i32 %52 to i64
  br label %58

57:                                               ; preds = %58, %51
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #3
  ret void

58:                                               ; preds = %58, %54
  %59 = phi i64 [ 0, %54 ], [ %79, %58 ]
  %60 = getelementptr inbounds [2 x double], [2 x double]* %6, i64 0, i64 %59
  %61 = load double, double* %60, align 8
  %62 = fmul double %55, %61
  %63 = fadd double %62, %3
  %64 = call { double, double } @_ZNK7SkDQuad5ptAtTEd(%struct.SkDQuad* %1, double %63) #3
  %65 = extractvalue { double, double } %64, 0
  %66 = extractvalue { double, double } %64, 1
  %67 = load double, double* %19, align 8
  %68 = fcmp olt double %65, %67
  %69 = select i1 %68, double %65, double %67
  store double %69, double* %19, align 8
  %70 = load double, double* %17, align 8
  %71 = fcmp olt double %66, %70
  %72 = select i1 %71, double %66, double %70
  store double %72, double* %17, align 8
  %73 = load double, double* %9, align 8
  %74 = fcmp olt double %73, %65
  %75 = select i1 %74, double %65, double %73
  store double %75, double* %9, align 8
  %76 = load double, double* %15, align 8
  %77 = fcmp olt double %76, %66
  %78 = select i1 %77, double %66, double %76
  store double %78, double* %15, align 8
  %79 = add nuw nsw i64 %59, 1
  %80 = icmp eq i64 %79, %56
  br i1 %80, label %57, label %58
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZNK7SkDQuad12monotonicInXEv(%struct.SkDQuad*) local_unnamed_addr #2

declare i32 @_ZN7SkDQuad11FindExtremaEPKdPd(double*, double*) local_unnamed_addr #2

declare zeroext i1 @_ZNK7SkDQuad12monotonicInYEv(%struct.SkDQuad*) local_unnamed_addr #2

declare { double, double } @_ZNK7SkDQuad5ptAtTEd(%struct.SkDQuad*, double) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7SkDRect9setBoundsERK8SkDConicS2_dd(%struct.SkDRect* nocapture, %struct.SkDConic* dereferenceable(56), %struct.SkDConic* dereferenceable(56), double, double) local_unnamed_addr #0 align 2 {
  %6 = alloca [2 x double], align 16
  %7 = bitcast %struct.SkDConic* %2 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.SkDRect, %struct.SkDRect* %0, i64 0, i32 2
  %10 = bitcast double* %9 to i64*
  store i64 %8, i64* %10, align 8
  %11 = bitcast %struct.SkDRect* %0 to i64*
  store i64 %8, i64* %11, align 8
  %12 = getelementptr inbounds %struct.SkDConic, %struct.SkDConic* %2, i64 0, i32 0, i32 0, i64 0, i32 1
  %13 = bitcast double* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %struct.SkDRect, %struct.SkDRect* %0, i64 0, i32 3
  %16 = bitcast double* %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = getelementptr inbounds %struct.SkDRect, %struct.SkDRect* %0, i64 0, i32 1
  %18 = bitcast double* %17 to i64*
  store i64 %14, i64* %18, align 8
  %19 = getelementptr inbounds %struct.SkDRect, %struct.SkDRect* %0, i64 0, i32 0
  %20 = getelementptr inbounds %struct.SkDConic, %struct.SkDConic* %2, i64 0, i32 0, i32 0, i64 2, i32 0
  %21 = load double, double* %20, align 8
  %22 = bitcast i64 %8 to double
  %23 = fcmp olt double %21, %22
  %24 = select i1 %23, double %21, double %22
  store double %24, double* %19, align 8
  %25 = getelementptr inbounds %struct.SkDConic, %struct.SkDConic* %2, i64 0, i32 0, i32 0, i64 2, i32 1
  %26 = load double, double* %25, align 8
  %27 = bitcast i64 %14 to double
  %28 = fcmp olt double %26, %27
  %29 = select i1 %28, double %26, double %27
  store double %29, double* %17, align 8
  %30 = load double, double* %20, align 8
  %31 = fcmp ogt double %30, %22
  %32 = select i1 %31, double %30, double %22
  store double %32, double* %9, align 8
  %33 = load double, double* %25, align 8
  %34 = fcmp ogt double %33, %27
  %35 = select i1 %34, double %33, double %27
  store double %35, double* %15, align 8
  %36 = bitcast [2 x double]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #3
  %37 = getelementptr inbounds %struct.SkDConic, %struct.SkDConic* %2, i64 0, i32 0
  %38 = bitcast [2 x double]* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %38, i8 -1, i64 16, i1 false)
  %39 = tail call zeroext i1 @_ZNK7SkDQuad12monotonicInXEv(%struct.SkDQuad* %37) #3
  br i1 %39, label %46, label %40

40:                                               ; preds = %5
  %41 = getelementptr inbounds [2 x double], [2 x double]* %6, i64 0, i64 0
  %42 = getelementptr inbounds %struct.SkDConic, %struct.SkDConic* %2, i64 0, i32 0, i32 0, i64 0, i32 0
  %43 = getelementptr inbounds %struct.SkDConic, %struct.SkDConic* %2, i64 0, i32 1
  %44 = load float, float* %43, align 8
  %45 = call i32 @_ZN8SkDConic11FindExtremaEPKdfPd(double* %42, float %44, double* nonnull %41) #3
  br label %46

46:                                               ; preds = %40, %5
  %47 = phi i32 [ 0, %5 ], [ %45, %40 ]
  %48 = call zeroext i1 @_ZNK7SkDQuad12monotonicInYEv(%struct.SkDQuad* %37) #3
  br i1 %48, label %56, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds %struct.SkDConic, %struct.SkDConic* %2, i64 0, i32 1
  %51 = load float, float* %50, align 8
  %52 = sext i32 %47 to i64
  %53 = getelementptr inbounds [2 x double], [2 x double]* %6, i64 0, i64 %52
  %54 = call i32 @_ZN8SkDConic11FindExtremaEPKdfPd(double* %12, float %51, double* %53) #3
  %55 = add nsw i32 %54, %47
  br label %56

56:                                               ; preds = %49, %46
  %57 = phi i32 [ %47, %46 ], [ %55, %49 ]
  %58 = icmp sgt i32 %57, 0
  br i1 %58, label %59, label %62

59:                                               ; preds = %56
  %60 = fsub double %4, %3
  %61 = zext i32 %57 to i64
  br label %63

62:                                               ; preds = %63, %56
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #3
  ret void

63:                                               ; preds = %63, %59
  %64 = phi i64 [ 0, %59 ], [ %84, %63 ]
  %65 = getelementptr inbounds [2 x double], [2 x double]* %6, i64 0, i64 %64
  %66 = load double, double* %65, align 8
  %67 = fmul double %60, %66
  %68 = fadd double %67, %3
  %69 = call { double, double } @_ZNK8SkDConic5ptAtTEd(%struct.SkDConic* %1, double %68) #3
  %70 = extractvalue { double, double } %69, 0
  %71 = extractvalue { double, double } %69, 1
  %72 = load double, double* %19, align 8
  %73 = fcmp olt double %70, %72
  %74 = select i1 %73, double %70, double %72
  store double %74, double* %19, align 8
  %75 = load double, double* %17, align 8
  %76 = fcmp olt double %71, %75
  %77 = select i1 %76, double %71, double %75
  store double %77, double* %17, align 8
  %78 = load double, double* %9, align 8
  %79 = fcmp olt double %78, %70
  %80 = select i1 %79, double %70, double %78
  store double %80, double* %9, align 8
  %81 = load double, double* %15, align 8
  %82 = fcmp olt double %81, %71
  %83 = select i1 %82, double %71, double %81
  store double %83, double* %15, align 8
  %84 = add nuw nsw i64 %64, 1
  %85 = icmp eq i64 %84, %61
  br i1 %85, label %62, label %63
}

declare i32 @_ZN8SkDConic11FindExtremaEPKdfPd(double*, float, double*) local_unnamed_addr #2

declare { double, double } @_ZNK8SkDConic5ptAtTEd(%struct.SkDConic*, double) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7SkDRect9setBoundsERK8SkDCubicS2_dd(%struct.SkDRect* nocapture, %struct.SkDCubic* dereferenceable(64), %struct.SkDCubic* dereferenceable(64), double, double) local_unnamed_addr #0 align 2 {
  %6 = alloca [4 x double], align 16
  %7 = bitcast %struct.SkDCubic* %2 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.SkDRect, %struct.SkDRect* %0, i64 0, i32 2
  %10 = bitcast double* %9 to i64*
  store i64 %8, i64* %10, align 8
  %11 = bitcast %struct.SkDRect* %0 to i64*
  store i64 %8, i64* %11, align 8
  %12 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %2, i64 0, i32 0, i64 0, i32 1
  %13 = bitcast double* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %struct.SkDRect, %struct.SkDRect* %0, i64 0, i32 3
  %16 = bitcast double* %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = getelementptr inbounds %struct.SkDRect, %struct.SkDRect* %0, i64 0, i32 1
  %18 = bitcast double* %17 to i64*
  store i64 %14, i64* %18, align 8
  %19 = getelementptr inbounds %struct.SkDRect, %struct.SkDRect* %0, i64 0, i32 0
  %20 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %2, i64 0, i32 0, i64 3, i32 0
  %21 = load double, double* %20, align 8
  %22 = bitcast i64 %8 to double
  %23 = fcmp olt double %21, %22
  %24 = select i1 %23, double %21, double %22
  store double %24, double* %19, align 8
  %25 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %2, i64 0, i32 0, i64 3, i32 1
  %26 = load double, double* %25, align 8
  %27 = bitcast i64 %14 to double
  %28 = fcmp olt double %26, %27
  %29 = select i1 %28, double %26, double %27
  store double %29, double* %17, align 8
  %30 = load double, double* %20, align 8
  %31 = fcmp ogt double %30, %22
  %32 = select i1 %31, double %30, double %22
  store double %32, double* %9, align 8
  %33 = load double, double* %25, align 8
  %34 = fcmp ogt double %33, %27
  %35 = select i1 %34, double %33, double %27
  store double %35, double* %15, align 8
  %36 = bitcast [4 x double]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %36) #3
  %37 = bitcast [4 x double]* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %37, i8 -1, i64 32, i1 false)
  %38 = tail call zeroext i1 @_ZNK8SkDCubic12monotonicInXEv(%struct.SkDCubic* %2) #3
  br i1 %38, label %43, label %39

39:                                               ; preds = %5
  %40 = getelementptr inbounds [4 x double], [4 x double]* %6, i64 0, i64 0
  %41 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %2, i64 0, i32 0, i64 0, i32 0
  %42 = call i32 @_ZN8SkDCubic11FindExtremaEPKdPd(double* %41, double* nonnull %40) #3
  br label %43

43:                                               ; preds = %39, %5
  %44 = phi i32 [ 0, %5 ], [ %42, %39 ]
  %45 = call zeroext i1 @_ZNK8SkDCubic12monotonicInYEv(%struct.SkDCubic* %2) #3
  br i1 %45, label %51, label %46

46:                                               ; preds = %43
  %47 = sext i32 %44 to i64
  %48 = getelementptr inbounds [4 x double], [4 x double]* %6, i64 0, i64 %47
  %49 = call i32 @_ZN8SkDCubic11FindExtremaEPKdPd(double* %12, double* %48) #3
  %50 = add nsw i32 %49, %44
  br label %51

51:                                               ; preds = %46, %43
  %52 = phi i32 [ %44, %43 ], [ %50, %46 ]
  %53 = icmp sgt i32 %52, 0
  br i1 %53, label %54, label %57

54:                                               ; preds = %51
  %55 = fsub double %4, %3
  %56 = zext i32 %52 to i64
  br label %58

57:                                               ; preds = %58, %51
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %36) #3
  ret void

58:                                               ; preds = %58, %54
  %59 = phi i64 [ 0, %54 ], [ %79, %58 ]
  %60 = getelementptr inbounds [4 x double], [4 x double]* %6, i64 0, i64 %59
  %61 = load double, double* %60, align 8
  %62 = fmul double %55, %61
  %63 = fadd double %62, %3
  %64 = call { double, double } @_ZNK8SkDCubic5ptAtTEd(%struct.SkDCubic* %1, double %63) #3
  %65 = extractvalue { double, double } %64, 0
  %66 = extractvalue { double, double } %64, 1
  %67 = load double, double* %19, align 8
  %68 = fcmp olt double %65, %67
  %69 = select i1 %68, double %65, double %67
  store double %69, double* %19, align 8
  %70 = load double, double* %17, align 8
  %71 = fcmp olt double %66, %70
  %72 = select i1 %71, double %66, double %70
  store double %72, double* %17, align 8
  %73 = load double, double* %9, align 8
  %74 = fcmp olt double %73, %65
  %75 = select i1 %74, double %65, double %73
  store double %75, double* %9, align 8
  %76 = load double, double* %15, align 8
  %77 = fcmp olt double %76, %66
  %78 = select i1 %77, double %66, double %76
  store double %78, double* %15, align 8
  %79 = add nuw nsw i64 %59, 1
  %80 = icmp eq i64 %79, %56
  br i1 %80, label %57, label %58
}

declare zeroext i1 @_ZNK8SkDCubic12monotonicInXEv(%struct.SkDCubic*) local_unnamed_addr #2

declare i32 @_ZN8SkDCubic11FindExtremaEPKdPd(double*, double*) local_unnamed_addr #2

declare zeroext i1 @_ZNK8SkDCubic12monotonicInYEv(%struct.SkDCubic*) local_unnamed_addr #2

declare { double, double } @_ZNK8SkDCubic5ptAtTEd(%struct.SkDCubic*, double) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7SkDRect9setBoundsERK8SkTCurve(%struct.SkDRect*, %class.SkTCurve* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %class.SkTCurve* %1 to void (%class.SkTCurve*, %struct.SkDRect*)***
  %4 = load void (%class.SkTCurve*, %struct.SkDRect*)**, void (%class.SkTCurve*, %struct.SkDRect*)*** %3, align 8
  %5 = getelementptr inbounds void (%class.SkTCurve*, %struct.SkDRect*)*, void (%class.SkTCurve*, %struct.SkDRect*)** %4, i64 20
  %6 = load void (%class.SkTCurve*, %struct.SkDRect*)*, void (%class.SkTCurve*, %struct.SkDRect*)** %5, align 8
  tail call void %6(%class.SkTCurve* %1, %struct.SkDRect* %0) #3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
