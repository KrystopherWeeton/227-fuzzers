; ModuleID = '../../third_party/webrtc/common_audio/signal_processing/energy.c'
source_filename = "../../third_party/webrtc/common_audio/signal_processing/energy.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: nounwind ssp uwtable
define hidden i32 @WebRtcSpl_Energy(i16*, i64, i32* nocapture) local_unnamed_addr #0 {
  %4 = tail call signext i16 @WebRtcSpl_GetScalingSquare(i16* %0, i64 %1, i64 %1) #2
  %5 = sext i16 %4 to i32
  %6 = icmp eq i64 %1, 0
  br i1 %6, label %108, label %7

7:                                                ; preds = %3
  %8 = icmp ult i64 %1, 8
  br i1 %8, label %92, label %9

9:                                                ; preds = %7
  %10 = and i64 %1, -8
  %11 = getelementptr i16, i16* %0, i64 %10
  %12 = insertelement <4 x i32> undef, i32 %5, i32 0
  %13 = shufflevector <4 x i32> %12, <4 x i32> undef, <4 x i32> zeroinitializer
  %14 = insertelement <4 x i32> undef, i32 %5, i32 0
  %15 = shufflevector <4 x i32> %14, <4 x i32> undef, <4 x i32> zeroinitializer
  %16 = add i64 %10, -8
  %17 = lshr exact i64 %16, 3
  %18 = add nuw nsw i64 %17, 1
  %19 = and i64 %18, 1
  %20 = icmp eq i64 %16, 0
  br i1 %20, label %60, label %21

21:                                               ; preds = %9
  %22 = sub nuw nsw i64 %18, %19
  br label %23

23:                                               ; preds = %23, %21
  %24 = phi i64 [ 0, %21 ], [ %57, %23 ]
  %25 = phi <4 x i32> [ zeroinitializer, %21 ], [ %55, %23 ]
  %26 = phi <4 x i32> [ zeroinitializer, %21 ], [ %56, %23 ]
  %27 = phi i64 [ %22, %21 ], [ %58, %23 ]
  %28 = getelementptr i16, i16* %0, i64 %24
  %29 = bitcast i16* %28 to <4 x i16>*
  %30 = load <4 x i16>, <4 x i16>* %29, align 2
  %31 = getelementptr i16, i16* %28, i64 4
  %32 = bitcast i16* %31 to <4 x i16>*
  %33 = load <4 x i16>, <4 x i16>* %32, align 2
  %34 = sext <4 x i16> %30 to <4 x i32>
  %35 = sext <4 x i16> %33 to <4 x i32>
  %36 = mul nsw <4 x i32> %34, %34
  %37 = mul nsw <4 x i32> %35, %35
  %38 = lshr <4 x i32> %36, %13
  %39 = lshr <4 x i32> %37, %15
  %40 = add nsw <4 x i32> %38, %25
  %41 = add nsw <4 x i32> %39, %26
  %42 = or i64 %24, 8
  %43 = getelementptr i16, i16* %0, i64 %42
  %44 = bitcast i16* %43 to <4 x i16>*
  %45 = load <4 x i16>, <4 x i16>* %44, align 2
  %46 = getelementptr i16, i16* %43, i64 4
  %47 = bitcast i16* %46 to <4 x i16>*
  %48 = load <4 x i16>, <4 x i16>* %47, align 2
  %49 = sext <4 x i16> %45 to <4 x i32>
  %50 = sext <4 x i16> %48 to <4 x i32>
  %51 = mul nsw <4 x i32> %49, %49
  %52 = mul nsw <4 x i32> %50, %50
  %53 = lshr <4 x i32> %51, %13
  %54 = lshr <4 x i32> %52, %15
  %55 = add nsw <4 x i32> %53, %40
  %56 = add nsw <4 x i32> %54, %41
  %57 = add i64 %24, 16
  %58 = add i64 %27, -2
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %60, label %23, !llvm.loop !2

60:                                               ; preds = %23, %9
  %61 = phi <4 x i32> [ undef, %9 ], [ %55, %23 ]
  %62 = phi <4 x i32> [ undef, %9 ], [ %56, %23 ]
  %63 = phi i64 [ 0, %9 ], [ %57, %23 ]
  %64 = phi <4 x i32> [ zeroinitializer, %9 ], [ %55, %23 ]
  %65 = phi <4 x i32> [ zeroinitializer, %9 ], [ %56, %23 ]
  %66 = icmp eq i64 %19, 0
  br i1 %66, label %82, label %67

67:                                               ; preds = %60
  %68 = getelementptr i16, i16* %0, i64 %63
  %69 = bitcast i16* %68 to <4 x i16>*
  %70 = load <4 x i16>, <4 x i16>* %69, align 2
  %71 = getelementptr i16, i16* %68, i64 4
  %72 = bitcast i16* %71 to <4 x i16>*
  %73 = load <4 x i16>, <4 x i16>* %72, align 2
  %74 = sext <4 x i16> %70 to <4 x i32>
  %75 = sext <4 x i16> %73 to <4 x i32>
  %76 = mul nsw <4 x i32> %75, %75
  %77 = lshr <4 x i32> %76, %15
  %78 = add nsw <4 x i32> %77, %65
  %79 = mul nsw <4 x i32> %74, %74
  %80 = lshr <4 x i32> %79, %13
  %81 = add nsw <4 x i32> %80, %64
  br label %82

82:                                               ; preds = %60, %67
  %83 = phi <4 x i32> [ %61, %60 ], [ %81, %67 ]
  %84 = phi <4 x i32> [ %62, %60 ], [ %78, %67 ]
  %85 = add <4 x i32> %84, %83
  %86 = shufflevector <4 x i32> %85, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %87 = add <4 x i32> %85, %86
  %88 = shufflevector <4 x i32> %87, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %89 = add <4 x i32> %87, %88
  %90 = extractelement <4 x i32> %89, i32 0
  %91 = icmp eq i64 %10, %1
  br i1 %91, label %108, label %92

92:                                               ; preds = %82, %7
  %93 = phi i16* [ %0, %7 ], [ %11, %82 ]
  %94 = phi i64 [ 0, %7 ], [ %10, %82 ]
  %95 = phi i32 [ 0, %7 ], [ %90, %82 ]
  br label %96

96:                                               ; preds = %92, %96
  %97 = phi i16* [ %105, %96 ], [ %93, %92 ]
  %98 = phi i64 [ %106, %96 ], [ %94, %92 ]
  %99 = phi i32 [ %104, %96 ], [ %95, %92 ]
  %100 = load i16, i16* %97, align 2
  %101 = sext i16 %100 to i32
  %102 = mul nsw i32 %101, %101
  %103 = lshr i32 %102, %5
  %104 = add nsw i32 %103, %99
  %105 = getelementptr inbounds i16, i16* %97, i64 1
  %106 = add nuw i64 %98, 1
  %107 = icmp eq i64 %106, %1
  br i1 %107, label %108, label %96, !llvm.loop !4

108:                                              ; preds = %96, %82, %3
  %109 = phi i32 [ 0, %3 ], [ %90, %82 ], [ %104, %96 ]
  store i32 %5, i32* %2, align 4
  ret i32 %109
}

declare signext i16 @WebRtcSpl_GetScalingSquare(i16*, i64, i64) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.isvectorized", i32 1}
!4 = distinct !{!4, !5, !3}
!5 = !{!"llvm.loop.unroll.runtime.disable"}
