; ModuleID = '../../services/network/network_sandbox_hook_linux.cc'
source_filename = "../../services/network/network_sandbox_hook_linux.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.sandbox::syscall_broker::BrokerFilePermission"*, %"class.sandbox::syscall_broker::BrokerFilePermission"*, %"class.std::__1::__compressed_pair.1" }
%"class.sandbox::syscall_broker::BrokerFilePermission" = type <{ %"class.std::__1::basic_string", i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.sandbox::syscall_broker::BrokerFilePermission"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.sandbox::policy::SandboxLinux::Options" = type { %"struct.sandbox::policy::SandboxSeccompBPF::Options", i8, i8, i8 }
%"struct.sandbox::policy::SandboxSeccompBPF::Options" = type { i8, i8, i8, i8, i8 }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.sandbox::policy::SandboxLinux" = type { i32, i8, i32, i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr", %"class.sandbox::syscall_broker::BrokerProcess"* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.sandbox::SetuidSandboxClient"* }
%"class.sandbox::SetuidSandboxClient" = type opaque
%"class.sandbox::syscall_broker::BrokerProcess" = type opaque

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN7network26GetNetworkBrokerCommandSetEv() local_unnamed_addr #0 {
  ret i64 766
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network25GetNetworkFilePermissionsEv(%"class.std::__1::vector"* noalias nocapture sret) local_unnamed_addr #0 {
  %2 = alloca [1 x %"class.sandbox::syscall_broker::BrokerFilePermission"], align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast [1 x %"class.sandbox::syscall_broker::BrokerFilePermission"]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #6
  %5 = getelementptr inbounds [1 x %"class.sandbox::syscall_broker::BrokerFilePermission"], [1 x %"class.sandbox::syscall_broker::BrokerFilePermission"]* %2, i64 0, i64 0
  %6 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #6
  %7 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  store i8 1, i8* %8, align 1
  store i8 47, i8* %6, align 8
  %9 = getelementptr inbounds i8, i8* %6, i64 1
  store i8 0, i8* %9, align 1
  call void @_ZN7sandbox14syscall_broker20BrokerFilePermissionC1ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS0_15RecursionOptionENS0_17PersistenceOptionENS0_14ReadPermissionENS0_15WritePermissionENS0_16CreatePermissionENS0_31StatWithIntermediatesPermissionE(%"class.sandbox::syscall_broker::BrokerFilePermission"* nonnull %5, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3, i32 1, i32 0, i32 1, i32 1, i32 1, i32 0) #6
  %10 = call i8* @_Znwm(i64 32) #7
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %12 = bitcast %"class.sandbox::syscall_broker::BrokerFilePermission"** %11 to i8**
  store i8* %10, i8** %12, align 8
  %13 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = getelementptr inbounds i8, i8* %10, i64 32
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.sandbox::syscall_broker::BrokerFilePermission"** %15 to i8**
  store i8* %14, i8** %16, align 8
  %17 = bitcast [1 x %"class.sandbox::syscall_broker::BrokerFilePermission"]* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %23, label %21

21:                                               ; preds = %1
  %22 = bitcast [1 x %"class.sandbox::syscall_broker::BrokerFilePermission"]* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* nonnull align 8 %22, i64 24, i1 false) #6
  br label %32

23:                                               ; preds = %1
  %24 = bitcast i8* %10 to %"class.std::__1::basic_string"*
  %25 = getelementptr inbounds [1 x %"class.sandbox::syscall_broker::BrokerFilePermission"], [1 x %"class.sandbox::syscall_broker::BrokerFilePermission"]* %2, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds [1 x %"class.sandbox::syscall_broker::BrokerFilePermission"], [1 x %"class.sandbox::syscall_broker::BrokerFilePermission"]* %2, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %24, i8* %26, i64 %28) #6
  %29 = bitcast [1 x %"class.sandbox::syscall_broker::BrokerFilePermission"]* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = load i8, i8* %30, align 1
  br label %32

32:                                               ; preds = %23, %21
  %33 = phi i8 [ %31, %23 ], [ %19, %21 ]
  %34 = getelementptr inbounds i8, i8* %10, i64 24
  %35 = getelementptr inbounds [1 x %"class.sandbox::syscall_broker::BrokerFilePermission"], [1 x %"class.sandbox::syscall_broker::BrokerFilePermission"]* %2, i64 0, i64 0, i32 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 6, i1 false) #6
  %36 = getelementptr inbounds i8, i8* %10, i64 32
  %37 = bitcast %"class.sandbox::syscall_broker::BrokerFilePermission"** %11 to i64*
  %38 = ptrtoint i8* %36 to i64
  store i64 %38, i64* %37, align 8
  %39 = icmp slt i8 %33, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %32
  %41 = getelementptr inbounds [1 x %"class.sandbox::syscall_broker::BrokerFilePermission"], [1 x %"class.sandbox::syscall_broker::BrokerFilePermission"]* %2, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  call void @_ZdlPv(i8* %42) #7
  br label %43

43:                                               ; preds = %32, %40
  %44 = load i8, i8* %8, align 1
  %45 = icmp slt i8 %44, 0
  br i1 %45, label %46, label %49

46:                                               ; preds = %43
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @_ZdlPv(i8* %48) #7
  br label %49

49:                                               ; preds = %43, %46
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7network21NetworkPreSandboxHookEN7sandbox6policy12SandboxLinux7OptionsE(i64) local_unnamed_addr #0 {
  %2 = alloca i64, align 8
  %3 = bitcast i64* %2 to %"struct.sandbox::policy::SandboxLinux::Options"*
  %4 = alloca %"class.std::__1::bitset", align 8
  %5 = alloca %"class.std::__1::vector", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  store i64 %0, i64* %2, align 8
  %7 = tail call %"class.sandbox::policy::SandboxLinux"* @_ZN7sandbox6policy12SandboxLinux11GetInstanceEv() #6
  %8 = bitcast %"class.std::__1::bitset"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #6
  %9 = getelementptr inbounds %"class.std::__1::bitset", %"class.std::__1::bitset"* %4, i64 0, i32 0, i32 0
  store i64 766, i64* %9, align 8
  call void @_ZN7network25GetNetworkFilePermissionsEv(%"class.std::__1::vector"* nonnull sret %5)
  %10 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  call void @_ZN7sandbox6policy12SandboxLinux18StartBrokerProcessERKNSt3__16bitsetILm10EEENS2_6vectorINS_14syscall_broker20BrokerFilePermissionENS2_9allocatorIS9_EEEEN4base12OnceCallbackIFbNS1_7OptionsEEEERKSF_(%"class.sandbox::policy::SandboxLinux"* %7, %"class.std::__1::bitset"* nonnull dereferenceable(8) %4, %"class.std::__1::vector"* nonnull %5, %"class.base::OnceCallback"* nonnull %6, %"struct.sandbox::policy::SandboxLinux::Options"* nonnull dereferenceable(8) %3) #6
  %11 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %11) #6
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %13 = load %"class.sandbox::syscall_broker::BrokerFilePermission"*, %"class.sandbox::syscall_broker::BrokerFilePermission"** %12, align 8
  %14 = icmp eq %"class.sandbox::syscall_broker::BrokerFilePermission"* %13, null
  br i1 %14, label %37, label %15

15:                                               ; preds = %1
  %16 = bitcast %"class.sandbox::syscall_broker::BrokerFilePermission"* %13 to i8*
  %17 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %18 = load %"class.sandbox::syscall_broker::BrokerFilePermission"*, %"class.sandbox::syscall_broker::BrokerFilePermission"** %17, align 8
  %19 = icmp eq %"class.sandbox::syscall_broker::BrokerFilePermission"* %18, %13
  br i1 %19, label %35, label %20

20:                                               ; preds = %15, %30
  %21 = phi %"class.sandbox::syscall_broker::BrokerFilePermission"* [ %22, %30 ], [ %18, %15 ]
  %22 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerFilePermission", %"class.sandbox::syscall_broker::BrokerFilePermission"* %21, i64 -1
  %23 = bitcast %"class.sandbox::syscall_broker::BrokerFilePermission"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerFilePermission", %"class.sandbox::syscall_broker::BrokerFilePermission"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @_ZdlPv(i8* %29) #7
  br label %30

30:                                               ; preds = %27, %20
  %31 = icmp eq %"class.sandbox::syscall_broker::BrokerFilePermission"* %22, %13
  br i1 %31, label %32, label %20

32:                                               ; preds = %30
  %33 = bitcast %"class.std::__1::vector"* %5 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %32, %15
  %36 = phi i8* [ %34, %32 ], [ %16, %15 ]
  store %"class.sandbox::syscall_broker::BrokerFilePermission"* %13, %"class.sandbox::syscall_broker::BrokerFilePermission"** %17, align 8
  call void @_ZdlPv(i8* %36) #7
  br label %37

37:                                               ; preds = %1, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #6
  %38 = call zeroext i1 @_ZN7sandbox6policy12SandboxLinux32EngageNamespaceSandboxIfPossibleEv(%"class.sandbox::policy::SandboxLinux"* %7) #6
  ret i1 true
}

declare %"class.sandbox::policy::SandboxLinux"* @_ZN7sandbox6policy12SandboxLinux11GetInstanceEv() local_unnamed_addr #2

declare void @_ZN7sandbox6policy12SandboxLinux18StartBrokerProcessERKNSt3__16bitsetILm10EEENS2_6vectorINS_14syscall_broker20BrokerFilePermissionENS2_9allocatorIS9_EEEEN4base12OnceCallbackIFbNS1_7OptionsEEEERKSF_(%"class.sandbox::policy::SandboxLinux"*, %"class.std::__1::bitset"* dereferenceable(8), %"class.std::__1::vector"*, %"class.base::OnceCallback"*, %"struct.sandbox::policy::SandboxLinux::Options"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

declare zeroext i1 @_ZN7sandbox6policy12SandboxLinux32EngageNamespaceSandboxIfPossibleEv(%"class.sandbox::policy::SandboxLinux"*) local_unnamed_addr #2

declare void @_ZN7sandbox14syscall_broker20BrokerFilePermissionC1ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS0_15RecursionOptionENS0_17PersistenceOptionENS0_14ReadPermissionENS0_15WritePermissionENS0_16CreatePermissionENS0_31StatWithIntermediatesPermissionE(%"class.sandbox::syscall_broker::BrokerFilePermission"*, %"class.std::__1::basic_string"* dereferenceable(24), i32, i32, i32, i32, i32, i32) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
