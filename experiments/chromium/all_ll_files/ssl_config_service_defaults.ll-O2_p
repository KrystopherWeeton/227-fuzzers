; ModuleID = '../../net/ssl/ssl_config_service_defaults.cc'
source_filename = "../../net/ssl/ssl_config_service_defaults.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.net::SSLConfigServiceDefaults" = type { %"class.net::SSLConfigService", %"struct.net::SSLContextConfig" }
%"class.net::SSLConfigService" = type { i32 (...)**, %"class.base::ObserverList" }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"struct.net::SSLContextConfig" = type <{ i16, i16, i16, [2 x i8], %"class.std::__1::vector.1", i8, i8, [6 x i8] }>
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { i16*, i16*, %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { i16* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }

@_ZTVN3net24SSLConfigServiceDefaultsE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::SSLConfigServiceDefaults"*)* @_ZN3net24SSLConfigServiceDefaultsD2Ev to i8*), i8* bitcast (void (%"class.net::SSLConfigServiceDefaults"*)* @_ZN3net24SSLConfigServiceDefaultsD0Ev to i8*), i8* bitcast (void (%"struct.net::SSLContextConfig"*, %"class.net::SSLConfigServiceDefaults"*)* @_ZN3net24SSLConfigServiceDefaults19GetSSLContextConfigEv to i8*), i8* bitcast (i1 (%"class.net::SSLConfigServiceDefaults"*, %"class.std::__1::basic_string"*)* @_ZNK3net24SSLConfigServiceDefaults33CanShareConnectionWithClientCertsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE to i8*)] }, align 8

@_ZN3net24SSLConfigServiceDefaultsC1Ev = hidden unnamed_addr alias void (%"class.net::SSLConfigServiceDefaults"*), void (%"class.net::SSLConfigServiceDefaults"*)* @_ZN3net24SSLConfigServiceDefaultsC2Ev
@_ZN3net24SSLConfigServiceDefaultsD1Ev = hidden unnamed_addr alias void (%"class.net::SSLConfigServiceDefaults"*), void (%"class.net::SSLConfigServiceDefaults"*)* @_ZN3net24SSLConfigServiceDefaultsD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net24SSLConfigServiceDefaultsC2Ev(%"class.net::SSLConfigServiceDefaults"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::SSLConfigServiceDefaults", %"class.net::SSLConfigServiceDefaults"* %0, i64 0, i32 0
  tail call void @_ZN3net16SSLConfigServiceC2Ev(%"class.net::SSLConfigService"* %2) #5
  %3 = getelementptr inbounds %"class.net::SSLConfigServiceDefaults", %"class.net::SSLConfigServiceDefaults"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net24SSLConfigServiceDefaultsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.net::SSLConfigServiceDefaults", %"class.net::SSLConfigServiceDefaults"* %0, i64 0, i32 1
  tail call void @_ZN3net16SSLContextConfigC1Ev(%"struct.net::SSLContextConfig"* %4) #5
  ret void
}

declare void @_ZN3net16SSLConfigServiceC2Ev(%"class.net::SSLConfigService"*) unnamed_addr #1

declare void @_ZN3net16SSLContextConfigC1Ev(%"struct.net::SSLContextConfig"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net24SSLConfigServiceDefaultsD2Ev(%"class.net::SSLConfigServiceDefaults"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::SSLConfigServiceDefaults", %"class.net::SSLConfigServiceDefaults"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net24SSLConfigServiceDefaultsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::SSLConfigServiceDefaults", %"class.net::SSLConfigServiceDefaults"* %0, i64 0, i32 1
  tail call void @_ZN3net16SSLContextConfigD1Ev(%"struct.net::SSLContextConfig"* %3) #5
  %4 = getelementptr inbounds %"class.net::SSLConfigServiceDefaults", %"class.net::SSLConfigServiceDefaults"* %0, i64 0, i32 0
  tail call void @_ZN3net16SSLConfigServiceD2Ev(%"class.net::SSLConfigService"* %4) #5
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3net16SSLContextConfigD1Ev(%"struct.net::SSLContextConfig"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net16SSLConfigServiceD2Ev(%"class.net::SSLConfigService"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net24SSLConfigServiceDefaultsD0Ev(%"class.net::SSLConfigServiceDefaults"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::SSLConfigServiceDefaults", %"class.net::SSLConfigServiceDefaults"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net24SSLConfigServiceDefaultsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::SSLConfigServiceDefaults", %"class.net::SSLConfigServiceDefaults"* %0, i64 0, i32 1
  tail call void @_ZN3net16SSLContextConfigD1Ev(%"struct.net::SSLContextConfig"* %3) #5
  %4 = getelementptr inbounds %"class.net::SSLConfigServiceDefaults", %"class.net::SSLConfigServiceDefaults"* %0, i64 0, i32 0
  tail call void @_ZN3net16SSLConfigServiceD2Ev(%"class.net::SSLConfigService"* %4) #5
  %5 = bitcast %"class.net::SSLConfigServiceDefaults"* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net24SSLConfigServiceDefaults19GetSSLContextConfigEv(%"struct.net::SSLContextConfig"* noalias sret, %"class.net::SSLConfigServiceDefaults"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::SSLConfigServiceDefaults", %"class.net::SSLConfigServiceDefaults"* %1, i64 0, i32 1
  tail call void @_ZN3net16SSLContextConfigC1ERKS0_(%"struct.net::SSLContextConfig"* %0, %"struct.net::SSLContextConfig"* dereferenceable(40) %3) #5
  ret void
}

declare void @_ZN3net16SSLContextConfigC1ERKS0_(%"struct.net::SSLContextConfig"*, %"struct.net::SSLContextConfig"* dereferenceable(40)) unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK3net24SSLConfigServiceDefaults33CanShareConnectionWithClientCertsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.net::SSLConfigServiceDefaults"* nocapture readnone, %"class.std::__1::basic_string"* nocapture readnone dereferenceable(24)) unnamed_addr #4 align 2 {
  ret i1 false
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
