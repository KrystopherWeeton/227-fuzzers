; ModuleID = '../../third_party/blink/renderer/core/messaging/blink_cloneable_message_mojom_traits.cc'
source_filename = "../../third_party/blink/renderer/core/messaging/blink_cloneable_message_mojom_traits.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::Vector.69" = type { %"class.WTF::VectorBuffer.70" }
%"class.WTF::VectorBuffer.70" = type { %"class.WTF::VectorBufferBase.71" }
%"class.WTF::VectorBufferBase.71" = type { %class.scoped_refptr.44*, i32, i32 }
%class.scoped_refptr.44 = type { %"class.blink::BlobDataHandle"* }
%"class.blink::BlobDataHandle" = type { %"class.WTF::ThreadSafeRefCounted.45", %"class.WTF::String", %"class.WTF::String", i64, i8, %"class.mojo::PendingRemote", %"class.WTF::Mutex" }
%"class.WTF::ThreadSafeRefCounted.45" = type { %"class.base::RefCountedThreadSafe.46" }
%"class.base::RefCountedThreadSafe.46" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::String" = type { %class.scoped_refptr.34 }
%class.scoped_refptr.34 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.35" }
%"struct.std::__1::atomic.35" = type { %"struct.std::__1::__atomic_base.36" }
%"struct.std::__1::__atomic_base.36" = type { %"struct.std::__1::__atomic_base.37" }
%"struct.std::__1::__atomic_base.37" = type { %"struct.std::__1::__cxx_atomic_impl.38" }
%"struct.std::__1::__cxx_atomic_impl.38" = type { %"struct.std::__1::__cxx_atomic_base_impl.39" }
%"struct.std::__1::__cxx_atomic_base_impl.39" = type { i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.blink::BlinkCloneableMessage" = type { %class.scoped_refptr, %class.scoped_refptr.41, %"struct.v8_inspector::V8StackTraceId", %"class.absl::optional.64" }
%class.scoped_refptr = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr", i64, %"class.WTF::Vector", %"class.WTF::Vector.2", %"class.WTF::Vector.8", %"class.WTF::Vector.24", %class.scoped_refptr.33, %"class.WTF::HashMap", %"class.WTF::Vector.47", %"class.WTF::Vector", %"class.WTF::Vector.53", %"class.WTF::HashMap.59", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.WTF::Vector.2" = type { %"class.WTF::VectorBuffer.3" }
%"class.WTF::VectorBuffer.3" = type { %"class.WTF::VectorBufferBase.4", [8 x i8] }
%"class.WTF::VectorBufferBase.4" = type { %class.scoped_refptr.5*, i32, i32 }
%class.scoped_refptr.5 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.8" = type { %"class.WTF::VectorBuffer.9" }
%"class.WTF::VectorBuffer.9" = type { %"class.WTF::VectorBufferBase.10" }
%"class.WTF::VectorBufferBase.10" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.16" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.11 }
%class.scoped_refptr.11 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.24" = type { %"class.WTF::VectorBuffer.25" }
%"class.WTF::VectorBuffer.25" = type { %"class.WTF::VectorBufferBase.26" }
%"class.WTF::VectorBufferBase.26" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.27", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.27" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.scoped_refptr.33 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.41 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::String", %class.scoped_refptr.44 }
%"class.WTF::Vector.47" = type { %"class.WTF::VectorBuffer.48" }
%"class.WTF::VectorBuffer.48" = type { %"class.WTF::VectorBufferBase.49" }
%"class.WTF::VectorBufferBase.49" = type { %"class.mojo::ScopedHandleBase.50"*, i32, i32 }
%"class.mojo::ScopedHandleBase.50" = type { %"class.mojo::Handle" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [16 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.53" = type { %"class.WTF::VectorBuffer.54" }
%"class.WTF::VectorBuffer.54" = type { %"class.WTF::VectorBufferBase.55" }
%"class.WTF::VectorBufferBase.55" = type { %"class.mojo::PendingRemote.56"*, i32, i32 }
%"class.mojo::PendingRemote.56" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.WTF::HashMap.59" = type { %"class.WTF::HashTable.60" }
%"class.WTF::HashTable.60" = type <{ %"struct.WTF::KeyValuePair.63"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.63" = type { i8**, %"class.std::__1::unique_ptr.113" }
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%class.scoped_refptr.41 = type { %"class.blink::SecurityOrigin"* }
%"struct.v8_inspector::V8StackTraceId" = type <{ i64, %"struct.std::__1::pair", i8, [7 x i8] }>
%"struct.std::__1::pair" = type { i64, i64 }
%"class.absl::optional.64" = type { %"class.absl::optional_internal::optional_data.65" }
%"class.absl::optional_internal::optional_data.65" = type { %"class.absl::optional_internal::optional_data_base.66" }
%"class.absl::optional_internal::optional_data_base.66" = type { %"class.absl::optional_internal::optional_data_dtor_base.67" }
%"class.absl::optional_internal::optional_data_dtor_base.67" = type { i8, %union.anon.68 }
%union.anon.68 = type { %"class.base::UnguessableToken" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::mojom::internal::CloneableMessage_Data" = type { %"struct.mojo::internal::StructHeader", %"class.mojo_base::mojom::internal::BigBuffer_Data", %"struct.mojo::internal::Pointer.75", %"struct.mojo::internal::Pointer.76", i64, i64, i64, i8, [7 x i8], %"struct.mojo::internal::Pointer.77", %"struct.mojo::internal::Pointer.78" }
%"struct.mojo::internal::StructHeader" = type { i32, i32 }
%"class.mojo_base::mojom::internal::BigBuffer_Data" = type { i32, i32, %"union.mojo_base::mojom::internal::BigBuffer_Data::Union_" }
%"union.mojo_base::mojom::internal::BigBuffer_Data::Union_" = type { %"struct.mojo::internal::Pointer" }
%"struct.mojo::internal::Pointer" = type { i64 }
%"struct.mojo::internal::Pointer.75" = type { i64 }
%"struct.mojo::internal::Pointer.76" = type { i64 }
%"struct.mojo::internal::Pointer.77" = type { i64 }
%"struct.mojo::internal::Pointer.78" = type { i64 }
%"class.mojo::Message" = type { %"class.mojo::ScopedHandleBase.79", %"class.mojo::internal::Buffer", %"class.std::__1::vector", %"class.std::__1::vector.85", %"class.mojo::ConnectionGroup::Ref"*, i8, i8, i8* }
%"class.mojo::ScopedHandleBase.79" = type { %"class.mojo::MessageHandle" }
%"class.mojo::MessageHandle" = type { i64 }
%"class.mojo::internal::Buffer" = type { %"class.mojo::MessageHandle", i64, i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.mojo::ScopedHandleBase.50"*, %"class.mojo::ScopedHandleBase.50"*, %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.mojo::ScopedHandleBase.50"* }
%"class.std::__1::vector.85" = type { %"class.std::__1::__vector_base.86" }
%"class.std::__1::__vector_base.86" = type { %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.std::__1::__compressed_pair.88" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.87 }
%class.scoped_refptr.87 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"class.mojo::ScopedInterfaceEndpointHandle"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.93 }
%class.scoped_refptr.93 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.94", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.97, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.35", [4 x i8] }>
%"class.base::RefCountedThreadSafe.94" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.95 }
%class.scoped_refptr.95 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.96", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.96" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.97 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.98" }>
%"class.base::RefCountedThreadSafe.98" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::mojom::CloneableMessageDataView" = type { %"class.blink::mojom::internal::CloneableMessage_Data"*, %"class.mojo::Message"* }
%"class.mojo_base::BigBufferView" = type { i32, %"class.base::span", %"class.absl::optional.99" }
%"class.base::span" = type { %"struct.base::internal::ExtentStorage", i8* }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"class.absl::optional.99" = type { %"class.absl::optional_internal::optional_data.100" }
%"class.absl::optional_internal::optional_data.100" = type { %"class.absl::optional_internal::optional_data_base.101" }
%"class.absl::optional_internal::optional_data_base.101" = type { %"class.absl::optional_internal::optional_data_dtor_base.102" }
%"class.absl::optional_internal::optional_data_dtor_base.102" = type { i8, %union.anon.103 }
%union.anon.103 = type { %"class.mojo_base::internal::BigBufferSharedMemoryRegion" }
%"class.mojo_base::internal::BigBufferSharedMemoryRegion" = type { i64, %"class.mojo::ScopedHandleBase.104", %"class.std::__1::unique_ptr.105" }
%"class.mojo::ScopedHandleBase.104" = type { %"class.mojo::SharedBufferHandle" }
%"class.mojo::SharedBufferHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { i8* }
%"class.url::mojom::internal::Origin_Data" = type { %"struct.mojo::internal::StructHeader", %"struct.mojo::internal::Pointer.123", %"struct.mojo::internal::Pointer.123", i16, [6 x i8], %"struct.mojo::internal::Pointer.77" }
%"struct.mojo::internal::Pointer.123" = type { i64 }
%"class.mojo_base::mojom::internal::UnguessableToken_Data" = type { %"struct.mojo::internal::StructHeader", i64, i64 }
%"class.mojo::internal::Array_Data.131" = type { %"struct.mojo::internal::ArrayHeader" }
%"struct.mojo::internal::ArrayHeader" = type { i32, i32 }
%"class.mojo::internal::Array_Data" = type { %"struct.mojo::internal::ArrayHeader" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::mojom::internal::SerializedBlob_Data" = type { %"struct.mojo::internal::StructHeader", %"struct.mojo::internal::Pointer.123", %"struct.mojo::internal::Pointer.123", i64, %"struct.mojo::internal::Interface_Data" }
%"struct.mojo::internal::Interface_Data" = type { %"struct.mojo::internal::Handle_Data", i32 }
%"struct.mojo::internal::Handle_Data" = type { i32 }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZN5blink5mojom24CloneableMessageDataView9ReadBlobsIN3WTF6VectorI13scoped_refptrINS_14BlobDataHandleEELj0ENS3_18PartitionAllocatorEEEEEbPT_ = comdat any

$_ZN3WTF7HashMapINS_6StringE13scoped_refptrIN5blink14BlobDataHandleEENS_10StringHashENS_10HashTraitsIS1_EENS7_IS5_EENS_18PartitionAllocatorEE3SetIS1_RS5_EENS_18HashTableAddResultINS_9HashTableIS1_NS_12KeyValuePairIS1_S5_EENS_24KeyValuePairKeyExtractorES6_NS_18HashMapValueTraitsIS8_S9_EES8_SA_EESH_EEOT_OT0_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink14BlobDataHandleEEEEmm = comdat any

$_ZN3WTF6VectorI13scoped_refptrIN5blink14BlobDataHandleEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS4_EEvOT_ = comdat any

$_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewIN5blink5mojom22SerializedBlobDataViewEEEN3WTF6VectorI13scoped_refptrINS3_14BlobDataHandleEELj0ENS7_18PartitionAllocatorEEENS0_13ArrayIteratorINS_11ArrayTraitsISD_EESD_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_7PointerINS4_8internal19SerializedBlob_DataEEEEEPSD_PNS_7MessageE = comdat any

$_ZN3WTF6VectorI13scoped_refptrIN5blink14BlobDataHandleEELj0ENS_18PartitionAllocatorEE6resizeEj = comdat any

$_ZN3WTF6VectorI13scoped_refptrIN5blink14BlobDataHandleEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink14BlobDataHandleEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EES1_RS6_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink14BlobDataHandleEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS7_ = comdat any

$_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_6StringEEENS2_I13scoped_refptrIN5blink14BlobDataHandleEEEEEENS_10StringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S8_EES3_RS8_EEvRT_OT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink14BlobDataHandleEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS7_jSH_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink14BlobDataHandleEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE8ReinsertEOS7_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink14BlobDataHandleEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink14BlobDataHandleEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS7_j = comdat any

$_ZN4mojo12StructTraitsIN3url5mojom14OriginDataViewE13scoped_refptrIKN5blink14SecurityOriginEEE4ReadES3_PS8_ = comdat any

$_ZN5blink14SecurityOriginD2Ev = comdat any

$_ZN4mojo16UrlOriginAdapter20CreateSecurityOriginERKN3url14SchemeHostPortERKN4absl8optionalIN4base16UnguessableTokenEEE = comdat any

$_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewINS_20InterfacePtrDataViewIN5blink5mojom42FileSystemAccessTransferTokenInterfaceBaseEEEEEN3WTF6VectorINS_13PendingRemoteINS5_5blink29FileSystemAccessTransferTokenEEELj0ENS9_18PartitionAllocatorEEENS0_13ArrayIteratorINS_11ArrayTraitsISG_EESG_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_14Interface_DataEEEPSG_PNS_7MessageE = comdat any

$_ZN3WTF6VectorIN4mojo13PendingRemoteIN5blink5mojom5blink29FileSystemAccessTransferTokenEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo13PendingRemoteIN5blink5mojom5blink29FileSystemAccessTransferTokenEEEEEmm = comdat any

$_ZN3WTF6VectorIN4mojo13PendingRemoteIN5blink5mojom5blink29FileSystemAccessTransferTokenEEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

@.str = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.1 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIN5blink14BlobDataHandleEEEEPKcv = private unnamed_addr constant [84 x i8] c"const char *WTF::GetStringWithTypeName() [T = scoped_refptr<blink::BlobDataHandle>]\00", align 1
@.str.2 = private unnamed_addr constant [32 x i8] c"../../base/memory/ref_counted.h\00", align 1
@.str.3 = private unnamed_addr constant [27 x i8] c"ref_count_.Increment() > 0\00", align 1
@.str.4 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.6 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.8 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringE13scoped_refptrIN5blink14BlobDataHandleEEEEEEPKcv = private unnamed_addr constant [117 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::String, scoped_refptr<blink::BlobDataHandle> >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo13PendingRemoteIN5blink5mojom5blink29FileSystemAccessTransferTokenEEEEEPKcv = private unnamed_addr constant [119 x i8] c"const char *WTF::GetStringWithTypeName() [T = mojo::PendingRemote<blink::mojom::blink::FileSystemAccessTransferToken>]\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4mojo12StructTraitsIN5blink5mojom24CloneableMessageDataViewENS1_21BlinkCloneableMessageEE5blobsERS4_(%"class.WTF::Vector.69"* noalias sret, %"struct.blink::BlinkCloneableMessage"* nocapture readonly dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.69", %"class.WTF::Vector.69"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.WTF::Vector.69", %"class.WTF::Vector.69"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.WTF::Vector.69", %"class.WTF::Vector.69"* %0, i64 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.WTF::Vector.69"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #6
  %8 = getelementptr inbounds %"struct.blink::BlinkCloneableMessage", %"struct.blink::BlinkCloneableMessage"* %1, i64 0, i32 0, i32 0
  %9 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %9, i64 0, i32 9, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %45, label %13

13:                                               ; preds = %2
  %14 = zext i32 %11 to i64
  %15 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink14BlobDataHandleEEEEmm(i64 %14) #6
  %16 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %15, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIN5blink14BlobDataHandleEEEEPKcv, i64 0, i64 0)) #6
  %17 = ptrtoint i8* %16 to i64
  %18 = bitcast %"class.WTF::Vector.69"* %0 to i64*
  store atomic i64 %17, i64* %18 monotonic, align 8
  %19 = lshr i64 %15, 3
  %20 = trunc i64 %19 to i32
  store i32 %20, i32* %5, align 8
  %21 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %8, align 8
  %22 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %21, i64 0, i32 9, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %21, i64 0, i32 9, i32 0, i32 0
  %26 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %21, i64 0, i32 9, i32 0, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %26, i64 %29
  br i1 %24, label %45, label %31

31:                                               ; preds = %13
  %32 = icmp eq i32 %28, 0
  br i1 %32, label %40, label %33

33:                                               ; preds = %31, %37
  %34 = phi %"struct.WTF::KeyValuePair"* [ %38, %37 ], [ %26, %31 ]
  %35 = bitcast %"struct.WTF::KeyValuePair"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  switch i64 %36, label %40 [
    i64 -1, label %37
    i64 0, label %37
  ]

37:                                               ; preds = %33, %33
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %34, i64 1
  %39 = icmp eq %"struct.WTF::KeyValuePair"* %38, %30
  br i1 %39, label %45, label %33

40:                                               ; preds = %33, %31
  %41 = phi %"struct.WTF::KeyValuePair"* [ %26, %31 ], [ %34, %33 ]
  %42 = icmp eq %"struct.WTF::KeyValuePair"* %41, %30
  br i1 %42, label %45, label %43

43:                                               ; preds = %40
  %44 = bitcast %"class.logging::CheckError"* %3 to i8*
  br label %46

45:                                               ; preds = %37, %69, %79, %76, %2, %13, %40
  ret void

46:                                               ; preds = %81, %43
  %47 = phi i32 [ %20, %43 ], [ %82, %81 ]
  %48 = phi %"struct.WTF::KeyValuePair"* [ %41, %43 ], [ %73, %81 ]
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %48, i64 0, i32 1
  %50 = load i32, i32* %6, align 4
  %51 = icmp eq i32 %50, %47
  br i1 %51, label %68, label %52, !prof !2

52:                                               ; preds = %46
  %53 = load %class.scoped_refptr.44*, %class.scoped_refptr.44** %4, align 8
  %54 = zext i32 %50 to i64
  %55 = getelementptr inbounds %class.scoped_refptr.44, %class.scoped_refptr.44* %49, i64 0, i32 0
  %56 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %55, align 8
  %57 = getelementptr inbounds %class.scoped_refptr.44, %class.scoped_refptr.44* %53, i64 %54, i32 0
  store %"class.blink::BlobDataHandle"* %56, %"class.blink::BlobDataHandle"** %57, align 8
  %58 = icmp eq %"class.blink::BlobDataHandle"* %56, null
  br i1 %58, label %65, label %59

59:                                               ; preds = %52
  %60 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = atomicrmw add i32* %60, i32 1 monotonic
  %62 = icmp sgt i32 %61, 0
  br i1 %62, label %65, label %63

63:                                               ; preds = %59
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.2, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0)) #6
  %64 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #6
  br label %65

65:                                               ; preds = %63, %59, %52
  %66 = load i32, i32* %6, align 4
  %67 = add i32 %66, 1
  store i32 %67, i32* %6, align 4
  br label %69

68:                                               ; preds = %46
  call void @_ZN3WTF6VectorI13scoped_refptrIN5blink14BlobDataHandleEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS4_EEvOT_(%"class.WTF::Vector.69"* %0, %class.scoped_refptr.44* dereferenceable(8) %49) #6
  br label %69

69:                                               ; preds = %65, %68
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %48, i64 1
  %71 = icmp eq %"struct.WTF::KeyValuePair"* %70, %30
  br i1 %71, label %45, label %72

72:                                               ; preds = %69, %76
  %73 = phi %"struct.WTF::KeyValuePair"* [ %77, %76 ], [ %70, %69 ]
  %74 = bitcast %"struct.WTF::KeyValuePair"* %73 to i64*
  %75 = load i64, i64* %74, align 8
  switch i64 %75, label %79 [
    i64 -1, label %76
    i64 0, label %76
  ]

76:                                               ; preds = %72, %72
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %73, i64 1
  %78 = icmp eq %"struct.WTF::KeyValuePair"* %77, %30
  br i1 %78, label %45, label %72

79:                                               ; preds = %72
  %80 = icmp eq %"struct.WTF::KeyValuePair"* %73, %30
  br i1 %80, label %45, label %81

81:                                               ; preds = %79
  %82 = load i32, i32* %5, align 8
  br label %46
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN5blink5mojom24CloneableMessageDataViewENS1_21BlinkCloneableMessageEE4ReadES3_PS4_(%"class.blink::mojom::internal::CloneableMessage_Data"*, %"class.mojo::Message"*, %"struct.blink::BlinkCloneableMessage"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::mojom::CloneableMessageDataView", align 8
  %5 = alloca %"class.mojo_base::BigBufferView", align 8
  %6 = alloca %"class.WTF::Vector.69", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"struct.v8_inspector::V8StackTraceId", align 16
  %9 = alloca %"class.absl::optional.64", align 8
  %10 = getelementptr inbounds %"class.blink::mojom::CloneableMessageDataView", %"class.blink::mojom::CloneableMessageDataView"* %4, i64 0, i32 0
  store %"class.blink::mojom::internal::CloneableMessage_Data"* %0, %"class.blink::mojom::internal::CloneableMessage_Data"** %10, align 8
  %11 = getelementptr inbounds %"class.blink::mojom::CloneableMessageDataView", %"class.blink::mojom::CloneableMessageDataView"* %4, i64 0, i32 1
  store %"class.mojo::Message"* %1, %"class.mojo::Message"** %11, align 8
  %12 = bitcast %"class.mojo_base::BigBufferView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %12) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 56, i1 false)
  call void @_ZN9mojo_base13BigBufferViewC1Ev(%"class.mojo_base::BigBufferView"* nonnull %5) #6
  %13 = getelementptr inbounds %"class.blink::mojom::internal::CloneableMessage_Data", %"class.blink::mojom::internal::CloneableMessage_Data"* %0, i64 0, i32 1
  %14 = getelementptr inbounds %"class.mojo_base::mojom::internal::BigBuffer_Data", %"class.mojo_base::mojom::internal::BigBuffer_Data"* %13, i64 0, i32 0
  %15 = load i32, i32* %14, align 1
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %19, label %17

17:                                               ; preds = %3
  %18 = call zeroext i1 @_ZN4mojo11UnionTraitsIN9mojo_base5mojom17BigBufferDataViewENS1_13BigBufferViewEE4ReadES3_PS4_(%"class.mojo_base::mojom::internal::BigBuffer_Data"* nonnull %13, %"class.mojo::Message"* %1, %"class.mojo_base::BigBufferView"* nonnull %5) #6
  br i1 %18, label %19, label %213

19:                                               ; preds = %3, %17
  %20 = call { i64, i8* } @_ZNK9mojo_base13BigBufferView4dataEv(%"class.mojo_base::BigBufferView"* nonnull %5) #6
  %21 = extractvalue { i64, i8* } %20, 0
  %22 = extractvalue { i64, i8* } %20, 1
  %23 = call %"class.blink::SerializedScriptValue"* @_ZN5blink21SerializedScriptValue6CreateEPKcm(i8* %22, i64 %21) #6
  %24 = ptrtoint %"class.blink::SerializedScriptValue"* %23 to i64
  %25 = bitcast %"struct.blink::BlinkCloneableMessage"* %2 to i64*
  %26 = getelementptr inbounds %"struct.blink::BlinkCloneableMessage", %"struct.blink::BlinkCloneableMessage"* %2, i64 0, i32 0, i32 0
  %27 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %26, align 8
  store i64 %24, i64* %25, align 8
  %28 = icmp eq %"class.blink::SerializedScriptValue"* %27, null
  br i1 %28, label %35, label %29

29:                                               ; preds = %19
  %30 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw sub i32* %30, i32 1 acq_rel
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %35

33:                                               ; preds = %29
  call void @_ZN5blink21SerializedScriptValueD1Ev(%"class.blink::SerializedScriptValue"* nonnull %27) #6
  %34 = bitcast %"class.blink::SerializedScriptValue"* %27 to i8*
  call void @free(i8* %34) #6
  br label %35

35:                                               ; preds = %19, %29, %33
  %36 = bitcast %"class.WTF::Vector.69"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #6
  %37 = getelementptr inbounds %"class.WTF::Vector.69", %"class.WTF::Vector.69"* %6, i64 0, i32 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.WTF::Vector.69", %"class.WTF::Vector.69"* %6, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 0, i64 16, i1 false) #6
  %39 = call zeroext i1 @_ZN5blink5mojom24CloneableMessageDataView9ReadBlobsIN3WTF6VectorI13scoped_refptrINS_14BlobDataHandleEELj0ENS3_18PartitionAllocatorEEEEEbPT_(%"class.blink::mojom::CloneableMessageDataView"* nonnull %4, %"class.WTF::Vector.69"* nonnull %6)
  br i1 %39, label %40, label %182

40:                                               ; preds = %35
  %41 = load %class.scoped_refptr.44*, %class.scoped_refptr.44** %37, align 8
  %42 = load i32, i32* %38, align 4
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds %class.scoped_refptr.44, %class.scoped_refptr.44* %41, i64 %43
  %45 = icmp eq i32 %42, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.WTF::String"* %7 to i8*
  %48 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  br label %74

49:                                               ; preds = %98, %40
  %50 = getelementptr inbounds %"struct.blink::BlinkCloneableMessage", %"struct.blink::BlinkCloneableMessage"* %2, i64 0, i32 1
  %51 = load %"class.blink::mojom::internal::CloneableMessage_Data"*, %"class.blink::mojom::internal::CloneableMessage_Data"** %10, align 8
  %52 = getelementptr inbounds %"class.blink::mojom::internal::CloneableMessage_Data", %"class.blink::mojom::internal::CloneableMessage_Data"* %51, i64 0, i32 3
  %53 = getelementptr inbounds %"struct.mojo::internal::Pointer.76", %"struct.mojo::internal::Pointer.76"* %52, i64 0, i32 0
  %54 = load i64, i64* %53, align 8
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %56, label %68

56:                                               ; preds = %49
  %57 = bitcast %class.scoped_refptr.41* %50 to i64*
  %58 = getelementptr inbounds %class.scoped_refptr.41, %class.scoped_refptr.41* %50, i64 0, i32 0
  %59 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %58, align 8
  store i64 0, i64* %57, align 8
  %60 = icmp eq %"class.blink::SecurityOrigin"* %59, null
  br i1 %60, label %101, label %61

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %59, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %62) #6
  %63 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %59, i64 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %101

66:                                               ; preds = %61
  call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %59) #6
  %67 = bitcast %"class.blink::SecurityOrigin"* %59 to i8*
  call void @free(i8* %67) #6
  br label %101

68:                                               ; preds = %49
  %69 = bitcast %"struct.mojo::internal::Pointer.76"* %52 to i8*
  %70 = getelementptr inbounds i8, i8* %69, i64 %54
  %71 = bitcast i8* %70 to %"class.url::mojom::internal::Origin_Data"*
  %72 = load %"class.mojo::Message"*, %"class.mojo::Message"** %11, align 8
  %73 = call zeroext i1 @_ZN4mojo12StructTraitsIN3url5mojom14OriginDataViewE13scoped_refptrIKN5blink14SecurityOriginEEE4ReadES3_PS8_(%"class.url::mojom::internal::Origin_Data"* nonnull %71, %"class.mojo::Message"* %72, %class.scoped_refptr.41* %50) #6
  br i1 %73, label %101, label %182

74:                                               ; preds = %46, %98
  %75 = phi %class.scoped_refptr.44* [ %41, %46 ], [ %99, %98 ]
  %76 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %26, align 8
  %77 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %76, i64 0, i32 9
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #6
  %78 = getelementptr inbounds %class.scoped_refptr.44, %class.scoped_refptr.44* %75, i64 0, i32 0
  %79 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %78, align 8
  %80 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %79, i64 0, i32 1
  %81 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"* %80) #6
  store %"class.WTF::StringImpl"* %81, %"class.WTF::StringImpl"** %48, align 8
  %82 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF7HashMapINS_6StringE13scoped_refptrIN5blink14BlobDataHandleEENS_10StringHashENS_10HashTraitsIS1_EENS7_IS5_EENS_18PartitionAllocatorEE3SetIS1_RS5_EENS_18HashTableAddResultINS_9HashTableIS1_NS_12KeyValuePairIS1_S5_EENS_24KeyValuePairKeyExtractorES6_NS_18HashMapValueTraitsIS8_S9_EES8_SA_EESH_EEOT_OT0_(%"class.WTF::HashMap"* %77, %"class.WTF::String"* nonnull dereferenceable(8) %7, %class.scoped_refptr.44* dereferenceable(8) %75)
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %84 = icmp eq %"class.WTF::StringImpl"* %83, null
  br i1 %84, label %98, label %85

85:                                               ; preds = %74
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load atomic i32, i32* %86 monotonic, align 4
  %88 = and i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 0
  %91 = load i32, i32* %90, align 4
  br i1 %89, label %92, label %94

92:                                               ; preds = %85
  %93 = add i32 %91, -1
  store i32 %93, i32* %90, align 4
  br label %94

94:                                               ; preds = %92, %85
  %95 = phi i32 [ %93, %92 ], [ %91, %85 ]
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %98

97:                                               ; preds = %94
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %83) #6
  br label %98

98:                                               ; preds = %74, %94, %97
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #6
  %99 = getelementptr inbounds %class.scoped_refptr.44, %class.scoped_refptr.44* %75, i64 1
  %100 = icmp eq %class.scoped_refptr.44* %99, %44
  br i1 %100, label %49, label %74

101:                                              ; preds = %66, %61, %56, %68
  %102 = bitcast %"struct.v8_inspector::V8StackTraceId"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %102) #6
  %103 = load %"class.blink::mojom::internal::CloneableMessage_Data"*, %"class.blink::mojom::internal::CloneableMessage_Data"** %10, align 8
  %104 = getelementptr inbounds %"class.blink::mojom::internal::CloneableMessage_Data", %"class.blink::mojom::internal::CloneableMessage_Data"* %103, i64 0, i32 4
  %105 = load i64, i64* %104, align 1
  %106 = getelementptr inbounds %"class.blink::mojom::internal::CloneableMessage_Data", %"class.blink::mojom::internal::CloneableMessage_Data"* %103, i64 0, i32 5
  %107 = load i64, i64* %106, align 1
  %108 = getelementptr inbounds %"class.blink::mojom::internal::CloneableMessage_Data", %"class.blink::mojom::internal::CloneableMessage_Data"* %103, i64 0, i32 6
  %109 = load i64, i64* %108, align 1
  %110 = getelementptr inbounds %"class.blink::mojom::internal::CloneableMessage_Data", %"class.blink::mojom::internal::CloneableMessage_Data"* %103, i64 0, i32 7
  %111 = load i8, i8* %110, align 1
  %112 = and i8 %111, 1
  %113 = icmp ne i8 %112, 0
  call void @_ZN12v8_inspector14V8StackTraceIdC1EmNSt3__14pairIllEEb(%"struct.v8_inspector::V8StackTraceId"* nonnull %8, i64 %105, i64 %107, i64 %109, i1 zeroext %113) #6
  %114 = getelementptr inbounds %"struct.blink::BlinkCloneableMessage", %"struct.blink::BlinkCloneableMessage"* %2, i64 0, i32 2, i32 0
  %115 = bitcast %"struct.v8_inspector::V8StackTraceId"* %8 to <2 x i64>*
  %116 = load <2 x i64>, <2 x i64>* %115, align 16
  %117 = bitcast i64* %114 to <2 x i64>*
  store <2 x i64> %116, <2 x i64>* %117, align 8
  %118 = getelementptr inbounds %"struct.v8_inspector::V8StackTraceId", %"struct.v8_inspector::V8StackTraceId"* %8, i64 0, i32 1, i32 1
  %119 = load i64, i64* %118, align 8
  %120 = getelementptr inbounds %"struct.blink::BlinkCloneableMessage", %"struct.blink::BlinkCloneableMessage"* %2, i64 0, i32 2, i32 1, i32 1
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"struct.v8_inspector::V8StackTraceId", %"struct.v8_inspector::V8StackTraceId"* %8, i64 0, i32 2
  %122 = load i8, i8* %121, align 8, !range !3
  %123 = getelementptr inbounds %"struct.blink::BlinkCloneableMessage", %"struct.blink::BlinkCloneableMessage"* %2, i64 0, i32 2, i32 2
  store i8 %122, i8* %123, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %102) #6
  %124 = getelementptr inbounds %"class.absl::optional.64", %"class.absl::optional.64"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %124) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %124, i8 -86, i64 24, i1 false)
  store i8 0, i8* %124, align 8
  %125 = load %"class.blink::mojom::internal::CloneableMessage_Data"*, %"class.blink::mojom::internal::CloneableMessage_Data"** %10, align 8
  %126 = getelementptr inbounds %"class.blink::mojom::internal::CloneableMessage_Data", %"class.blink::mojom::internal::CloneableMessage_Data"* %125, i64 0, i32 9
  %127 = getelementptr inbounds %"struct.mojo::internal::Pointer.77", %"struct.mojo::internal::Pointer.77"* %126, i64 0, i32 0
  %128 = load i64, i64* %127, align 8
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %130, label %131

130:                                              ; preds = %101
  store i8 0, i8* %124, align 8
  br label %141

131:                                              ; preds = %101
  %132 = bitcast %"struct.mojo::internal::Pointer.77"* %126 to i8*
  %133 = getelementptr inbounds i8, i8* %132, i64 %128
  %134 = bitcast i8* %133 to %"class.mojo_base::mojom::internal::UnguessableToken_Data"*
  %135 = getelementptr inbounds %"class.absl::optional.64", %"class.absl::optional.64"* %9, i64 0, i32 0, i32 0, i32 0, i32 1
  %136 = bitcast %union.anon.68* %135 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %136, i8 0, i64 16, i1 false) #6
  store i8 1, i8* %124, align 8
  %137 = getelementptr inbounds %"class.absl::optional.64", %"class.absl::optional.64"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %138 = call zeroext i1 @_ZN4mojo12StructTraitsIN9mojo_base5mojom24UnguessableTokenDataViewEN4base16UnguessableTokenEE4ReadES3_PS5_(%"class.mojo_base::mojom::internal::UnguessableToken_Data"* nonnull %134, %"class.base::UnguessableToken"* %137) #6
  br i1 %138, label %139, label %180

139:                                              ; preds = %131
  %140 = load %"class.blink::mojom::internal::CloneableMessage_Data"*, %"class.blink::mojom::internal::CloneableMessage_Data"** %10, align 8
  br label %141

141:                                              ; preds = %139, %130
  %142 = phi %"class.blink::mojom::internal::CloneableMessage_Data"* [ %140, %139 ], [ %125, %130 ]
  %143 = getelementptr inbounds %"struct.blink::BlinkCloneableMessage", %"struct.blink::BlinkCloneableMessage"* %2, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %143, i8* nonnull align 8 %124, i64 24, i1 false)
  %144 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %26, align 8
  %145 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %144, i64 0, i32 12
  %146 = getelementptr inbounds %"class.blink::mojom::internal::CloneableMessage_Data", %"class.blink::mojom::internal::CloneableMessage_Data"* %142, i64 0, i32 10
  %147 = getelementptr inbounds %"struct.mojo::internal::Pointer.78", %"struct.mojo::internal::Pointer.78"* %146, i64 0, i32 0
  %148 = load i64, i64* %147, align 8
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %150, label %173

150:                                              ; preds = %141
  %151 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %144, i64 0, i32 12, i32 0, i32 0, i32 1
  %152 = load i32, i32* %151, align 8
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %179, label %154

154:                                              ; preds = %150
  %155 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %144, i64 0, i32 12, i32 0, i32 0, i32 2
  %156 = load i32, i32* %155, align 4
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %169, label %158

158:                                              ; preds = %154
  %159 = getelementptr inbounds %"class.WTF::Vector.53", %"class.WTF::Vector.53"* %145, i64 0, i32 0, i32 0, i32 0
  %160 = load %"class.mojo::PendingRemote.56"*, %"class.mojo::PendingRemote.56"** %159, align 8
  %161 = zext i32 %156 to i64
  %162 = getelementptr inbounds %"class.mojo::PendingRemote.56", %"class.mojo::PendingRemote.56"* %160, i64 %161
  br label %163

163:                                              ; preds = %163, %158
  %164 = phi %"class.mojo::PendingRemote.56"* [ %166, %163 ], [ %160, %158 ]
  %165 = getelementptr inbounds %"class.mojo::PendingRemote.56", %"class.mojo::PendingRemote.56"* %164, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* %165) #6
  %166 = getelementptr inbounds %"class.mojo::PendingRemote.56", %"class.mojo::PendingRemote.56"* %164, i64 1
  %167 = icmp eq %"class.mojo::PendingRemote.56"* %166, %162
  br i1 %167, label %168, label %163

168:                                              ; preds = %163
  store i32 0, i32* %155, align 4
  br label %169

169:                                              ; preds = %168, %154
  %170 = bitcast %"class.WTF::Vector.53"* %145 to i8**
  %171 = load i8*, i8** %170, align 8
  %172 = bitcast %"class.WTF::Vector.53"* %145 to i64*
  store atomic i64 0, i64* %172 monotonic, align 8
  store i32 0, i32* %151, align 8
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %171) #6
  br label %179

173:                                              ; preds = %141
  %174 = bitcast %"struct.mojo::internal::Pointer.78"* %146 to i8*
  %175 = getelementptr inbounds i8, i8* %174, i64 %148
  %176 = bitcast i8* %175 to %"class.mojo::internal::Array_Data.131"*
  %177 = load %"class.mojo::Message"*, %"class.mojo::Message"** %11, align 8
  %178 = call zeroext i1 @_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewINS_20InterfacePtrDataViewIN5blink5mojom42FileSystemAccessTransferTokenInterfaceBaseEEEEEN3WTF6VectorINS_13PendingRemoteINS5_5blink29FileSystemAccessTransferTokenEEELj0ENS9_18PartitionAllocatorEEENS0_13ArrayIteratorINS_11ArrayTraitsISG_EESG_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_14Interface_DataEEEPSG_PNS_7MessageE(%"class.mojo::internal::Array_Data.131"* nonnull %176, %"class.WTF::Vector.53"* %145, %"class.mojo::Message"* %177) #6
  br i1 %178, label %179, label %180

179:                                              ; preds = %169, %150, %173
  br label %180

180:                                              ; preds = %179, %173, %131
  %181 = phi i1 [ false, %131 ], [ true, %179 ], [ false, %173 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %124) #6
  br label %182

182:                                              ; preds = %68, %35, %180
  %183 = phi i1 [ %181, %180 ], [ false, %35 ], [ false, %68 ]
  %184 = load %class.scoped_refptr.44*, %class.scoped_refptr.44** %37, align 8
  %185 = icmp eq %class.scoped_refptr.44* %184, null
  br i1 %185, label %212, label %186, !prof !4

186:                                              ; preds = %182
  %187 = bitcast %class.scoped_refptr.44* %184 to i8*
  %188 = load i32, i32* %38, align 4
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %210, label %190, !prof !2

190:                                              ; preds = %186
  %191 = zext i32 %188 to i64
  %192 = getelementptr inbounds %class.scoped_refptr.44, %class.scoped_refptr.44* %184, i64 %191
  br label %193

193:                                              ; preds = %204, %190
  %194 = phi %class.scoped_refptr.44* [ %205, %204 ], [ %184, %190 ]
  %195 = getelementptr inbounds %class.scoped_refptr.44, %class.scoped_refptr.44* %194, i64 0, i32 0
  %196 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %195, align 8
  %197 = icmp eq %"class.blink::BlobDataHandle"* %196, null
  br i1 %197, label %204, label %198

198:                                              ; preds = %193
  %199 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %196, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %200 = atomicrmw sub i32* %199, i32 1 acq_rel
  %201 = icmp eq i32 %200, 1
  br i1 %201, label %202, label %204

202:                                              ; preds = %198
  call void @_ZN5blink14BlobDataHandleD1Ev(%"class.blink::BlobDataHandle"* nonnull %196) #6
  %203 = bitcast %"class.blink::BlobDataHandle"* %196 to i8*
  call void @free(i8* %203) #6
  br label %204

204:                                              ; preds = %202, %198, %193
  %205 = getelementptr inbounds %class.scoped_refptr.44, %class.scoped_refptr.44* %194, i64 1
  %206 = icmp eq %class.scoped_refptr.44* %205, %192
  br i1 %206, label %207, label %193

207:                                              ; preds = %204
  store i32 0, i32* %38, align 4
  %208 = bitcast %"class.WTF::Vector.69"* %6 to i8**
  %209 = load i8*, i8** %208, align 8
  br label %210

210:                                              ; preds = %207, %186
  %211 = phi i8* [ %209, %207 ], [ %187, %186 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %211) #6
  store %class.scoped_refptr.44* null, %class.scoped_refptr.44** %37, align 8
  br label %212

212:                                              ; preds = %182, %210
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #6
  br label %213

213:                                              ; preds = %17, %212
  %214 = phi i1 [ %183, %212 ], [ false, %17 ]
  call void @_ZN9mojo_base13BigBufferViewD1Ev(%"class.mojo_base::BigBufferView"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %12) #6
  ret i1 %214
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN9mojo_base13BigBufferViewC1Ev(%"class.mojo_base::BigBufferView"*) unnamed_addr #2

declare { i64, i8* } @_ZNK9mojo_base13BigBufferView4dataEv(%"class.mojo_base::BigBufferView"*) local_unnamed_addr #2

declare %"class.blink::SerializedScriptValue"* @_ZN5blink21SerializedScriptValue6CreateEPKcm(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink5mojom24CloneableMessageDataView9ReadBlobsIN3WTF6VectorI13scoped_refptrINS_14BlobDataHandleEELj0ENS3_18PartitionAllocatorEEEEEbPT_(%"class.blink::mojom::CloneableMessageDataView"*, %"class.WTF::Vector.69"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::CloneableMessageDataView", %"class.blink::mojom::CloneableMessageDataView"* %0, i64 0, i32 0
  %4 = load %"class.blink::mojom::internal::CloneableMessage_Data"*, %"class.blink::mojom::internal::CloneableMessage_Data"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::mojom::internal::CloneableMessage_Data", %"class.blink::mojom::internal::CloneableMessage_Data"* %4, i64 0, i32 2
  %6 = getelementptr inbounds %"struct.mojo::internal::Pointer.75", %"struct.mojo::internal::Pointer.75"* %5, i64 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  %9 = bitcast %"struct.mojo::internal::Pointer.75"* %5 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 %7
  %11 = icmp eq i8* %10, null
  %12 = or i1 %8, %11
  br i1 %12, label %13, label %45

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.WTF::Vector.69", %"class.WTF::Vector.69"* %1, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %50, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.WTF::Vector.69", %"class.WTF::Vector.69"* %1, i64 0, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %41, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.WTF::Vector.69", %"class.WTF::Vector.69"* %1, i64 0, i32 0, i32 0, i32 0
  %23 = load %class.scoped_refptr.44*, %class.scoped_refptr.44** %22, align 8
  %24 = zext i32 %19 to i64
  %25 = getelementptr inbounds %class.scoped_refptr.44, %class.scoped_refptr.44* %23, i64 %24
  br label %26

26:                                               ; preds = %37, %21
  %27 = phi %class.scoped_refptr.44* [ %38, %37 ], [ %23, %21 ]
  %28 = getelementptr inbounds %class.scoped_refptr.44, %class.scoped_refptr.44* %27, i64 0, i32 0
  %29 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %28, align 8
  %30 = icmp eq %"class.blink::BlobDataHandle"* %29, null
  br i1 %30, label %37, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = atomicrmw sub i32* %32, i32 1 acq_rel
  %34 = icmp eq i32 %33, 1
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  tail call void @_ZN5blink14BlobDataHandleD1Ev(%"class.blink::BlobDataHandle"* nonnull %29) #6
  %36 = bitcast %"class.blink::BlobDataHandle"* %29 to i8*
  tail call void @free(i8* %36) #6
  br label %37

37:                                               ; preds = %35, %31, %26
  %38 = getelementptr inbounds %class.scoped_refptr.44, %class.scoped_refptr.44* %27, i64 1
  %39 = icmp eq %class.scoped_refptr.44* %38, %25
  br i1 %39, label %40, label %26

40:                                               ; preds = %37
  store i32 0, i32* %18, align 4
  br label %41

41:                                               ; preds = %40, %17
  %42 = bitcast %"class.WTF::Vector.69"* %1 to i8**
  %43 = load i8*, i8** %42, align 8
  %44 = bitcast %"class.WTF::Vector.69"* %1 to i64*
  store atomic i64 0, i64* %44 monotonic, align 8
  store i32 0, i32* %14, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %43) #6
  br label %50

45:                                               ; preds = %2
  %46 = bitcast i8* %10 to %"class.mojo::internal::Array_Data"*
  %47 = getelementptr inbounds %"class.blink::mojom::CloneableMessageDataView", %"class.blink::mojom::CloneableMessageDataView"* %0, i64 0, i32 1
  %48 = load %"class.mojo::Message"*, %"class.mojo::Message"** %47, align 8
  %49 = tail call zeroext i1 @_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewIN5blink5mojom22SerializedBlobDataViewEEEN3WTF6VectorI13scoped_refptrINS3_14BlobDataHandleEELj0ENS7_18PartitionAllocatorEEENS0_13ArrayIteratorINS_11ArrayTraitsISD_EESD_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_7PointerINS4_8internal19SerializedBlob_DataEEEEEPSD_PNS_7MessageE(%"class.mojo::internal::Array_Data"* nonnull %46, %"class.WTF::Vector.69"* %1, %"class.mojo::Message"* %48) #6
  br label %50

50:                                               ; preds = %13, %41, %45
  %51 = phi i1 [ %49, %45 ], [ true, %13 ], [ true, %41 ]
  ret i1 %51
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF7HashMapINS_6StringE13scoped_refptrIN5blink14BlobDataHandleEENS_10StringHashENS_10HashTraitsIS1_EENS7_IS5_EENS_18PartitionAllocatorEE3SetIS1_RS5_EENS_18HashTableAddResultINS_9HashTableIS1_NS_12KeyValuePairIS1_S5_EENS_24KeyValuePairKeyExtractorES6_NS_18HashMapValueTraitsIS8_S9_EES8_SA_EESH_EEOT_OT0_(%"class.WTF::HashMap"*, %"class.WTF::String"* dereferenceable(8), %class.scoped_refptr.44* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %0, i64 0, i32 0
  %6 = tail call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink14BlobDataHandleEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EES1_RS6_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable"* %5, %"class.WTF::String"* dereferenceable(8) %1, %class.scoped_refptr.44* dereferenceable(8) %2) #6
  %7 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %6, 1
  %8 = and i8 %7, 1
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %35

10:                                               ; preds = %3
  %11 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %6, 0
  %12 = getelementptr inbounds %class.scoped_refptr.44, %class.scoped_refptr.44* %2, i64 0, i32 0
  %13 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %12, align 8
  %14 = icmp eq %"class.blink::BlobDataHandle"* %13, null
  br i1 %14, label %22, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 1 monotonic
  %18 = icmp sgt i32 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %15
  %20 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.2, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0)) #6
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #6
  br label %22

22:                                               ; preds = %10, %15, %19
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 0, i32 1
  %24 = ptrtoint %"class.blink::BlobDataHandle"* %13 to i64
  %25 = bitcast %class.scoped_refptr.44* %23 to i64*
  %26 = getelementptr inbounds %class.scoped_refptr.44, %class.scoped_refptr.44* %23, i64 0, i32 0
  %27 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %26, align 8
  store i64 %24, i64* %25, align 8
  %28 = icmp eq %"class.blink::BlobDataHandle"* %27, null
  br i1 %28, label %35, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw sub i32* %30, i32 1 acq_rel
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %35

33:                                               ; preds = %29
  call void @_ZN5blink14BlobDataHandleD1Ev(%"class.blink::BlobDataHandle"* nonnull %27) #6
  %34 = bitcast %"class.blink::BlobDataHandle"* %27 to i8*
  call void @free(i8* %34) #6
  br label %35

35:                                               ; preds = %33, %29, %22, %3
  ret { %"struct.WTF::KeyValuePair"*, i8 } %6
}

declare void @_ZN12v8_inspector14V8StackTraceIdC1EmNSt3__14pairIllEEb(%"struct.v8_inspector::V8StackTraceId"*, i64, i64, i64, i1 zeroext) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind
declare void @_ZN9mojo_base13BigBufferViewD1Ev(%"class.mojo_base::BigBufferView"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink14BlobDataHandleD1Ev(%"class.blink::BlobDataHandle"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"*) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink14BlobDataHandleEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #6
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #6
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), i8* %11, i8* %12) #6
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #6
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #6
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #6
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #6
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorI13scoped_refptrIN5blink14BlobDataHandleEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS4_EEvOT_(%"class.WTF::Vector.69"*, %class.scoped_refptr.44* dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.69", %"class.WTF::Vector.69"* %0, i64 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = add i32 %5, 1
  %7 = getelementptr inbounds %"class.WTF::Vector.69", %"class.WTF::Vector.69"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %class.scoped_refptr.44*, %class.scoped_refptr.44** %7, align 8
  %9 = icmp ugt %class.scoped_refptr.44* %8, %1
  br i1 %9, label %14, label %10

10:                                               ; preds = %2
  %11 = zext i32 %5 to i64
  %12 = getelementptr inbounds %class.scoped_refptr.44, %class.scoped_refptr.44* %8, i64 %11
  %13 = icmp ugt %class.scoped_refptr.44* %12, %1
  br i1 %13, label %55, label %14

14:                                               ; preds = %10, %2
  %15 = getelementptr inbounds %"class.WTF::Vector.69", %"class.WTF::Vector.69"* %0, i64 0, i32 0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = lshr i32 %16, 2
  %18 = add i32 %16, 1
  %19 = add i32 %18, %17
  %20 = icmp ugt i32 %19, 4
  %21 = select i1 %20, i32 %19, i32 4
  %22 = icmp ugt i32 %21, %6
  %23 = select i1 %22, i32 %21, i32 %6
  %24 = icmp ult i32 %16, %23
  br i1 %24, label %25, label %100, !prof !4

25:                                               ; preds = %14
  %26 = icmp eq %class.scoped_refptr.44* %8, null
  %27 = zext i32 %23 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink14BlobDataHandleEEEEmm(i64 %27) #6
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIN5blink14BlobDataHandleEEEEPKcv, i64 0, i64 0)) #6
  br i1 %26, label %30, label %36

30:                                               ; preds = %25
  %31 = ptrtoint i8* %29 to i64
  %32 = bitcast %"class.WTF::Vector.69"* %0 to i64*
  store atomic i64 %31, i64* %32 monotonic, align 8
  %33 = lshr i64 %28, 3
  %34 = trunc i64 %33 to i32
  store i32 %34, i32* %15, align 8
  %35 = bitcast i8* %29 to %class.scoped_refptr.44*
  br label %100

36:                                               ; preds = %25
  %37 = lshr i64 %28, 3
  %38 = ptrtoint i8* %29 to i64
  %39 = load %class.scoped_refptr.44*, %class.scoped_refptr.44** %7, align 8
  %40 = icmp ne i8* %29, null
  %41 = icmp ne %class.scoped_refptr.44* %39, null
  %42 = and i1 %40, %41
  %43 = bitcast %class.scoped_refptr.44* %39 to i8*
  br i1 %42, label %44, label %50, !prof !4

44:                                               ; preds = %36
  %45 = load i32, i32* %4, align 4
  %46 = zext i32 %45 to i64
  %47 = shl nuw nsw i64 %46, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %29, i8* nonnull align 8 %43, i64 %47, i1 false) #6
  %48 = bitcast %"class.WTF::Vector.69"* %0 to i8**
  %49 = load i8*, i8** %48, align 8
  br label %50

50:                                               ; preds = %44, %36
  %51 = phi i8* [ %49, %44 ], [ %43, %36 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %51) #6
  %52 = bitcast %"class.WTF::Vector.69"* %0 to i64*
  store atomic i64 %38, i64* %52 monotonic, align 8
  %53 = trunc i64 %37 to i32
  store i32 %53, i32* %15, align 8
  %54 = bitcast i8* %29 to %class.scoped_refptr.44*
  br label %100

55:                                               ; preds = %10
  %56 = ptrtoint %class.scoped_refptr.44* %1 to i64
  %57 = ptrtoint %class.scoped_refptr.44* %8 to i64
  %58 = sub i64 %56, %57
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds %"class.WTF::Vector.69", %"class.WTF::Vector.69"* %0, i64 0, i32 0, i32 0, i32 1
  %61 = load i32, i32* %60, align 8
  %62 = lshr i32 %61, 2
  %63 = add i32 %61, 1
  %64 = add i32 %63, %62
  %65 = icmp ugt i32 %64, 4
  %66 = select i1 %65, i32 %64, i32 4
  %67 = icmp ugt i32 %66, %6
  %68 = select i1 %67, i32 %66, i32 %6
  %69 = icmp ult i32 %61, %68
  br i1 %69, label %70, label %97, !prof !4

70:                                               ; preds = %55
  %71 = icmp eq %class.scoped_refptr.44* %8, null
  %72 = zext i32 %68 to i64
  %73 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink14BlobDataHandleEEEEmm(i64 %72) #6
  %74 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %73, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIN5blink14BlobDataHandleEEEEPKcv, i64 0, i64 0)) #6
  %75 = ptrtoint i8* %74 to i64
  br i1 %71, label %76, label %78

76:                                               ; preds = %70
  %77 = bitcast %"class.WTF::Vector.69"* %0 to i64*
  store atomic i64 %75, i64* %77 monotonic, align 8
  br label %93

78:                                               ; preds = %70
  %79 = load %class.scoped_refptr.44*, %class.scoped_refptr.44** %7, align 8
  %80 = icmp ne i8* %74, null
  %81 = icmp ne %class.scoped_refptr.44* %79, null
  %82 = and i1 %80, %81
  %83 = bitcast %class.scoped_refptr.44* %79 to i8*
  br i1 %82, label %84, label %90, !prof !4

84:                                               ; preds = %78
  %85 = load i32, i32* %4, align 4
  %86 = zext i32 %85 to i64
  %87 = shl nuw nsw i64 %86, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %74, i8* nonnull align 8 %83, i64 %87, i1 false) #6
  %88 = bitcast %"class.WTF::Vector.69"* %0 to i8**
  %89 = load i8*, i8** %88, align 8
  br label %90

90:                                               ; preds = %84, %78
  %91 = phi i8* [ %89, %84 ], [ %83, %78 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %91) #6
  %92 = bitcast %"class.WTF::Vector.69"* %0 to i64*
  store atomic i64 %75, i64* %92 monotonic, align 8
  br label %93

93:                                               ; preds = %90, %76
  %94 = lshr i64 %73, 3
  %95 = trunc i64 %94 to i32
  store i32 %95, i32* %60, align 8
  %96 = bitcast i8* %74 to %class.scoped_refptr.44*
  br label %97

97:                                               ; preds = %93, %55
  %98 = phi %class.scoped_refptr.44* [ %8, %55 ], [ %96, %93 ]
  %99 = getelementptr inbounds %class.scoped_refptr.44, %class.scoped_refptr.44* %98, i64 %59
  br label %100

100:                                              ; preds = %50, %30, %14, %97
  %101 = phi %class.scoped_refptr.44* [ %98, %97 ], [ %8, %14 ], [ %35, %30 ], [ %54, %50 ]
  %102 = phi %class.scoped_refptr.44* [ %99, %97 ], [ %1, %14 ], [ %1, %30 ], [ %1, %50 ]
  %103 = load i32, i32* %4, align 4
  %104 = zext i32 %103 to i64
  %105 = getelementptr inbounds %class.scoped_refptr.44, %class.scoped_refptr.44* %102, i64 0, i32 0
  %106 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %105, align 8
  %107 = getelementptr inbounds %class.scoped_refptr.44, %class.scoped_refptr.44* %101, i64 %104, i32 0
  store %"class.blink::BlobDataHandle"* %106, %"class.blink::BlobDataHandle"** %107, align 8
  %108 = icmp eq %"class.blink::BlobDataHandle"* %106, null
  br i1 %108, label %116, label %109

109:                                              ; preds = %100
  %110 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %106, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = atomicrmw add i32* %110, i32 1 monotonic
  %112 = icmp sgt i32 %111, 0
  br i1 %112, label %116, label %113

113:                                              ; preds = %109
  %114 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %114) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.2, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0)) #6
  %115 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %114) #6
  br label %116

116:                                              ; preds = %100, %109, %113
  %117 = load i32, i32* %4, align 4
  %118 = add i32 %117, 1
  store i32 %118, i32* %4, align 4
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare zeroext i1 @_ZN4mojo11UnionTraitsIN9mojo_base5mojom17BigBufferDataViewENS1_13BigBufferViewEE4ReadES3_PS4_(%"class.mojo_base::mojom::internal::BigBuffer_Data"*, %"class.mojo::Message"*, %"class.mojo_base::BigBufferView"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink21SerializedScriptValueD1Ev(%"class.blink::SerializedScriptValue"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewIN5blink5mojom22SerializedBlobDataViewEEEN3WTF6VectorI13scoped_refptrINS3_14BlobDataHandleEELj0ENS7_18PartitionAllocatorEEENS0_13ArrayIteratorINS_11ArrayTraitsISD_EESD_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_7PointerINS4_8internal19SerializedBlob_DataEEEEEPSD_PNS_7MessageE(%"class.mojo::internal::Array_Data"*, %"class.WTF::Vector.69"*, %"class.mojo::Message"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.mojo::internal::Array_Data", %"class.mojo::internal::Array_Data"* %0, i64 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 1
  tail call void @_ZN3WTF6VectorI13scoped_refptrIN5blink14BlobDataHandleEELj0ENS_18PartitionAllocatorEE6resizeEj(%"class.WTF::Vector.69"* %1, i32 %5) #6
  %6 = load i32, i32* %4, align 1
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %41, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.mojo::internal::Array_Data", %"class.mojo::internal::Array_Data"* %0, i64 1
  br label %10

10:                                               ; preds = %8, %37
  %11 = phi i64 [ 0, %8 ], [ %18, %37 ]
  %12 = getelementptr inbounds %"class.mojo::internal::Array_Data", %"class.mojo::internal::Array_Data"* %9, i64 %11
  %13 = bitcast %"class.mojo::internal::Array_Data"* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 0
  %16 = bitcast %"class.mojo::internal::Array_Data"* %12 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 %14
  %18 = add nuw nsw i64 %11, 1
  %19 = trunc i64 %11 to i32
  %20 = tail call dereferenceable(8) %class.scoped_refptr.44* @_ZN3WTF6VectorI13scoped_refptrIN5blink14BlobDataHandleEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.69"* %1, i32 %19) #6
  %21 = icmp eq i8* %17, null
  %22 = or i1 %15, %21
  br i1 %22, label %23, label %34

23:                                               ; preds = %10
  %24 = bitcast %class.scoped_refptr.44* %20 to i64*
  %25 = getelementptr inbounds %class.scoped_refptr.44, %class.scoped_refptr.44* %20, i64 0, i32 0
  %26 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %25, align 8
  store i64 0, i64* %24, align 8
  %27 = icmp eq %"class.blink::BlobDataHandle"* %26, null
  br i1 %27, label %37, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = atomicrmw sub i32* %29, i32 1 acq_rel
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %32, label %37

32:                                               ; preds = %28
  tail call void @_ZN5blink14BlobDataHandleD1Ev(%"class.blink::BlobDataHandle"* nonnull %26) #6
  %33 = bitcast %"class.blink::BlobDataHandle"* %26 to i8*
  tail call void @free(i8* %33) #6
  br label %37

34:                                               ; preds = %10
  %35 = bitcast i8* %17 to %"class.blink::mojom::internal::SerializedBlob_Data"*
  %36 = tail call zeroext i1 @_ZN4mojo12StructTraitsIN5blink5mojom22SerializedBlobDataViewE13scoped_refptrINS1_14BlobDataHandleEEE4ReadES3_PS6_(%"class.blink::mojom::internal::SerializedBlob_Data"* nonnull %35, %"class.mojo::Message"* %2, %class.scoped_refptr.44* %20) #6
  br i1 %36, label %37, label %41

37:                                               ; preds = %32, %28, %23, %34
  %38 = load i32, i32* %4, align 1
  %39 = zext i32 %38 to i64
  %40 = icmp ult i64 %18, %39
  br i1 %40, label %10, label %41

41:                                               ; preds = %37, %34, %3
  %42 = phi i1 [ true, %3 ], [ false, %34 ], [ true, %37 ]
  ret i1 %42
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorI13scoped_refptrIN5blink14BlobDataHandleEELj0ENS_18PartitionAllocatorEE6resizeEj(%"class.WTF::Vector.69"*, i32) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.69", %"class.WTF::Vector.69"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp ult i32 %4, %1
  br i1 %5, label %29, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::Vector.69", %"class.WTF::Vector.69"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %class.scoped_refptr.44*, %class.scoped_refptr.44** %7, align 8
  %9 = zext i32 %4 to i64
  %10 = getelementptr inbounds %class.scoped_refptr.44, %class.scoped_refptr.44* %8, i64 %9
  %11 = icmp eq i32 %4, %1
  br i1 %11, label %84, label %12

12:                                               ; preds = %6
  %13 = zext i32 %1 to i64
  %14 = getelementptr inbounds %class.scoped_refptr.44, %class.scoped_refptr.44* %8, i64 %13
  br label %15

15:                                               ; preds = %12, %26
  %16 = phi %class.scoped_refptr.44* [ %27, %26 ], [ %14, %12 ]
  %17 = getelementptr inbounds %class.scoped_refptr.44, %class.scoped_refptr.44* %16, i64 0, i32 0
  %18 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %17, align 8
  %19 = icmp eq %"class.blink::BlobDataHandle"* %18, null
  br i1 %19, label %26, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw sub i32* %21, i32 1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %26

24:                                               ; preds = %20
  tail call void @_ZN5blink14BlobDataHandleD1Ev(%"class.blink::BlobDataHandle"* nonnull %18) #6
  %25 = bitcast %"class.blink::BlobDataHandle"* %18 to i8*
  tail call void @free(i8* %25) #6
  br label %26

26:                                               ; preds = %24, %20, %15
  %27 = getelementptr inbounds %class.scoped_refptr.44, %class.scoped_refptr.44* %16, i64 1
  %28 = icmp eq %class.scoped_refptr.44* %27, %10
  br i1 %28, label %84, label %15

29:                                               ; preds = %2
  %30 = getelementptr inbounds %"class.WTF::Vector.69", %"class.WTF::Vector.69"* %0, i64 0, i32 0, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = icmp ult i32 %31, %1
  br i1 %32, label %33, label %72

33:                                               ; preds = %29
  %34 = lshr i32 %31, 2
  %35 = add nuw i32 %31, 1
  %36 = add i32 %35, %34
  %37 = icmp ugt i32 %36, 4
  %38 = select i1 %37, i32 %36, i32 4
  %39 = icmp ugt i32 %38, %1
  %40 = select i1 %39, i32 %38, i32 %1
  %41 = icmp ult i32 %31, %40
  br i1 %41, label %42, label %72, !prof !4

42:                                               ; preds = %33
  %43 = getelementptr inbounds %"class.WTF::Vector.69", %"class.WTF::Vector.69"* %0, i64 0, i32 0, i32 0, i32 0
  %44 = load %class.scoped_refptr.44*, %class.scoped_refptr.44** %43, align 8
  %45 = icmp eq %class.scoped_refptr.44* %44, null
  %46 = zext i32 %40 to i64
  %47 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink14BlobDataHandleEEEEmm(i64 %46) #6
  %48 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %47, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIN5blink14BlobDataHandleEEEEPKcv, i64 0, i64 0)) #6
  br i1 %45, label %49, label %54

49:                                               ; preds = %42
  %50 = ptrtoint i8* %48 to i64
  %51 = bitcast %"class.WTF::Vector.69"* %0 to i64*
  store atomic i64 %50, i64* %51 monotonic, align 8
  %52 = lshr i64 %47, 3
  %53 = trunc i64 %52 to i32
  store i32 %53, i32* %30, align 8
  br label %72

54:                                               ; preds = %42
  %55 = lshr i64 %47, 3
  %56 = ptrtoint i8* %48 to i64
  %57 = load %class.scoped_refptr.44*, %class.scoped_refptr.44** %43, align 8
  %58 = icmp ne i8* %48, null
  %59 = icmp ne %class.scoped_refptr.44* %57, null
  %60 = and i1 %58, %59
  %61 = bitcast %class.scoped_refptr.44* %57 to i8*
  br i1 %60, label %62, label %68, !prof !4

62:                                               ; preds = %54
  %63 = load i32, i32* %3, align 4
  %64 = zext i32 %63 to i64
  %65 = shl nuw nsw i64 %64, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %48, i8* nonnull align 8 %61, i64 %65, i1 false) #6
  %66 = bitcast %"class.WTF::Vector.69"* %0 to i8**
  %67 = load i8*, i8** %66, align 8
  br label %68

68:                                               ; preds = %62, %54
  %69 = phi i8* [ %67, %62 ], [ %61, %54 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %69) #6
  %70 = bitcast %"class.WTF::Vector.69"* %0 to i64*
  store atomic i64 %56, i64* %70 monotonic, align 8
  %71 = trunc i64 %55 to i32
  store i32 %71, i32* %30, align 8
  br label %72

72:                                               ; preds = %68, %49, %33, %29
  %73 = getelementptr inbounds %"class.WTF::Vector.69", %"class.WTF::Vector.69"* %0, i64 0, i32 0, i32 0, i32 0
  %74 = load %class.scoped_refptr.44*, %class.scoped_refptr.44** %73, align 8
  %75 = load i32, i32* %3, align 4
  %76 = zext i32 %75 to i64
  %77 = getelementptr inbounds %class.scoped_refptr.44, %class.scoped_refptr.44* %74, i64 %76
  %78 = zext i32 %1 to i64
  %79 = getelementptr inbounds %class.scoped_refptr.44, %class.scoped_refptr.44* %74, i64 %78
  %80 = bitcast %class.scoped_refptr.44* %77 to i8*
  %81 = ptrtoint %class.scoped_refptr.44* %79 to i64
  %82 = ptrtoint %class.scoped_refptr.44* %77 to i64
  %83 = sub i64 %81, %82
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 %83, i1 false) #6
  br label %84

84:                                               ; preds = %26, %6, %72
  store i32 %1, i32* %3, align 4
  ret void
}

declare zeroext i1 @_ZN4mojo12StructTraitsIN5blink5mojom22SerializedBlobDataViewE13scoped_refptrINS1_14BlobDataHandleEEE4ReadES3_PS6_(%"class.blink::mojom::internal::SerializedBlob_Data"*, %"class.mojo::Message"*, %class.scoped_refptr.44*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %class.scoped_refptr.44* @_ZN3WTF6VectorI13scoped_refptrIN5blink14BlobDataHandleEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.69"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #6
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.69", %"class.WTF::Vector.69"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #6
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i8* %14, i8* %15) #6
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #6
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #6
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #6
  %23 = getelementptr inbounds %"class.WTF::Vector.69", %"class.WTF::Vector.69"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %class.scoped_refptr.44*, %class.scoped_refptr.44** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %class.scoped_refptr.44, %class.scoped_refptr.44* %24, i64 %25
  ret %class.scoped_refptr.44* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink14BlobDataHandleEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EES1_RS6_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable"*, %"class.WTF::String"* dereferenceable(8), %class.scoped_refptr.44* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink14BlobDataHandleEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #6
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"struct.WTF::KeyValuePair"* [ %28, %32 ], [ %64, %58 ]
  %48 = phi %"struct.WTF::KeyValuePair"* [ null, %32 ], [ %59, %58 ]
  %49 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %50 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %51 = bitcast %"struct.WTF::KeyValuePair"* %47 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, inttoptr (i64 -1 to i8*)
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = bitcast i8* %52 to %"class.WTF::StringImpl"*
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"* %56) #6
  br i1 %57, label %91, label %58

58:                                               ; preds = %46, %54
  %59 = phi %"struct.WTF::KeyValuePair"* [ %48, %54 ], [ %47, %46 ]
  %60 = icmp eq i64 %50, 0
  %61 = select i1 %60, i64 %45, i64 %50
  %62 = add i64 %61, %49
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"struct.WTF::KeyValuePair"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 16, i1 false) #6
  %72 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"struct.WTF::KeyValuePair"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  tail call void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_6StringEEENS2_I13scoped_refptrIN5blink14BlobDataHandleEEEEEENS_10StringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S8_EES3_RS8_EEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair"* dereferenceable(16) %79, %"class.WTF::String"* dereferenceable(8) %1, %class.scoped_refptr.44* dereferenceable(8) %2)
  %80 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = add i32 %81, 1
  store i32 %82, i32* %80, align 4
  %83 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %84 = load i32, i32* %83, align 8
  %85 = add i32 %84, %82
  %86 = shl i32 %85, 1
  %87 = load i32, i32* %12, align 8
  %88 = icmp ult i32 %86, %87
  br i1 %88, label %91, label %89

89:                                               ; preds = %78
  %90 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink14BlobDataHandleEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %79)
  br label %91

91:                                               ; preds = %54, %78, %89
  %92 = phi i8 [ 1, %78 ], [ 1, %89 ], [ 0, %54 ]
  %93 = phi %"struct.WTF::KeyValuePair"* [ %79, %78 ], [ %90, %89 ], [ %47, %54 ]
  %94 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %93, 0
  %95 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %94, i8 %92, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %95
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink14BlobDataHandleEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #6
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #6
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i64 0, i64 0), i8* %22, i8* %23) #6
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.8, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #6
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #6
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #6
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([117 x i8], [117 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringE13scoped_refptrIN5blink14BlobDataHandleEEEEEEPKcv, i64 0, i64 0)) #6
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #6
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair"*
  %37 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink14BlobDataHandleEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %36, i32 %32, %"struct.WTF::KeyValuePair"* %1) #6
  ret %"struct.WTF::KeyValuePair"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_6StringEEENS2_I13scoped_refptrIN5blink14BlobDataHandleEEEEEENS_10StringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S8_EES3_RS8_EEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair"* dereferenceable(16), %"class.WTF::String"* dereferenceable(8), %class.scoped_refptr.44* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %6 = bitcast %"class.WTF::String"* %1 to i64*
  %7 = load i64, i64* %6, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %5, align 8
  %8 = bitcast %"struct.WTF::KeyValuePair"* %0 to i64*
  %9 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  store i64 %7, i64* %8, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %25, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  br i1 %16, label %19, label %21

19:                                               ; preds = %12
  %20 = add i32 %18, -1
  store i32 %20, i32* %17, align 4
  br label %21

21:                                               ; preds = %19, %12
  %22 = phi i32 [ %20, %19 ], [ %18, %12 ]
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %10) #6
  br label %25

25:                                               ; preds = %3, %21, %24
  %26 = getelementptr inbounds %class.scoped_refptr.44, %class.scoped_refptr.44* %2, i64 0, i32 0
  %27 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %26, align 8
  %28 = icmp eq %"class.blink::BlobDataHandle"* %27, null
  br i1 %28, label %36, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw add i32* %30, i32 1 monotonic
  %32 = icmp sgt i32 %31, 0
  br i1 %32, label %36, label %33

33:                                               ; preds = %29
  %34 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.2, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0)) #6
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #6
  br label %36

36:                                               ; preds = %25, %29, %33
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 1
  %38 = ptrtoint %"class.blink::BlobDataHandle"* %27 to i64
  %39 = bitcast %class.scoped_refptr.44* %37 to i64*
  %40 = getelementptr inbounds %class.scoped_refptr.44, %class.scoped_refptr.44* %37, i64 0, i32 0
  %41 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %40, align 8
  store i64 %38, i64* %39, align 8
  %42 = icmp eq %"class.blink::BlobDataHandle"* %41, null
  br i1 %42, label %49, label %43

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw sub i32* %44, i32 1 acq_rel
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  call void @_ZN5blink14BlobDataHandleD1Ev(%"class.blink::BlobDataHandle"* nonnull %41) #6
  %48 = bitcast %"class.blink::BlobDataHandle"* %41 to i8*
  call void @free(i8* %48) #6
  br label %49

49:                                               ; preds = %36, %43, %47
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink14BlobDataHandleEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable", align 8
  %6 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #6
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair"* %1, %"struct.WTF::KeyValuePair"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair"* %22 to i64
  br label %42

24:                                               ; preds = %60
  %25 = bitcast %"class.WTF::HashTable"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %61, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair"* [ null, %16 ], [ %64, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %62, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = icmp eq i64 %32, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %28
  %37 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair"*
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink14BlobDataHandleEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS7_j(%"struct.WTF::KeyValuePair"* nonnull %37, i32 %34) #6
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %38

38:                                               ; preds = %28, %36
  %39 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, -2147483648
  store i32 %41, i32* %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #6
  ret %"struct.WTF::KeyValuePair"* %33

42:                                               ; preds = %21, %60
  %43 = phi i64 [ %61, %60 ], [ %23, %21 ]
  %44 = phi i32 [ %62, %60 ], [ %13, %21 ]
  %45 = phi %"struct.WTF::KeyValuePair"* [ %63, %60 ], [ %22, %21 ]
  %46 = phi %"struct.WTF::KeyValuePair"* [ %64, %60 ], [ null, %21 ]
  %47 = phi i32 [ %65, %60 ], [ 0, %21 ]
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 %48
  %50 = bitcast %"struct.WTF::KeyValuePair"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  switch i64 %51, label %52 [
    i64 -1, label %60
    i64 0, label %60
  ]

52:                                               ; preds = %42
  %53 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink14BlobDataHandleEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE8ReinsertEOS7_(%"class.WTF::HashTable"* nonnull %5, %"struct.WTF::KeyValuePair"* dereferenceable(16) %49)
  %54 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %54, i64 %48
  %56 = icmp eq %"struct.WTF::KeyValuePair"* %55, %3
  %57 = select i1 %56, %"struct.WTF::KeyValuePair"* %53, %"struct.WTF::KeyValuePair"* %46
  %58 = load i32, i32* %12, align 8
  %59 = ptrtoint %"struct.WTF::KeyValuePair"* %54 to i64
  br label %60

60:                                               ; preds = %42, %42, %52
  %61 = phi i64 [ %43, %42 ], [ %59, %52 ], [ %43, %42 ]
  %62 = phi i32 [ %44, %42 ], [ %58, %52 ], [ %44, %42 ]
  %63 = phi %"struct.WTF::KeyValuePair"* [ %45, %42 ], [ %54, %52 ], [ %45, %42 ]
  %64 = phi %"struct.WTF::KeyValuePair"* [ %46, %42 ], [ %57, %52 ], [ %46, %42 ]
  %65 = add i32 %47, 1
  %66 = icmp eq i32 %65, %62
  br i1 %66, label %24, label %42
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink14BlobDataHandleEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE8ReinsertEOS7_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0
  %4 = tail call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink14BlobDataHandleEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable"* %0, %"class.WTF::String"* dereferenceable(8) %3)
  %5 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %4, 0
  %6 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 0, i32 1, i32 0
  %7 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %6, align 8
  %8 = icmp eq %"class.blink::BlobDataHandle"* %7, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw sub i32* %10, i32 1 acq_rel
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %15

13:                                               ; preds = %9
  tail call void @_ZN5blink14BlobDataHandleD1Ev(%"class.blink::BlobDataHandle"* nonnull %7) #6
  %14 = bitcast %"class.blink::BlobDataHandle"* %7 to i8*
  tail call void @free(i8* %14) #6
  br label %15

15:                                               ; preds = %13, %9, %2
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #6
  br label %32

32:                                               ; preds = %15, %28, %31
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0, i32 0, i32 0
  %34 = bitcast %"struct.WTF::KeyValuePair"* %1 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"struct.WTF::KeyValuePair"* %5 to i64*
  store i64 %35, i64* %36, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %33, align 8
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 0, i32 1
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1
  %39 = getelementptr inbounds %class.scoped_refptr.44, %class.scoped_refptr.44* %38, i64 0, i32 0
  %40 = bitcast %class.scoped_refptr.44* %38 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %class.scoped_refptr.44* %37 to i64*
  store i64 %41, i64* %42, align 8
  store %"class.blink::BlobDataHandle"* null, %"class.blink::BlobDataHandle"** %39, align 8
  ret %"struct.WTF::KeyValuePair"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink14BlobDataHandleEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #6
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %20
  %22 = ptrtoint %"struct.WTF::KeyValuePair"* %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %21, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"struct.WTF::KeyValuePair"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"struct.WTF::KeyValuePair"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"struct.WTF::KeyValuePair"* %44, null
  %46 = ptrtoint %"struct.WTF::KeyValuePair"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"struct.WTF::KeyValuePair"* [ null, %26 ], [ %62, %61 ]
  %50 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %51 = phi %"struct.WTF::KeyValuePair"* [ %21, %26 ], [ %67, %61 ]
  %52 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %53 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %54 = bitcast %"struct.WTF::KeyValuePair"* %51 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = icmp eq i8* %55, inttoptr (i64 -1 to i8*)
  br i1 %56, label %61, label %57

57:                                               ; preds = %48
  %58 = bitcast i8* %55 to %"class.WTF::StringImpl"*
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"* %59) #6
  br i1 %60, label %72, label %61

61:                                               ; preds = %57, %48
  %62 = phi %"struct.WTF::KeyValuePair"* [ %49, %57 ], [ %51, %48 ]
  %63 = icmp eq i64 %53, 0
  %64 = select i1 %63, i64 %39, i64 %53
  %65 = add i64 %64, %52
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %66
  %68 = ptrtoint %"struct.WTF::KeyValuePair"* %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %67, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %57, %42
  %73 = phi i64 [ %47, %42 ], [ %50, %57 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %57 ]
  %75 = inttoptr i64 %73 to %"struct.WTF::KeyValuePair"*
  %76 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %75, 0
  %77 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %76, i8 %74, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %77
}

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink14BlobDataHandleEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS7_j(%"struct.WTF::KeyValuePair"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = zext i32 %1 to i64
  br label %8

6:                                                ; preds = %41, %2
  %7 = bitcast %"struct.WTF::KeyValuePair"* %0 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #6
  ret void

8:                                                ; preds = %41, %4
  %9 = phi i64 [ 0, %4 ], [ %42, %41 ]
  %10 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 %9
  %11 = bitcast %"struct.WTF::KeyValuePair"* %10 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, inttoptr (i64 -1 to i8*)
  br i1 %13, label %41, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 %9, i32 1, i32 0
  %16 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %15, align 8
  %17 = icmp eq %"class.blink::BlobDataHandle"* %16, null
  br i1 %17, label %24, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw sub i32* %19, i32 1 acq_rel
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %24

22:                                               ; preds = %18
  tail call void @_ZN5blink14BlobDataHandleD1Ev(%"class.blink::BlobDataHandle"* nonnull %16) #6
  %23 = bitcast %"class.blink::BlobDataHandle"* %16 to i8*
  tail call void @free(i8* %23) #6
  br label %24

24:                                               ; preds = %22, %18, %14
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %41, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  br i1 %32, label %35, label %37

35:                                               ; preds = %28
  %36 = add i32 %34, -1
  store i32 %36, i32* %33, align 4
  br label %37

37:                                               ; preds = %35, %28
  %38 = phi i32 [ %36, %35 ], [ %34, %28 ]
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #6
  br label %41

41:                                               ; preds = %40, %37, %24, %8
  %42 = add nuw nsw i64 %9, 1
  %43 = icmp eq i64 %42, %5
  br i1 %43, label %6, label %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4mojo12StructTraitsIN3url5mojom14OriginDataViewE13scoped_refptrIKN5blink14SecurityOriginEEE4ReadES3_PS8_(%"class.url::mojom::internal::Origin_Data"*, %"class.mojo::Message"*, %class.scoped_refptr.41*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.absl::optional.64", align 8
  %5 = alloca %"class.url::SchemeHostPort", align 8
  %6 = getelementptr inbounds %"class.absl::optional.64", %"class.absl::optional.64"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 24, i1 false)
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %"class.url::mojom::internal::Origin_Data", %"class.url::mojom::internal::Origin_Data"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"struct.mojo::internal::Pointer.123", %"struct.mojo::internal::Pointer.123"* %7, i64 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  %11 = bitcast %"struct.mojo::internal::Pointer.123"* %7 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 %9
  br i1 %10, label %21, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds i8, i8* %12, i64 8
  %15 = getelementptr inbounds i8, i8* %12, i64 4
  %16 = bitcast i8* %15 to i32*
  %17 = load i32, i32* %16, align 1
  %18 = zext i32 %17 to i64
  %19 = tail call zeroext i1 @_ZN4base12IsStringUTF8ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %14, i64 %18) #6
  br i1 %19, label %21, label %20

20:                                               ; preds = %13
  tail call void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() #6
  br label %21

21:                                               ; preds = %20, %13, %3
  %22 = phi i64 [ %18, %13 ], [ %18, %20 ], [ 0, %3 ]
  %23 = phi i8* [ %14, %13 ], [ %14, %20 ], [ null, %3 ]
  %24 = getelementptr inbounds %"class.url::mojom::internal::Origin_Data", %"class.url::mojom::internal::Origin_Data"* %0, i64 0, i32 2
  %25 = getelementptr inbounds %"struct.mojo::internal::Pointer.123", %"struct.mojo::internal::Pointer.123"* %24, i64 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = icmp eq i64 %26, 0
  %28 = bitcast %"struct.mojo::internal::Pointer.123"* %24 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 %26
  br i1 %27, label %38, label %30

30:                                               ; preds = %21
  %31 = getelementptr inbounds i8, i8* %29, i64 8
  %32 = getelementptr inbounds i8, i8* %29, i64 4
  %33 = bitcast i8* %32 to i32*
  %34 = load i32, i32* %33, align 1
  %35 = zext i32 %34 to i64
  %36 = tail call zeroext i1 @_ZN4base12IsStringUTF8ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %31, i64 %35) #6
  br i1 %36, label %38, label %37

37:                                               ; preds = %30
  tail call void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() #6
  br label %38

38:                                               ; preds = %37, %30, %21
  %39 = phi i8* [ %31, %30 ], [ %31, %37 ], [ null, %21 ]
  %40 = phi i64 [ %35, %30 ], [ %35, %37 ], [ 0, %21 ]
  %41 = getelementptr inbounds %"class.url::mojom::internal::Origin_Data", %"class.url::mojom::internal::Origin_Data"* %0, i64 0, i32 5
  %42 = getelementptr inbounds %"struct.mojo::internal::Pointer.77", %"struct.mojo::internal::Pointer.77"* %41, i64 0, i32 0
  %43 = load i64, i64* %42, align 8
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  store i8 0, i8* %6, align 8
  br label %54

46:                                               ; preds = %38
  %47 = bitcast %"struct.mojo::internal::Pointer.77"* %41 to i8*
  %48 = getelementptr inbounds i8, i8* %47, i64 %43
  %49 = bitcast i8* %48 to %"class.mojo_base::mojom::internal::UnguessableToken_Data"*
  %50 = getelementptr inbounds %"class.absl::optional.64", %"class.absl::optional.64"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %51 = bitcast %union.anon.68* %50 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 16, i1 false) #6
  store i8 1, i8* %6, align 8
  %52 = getelementptr inbounds %"class.absl::optional.64", %"class.absl::optional.64"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %53 = call zeroext i1 @_ZN4mojo12StructTraitsIN9mojo_base5mojom24UnguessableTokenDataViewEN4base16UnguessableTokenEE4ReadES3_PS5_(%"class.mojo_base::mojom::internal::UnguessableToken_Data"* nonnull %49, %"class.base::UnguessableToken"* %52) #6
  br i1 %53, label %54, label %92

54:                                               ; preds = %45, %46
  %55 = bitcast %"class.url::SchemeHostPort"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %55) #6
  %56 = getelementptr inbounds %"class.url::mojom::internal::Origin_Data", %"class.url::mojom::internal::Origin_Data"* %0, i64 0, i32 3
  %57 = load i16, i16* %56, align 1
  call void @_ZN3url14SchemeHostPortC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES6_t(%"class.url::SchemeHostPort"* nonnull %5, i8* %23, i64 %22, i8* %39, i64 %40, i16 zeroext %57) #6
  %58 = call zeroext i1 @_ZNK3url14SchemeHostPort7IsValidEv(%"class.url::SchemeHostPort"* nonnull %5) #6
  br i1 %58, label %68, label %59

59:                                               ; preds = %54
  %60 = load i8, i8* %6, align 8, !range !3
  %61 = icmp ne i8 %60, 0
  %62 = or i64 %40, %22
  %63 = icmp eq i64 %62, 0
  %64 = and i1 %63, %61
  br i1 %64, label %65, label %90

65:                                               ; preds = %59
  %66 = load i16, i16* %56, align 1
  %67 = icmp eq i16 %66, 0
  br i1 %67, label %68, label %90

68:                                               ; preds = %65, %54
  %69 = call %"class.blink::SecurityOrigin"* @_ZN4mojo16UrlOriginAdapter20CreateSecurityOriginERKN3url14SchemeHostPortERKN4absl8optionalIN4base16UnguessableTokenEEE(%"class.url::SchemeHostPort"* nonnull dereferenceable(56) %5, %"class.absl::optional.64"* nonnull dereferenceable(24) %4)
  %70 = ptrtoint %"class.blink::SecurityOrigin"* %69 to i64
  %71 = bitcast %class.scoped_refptr.41* %2 to i64*
  %72 = getelementptr inbounds %class.scoped_refptr.41, %class.scoped_refptr.41* %2, i64 0, i32 0
  %73 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %72, align 8
  store i64 %70, i64* %71, align 8
  %74 = icmp eq %"class.blink::SecurityOrigin"* %73, null
  br i1 %74, label %82, label %75

75:                                               ; preds = %68
  %76 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %73, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %76) #6
  %77 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %73, i64 0, i32 0, i32 0, i32 0, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %82

80:                                               ; preds = %75
  call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %73) #6
  %81 = bitcast %"class.blink::SecurityOrigin"* %73 to i8*
  call void @free(i8* %81) #6
  br label %82

82:                                               ; preds = %80, %75, %68
  %83 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %72, align 8
  %84 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %83, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %85 = load i8, i8* %84, align 8, !range !3
  %86 = icmp eq i8 %85, 0
  %87 = load i8, i8* %6, align 8
  %88 = icmp ne i8 %87, 0
  %89 = or i1 %86, %88
  br label %90

90:                                               ; preds = %82, %65, %59
  %91 = phi i1 [ false, %59 ], [ false, %65 ], [ %89, %82 ]
  call void @_ZN3url14SchemeHostPortD1Ev(%"class.url::SchemeHostPort"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %55) #6
  br label %92

92:                                               ; preds = %46, %90
  %93 = phi i1 [ %91, %90 ], [ false, %46 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #6
  ret i1 %93
}

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 13, i32 0
  %3 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %2, align 8
  %4 = icmp eq %"class.blink::SecurityOrigin"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #6
  %7 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %3) #6
  %11 = bitcast %"class.blink::SecurityOrigin"* %3 to i8*
  tail call void @free(i8* %11) #6
  br label %12

12:                                               ; preds = %5, %10, %1
  %13 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 3, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %25

23:                                               ; preds = %16
  %24 = add i32 %22, -1
  store i32 %24, i32* %21, align 4
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi i32 [ %24, %23 ], [ %22, %16 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #6
  br label %29

29:                                               ; preds = %12, %25, %28
  %30 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 2, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #6
  br label %46

46:                                               ; preds = %29, %42, %45
  %47 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 1, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %50
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %50
  %60 = phi i32 [ %58, %57 ], [ %56, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #6
  br label %63

63:                                               ; preds = %46, %59, %62
  ret void
}

declare void @_ZN3url14SchemeHostPortC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES6_t(%"class.url::SchemeHostPort"*, i8*, i64, i8*, i64, i16 zeroext) unnamed_addr #2

declare zeroext i1 @_ZNK3url14SchemeHostPort7IsValidEv(%"class.url::SchemeHostPort"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::SecurityOrigin"* @_ZN4mojo16UrlOriginAdapter20CreateSecurityOriginERKN3url14SchemeHostPortERKN4absl8optionalIN4base16UnguessableTokenEEE(%"class.url::SchemeHostPort"* dereferenceable(56), %"class.absl::optional.64"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.url::Origin::Nonce", align 8
  %6 = tail call zeroext i1 @_ZNK3url14SchemeHostPort7IsValidEv(%"class.url::SchemeHostPort"* %0) #6
  br i1 %6, label %7, label %75

7:                                                ; preds = %2
  %8 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #6
  %9 = bitcast %"class.url::SchemeHostPort"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  %13 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = bitcast %"class.url::SchemeHostPort"* %0 to i8*
  %16 = select i1 %12, i8* %14, i8* %15
  %17 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = zext i8 %11 to i64
  %20 = select i1 %12, i64 %18, i64 %19
  %21 = tail call %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %16, i64 %20) #6
  %22 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %21, %"class.WTF::StringImpl"** %22, align 8
  %23 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #6
  %24 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %0, i64 0, i32 1
  %25 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  %32 = select i1 %28, i8* %30, i8* %31
  %33 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = zext i8 %27 to i64
  %36 = select i1 %28, i64 %34, i64 %35
  %37 = tail call %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %32, i64 %36) #6
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %37, %"class.WTF::StringImpl"** %38, align 8
  %39 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %0, i64 0, i32 2
  %40 = load i16, i16* %39, align 8
  %41 = call %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin20CreateFromValidTupleERKN3WTF6StringES4_t(%"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.WTF::String"* nonnull dereferenceable(8) %4, i16 zeroext %40) #6
  %42 = ptrtoint %"class.blink::SecurityOrigin"* %41 to i64
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %58, label %45

45:                                               ; preds = %7
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %54

52:                                               ; preds = %45
  %53 = add i32 %51, -1
  store i32 %53, i32* %50, align 4
  br label %54

54:                                               ; preds = %52, %45
  %55 = phi i32 [ %53, %52 ], [ %51, %45 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %43) #6
  br label %58

58:                                               ; preds = %7, %54, %57
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #6
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %74, label %61

61:                                               ; preds = %58
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  br i1 %65, label %68, label %70

68:                                               ; preds = %61
  %69 = add i32 %67, -1
  store i32 %69, i32* %66, align 4
  br label %70

70:                                               ; preds = %68, %61
  %71 = phi i32 [ %69, %68 ], [ %67, %61 ]
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %70
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %59) #6
  br label %74

74:                                               ; preds = %58, %70, %73
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #6
  br label %75

75:                                               ; preds = %74, %2
  %76 = phi i64 [ %42, %74 ], [ 0, %2 ]
  %77 = getelementptr inbounds %"class.absl::optional.64", %"class.absl::optional.64"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %78 = load i8, i8* %77, align 8, !range !3
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %95, label %80

80:                                               ; preds = %75
  %81 = bitcast %"class.url::Origin::Nonce"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %81) #6
  %82 = getelementptr inbounds %"class.absl::optional.64", %"class.absl::optional.64"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3url6Origin5NonceC1ERKN4base16UnguessableTokenE(%"class.url::Origin::Nonce"* nonnull %5, %"class.base::UnguessableToken"* dereferenceable(16) %82) #6
  %83 = inttoptr i64 %76 to %"class.blink::SecurityOrigin"*
  %84 = call %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin12CreateOpaqueERKN3url6Origin5NonceEPKS0_(%"class.url::Origin::Nonce"* nonnull dereferenceable(16) %5, %"class.blink::SecurityOrigin"* %83) #6
  %85 = ptrtoint %"class.blink::SecurityOrigin"* %84 to i64
  %86 = icmp eq i64 %76, 0
  br i1 %86, label %94, label %87

87:                                               ; preds = %80
  %88 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %83, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %88) #6
  %89 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %83, i64 0, i32 0, i32 0, i32 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %94

92:                                               ; preds = %87
  call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %83) #6
  %93 = inttoptr i64 %76 to i8*
  call void @free(i8* %93) #6
  br label %94

94:                                               ; preds = %80, %87, %92
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %81) #6
  br label %95

95:                                               ; preds = %75, %94
  %96 = phi i64 [ %85, %94 ], [ %76, %75 ]
  %97 = inttoptr i64 %96 to %"class.blink::SecurityOrigin"*
  ret %"class.blink::SecurityOrigin"* %97
}

; Function Attrs: nounwind
declare void @_ZN3url14SchemeHostPortD1Ev(%"class.url::SchemeHostPort"*) unnamed_addr #3

declare void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() local_unnamed_addr #2

declare zeroext i1 @_ZN4base12IsStringUTF8ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN4mojo12StructTraitsIN9mojo_base5mojom24UnguessableTokenDataViewEN4base16UnguessableTokenEE4ReadES3_PS5_(%"class.mojo_base::mojom::internal::UnguessableToken_Data"*, %"class.base::UnguessableToken"*) local_unnamed_addr #2

declare %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin20CreateFromValidTupleERKN3WTF6StringES4_t(%"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), i16 zeroext) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #2

declare %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin12CreateOpaqueERKN3url6Origin5NonceEPKS0_(%"class.url::Origin::Nonce"* dereferenceable(16), %"class.blink::SecurityOrigin"*) local_unnamed_addr #2

declare void @_ZN3url6Origin5NonceC1ERKN4base16UnguessableTokenE(%"class.url::Origin::Nonce"*, %"class.base::UnguessableToken"* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewINS_20InterfacePtrDataViewIN5blink5mojom42FileSystemAccessTransferTokenInterfaceBaseEEEEEN3WTF6VectorINS_13PendingRemoteINS5_5blink29FileSystemAccessTransferTokenEEELj0ENS9_18PartitionAllocatorEEENS0_13ArrayIteratorINS_11ArrayTraitsISG_EESG_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_14Interface_DataEEEPSG_PNS_7MessageE(%"class.mojo::internal::Array_Data.131"*, %"class.WTF::Vector.53"*, %"class.mojo::Message"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.mojo::ScopedHandleBase", align 4
  %5 = alloca %"class.mojo::ScopedHandleBase.50", align 4
  %6 = alloca %"class.mojo::PendingRemote.56", align 4
  %7 = getelementptr inbounds %"class.mojo::internal::Array_Data.131", %"class.mojo::internal::Array_Data.131"* %0, i64 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 1
  %9 = getelementptr inbounds %"class.WTF::Vector.53", %"class.WTF::Vector.53"* %1, i64 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp ult i32 %10, %8
  br i1 %11, label %26, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.WTF::Vector.53", %"class.WTF::Vector.53"* %1, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.mojo::PendingRemote.56"*, %"class.mojo::PendingRemote.56"** %13, align 8
  %15 = zext i32 %10 to i64
  %16 = getelementptr inbounds %"class.mojo::PendingRemote.56", %"class.mojo::PendingRemote.56"* %14, i64 %15
  %17 = icmp eq i32 %10, %8
  br i1 %17, label %68, label %18

18:                                               ; preds = %12
  %19 = zext i32 %8 to i64
  %20 = getelementptr inbounds %"class.mojo::PendingRemote.56", %"class.mojo::PendingRemote.56"* %14, i64 %19
  br label %21

21:                                               ; preds = %21, %18
  %22 = phi %"class.mojo::PendingRemote.56"* [ %24, %21 ], [ %20, %18 ]
  %23 = getelementptr inbounds %"class.mojo::PendingRemote.56", %"class.mojo::PendingRemote.56"* %22, i64 0, i32 0
  tail call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* %23) #6
  %24 = getelementptr inbounds %"class.mojo::PendingRemote.56", %"class.mojo::PendingRemote.56"* %22, i64 1
  %25 = icmp eq %"class.mojo::PendingRemote.56"* %24, %16
  br i1 %25, label %68, label %21

26:                                               ; preds = %3
  %27 = getelementptr inbounds %"class.WTF::Vector.53", %"class.WTF::Vector.53"* %1, i64 0, i32 0, i32 0, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = icmp ult i32 %28, %8
  br i1 %29, label %30, label %52

30:                                               ; preds = %26
  %31 = lshr i32 %28, 2
  %32 = add nuw i32 %28, 1
  %33 = add i32 %32, %31
  %34 = icmp ugt i32 %33, 4
  %35 = select i1 %34, i32 %33, i32 4
  %36 = icmp ugt i32 %35, %8
  %37 = select i1 %36, i32 %35, i32 %8
  %38 = icmp ult i32 %28, %37
  br i1 %38, label %39, label %52, !prof !4

39:                                               ; preds = %30
  %40 = getelementptr inbounds %"class.WTF::Vector.53", %"class.WTF::Vector.53"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.mojo::PendingRemote.56"*, %"class.mojo::PendingRemote.56"** %40, align 8
  %42 = icmp eq %"class.mojo::PendingRemote.56"* %41, null
  br i1 %42, label %43, label %51

43:                                               ; preds = %39
  %44 = zext i32 %37 to i64
  %45 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo13PendingRemoteIN5blink5mojom5blink29FileSystemAccessTransferTokenEEEEEmm(i64 %44) #6
  %46 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %45, i8* getelementptr inbounds ([119 x i8], [119 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo13PendingRemoteIN5blink5mojom5blink29FileSystemAccessTransferTokenEEEEEPKcv, i64 0, i64 0)) #6
  %47 = ptrtoint i8* %46 to i64
  %48 = bitcast %"class.WTF::Vector.53"* %1 to i64*
  store atomic i64 %47, i64* %48 monotonic, align 8
  %49 = lshr i64 %45, 3
  %50 = trunc i64 %49 to i32
  store i32 %50, i32* %27, align 8
  br label %52

51:                                               ; preds = %39
  tail call void @_ZN3WTF6VectorIN4mojo13PendingRemoteIN5blink5mojom5blink29FileSystemAccessTransferTokenEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.53"* %1, i32 %37) #6
  br label %52

52:                                               ; preds = %51, %43, %30, %26
  %53 = getelementptr inbounds %"class.WTF::Vector.53", %"class.WTF::Vector.53"* %1, i64 0, i32 0, i32 0, i32 0
  %54 = load %"class.mojo::PendingRemote.56"*, %"class.mojo::PendingRemote.56"** %53, align 8
  %55 = load i32, i32* %9, align 4
  %56 = zext i32 %8 to i64
  %57 = getelementptr inbounds %"class.mojo::PendingRemote.56", %"class.mojo::PendingRemote.56"* %54, i64 %56
  %58 = icmp eq i32 %55, %8
  br i1 %58, label %68, label %59

59:                                               ; preds = %52
  %60 = zext i32 %55 to i64
  %61 = getelementptr inbounds %"class.mojo::PendingRemote.56", %"class.mojo::PendingRemote.56"* %54, i64 %60
  br label %62

62:                                               ; preds = %62, %59
  %63 = phi %"class.mojo::PendingRemote.56"* [ %66, %62 ], [ %61, %59 ]
  %64 = bitcast %"class.mojo::PendingRemote.56"* %63 to i64*
  store i64 0, i64* %64, align 4
  %65 = getelementptr inbounds %"class.mojo::PendingRemote.56", %"class.mojo::PendingRemote.56"* %63, i64 0, i32 0
  tail call void @_ZN4mojo8internal18PendingRemoteStateC1Ev(%"struct.mojo::internal::PendingRemoteState"* %65) #6
  %66 = getelementptr inbounds %"class.mojo::PendingRemote.56", %"class.mojo::PendingRemote.56"* %63, i64 1
  %67 = icmp eq %"class.mojo::PendingRemote.56"* %66, %57
  br i1 %67, label %68, label %62

68:                                               ; preds = %21, %62, %52, %12
  store i32 %8, i32* %9, align 4
  %69 = load i32, i32* %7, align 1
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %99, label %71

71:                                               ; preds = %68
  %72 = getelementptr inbounds %"class.mojo::internal::Array_Data.131", %"class.mojo::internal::Array_Data.131"* %0, i64 1
  %73 = bitcast %"class.mojo::PendingRemote.56"* %6 to i8*
  %74 = bitcast %"class.mojo::ScopedHandleBase.50"* %5 to i8*
  %75 = getelementptr inbounds %"class.mojo::ScopedHandleBase.50", %"class.mojo::ScopedHandleBase.50"* %5, i64 0, i32 0, i32 0
  %76 = bitcast %"class.mojo::ScopedHandleBase"* %4 to i8*
  %77 = getelementptr inbounds %"class.mojo::PendingRemote.56", %"class.mojo::PendingRemote.56"* %6, i64 0, i32 0
  %78 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %4, i64 0, i32 0, i32 0, i32 0
  br label %79

79:                                               ; preds = %71, %93
  %80 = phi i64 [ 0, %71 ], [ %82, %93 ]
  %81 = getelementptr inbounds %"class.mojo::internal::Array_Data.131", %"class.mojo::internal::Array_Data.131"* %72, i64 %80
  %82 = add nuw nsw i64 %80, 1
  %83 = trunc i64 %80 to i32
  %84 = call dereferenceable(8) %"class.mojo::PendingRemote.56"* @_ZN3WTF6VectorIN4mojo13PendingRemoteIN5blink5mojom5blink29FileSystemAccessTransferTokenEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.53"* %1, i32 %83) #6
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #6
  %85 = bitcast %"class.mojo::internal::Array_Data.131"* %81 to %"struct.mojo::internal::Handle_Data"*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %74) #6
  call void @_ZN4mojo8internal17DeserializeHandleERKNS0_11Handle_DataERNS_7MessageE(%"class.mojo::ScopedHandleBase.50"* nonnull sret %5, %"struct.mojo::internal::Handle_Data"* dereferenceable(4) %85, %"class.mojo::Message"* dereferenceable(120) %2) #6, !noalias !5
  %86 = load i32, i32* %75, align 4, !noalias !8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %74) #6
  %87 = getelementptr inbounds %"class.mojo::internal::Array_Data.131", %"class.mojo::internal::Array_Data.131"* %81, i64 0, i32 0, i32 1
  %88 = load i32, i32* %87, align 1
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %76) #6
  store i32 %86, i32* %78, align 4, !alias.scope !13
  call void @_ZN4mojo8internal18PendingRemoteStateC1ENS_16ScopedHandleBaseINS_17MessagePipeHandleEEEj(%"struct.mojo::internal::PendingRemoteState"* nonnull %77, %"class.mojo::ScopedHandleBase"* nonnull %4, i32 %88) #6
  %89 = load i32, i32* %78, align 4
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %93, label %91

91:                                               ; preds = %79
  %92 = call i32 @MojoClose(i32 %89) #6
  br label %93

93:                                               ; preds = %79, %91
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %76) #6
  %94 = getelementptr inbounds %"class.mojo::PendingRemote.56", %"class.mojo::PendingRemote.56"* %84, i64 0, i32 0
  %95 = call dereferenceable(8) %"struct.mojo::internal::PendingRemoteState"* @_ZN4mojo8internal18PendingRemoteStateaSEOS1_(%"struct.mojo::internal::PendingRemoteState"* %94, %"struct.mojo::internal::PendingRemoteState"* nonnull dereferenceable(8) %77) #6
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %77) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #6
  %96 = load i32, i32* %7, align 1
  %97 = zext i32 %96 to i64
  %98 = icmp ult i64 %82, %97
  br i1 %98, label %79, label %99

99:                                               ; preds = %93, %68
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo13PendingRemoteIN5blink5mojom5blink29FileSystemAccessTransferTokenEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.53"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %24

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.53", %"class.WTF::Vector.53"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.mojo::PendingRemote.56"*, %"class.mojo::PendingRemote.56"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.53", %"class.WTF::Vector.53"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.mojo::PendingRemote.56", %"class.mojo::PendingRemote.56"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.53"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.53", %"class.WTF::Vector.53"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %22, label %14

14:                                               ; preds = %4, %14
  %15 = phi %"class.mojo::PendingRemote.56"* [ %20, %14 ], [ %6, %4 ]
  %16 = phi %"class.mojo::PendingRemote.56"* [ %19, %14 ], [ null, %4 ]
  %17 = getelementptr inbounds %"class.mojo::PendingRemote.56", %"class.mojo::PendingRemote.56"* %16, i64 0, i32 0
  %18 = getelementptr inbounds %"class.mojo::PendingRemote.56", %"class.mojo::PendingRemote.56"* %15, i64 0, i32 0
  tail call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* %17, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8) %18) #6
  tail call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* %18) #6
  %19 = getelementptr inbounds %"class.mojo::PendingRemote.56", %"class.mojo::PendingRemote.56"* %16, i64 1
  %20 = getelementptr inbounds %"class.mojo::PendingRemote.56", %"class.mojo::PendingRemote.56"* %15, i64 1
  %21 = icmp eq %"class.mojo::PendingRemote.56"* %20, %10
  br i1 %21, label %22, label %14

22:                                               ; preds = %14, %4
  %23 = bitcast %"class.mojo::PendingRemote.56"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %23) #6
  br label %57

24:                                               ; preds = %2
  %25 = zext i32 %1 to i64
  %26 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo13PendingRemoteIN5blink5mojom5blink29FileSystemAccessTransferTokenEEEEEmm(i64 %25) #6
  %27 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %26, i8* getelementptr inbounds ([119 x i8], [119 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo13PendingRemoteIN5blink5mojom5blink29FileSystemAccessTransferTokenEEEEEPKcv, i64 0, i64 0)) #6
  %28 = lshr i64 %26, 3
  %29 = ptrtoint i8* %27 to i64
  %30 = getelementptr inbounds %"class.WTF::Vector.53", %"class.WTF::Vector.53"* %0, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.mojo::PendingRemote.56"*, %"class.mojo::PendingRemote.56"** %30, align 8
  %32 = getelementptr inbounds %"class.WTF::Vector.53", %"class.WTF::Vector.53"* %0, i64 0, i32 0, i32 0, i32 2
  %33 = load i32, i32* %32, align 4
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds %"class.mojo::PendingRemote.56", %"class.mojo::PendingRemote.56"* %31, i64 %34
  %36 = icmp eq i32 %33, 0
  br i1 %36, label %37, label %39

37:                                               ; preds = %24
  %38 = bitcast %"class.mojo::PendingRemote.56"* %31 to i8*
  br label %52

39:                                               ; preds = %24
  %40 = bitcast i8* %27 to %"class.mojo::PendingRemote.56"*
  br label %41

41:                                               ; preds = %39, %41
  %42 = phi %"class.mojo::PendingRemote.56"* [ %47, %41 ], [ %31, %39 ]
  %43 = phi %"class.mojo::PendingRemote.56"* [ %46, %41 ], [ %40, %39 ]
  %44 = getelementptr inbounds %"class.mojo::PendingRemote.56", %"class.mojo::PendingRemote.56"* %43, i64 0, i32 0
  %45 = getelementptr inbounds %"class.mojo::PendingRemote.56", %"class.mojo::PendingRemote.56"* %42, i64 0, i32 0
  tail call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* %44, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8) %45) #6
  tail call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* %45) #6
  %46 = getelementptr inbounds %"class.mojo::PendingRemote.56", %"class.mojo::PendingRemote.56"* %43, i64 1
  %47 = getelementptr inbounds %"class.mojo::PendingRemote.56", %"class.mojo::PendingRemote.56"* %42, i64 1
  %48 = icmp eq %"class.mojo::PendingRemote.56"* %47, %35
  br i1 %48, label %49, label %41

49:                                               ; preds = %41
  %50 = bitcast %"class.WTF::Vector.53"* %0 to i8**
  %51 = load i8*, i8** %50, align 8
  br label %52

52:                                               ; preds = %37, %49
  %53 = phi i8* [ %51, %49 ], [ %38, %37 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %53) #6
  %54 = bitcast %"class.WTF::Vector.53"* %0 to i64*
  store atomic i64 %29, i64* %54 monotonic, align 8
  %55 = trunc i64 %28 to i32
  %56 = getelementptr inbounds %"class.WTF::Vector.53", %"class.WTF::Vector.53"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %55, i32* %56, align 8
  br label %57

57:                                               ; preds = %52, %22
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo13PendingRemoteIN5blink5mojom5blink29FileSystemAccessTransferTokenEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #6
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #6
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), i8* %11, i8* %12) #6
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #6
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #6
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #6
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #6
  ret i64 %21
}

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"*, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8)) unnamed_addr #3

declare void @_ZN4mojo8internal18PendingRemoteStateC1Ev(%"struct.mojo::internal::PendingRemoteState"*) unnamed_addr #2

declare void @_ZN4mojo8internal17DeserializeHandleERKNS0_11Handle_DataERNS_7MessageE(%"class.mojo::ScopedHandleBase.50"* sret, %"struct.mojo::internal::Handle_Data"* dereferenceable(4), %"class.mojo::Message"* dereferenceable(120)) local_unnamed_addr #2

declare i32 @MojoClose(i32) local_unnamed_addr #2

declare void @_ZN4mojo8internal18PendingRemoteStateC1ENS_16ScopedHandleBaseINS_17MessagePipeHandleEEEj(%"struct.mojo::internal::PendingRemoteState"*, %"class.mojo::ScopedHandleBase"*, i32) unnamed_addr #2

; Function Attrs: nounwind
declare dereferenceable(8) %"struct.mojo::internal::PendingRemoteState"* @_ZN4mojo8internal18PendingRemoteStateaSEOS1_(%"struct.mojo::internal::PendingRemoteState"*, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.mojo::PendingRemote.56"* @_ZN3WTF6VectorIN4mojo13PendingRemoteIN5blink5mojom5blink29FileSystemAccessTransferTokenEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.53"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #6
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.53", %"class.WTF::Vector.53"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #6
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i8* %14, i8* %15) #6
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #6
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #6
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #6
  %23 = getelementptr inbounds %"class.WTF::Vector.53", %"class.WTF::Vector.53"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.mojo::PendingRemote.56"*, %"class.mojo::PendingRemote.56"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.mojo::PendingRemote.56", %"class.mojo::PendingRemote.56"* %24, i64 %25
  ret %"class.mojo::PendingRemote.56"* %26
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN4mojo8internal19DeserializeHandleAsINS_17MessagePipeHandleEEENS_16ScopedHandleBaseIT_EERKNS0_11Handle_DataERNS_7MessageE: argument 0"}
!7 = distinct !{!7, !"_ZN4mojo8internal19DeserializeHandleAsINS_17MessagePipeHandleEEENS_16ScopedHandleBaseIT_EERKNS0_11Handle_DataERNS_7MessageE"}
!8 = !{!9, !11, !6}
!9 = distinct !{!9, !10, !"_ZN4mojo16ScopedHandleBaseINS_6HandleEE7releaseEv: argument 0"}
!10 = distinct !{!10, !"_ZN4mojo16ScopedHandleBaseINS_6HandleEE7releaseEv"}
!11 = distinct !{!11, !12, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE4FromINS_6HandleEEES2_NS0_IT_EE: argument 0"}
!12 = distinct !{!12, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE4FromINS_6HandleEEES2_NS0_IT_EE"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv: argument 0"}
!15 = distinct !{!15, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv"}
