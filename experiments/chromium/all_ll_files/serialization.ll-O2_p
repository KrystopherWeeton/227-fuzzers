; ModuleID = '../../third_party/blink/renderer/core/editing/serializers/serialization.cc'
source_filename = "../../third_party/blink/renderer/core/editing/serializers/serialization.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.23 }
%class.scoped_refptr.23 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.106" }
%"struct.std::__1::atomic.106" = type { %"struct.std::__1::__atomic_base.107" }
%"struct.std::__1::__atomic_base.107" = type { %"struct.std::__1::__atomic_base.108" }
%"struct.std::__1::__atomic_base.108" = type { %"struct.std::__1::__cxx_atomic_impl.109" }
%"struct.std::__1::__cxx_atomic_impl.109" = type { %"struct.std::__1::__cxx_atomic_base_impl.110" }
%"struct.std::__1::__cxx_atomic_base_impl.110" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.164", i32, [4 x i8], %"class.std::__1::unique_ptr.300", %"class.std::__1::unique_ptr.300", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.310", %"class.std::__1::unique_ptr.316", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.328", %"class.std::__1::unique_ptr.334", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.341", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.167", %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.179", %"class.std::__1::unique_ptr.185", %"class.std::__1::unique_ptr.191", %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.208", %"class.std::__1::unique_ptr.215", %"class.std::__1::unique_ptr.215", %"class.std::__1::unique_ptr.222", %"class.std::__1::unique_ptr.229", %"class.std::__1::unique_ptr.236", %"class.std::__1::unique_ptr.236", %"class.std::__1::unique_ptr.243", %"class.std::__1::unique_ptr.250", %"class.std::__1::unique_ptr.257", %"class.std::__1::unique_ptr.280", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.200" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.200" = type { %"struct.std::__1::__atomic_base.201" }
%"struct.std::__1::__atomic_base.201" = type { %"struct.std::__1::__atomic_base.202" }
%"struct.std::__1::__atomic_base.202" = type { %"struct.std::__1::__cxx_atomic_impl.203" }
%"struct.std::__1::__cxx_atomic_impl.203" = type { %"struct.std::__1::__cxx_atomic_base_impl.204" }
%"struct.std::__1::__cxx_atomic_base_impl.204" = type { i64 }
%"class.std::__1::unique_ptr.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"class.blink::Worklist.211"* }
%"class.blink::Worklist.211" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.200" }
%"class.std::__1::unique_ptr.215" = type { %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"class.blink::Worklist.218"* }
%"class.blink::Worklist.218" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.200" }
%"class.std::__1::unique_ptr.222" = type { %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"class.blink::Worklist.225"* }
%"class.blink::Worklist.225" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.200" }
%"class.std::__1::unique_ptr.229" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.blink::Worklist.232"* }
%"class.blink::Worklist.232" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.200" }
%"class.std::__1::unique_ptr.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"class.blink::Worklist.239"* }
%"class.blink::Worklist.239" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.200" }
%"class.std::__1::unique_ptr.243" = type { %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"class.blink::Worklist.246"* }
%"class.blink::Worklist.246" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.200" }
%"class.std::__1::unique_ptr.250" = type { %"class.std::__1::__compressed_pair.251" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.252" }
%"struct.std::__1::__compressed_pair_elem.252" = type { %"class.blink::Worklist.253"* }
%"class.blink::Worklist.253" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.200" }
%"class.std::__1::unique_ptr.257" = type { %"class.std::__1::__compressed_pair.258" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.259" }
%"struct.std::__1::__compressed_pair_elem.259" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.260", %"class.std::__1::__compressed_pair.267", %"class.std::__1::__compressed_pair.272", %"class.std::__1::__compressed_pair.274", [4 x i8] }>
%"class.std::__1::unique_ptr.260" = type { %"class.std::__1::__compressed_pair.261" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262", %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { i64 }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.268" }
%"struct.std::__1::__compressed_pair_elem.268" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { float }
%"class.std::__1::unique_ptr.280" = type { %"class.std::__1::__compressed_pair.281" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.283", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.283" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"struct.std::__1::__compressed_pair_elem.285" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.292" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.300" = type { %"class.std::__1::__compressed_pair.301" }
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.302" }
%"struct.std::__1::__compressed_pair_elem.302" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.308" }
%"class.WTF::VectorBuffer.308" = type { %"class.WTF::VectorBufferBase.309" }
%"class.WTF::VectorBufferBase.309" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.310" = type { %"class.std::__1::__compressed_pair.311" }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"struct.std::__1::__compressed_pair_elem.312" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.316" = type { %"class.std::__1::__compressed_pair.317" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.318" }
%"struct.std::__1::__compressed_pair_elem.318" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.322" }
%"class.std::__1::unique_ptr.322" = type { %"class.std::__1::__compressed_pair.323" }
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.324" }
%"struct.std::__1::__compressed_pair_elem.324" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.211"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.218"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.225"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.232"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.239"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.581" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.581" = type { %"struct.std::__1::__compressed_pair_elem.582" }
%"struct.std::__1::__compressed_pair_elem.582" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.328" = type { %"class.std::__1::__compressed_pair.329" }
%"class.std::__1::__compressed_pair.329" = type { %"struct.std::__1::__compressed_pair_elem.330" }
%"struct.std::__1::__compressed_pair_elem.330" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.334" = type { %"class.std::__1::__compressed_pair.335" }
%"class.std::__1::__compressed_pair.335" = type { %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.340 }
%class.scoped_refptr.340 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.341" = type { %"struct.std::__1::__atomic_base.342" }
%"struct.std::__1::__atomic_base.342" = type { %"struct.std::__1::__cxx_atomic_impl.343" }
%"struct.std::__1::__cxx_atomic_impl.343" = type { %"struct.std::__1::__cxx_atomic_base_impl.344" }
%"struct.std::__1::__cxx_atomic_base_impl.344" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::SVGQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::PositionTemplate" = type { %"class.blink::Member", i32, i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.1", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.3" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.1" = type { %"class.blink::MemberBase.2" }
%"class.blink::MemberBase.2" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.7", %"class.blink::Member.9", %"class.blink::Member.1", %"class.blink::Member.11", %"class.blink::Member.11", %"class.blink::Member.44", %"class.blink::Member.46", %"class.blink::Member.48", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.53", %"class.blink::HeapVector.55" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.7" = type { %"class.blink::MemberBase.8" }
%"class.blink::MemberBase.8" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Member.9" = type { %"class.blink::MemberBase.10" }
%"class.blink::MemberBase.10" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.102", %"class.WTF::Vector.102", i8, i32, %"class.blink::Member.113", %"class.blink::Member.115", %"class.blink::Member.117", %"class.blink::Member.119", %"class.blink::Member.121", %"class.blink::Member.128", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.136", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.142", %"class.blink::Member.144", %"class.blink::Member.61", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.147", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.21", %"class.blink::Member.357", %"class.blink::Member.21", %"class.blink::Member.21", %"class.blink::Member.21", %"class.blink::UserActionElementSet", %"class.blink::Member.366", double, double, i64, i64, %"class.blink::HeapHashSet.368", %"class.blink::HeapHashSet.375", i16, i8, %"class.blink::Member.382", %"class.blink::Member.384", %"class.blink::Member.386", %"class.blink::Member.388", %"class.blink::TextLinkColors", %"class.blink::Member.390", i8, [7 x i8], %"class.blink::HeapHashMap.392", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.21", %"class.WTF::Vector.399", %"class.blink::Member.404", %"class.blink::Member.408", i8, %"class.blink::Member.21", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.410", %"class.blink::HeapVector.412", %"class.std::__1::unique_ptr.420", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.426", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.439", %"class.WTF::Vector.441", i8, i8, %"class.std::__1::unique_ptr.446", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.452", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.460", i8, i32, %"class.blink::Member.462", %"class.blink::Member.464", %"class.blink::Member.466", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.468", %"class.WTF::HashMap.470", %"class.blink::Member.475", %"class.blink::Member.477", %"class.blink::Member.479", %"class.blink::Member.481", %"class.blink::Member.9", %"class.blink::Member.9", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.483", i8, i32, %"class.blink::Member.490", %"class.blink::Member.492", i32, %"class.blink::Member.494", %"class.blink::Member.496", %"class.blink::Member.498", %"class.std::__1::unique_ptr.500", i64, %"class.std::__1::unique_ptr.506", i32, i32, %"class.blink::Member.517", %"class.blink::Member.519", %"class.blink::Member.521", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.523", %"class.WTF::Vector.525", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.530", %"class.blink::Member.537", %"class.std::__1::unique_ptr.539", %"class.blink::Member.545", i8, i8, %"class.WTF::String", %"class.blink::Member.547", i8, [7 x i8], %"class.blink::HeapHashMap.549", %"class.blink::HeapObserverSet", %"class.blink::Member.563", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.565", i32, i8, i8, %"class.blink::WeakMember.567", %"class.blink::Member.568" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.95" }
%"class.blink::HeapHashMap.95" = type { %"class.WTF::HashMap.98" }
%"class.WTF::HashMap.98" = type { %"class.WTF::HashTable.99" }
%"class.WTF::HashTable.99" = type <{ %"struct.WTF::KeyValuePair.101"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.101" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.102" = type { %"class.WTF::VectorBuffer.103" }
%"class.WTF::VectorBuffer.103" = type { %"class.WTF::VectorBufferBase.104" }
%"class.WTF::VectorBufferBase.104" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.105 }
%class.scoped_refptr.105 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.106" }
%"class.blink::Member.113" = type { %"class.blink::MemberBase.114" }
%"class.blink::MemberBase.114" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.115" = type { %"class.blink::MemberBase.116" }
%"class.blink::MemberBase.116" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.2657", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.2719", i32, i8, [3 x i8], %"class.blink::HeapVector.2721", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.2729", %"class.blink::Member.2731", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.2434", %"class.blink::Member.2740", %"class.blink::Member.2742", i8, [7 x i8] }>
%"class.blink::Supplementable.2657" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2658" }
%"class.blink::HeapHashMap.2658" = type { %"class.WTF::HashMap.2661" }
%"class.WTF::HashMap.2661" = type { %"class.WTF::HashTable.2662" }
%"class.WTF::HashTable.2662" = type <{ %"struct.WTF::KeyValuePair.2664"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2664" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.2673" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.2665" }
%"class.blink::HeapObserverSet.2665" = type { i32, [4 x i8], %"class.blink::HeapHashSet.2666" }
%"class.blink::HeapHashSet.2666" = type { %"class.WTF::HashSet.2669" }
%"class.WTF::HashSet.2669" = type { %"class.WTF::HashTable.2670" }
%"class.WTF::HashTable.2670" = type <{ %"class.blink::WeakMember.2672"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2672" = type opaque
%"class.blink::Supplementable.2673" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2674" }
%"class.blink::HeapHashMap.2674" = type { %"class.WTF::HashMap.2677" }
%"class.WTF::HashMap.2677" = type { %"class.WTF::HashTable.2678" }
%"class.WTF::HashTable.2678" = type <{ %"struct.WTF::KeyValuePair.2680"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2680" = type { i8*, %"class.blink::Member.2819" }
%"class.blink::Member.2819" = type { %"class.blink::MemberBase.2820" }
%"class.blink::MemberBase.2820" = type { %"class.blink::Supplement.2821"* }
%"class.blink::Supplement.2821" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2822" }
%"class.blink::Member.2822" = type { %"class.blink::MemberBase.2823" }
%"class.blink::MemberBase.2823" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.2544, %"class.std::__1::unique_ptr.2681", %"class.std::__1::unique_ptr.2681", %"class.std::__1::unique_ptr.2708", %"class.std::__1::unique_ptr.2708", %"class.blink::Member.115", i32, [4 x i8], %"class.WTF::HashSet.2715", i32, i32 }
%class.scoped_refptr.2544 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.2545", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.2284", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.2491 }
%"class.WTF::RefCounted.2545" = type { %"class.base::RefCounted.2546" }
%"class.base::RefCounted.2546" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.2284" = type { %"class.absl::optional_internal::optional_data.2285" }
%"class.absl::optional_internal::optional_data.2285" = type { %"class.absl::optional_internal::optional_data_base.2286" }
%"class.absl::optional_internal::optional_data_base.2286" = type { %"class.absl::optional_internal::optional_data_dtor_base.2287" }
%"class.absl::optional_internal::optional_data_dtor_base.2287" = type { i8, %union.anon.2288 }
%union.anon.2288 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.2491 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.2681" = type { %"class.std::__1::__compressed_pair.2682" }
%"class.std::__1::__compressed_pair.2682" = type { %"struct.std::__1::__compressed_pair_elem.2683" }
%"struct.std::__1::__compressed_pair_elem.2683" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map.2684", %"class.std::__1::map.2695", %"class.std::__1::map.2704"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.2284" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.754" }
%"class.std::__1::__compressed_pair.754" = type { %"struct.std::__1::__compressed_pair_elem.755" }
%"struct.std::__1::__compressed_pair_elem.755" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.756 }
%union.anon.756 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map.2684" = type { %"class.std::__1::__tree.2685" }
%"class.std::__1::__tree.2685" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2686", %"class.std::__1::__compressed_pair.2690" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.2686" = type { %"struct.std::__1::__compressed_pair_elem.805" }
%"struct.std::__1::__compressed_pair_elem.805" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.2690" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"class.std::__1::map.2695" = type { %"class.std::__1::__tree.2696" }
%"class.std::__1::__tree.2696" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2697", %"class.std::__1::__compressed_pair.2701" }
%"class.std::__1::__compressed_pair.2697" = type { %"struct.std::__1::__compressed_pair_elem.805" }
%"class.std::__1::__compressed_pair.2701" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"class.std::__1::map.2704" = type opaque
%"class.std::__1::unique_ptr.2708" = type { %"class.std::__1::__compressed_pair.2709" }
%"class.std::__1::__compressed_pair.2709" = type { %"struct.std::__1::__compressed_pair_elem.2710" }
%"struct.std::__1::__compressed_pair_elem.2710" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type { %"struct.std::__1::array.2711", %"class.base::flat_map.2585" }
%"struct.std::__1::array.2711" = type { [14 x %"class.blink::PolicyValue"] }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.base::flat_map.2585" = type { %"class.base::internal::flat_tree.2586" }
%"class.base::internal::flat_tree.2586" = type { %"class.std::__1::vector.2587" }
%"class.std::__1::vector.2587" = type { %"class.std::__1::__vector_base.2588" }
%"class.std::__1::__vector_base.2588" = type { %"struct.std::__1::pair.2589"*, %"struct.std::__1::pair.2589"*, %"class.std::__1::__compressed_pair.2590" }
%"struct.std::__1::pair.2589" = type { i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.2590" = type { %"struct.std::__1::__compressed_pair_elem.2591" }
%"struct.std::__1::__compressed_pair_elem.2591" = type { %"struct.std::__1::pair.2589"* }
%"class.WTF::HashSet.2715" = type { %"class.WTF::HashTable.2716" }
%"class.WTF::HashTable.2716" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2719" = type { %"class.blink::MemberBase.2720" }
%"class.blink::MemberBase.2720" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.2721" = type { %"class.WTF::Vector.2724" }
%"class.WTF::Vector.2724" = type { %"class.WTF::VectorBuffer.2725" }
%"class.WTF::VectorBuffer.2725" = type { %"class.WTF::VectorBufferBase.2726" }
%"class.WTF::VectorBufferBase.2726" = type { %"class.blink::Member.2727"*, i32, i32 }
%"class.blink::Member.2727" = type opaque
%"class.blink::Member.2729" = type { %"class.blink::MemberBase.2730" }
%"class.blink::MemberBase.2730" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.2731" = type { %"class.blink::MemberBase.2732" }
%"class.blink::MemberBase.2732" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.2733", i32, i32 }
%"class.blink::HeapHashMap.2733" = type { %"class.WTF::HashMap.2736" }
%"class.WTF::HashMap.2736" = type { %"class.WTF::HashTable.2737" }
%"class.WTF::HashTable.2737" = type <{ %"struct.WTF::KeyValuePair.2739"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2739" = type opaque
%"class.std::__1::unique_ptr.2434" = type { %"class.std::__1::__compressed_pair.2435" }
%"class.std::__1::__compressed_pair.2435" = type { %"struct.std::__1::__compressed_pair_elem.2436" }
%"struct.std::__1::__compressed_pair_elem.2436" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr.2437", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr.2437" = type { %"class.std::__1::unique_ptr.2438" }
%"class.std::__1::unique_ptr.2438" = type { %"class.std::__1::__compressed_pair.2439" }
%"class.std::__1::__compressed_pair.2439" = type { %"struct.std::__1::__compressed_pair_elem.2440" }
%"struct.std::__1::__compressed_pair_elem.2440" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.2441" }
%"class.WTF::Vector.2441" = type { %"class.WTF::VectorBuffer.2442" }
%"class.WTF::VectorBuffer.2442" = type { %"class.WTF::VectorBufferBase.2443" }
%"class.WTF::VectorBufferBase.2443" = type { %"class.mojo::StructPtr.2444"*, i32, i32 }
%"class.mojo::StructPtr.2444" = type { %"class.std::__1::unique_ptr.2445" }
%"class.std::__1::unique_ptr.2445" = type { %"class.std::__1::__compressed_pair.2446" }
%"class.std::__1::__compressed_pair.2446" = type { %"struct.std::__1::__compressed_pair_elem.2447" }
%"struct.std::__1::__compressed_pair_elem.2447" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.2448", %"class.WTF::HashMap.2455", %"class.WTF::HashMap.2460", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr.2465", i8, %"class.WTF::Vector.1780", i32, %"class.mojo::StructPtr.2466", %"class.WTF::Vector.1780" }
%"class.mojo::StructPtr.2448" = type { %"class.std::__1::unique_ptr.2449" }
%"class.std::__1::unique_ptr.2449" = type { %"class.std::__1::__compressed_pair.2450" }
%"class.std::__1::__compressed_pair.2450" = type { %"struct.std::__1::__compressed_pair_elem.2451" }
%"struct.std::__1::__compressed_pair_elem.2451" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.2455" = type { %"class.WTF::HashTable.2456" }
%"class.WTF::HashTable.2456" = type <{ %"struct.WTF::KeyValuePair.2459"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2459" = type opaque
%"class.WTF::HashMap.2460" = type { %"class.WTF::HashTable.2461" }
%"class.WTF::HashTable.2461" = type <{ %"struct.WTF::KeyValuePair.2464"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2464" = type opaque
%"class.mojo::InlinedStructPtr.2465" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.2466" = type { %"class.std::__1::unique_ptr.2467" }
%"class.std::__1::unique_ptr.2467" = type { %"class.std::__1::__compressed_pair.2468" }
%"class.std::__1::__compressed_pair.2468" = type { %"struct.std::__1::__compressed_pair_elem.2469" }
%"struct.std::__1::__compressed_pair_elem.2469" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.1780", i8, i8, [6 x i8] }>
%"class.WTF::Vector.1780" = type { %"class.WTF::VectorBuffer.1781" }
%"class.WTF::VectorBuffer.1781" = type { %"class.WTF::VectorBufferBase.1782" }
%"class.WTF::VectorBufferBase.1782" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2481" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.865", i32 }>
%"class.std::__1::unique_ptr.865" = type { %"class.std::__1::__compressed_pair.866" }
%"class.std::__1::__compressed_pair.866" = type { %"struct.std::__1::__compressed_pair_elem.867" }
%"struct.std::__1::__compressed_pair_elem.867" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.868", %"class.base::OnceCallback.869", %"class.absl::optional.684", %"class.absl::optional.870", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.877", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.885", %"class.std::__1::map.896", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.905", i8, %class.scoped_refptr.753, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.906" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback.868" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.869" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.684" = type { %"class.absl::optional_internal::optional_data.685" }
%"class.absl::optional_internal::optional_data.685" = type { %"class.absl::optional_internal::optional_data_base.686" }
%"class.absl::optional_internal::optional_data_base.686" = type { %"class.absl::optional_internal::optional_data_dtor_base.687" }
%"class.absl::optional_internal::optional_data_dtor_base.687" = type { i8, %union.anon.688 }
%union.anon.688 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.870" = type { %"class.absl::optional_internal::optional_data.871" }
%"class.absl::optional_internal::optional_data.871" = type { %"class.absl::optional_internal::optional_data_base.872" }
%"class.absl::optional_internal::optional_data_base.872" = type { %"class.absl::optional_internal::optional_data_dtor_base.873" }
%"class.absl::optional_internal::optional_data_dtor_base.873" = type { i8, %union.anon.874 }
%union.anon.874 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.753, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.875" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.875" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.349 }
%class.scoped_refptr.349 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.350", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.350" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.351" }
%"struct.std::__1::atomic.351" = type { %"struct.std::__1::__atomic_base.352" }
%"struct.std::__1::__atomic_base.352" = type { %"struct.std::__1::__atomic_base.353" }
%"struct.std::__1::__atomic_base.353" = type { %"struct.std::__1::__cxx_atomic_impl.354" }
%"struct.std::__1::__cxx_atomic_impl.354" = type { %"struct.std::__1::__cxx_atomic_base_impl.355" }
%"struct.std::__1::__cxx_atomic_base_impl.355" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.828 }
%class.scoped_refptr.828 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.2656", [4 x i8], %"class.base::RepeatingCallback.868", %class.scoped_refptr.753, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.2656" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.876 }
%class.scoped_refptr.876 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.880", %class.scoped_refptr.881 }
%"class.base::RepeatingCallback.880" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.881 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.752", [4 x i8] }>
%"class.base::RefCountedThreadSafe.752" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.760", %"class.std::__1::unique_ptr.766", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.772" }
%"class.std::__1::unique_ptr.760" = type { %"class.std::__1::__compressed_pair.761" }
%"class.std::__1::__compressed_pair.761" = type { %"struct.std::__1::__compressed_pair_elem.762" }
%"struct.std::__1::__compressed_pair_elem.762" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.766" = type { %"class.std::__1::__compressed_pair.767" }
%"class.std::__1::__compressed_pair.767" = type { %"struct.std::__1::__compressed_pair_elem.768" }
%"struct.std::__1::__compressed_pair_elem.768" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.772" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.885" = type { %"class.std::__1::__tree.886" }
%"class.std::__1::__tree.886" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.887", %"class.std::__1::__compressed_pair.891" }
%"class.std::__1::__compressed_pair.887" = type { %"struct.std::__1::__compressed_pair_elem.805" }
%"class.std::__1::__compressed_pair.891" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"class.std::__1::map.896" = type { %"class.std::__1::__tree.897" }
%"class.std::__1::__tree.897" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.898", %"class.std::__1::__compressed_pair.902" }
%"class.std::__1::__compressed_pair.898" = type { %"struct.std::__1::__compressed_pair_elem.805" }
%"class.std::__1::__compressed_pair.902" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"class.base::OnceCallback.905" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.753 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.348" }>
%"class.base::RefCountedThreadSafe.348" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.906" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.2481" = type { %"class.std::__1::__compressed_pair.2482" }
%"class.std::__1::__compressed_pair.2482" = type { %"struct.std::__1::__compressed_pair_elem.2483" }
%"struct.std::__1::__compressed_pair_elem.2483" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.2740" = type { %"class.blink::MemberBase.2741" }
%"class.blink::MemberBase.2741" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.2742" = type { %"class.blink::MemberBase.2743" }
%"class.blink::MemberBase.2743" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.117" = type { %"class.blink::MemberBase.118" }
%"class.blink::MemberBase.118" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.119" = type { %"class.blink::MemberBase.120" }
%"class.blink::MemberBase.120" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.121" = type { %"class.blink::MemberBase.122" }
%"class.blink::MemberBase.122" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type { %"class.blink::Supplement", %"class.std::__1::unique_ptr" }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.125" }
%"class.blink::Member.125" = type { %"class.blink::MemberBase.126" }
%"class.blink::MemberBase.126" = type { %"class.blink::Page"* }
%"class.blink::Page" = type { %"class.blink::Supplementable.588", %"class.blink::SettingsDelegate", %"class.blink::PageScheduler::Delegate", %"class.blink::Member.614", %"class.blink::scheduler::WebAgentGroupScheduler"*, %"class.blink::Member.616", %"class.blink::Member.620", %"class.blink::Member.622", %"class.blink::Member.626", %"class.blink::Member.628", %"class.blink::Member.630", %"class.blink::Member.632", %"class.blink::Member.634", %"class.blink::HeapObserverSet.636", %"class.blink::Member.644", %"class.blink::Member.646", %"class.blink::Member.648", %"class.blink::Member.650", %"class.blink::Member.652", %"class.blink::Member.654", %"class.blink::Member.656", %"class.blink::Member.658", %"class.blink::Member.660", %"class.blink::Member.662", %"class.blink::Member.664", %"class.blink::InspectorIssueStorage", %"class.blink::Deprecation", %"struct.blink::WebWindowFeatures", i8, i8, i8, float, %"class.mojo::StructPtr", i8, i8, i8, i8, i32, %"class.blink::HeapHashSet.695", %"class.blink::Member.125", %"class.blink::Member.125", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.std::__1::unique_ptr.703", %"class.std::__1::unique_ptr.709", i32, i32, i8, %"class.blink::mojom::blink::TextAutosizerPageInfo", %"class.blink::WebScopedVirtualTimePauser" }
%"class.blink::Supplementable.588" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.589" }
%"class.blink::HeapHashMap.589" = type { %"class.WTF::HashMap.592" }
%"class.WTF::HashMap.592" = type { %"class.WTF::HashTable.593" }
%"class.WTF::HashTable.593" = type <{ %"struct.WTF::KeyValuePair.595"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.595" = type opaque
%"class.blink::SettingsDelegate" = type { i32 (...)**, %"class.std::__1::unique_ptr.596" }
%"class.std::__1::unique_ptr.596" = type { %"class.std::__1::__compressed_pair.597" }
%"class.std::__1::__compressed_pair.597" = type { %"struct.std::__1::__compressed_pair_elem.598" }
%"struct.std::__1::__compressed_pair_elem.598" = type { %"class.blink::Settings"* }
%"class.blink::Settings" = type <{ %"class.blink::SettingsDelegate"*, %"class.blink::GenericFontFamilySettings", double, i32, [4 x i8], double, i32, i32, i32, i32, i32, [4 x i8], %"class.WTF::String", %"class.WTF::String", double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.WTF::String", i32, i32, i32, [4 x i8], %"class.WTF::String", i32, i32, double, i32, i32, i32, i32, i32, %"class.blink::IntSize", [4 x i8], %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], double, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, i32, i32, [4 x i8], %"class.WTF::String", [14 x i8], [2 x i8] }>
%"class.blink::GenericFontFamilySettings" = type { %"class.WTF::HashMap.599", %"class.WTF::HashMap.599", %"class.WTF::HashMap.599", %"class.WTF::HashMap.599", %"class.WTF::HashMap.599", %"class.WTF::HashMap.599", %"class.WTF::HashMap.599", %"class.std::__1::unique_ptr.604" }
%"class.WTF::HashMap.599" = type { %"class.WTF::HashTable.600" }
%"class.WTF::HashTable.600" = type <{ %"struct.WTF::KeyValuePair.603"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.603" = type opaque
%"class.std::__1::unique_ptr.604" = type { %"class.std::__1::__compressed_pair.605" }
%"class.std::__1::__compressed_pair.605" = type { %"struct.std::__1::__compressed_pair_elem.606" }
%"struct.std::__1::__compressed_pair_elem.606" = type { %"class.WTF::Vector.607"* }
%"class.WTF::Vector.607" = type opaque
%"class.blink::IntSize" = type { i32, i32 }
%"class.blink::PageScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Member.614" = type { %"class.blink::MemberBase.615" }
%"class.blink::MemberBase.615" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.125", %"class.blink::Member.717", %"class.blink::Member.719", i8, i32, i8, i32, %"class.blink::Member.918", %"class.blink::Member.742", %"class.blink::FrameLifecycle", %"class.blink::Member.614", %"class.blink::Member.614", %"class.blink::Member.614", %"class.blink::Member.614", %"class.blink::Member.614", %"class.blink::Member.614", %"class.blink::Member.922", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.932", i8, %"class.base::UnguessableToken", %"class.absl::optional.934", %"class.absl::optional.939", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.614", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.717" = type { %"class.blink::MemberBase.718" }
%"class.blink::MemberBase.718" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.719" = type { %"class.blink::MemberBase.720" }
%"class.blink::MemberBase.720" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.614", %"class.blink::Member.742", %"class.blink::Member.744", %"class.blink::Member.746", i8, %"class.WTF::Vector.748" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.735" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.723" }
%"class.blink::HeapVector.723" = type { %"class.WTF::Vector.726" }
%"class.WTF::Vector.726" = type { %"class.WTF::VectorBuffer.727" }
%"class.WTF::VectorBuffer.727" = type { %"class.WTF::VectorBufferBase.728", [32 x i8] }
%"class.WTF::VectorBufferBase.728" = type { %"struct.std::__1::pair.729"*, i32, i32 }
%"struct.std::__1::pair.729" = type { %"class.WTF::AtomicString", %"class.blink::Member.730" }
%"class.blink::Member.730" = type { %"class.blink::MemberBase.731" }
%"class.blink::MemberBase.731" = type { %"class.blink::HeapVector.732"* }
%"class.blink::HeapVector.732" = type opaque
%"class.std::__1::unique_ptr.735" = type { %"class.std::__1::__compressed_pair.736" }
%"class.std::__1::__compressed_pair.736" = type { %"struct.std::__1::__compressed_pair_elem.737" }
%"struct.std::__1::__compressed_pair_elem.737" = type { %"class.WTF::Vector.738"* }
%"class.WTF::Vector.738" = type opaque
%"class.blink::Member.744" = type { %"class.blink::MemberBase.745" }
%"class.blink::MemberBase.745" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.746" = type { %"class.blink::MemberBase.747" }
%"class.blink::MemberBase.747" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.748" = type { %"class.WTF::VectorBuffer.749" }
%"class.WTF::VectorBuffer.749" = type { %"class.WTF::VectorBufferBase.750" }
%"class.WTF::VectorBufferBase.750" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.910" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.751, %"class.std::__1::unique_ptr.865", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.753, i32 }>
%class.scoped_refptr.751 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.753, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.831", %"class.absl::optional.836", %"class.absl::optional.792", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.856", i8, [7 x i8], %class.scoped_refptr.753, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.752" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.753, %"class.std::__1::unique_ptr.773", %"class.absl::optional.782", %"struct.std::__1::atomic.341", i8, i8, i8, i8, i32, i32, %"class.absl::optional.792", %"class.std::__1::unique_ptr.797", i8, i64, %class.scoped_refptr.827, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.829", %"class.base::WeakPtrFactory.830" }
%"class.std::__1::unique_ptr.773" = type { %"class.std::__1::__compressed_pair.774" }
%"class.std::__1::__compressed_pair.774" = type { %"struct.std::__1::__compressed_pair_elem.775" }
%"struct.std::__1::__compressed_pair_elem.775" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.753, i8, %"class.mojo::ScopedHandleBase.776", %class.scoped_refptr.777, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.778" }
%"class.mojo::ScopedHandleBase.776" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.777 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.778" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.782" = type { %"class.absl::optional_internal::optional_data.783" }
%"class.absl::optional_internal::optional_data.783" = type { %"class.absl::optional_internal::optional_data_base.784" }
%"class.absl::optional_internal::optional_data_base.784" = type { %"class.absl::optional_internal::optional_data_dtor_base.785" }
%"class.absl::optional_internal::optional_data_dtor_base.785" = type { i8, %union.anon.786 }
%union.anon.786 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.787", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.787" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.797" = type { %"class.std::__1::__compressed_pair.798" }
%"class.std::__1::__compressed_pair.798" = type { %"struct.std::__1::__compressed_pair_elem.799" }
%"struct.std::__1::__compressed_pair_elem.799" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.800", i8, i64, %class.scoped_refptr.801, %class.scoped_refptr.823 }
%"class.base::RepeatingCallback.800" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.801 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.802", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.812", i8, [7 x i8] }>
%"class.base::RefCounted.802" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.803 }
%class.scoped_refptr.803 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.804", %"class.std::__1::__compressed_pair.809" }
%"class.std::__1::__compressed_pair.804" = type { %"struct.std::__1::__compressed_pair_elem.805" }
%"class.std::__1::__compressed_pair.809" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"class.std::__1::map.812" = type { %"class.std::__1::__tree.813" }
%"class.std::__1::__tree.813" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.814", %"class.std::__1::__compressed_pair.818" }
%"class.std::__1::__compressed_pair.814" = type { %"struct.std::__1::__compressed_pair_elem.805" }
%"class.std::__1::__compressed_pair.818" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%class.scoped_refptr.823 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.827 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr.829" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.702 }
%class.scoped_refptr.702 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.830" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.831" = type { %"class.absl::optional_internal::optional_data.832" }
%"class.absl::optional_internal::optional_data.832" = type { %"class.absl::optional_internal::optional_data_base.833" }
%"class.absl::optional_internal::optional_data_base.833" = type { %"class.absl::optional_internal::optional_data_dtor_base.834" }
%"class.absl::optional_internal::optional_data_dtor_base.834" = type { i8, %union.anon.835 }
%union.anon.835 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.836" = type { %"class.absl::optional_internal::optional_data.837" }
%"class.absl::optional_internal::optional_data.837" = type { %"class.absl::optional_internal::optional_data_base.838" }
%"class.absl::optional_internal::optional_data_base.838" = type { %"class.absl::optional_internal::optional_data_dtor_base.839" }
%"class.absl::optional_internal::optional_data_dtor_base.839" = type { i8, [7 x i8], %union.anon.840 }
%union.anon.840 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.792" = type { %"class.absl::optional_internal::optional_data.793" }
%"class.absl::optional_internal::optional_data.793" = type { %"class.absl::optional_internal::optional_data_base.794" }
%"class.absl::optional_internal::optional_data_base.794" = type { %"class.absl::optional_internal::optional_data_dtor_base.795" }
%"class.absl::optional_internal::optional_data_dtor_base.795" = type { i8, %union.anon.796 }
%union.anon.796 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.841 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.841 = type { %"class.std::__1::map.844" }
%"class.std::__1::map.844" = type { %"class.std::__1::__tree.845" }
%"class.std::__1::__tree.845" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.846", %"class.std::__1::__compressed_pair.850" }
%"class.std::__1::__compressed_pair.846" = type { %"struct.std::__1::__compressed_pair_elem.805" }
%"class.std::__1::__compressed_pair.850" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.855"*, i64 }
%"class.std::__1::unique_ptr.855" = type opaque
%"class.std::__1::map.856" = type { %"class.std::__1::__tree.857" }
%"class.std::__1::__tree.857" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.858", %"class.std::__1::__compressed_pair.862" }
%"class.std::__1::__compressed_pair.858" = type { %"struct.std::__1::__compressed_pair_elem.805" }
%"class.std::__1::__compressed_pair.862" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.910" = type { %"class.std::__1::__compressed_pair.911" }
%"class.std::__1::__compressed_pair.911" = type { %"struct.std::__1::__compressed_pair_elem.912" }
%"struct.std::__1::__compressed_pair_elem.912" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.918" = type { %"class.blink::MemberBase.919" }
%"class.blink::MemberBase.919" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type { i32 (...)** }
%"class.blink::Member.742" = type { %"class.blink::MemberBase.743" }
%"class.blink::MemberBase.743" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.922" = type { %"class.blink::MemberBase.923" }
%"class.blink::MemberBase.923" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.951", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.959", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.973", %"class.blink::FrameLoader", %"class.blink::Member.994", %"class.blink::Member.21", %"class.blink::Member.996", %"class.blink::Member.1030", %"class.blink::Member.1032", %"class.blink::Member.1034", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.1036", %class.scoped_refptr.1256, %"class.blink::Member.1257", %"class.blink::Member.1259", %"class.blink::Member.1261", %"class.blink::Member.1263", %"class.blink::Member.1265", %"class.blink::Member.1269", %"class.blink::Member.1271", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.1275", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.1296", %"class.std::__1::unique_ptr.1297", %"class.absl::optional.939", i32, [4 x i8], %"class.std::__1::unique_ptr.1303", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.1311", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.1316", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.1321", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.1324", %"class.blink::Member.1326", %"class.blink::Member.1328", %"class.blink::Member.1330", %"class.mojo::StructPtr.1333", %"class.blink::Member.1341", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.1343", i8, [7 x i8] }>
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.951" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.952" }
%"class.blink::HeapHashMap.952" = type { %"class.WTF::HashMap.955" }
%"class.WTF::HashMap.955" = type { %"class.WTF::HashTable.956" }
%"class.WTF::HashTable.956" = type <{ %"struct.WTF::KeyValuePair.958"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.958" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.959" = type { %"class.std::__1::__compressed_pair.960" }
%"class.std::__1::__compressed_pair.960" = type { %"struct.std::__1::__compressed_pair_elem.961" }
%"struct.std::__1::__compressed_pair_elem.961" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.962", %"class.base::WeakPtrFactory.967" }
%"class.WTF::HashMap.962" = type { %"class.WTF::HashTable.963" }
%"class.WTF::HashTable.963" = type <{ %"struct.WTF::KeyValuePair.966"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.966" = type opaque
%"class.base::WeakPtrFactory.967" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.971" }
%"class.blink::Member.971" = type { %"class.blink::MemberBase.972" }
%"class.blink::MemberBase.972" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.2832" }
%"class.blink::WeakMember.2832" = type { %"class.blink::MemberBase.2833" }
%"class.blink::MemberBase.2833" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback.868", %"class.base::RepeatingCallback.2834", i64, %"class.std::__1::map.2835", i8*, i64, %"class.base::WeakPtrFactory.2844" }
%"class.base::RepeatingCallback.2834" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.2835" = type { %"class.std::__1::__tree.2836" }
%"class.std::__1::__tree.2836" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2837", %"class.std::__1::__compressed_pair.2841" }
%"class.std::__1::__compressed_pair.2837" = type { %"struct.std::__1::__compressed_pair_elem.805" }
%"class.std::__1::__compressed_pair.2841" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"class.base::WeakPtrFactory.2844" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.973" = type { %"class.WTF::HashSet.976" }
%"class.WTF::HashSet.976" = type { %"class.WTF::HashTable.977" }
%"class.WTF::HashTable.977" = type <{ %"class.blink::WeakMember.979"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.979" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.922", %"class.blink::Member.980", %"class.blink::Member.982", %"class.std::__1::unique_ptr.984", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.990" }
%"class.blink::Member.980" = type { %"class.blink::MemberBase.981" }
%"class.blink::MemberBase.981" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.982" = type { %"class.blink::MemberBase.983" }
%"class.blink::MemberBase.983" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type { %"class.blink::UseCounter", %"class.blink::WebNavigationBodyLoader::Client", %"class.WTF::Vector.2245", %"class.blink::Member.2250", %"class.std::__1::unique_ptr.2252", %"class.std::__1::unique_ptr.2434", %"class.blink::KURL", %"class.WTF::AtomicString", %"struct.blink::Referrer", %class.scoped_refptr.2490, %"class.WTF::AtomicString", i32, %"class.absl::optional.2332", %class.scoped_refptr.2491, %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.2297", i8, %"class.absl::optional.2304", [4 x i8], %"struct.blink::FramePolicy", %"class.blink::Member.922", %"class.blink::Member.2492", %"class.blink::Member.119", %"class.blink::Member.2568", %"class.blink::KURL", %"struct.blink::Referrer", %"class.blink::ResourceResponse", i32, i8, i8, i8, i8, %"class.mojo::Remote.2570", %class.scoped_refptr.2544, i32, i32, %"class.blink::DocumentLoadTiming", %"class.base::TimeTicks", %"class.blink::Member.2583", %"class.std::__1::unique_ptr.2309", %"struct.blink::DocumentPolicy::ParsedDocumentPolicy", i8, %"class.WTF::Vector.2595", %"class.blink::ClientHintsPreferences", %"struct.blink::DocumentLoader::InitialScrollState", i32, i32, i8, i8, %class.scoped_refptr.2600, %"class.base::UnguessableToken", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, %class.scoped_refptr.2614, i8, %"class.blink::WebScopedVirtualTimePauser", %"class.blink::Member.2615", %"class.blink::Member.2630", %"class.blink::KURL", %"class.blink::KURL", i64, %"class.blink::UseCounterImpl", %"class.blink::Dactyloscoper", %"class.base::TickClock"*, %"class.WTF::Vector.2643", %"class.WTF::Vector.1780", i8, i8, i8, %"class.blink::WebVector.2423", %"class.blink::WebVector.2423", %"class.mojo::Remote.2648" }
%"class.blink::WebNavigationBodyLoader::Client" = type { i32 (...)** }
%"class.WTF::Vector.2245" = type { %"class.WTF::VectorBuffer.2246" }
%"class.WTF::VectorBuffer.2246" = type { %"class.WTF::VectorBufferBase.2247" }
%"class.WTF::VectorBufferBase.2247" = type { %"class.blink::KURL"*, i32, i32 }
%"class.blink::Member.2250" = type { %"class.blink::MemberBase.2251" }
%"class.blink::MemberBase.2251" = type { %"class.blink::MHTMLArchive"* }
%"class.blink::MHTMLArchive" = type opaque
%"class.std::__1::unique_ptr.2252" = type { %"class.std::__1::__compressed_pair.2253" }
%"class.std::__1::__compressed_pair.2253" = type { %"struct.std::__1::__compressed_pair_elem.2254" }
%"struct.std::__1::__compressed_pair_elem.2254" = type { %"struct.blink::WebNavigationParams"* }
%"struct.blink::WebNavigationParams" = type { %"class.blink::WebURL", %"class.blink::WebString", %"class.blink::WebString", i32, %"class.blink::WebHTTPBody", %"class.blink::WebString", i32, %"class.blink::WebSecurityOrigin", %"class.blink::WebURL", %"class.blink::WebURL", i32, %"class.blink::WebVector.2256", %"class.blink::WebURLResponse", %"class.std::__1::unique_ptr.2297", i8, i32, %"class.blink::WebHistoryItem", i8, %"class.absl::optional.2304", %"class.blink::WebSecurityOrigin", i32, %"class.base::UnguessableToken", %"struct.blink::WebNavigationTimings", i8, i8, i8, i8, i8, i8, i8, i32, %"class.std::__1::unique_ptr.2309", %"class.base::UnguessableToken", %"class.blink::WebVector.2315", %"class.base::TickClock"*, %"class.blink::WebVector.2324", %"class.absl::optional.2332", %"class.blink::WebURL", %"class.blink::WebURL", i64, %"class.absl::optional.2337", %"class.blink::WebVector", i8, %"class.blink::WebVector.2356", i8, %"class.std::__1::unique_ptr.2364", %"class.blink::WebVector.2423", %"class.blink::WebVector.2423" }
%"class.blink::WebHTTPBody" = type { %"class.blink::WebPrivatePtr.2255" }
%"class.blink::WebPrivatePtr.2255" = type { i8* }
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.blink::WebVector.2256" = type { %"class.std::__1::vector.2257" }
%"class.std::__1::vector.2257" = type { %"class.std::__1::__vector_base.2258" }
%"class.std::__1::__vector_base.2258" = type { %"struct.blink::WebNavigationParams::RedirectInfo"*, %"struct.blink::WebNavigationParams::RedirectInfo"*, %"class.std::__1::__compressed_pair.2292" }
%"struct.blink::WebNavigationParams::RedirectInfo" = type { %"class.blink::WebURL", %"class.blink::WebString", %"class.blink::WebString", i32, %"class.blink::WebURLResponse" }
%"class.std::__1::__compressed_pair.2292" = type { %"struct.std::__1::__compressed_pair_elem.2293" }
%"struct.std::__1::__compressed_pair_elem.2293" = type { %"struct.blink::WebNavigationParams::RedirectInfo"* }
%"class.blink::WebURLResponse" = type { %"class.std::__1::unique_ptr.2259", %"class.blink::ResourceResponse"* }
%"class.std::__1::unique_ptr.2259" = type { %"class.std::__1::__compressed_pair.2260" }
%"class.std::__1::__compressed_pair.2260" = type { %"struct.std::__1::__compressed_pair_elem.2261" }
%"struct.std::__1::__compressed_pair_elem.2261" = type { %"class.blink::ResourceResponse"* }
%"class.blink::WebHistoryItem" = type { %"class.blink::WebPrivatePtr.2303", %"class.blink::WebString" }
%"class.blink::WebPrivatePtr.2303" = type { i8* }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"struct.blink::WebNavigationTimings" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.blink::WebVector.2315" = type { %"class.std::__1::vector.2316" }
%"class.std::__1::vector.2316" = type { %"class.std::__1::__vector_base.2317" }
%"class.std::__1::__vector_base.2317" = type { %"class.std::__1::unique_ptr.2318"*, %"class.std::__1::unique_ptr.2318"*, %"class.std::__1::__compressed_pair.2319" }
%"class.std::__1::unique_ptr.2318" = type opaque
%"class.std::__1::__compressed_pair.2319" = type { %"struct.std::__1::__compressed_pair_elem.2320" }
%"struct.std::__1::__compressed_pair_elem.2320" = type { %"class.std::__1::unique_ptr.2318"* }
%"class.blink::WebVector.2324" = type { %"class.std::__1::vector.2325" }
%"class.std::__1::vector.2325" = type { %"class.std::__1::__vector_base.2326" }
%"class.std::__1::__vector_base.2326" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2327" }
%"class.std::__1::__compressed_pair.2327" = type { %"struct.std::__1::__compressed_pair_elem.2328" }
%"struct.std::__1::__compressed_pair_elem.2328" = type { i32* }
%"class.blink::WebURL" = type <{ %"class.blink::WebString", %"struct.url::Parsed", i8, [7 x i8] }>
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.absl::optional.2337" = type { %"class.absl::optional_internal::optional_data.2338" }
%"class.absl::optional_internal::optional_data.2338" = type { %"class.absl::optional_internal::optional_data_base.2339" }
%"class.absl::optional_internal::optional_data_base.2339" = type { %"class.absl::optional_internal::optional_data_dtor_base.2340" }
%"class.absl::optional_internal::optional_data_dtor_base.2340" = type { i8, [7 x i8], %union.anon.2341 }
%union.anon.2341 = type { %"struct.blink::FramePolicy" }
%"class.blink::WebVector" = type { %"class.std::__1::vector.1280" }
%"class.std::__1::vector.1280" = type { %"class.std::__1::__vector_base.1281" }
%"class.std::__1::__vector_base.1281" = type { %"class.blink::WebString"*, %"class.blink::WebString"*, %"class.std::__1::__compressed_pair.1282" }
%"class.std::__1::__compressed_pair.1282" = type { %"struct.std::__1::__compressed_pair_elem.1283" }
%"struct.std::__1::__compressed_pair_elem.1283" = type { %"class.blink::WebString"* }
%"class.blink::WebVector.2356" = type { %"class.std::__1::vector.2357" }
%"class.std::__1::vector.2357" = type { %"class.std::__1::__vector_base.2358" }
%"class.std::__1::__vector_base.2358" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2359" }
%"class.std::__1::__compressed_pair.2359" = type { %"struct.std::__1::__compressed_pair_elem.2360" }
%"struct.std::__1::__compressed_pair_elem.2360" = type { i32* }
%"class.std::__1::unique_ptr.2364" = type { %"class.std::__1::__compressed_pair.2365" }
%"class.std::__1::__compressed_pair.2365" = type { %"struct.std::__1::__compressed_pair_elem.2366" }
%"struct.std::__1::__compressed_pair_elem.2366" = type { %"struct.blink::WebPolicyContainer"* }
%"struct.blink::WebPolicyContainer" = type { %"struct.blink::WebPolicyContainerPolicies", %"class.blink::CrossVariantMojoAssociatedRemote" }
%"struct.blink::WebPolicyContainerPolicies" = type { i32, i32, %"class.blink::WebVector.2367" }
%"class.blink::WebVector.2367" = type { %"class.std::__1::vector.2368" }
%"class.std::__1::vector.2368" = type { %"class.std::__1::__vector_base.2369" }
%"class.std::__1::__vector_base.2369" = type { %"struct.blink::WebContentSecurityPolicy"*, %"struct.blink::WebContentSecurityPolicy"*, %"class.std::__1::__compressed_pair.2415" }
%"struct.blink::WebContentSecurityPolicy" = type { %"struct.blink::WebCSPSource", %"class.blink::WebVector.2370", %"class.blink::WebVector.2378", i8, i8, i8, i32, %"struct.blink::WebContentSecurityPolicyHeader", i8, %"class.blink::WebVector", i32, [4 x i8], %"class.absl::optional.2410", %"class.blink::WebVector" }
%"struct.blink::WebCSPSource" = type <{ %"class.blink::WebString", %"class.blink::WebString", i32, [4 x i8], %"class.blink::WebString", i8, i8, [6 x i8] }>
%"class.blink::WebVector.2370" = type { %"class.std::__1::vector.2371" }
%"class.std::__1::vector.2371" = type { %"class.std::__1::__vector_base.2372" }
%"class.std::__1::__vector_base.2372" = type { %"struct.blink::WebContentSecurityPolicyRawDirective"*, %"struct.blink::WebContentSecurityPolicyRawDirective"*, %"class.std::__1::__compressed_pair.2373" }
%"struct.blink::WebContentSecurityPolicyRawDirective" = type { i32, %"class.blink::WebString" }
%"class.std::__1::__compressed_pair.2373" = type { %"struct.std::__1::__compressed_pair_elem.2374" }
%"struct.std::__1::__compressed_pair_elem.2374" = type { %"struct.blink::WebContentSecurityPolicyRawDirective"* }
%"class.blink::WebVector.2378" = type { %"class.std::__1::vector.2379" }
%"class.std::__1::vector.2379" = type { %"class.std::__1::__vector_base.2380" }
%"class.std::__1::__vector_base.2380" = type { %"struct.blink::WebContentSecurityPolicyDirective"*, %"struct.blink::WebContentSecurityPolicyDirective"*, %"class.std::__1::__compressed_pair.2405" }
%"struct.blink::WebContentSecurityPolicyDirective" = type { i32, [4 x i8], %"struct.blink::WebCSPSourceList" }
%"struct.blink::WebCSPSourceList" = type <{ %"class.blink::WebVector.2381", %"class.blink::WebVector", %"class.blink::WebVector.2389", i8, i8, i8, i8, i8, i8, i8, i8, i8, [7 x i8] }>
%"class.blink::WebVector.2381" = type { %"class.std::__1::vector.2382" }
%"class.std::__1::vector.2382" = type { %"class.std::__1::__vector_base.2383" }
%"class.std::__1::__vector_base.2383" = type { %"struct.blink::WebCSPSource"*, %"struct.blink::WebCSPSource"*, %"class.std::__1::__compressed_pair.2384" }
%"class.std::__1::__compressed_pair.2384" = type { %"struct.std::__1::__compressed_pair_elem.2385" }
%"struct.std::__1::__compressed_pair_elem.2385" = type { %"struct.blink::WebCSPSource"* }
%"class.blink::WebVector.2389" = type { %"class.std::__1::vector.2390" }
%"class.std::__1::vector.2390" = type { %"class.std::__1::__vector_base.2391" }
%"class.std::__1::__vector_base.2391" = type { %"struct.blink::WebCSPHashSource"*, %"struct.blink::WebCSPHashSource"*, %"class.std::__1::__compressed_pair.2400" }
%"struct.blink::WebCSPHashSource" = type { i32, %"class.blink::WebVector.2392" }
%"class.blink::WebVector.2392" = type { %"class.std::__1::vector.2393" }
%"class.std::__1::vector.2393" = type { %"class.std::__1::__vector_base.2394" }
%"class.std::__1::__vector_base.2394" = type { i8*, i8*, %"class.std::__1::__compressed_pair.2395" }
%"class.std::__1::__compressed_pair.2395" = type { %"struct.std::__1::__compressed_pair_elem.2396" }
%"struct.std::__1::__compressed_pair_elem.2396" = type { i8* }
%"class.std::__1::__compressed_pair.2400" = type { %"struct.std::__1::__compressed_pair_elem.2401" }
%"struct.std::__1::__compressed_pair_elem.2401" = type { %"struct.blink::WebCSPHashSource"* }
%"class.std::__1::__compressed_pair.2405" = type { %"struct.std::__1::__compressed_pair_elem.2406" }
%"struct.std::__1::__compressed_pair_elem.2406" = type { %"struct.blink::WebContentSecurityPolicyDirective"* }
%"struct.blink::WebContentSecurityPolicyHeader" = type { %"class.blink::WebString", i32, i32 }
%"class.absl::optional.2410" = type { %"class.absl::optional_internal::optional_data.2411" }
%"class.absl::optional_internal::optional_data.2411" = type { %"class.absl::optional_internal::optional_data_base.2412" }
%"class.absl::optional_internal::optional_data_base.2412" = type { %"class.absl::optional_internal::optional_data_dtor_base.2413" }
%"class.absl::optional_internal::optional_data_dtor_base.2413" = type { i8, [7 x i8], %union.anon.2414 }
%union.anon.2414 = type { %"struct.blink::WebCSPTrustedTypes" }
%"struct.blink::WebCSPTrustedTypes" = type <{ %"class.blink::WebVector", i8, i8, [6 x i8] }>
%"class.std::__1::__compressed_pair.2415" = type { %"struct.std::__1::__compressed_pair_elem.2416" }
%"struct.std::__1::__compressed_pair_elem.2416" = type { %"struct.blink::WebContentSecurityPolicy"* }
%"class.blink::CrossVariantMojoAssociatedRemote" = type { i32, %"class.mojo::ScopedInterfaceEndpointHandle" }
%class.scoped_refptr.2490 = type { %"class.blink::EncodedFormData"* }
%"class.blink::EncodedFormData" = type opaque
%"class.absl::optional.2332" = type { %"class.absl::optional_internal::optional_data.2333" }
%"class.absl::optional_internal::optional_data.2333" = type { %"class.absl::optional_internal::optional_data_base.2334" }
%"class.absl::optional_internal::optional_data_base.2334" = type { %"class.absl::optional_internal::optional_data_dtor_base.2335" }
%"class.absl::optional_internal::optional_data_dtor_base.2335" = type { i8, %union.anon.2336 }
%union.anon.2336 = type { %"struct.blink::WebOriginPolicy" }
%"struct.blink::WebOriginPolicy" = type { %"class.blink::WebVector", %"class.blink::WebString", %"class.blink::WebVector", %"class.blink::WebVector" }
%"class.std::__1::unique_ptr.2297" = type { %"class.std::__1::__compressed_pair.2298" }
%"class.std::__1::__compressed_pair.2298" = type { %"struct.std::__1::__compressed_pair_elem.2299" }
%"struct.std::__1::__compressed_pair_elem.2299" = type { %"class.blink::WebNavigationBodyLoader"* }
%"class.blink::WebNavigationBodyLoader" = type { i32 (...)** }
%"class.absl::optional.2304" = type { %"class.absl::optional_internal::optional_data.2305" }
%"class.absl::optional_internal::optional_data.2305" = type { %"class.absl::optional_internal::optional_data_base.2306" }
%"class.absl::optional_internal::optional_data_base.2306" = type { %"class.absl::optional_internal::optional_data_dtor_base.2307" }
%"class.absl::optional_internal::optional_data_dtor_base.2307" = type { i8, %union.anon.2308 }
%union.anon.2308 = type { i32 }
%"struct.blink::FramePolicy" = type <{ i32, [4 x i8], %"class.std::__1::vector.2342", %"class.base::flat_map", i8, [7 x i8] }>
%"class.std::__1::vector.2342" = type { %"class.std::__1::__vector_base.2343" }
%"class.std::__1::__vector_base.2343" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"class.std::__1::__compressed_pair.2351" }
%"struct.blink::ParsedPermissionsPolicyDeclaration" = type <{ i32, [4 x i8], %"class.std::__1::vector.2344", i8, i8, [6 x i8] }>
%"class.std::__1::vector.2344" = type { %"class.std::__1::__vector_base.2345" }
%"class.std::__1::__vector_base.2345" = type { %"class.url::Origin"*, %"class.url::Origin"*, %"class.std::__1::__compressed_pair.2346" }
%"class.std::__1::__compressed_pair.2346" = type { %"struct.std::__1::__compressed_pair_elem.2347" }
%"struct.std::__1::__compressed_pair_elem.2347" = type { %"class.url::Origin"* }
%"class.std::__1::__compressed_pair.2351" = type { %"struct.std::__1::__compressed_pair_elem.2352" }
%"struct.std::__1::__compressed_pair_elem.2352" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"* }
%"class.blink::Member.2492" = type { %"class.blink::MemberBase.2493" }
%"class.blink::MemberBase.2493" = type { %"class.blink::HistoryItem"* }
%"class.blink::HistoryItem" = type { %"class.WTF::String", %"struct.blink::Referrer", %"class.WTF::Vector.1780", %"class.blink::Member.2496", %"class.absl::optional.2498", i64, i64, i32, %class.scoped_refptr.2503, %class.scoped_refptr.2490, %"class.WTF::AtomicString", %"class.WTF::String", %"class.WTF::String", %class.scoped_refptr.2503 }
%"class.blink::Member.2496" = type { %"class.blink::MemberBase.2497" }
%"class.blink::MemberBase.2497" = type { %"class.blink::DocumentState"* }
%"class.blink::DocumentState" = type opaque
%"class.absl::optional.2498" = type { %"class.absl::optional_internal::optional_data.2499" }
%"class.absl::optional_internal::optional_data.2499" = type { %"class.absl::optional_internal::optional_data_base.2500" }
%"class.absl::optional_internal::optional_data_base.2500" = type { %"class.absl::optional_internal::optional_data_dtor_base.2501" }
%"class.absl::optional_internal::optional_data_dtor_base.2501" = type { i8, %union.anon.2502 }
%union.anon.2502 = type { %"class.blink::HistoryItem::ViewState" }
%"class.blink::HistoryItem::ViewState" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", float, %"struct.blink::ScrollAnchorData" }
%"class.blink::FloatSize" = type { float, float }
%"struct.blink::ScrollAnchorData" = type { %"class.blink::WebString", %"class.gfx::PointF", i64 }
%"class.gfx::PointF" = type { float, float }
%class.scoped_refptr.2503 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted.2504", [4 x i8], %"class.std::__1::unique_ptr.2506", i64, %"class.WTF::Vector.2509", %"class.WTF::Vector.2514", %"class.WTF::Vector.2520", %"class.WTF::Vector.2538", %class.scoped_refptr.2544, %"class.WTF::HashMap.2547", %"class.WTF::Vector.2552", %"class.WTF::Vector.2509", %"class.WTF::Vector.2558", %"class.WTF::HashMap.2563", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted.2504" = type { %"class.base::RefCountedThreadSafe.2505" }
%"class.base::RefCountedThreadSafe.2505" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.2506" = type { %"class.std::__1::__compressed_pair.2507" }
%"class.std::__1::__compressed_pair.2507" = type { %"struct.std::__1::__compressed_pair_elem.2396" }
%"class.WTF::Vector.2514" = type { %"class.WTF::VectorBuffer.2515" }
%"class.WTF::VectorBuffer.2515" = type { %"class.WTF::VectorBufferBase.2516", [8 x i8] }
%"class.WTF::VectorBufferBase.2516" = type { %class.scoped_refptr.2517*, i32, i32 }
%class.scoped_refptr.2517 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.2520" = type { %"class.WTF::VectorBuffer.2521" }
%"class.WTF::VectorBuffer.2521" = type { %"class.WTF::VectorBufferBase.2522" }
%"class.WTF::VectorBufferBase.2522" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.2524", %"class.std::__1::unique_ptr.2530" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.2523 }
%class.scoped_refptr.2523 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.2524" = type { %"class.std::__1::__compressed_pair.2525" }
%"class.std::__1::__compressed_pair.2525" = type { %"struct.std::__1::__compressed_pair_elem.2526" }
%"struct.std::__1::__compressed_pair_elem.2526" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2530" = type { %"class.std::__1::__compressed_pair.2531" }
%"class.std::__1::__compressed_pair.2531" = type { %"struct.std::__1::__compressed_pair_elem.2532" }
%"struct.std::__1::__compressed_pair_elem.2532" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.2538" = type { %"class.WTF::VectorBuffer.2539" }
%"class.WTF::VectorBuffer.2539" = type { %"class.WTF::VectorBufferBase.2540" }
%"class.WTF::VectorBufferBase.2540" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.2541", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.2541" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.2547" = type { %"class.WTF::HashTable.2548" }
%"class.WTF::HashTable.2548" = type <{ %"struct.WTF::KeyValuePair.2551"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2551" = type opaque
%"class.WTF::Vector.2552" = type { %"class.WTF::VectorBuffer.2553" }
%"class.WTF::VectorBuffer.2553" = type { %"class.WTF::VectorBufferBase.2554" }
%"class.WTF::VectorBufferBase.2554" = type { %"class.mojo::ScopedHandleBase.2555"*, i32, i32 }
%"class.mojo::ScopedHandleBase.2555" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.2509" = type { %"class.WTF::VectorBuffer.2510" }
%"class.WTF::VectorBuffer.2510" = type { %"class.WTF::VectorBufferBase.2511", [16 x i8] }
%"class.WTF::VectorBufferBase.2511" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.2558" = type { %"class.WTF::VectorBuffer.2559" }
%"class.WTF::VectorBuffer.2559" = type { %"class.WTF::VectorBufferBase.2560" }
%"class.WTF::VectorBufferBase.2560" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.WTF::HashMap.2563" = type { %"class.WTF::HashTable.2564" }
%"class.WTF::HashTable.2564" = type <{ %"struct.WTF::KeyValuePair.2567"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2567" = type { i8**, %"class.std::__1::unique_ptr.2824" }
%"class.std::__1::unique_ptr.2824" = type { %"class.std::__1::__compressed_pair.2825" }
%"class.std::__1::__compressed_pair.2825" = type { %"struct.std::__1::__compressed_pair_elem.2826" }
%"struct.std::__1::__compressed_pair_elem.2826" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::Member.2568" = type { %"class.blink::MemberBase.2569" }
%"class.blink::MemberBase.2569" = type { %"class.blink::SubresourceFilter"* }
%"class.blink::SubresourceFilter" = type opaque
%"struct.blink::Referrer" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.2267", %class.scoped_refptr.2277, %class.scoped_refptr.2278, %"struct.blink::CacheControlHeader", %"class.absl::optional.684", %"class.absl::optional.2231", %"class.absl::optional.2231", %"class.absl::optional.2231", i64, %"class.blink::KURL", %"class.WTF::Vector.2245", %"class.WTF::String", %"class.WTF::Vector.1780", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.939", %"class.WTF::Vector.1780", %"class.blink::KURL", %"class.absl::optional.2279" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.2262" }
%"class.WTF::HashMap.2262" = type { %"class.WTF::HashTable.2263" }
%"class.WTF::HashTable.2263" = type <{ %"struct.WTF::KeyValuePair.2266"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2266" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.absl::optional.2267" = type { %"class.absl::optional_internal::optional_data.2268" }
%"class.absl::optional_internal::optional_data.2268" = type { %"class.absl::optional_internal::optional_data_base.2269" }
%"class.absl::optional_internal::optional_data_base.2269" = type { %"class.absl::optional_internal::optional_data_dtor_base.2270" }
%"class.absl::optional_internal::optional_data_dtor_base.2270" = type { i8, %union.anon.2271 }
%union.anon.2271 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.1780", %"class.WTF::String", i64, i64, %"class.WTF::Vector.1562", %"class.WTF::Vector.2272" }
%"class.WTF::Vector.1562" = type { %"class.WTF::VectorBuffer.1563" }
%"class.WTF::VectorBuffer.1563" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.WTF::Vector.2272" = type { %"class.WTF::VectorBuffer.2273" }
%"class.WTF::VectorBuffer.2273" = type { %"class.WTF::VectorBufferBase.2274" }
%"class.WTF::VectorBufferBase.2274" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.2277 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.2278 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.684", %"class.absl::optional.684" }
%"class.absl::optional.2231" = type { %"class.absl::optional_internal::optional_data.2232" }
%"class.absl::optional_internal::optional_data.2232" = type { %"class.absl::optional_internal::optional_data_base.2233" }
%"class.absl::optional_internal::optional_data_base.2233" = type { %"class.absl::optional_internal::optional_data_dtor_base.2234" }
%"class.absl::optional_internal::optional_data_dtor_base.2234" = type { i8, %union.anon.2235 }
%union.anon.2235 = type { %"class.base::Time" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.2224" }
%"class.base::time_internal::TimeBase.2224" = type { i64 }
%"class.absl::optional.2279" = type { %"class.absl::optional_internal::optional_data.2280" }
%"class.absl::optional_internal::optional_data.2280" = type { %"class.absl::optional_internal::optional_data_base.2281" }
%"class.absl::optional_internal::optional_data_base.2281" = type { %"class.absl::optional_internal::optional_data_dtor_base.2282" }
%"class.absl::optional_internal::optional_data_dtor_base.2282" = type { i8, %union.anon.2283 }
%union.anon.2283 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.mojo::Remote.2570" = type { %"class.mojo::internal::InterfacePtrState.2571" }
%"class.mojo::internal::InterfacePtrState.2571" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2572" }
%"class.std::__1::unique_ptr.2572" = type { %"class.std::__1::__compressed_pair.2573" }
%"class.std::__1::__compressed_pair.2573" = type { %"struct.std::__1::__compressed_pair_elem.2574" }
%"struct.std::__1::__compressed_pair_elem.2574" = type { %"class.blink::mojom::blink::ContentSecurityNotifierProxy"* }
%"class.blink::mojom::blink::ContentSecurityNotifierProxy" = type { %"class.blink::mojom::blink::ContentSecurityNotifier", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ContentSecurityNotifier" = type { i32 (...)** }
%"class.blink::DocumentLoadTiming" = type { %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.absl::optional.684", %"class.absl::optional.684", %"class.absl::optional.684", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.WTF::Vector.2578", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i16, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i8, i8, %"class.base::Clock"*, %"class.base::TickClock"*, %"class.blink::Member.982" }
%"class.WTF::Vector.2578" = type { %"class.WTF::VectorBuffer.2579" }
%"class.WTF::VectorBuffer.2579" = type { %"class.WTF::VectorBufferBase.2580" }
%"class.WTF::VectorBufferBase.2580" = type { %"class.base::TimeTicks"*, i32, i32 }
%"class.base::Clock" = type opaque
%"class.blink::Member.2583" = type { %"class.blink::MemberBase.2584" }
%"class.blink::MemberBase.2584" = type { %"class.blink::ApplicationCacheHostForFrame"* }
%"class.blink::ApplicationCacheHostForFrame" = type opaque
%"class.std::__1::unique_ptr.2309" = type { %"class.std::__1::__compressed_pair.2310" }
%"class.std::__1::__compressed_pair.2310" = type { %"struct.std::__1::__compressed_pair_elem.2311" }
%"struct.std::__1::__compressed_pair_elem.2311" = type { %"class.blink::WebServiceWorkerNetworkProvider"* }
%"class.blink::WebServiceWorkerNetworkProvider" = type { i32 (...)** }
%"struct.blink::DocumentPolicy::ParsedDocumentPolicy" = type { %"class.base::flat_map", %"class.base::flat_map.2585" }
%"class.WTF::Vector.2595" = type { %"class.WTF::VectorBuffer.2596" }
%"class.WTF::VectorBuffer.2596" = type { %"class.WTF::VectorBufferBase.2597" }
%"class.WTF::VectorBufferBase.2597" = type { %"struct.blink::PolicyParserMessageBuffer::Message"*, i32, i32 }
%"struct.blink::PolicyParserMessageBuffer::Message" = type { i32, %"class.WTF::String" }
%"struct.blink::DocumentLoader::InitialScrollState" = type { i8, i8 }
%class.scoped_refptr.2600 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.2601", i64, %"class.WTF::Vector.2603", %"class.WTF::Vector.2608" }
%"class.WTF::RefCounted.2601" = type { %"class.base::RefCounted.2602" }
%"class.base::RefCounted.2602" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.2603" = type { %"class.WTF::VectorBuffer.2604" }
%"class.WTF::VectorBuffer.2604" = type { %"class.WTF::VectorBufferBase.2605" }
%"class.WTF::VectorBufferBase.2605" = type { i8*, i32, i32 }
%"class.WTF::Vector.2608" = type { %"class.WTF::VectorBuffer.2609" }
%"class.WTF::VectorBuffer.2609" = type { %"class.WTF::VectorBufferBase.2610" }
%"class.WTF::VectorBufferBase.2610" = type { %"class.std::__1::unique_ptr.2611"*, i32, i32 }
%"class.std::__1::unique_ptr.2611" = type opaque
%class.scoped_refptr.2614 = type { %"class.blink::ResourceTimingInfo"* }
%"class.blink::ResourceTimingInfo" = type opaque
%"class.blink::Member.2615" = type { %"class.blink::MemberBase.2616" }
%"class.blink::MemberBase.2616" = type { %"class.blink::SourceKeyedCachedMetadataHandler"* }
%"class.blink::SourceKeyedCachedMetadataHandler" = type { %"class.blink::CachedMetadataHandler", %"class.WTF::HashMap.2619", %"class.std::__1::unique_ptr.2624", %"class.WTF::TextEncoding" }
%"class.blink::CachedMetadataHandler" = type { i32 (...)** }
%"class.WTF::HashMap.2619" = type { %"class.WTF::HashTable.2620" }
%"class.WTF::HashTable.2620" = type <{ %"struct.WTF::KeyValuePair.2623"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2623" = type { %"class.WTF::Vector.2779", %class.scoped_refptr.2916 }
%"class.WTF::Vector.2779" = type { %"class.WTF::VectorBuffer.2780" }
%"class.WTF::VectorBuffer.2780" = type { %"class.WTF::VectorBufferBase.2749", [32 x i8] }
%"class.WTF::VectorBufferBase.2749" = type { i8*, i32, i32 }
%class.scoped_refptr.2916 = type { %"class.blink::CachedMetadata"* }
%"class.blink::CachedMetadata" = type { %"class.WTF::RefCounted.2917", %"class.WTF::Vector.2766", %"class.mojo_base::BigBuffer" }
%"class.WTF::RefCounted.2917" = type { %"class.base::RefCounted.2918" }
%"class.base::RefCounted.2918" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.2766" = type { %"class.WTF::VectorBuffer.2767" }
%"class.WTF::VectorBuffer.2767" = type { %"class.WTF::VectorBufferBase.2749" }
%"class.mojo_base::BigBuffer" = type { i32, %"class.std::__1::unique_ptr.2919", i64, %"class.absl::optional.2924" }
%"class.std::__1::unique_ptr.2919" = type { %"class.std::__1::__compressed_pair.2920" }
%"class.std::__1::__compressed_pair.2920" = type { %"struct.std::__1::__compressed_pair_elem.2396" }
%"class.absl::optional.2924" = type { %"class.absl::optional_internal::optional_data.2925" }
%"class.absl::optional_internal::optional_data.2925" = type { %"class.absl::optional_internal::optional_data_base.2926" }
%"class.absl::optional_internal::optional_data_base.2926" = type { %"class.absl::optional_internal::optional_data_dtor_base.2927" }
%"class.absl::optional_internal::optional_data_dtor_base.2927" = type { i8, %union.anon.2928 }
%union.anon.2928 = type { %"class.mojo_base::internal::BigBufferSharedMemoryRegion" }
%"class.mojo_base::internal::BigBufferSharedMemoryRegion" = type { i64, %"class.mojo::ScopedHandleBase.2929", %"class.std::__1::unique_ptr.2930" }
%"class.mojo::ScopedHandleBase.2929" = type { %"class.mojo::SharedBufferHandle" }
%"class.mojo::SharedBufferHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.2930" = type { %"class.std::__1::__compressed_pair.2931" }
%"class.std::__1::__compressed_pair.2931" = type { %"struct.std::__1::__compressed_pair_elem.2932" }
%"struct.std::__1::__compressed_pair_elem.2932" = type { i8* }
%"class.std::__1::unique_ptr.2624" = type { %"class.std::__1::__compressed_pair.2625" }
%"class.std::__1::__compressed_pair.2625" = type { %"struct.std::__1::__compressed_pair_elem.2626" }
%"struct.std::__1::__compressed_pair_elem.2626" = type { %"class.blink::CachedMetadataSender"* }
%"class.blink::CachedMetadataSender" = type { i32 (...)** }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Member.2630" = type { %"class.blink::MemberBase.2631" }
%"class.blink::MemberBase.2631" = type { %"class.blink::PrefetchedSignedExchangeManager"* }
%"class.blink::PrefetchedSignedExchangeManager" = type opaque
%"class.blink::UseCounterImpl" = type { i32, i32, i32, %"class.blink::UseCounterFeatureTracker", %"class.blink::HeapHashSet.2636" }
%"class.blink::UseCounterFeatureTracker" = type { %"class.std::__1::bitset", %"class.std::__1::bitset.2632", %"class.std::__1::bitset.2632", %"class.std::__1::bitset.2634" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.std::__1::bitset.2632" = type { %"class.std::__1::__bitset.2633" }
%"class.std::__1::__bitset.2633" = type { [11 x i64] }
%"class.std::__1::bitset.2634" = type { %"class.std::__1::__bitset.2635" }
%"class.std::__1::__bitset.2635" = type { [2 x i64] }
%"class.blink::HeapHashSet.2636" = type { %"class.WTF::HashSet.2639" }
%"class.WTF::HashSet.2639" = type { %"class.WTF::HashTable.2640" }
%"class.WTF::HashTable.2640" = type <{ %"class.blink::Member.2642"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2642" = type opaque
%"class.blink::Dactyloscoper" = type { i8 }
%"class.WTF::Vector.2643" = type { %"class.WTF::VectorBuffer.2644" }
%"class.WTF::VectorBuffer.2644" = type { %"class.WTF::VectorBufferBase.2645" }
%"class.WTF::VectorBufferBase.2645" = type { i32*, i32, i32 }
%"class.blink::WebVector.2423" = type { %"class.std::__1::vector.2424" }
%"class.std::__1::vector.2424" = type { %"class.std::__1::__vector_base.2425" }
%"class.std::__1::__vector_base.2425" = type { %"class.blink::WebHistoryItem"*, %"class.blink::WebHistoryItem"*, %"class.std::__1::__compressed_pair.2426" }
%"class.std::__1::__compressed_pair.2426" = type { %"struct.std::__1::__compressed_pair_elem.2427" }
%"struct.std::__1::__compressed_pair_elem.2427" = type { %"class.blink::WebHistoryItem"* }
%"class.mojo::Remote.2648" = type { %"class.mojo::internal::InterfacePtrState.2649" }
%"class.mojo::internal::InterfacePtrState.2649" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2650" }
%"class.std::__1::unique_ptr.2650" = type { %"class.std::__1::__compressed_pair.2651" }
%"class.std::__1::__compressed_pair.2651" = type { %"struct.std::__1::__compressed_pair_elem.2652" }
%"struct.std::__1::__compressed_pair_elem.2652" = type { %"class.blink::mojom::CodeCacheHostProxy"* }
%"class.blink::mojom::CodeCacheHostProxy" = type { %"class.blink::mojom::CodeCacheHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::CodeCacheHost" = type { i32 (...)** }
%"class.std::__1::unique_ptr.984" = type { %"class.std::__1::__compressed_pair.985" }
%"class.std::__1::__compressed_pair.985" = type { %"struct.std::__1::__compressed_pair_elem.986" }
%"struct.std::__1::__compressed_pair_elem.986" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.WTF::HashSet.990" = type { %"class.WTF::HashTable.991" }
%"class.WTF::HashTable.991" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1423", %"class.blink::Member.922", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1428", i8, i32, %"class.blink::Color", %"class.absl::optional.1430", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1435", %"class.blink::Member.1437", %"class.blink::Member.1437", %"class.std::__1::unique_ptr.1440", i32, [4 x i8], %"class.WTF::HashSet.1443", %"class.blink::Member.2053", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.2055", %"class.blink::HeapHashSet.2062", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.2070", i8, %"class.blink::Member.2076", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.2088", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.2102", i8, %"class.std::__1::unique_ptr.2108", %"class.std::__1::unique_ptr.2189", %"class.WTF::Vector.2195", i32, %class.scoped_refptr.2200, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.2201", %"class.blink::Member.2203", %"class.blink::Member.2205", %"class.blink::HeapHashSet.2207", %"class.blink::HeapHashSet.2214", %"class.std::__1::unique_ptr.2221", %"class.std::__1::unique_ptr.2228", %"class.WTF::Vector.102" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.1423" = type { %"class.WTF::HashTable.1424" }
%"class.WTF::HashTable.1424" = type <{ %class.scoped_refptr.1427*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1427 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1428" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1429", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.347, %"class.base::WeakPtrFactory" }
%class.scoped_refptr.347 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.1429" = type { %"class.blink::MemberBase.995" }
%"class.blink::Color" = type { i32 }
%"class.absl::optional.1430" = type { %"class.absl::optional_internal::optional_data.1431" }
%"class.absl::optional_internal::optional_data.1431" = type { %"class.absl::optional_internal::optional_data_base.1432" }
%"class.absl::optional_internal::optional_data_base.1432" = type { %"class.absl::optional_internal::optional_data_dtor_base.1433" }
%"class.absl::optional_internal::optional_data_dtor_base.1433" = type { i8, %union.anon.1434 }
%union.anon.1434 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1435" = type { %"class.blink::MemberBase.1436" }
%"class.blink::MemberBase.1436" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1437" = type { %"class.blink::MemberBase.1438" }
%"class.blink::MemberBase.1438" = type { %"class.blink::HeapHashSet.1439"* }
%"class.blink::HeapHashSet.1439" = type opaque
%"class.std::__1::unique_ptr.1440" = type { %"class.std::__1::__compressed_pair.1441" }
%"class.std::__1::__compressed_pair.1441" = type { %"struct.std::__1::__compressed_pair_elem.1442" }
%"struct.std::__1::__compressed_pair_elem.1442" = type { %"class.WTF::HashSet.1443"* }
%"class.WTF::HashSet.1443" = type { %"class.WTF::HashTable.1444" }
%"class.WTF::HashTable.1444" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr.1447, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr.1447 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.1881", %"class.std::__1::unique_ptr.1883" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.1512", %"class.blink::DataRef.1593", %"class.blink::DataRef.1597", %"class.blink::DataRef.1797", %"class.blink::DataRef.1864", %"class.blink::DataRef.1868", %"class.blink::DataRef.1872", %"class.blink::DataRef.1876", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.1448 }
%class.scoped_refptr.1448 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted.1449", %"class.blink::DataRef.1451", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted.1449" = type { %"class.base::RefCounted.1450" }
%"class.base::RefCounted.1450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1451" = type { %class.scoped_refptr.1452 }
%class.scoped_refptr.1452 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.1453", %"class.blink::Font" }
%"class.WTF::RefCounted.1453" = type { %"class.base::RefCounted.1454" }
%"class.base::RefCounted.1454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.1481 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.1456, %class.scoped_refptr.1464, %class.scoped_refptr.1474, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.1480 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1455 }
%class.scoped_refptr.1455 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.2241", [4 x i8] }>
%"class.WTF::RefCounted.2241" = type { %"class.base::RefCounted.2242" }
%"class.base::RefCounted.2242" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1456 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.1462", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.1457" }
%"class.WTF::Vector.1457" = type { %"class.WTF::VectorBuffer.1458" }
%"class.WTF::VectorBuffer.1458" = type { %"class.WTF::VectorBufferBase.1459" }
%"class.WTF::VectorBufferBase.1459" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.1462" = type { %"class.base::RefCounted.1463" }
%"class.base::RefCounted.1463" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1464 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.1465", %"class.WTF::RefCounted.1472", [4 x i8] }>
%"class.blink::FontSettings.1465" = type { %"class.WTF::Vector.1466" }
%"class.WTF::Vector.1466" = type { %"class.WTF::VectorBuffer.1467" }
%"class.WTF::VectorBuffer.1467" = type { %"class.WTF::VectorBufferBase.1468" }
%"class.WTF::VectorBufferBase.1468" = type { %"class.blink::FontTagValuePair.1469"*, i32, i32 }
%"class.blink::FontTagValuePair.1469" = type { i32, float }
%"class.WTF::RefCounted.1472" = type { %"class.base::RefCounted.1473" }
%"class.base::RefCounted.1473" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1474 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.1475", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.1477, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.1475" = type { %"class.base::RefCounted.1476" }
%"class.base::RefCounted.1476" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.1477 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.1478", [4 x i8] }>
%"class.WTF::RefCounted.1478" = type { %"class.base::RefCounted.1479" }
%"class.base::RefCounted.1479" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.1480 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.1481 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.1482", %"class.WTF::Vector.1484", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr.1510" }
%"class.WTF::RefCounted.1482" = type { %"class.base::RefCounted.1483" }
%"class.base::RefCounted.1483" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1484" = type { %"class.WTF::VectorBuffer.1485" }
%"class.WTF::VectorBuffer.1485" = type { %"class.WTF::VectorBufferBase.1486", [8 x i8] }
%"class.WTF::VectorBufferBase.1486" = type { %class.scoped_refptr.1487*, i32, i32 }
%class.scoped_refptr.1487 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.1488", [4 x i8] }>
%"class.WTF::RefCounted.1488" = type { %"class.base::RefCounted.1489" }
%"class.base::RefCounted.1489" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.1498", %class.scoped_refptr.1505, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.1488" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional.1492", %"class.absl::optional.1492", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional.1492" = type { %"class.absl::optional_internal::optional_data.1493" }
%"class.absl::optional_internal::optional_data.1493" = type { %"class.absl::optional_internal::optional_data_base.1494" }
%"class.absl::optional_internal::optional_data_base.1494" = type { %"class.absl::optional_internal::optional_data_dtor_base.1495" }
%"class.absl::optional_internal::optional_data_dtor_base.1495" = type { i8, %union.anon.1496 }
%union.anon.1496 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.1497, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.106" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.106" }>
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.351" }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.1497 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.1498" = type { %"class.std::__1::__compressed_pair.1499" }
%"class.std::__1::__compressed_pair.1499" = type { %"struct.std::__1::__compressed_pair_elem.1500" }
%"struct.std::__1::__compressed_pair_elem.1500" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.1501, %class.scoped_refptr.1501 }
%class.scoped_refptr.1501 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.1505 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.1506", [4 x i8] }>
%"class.WTF::RefCounted.1506" = type { %"class.base::RefCounted.1507" }
%"class.base::RefCounted.1507" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase.1508" }
%"class.blink::PersistentBase.1508" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr.1509" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr.1509" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr.1510" = type { %"class.base::internal::WeakPtrBase" }
%"class.blink::Length" = type <{ %union.anon.1511, i8, i8, i8, i8 }>
%union.anon.1511 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.1512" = type { %class.scoped_refptr.1513 }
%class.scoped_refptr.1513 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.1514", [4 x i8], %"class.blink::DataRef.1516", %"class.blink::DataRef.1558", %"class.WTF::Vector.1562", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.1566, %class.scoped_refptr.1575, %"class.blink::Persistent.1583", %"class.blink::Persistent.1585", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.1514" = type { %"class.base::RefCounted.1515" }
%"class.base::RefCounted.1515" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1516" = type { %class.scoped_refptr.1517 }
%class.scoped_refptr.1517 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.1518", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.1520, %class.scoped_refptr.1528, %"class.blink::Persistent.1545", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.1518" = type { %"class.base::RefCounted.1519" }
%"class.base::RefCounted.1519" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1520 = type { %"class.base::RefCountedData.1521"* }
%"class.base::RefCountedData.1521" = type { %"class.base::RefCountedThreadSafe.1522", %"class.WTF::Vector.1523" }
%"class.base::RefCountedThreadSafe.1522" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1523" = type { %"class.WTF::VectorBuffer.1524" }
%"class.WTF::VectorBuffer.1524" = type { %"class.WTF::VectorBufferBase.1525" }
%"class.WTF::VectorBufferBase.1525" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.1528 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.1529", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.1529" = type { %"class.base::RefCounted.1530" }
%"class.base::RefCounted.1530" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap.1531", %"class.blink::Persistent.1536" }
%"class.WTF::HashMap.1531" = type { %"class.WTF::HashTable.1532" }
%"class.WTF::HashTable.1532" = type <{ %"struct.WTF::KeyValuePair.1535"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1535" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2902 }
%class.scoped_refptr.2902 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.2903", %"class.WTF::Vector.1780", %"class.WTF::Vector.2905", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.2903" = type { %"class.base::RefCounted.2904" }
%"class.base::RefCounted.2904" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.2905" = type { %"class.WTF::VectorBuffer.2906" }
%"class.WTF::VectorBuffer.2906" = type { %"class.WTF::VectorBufferBase.2907" }
%"class.WTF::VectorBufferBase.2907" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.2908 }
%union.anon.2908 = type { double }
%"class.blink::Persistent.1536" = type { %"class.blink::PersistentBase.1537" }
%"class.blink::PersistentBase.1537" = type { %"class.blink::HeapHashMap.1538"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapHashMap.1538" = type { %"class.WTF::HashMap.1541" }
%"class.WTF::HashMap.1541" = type { %"class.WTF::HashTable.1542" }
%"class.WTF::HashTable.1542" = type <{ %"struct.WTF::KeyValuePair.1544"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1544" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.1545" = type { %"class.blink::PersistentBase.1546" }
%"class.blink::PersistentBase.1546" = type { %"class.blink::HeapVector.1547"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapVector.1547" = type { %"class.WTF::Vector.1550" }
%"class.WTF::Vector.1550" = type { %"class.WTF::VectorBuffer.1551" }
%"class.WTF::VectorBuffer.1551" = type { %"class.WTF::VectorBufferBase.1552" }
%"class.WTF::VectorBufferBase.1552" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member.1553", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member.1553" = type { %"class.blink::MemberBase.1554" }
%"class.blink::MemberBase.1554" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::DataRef.1558" = type { %class.scoped_refptr.1559 }
%class.scoped_refptr.1559 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.1560", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.1560" = type { %"class.base::RefCounted.1561" }
%"class.base::RefCounted.1561" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1566 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.1567", %"class.WTF::Vector.1569" }
%"class.WTF::RefCounted.1567" = type { %"class.base::RefCounted.1568" }
%"class.base::RefCounted.1568" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1569" = type { %"class.WTF::VectorBuffer.1570" }
%"class.WTF::VectorBuffer.1570" = type { %"class.WTF::VectorBufferBase.1571" }
%"class.WTF::VectorBufferBase.1571" = type { %"struct.std::__1::pair.1572"*, i32, i32 }
%"struct.std::__1::pair.1572" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.1575 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.1576", [4 x i8], %"class.WTF::Vector.1578" }
%"class.WTF::RefCounted.1576" = type { %"class.base::RefCounted.1577" }
%"class.base::RefCounted.1577" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1578" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.1580", [28 x i8] }>
%"class.WTF::VectorBufferBase.1580" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.1583" = type { %"class.blink::PersistentBase.1584" }
%"class.blink::PersistentBase.1584" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr" }
%"class.blink::Persistent.1585" = type { %"class.blink::PersistentBase.1586" }
%"class.blink::PersistentBase.1586" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.1589", %"class.blink::Member.1591" }
%"class.blink::Member.1589" = type { %"class.blink::MemberBase.1590" }
%"class.blink::MemberBase.1590" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.1591" = type { %"class.blink::MemberBase.1592" }
%"class.blink::MemberBase.1592" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.1593" = type { %class.scoped_refptr.1594 }
%class.scoped_refptr.1594 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.1595", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.1595" = type { %"class.base::RefCounted.1596" }
%"class.base::RefCounted.1596" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.1597" = type { %class.scoped_refptr.1598 }
%class.scoped_refptr.1598 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.1599", [4 x i8], %"class.blink::DataRef.1601", %"class.blink::DataRef.1667", %"class.blink::TransformOperations", %class.scoped_refptr.1575, %"class.blink::Persistent.1791", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.1599" = type { %"class.base::RefCounted.1600" }
%"class.base::RefCounted.1600" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1601" = type { %class.scoped_refptr.1602 }
%class.scoped_refptr.1602 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.1603", [4 x i8], %"class.blink::DataRef.1605", %"class.blink::Persistent.1643", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.1603" = type { %"class.base::RefCounted.1604" }
%"class.base::RefCounted.1604" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1605" = type { %class.scoped_refptr.1606 }
%class.scoped_refptr.1606 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.1607", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.1625, %class.scoped_refptr.1628, %class.scoped_refptr.1631, %class.scoped_refptr.1634, %class.scoped_refptr.1635, %class.scoped_refptr.1636, %"class.blink::Persistent.1643", %"class.blink::Persistent.1658", %"class.absl::optional.1662", %"class.absl::optional.1662", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.1607" = type { %"class.base::RefCounted.1608" }
%"class.base::RefCounted.1608" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.1609", %"class.std::__1::unique_ptr.1614" }
%"class.WTF::Vector.1609" = type { %"class.WTF::VectorBuffer.1610" }
%"class.WTF::VectorBuffer.1610" = type { %"class.WTF::VectorBufferBase.1611" }
%"class.WTF::VectorBufferBase.1611" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1614" = type { %"class.std::__1::__compressed_pair.1615" }
%"class.std::__1::__compressed_pair.1615" = type { %"struct.std::__1::__compressed_pair_elem.1616" }
%"struct.std::__1::__compressed_pair_elem.1616" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.1617", %"class.WTF::Vector.1609", i32, i32 }
%"class.WTF::Vector.1617" = type { %"class.WTF::VectorBuffer.1618" }
%"class.WTF::VectorBuffer.1618" = type { %"class.WTF::VectorBufferBase.1619" }
%"class.WTF::VectorBufferBase.1619" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.1625 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.1626", [4 x i8] }>
%"class.WTF::RefCounted.1626" = type { %"class.base::RefCounted.1627" }
%"class.base::RefCounted.1627" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1628 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.1629", [4 x i8] }>
%"class.WTF::RefCounted.1629" = type { %"class.base::RefCounted.1630" }
%"class.base::RefCounted.1630" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1631 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.1632" }>
%"class.WTF::RefCounted.1632" = type { %"class.base::RefCounted.1633" }
%"class.base::RefCounted.1633" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1634 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.1635 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.1636 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.1637", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.1637" = type { %"class.base::RefCounted.1638" }
%"class.base::RefCounted.1638" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.1639" }
%"class.blink::DataRef.1639" = type { %class.scoped_refptr.1640 }
%class.scoped_refptr.1640 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.1583", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.1641" }
%"class.WTF::RefCounted.1641" = type { %"class.base::RefCounted.1642" }
%"class.base::RefCounted.1642" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.1658" = type { %"class.blink::PersistentBase.1659" }
%"class.blink::PersistentBase.1659" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.1628, %"class.blink::Member.1553", i32, [4 x i8] }>
%"class.absl::optional.1662" = type { %"class.absl::optional_internal::optional_data.1663" }
%"class.absl::optional_internal::optional_data.1663" = type { %"class.absl::optional_internal::optional_data_base.1664" }
%"class.absl::optional_internal::optional_data_base.1664" = type { %"class.absl::optional_internal::optional_data_dtor_base.1665" }
%"class.absl::optional_internal::optional_data_dtor_base.1665" = type { i8, [3 x i8], %union.anon.1666 }
%union.anon.1666 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.1643" = type { %"class.blink::PersistentBase.1644" }
%"class.blink::PersistentBase.1644" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.1647" }
%"class.blink::HeapVector.1647" = type { %"class.WTF::Vector.1650" }
%"class.WTF::Vector.1650" = type { %"class.WTF::VectorBuffer.1651" }
%"class.WTF::VectorBuffer.1651" = type { %"class.WTF::VectorBufferBase.1652" }
%"class.WTF::VectorBufferBase.1652" = type { %"class.blink::Member.1653"*, i32, i32 }
%"class.blink::Member.1653" = type { %"class.blink::MemberBase.1654" }
%"class.blink::MemberBase.1654" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.1667" = type { %class.scoped_refptr.1668 }
%class.scoped_refptr.1668 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.1669", %"class.blink::DataRef.1671", %"class.blink::DataRef.1675", %"class.blink::DataRef.1684", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.1703", %"class.std::__1::unique_ptr.1714", %"class.std::__1::unique_ptr.1752", %"class.std::__1::unique_ptr.1763", %"class.std::__1::unique_ptr.1774", %"class.WTF::Vector.1780", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.1669" = type { %"class.base::RefCounted.1670" }
%"class.base::RefCounted.1670" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1671" = type { %class.scoped_refptr.1672 }
%class.scoped_refptr.1672 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.1673", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.1673" = type { %"class.base::RefCounted.1674" }
%"class.base::RefCounted.1674" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1675" = type { %class.scoped_refptr.1676 }
%class.scoped_refptr.1676 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.1677", [4 x i8], %"class.WTF::Vector.1679", i8, [7 x i8] }>
%"class.WTF::RefCounted.1677" = type { %"class.base::RefCounted.1678" }
%"class.base::RefCounted.1678" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1679" = type { %"class.WTF::VectorBuffer.1680" }
%"class.WTF::VectorBuffer.1680" = type { %"class.WTF::VectorBufferBase.1681" }
%"class.WTF::VectorBufferBase.1681" = type { i32*, i32, i32 }
%"class.blink::DataRef.1684" = type { %class.scoped_refptr.1685 }
%class.scoped_refptr.1685 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.1686", [4 x i8], %"class.WTF::HashMap.1688", %"class.WTF::HashMap.1688", %"class.WTF::HashMap.1688", %"class.WTF::HashMap.1688", %"class.WTF::HashMap.1688", %"class.WTF::HashMap.1688", %"class.WTF::HashMap.1693", %"class.WTF::HashMap.1693", %"class.WTF::HashMap.1693", %"class.WTF::HashMap.1693", %"class.WTF::HashMap.1698", %"class.WTF::Vector.1609", %"class.WTF::Vector.1609", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.1686" = type { %"class.base::RefCounted.1687" }
%"class.base::RefCounted.1687" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.1688" = type { %"class.WTF::HashTable.1689" }
%"class.WTF::HashTable.1689" = type <{ %"struct.WTF::KeyValuePair.1692"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1692" = type { %"class.WTF::String", %"class.WTF::Vector.2892" }
%"class.WTF::Vector.2892" = type { %"class.WTF::VectorBuffer.2893" }
%"class.WTF::VectorBuffer.2893" = type { %"class.WTF::VectorBufferBase.2894" }
%"class.WTF::VectorBufferBase.2894" = type { i64*, i32, i32 }
%"class.WTF::HashMap.1693" = type { %"class.WTF::HashTable.1694" }
%"class.WTF::HashTable.1694" = type <{ %"struct.WTF::KeyValuePair.1697"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1697" = type { i64, %"class.WTF::Vector.1780" }
%"class.WTF::HashMap.1698" = type { %"class.WTF::HashTable.1699" }
%"class.WTF::HashTable.1699" = type <{ %"struct.WTF::KeyValuePair.1702"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1702" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.1703" = type { %"class.std::__1::__compressed_pair.1704" }
%"class.std::__1::__compressed_pair.1704" = type { %"struct.std::__1::__compressed_pair_elem.1705" }
%"struct.std::__1::__compressed_pair_elem.1705" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.1706" }
%"class.WTF::HashMap.1706" = type { %"class.WTF::HashTable.1707" }
%"class.WTF::HashTable.1707" = type <{ %"struct.WTF::KeyValuePair.1710"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1710" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.2897", %"class.absl::optional.2897", %"class.absl::optional.2897" }
%"class.absl::optional.2897" = type { %"class.absl::optional_internal::optional_data.2898" }
%"class.absl::optional_internal::optional_data.2898" = type { %"class.absl::optional_internal::optional_data_base.2899" }
%"class.absl::optional_internal::optional_data_base.2899" = type { %"class.absl::optional_internal::optional_data_dtor_base.2900" }
%"class.absl::optional_internal::optional_data_dtor_base.2900" = type { i8, %union.anon.2901 }
%union.anon.2901 = type { i32 }
%"class.std::__1::unique_ptr.1714" = type { %"class.std::__1::__compressed_pair.1715" }
%"class.std::__1::__compressed_pair.1715" = type { %"struct.std::__1::__compressed_pair_elem.1716" }
%"struct.std::__1::__compressed_pair_elem.1716" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.1562", %"class.WTF::Vector.1729", %"class.WTF::Vector.1717", %"class.WTF::Vector.1734", %"class.WTF::Vector.1739", %"class.WTF::Vector.1744" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.1717", %"class.WTF::Vector.1717", %"class.WTF::Vector.1722" }
%"class.WTF::Vector.1722" = type { %"class.WTF::VectorBuffer.1723" }
%"class.WTF::VectorBuffer.1723" = type { %"class.WTF::VectorBufferBase.1724" }
%"class.WTF::VectorBufferBase.1724" = type { %class.scoped_refptr.1725*, i32, i32 }
%class.scoped_refptr.1725 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.1726" }
%"class.base::RefCountedThreadSafe.1726" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1729" = type { %"class.WTF::VectorBuffer.1730" }
%"class.WTF::VectorBuffer.1730" = type { %"class.WTF::VectorBufferBase.1731" }
%"class.WTF::VectorBufferBase.1731" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.1717" = type { %"class.WTF::VectorBuffer.1718" }
%"class.WTF::VectorBuffer.1718" = type { %"class.WTF::VectorBufferBase.1719" }
%"class.WTF::VectorBufferBase.1719" = type { double*, i32, i32 }
%"class.WTF::Vector.1734" = type { %"class.WTF::VectorBuffer.1735" }
%"class.WTF::VectorBuffer.1735" = type { %"class.WTF::VectorBufferBase.1736" }
%"class.WTF::VectorBufferBase.1736" = type { i32*, i32, i32 }
%"class.WTF::Vector.1739" = type { %"class.WTF::VectorBuffer.1740" }
%"class.WTF::VectorBuffer.1740" = type { %"class.WTF::VectorBufferBase.1741" }
%"class.WTF::VectorBufferBase.1741" = type { i32*, i32, i32 }
%"class.WTF::Vector.1744" = type { %"class.WTF::VectorBuffer.1745" }
%"class.WTF::VectorBuffer.1745" = type { %"class.WTF::VectorBufferBase.1746" }
%"class.WTF::VectorBufferBase.1746" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1752" = type { %"class.std::__1::__compressed_pair.1753" }
%"class.std::__1::__compressed_pair.1753" = type { %"struct.std::__1::__compressed_pair_elem.1754" }
%"struct.std::__1::__compressed_pair_elem.1754" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.1755" }
%"class.WTF::Vector.1755" = type { %"class.WTF::VectorBuffer.1756" }
%"class.WTF::VectorBuffer.1756" = type { %"class.WTF::VectorBufferBase.1757" }
%"class.WTF::VectorBufferBase.1757" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.1763" = type { %"class.std::__1::__compressed_pair.1764" }
%"class.std::__1::__compressed_pair.1764" = type { %"struct.std::__1::__compressed_pair_elem.1765" }
%"struct.std::__1::__compressed_pair_elem.1765" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.1766" }
%"class.WTF::Vector.1766" = type { %"class.WTF::VectorBuffer.1767" }
%"class.WTF::VectorBuffer.1767" = type { %"class.WTF::VectorBufferBase.1768" }
%"class.WTF::VectorBufferBase.1768" = type { %"class.blink::Persistent.1583"*, i32, i32 }
%"class.std::__1::unique_ptr.1774" = type { %"class.std::__1::__compressed_pair.1775" }
%"class.std::__1::__compressed_pair.1775" = type { %"struct.std::__1::__compressed_pair_elem.1776" }
%"struct.std::__1::__compressed_pair_elem.1776" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.1583", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.1785" }
%"class.WTF::Vector.1785" = type { %"class.WTF::VectorBuffer.1786" }
%"class.WTF::VectorBuffer.1786" = type { %"class.WTF::VectorBufferBase.1787" }
%"class.WTF::VectorBufferBase.1787" = type { %class.scoped_refptr.1788*, i32, i32 }
%class.scoped_refptr.1788 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.1632", [4 x i8] }>
%"class.blink::Persistent.1791" = type { %"class.blink::PersistentBase.1792" }
%"class.blink::PersistentBase.1792" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.1795" }
%"class.blink::Member.1795" = type { %"class.blink::MemberBase.1796" }
%"class.blink::MemberBase.1796" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.1797" = type { %class.scoped_refptr.1798 }
%class.scoped_refptr.1798 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.1799", [4 x i8], %"class.blink::DataRef.1801", %"class.blink::DataRef.1805", %"class.blink::DataRef.1826", %"class.blink::DataRef.1844", %"class.blink::DataRef.1856", %"class.blink::DataRef.1860", %class.scoped_refptr.1830, i32, [4 x i8] }>
%"class.WTF::RefCounted.1799" = type { %"class.base::RefCounted.1800" }
%"class.base::RefCounted.1800" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1801" = type { %class.scoped_refptr.1802 }
%class.scoped_refptr.1802 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.1803", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.1803" = type { %"class.base::RefCounted.1804" }
%"class.base::RefCounted.1804" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1805" = type { %class.scoped_refptr.1806 }
%class.scoped_refptr.1806 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.1807", %class.scoped_refptr.1809, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.1807" = type { %"class.base::RefCounted.1808" }
%"class.base::RefCounted.1808" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1809 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.1810", %"class.std::__1::unique_ptr.1816", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.1629" }>
%"class.std::__1::unique_ptr.1810" = type { %"class.std::__1::__compressed_pair.1811" }
%"class.std::__1::__compressed_pair.1811" = type { %"struct.std::__1::__compressed_pair_elem.1812" }
%"struct.std::__1::__compressed_pair_elem.1812" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.1816" = type { %"class.std::__1::__compressed_pair.1817" }
%"class.std::__1::__compressed_pair.1817" = type { %"struct.std::__1::__compressed_pair_elem.1818" }
%"struct.std::__1::__compressed_pair_elem.1818" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.1819, i32, %"struct.std::__1::atomic.351", %"struct.std::__1::atomic.351", i8, i8 }>
%class.sk_sp.1819 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.1820, %class.SkTDArray.1821, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.106" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.1820 = type { i8*, i32, i32 }
%class.SkTDArray.1821 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.1822 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.106", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.1822 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.341", [3 x i8] }
%"class.blink::DataRef.1826" = type { %class.scoped_refptr.1827 }
%class.scoped_refptr.1827 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.1828", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.1828" = type { %"class.base::RefCounted.1829" }
%"class.base::RefCounted.1829" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.1830, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.1844" = type { %class.scoped_refptr.1845 }
%class.scoped_refptr.1845 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.1846", [4 x i8], %class.scoped_refptr.1848, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.1846" = type { %"class.base::RefCounted.1847" }
%"class.base::RefCounted.1847" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1848 = type { %"class.base::RefCountedData.1849"* }
%"class.base::RefCountedData.1849" = type { %"class.base::RefCountedThreadSafe.1850", %"class.WTF::Vector.1851" }
%"class.base::RefCountedThreadSafe.1850" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1851" = type { %"class.WTF::VectorBuffer.1852" }
%"class.WTF::VectorBuffer.1852" = type { %"class.WTF::VectorBufferBase.1853" }
%"class.WTF::VectorBufferBase.1853" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.1856" = type { %class.scoped_refptr.1857 }
%class.scoped_refptr.1857 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.1858", %class.scoped_refptr.1830, %class.scoped_refptr.1830, %class.scoped_refptr.1830 }
%"class.WTF::RefCounted.1858" = type { %"class.base::RefCounted.1859" }
%"class.base::RefCounted.1859" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1860" = type { %class.scoped_refptr.1861 }
%class.scoped_refptr.1861 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.1862", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1862" = type { %"class.base::RefCounted.1863" }
%"class.base::RefCounted.1863" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1830 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.1831", %"class.blink::Persistent.1833", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.1831" = type { %"class.base::RefCounted.1832" }
%"class.base::RefCounted.1832" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1833" = type { %"class.blink::PersistentBase.1834" }
%"class.blink::PersistentBase.1834" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr" }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.21", %"class.blink::HeapHashMap.1837" }
%"class.blink::HeapHashMap.1837" = type { %"class.WTF::HashMap.1840" }
%"class.WTF::HashMap.1840" = type { %"class.WTF::HashTable.1841" }
%"class.WTF::HashTable.1841" = type <{ %"struct.WTF::KeyValuePair.1843"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1843" = type opaque
%"class.blink::DataRef.1864" = type { %class.scoped_refptr.1865 }
%class.scoped_refptr.1865 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.1866", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.1866" = type { %"class.base::RefCounted.1867" }
%"class.base::RefCounted.1867" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.1868" = type { %class.scoped_refptr.1869 }
%class.scoped_refptr.1869 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.1870", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1870" = type { %"class.base::RefCounted.1871" }
%"class.base::RefCounted.1871" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1872" = type { %class.scoped_refptr.1873 }
%class.scoped_refptr.1873 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.1874", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.1874" = type { %"class.base::RefCounted.1875" }
%"class.base::RefCounted.1875" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1876" = type { %class.scoped_refptr.1877 }
%class.scoped_refptr.1877 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.1878", %class.scoped_refptr.1880 }
%"class.WTF::RefCounted.1878" = type { %"class.base::RefCounted.1879" }
%"class.base::RefCounted.1879" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1880 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.2239", %"class.blink::StyleVariables", %class.scoped_refptr.1880 }
%"class.WTF::RefCounted.2239" = type { %"class.base::RefCounted.2240" }
%"class.base::RefCounted.2240" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.1881" = type { %"class.base::RefCounted.1882" }
%"class.base::RefCounted.1882" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1883" = type { %"class.std::__1::__compressed_pair.1884" }
%"class.std::__1::__compressed_pair.1884" = type { %"struct.std::__1::__compressed_pair_elem.1885" }
%"struct.std::__1::__compressed_pair_elem.1885" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.1886" }
%"class.std::__1::unique_ptr.1886" = type { %"class.std::__1::__compressed_pair.1887" }
%"class.std::__1::__compressed_pair.1887" = type { %"struct.std::__1::__compressed_pair_elem.1888" }
%"struct.std::__1::__compressed_pair_elem.1888" = type { %"class.WTF::Vector.1889"* }
%"class.WTF::Vector.1889" = type { %"class.WTF::VectorBuffer.2912" }
%"class.WTF::VectorBuffer.2912" = type { %"class.WTF::VectorBufferBase.2913", [32 x i8] }
%"class.WTF::VectorBufferBase.2913" = type { %class.scoped_refptr.1447*, i32, i32 }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.1896" }
%"class.blink::MemberBase.1896" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.1897" }
%"class.std::__1::unique_ptr.1897" = type { %"class.std::__1::__compressed_pair.1898" }
%"class.std::__1::__compressed_pair.1898" = type { %"struct.std::__1::__compressed_pair_elem.1899" }
%"struct.std::__1::__compressed_pair_elem.1899" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.1900", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.1906", %"class.std::__1::unique_ptr.2030", i8, %"class.absl::optional.2036", %class.scoped_refptr.2012, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.2041" }
%"class.std::__1::unique_ptr.1900" = type { %"class.std::__1::__compressed_pair.1901" }
%"class.std::__1::__compressed_pair.1901" = type { %"struct.std::__1::__compressed_pair_elem.1902" }
%"struct.std::__1::__compressed_pair_elem.1902" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.1906" = type { %"class.std::__1::__compressed_pair.1907" }
%"class.std::__1::__compressed_pair.1907" = type { %"struct.std::__1::__compressed_pair_elem.1908" }
%"struct.std::__1::__compressed_pair_elem.1908" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.1909, %class.scoped_refptr.1909, %class.scoped_refptr.1909, %class.scoped_refptr.1909, %class.scoped_refptr.1909, %class.scoped_refptr.1909, %class.scoped_refptr.1944, %class.scoped_refptr.1960, %class.scoped_refptr.1961, %class.scoped_refptr.1961, %class.scoped_refptr.1961, %class.scoped_refptr.1961, %class.scoped_refptr.1961, %class.scoped_refptr.1961, %class.scoped_refptr.2002, %class.scoped_refptr.2003, %class.scoped_refptr.2003, %class.scoped_refptr.2003, %class.scoped_refptr.2003, %class.scoped_refptr.2003, %class.scoped_refptr.2003, %class.scoped_refptr.2003, %class.scoped_refptr.2003, %class.scoped_refptr.2026 }
%class.scoped_refptr.1909 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1926" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1910", i8, i8, %class.scoped_refptr.1912, i32, i32 }
%"class.WTF::RefCounted.1910" = type { %"class.base::RefCounted.1911" }
%"class.base::RefCounted.1911" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1912 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1919, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1920", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1913" }
%"class.std::__1::unique_ptr.1913" = type { %"class.std::__1::__compressed_pair.1914" }
%"class.std::__1::__compressed_pair.1914" = type { %"struct.std::__1::__compressed_pair_elem.1915" }
%"struct.std::__1::__compressed_pair_elem.1915" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%class.scoped_refptr.1919 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1945", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1945" = type { %"class.WTF::RefCounted.1946", i8, i8, %class.scoped_refptr.1919, i32, i32 }
%"class.WTF::RefCounted.1946" = type { %"class.base::RefCounted.1947" }
%"class.base::RefCounted.1947" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1948" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1948" = type { %"class.absl::optional_internal::optional_data.1949" }
%"class.absl::optional_internal::optional_data.1949" = type { %"class.absl::optional_internal::optional_data_base.1950" }
%"class.absl::optional_internal::optional_data_base.1950" = type { %"class.absl::optional_internal::optional_data_dtor_base.1951" }
%"class.absl::optional_internal::optional_data_dtor_base.1951" = type { i8, %union.anon.1952 }
%union.anon.1952 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1953", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1953" = type { %"class.std::__1::__vector_base.1954" }
%"class.std::__1::__vector_base.1954" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1955" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.1955" = type { %"struct.std::__1::__compressed_pair_elem.1956" }
%"struct.std::__1::__compressed_pair_elem.1956" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1920" = type { %"class.std::__1::__compressed_pair.1921" }
%"class.std::__1::__compressed_pair.1921" = type { %"struct.std::__1::__compressed_pair_elem.1922" }
%"struct.std::__1::__compressed_pair_elem.1922" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1926" = type { %"class.std::__1::__compressed_pair.1927" }
%"class.std::__1::__compressed_pair.1927" = type { %"struct.std::__1::__compressed_pair_elem.1928" }
%"struct.std::__1::__compressed_pair_elem.1928" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1929", %"class.std::__1::unique_ptr.1935", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1929" = type { %"class.std::__1::__compressed_pair.1930" }
%"class.std::__1::__compressed_pair.1930" = type { %"struct.std::__1::__compressed_pair_elem.1931" }
%"struct.std::__1::__compressed_pair_elem.1931" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1935" = type { %"class.std::__1::__compressed_pair.1936" }
%"class.std::__1::__compressed_pair.1936" = type { %"struct.std::__1::__compressed_pair_elem.1937" }
%"struct.std::__1::__compressed_pair_elem.1937" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.1944 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.1960 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1961 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1962" }
%"class.blink::PaintPropertyNode.1962" = type { %"class.WTF::RefCounted.1963", i8, i8, %class.scoped_refptr.1965, i32, i32 }
%"class.WTF::RefCounted.1963" = type { %"class.base::RefCounted.1964" }
%"class.base::RefCounted.1964" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1965 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.1912, %class.scoped_refptr.1966, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.1988", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.1966 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.2004" }
%"class.blink::PaintPropertyNode.2004" = type { %"class.WTF::RefCounted.2005", i8, i8, %class.scoped_refptr.1966, i32, i32 }
%"class.WTF::RefCounted.2005" = type { %"class.base::RefCounted.2006" }
%"class.base::RefCounted.2006" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.1967" }
%"class.std::__1::vector.1967" = type { %"class.std::__1::__vector_base.1968" }
%"class.std::__1::__vector_base.1968" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.1983" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.1969, [20 x float], i32, [4 x i8], %"class.std::__1::vector.1976", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp.1969 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.1970, i32, %"class.absl::optional.1971", i8, i32 }
%class.sk_sp.1970 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.1971" = type { %"class.absl::optional_internal::optional_data.1972" }
%"class.absl::optional_internal::optional_data.1972" = type { %"class.absl::optional_internal::optional_data_base.1973" }
%"class.absl::optional_internal::optional_data_base.1973" = type { %"class.absl::optional_internal::optional_data_dtor_base.1974" }
%"class.absl::optional_internal::optional_data_dtor_base.1974" = type { i8, %union.anon.1975 }
%union.anon.1975 = type { %struct.SkRect }
%"class.std::__1::vector.1976" = type { %"class.std::__1::__vector_base.1977" }
%"class.std::__1::__vector_base.1977" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.1978" }
%"class.std::__1::__compressed_pair.1978" = type { %"struct.std::__1::__compressed_pair_elem.1979" }
%"struct.std::__1::__compressed_pair_elem.1979" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.1983" = type { %"struct.std::__1::__compressed_pair_elem.1984" }
%"struct.std::__1::__compressed_pair_elem.1984" = type { %"class.cc::FilterOperation"* }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.1988" = type { %"class.std::__1::__compressed_pair.1989" }
%"class.std::__1::__compressed_pair.1989" = type { %"struct.std::__1::__compressed_pair_elem.1990" }
%"struct.std::__1::__compressed_pair_elem.1990" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree.1994" }
%"class.base::internal::flat_tree.1994" = type { %"class.std::__1::vector.1995" }
%"class.std::__1::vector.1995" = type { %"class.std::__1::__vector_base.1996" }
%"class.std::__1::__vector_base.1996" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1997" }
%"class.std::__1::__compressed_pair.1997" = type { %"struct.std::__1::__compressed_pair_elem.1998" }
%"struct.std::__1::__compressed_pair_elem.1998" = type { i32* }
%class.scoped_refptr.2002 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.2003 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.2015" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.1912, %"class.absl::optional.2007", %class.scoped_refptr.2012, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.2007" = type { %"class.absl::optional_internal::optional_data.2008" }
%"class.absl::optional_internal::optional_data.2008" = type { %"class.absl::optional_internal::optional_data_base.2009" }
%"class.absl::optional_internal::optional_data_base.2009" = type { %"class.absl::optional_internal::optional_data_dtor_base.2010" }
%"class.absl::optional_internal::optional_data_dtor_base.2010" = type { i8, [3 x i8], %union.anon.2011 }
%union.anon.2011 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.2015" = type { %"class.std::__1::__compressed_pair.2016" }
%"class.std::__1::__compressed_pair.2016" = type { %"struct.std::__1::__compressed_pair_elem.2017" }
%"struct.std::__1::__compressed_pair_elem.2017" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.2018", i32, [4 x i8] }>
%"class.WTF::Vector.2018" = type { %"class.WTF::VectorBuffer.2019" }
%"class.WTF::VectorBuffer.2019" = type { %"class.WTF::VectorBufferBase.2020" }
%"class.WTF::VectorBufferBase.2020" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.2026 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.2030" = type { %"class.std::__1::__compressed_pair.2031" }
%"class.std::__1::__compressed_pair.2031" = type { %"struct.std::__1::__compressed_pair_elem.2032" }
%"struct.std::__1::__compressed_pair_elem.2032" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1912, %class.scoped_refptr.1966, %class.scoped_refptr.1965 }
%"class.absl::optional.2036" = type { %"class.absl::optional_internal::optional_data.2037" }
%"class.absl::optional_internal::optional_data.2037" = type { %"class.absl::optional_internal::optional_data_base.2038" }
%"class.absl::optional_internal::optional_data_base.2038" = type { %"class.absl::optional_internal::optional_data_dtor_base.2039" }
%"class.absl::optional_internal::optional_data_dtor_base.2039" = type { i8, %union.anon.2040 }
%union.anon.2040 = type { %"class.blink::IntRect" }
%class.scoped_refptr.2012 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.2013", [4 x i8] }
%"class.WTF::RefCounted.2013" = type { %"class.base::RefCounted.2014" }
%"class.base::RefCounted.2014" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.2041" = type { %"class.std::__1::__compressed_pair.2042" }
%"class.std::__1::__compressed_pair.2042" = type { %"struct.std::__1::__compressed_pair_elem.2043" }
%"struct.std::__1::__compressed_pair_elem.2043" = type { %"class.blink::FragmentData"* }
%"class.blink::Member.2053" = type { %"class.blink::MemberBase.2054" }
%"class.blink::MemberBase.2054" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.2055" = type { %"class.WTF::HashSet.2058" }
%"class.WTF::HashSet.2058" = type { %"class.WTF::HashTable.2059" }
%"class.WTF::HashTable.2059" = type <{ %"class.blink::Member.2061"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2061" = type opaque
%"class.blink::HeapHashSet.2062" = type { %"class.WTF::HashSet.2065" }
%"class.WTF::HashSet.2065" = type { %"class.WTF::HashTable.2066" }
%"class.WTF::HashTable.2066" = type <{ %"class.blink::Member.2068"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2068" = type { %"class.blink::MemberBase.2069" }
%"class.blink::MemberBase.2069" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type opaque
%"class.std::__1::unique_ptr.2070" = type { %"class.std::__1::__compressed_pair.2071" }
%"class.std::__1::__compressed_pair.2071" = type { %"struct.std::__1::__compressed_pair_elem.2072" }
%"struct.std::__1::__compressed_pair_elem.2072" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.2076" = type { %"class.blink::MemberBase.2077" }
%"class.blink::MemberBase.2077" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.2080", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.2080" = type { %"class.WTF::HashTable.2081" }
%"class.WTF::HashTable.2081" = type <{ %"struct.WTF::KeyValuePair.2083"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2083" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.2084", i32, i32 }
%"class.WTF::Vector.2084" = type { %"class.WTF::VectorBuffer.2085" }
%"class.WTF::VectorBuffer.2085" = type { %"class.WTF::VectorBufferBase.2086" }
%"class.WTF::VectorBufferBase.2086" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.2088" = type { %"class.WTF::LinkedHashSet.2091" }
%"class.WTF::LinkedHashSet.2091" = type { %"class.WTF::HashMap.2092", %"class.WTF::VectorBackedLinkedList.2096" }
%"class.WTF::HashMap.2092" = type { %"class.WTF::HashTable.2093" }
%"class.WTF::HashTable.2093" = type <{ %"struct.WTF::KeyValuePair.2095"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2095" = type opaque
%"class.WTF::VectorBackedLinkedList.2096" = type { %"class.WTF::Vector.2097", i32, i32 }
%"class.WTF::Vector.2097" = type { %"class.WTF::VectorBuffer.2098" }
%"class.WTF::VectorBuffer.2098" = type { %"class.WTF::VectorBufferBase.2099" }
%"class.WTF::VectorBufferBase.2099" = type { %"class.WTF::VectorBackedLinkedListNode.2100"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.2100" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2102" = type { %"class.std::__1::__compressed_pair.2103" }
%"class.std::__1::__compressed_pair.2103" = type { %"struct.std::__1::__compressed_pair_elem.2104" }
%"struct.std::__1::__compressed_pair_elem.2104" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.2108" = type { %"class.std::__1::__compressed_pair.2109" }
%"class.std::__1::__compressed_pair.2109" = type { %"struct.std::__1::__compressed_pair_elem.2110" }
%"struct.std::__1::__compressed_pair_elem.2110" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.2111, %class.scoped_refptr.2111, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.2166", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.2171", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.2111 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.2112", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.2119" }
%"class.WTF::RefCounted.2112" = type { %"class.base::RefCounted.2113" }
%"class.base::RefCounted.2113" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.2114", i32, [4 x i8] }>
%"class.WTF::Vector.2114" = type { %"class.WTF::VectorBuffer.2115" }
%"class.WTF::VectorBuffer.2115" = type { %"class.WTF::VectorBufferBase.2116" }
%"class.WTF::VectorBufferBase.2116" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.2119" = type { %"class.WTF::VectorBuffer.2120" }
%"class.WTF::VectorBuffer.2120" = type { %"class.WTF::VectorBufferBase.2121" }
%"class.WTF::VectorBufferBase.2121" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.2122", %"class.std::__1::unique_ptr.2138", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.2122" = type { %"class.std::__1::__compressed_pair.2123" }
%"class.std::__1::__compressed_pair.2123" = type { %"struct.std::__1::__compressed_pair_elem.2124" }
%"struct.std::__1::__compressed_pair_elem.2124" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.2125", %"class.WTF::Vector.2130", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.2125" = type { %"class.WTF::VectorBuffer.2126" }
%"class.WTF::VectorBuffer.2126" = type { %"class.WTF::VectorBufferBase.2127" }
%"class.WTF::VectorBufferBase.2127" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.2130" = type { %"class.WTF::VectorBuffer.2131" }
%"class.WTF::VectorBuffer.2131" = type { %"class.WTF::VectorBufferBase.2132" }
%"class.WTF::VectorBufferBase.2132" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.std::__1::unique_ptr.2138" = type { %"class.std::__1::__compressed_pair.2139" }
%"class.std::__1::__compressed_pair.2139" = type { %"struct.std::__1::__compressed_pair_elem.2140" }
%"struct.std::__1::__compressed_pair_elem.2140" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.2141", %"class.absl::optional.2141" }
%"class.absl::optional.2141" = type { %"class.absl::optional_internal::optional_data.2142" }
%"class.absl::optional_internal::optional_data.2142" = type { %"class.absl::optional_internal::optional_data_base.2143" }
%"class.absl::optional_internal::optional_data_base.2143" = type { %"class.absl::optional_internal::optional_data_dtor_base.2144" }
%"class.absl::optional_internal::optional_data_dtor_base.2144" = type { i8, [3 x i8], %union.anon.2145 }
%union.anon.2145 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.2119"*, %"class.absl::optional.2151", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.2151" = type { %"class.absl::optional_internal::optional_data.2152" }
%"class.absl::optional_internal::optional_data.2152" = type { %"class.absl::optional_internal::optional_data_base.2153" }
%"class.absl::optional_internal::optional_data_base.2153" = type { %"class.absl::optional_internal::optional_data_dtor_base.2154" }
%"class.absl::optional_internal::optional_data_dtor_base.2154" = type { i8, %union.anon.2155 }
%union.anon.2155 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.2156", %"class.WTF::Vector.2161" }
%"class.WTF::Vector.2156" = type { %"class.WTF::VectorBuffer.2157" }
%"class.WTF::VectorBuffer.2157" = type { %"class.WTF::VectorBufferBase.2158", [128 x i8] }
%"class.WTF::VectorBufferBase.2158" = type { i32*, i32, i32 }
%"class.WTF::Vector.2161" = type { %"class.WTF::VectorBuffer.2162" }
%"class.WTF::VectorBuffer.2162" = type { %"class.WTF::VectorBufferBase.2163", [128 x i8] }
%"class.WTF::VectorBufferBase.2163" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.2166" = type { %"class.WTF::VectorBuffer.2167" }
%"class.WTF::VectorBuffer.2167" = type { %"class.WTF::VectorBufferBase.2168" }
%"class.WTF::VectorBufferBase.2168" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.2171" = type { %"class.WTF::HashTable.2172" }
%"class.WTF::HashTable.2172" = type <{ %"struct.WTF::KeyValuePair.2175"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2175" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.2176", %"class.WTF::Vector.2181" }
%"class.WTF::HashMap.2176" = type { %"class.WTF::HashTable.2177" }
%"class.WTF::HashTable.2177" = type <{ %"struct.WTF::KeyValuePair.2180"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2180" = type opaque
%"class.WTF::Vector.2181" = type { %"class.WTF::VectorBuffer.2182" }
%"class.WTF::VectorBuffer.2182" = type { %"class.WTF::VectorBufferBase.2183" }
%"class.WTF::VectorBufferBase.2183" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.2189" = type { %"class.std::__1::__compressed_pair.2190" }
%"class.std::__1::__compressed_pair.2190" = type { %"struct.std::__1::__compressed_pair_elem.2191" }
%"struct.std::__1::__compressed_pair_elem.2191" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.2195" = type { %"class.WTF::VectorBuffer.2196" }
%"class.WTF::VectorBuffer.2196" = type { %"class.WTF::VectorBufferBase.2197" }
%"class.WTF::VectorBufferBase.2197" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.2200 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.2201" = type { %"class.blink::MemberBase.2202" }
%"class.blink::MemberBase.2202" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.2203" = type { %"class.blink::MemberBase.2204" }
%"class.blink::MemberBase.2204" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.2205" = type { %"class.blink::MemberBase.2206" }
%"class.blink::MemberBase.2206" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.2207" = type { %"class.WTF::HashSet.2210" }
%"class.WTF::HashSet.2210" = type { %"class.WTF::HashTable.2211" }
%"class.WTF::HashTable.2211" = type <{ %"class.blink::WeakMember.2213"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2213" = type opaque
%"class.blink::HeapHashSet.2214" = type { %"class.WTF::HashSet.2217" }
%"class.WTF::HashSet.2217" = type { %"class.WTF::HashTable.2218" }
%"class.WTF::HashTable.2218" = type <{ %"class.blink::WeakMember.2220"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2220" = type opaque
%"class.std::__1::unique_ptr.2221" = type { %"class.std::__1::__compressed_pair.2222" }
%"class.std::__1::__compressed_pair.2222" = type { %"struct.std::__1::__compressed_pair_elem.2223" }
%"struct.std::__1::__compressed_pair_elem.2223" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.2228" = type { %"class.std::__1::__compressed_pair.2229" }
%"class.std::__1::__compressed_pair.2229" = type { %"struct.std::__1::__compressed_pair_elem.2230" }
%"struct.std::__1::__compressed_pair_elem.2230" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.2231", i32, i32, i32, i8, [3 x i8] }>
%"class.blink::Member.996" = type { %"class.blink::MemberBase.997" }
%"class.blink::MemberBase.997" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type <{ %"class.blink::Member.922", %"class.blink::Member.1000", %"class.blink::Member.1002", i32, i8, i8, [2 x i8], %"class.std::__1::unique_ptr.1004", %"class.blink::VisibleSelectionTemplate", i8, [3 x i8], i32, %"class.blink::Member.1010", i8, [7 x i8] }>
%"class.blink::Member.1000" = type { %"class.blink::MemberBase.1001" }
%"class.blink::MemberBase.1001" = type { %"class.blink::CompositeEditCommand"* }
%"class.blink::CompositeEditCommand" = type opaque
%"class.blink::Member.1002" = type { %"class.blink::MemberBase.1003" }
%"class.blink::MemberBase.1003" = type { %"class.blink::UndoStack"* }
%"class.blink::UndoStack" = type opaque
%"class.std::__1::unique_ptr.1004" = type { %"class.std::__1::__compressed_pair.1005" }
%"class.std::__1::__compressed_pair.1005" = type { %"struct.std::__1::__compressed_pair_elem.1006" }
%"struct.std::__1::__compressed_pair_elem.1006" = type { %"class.blink::KillRing"* }
%"class.blink::KillRing" = type opaque
%"class.blink::VisibleSelectionTemplate" = type <{ %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i8, [3 x i8] }>
%"class.blink::Member.1010" = type { %"class.blink::MemberBase.1011" }
%"class.blink::MemberBase.1011" = type { %"class.blink::EditingStyle"* }
%"class.blink::EditingStyle" = type <{ %"class.blink::Member.1014", %"class.blink::Member", i8, [3 x i8], float, i8, [7 x i8] }>
%"class.blink::Member.1014" = type { %"class.blink::MemberBase.1015" }
%"class.blink::MemberBase.1015" = type { %"class.blink::MutableCSSPropertyValueSet"* }
%"class.blink::MutableCSSPropertyValueSet" = type <{ %"class.blink::CSSPropertyValueSet", [4 x i8], %"class.blink::Member.1016", %"class.blink::HeapVector.1018", i8, [7 x i8] }>
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1016" = type { %"class.blink::MemberBase.1017" }
%"class.blink::MemberBase.1017" = type { %"class.blink::PropertySetCSSStyleDeclaration"* }
%"class.blink::PropertySetCSSStyleDeclaration" = type { %"class.blink::AbstractPropertySetCSSStyleDeclaration", %"class.blink::Member.1014" }
%"class.blink::AbstractPropertySetCSSStyleDeclaration" = type { %"class.blink::CSSStyleDeclaration" }
%"class.blink::CSSStyleDeclaration" = type { %"class.blink::ScriptWrappable", %"class.blink::ExecutionContextClient" }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1420" }
%"class.blink::WeakMember.1420" = type { %"class.blink::MemberBase.116" }
%"class.blink::HeapVector.1018" = type { %"class.WTF::Vector.1021" }
%"class.WTF::Vector.1021" = type { %"class.WTF::VectorBuffer.1022" }
%"class.WTF::VectorBuffer.1022" = type { %"class.WTF::VectorBufferBase.1023", [96 x i8] }
%"class.WTF::VectorBufferBase.1023" = type { %"class.blink::CSSPropertyValue"*, i32, i32 }
%"class.blink::CSSPropertyValue" = type { %"struct.blink::CSSPropertyValueMetadata", %"class.blink::Member.1024" }
%"struct.blink::CSSPropertyValueMetadata" = type <{ %"class.WTF::AtomicString", i16, [6 x i8] }>
%"class.blink::Member.1024" = type { %"class.blink::MemberBase.1025" }
%"class.blink::MemberBase.1025" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::Member.1030" = type { %"class.blink::MemberBase.1031" }
%"class.blink::MemberBase.1031" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.1032" = type { %"class.blink::MemberBase.1033" }
%"class.blink::MemberBase.1033" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.1034" = type { %"class.blink::MemberBase.1035" }
%"class.blink::MemberBase.1035" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.1036" = type { %"class.blink::MemberBase.1037" }
%"class.blink::MemberBase.1037" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet", %"class.blink::HeapListHashSet.1047", %"class.blink::HeapListHashSet.1058", %"class.blink::HeapListHashSet.1069", %"class.blink::HeapListHashSet.1080", %"class.blink::HeapListHashSet.1091", %"class.blink::HeapListHashSet.1102", %"class.blink::HeapListHashSet.1113", %"class.blink::HeapListHashSet.1124", %"class.blink::HeapListHashSet.1135", %"class.blink::HeapListHashSet.1146", %"class.blink::HeapListHashSet.1157", %"class.blink::HeapListHashSet.1168", %"class.blink::HeapListHashSet.1179", %"class.blink::HeapListHashSet.1190", %"class.blink::HeapListHashSet.1201", %"class.blink::HeapListHashSet.1212", %"class.blink::HeapListHashSet.1223", %"class.blink::HeapListHashSet.1234", %"class.blink::HeapListHashSet.1245" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1043", %"class.blink::Member.1045", %"class.blink::Member.1045", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1043" = type <{ %"class.blink::Member.1045"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1045" = type { %"class.blink::MemberBase.1046" }
%"class.blink::MemberBase.1046" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.1259", %"class.blink::Member.1045", %"class.blink::Member.1045" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::HeapListHashSet.1047" = type { %"class.WTF::ListHashSet.base.1057", [7 x i8] }
%"class.WTF::ListHashSet.base.1057" = type <{ %"class.WTF::HashTable.1052", %"class.blink::Member.1054", %"class.blink::Member.1054", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1052" = type <{ %"class.blink::Member.1054"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1054" = type { %"class.blink::MemberBase.1055" }
%"class.blink::MemberBase.1055" = type { %"class.blink::HeapListHashSetNode.1056"* }
%"class.blink::HeapListHashSetNode.1056" = type { %"class.blink::Member.1416", %"class.blink::Member.1054", %"class.blink::Member.1054" }
%"class.blink::Member.1416" = type { %"class.blink::MemberBase.1417" }
%"class.blink::MemberBase.1417" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.1058" = type { %"class.WTF::ListHashSet.base.1068", [7 x i8] }
%"class.WTF::ListHashSet.base.1068" = type <{ %"class.WTF::HashTable.1063", %"class.blink::Member.1065", %"class.blink::Member.1065", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1063" = type <{ %"class.blink::Member.1065"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1065" = type { %"class.blink::MemberBase.1066" }
%"class.blink::MemberBase.1066" = type { %"class.blink::HeapListHashSetNode.1067"* }
%"class.blink::HeapListHashSetNode.1067" = type { %"class.blink::Member.1412", %"class.blink::Member.1065", %"class.blink::Member.1065" }
%"class.blink::Member.1412" = type { %"class.blink::MemberBase.1413" }
%"class.blink::MemberBase.1413" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.1069" = type { %"class.WTF::ListHashSet.base.1079", [7 x i8] }
%"class.WTF::ListHashSet.base.1079" = type <{ %"class.WTF::HashTable.1074", %"class.blink::Member.1076", %"class.blink::Member.1076", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1074" = type <{ %"class.blink::Member.1076"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1076" = type { %"class.blink::MemberBase.1077" }
%"class.blink::MemberBase.1077" = type { %"class.blink::HeapListHashSetNode.1078"* }
%"class.blink::HeapListHashSetNode.1078" = type { %"class.blink::Member.1408", %"class.blink::Member.1076", %"class.blink::Member.1076" }
%"class.blink::Member.1408" = type { %"class.blink::MemberBase.1409" }
%"class.blink::MemberBase.1409" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.1080" = type { %"class.WTF::ListHashSet.base.1090", [7 x i8] }
%"class.WTF::ListHashSet.base.1090" = type <{ %"class.WTF::HashTable.1085", %"class.blink::Member.1087", %"class.blink::Member.1087", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1085" = type <{ %"class.blink::Member.1087"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::HeapListHashSetNode.1089"* }
%"class.blink::HeapListHashSetNode.1089" = type { %"class.blink::Member.1404", %"class.blink::Member.1087", %"class.blink::Member.1087" }
%"class.blink::Member.1404" = type { %"class.blink::MemberBase.1405" }
%"class.blink::MemberBase.1405" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.1091" = type { %"class.WTF::ListHashSet.base.1101", [7 x i8] }
%"class.WTF::ListHashSet.base.1101" = type <{ %"class.WTF::HashTable.1096", %"class.blink::Member.1098", %"class.blink::Member.1098", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1096" = type <{ %"class.blink::Member.1098"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1098" = type { %"class.blink::MemberBase.1099" }
%"class.blink::MemberBase.1099" = type { %"class.blink::HeapListHashSetNode.1100"* }
%"class.blink::HeapListHashSetNode.1100" = type { %"class.blink::Member.1400", %"class.blink::Member.1098", %"class.blink::Member.1098" }
%"class.blink::Member.1400" = type { %"class.blink::MemberBase.1401" }
%"class.blink::MemberBase.1401" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.1102" = type { %"class.WTF::ListHashSet.base.1112", [7 x i8] }
%"class.WTF::ListHashSet.base.1112" = type <{ %"class.WTF::HashTable.1107", %"class.blink::Member.1109", %"class.blink::Member.1109", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1107" = type <{ %"class.blink::Member.1109"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1109" = type { %"class.blink::MemberBase.1110" }
%"class.blink::MemberBase.1110" = type { %"class.blink::HeapListHashSetNode.1111"* }
%"class.blink::HeapListHashSetNode.1111" = type { %"class.blink::Member.1396", %"class.blink::Member.1109", %"class.blink::Member.1109" }
%"class.blink::Member.1396" = type { %"class.blink::MemberBase.1397" }
%"class.blink::MemberBase.1397" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type opaque
%"class.blink::HeapListHashSet.1113" = type { %"class.WTF::ListHashSet.base.1123", [7 x i8] }
%"class.WTF::ListHashSet.base.1123" = type <{ %"class.WTF::HashTable.1118", %"class.blink::Member.1120", %"class.blink::Member.1120", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1118" = type <{ %"class.blink::Member.1120"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1120" = type { %"class.blink::MemberBase.1121" }
%"class.blink::MemberBase.1121" = type { %"class.blink::HeapListHashSetNode.1122"* }
%"class.blink::HeapListHashSetNode.1122" = type { %"class.blink::Member.1392", %"class.blink::Member.1120", %"class.blink::Member.1120" }
%"class.blink::Member.1392" = type { %"class.blink::MemberBase.1393" }
%"class.blink::MemberBase.1393" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.1124" = type { %"class.WTF::ListHashSet.base.1134", [7 x i8] }
%"class.WTF::ListHashSet.base.1134" = type <{ %"class.WTF::HashTable.1129", %"class.blink::Member.1131", %"class.blink::Member.1131", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1129" = type <{ %"class.blink::Member.1131"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1131" = type { %"class.blink::MemberBase.1132" }
%"class.blink::MemberBase.1132" = type { %"class.blink::HeapListHashSetNode.1133"* }
%"class.blink::HeapListHashSetNode.1133" = type { %"class.blink::Member.1388", %"class.blink::Member.1131", %"class.blink::Member.1131" }
%"class.blink::Member.1388" = type { %"class.blink::MemberBase.1389" }
%"class.blink::MemberBase.1389" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.1135" = type { %"class.WTF::ListHashSet.base.1145", [7 x i8] }
%"class.WTF::ListHashSet.base.1145" = type <{ %"class.WTF::HashTable.1140", %"class.blink::Member.1142", %"class.blink::Member.1142", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1140" = type <{ %"class.blink::Member.1142"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1142" = type { %"class.blink::MemberBase.1143" }
%"class.blink::MemberBase.1143" = type { %"class.blink::HeapListHashSetNode.1144"* }
%"class.blink::HeapListHashSetNode.1144" = type { %"class.blink::Member.1384", %"class.blink::Member.1142", %"class.blink::Member.1142" }
%"class.blink::Member.1384" = type { %"class.blink::MemberBase.1385" }
%"class.blink::MemberBase.1385" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.1146" = type { %"class.WTF::ListHashSet.base.1156", [7 x i8] }
%"class.WTF::ListHashSet.base.1156" = type <{ %"class.WTF::HashTable.1151", %"class.blink::Member.1153", %"class.blink::Member.1153", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1151" = type <{ %"class.blink::Member.1153"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::HeapListHashSetNode.1155"* }
%"class.blink::HeapListHashSetNode.1155" = type { %"class.blink::Member.1263", %"class.blink::Member.1153", %"class.blink::Member.1153" }
%"class.blink::HeapListHashSet.1157" = type { %"class.WTF::ListHashSet.base.1167", [7 x i8] }
%"class.WTF::ListHashSet.base.1167" = type <{ %"class.WTF::HashTable.1162", %"class.blink::Member.1164", %"class.blink::Member.1164", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1162" = type <{ %"class.blink::Member.1164"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.1165" }
%"class.blink::MemberBase.1165" = type { %"class.blink::HeapListHashSetNode.1166"* }
%"class.blink::HeapListHashSetNode.1166" = type { %"class.blink::Member.1378", %"class.blink::Member.1164", %"class.blink::Member.1164" }
%"class.blink::Member.1378" = type { %"class.blink::MemberBase.1379" }
%"class.blink::MemberBase.1379" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.1168" = type { %"class.WTF::ListHashSet.base.1178", [7 x i8] }
%"class.WTF::ListHashSet.base.1178" = type <{ %"class.WTF::HashTable.1173", %"class.blink::Member.1175", %"class.blink::Member.1175", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1173" = type <{ %"class.blink::Member.1175"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1175" = type { %"class.blink::MemberBase.1176" }
%"class.blink::MemberBase.1176" = type { %"class.blink::HeapListHashSetNode.1177"* }
%"class.blink::HeapListHashSetNode.1177" = type { %"class.blink::Member.1374", %"class.blink::Member.1175", %"class.blink::Member.1175" }
%"class.blink::Member.1374" = type { %"class.blink::MemberBase.1375" }
%"class.blink::MemberBase.1375" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.1179" = type { %"class.WTF::ListHashSet.base.1189", [7 x i8] }
%"class.WTF::ListHashSet.base.1189" = type <{ %"class.WTF::HashTable.1184", %"class.blink::Member.1186", %"class.blink::Member.1186", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1184" = type <{ %"class.blink::Member.1186"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1186" = type { %"class.blink::MemberBase.1187" }
%"class.blink::MemberBase.1187" = type { %"class.blink::HeapListHashSetNode.1188"* }
%"class.blink::HeapListHashSetNode.1188" = type { %"class.blink::Member.1370", %"class.blink::Member.1186", %"class.blink::Member.1186" }
%"class.blink::Member.1370" = type { %"class.blink::MemberBase.1371" }
%"class.blink::MemberBase.1371" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.1190" = type { %"class.WTF::ListHashSet.base.1200", [7 x i8] }
%"class.WTF::ListHashSet.base.1200" = type <{ %"class.WTF::HashTable.1195", %"class.blink::Member.1197", %"class.blink::Member.1197", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1195" = type <{ %"class.blink::Member.1197"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.1198" }
%"class.blink::MemberBase.1198" = type { %"class.blink::HeapListHashSetNode.1199"* }
%"class.blink::HeapListHashSetNode.1199" = type { %"class.blink::Member.1366", %"class.blink::Member.1197", %"class.blink::Member.1197" }
%"class.blink::Member.1366" = type { %"class.blink::MemberBase.1367" }
%"class.blink::MemberBase.1367" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::HeapListHashSet.1201" = type { %"class.WTF::ListHashSet.base.1211", [7 x i8] }
%"class.WTF::ListHashSet.base.1211" = type <{ %"class.WTF::HashTable.1206", %"class.blink::Member.1208", %"class.blink::Member.1208", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1206" = type <{ %"class.blink::Member.1208"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1208" = type { %"class.blink::MemberBase.1209" }
%"class.blink::MemberBase.1209" = type { %"class.blink::HeapListHashSetNode.1210"* }
%"class.blink::HeapListHashSetNode.1210" = type { %"class.blink::Member.1362", %"class.blink::Member.1208", %"class.blink::Member.1208" }
%"class.blink::Member.1362" = type { %"class.blink::MemberBase.1363" }
%"class.blink::MemberBase.1363" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type opaque
%"class.blink::HeapListHashSet.1212" = type { %"class.WTF::ListHashSet.base.1222", [7 x i8] }
%"class.WTF::ListHashSet.base.1222" = type <{ %"class.WTF::HashTable.1217", %"class.blink::Member.1219", %"class.blink::Member.1219", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1217" = type <{ %"class.blink::Member.1219"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1219" = type { %"class.blink::MemberBase.1220" }
%"class.blink::MemberBase.1220" = type { %"class.blink::HeapListHashSetNode.1221"* }
%"class.blink::HeapListHashSetNode.1221" = type { %"class.blink::Member.1358", %"class.blink::Member.1219", %"class.blink::Member.1219" }
%"class.blink::Member.1358" = type { %"class.blink::MemberBase.1359" }
%"class.blink::MemberBase.1359" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.1223" = type { %"class.WTF::ListHashSet.base.1233", [7 x i8] }
%"class.WTF::ListHashSet.base.1233" = type <{ %"class.WTF::HashTable.1228", %"class.blink::Member.1230", %"class.blink::Member.1230", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1228" = type <{ %"class.blink::Member.1230"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1230" = type { %"class.blink::MemberBase.1231" }
%"class.blink::MemberBase.1231" = type { %"class.blink::HeapListHashSetNode.1232"* }
%"class.blink::HeapListHashSetNode.1232" = type { %"class.blink::Member.1354", %"class.blink::Member.1230", %"class.blink::Member.1230" }
%"class.blink::Member.1354" = type { %"class.blink::MemberBase.1355" }
%"class.blink::MemberBase.1355" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.1234" = type { %"class.WTF::ListHashSet.base.1244", [7 x i8] }
%"class.WTF::ListHashSet.base.1244" = type <{ %"class.WTF::HashTable.1239", %"class.blink::Member.1241", %"class.blink::Member.1241", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1239" = type <{ %"class.blink::Member.1241"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1241" = type { %"class.blink::MemberBase.1242" }
%"class.blink::MemberBase.1242" = type { %"class.blink::HeapListHashSetNode.1243"* }
%"class.blink::HeapListHashSetNode.1243" = type { %"class.blink::Member.1265", %"class.blink::Member.1241", %"class.blink::Member.1241" }
%"class.blink::HeapListHashSet.1245" = type { %"class.WTF::ListHashSet.base.1255", [7 x i8] }
%"class.WTF::ListHashSet.base.1255" = type <{ %"class.WTF::HashTable.1250", %"class.blink::Member.1252", %"class.blink::Member.1252", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1250" = type <{ %"class.blink::Member.1252"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1252" = type { %"class.blink::MemberBase.1253" }
%"class.blink::MemberBase.1253" = type { %"class.blink::HeapListHashSetNode.1254"* }
%"class.blink::HeapListHashSetNode.1254" = type { %"class.blink::Member.1257", %"class.blink::Member.1252", %"class.blink::Member.1252" }
%class.scoped_refptr.1256 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.1259" = type { %"class.blink::MemberBase.1260" }
%"class.blink::MemberBase.1260" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.1261" = type { %"class.blink::MemberBase.1262" }
%"class.blink::MemberBase.1262" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.1263" = type { %"class.blink::MemberBase.1264" }
%"class.blink::MemberBase.1264" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.1265" = type { %"class.blink::MemberBase.1266" }
%"class.blink::MemberBase.1266" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type { i8 }
%"class.blink::Member.1269" = type { %"class.blink::MemberBase.1270" }
%"class.blink::MemberBase.1270" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.1271" = type { %"class.blink::MemberBase.1272" }
%"class.blink::MemberBase.1272" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.1273" }
%"class.blink::Member.1273" = type { %"class.blink::MemberBase.1274" }
%"class.blink::MemberBase.1274" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.2847" }
%"class.mojo::Remote.2847" = type { %"class.mojo::internal::InterfacePtrState.2848" }
%"class.mojo::internal::InterfacePtrState.2848" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2849" }
%"class.std::__1::unique_ptr.2849" = type { %"class.std::__1::__compressed_pair.2850" }
%"class.std::__1::__compressed_pair.2850" = type { %"struct.std::__1::__compressed_pair_elem.2851" }
%"struct.std::__1::__compressed_pair_elem.2851" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1275" = type { %"class.std::__1::__compressed_pair.1276" }
%"class.std::__1::__compressed_pair.1276" = type { %"struct.std::__1::__compressed_pair_elem.1277" }
%"struct.std::__1::__compressed_pair_elem.1277" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type { i32 (...)**, %class.scoped_refptr.1278, %"class.blink::WebVector", %"class.base::WaitableEvent"* }
%class.scoped_refptr.1278 = type { %"class.network::SharedURLLoaderFactory"* }
%"class.network::SharedURLLoaderFactory" = type <{ %"class.network::mojom::URLLoaderFactory", %"class.base::RefCounted.1279", [4 x i8] }>
%"class.network::mojom::URLLoaderFactory" = type { i32 (...)** }
%"class.base::RefCounted.1279" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.1287, i8, [7 x i8] }>
%class.scoped_refptr.1287 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.1288", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.1288" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.1289" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.1289" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.1296" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.1297" = type { %"class.std::__1::__compressed_pair.1298" }
%"class.std::__1::__compressed_pair.1298" = type { %"struct.std::__1::__compressed_pair_elem.1299" }
%"struct.std::__1::__compressed_pair_elem.1299" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.std::__1::unique_ptr.1303" = type { %"class.std::__1::__compressed_pair.1304" }
%"class.std::__1::__compressed_pair.1304" = type { %"struct.std::__1::__compressed_pair_elem.1305" }
%"struct.std::__1::__compressed_pair_elem.1305" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.1309" }
%"class.blink::Member.1309" = type { %"class.blink::MemberBase.1310" }
%"class.blink::MemberBase.1310" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2857" }
%"class.mojo::AssociatedRemote.2857" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2858" }
%"class.mojo::internal::AssociatedInterfacePtrState.2858" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2859" }
%"class.std::__1::unique_ptr.2859" = type { %"class.std::__1::__compressed_pair.2860" }
%"class.std::__1::__compressed_pair.2860" = type { %"struct.std::__1::__compressed_pair_elem.2861" }
%"struct.std::__1::__compressed_pair_elem.2861" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.1311" = type { %"class.blink::Member.1312" }
%"class.blink::Member.1312" = type { %"class.blink::MemberBase.1313" }
%"class.blink::MemberBase.1313" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2867" }
%"class.mojo::AssociatedRemote.2867" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2868" }
%"class.mojo::internal::AssociatedInterfacePtrState.2868" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2869" }
%"class.std::__1::unique_ptr.2869" = type { %"class.std::__1::__compressed_pair.2870" }
%"class.std::__1::__compressed_pair.2870" = type { %"struct.std::__1::__compressed_pair_elem.2871" }
%"struct.std::__1::__compressed_pair_elem.2871" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.1314" }
%"class.blink::Member.1314" = type { %"class.blink::MemberBase.1315" }
%"class.blink::MemberBase.1315" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.922", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.2877" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.865" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.2877" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.1316" = type { %"class.blink::Member.1317" }
%"class.blink::Member.1317" = type { %"class.blink::MemberBase.1318" }
%"class.blink::MemberBase.1318" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2880", %"class.blink::Member.922", %"class.mojo::AssociatedReceiver.2881" }
%"class.blink::ThreadState::PrefinalizerRegistration.2880" = type { i8 }
%"class.mojo::AssociatedReceiver.2881" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.2882" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.2882" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.1319" }
%"class.blink::Member.1319" = type { %"class.blink::MemberBase.1320" }
%"class.blink::MemberBase.1320" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2885", %"class.blink::Member.922", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2885" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.751, %"class.std::__1::unique_ptr.865", %"class.base::WeakPtrFactory.2886" }
%"class.base::WeakPtrFactory.2886" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.1321" = type { %"class.blink::Member.1322" }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2889", %"class.blink::Member.922", %"class.mojo::AssociatedReceiver.2890" }
%"class.blink::ThreadState::PrefinalizerRegistration.2889" = type { i8 }
%"class.mojo::AssociatedReceiver.2890" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.2891" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.2891" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.1324" = type { %"class.blink::MemberBase.1325" }
%"class.blink::MemberBase.1325" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.1326" = type { %"class.blink::MemberBase.1327" }
%"class.blink::MemberBase.1327" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.1328" = type { %"class.blink::MemberBase.1329" }
%"class.blink::MemberBase.1329" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.1330" = type { %"class.blink::MemberBase.1331" }
%"class.blink::MemberBase.1331" = type { %"class.blink::HeapHashMap.1332"* }
%"class.blink::HeapHashMap.1332" = type opaque
%"class.mojo::StructPtr.1333" = type { %"class.std::__1::unique_ptr.1334" }
%"class.std::__1::unique_ptr.1334" = type { %"class.std::__1::__compressed_pair.1335" }
%"class.std::__1::__compressed_pair.1335" = type { %"struct.std::__1::__compressed_pair_elem.1336" }
%"struct.std::__1::__compressed_pair_elem.1336" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr.1337" }
%"class.mojo::InlinedStructPtr" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.1337" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.1341" = type { %"class.blink::MemberBase.1342" }
%"class.blink::MemberBase.1342" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.1343" = type { %"class.absl::optional_internal::optional_data.1344" }
%"class.absl::optional_internal::optional_data.1344" = type { %"class.absl::optional_internal::optional_data_base.1345" }
%"class.absl::optional_internal::optional_data_base.1345" = type { %"class.absl::optional_internal::optional_data_dtor_base.1346" }
%"class.absl::optional_internal::optional_data_dtor_base.1346" = type { i8, %union.anon.1347 }
%union.anon.1347 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.614", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.924" }
%"class.std::__1::vector.924" = type { %"class.std::__1::__vector_base.925" }
%"class.std::__1::__vector_base.925" = type { %"struct.std::__1::pair.926"*, %"struct.std::__1::pair.926"*, %"class.std::__1::__compressed_pair.927" }
%"struct.std::__1::pair.926" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.std::__1::__compressed_pair.927" = type { %"struct.std::__1::__compressed_pair_elem.928" }
%"struct.std::__1::__compressed_pair_elem.928" = type { %"struct.std::__1::pair.926"* }
%"class.blink::Member.932" = type { %"class.blink::MemberBase.933" }
%"class.blink::MemberBase.933" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.934" = type { %"class.absl::optional_internal::optional_data.935" }
%"class.absl::optional_internal::optional_data.935" = type { %"class.absl::optional_internal::optional_data_base.936" }
%"class.absl::optional_internal::optional_data_base.936" = type { %"class.absl::optional_internal::optional_data_dtor_base.937" }
%"class.absl::optional_internal::optional_data_dtor_base.937" = type { i8, %union.anon.938 }
%union.anon.938 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.939" = type { %"class.absl::optional_internal::optional_data.940" }
%"class.absl::optional_internal::optional_data.940" = type { %"class.absl::optional_internal::optional_data_base.941" }
%"class.absl::optional_internal::optional_data_base.941" = type { %"class.absl::optional_internal::optional_data_dtor_base.942" }
%"class.absl::optional_internal::optional_data_dtor_base.942" = type { i8, %union.anon.943 }
%union.anon.943 = type { %"class.base::UnguessableToken" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.944" }
%"class.blink::HeapHashSet.944" = type { %"class.WTF::HashSet.947" }
%"class.WTF::HashSet.947" = type { %"class.WTF::HashTable.948" }
%"class.WTF::HashTable.948" = type <{ %"class.blink::WeakMember.950"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.950" = type opaque
%"class.blink::scheduler::WebAgentGroupScheduler" = type { i32 (...)** }
%"class.blink::Member.616" = type { %"class.blink::MemberBase.617" }
%"class.blink::MemberBase.617" = type { %"class.blink::PageAnimator"* }
%"class.blink::PageAnimator" = type <{ %"class.blink::Member.125", i8, i8, i8, [5 x i8], %"class.blink::AnimationClock", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::AnimationClock" = type <{ %"class.base::TimeTicks", i8, [7 x i8], %"class.base::TickClock"*, i32, [4 x i8] }>
%"class.blink::Member.620" = type { %"class.blink::MemberBase.621" }
%"class.blink::MemberBase.621" = type { %"class.blink::AutoscrollController"* }
%"class.blink::AutoscrollController" = type opaque
%"class.blink::Member.622" = type { %"class.blink::MemberBase.623" }
%"class.blink::MemberBase.623" = type { %"class.blink::ChromeClient"* }
%"class.blink::ChromeClient" = type { i32 (...)**, %"class.blink::WeakMember.567", %"struct.blink::PhysicalOffset", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::Member.626" = type { %"class.blink::MemberBase.627" }
%"class.blink::MemberBase.627" = type { %"class.blink::DragCaret"* }
%"class.blink::DragCaret" = type opaque
%"class.blink::Member.628" = type { %"class.blink::MemberBase.629" }
%"class.blink::MemberBase.629" = type { %"class.blink::DragController"* }
%"class.blink::DragController" = type opaque
%"class.blink::Member.630" = type { %"class.blink::MemberBase.631" }
%"class.blink::MemberBase.631" = type { %"class.blink::FocusController"* }
%"class.blink::FocusController" = type opaque
%"class.blink::Member.632" = type { %"class.blink::MemberBase.633" }
%"class.blink::MemberBase.633" = type { %"class.blink::ContextMenuController"* }
%"class.blink::ContextMenuController" = type opaque
%"class.blink::Member.634" = type { %"class.blink::MemberBase.635" }
%"class.blink::MemberBase.635" = type { %"class.blink::PageScaleConstraintsSet"* }
%"class.blink::PageScaleConstraintsSet" = type opaque
%"class.blink::HeapObserverSet.636" = type { i32, [4 x i8], %"class.blink::HeapHashSet.637" }
%"class.blink::HeapHashSet.637" = type { %"class.WTF::HashSet.640" }
%"class.WTF::HashSet.640" = type { %"class.WTF::HashTable.641" }
%"class.WTF::HashTable.641" = type <{ %"class.blink::WeakMember.643"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.643" = type opaque
%"class.blink::Member.644" = type { %"class.blink::MemberBase.645" }
%"class.blink::MemberBase.645" = type { %"class.blink::PointerLockController"* }
%"class.blink::PointerLockController" = type opaque
%"class.blink::Member.646" = type { %"class.blink::MemberBase.647" }
%"class.blink::MemberBase.647" = type { %"class.blink::ScrollingCoordinator"* }
%"class.blink::ScrollingCoordinator" = type opaque
%"class.blink::Member.648" = type { %"class.blink::MemberBase.649" }
%"class.blink::MemberBase.649" = type { %"class.blink::BrowserControls"* }
%"class.blink::BrowserControls" = type opaque
%"class.blink::Member.650" = type { %"class.blink::MemberBase.651" }
%"class.blink::MemberBase.651" = type { %"class.blink::ConsoleMessageStorage"* }
%"class.blink::ConsoleMessageStorage" = type opaque
%"class.blink::Member.652" = type { %"class.blink::MemberBase.653" }
%"class.blink::MemberBase.653" = type { %"class.blink::TopDocumentRootScrollerController"* }
%"class.blink::TopDocumentRootScrollerController" = type opaque
%"class.blink::Member.654" = type { %"class.blink::MemberBase.655" }
%"class.blink::MemberBase.655" = type { %"class.blink::VisualViewport"* }
%"class.blink::VisualViewport" = type opaque
%"class.blink::Member.656" = type { %"class.blink::MemberBase.657" }
%"class.blink::MemberBase.657" = type { %"class.blink::OverscrollController"* }
%"class.blink::OverscrollController" = type opaque
%"class.blink::Member.658" = type { %"class.blink::MemberBase.659" }
%"class.blink::MemberBase.659" = type { %"class.blink::LinkHighlight"* }
%"class.blink::LinkHighlight" = type opaque
%"class.blink::Member.660" = type { %"class.blink::MemberBase.661" }
%"class.blink::MemberBase.661" = type { %"class.blink::SpatialNavigationController"* }
%"class.blink::SpatialNavigationController" = type opaque
%"class.blink::Member.662" = type { %"class.blink::MemberBase.663" }
%"class.blink::MemberBase.663" = type { %"class.blink::PluginData"* }
%"class.blink::PluginData" = type opaque
%"class.blink::Member.664" = type { %"class.blink::MemberBase.665" }
%"class.blink::MemberBase.665" = type { %"class.blink::ValidationMessageClient"* }
%"class.blink::ValidationMessageClient" = type opaque
%"class.blink::InspectorIssueStorage" = type { i32 (...)**, %"class.WTF::Deque.666" }
%"class.WTF::Deque.666" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.669" }
%"class.WTF::VectorBuffer.669" = type { %"class.WTF::VectorBufferBase.670" }
%"class.WTF::VectorBufferBase.670" = type { %"class.std::__1::unique_ptr.671"*, i32, i32 }
%"class.std::__1::unique_ptr.671" = type { %"class.std::__1::__compressed_pair.672" }
%"class.std::__1::__compressed_pair.672" = type { %"struct.std::__1::__compressed_pair_elem.673" }
%"struct.std::__1::__compressed_pair_elem.673" = type { %"class.blink::protocol::Audits::InspectorIssue"* }
%"class.blink::protocol::Audits::InspectorIssue" = type opaque
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.677", i32, [4 x i8] }>
%"class.std::__1::bitset.677" = type { %"class.std::__1::__bitset.678" }
%"class.std::__1::__bitset.678" = type { [25 x i64] }
%"struct.blink::WebWindowFeatures" = type { i32, i8, i32, i8, i32, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"struct.blink::WebImpression" }
%"struct.blink::WebImpression" = type { %"class.blink::WebSecurityOrigin", %"class.absl::optional.679", i64, %"class.absl::optional.684", i64 }
%"class.absl::optional.679" = type { %"class.absl::optional_internal::optional_data.680" }
%"class.absl::optional_internal::optional_data.680" = type { %"class.absl::optional_internal::optional_data_base.681" }
%"class.absl::optional_internal::optional_data_base.681" = type { %"class.absl::optional_internal::optional_data_dtor_base.682" }
%"class.absl::optional_internal::optional_data_dtor_base.682" = type { i8, %union.anon.683 }
%union.anon.683 = type { %"class.blink::WebSecurityOrigin" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.689" }
%"class.std::__1::unique_ptr.689" = type { %"class.std::__1::__compressed_pair.690" }
%"class.std::__1::__compressed_pair.690" = type { %"struct.std::__1::__compressed_pair_elem.691" }
%"struct.std::__1::__compressed_pair_elem.691" = type { %"class.blink::mojom::blink::PageLifecycleState"* }
%"class.blink::mojom::blink::PageLifecycleState" = type <{ i8, [3 x i8], i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.blink::HeapHashSet.695" = type { %"class.WTF::HashSet.698" }
%"class.WTF::HashSet.698" = type { %"class.WTF::HashTable.699" }
%"class.WTF::HashTable.699" = type <{ %"class.blink::WeakMember.701"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.701" = type opaque
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::unique_ptr.703" = type { %"class.std::__1::__compressed_pair.704" }
%"class.std::__1::__compressed_pair.704" = type { %"struct.std::__1::__compressed_pair_elem.705" }
%"struct.std::__1::__compressed_pair_elem.705" = type { %"class.blink::PageScheduler"* }
%"class.blink::PageScheduler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.709" = type { %"class.std::__1::__compressed_pair.710" }
%"class.std::__1::__compressed_pair.710" = type { %"struct.std::__1::__compressed_pair_elem.711" }
%"struct.std::__1::__compressed_pair_elem.711" = type { %"class.blink::MediaFeatureOverrides"* }
%"class.blink::MediaFeatureOverrides" = type opaque
%"class.blink::mojom::blink::TextAutosizerPageInfo" = type { i32, i32, float }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ContextFeaturesClient"* }
%"class.blink::ContextFeaturesClient" = type { i32 (...)** }
%"class.blink::Member.128" = type { %"class.blink::MemberBase.129" }
%"class.blink::MemberBase.129" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.130" }
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"class.blink::KURL"* }
%"class.blink::Member.142" = type { %"class.blink::MemberBase.143" }
%"class.blink::MemberBase.143" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.144" = type { %"class.blink::MemberBase.145" }
%"class.blink::MemberBase.145" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.61" = type { %"class.blink::MemberBase.62" }
%"class.blink::MemberBase.62" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.63", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.65, %"class.WTF::Vector.66", %"class.WTF::Vector.66", %"class.blink::Member", %"class.blink::Member.71", %"class.blink::HeapHashSet", %"class.blink::Member.9", %"class.WTF::HashSet.79", %"class.WTF::TextPosition", %"class.blink::Member.83", %"class.blink::HeapVector.85", %"class.blink::Member.92" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.63" = type { %"class.blink::MemberBase.64" }
%"class.blink::MemberBase.64" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.65 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.66" = type { %"class.WTF::VectorBuffer.67" }
%"class.WTF::VectorBuffer.67" = type { %"class.WTF::VectorBufferBase.68" }
%"class.WTF::VectorBufferBase.68" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.71" = type { %"class.blink::MemberBase.72" }
%"class.blink::MemberBase.72" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.73" }
%"class.blink::Member.73" = type { %"class.blink::MemberBase.74" }
%"class.blink::MemberBase.74" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.77" }
%"class.WTF::HashTable.77" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.2" }
%"class.WTF::HashSet.79" = type { %"class.WTF::HashTable.80" }
%"class.WTF::HashTable.80" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.83" = type { %"class.blink::MemberBase.84" }
%"class.blink::MemberBase.84" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.85" = type { %"class.WTF::Vector.88" }
%"class.WTF::Vector.88" = type { %"class.WTF::VectorBuffer.89" }
%"class.WTF::VectorBuffer.89" = type { %"class.WTF::VectorBufferBase.90" }
%"class.WTF::VectorBufferBase.90" = type { %"class.blink::Member.71"*, i32, i32 }
%"class.blink::Member.92" = type { %"class.blink::MemberBase.93" }
%"class.blink::MemberBase.93" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.146 }
%class.scoped_refptr.146 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.147" = type { %"class.WTF::VectorBuffer.148" }
%"class.WTF::VectorBuffer.148" = type { %"class.WTF::VectorBufferBase.149" }
%"class.WTF::VectorBufferBase.149" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.150 }
%class.scoped_refptr.150 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.151", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.151" = type { %"class.base::RefCounted.152" }
%"class.base::RefCounted.152" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.155" }
%"class.blink::HeapHashMap.155" = type { %"class.WTF::HashMap.158" }
%"class.WTF::HashMap.158" = type { %"class.WTF::HashTable.159" }
%"class.WTF::HashTable.159" = type <{ %"struct.WTF::KeyValuePair.161"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.161" = type { %"class.blink::WeakMember.162", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.162" = type { %"class.blink::MemberBase.163" }
%"class.blink::MemberBase.163" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.357" = type { %"class.blink::MemberBase.358" }
%"class.blink::MemberBase.358" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.9", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member", %"class.blink::Member", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.359" }
%"class.blink::HeapHashMap.359" = type { %"class.WTF::HashMap.362" }
%"class.WTF::HashMap.362" = type { %"class.WTF::HashTable.363" }
%"class.WTF::HashTable.363" = type <{ %"struct.WTF::KeyValuePair.365"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.365" = type opaque
%"class.blink::Member.366" = type { %"class.blink::MemberBase.367" }
%"class.blink::MemberBase.367" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.368" = type { %"class.WTF::HashSet.371" }
%"class.WTF::HashSet.371" = type { %"class.WTF::HashTable.372" }
%"class.WTF::HashTable.372" = type <{ %"class.blink::WeakMember.374"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.374" = type opaque
%"class.blink::HeapHashSet.375" = type { %"class.WTF::HashSet.378" }
%"class.WTF::HashSet.378" = type { %"class.WTF::HashTable.379" }
%"class.WTF::HashTable.379" = type <{ %"class.blink::WeakMember.381"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.381" = type opaque
%"class.blink::Member.382" = type { %"class.blink::MemberBase.383" }
%"class.blink::MemberBase.383" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.384" = type { %"class.blink::MemberBase.385" }
%"class.blink::MemberBase.385" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.386" = type { %"class.blink::MemberBase.387" }
%"class.blink::MemberBase.387" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.1", %"class.blink::HeapVector.55" }
%"class.blink::Member.388" = type { %"class.blink::MemberBase.389" }
%"class.blink::MemberBase.389" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.390" = type { %"class.blink::MemberBase.391" }
%"class.blink::MemberBase.391" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.392" = type { %"class.WTF::HashMap.395" }
%"class.WTF::HashMap.395" = type { %"class.WTF::HashTable.396" }
%"class.WTF::HashTable.396" = type <{ %"struct.WTF::KeyValuePair.398"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.398" = type opaque
%"class.WTF::Vector.399" = type { %"class.WTF::VectorBuffer.400" }
%"class.WTF::VectorBuffer.400" = type { %"class.WTF::VectorBufferBase.401" }
%"class.WTF::VectorBufferBase.401" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.404" = type { %"class.blink::MemberBase.405" }
%"class.blink::MemberBase.405" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type { i32 (...)** }
%"class.blink::Member.408" = type { %"class.blink::MemberBase.409" }
%"class.blink::MemberBase.409" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.21" = type { %"class.blink::MemberBase.22" }
%"class.blink::MemberBase.22" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.24" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.24" = type { %"class.blink::MemberBase.25" }
%"class.blink::MemberBase.25" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.28", %"class.blink::Member.30", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.28" = type { %"class.WTF::SingleThreadedBitField.29" }
%"class.WTF::SingleThreadedBitField.29" = type { i32 }
%"class.blink::Member.30" = type { %"class.blink::MemberBase.31" }
%"class.blink::MemberBase.31" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.34 }
%class.scoped_refptr.34 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.35", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.35" = type { %"class.base::RefCounted.36" }
%"class.base::RefCounted.36" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.410" = type { %"class.blink::MemberBase.411" }
%"class.blink::MemberBase.411" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.412" = type { %"class.WTF::Vector.415" }
%"class.WTF::Vector.415" = type { %"class.WTF::VectorBuffer.416" }
%"class.WTF::VectorBuffer.416" = type { %"class.WTF::VectorBufferBase.417" }
%"class.WTF::VectorBufferBase.417" = type { %"class.blink::Member.418"*, i32, i32 }
%"class.blink::Member.418" = type opaque
%"class.std::__1::unique_ptr.420" = type { %"class.std::__1::__compressed_pair.421" }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.422" }
%"struct.std::__1::__compressed_pair_elem.422" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.426" = type { %"class.WTF::HashSet.429" }
%"class.WTF::HashSet.429" = type { %"class.WTF::HashTable.430" }
%"class.WTF::HashTable.430" = type <{ %"class.blink::WeakMember.432"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.432" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.433", i32, [4 x i8] }>
%"class.WTF::Vector.433" = type { %"class.WTF::VectorBuffer.434" }
%"class.WTF::VectorBuffer.434" = type { %"class.WTF::VectorBufferBase.435" }
%"class.WTF::VectorBufferBase.435" = type { %"struct.std::__1::pair.436"*, i32, i32 }
%"struct.std::__1::pair.436" = type opaque
%"class.blink::Member.439" = type { %"class.blink::MemberBase.440" }
%"class.blink::MemberBase.440" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.441" = type { %"class.WTF::VectorBuffer.442" }
%"class.WTF::VectorBuffer.442" = type { %"class.WTF::VectorBufferBase.443" }
%"class.WTF::VectorBufferBase.443" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"class.std::__1::unique_ptr.446" = type { %"class.std::__1::__compressed_pair.447" }
%"class.std::__1::__compressed_pair.447" = type { %"struct.std::__1::__compressed_pair_elem.448" }
%"struct.std::__1::__compressed_pair_elem.448" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.40" }
%"class.WTF::Vector.40" = type { %"class.WTF::VectorBuffer.41" }
%"class.WTF::VectorBuffer.41" = type { %"class.WTF::VectorBufferBase.42" }
%"class.WTF::VectorBufferBase.42" = type { %"class.blink::Member.21"*, i32, i32 }
%"class.blink::HeapVector.452" = type { %"class.WTF::Vector.455" }
%"class.WTF::Vector.455" = type { %"class.WTF::VectorBuffer.456" }
%"class.WTF::VectorBuffer.456" = type { %"class.WTF::VectorBufferBase.457" }
%"class.WTF::VectorBufferBase.457" = type { %"class.blink::Member.458"*, i32, i32 }
%"class.blink::Member.458" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.9" }
%"class.blink::Member.460" = type { %"class.blink::MemberBase.461" }
%"class.blink::MemberBase.461" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.462" = type { %"class.blink::MemberBase.463" }
%"class.blink::MemberBase.463" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.464" = type { %"class.blink::MemberBase.465" }
%"class.blink::MemberBase.465" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.466" = type { %"class.blink::MemberBase.467" }
%"class.blink::MemberBase.467" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.468" = type { %"class.blink::MemberBase.469" }
%"class.blink::MemberBase.469" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.470" = type { %"class.WTF::HashTable.471" }
%"class.WTF::HashTable.471" = type <{ %"struct.WTF::KeyValuePair.474"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.474" = type opaque
%"class.blink::Member.475" = type { %"class.blink::MemberBase.476" }
%"class.blink::MemberBase.476" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.477" = type { %"class.blink::MemberBase.478" }
%"class.blink::MemberBase.478" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.479" = type { %"class.blink::MemberBase.480" }
%"class.blink::MemberBase.480" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.481" = type { %"class.blink::MemberBase.482" }
%"class.blink::MemberBase.482" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.356", { i64, i64 } }
%"class.blink::WeakMember.356" = type { %"class.blink::MemberBase.10" }
%"class.blink::HeapHashSet.483" = type { %"class.WTF::HashSet.486" }
%"class.WTF::HashSet.486" = type { %"class.WTF::HashTable.487" }
%"class.WTF::HashTable.487" = type <{ %"class.blink::Member.489"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.489" = type opaque
%"class.blink::Member.490" = type { %"class.blink::MemberBase.491" }
%"class.blink::MemberBase.491" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.492" = type { %"class.blink::MemberBase.493" }
%"class.blink::MemberBase.493" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.494" = type { %"class.blink::MemberBase.495" }
%"class.blink::MemberBase.495" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.496" = type { %"class.blink::MemberBase.497" }
%"class.blink::MemberBase.497" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.498" = type { %"class.blink::MemberBase.499" }
%"class.blink::MemberBase.499" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.500" = type { %"class.std::__1::__compressed_pair.501" }
%"class.std::__1::__compressed_pair.501" = type { %"struct.std::__1::__compressed_pair_elem.502" }
%"struct.std::__1::__compressed_pair_elem.502" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.506" = type { %"class.std::__1::__compressed_pair.507" }
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.508" }
%"struct.std::__1::__compressed_pair_elem.508" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.79", %"class.WTF::HashSet.79", %"class.WTF::HashSet.79", %"class.WTF::HashSet.79", %"class.WTF::HashSet.79", %"class.WTF::HashSet.79", i32, [4 x i8], %"class.WTF::HashMap.509", %"class.WTF::HashMap.509", %"class.WTF::HashMap.509", %"class.WTF::HashMap.509", %"class.WTF::HashMap.509", %"class.WTF::HashMap.509", %"class.WTF::HashMap.509", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.509" = type { %"class.WTF::HashTable.510" }
%"class.WTF::HashTable.510" = type <{ %"struct.WTF::KeyValuePair.513"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.513" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.517" = type { %"class.blink::MemberBase.518" }
%"class.blink::MemberBase.518" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.519" = type { %"class.blink::MemberBase.520" }
%"class.blink::MemberBase.520" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.521" = type { %"class.blink::MemberBase.522" }
%"class.blink::MemberBase.522" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.523" = type { %"class.blink::MemberBase.524" }
%"class.blink::MemberBase.524" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.525" = type { %"class.WTF::VectorBuffer.526" }
%"class.WTF::VectorBuffer.526" = type { %"class.WTF::VectorBufferBase.527" }
%"class.WTF::VectorBufferBase.527" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.530" = type { %"class.WTF::HashMap.533" }
%"class.WTF::HashMap.533" = type { %"class.WTF::HashTable.534" }
%"class.WTF::HashTable.534" = type <{ %"struct.WTF::KeyValuePair.536"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.536" = type opaque
%"class.blink::Member.537" = type { %"class.blink::MemberBase.538" }
%"class.blink::MemberBase.538" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.539" = type { %"class.std::__1::__compressed_pair.540" }
%"class.std::__1::__compressed_pair.540" = type { %"struct.std::__1::__compressed_pair_elem.541" }
%"struct.std::__1::__compressed_pair_elem.541" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.545" = type { %"class.blink::MemberBase.546" }
%"class.blink::MemberBase.546" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.547" = type { %"class.blink::MemberBase.548" }
%"class.blink::MemberBase.548" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.549" = type { %"class.WTF::HashMap.552" }
%"class.WTF::HashMap.552" = type { %"class.WTF::HashTable.553" }
%"class.WTF::HashTable.553" = type <{ %"struct.WTF::KeyValuePair.555"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.555" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.556" }
%"class.blink::HeapHashSet.556" = type { %"class.WTF::HashSet.559" }
%"class.WTF::HashSet.559" = type { %"class.WTF::HashTable.560" }
%"class.WTF::HashTable.560" = type <{ %"class.blink::WeakMember.562"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.562" = type opaque
%"class.blink::Member.563" = type { %"class.blink::MemberBase.564" }
%"class.blink::MemberBase.564" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.565" = type { %"class.blink::MemberBase.566" }
%"class.blink::MemberBase.566" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.9", %"class.blink::HeapHashSet.572", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.579", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.572" = type { %"class.WTF::HashSet.575" }
%"class.WTF::HashSet.575" = type { %"class.WTF::HashTable.576" }
%"class.WTF::HashTable.576" = type <{ %"class.blink::Member.578"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.578" = type opaque
%"class.blink::HeapTaskRunnerTimer.579" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.580", { i64, i64 } }
%"class.blink::WeakMember.580" = type { %"class.blink::MemberBase.566" }
%"class.blink::WeakMember.567" = type { %"class.blink::MemberBase" }
%"class.blink::Member.568" = type { %"class.blink::MemberBase.569" }
%"class.blink::MemberBase.569" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.11" = type { %"class.blink::MemberBase.12" }
%"class.blink::MemberBase.12" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.17" }
%"class.blink::Member.17" = type { %"class.blink::MemberBase.18" }
%"class.blink::MemberBase.18" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.21", i32, %"class.blink::HeapVector" }
%"class.blink::Member.44" = type { %"class.blink::MemberBase.45" }
%"class.blink::MemberBase.45" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.46" = type { %"class.blink::MemberBase.47" }
%"class.blink::MemberBase.47" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.48" = type { %"class.blink::MemberBase.49" }
%"class.blink::MemberBase.49" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.50" }
%"class.blink::Member.50" = type { %"class.blink::MemberBase.51" }
%"class.blink::MemberBase.51" = type { %"class.blink::HeapHashMap.52"* }
%"class.blink::HeapHashMap.52" = type opaque
%"class.blink::Member.53" = type { %"class.blink::MemberBase.54" }
%"class.blink::MemberBase.54" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.55" = type { %"class.WTF::Vector.58" }
%"class.WTF::Vector.58" = type { %"class.WTF::VectorBuffer.59" }
%"class.WTF::VectorBuffer.59" = type { %"class.WTF::VectorBufferBase.60" }
%"class.WTF::VectorBufferBase.60" = type { %"class.blink::Member.61"*, i32, i32 }
%"class.blink::Member.3" = type { %"class.blink::MemberBase.4" }
%"class.blink::MemberBase.4" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::CreateMarkupOptions" = type <{ %"class.blink::Node"*, i32, i8, i8, i8, i8 }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::StyledMarkupSerializer" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", %"class.blink::Node"*, %"class.blink::CreateMarkupOptions", %"class.blink::Node"*, %"class.blink::EditingStyle"* }
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.3001", %"class.blink::Member.3003", %"class.blink::Member.3005", %"class.blink::Member.3024", %"class.blink::Member.3026" }
%"class.blink::Member.3001" = type { %"class.blink::MemberBase.3002" }
%"class.blink::MemberBase.3002" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr.1447 }
%"class.blink::Member.3003" = type { %"class.blink::MemberBase.3004" }
%"class.blink::MemberBase.3004" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::NodeListsNodeData" = type opaque
%"class.blink::Member.3005" = type { %"class.blink::MemberBase.3006" }
%"class.blink::MemberBase.3006" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.3009", %"class.blink::HeapHashSet.3018" }
%"class.blink::HeapVector.3009" = type { %"class.WTF::Vector.3012" }
%"class.WTF::Vector.3012" = type { %"class.WTF::VectorBuffer.3013" }
%"class.WTF::VectorBuffer.3013" = type { %"class.WTF::VectorBufferBase.3014" }
%"class.WTF::VectorBufferBase.3014" = type { %"class.blink::Member.3015"*, i32, i32 }
%"class.blink::Member.3015" = type { %"class.blink::MemberBase.3016" }
%"class.blink::MemberBase.3016" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.3018" = type { %"class.WTF::HashSet.3021" }
%"class.WTF::HashSet.3021" = type { %"class.WTF::HashTable.3022" }
%"class.WTF::HashTable.3022" = type <{ %"class.blink::Member.3015"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.3024" = type { %"class.blink::MemberBase.3025" }
%"class.blink::MemberBase.3025" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.blink::Member.3026" = type { %"class.blink::MemberBase.3027" }
%"class.blink::MemberBase.3027" = type { %"class.blink::HeapHashSet.3028"* }
%"class.blink::HeapHashSet.3028" = type opaque
%"class.blink::PositionTemplate.2744" = type { %"class.blink::Member", i32, i32 }
%"class.blink::StyledMarkupSerializer.2745" = type { %"class.blink::PositionTemplate.2744", %"class.blink::PositionTemplate.2744", %"class.blink::Node"*, %"class.blink::CreateMarkupOptions", %"class.blink::Node"*, %"class.blink::EditingStyle"* }
%"class.blink::DocumentFragment" = type { %"class.blink::ContainerNode" }
%"class.blink::HeapVector.2941" = type { %"class.WTF::Vector.2944" }
%"class.WTF::Vector.2944" = type { %"class.WTF::VectorBuffer.2945" }
%"class.WTF::VectorBuffer.2945" = type { %"class.WTF::VectorBufferBase.2946" }
%"class.WTF::VectorBufferBase.2946" = type { %"class.blink::AttributeChange"*, i32, i32 }
%"class.blink::AttributeChange" = type { %"class.blink::Member.21", %"class.blink::QualifiedName", %"class.WTF::String" }
%"class.blink::HTMLBodyElement" = type { %"class.blink::HTMLElement" }
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.30", %"class.WTF::Vector.2948" }
%"class.WTF::Vector.2948" = type { %"class.WTF::VectorBuffer.2949" }
%"class.WTF::VectorBuffer.2949" = type { %"class.WTF::VectorBufferBase.2950", [64 x i8] }
%"class.WTF::VectorBufferBase.2950" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.blink::DummyExceptionStateForTesting" = type { %"class.blink::ExceptionState" }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.2798" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.2798" = type { %"class.v8::TracedReference.2799" }
%"class.v8::TracedReference.2799" = type { %"class.v8::BasicTracedReference.2800" }
%"class.v8::BasicTracedReference.2800" = type { %"class.v8::TracedReferenceBase" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.2746, i32, i8, i8, [2 x i8] }>
%union.anon.2746 = type { %"class.WTF::Vector.2747" }
%"class.WTF::Vector.2747" = type { %"class.WTF::VectorBuffer.2748" }
%"class.WTF::VectorBuffer.2748" = type { %"class.WTF::VectorBufferBase.2749", [16 x i8] }
%"class.blink::DocumentInit" = type <{ i32, i8, i8, [2 x i8], %"class.WTF::String", %"class.blink::LocalDOMWindow"*, %"class.blink::ExecutionContext"*, %"class.blink::KURL", %"class.blink::Document"*, i8, [7 x i8], %"class.blink::KURL", i64, i8, [7 x i8] }>
%"class.blink::EphemeralRangeTemplate" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate" }
%"class.blink::Comment" = type { %"class.blink::CharacterData" }
%"class.blink::CharacterData" = type { %"class.blink::Node", i8, %"class.blink::ParkableString", %"class.WTF::String" }
%"class.blink::ParkableString" = type { %class.scoped_refptr.2757 }
%class.scoped_refptr.2757 = type { %"class.blink::ParkableStringImpl"* }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.2758", %"class.WTF::String", %"class.std::__1::unique_ptr.2760" }
%"class.WTF::RefCounted.2758" = type { %"class.base::RefCounted.2759" }
%"class.base::RefCounted.2759" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.2760" = type { %"class.std::__1::__compressed_pair.2761" }
%"class.std::__1::__compressed_pair.2761" = type { %"struct.std::__1::__compressed_pair_elem.2762" }
%"struct.std::__1::__compressed_pair_elem.2762" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.2763", %"class.std::__1::unique_ptr.2773", %"class.WTF::Vector.2779", i8, i32 }
%"class.std::__1::unique_ptr.2763" = type { %"class.std::__1::__compressed_pair.2764" }
%"class.std::__1::__compressed_pair.2764" = type { %"struct.std::__1::__compressed_pair_elem.2765" }
%"struct.std::__1::__compressed_pair_elem.2765" = type { %"class.WTF::Vector.2766"* }
%"class.std::__1::unique_ptr.2773" = type { %"class.std::__1::__compressed_pair.2774" }
%"class.std::__1::__compressed_pair.2774" = type { %"struct.std::__1::__compressed_pair_elem.2775" }
%"struct.std::__1::__compressed_pair_elem.2775" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.v8::internal::Isolate" = type opaque
%"class.v8::Value" = type { i8 }
%"class.blink::HeapHashSet.2786" = type { %"class.WTF::HashSet.2789" }
%"class.WTF::HashSet.2789" = type { %"class.WTF::HashTable.2790" }
%"class.WTF::HashTable.2790" = type <{ %"class.blink::Member.2792"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2792" = type { %"class.blink::MemberBase.2938" }
%"class.blink::MemberBase.2938" = type { %"class.blink::ShadowRoot"* }
%"class.blink::ShadowRoot" = type <{ %"class.blink::DocumentFragment", %"class.blink::TreeScope", %"class.blink::Member.386", %"class.blink::Member.2939", i32, [4 x i8] }>
%"class.blink::Member.2939" = type { %"class.blink::MemberBase.2940" }
%"class.blink::MemberBase.2940" = type { %"class.blink::SlotAssignment"* }
%"class.blink::SlotAssignment" = type opaque
%"class.blink::MarkupAccumulator" = type <{ i32 (...)**, %"class.blink::MarkupFormatter", %"class.WTF::StringBuilder", i32, [4 x i8], %"class.blink::HeapHashSet.2786", %"class.WTF::Vector.2793", i32, [4 x i8] }>
%"class.blink::MarkupFormatter" = type { i32, i32 }
%"class.WTF::Vector.2793" = type { %"class.WTF::VectorBuffer.2794" }
%"class.WTF::VectorBuffer.2794" = type { %"class.WTF::VectorBufferBase.2795" }
%"class.WTF::VectorBufferBase.2795" = type { %"class.blink::MarkupAccumulator::NamespaceContext"*, i32, i32 }
%"class.blink::MarkupAccumulator::NamespaceContext" = type opaque
%"class.blink::Text" = type { %"class.blink::CharacterData" }
%"class.blink::HTMLBRElement" = type { %"class.blink::HTMLElement" }
%"class.blink::HTMLSpanElement" = type { %"class.blink::HTMLElement" }
%"class.absl::optional.2803" = type { %"class.absl::optional_internal::optional_data.2804" }
%"class.absl::optional_internal::optional_data.2804" = type { %"class.absl::optional_internal::optional_data_base.2805" }
%"class.absl::optional_internal::optional_data_base.2805" = type { %"class.absl::optional_internal::optional_data_dtor_base.2806" }
%"class.absl::optional_internal::optional_data_dtor_base.2806" = type { i8, %union.anon.2807 }
%union.anon.2807 = type { %"class.blink::RuntimeCallTimerScope" }
%"class.blink::RuntimeCallTimerScope" = type { %"class.blink::RuntimeCallStats"*, %"class.blink::RuntimeCallTimer" }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::ChildListMutationAccumulator" = type <{ %"class.blink::Member", %"class.blink::HeapVector.2810", %"class.blink::HeapVector.2810", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.2817", i32, [4 x i8] }>
%"class.blink::HeapVector.2810" = type { %"class.WTF::Vector.2813" }
%"class.WTF::Vector.2813" = type { %"class.WTF::VectorBuffer.2814" }
%"class.WTF::VectorBuffer.2814" = type { %"class.WTF::VectorBufferBase.2815" }
%"class.WTF::VectorBufferBase.2815" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::Member.2817" = type { %"class.blink::MemberBase.2818" }
%"class.blink::MemberBase.2818" = type { %"class.blink::MutationObserverInterestGroup"* }
%"class.blink::MutationObserverInterestGroup" = type opaque
%"class.blink::CreateMarkupOptions::Builder" = type { %"class.blink::CreateMarkupOptions" }
%"class.blink::LocalFrameClient" = type { %"class.blink::FrameClient" }
%"class.base::DefaultTickClock" = type { %"class.base::TickClock" }
%"class.blink::SVGURLReferenceResolver" = type <{ %"class.WTF::String"*, %"class.blink::Document"*, %"class.blink::KURL", i8, [7 x i8] }>
%"class.blink::SVGURIReference" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.3153" }
%"class.blink::Member.3153" = type { %"class.blink::MemberBase.3154" }
%"class.blink::MemberBase.3154" = type { %"class.blink::SVGAnimatedHref"* }
%"class.blink::SVGAnimatedHref" = type opaque
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapHashTableBacking" = type { i8 }
%"class.WTF::Vector.2752" = type { %"class.WTF::VectorBuffer.2753" }
%"class.WTF::VectorBuffer.2753" = type { %"class.WTF::VectorBufferBase.2754", [16 x i8] }
%"class.WTF::VectorBufferBase.2754" = type { i16*, i32, i32 }

$_ZN5blink21CreateMarkupAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEE12CreateMarkupERKNS_16PositionTemplateIS3_EES8_RKNS_19CreateMarkupOptionsE = comdat any

$_ZN5blink21CreateMarkupAlgorithmINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE12CreateMarkupERKNS_16PositionTemplateIS3_EES8_RKNS_19CreateMarkupOptionsE = comdat any

$_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE = comdat any

$_ZZN7logging15CheckOpValueStrIsEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS1_14remove_pointerIS3_E4typeEEE5valueEPcE4typeES5_ENUlRNS1_13basic_ostreamIcNS1_11char_traitsIcEEEEPKvE_8__invokeESG_SI_ = comdat any

$_ZN5blink15AttributeChange5ApplyEv = comdat any

$_ZN3WTF15ConstructTraitsIN5blink15AttributeChangeENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_ = comdat any

$_ZN3WTF6VectorIN5blink15AttributeChangeELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink15AttributeChangeELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink15AttributeChangeELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_15AttributeChangeEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_15AttributeChangeEN3WTF12VectorTraitsIS2_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_15AttributeChangeEN3WTF12VectorTraitsIS1_EEE14AllocateObjectIS5_EEPvm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_15AttributeChangeEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17HeapVectorBackingINS_15AttributeChangeEN3WTF12VectorTraitsIS3_EEEEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_15AttributeChangeEN3WTF12VectorTraitsIS2_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF11VectorMoverILb0EN5blink15AttributeChangeENS1_13HeapAllocatorEE4MoveEPS2_S5_S5_b = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_10ShadowRootEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE22ReserveCapacityForSizeEj = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_10ShadowRootEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_10ShadowRootEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10ShadowRootEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10ShadowRootEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10ShadowRootEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_10ShadowRootEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_10ShadowRootEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKS4_SG_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_10ShadowRootEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_ = comdat any

$_ZN3WTF13StringBuilder6AppendEh = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_ = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm = comdat any

$_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_ = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

$_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_5FrameEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_5FrameEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_5FrameEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_5FrameEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_11FrameClientEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_11FrameClientEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_11FrameClientEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_11FrameClientEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_14LocalFrameViewEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_14LocalFrameViewEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_14LocalFrameViewEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_14LocalFrameViewEE7GetNameEPKv = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_15HTMLBodyElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_ = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_8DocumentEE4CallIJRNS_12DocumentInitEEEEPS1_DpOT_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_7ElementEE4CallIJRKNS_13QualifiedNameERPNS_8DocumentEEEEPS1_DpOT_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_13HTMLBRElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_ = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_15AttributeChangeEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_15AttributeChangeEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10ShadowRootEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10ShadowRootEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_5FrameEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_5FrameEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_11FrameClientEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_11FrameClientEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_14LocalFrameViewEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_14LocalFrameViewEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

@_ZN3WTF14g_empty_stringE = external local_unnamed_addr constant %"class.WTF::String"*, align 8
@.str = private unnamed_addr constant [44 x i8] c"start_position.CompareTo(end_position) <= 0\00", align 1
@.str.1 = private unnamed_addr constant [75 x i8] c"../../third_party/blink/renderer/core/editing/serializers/serialization.cc\00", align 1
@_ZN5blinkL18kFragmentMarkerTagE = internal constant [23 x i8] c"webkit-fragment-marker\00", align 16
@.str.2 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.3 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@_ZN5blink10html_names10kClassAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.5 = private unnamed_addr constant [26 x i8] c"Apple-interchange-newline\00", align 1
@.str.6 = private unnamed_addr constant [91 x i8] c"The provided markup is invalid XML, and therefore cannot be inserted into an XML document.\00", align 1
@.str.7 = private unnamed_addr constant [10 x i8] c"text/html\00", align 1
@.str.8 = private unnamed_addr constant [11 x i8] c"text/plain\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.10 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.11 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.12 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.13 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.14 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.15 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@.str.16 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.17 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_15AttributeChangeEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_15AttributeChangeEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17HeapVectorBackingINS_15AttributeChangeEN3WTF12VectorTraitsIS3_EEEEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_15AttributeChangeEN3WTF12VectorTraitsIS2_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_15AttributeChangeEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.18 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_15AttributeChangeENS_12VectorTraitsIS3_EEEEEEPKcv = private unnamed_addr constant [140 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::AttributeChange, WTF::VectorTraits<blink::AttributeChange> >]\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink11g_null_nameE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names6kTdTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kThTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kTbodyTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kTrTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kTableTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZTVN5blink29DummyExceptionStateForTestingE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZTVN5blink14ExceptionStateE = external unnamed_addr constant { [9 x i8*] }, align 8
@.str.19 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.20 = private unnamed_addr constant [39 x i8] c"!static_cast<int>( new_capacity >> 31)\00", align 1
@.str.21 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@_ZN5blink11ThreadState26main_thread_state_storage_E = external global [0 x i8], align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10ShadowRootEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10ShadowRootEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10ShadowRootEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10ShadowRootEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_10ShadowRootEEES6_NS_17IdentityExtractorENS_10MemberHashIS5_EENS_10HashTraitsIS6_EESB_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [346 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::Member<blink::ShadowRoot>, blink::Member<blink::ShadowRoot>, WTF::IdentityExtractor, WTF::MemberHash<blink::ShadowRoot>, WTF::HashTraits<blink::Member<blink::ShadowRoot> >, WTF::HashTraits<blink::Member<blink::ShadowRoot> >, blink::HeapAllocator> >]\00", align 1
@.str.22 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.23 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.24 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv = private unnamed_addr constant [56 x i8] c"const char *WTF::GetStringWithTypeName() [T = char16_t]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase36is_blink_runtime_call_stats_enabled_E = external local_unnamed_addr global i8, align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink5FrameEEEPKcv = private unnamed_addr constant [60 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::Frame]\00", align 1
@_ZZN5blink11GCInfoTraitINS_5FrameEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_5FrameEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_5FrameEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_5FrameEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_5FrameEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11FrameClientEEEPKcv = private unnamed_addr constant [66 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::FrameClient]\00", align 1
@_ZZN5blink11GCInfoTraitINS_11FrameClientEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_11FrameClientEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_11FrameClientEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_11FrameClientEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_11FrameClientEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink21EmptyLocalFrameClientE = external unnamed_addr constant { [100 x i8*] }, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14LocalFrameViewEEEPKcv = private unnamed_addr constant [69 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::LocalFrameView]\00", align 1
@_ZZN5blink11GCInfoTraitINS_14LocalFrameViewEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_14LocalFrameViewEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_14LocalFrameViewEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_14LocalFrameViewEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_14LocalFrameViewEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink10html_names9kStyleTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink9svg_names9kStyleTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZN5blink9svg_names7kUseTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@.str.25 = private unnamed_addr constant [5 x i8] c"data\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.27 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@_ZN5blink10html_names7kDivTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names8kBodyTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names8kHTMLTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names12kTemplateTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names8kHeadTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names5kATagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"class.WTF::StringImpl"* @_ZN5blink21CreateMarkupAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEE12CreateMarkupERKNS_16PositionTemplateIS3_EES8_RKNS_19CreateMarkupOptionsE(%"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::CreateMarkupOptions"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca i16, align 2
  %6 = alloca %"class.blink::PositionTemplate", align 8
  %7 = alloca %"class.blink::PositionTemplate", align 8
  %8 = alloca %"class.blink::PositionTemplate", align 8
  %9 = alloca %"class.logging::CheckOpResult", align 8
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = alloca %"class.blink::StyledMarkupSerializer", align 8
  %12 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::Node"*, %"class.blink::Node"** %12, align 8
  %14 = icmp eq %"class.blink::Node"* %13, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.blink::Node"*, %"class.blink::Node"** %16, align 8
  %18 = icmp eq %"class.blink::Node"* %17, null
  br i1 %18, label %19, label %41

19:                                               ; preds = %15, %3
  %20 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %21 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %20, i64 0, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %22, null
  br i1 %23, label %303, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i32 %26, 2
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %303

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i33
  %33 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %32, i33 1) #9
  %34 = extractvalue { i33, i1 } %33, 1
  %35 = extractvalue { i33, i1 } %33, 0
  %36 = icmp slt i33 %35, 0
  %37 = or i1 %34, %36
  br i1 %37, label %38, label %39, !prof !2

38:                                               ; preds = %29
  tail call void @llvm.trap() #9
  unreachable

39:                                               ; preds = %29
  %40 = trunc i33 %35 to i32
  store i32 %40, i32* %30, align 4
  br label %303

41:                                               ; preds = %15
  %42 = bitcast %"class.logging::CheckOpResult"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #9
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %9, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %43, align 8
  %44 = tail call signext i16 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE9CompareToERKS4_(%"class.blink::PositionTemplate"* %0, %"class.blink::PositionTemplate"* dereferenceable(16) %1) #9
  %45 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45)
  %46 = bitcast i16* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %46)
  store i16 %44, i16* %5, align 2
  %47 = icmp sgt i16 %44, 0
  br i1 %47, label %49, label %48

48:                                               ; preds = %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45)
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %46)
  store i8* null, i8** %43, align 8
  br label %58

49:                                               ; preds = %41
  %50 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %46, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIsEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS1_14remove_pointerIS3_E4typeEEE5valueEPcE4typeES5_ENUlRNS1_13basic_ostreamIcNS1_11char_traitsIcEEEEPKvE_8__invokeESG_SI_) #9
  %51 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), i8* %50, i8* %51) #9
  %52 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %53 = load i8*, i8** %52, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45)
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %46)
  store i8* %53, i8** %43, align 8
  %54 = icmp eq i8* %53, null
  br i1 %54, label %58, label %55

55:                                               ; preds = %49
  %56 = bitcast %"class.logging::CheckError"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.1, i64 0, i64 0), i32 285, %"class.logging::CheckOpResult"* nonnull %9) #9
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #9
  br label %58

58:                                               ; preds = %48, %49, %55
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #9
  %59 = load %"class.blink::Node"*, %"class.blink::Node"** %12, align 8
  %60 = icmp eq %"class.blink::Node"* %59, null
  %61 = load %"class.blink::Node"*, %"class.blink::Node"** %16, align 8
  br i1 %60, label %62, label %64

62:                                               ; preds = %58
  %63 = icmp eq %"class.blink::Node"* %61, null
  br i1 %63, label %80, label %102

64:                                               ; preds = %58
  %65 = icmp eq %"class.blink::Node"* %59, %61
  br i1 %65, label %66, label %102

66:                                               ; preds = %64
  %67 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 2
  %68 = load i32, i32* %67, align 4
  %69 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 2
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %68, %70
  br i1 %71, label %72, label %102

72:                                               ; preds = %66
  %73 = icmp eq i32 %68, 0
  br i1 %73, label %74, label %80

74:                                               ; preds = %72
  %75 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %0, i64 0, i32 1
  %76 = load i32, i32* %75, align 8
  %77 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 1
  %78 = load i32, i32* %77, align 8
  %79 = icmp eq i32 %76, %78
  br i1 %79, label %80, label %102

80:                                               ; preds = %72, %62, %74
  %81 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %82 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %81, i64 0, i32 0, i32 0
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %84 = icmp eq %"class.WTF::StringImpl"* %83, null
  br i1 %84, label %303, label %85

85:                                               ; preds = %80
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load atomic i32, i32* %86 monotonic, align 4
  %88 = and i32 %87, 2
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %303

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  %93 = zext i32 %92 to i33
  %94 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %93, i33 1) #9
  %95 = extractvalue { i33, i1 } %94, 1
  %96 = extractvalue { i33, i1 } %94, 0
  %97 = icmp slt i33 %96, 0
  %98 = or i1 %95, %97
  br i1 %98, label %99, label %100, !prof !2

99:                                               ; preds = %90
  call void @llvm.trap() #9
  unreachable

100:                                              ; preds = %90
  %101 = trunc i33 %96 to i32
  store i32 %101, i32* %91, align 4
  br label %303

102:                                              ; preds = %64, %66, %62, %74
  %103 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* %0) #9
  %104 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* %1) #9
  %105 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal14CommonAncestorERKNS_4NodeES3_(%"class.blink::Node"* dereferenceable(64) %103, %"class.blink::Node"* dereferenceable(64) %104) #9
  %106 = icmp eq %"class.blink::Node"* %105, null
  br i1 %106, label %107, label %129

107:                                              ; preds = %102
  %108 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %109 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %108, i64 0, i32 0, i32 0
  %110 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %109, align 8
  %111 = icmp eq %"class.WTF::StringImpl"* %110, null
  br i1 %111, label %303, label %112

112:                                              ; preds = %107
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = load atomic i32, i32* %113 monotonic, align 4
  %115 = and i32 %114, 2
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %303

117:                                              ; preds = %112
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 0
  %119 = load i32, i32* %118, align 4
  %120 = zext i32 %119 to i33
  %121 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %120, i33 1) #9
  %122 = extractvalue { i33, i1 } %121, 1
  %123 = extractvalue { i33, i1 } %121, 0
  %124 = icmp slt i33 %123, 0
  %125 = or i1 %122, %124
  br i1 %125, label %126, label %127, !prof !2

126:                                              ; preds = %117
  call void @llvm.trap() #9
  unreachable

127:                                              ; preds = %117
  %128 = trunc i33 %123 to i32
  store i32 %128, i32* %118, align 4
  br label %303

129:                                              ; preds = %102
  %130 = load %"class.blink::Node"*, %"class.blink::Node"** %12, align 8
  %131 = icmp eq %"class.blink::Node"* %130, null
  br i1 %131, label %137, label %132

132:                                              ; preds = %129
  %133 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %130, i64 0, i32 3, i32 0, i32 0
  %134 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %133, align 8
  %135 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %134, i64 0, i32 2, i32 0, i32 0
  %136 = load %"class.blink::Document"*, %"class.blink::Document"** %135, align 8
  br label %137

137:                                              ; preds = %129, %132
  %138 = phi %"class.blink::Document"* [ %136, %132 ], [ null, %129 ]
  %139 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %138, i64 0, i32 5, i32 2
  %140 = load i32, i32* %139, align 4
  %141 = add nsw i32 %140, 1
  store i32 %141, i32* %139, align 4
  %142 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20NodeAsRangeFirstNodeEv(%"class.blink::PositionTemplate"* %0) #9
  %143 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* %0) #9
  %144 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* %1) #9
  %145 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal14CommonAncestorERKNS_4NodeES3_(%"class.blink::Node"* dereferenceable(64) %143, %"class.blink::Node"* dereferenceable(64) %144) #9
  %146 = getelementptr inbounds %"class.blink::CreateMarkupOptions", %"class.blink::CreateMarkupOptions"* %2, i64 0, i32 2
  %147 = load i8, i8* %146, align 4, !range !3
  %148 = icmp eq i8 %147, 0
  br i1 %148, label %238, label %149

149:                                              ; preds = %137
  %150 = call %"class.blink::Element"* @_ZN5blink14EnclosingBlockEPKNS_4NodeENS_27EditingBoundaryCrossingRuleE(%"class.blink::Node"* %145, i32 1) #9
  %151 = icmp eq %"class.blink::Element"* %150, null
  br i1 %151, label %210, label %152

152:                                              ; preds = %149
  %153 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %150, i64 0, i32 0, i32 0
  %154 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %150, i64 0, i32 0, i32 0, i32 1
  %155 = load i32, i32* %154, align 8
  %156 = and i32 %155, 48
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %158, label %206

158:                                              ; preds = %152
  %159 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTbodyTagE, align 8
  %160 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %159, i64 0, i32 0, i32 0, i32 0
  %161 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %160, align 8
  %162 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %153, i64 1, i32 2
  %163 = bitcast %"class.blink::Member"* %162 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %164 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %163, align 8
  %165 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %164, i64 0, i32 3, i32 0, i32 0, i32 0
  %166 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %165, align 8
  %167 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %161, i64 0, i32 3, i32 0, i32 0, i32 0
  %168 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %167, align 8
  %169 = icmp eq %"class.WTF::StringImpl"* %166, %168
  br i1 %169, label %177, label %170

170:                                              ; preds = %158
  %171 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTrTagE, align 8
  %172 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %171, i64 0, i32 0, i32 0, i32 0
  %173 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %172, align 8
  %174 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %173, i64 0, i32 3, i32 0, i32 0, i32 0
  %175 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %174, align 8
  %176 = icmp eq %"class.WTF::StringImpl"* %166, %175
  br i1 %176, label %177, label %206

177:                                              ; preds = %170, %158
  %178 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %153) #9
  %179 = icmp eq %"class.blink::ContainerNode"* %178, null
  br i1 %179, label %203, label %180

180:                                              ; preds = %177
  %181 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTableTagE, align 8
  %182 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %181, i64 0, i32 0, i32 0, i32 0
  br label %183

183:                                              ; preds = %200, %180
  %184 = phi %"class.blink::ContainerNode"* [ %178, %180 ], [ %201, %200 ]
  %185 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %184, i64 0, i32 0
  %186 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %184, i64 0, i32 0, i32 1
  %187 = load i32, i32* %186, align 8
  %188 = and i32 %187, 48
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %200

190:                                              ; preds = %183
  %191 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %182, align 8
  %192 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %185, i64 1, i32 2
  %193 = bitcast %"class.blink::Member"* %192 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %194 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %193, align 8
  %195 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %194, i64 0, i32 3, i32 0, i32 0, i32 0
  %196 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %195, align 8
  %197 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %191, i64 0, i32 3, i32 0, i32 0, i32 0
  %198 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %197, align 8
  %199 = icmp eq %"class.WTF::StringImpl"* %196, %198
  br i1 %199, label %203, label %200

200:                                              ; preds = %190, %183
  %201 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %185) #9
  %202 = icmp eq %"class.blink::ContainerNode"* %201, null
  br i1 %202, label %203, label %183

203:                                              ; preds = %200, %190, %177
  %204 = phi %"class.blink::ContainerNode"* [ null, %177 ], [ null, %200 ], [ %184, %190 ]
  %205 = bitcast %"class.blink::ContainerNode"* %204 to %"class.blink::HTMLElement"*
  br label %210

206:                                              ; preds = %170, %152
  %207 = call zeroext i1 @_ZN5blink30IsNonTableCellHTMLBlockElementEPKNS_4NodeE(%"class.blink::Node"* %153) #9
  %208 = bitcast %"class.blink::Element"* %150 to %"class.blink::HTMLElement"*
  %209 = select i1 %207, %"class.blink::HTMLElement"* %208, %"class.blink::HTMLElement"* null
  br label %210

210:                                              ; preds = %206, %203, %149
  %211 = phi %"class.blink::HTMLElement"* [ %209, %206 ], [ %205, %203 ], [ null, %149 ]
  %212 = icmp eq %"class.blink::Node"* %142, null
  br i1 %212, label %238, label %213

213:                                              ; preds = %210
  %214 = bitcast %"class.blink::PositionTemplate"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %214) #9
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE27FirstPositionInOrBeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %6, %"class.blink::Node"* nonnull dereferenceable(64) %142) #9
  %215 = call %"class.blink::Node"* @_ZN5blink19EnclosingNodeOfTypeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEEPFbPKNS_4NodeEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate"* nonnull dereferenceable(16) %6, i1 (%"class.blink::Node"*)* nonnull @_ZN5blink10IsListItemEPKNS_4NodeE, i32 1) #9
  %216 = icmp eq %"class.blink::Node"* %215, null
  br i1 %216, label %232, label %217

217:                                              ; preds = %213
  %218 = call zeroext i1 @_ZN5blink13AreSameRangesEPNS_4NodeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEES8_(%"class.blink::Node"* nonnull %215, %"class.blink::PositionTemplate"* dereferenceable(16) %0, %"class.blink::PositionTemplate"* dereferenceable(16) %1) #9
  br i1 %218, label %219, label %232

219:                                              ; preds = %217
  %220 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %215) #9
  %221 = icmp eq %"class.blink::ContainerNode"* %220, null
  br i1 %221, label %229, label %222

222:                                              ; preds = %219, %226
  %223 = phi %"class.blink::ContainerNode"* [ %227, %226 ], [ %220, %219 ]
  %224 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %223, i64 0, i32 0
  %225 = call zeroext i1 @_ZN5blink17IsHTMLListElementEPKNS_4NodeE(%"class.blink::Node"* %224) #9
  br i1 %225, label %229, label %226

226:                                              ; preds = %222
  %227 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %224) #9
  %228 = icmp eq %"class.blink::ContainerNode"* %227, null
  br i1 %228, label %229, label %222

229:                                              ; preds = %226, %222, %219
  %230 = phi %"class.blink::ContainerNode"* [ null, %219 ], [ null, %226 ], [ %223, %222 ]
  %231 = bitcast %"class.blink::ContainerNode"* %230 to %"class.blink::HTMLElement"*
  br label %232

232:                                              ; preds = %229, %217, %213
  %233 = phi %"class.blink::HTMLElement"* [ %231, %229 ], [ %211, %217 ], [ %211, %213 ]
  %234 = call %"class.blink::Node"* @_ZN5blink26HighestEnclosingNodeOfTypeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEEPFbPKNS_4NodeEENS_27EditingBoundaryCrossingRuleEPS7_(%"class.blink::PositionTemplate"* nonnull dereferenceable(16) %6, i1 (%"class.blink::Node"*)* nonnull @_ZN5blink27IsMailHTMLBlockquoteElementEPKNS_4NodeE, i32 0, %"class.blink::Node"* null) #9
  %235 = icmp eq %"class.blink::Node"* %234, null
  %236 = bitcast %"class.blink::Node"* %234 to %"class.blink::HTMLElement"*
  %237 = select i1 %235, %"class.blink::HTMLElement"* %233, %"class.blink::HTMLElement"* %236
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %214) #9
  br label %238

238:                                              ; preds = %232, %210, %137
  %239 = phi %"class.blink::HTMLElement"* [ %237, %232 ], [ %211, %210 ], [ null, %137 ]
  %240 = icmp eq %"class.blink::HTMLElement"* %239, null
  %241 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %239, i64 0, i32 0, i32 0, i32 0
  %242 = select i1 %240, %"class.blink::Node"* %145, %"class.blink::Node"* %241
  %243 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %242, i64 0, i32 1
  %244 = load i32, i32* %243, align 8
  %245 = and i32 %244, 1
  %246 = icmp eq i32 %245, 0
  %247 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %242, i64 0, i32 6, i32 0, i32 0
  br i1 %246, label %252, label %248

248:                                              ; preds = %238
  %249 = bitcast %"class.blink::NodeData"** %247 to %"class.blink::NodeRareData"**
  %250 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %249, align 8
  %251 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %250, i64 0, i32 1, i32 0, i32 0
  br label %254

252:                                              ; preds = %238
  %253 = bitcast %"class.blink::NodeData"** %247 to %"class.blink::NodeRenderingData"**
  br label %254

254:                                              ; preds = %252, %248
  %255 = phi %"class.blink::NodeRenderingData"** [ %251, %248 ], [ %253, %252 ]
  %256 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %255, align 8
  %257 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %256, i64 0, i32 1
  %258 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %257, align 8
  %259 = icmp eq %"class.blink::LayoutObject"* %258, null
  br i1 %259, label %274, label %260

260:                                              ; preds = %254
  %261 = getelementptr inbounds %"class.blink::CreateMarkupOptions", %"class.blink::CreateMarkupOptions"* %2, i64 0, i32 0
  %262 = load %"class.blink::Node"*, %"class.blink::Node"** %261, align 8
  %263 = icmp eq %"class.blink::Node"* %262, null
  br i1 %263, label %264, label %267

264:                                              ; preds = %260
  %265 = call %"class.blink::Element"* @_ZN5blink14EnclosingBlockEPKNS_4NodeENS_27EditingBoundaryCrossingRuleE(%"class.blink::Node"* %242, i32 1) #9
  %266 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %265, i64 0, i32 0, i32 0
  br label %267

267:                                              ; preds = %264, %260
  %268 = phi %"class.blink::Node"* [ %266, %264 ], [ %262, %260 ]
  %269 = bitcast %"class.blink::PositionTemplate"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %269) #9
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE19FirstPositionInNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %7, %"class.blink::Node"* dereferenceable(64) %242) #9
  %270 = call %"class.blink::Node"* @_ZN5blink26HighestEnclosingNodeOfTypeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEEPFbPKNS_4NodeEENS_27EditingBoundaryCrossingRuleEPS7_(%"class.blink::PositionTemplate"* nonnull dereferenceable(16) %7, i1 (%"class.blink::Node"*)* nonnull @_ZN5blink27IsPresentationalHTMLElementEPKNS_4NodeE, i32 0, %"class.blink::Node"* %268) #9
  %271 = bitcast %"class.blink::Node"* %270 to %"class.blink::HTMLElement"*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %269) #9
  %272 = icmp eq %"class.blink::Node"* %270, null
  %273 = select i1 %272, %"class.blink::HTMLElement"* %239, %"class.blink::HTMLElement"* %271
  br label %274

274:                                              ; preds = %267, %254
  %275 = phi %"class.blink::HTMLElement"* [ %273, %267 ], [ %239, %254 ]
  %276 = icmp eq %"class.blink::HTMLElement"* %275, null
  br i1 %276, label %277, label %287

277:                                              ; preds = %274
  %278 = call zeroext i1 @_ZN5blink28IsTabHTMLSpanElementTextNodeEPKNS_4NodeE(%"class.blink::Node"* %145) #9
  br i1 %278, label %279, label %283

279:                                              ; preds = %277
  %280 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %145) #9
  %281 = bitcast %"class.blink::ContainerNode"* %280 to %"class.blink::HTMLElement"*
  %282 = icmp eq %"class.blink::ContainerNode"* %280, null
  br i1 %282, label %283, label %287

283:                                              ; preds = %279, %277
  %284 = call zeroext i1 @_ZN5blink20IsTabHTMLSpanElementEPKNS_4NodeE(%"class.blink::Node"* %145) #9
  %285 = bitcast %"class.blink::Node"* %145 to %"class.blink::HTMLElement"*
  %286 = select i1 %284, %"class.blink::HTMLElement"* %285, %"class.blink::HTMLElement"* null
  br label %287

287:                                              ; preds = %274, %279, %283
  %288 = phi %"class.blink::HTMLElement"* [ %281, %279 ], [ %275, %274 ], [ %286, %283 ]
  %289 = bitcast %"class.blink::PositionTemplate"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %289) #9
  %290 = icmp eq %"class.blink::HTMLElement"* %288, null
  %291 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %288, i64 0, i32 0, i32 0, i32 0
  %292 = select i1 %290, %"class.blink::Node"* %145, %"class.blink::Node"* %291
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE19FirstPositionInNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %8, %"class.blink::Node"* dereferenceable(64) %292) #9
  %293 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names5kATagE to %"class.blink::QualifiedName"**), align 8
  %294 = call %"class.blink::Element"* @_ZN5blink23EnclosingElementWithTagERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEERKNS_13QualifiedNameE(%"class.blink::PositionTemplate"* nonnull dereferenceable(16) %8, %"class.blink::QualifiedName"* dereferenceable(8) %293) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %289) #9
  %295 = icmp eq %"class.blink::Element"* %294, null
  %296 = bitcast %"class.blink::Element"* %294 to %"class.blink::HTMLElement"*
  %297 = select i1 %295, %"class.blink::HTMLElement"* %288, %"class.blink::HTMLElement"* %296
  %298 = bitcast %"class.blink::StyledMarkupSerializer"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %298) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %298, i8 -86, i64 72, i1 false)
  %299 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %297, i64 0, i32 0, i32 0, i32 0
  call void @_ZN5blink22StyledMarkupSerializerINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EES8_PNS_4NodeERKNS_19CreateMarkupOptionsE(%"class.blink::StyledMarkupSerializer"* nonnull %11, %"class.blink::PositionTemplate"* dereferenceable(16) %0, %"class.blink::PositionTemplate"* dereferenceable(16) %1, %"class.blink::Node"* %299, %"class.blink::CreateMarkupOptions"* dereferenceable(16) %2) #9
  %300 = call %"class.WTF::StringImpl"* @_ZN5blink22StyledMarkupSerializerINS_16EditingAlgorithmINS_13NodeTraversalEEEE12CreateMarkupEv(%"class.blink::StyledMarkupSerializer"* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %298) #9
  %301 = load i32, i32* %139, align 4
  %302 = add nsw i32 %301, -1
  store i32 %302, i32* %139, align 4
  br label %303

303:                                              ; preds = %127, %112, %107, %100, %85, %80, %39, %24, %19, %287
  %304 = phi %"class.WTF::StringImpl"* [ %300, %287 ], [ null, %19 ], [ %22, %24 ], [ %22, %39 ], [ null, %80 ], [ %83, %85 ], [ %83, %100 ], [ null, %107 ], [ %110, %112 ], [ %110, %127 ]
  ret %"class.WTF::StringImpl"* %304
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare signext i16 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE9CompareToERKS4_(%"class.blink::PositionTemplate"*, %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.blink::Node"* @_ZN5blink13NodeTraversal14CommonAncestorERKNS_4NodeES3_(%"class.blink::Node"* dereferenceable(64), %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink22StyledMarkupSerializerINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EES8_PNS_4NodeERKNS_19CreateMarkupOptionsE(%"class.blink::StyledMarkupSerializer"*, %"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::Node"*, %"class.blink::CreateMarkupOptions"* dereferenceable(16)) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink22StyledMarkupSerializerINS_16EditingAlgorithmINS_13NodeTraversalEEEE12CreateMarkupEv(%"class.blink::StyledMarkupSerializer"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"class.WTF::StringImpl"* @_ZN5blink21CreateMarkupAlgorithmINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE12CreateMarkupERKNS_16PositionTemplateIS3_EES8_RKNS_19CreateMarkupOptionsE(%"class.blink::PositionTemplate.2744"* dereferenceable(16), %"class.blink::PositionTemplate.2744"* dereferenceable(16), %"class.blink::CreateMarkupOptions"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca i16, align 2
  %6 = alloca %"class.blink::PositionTemplate", align 8
  %7 = alloca %"class.blink::PositionTemplate", align 8
  %8 = alloca %"class.blink::PositionTemplate", align 8
  %9 = alloca %"class.logging::CheckOpResult", align 8
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = alloca %"class.blink::StyledMarkupSerializer.2745", align 8
  %12 = getelementptr inbounds %"class.blink::PositionTemplate.2744", %"class.blink::PositionTemplate.2744"* %0, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::Node"*, %"class.blink::Node"** %12, align 8
  %14 = icmp eq %"class.blink::Node"* %13, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.blink::PositionTemplate.2744", %"class.blink::PositionTemplate.2744"* %1, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.blink::Node"*, %"class.blink::Node"** %16, align 8
  %18 = icmp eq %"class.blink::Node"* %17, null
  br i1 %18, label %19, label %41

19:                                               ; preds = %15, %3
  %20 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %21 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %20, i64 0, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %22, null
  br i1 %23, label %303, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i32 %26, 2
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %303

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i33
  %33 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %32, i33 1) #9
  %34 = extractvalue { i33, i1 } %33, 1
  %35 = extractvalue { i33, i1 } %33, 0
  %36 = icmp slt i33 %35, 0
  %37 = or i1 %34, %36
  br i1 %37, label %38, label %39, !prof !2

38:                                               ; preds = %29
  tail call void @llvm.trap() #9
  unreachable

39:                                               ; preds = %29
  %40 = trunc i33 %35 to i32
  store i32 %40, i32* %30, align 4
  br label %303

41:                                               ; preds = %15
  %42 = bitcast %"class.logging::CheckOpResult"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #9
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %9, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %43, align 8
  %44 = tail call signext i16 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE9CompareToERKS4_(%"class.blink::PositionTemplate.2744"* %0, %"class.blink::PositionTemplate.2744"* dereferenceable(16) %1) #9
  %45 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45)
  %46 = bitcast i16* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %46)
  store i16 %44, i16* %5, align 2
  %47 = icmp sgt i16 %44, 0
  br i1 %47, label %49, label %48

48:                                               ; preds = %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45)
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %46)
  store i8* null, i8** %43, align 8
  br label %58

49:                                               ; preds = %41
  %50 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %46, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIsEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS1_14remove_pointerIS3_E4typeEEE5valueEPcE4typeES5_ENUlRNS1_13basic_ostreamIcNS1_11char_traitsIcEEEEPKvE_8__invokeESG_SI_) #9
  %51 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), i8* %50, i8* %51) #9
  %52 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %53 = load i8*, i8** %52, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45)
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %46)
  store i8* %53, i8** %43, align 8
  %54 = icmp eq i8* %53, null
  br i1 %54, label %58, label %55

55:                                               ; preds = %49
  %56 = bitcast %"class.logging::CheckError"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.1, i64 0, i64 0), i32 285, %"class.logging::CheckOpResult"* nonnull %9) #9
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #9
  br label %58

58:                                               ; preds = %48, %49, %55
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #9
  %59 = load %"class.blink::Node"*, %"class.blink::Node"** %12, align 8
  %60 = icmp eq %"class.blink::Node"* %59, null
  %61 = load %"class.blink::Node"*, %"class.blink::Node"** %16, align 8
  br i1 %60, label %62, label %64

62:                                               ; preds = %58
  %63 = icmp eq %"class.blink::Node"* %61, null
  br i1 %63, label %80, label %102

64:                                               ; preds = %58
  %65 = icmp eq %"class.blink::Node"* %59, %61
  br i1 %65, label %66, label %102

66:                                               ; preds = %64
  %67 = getelementptr inbounds %"class.blink::PositionTemplate.2744", %"class.blink::PositionTemplate.2744"* %0, i64 0, i32 2
  %68 = load i32, i32* %67, align 4
  %69 = getelementptr inbounds %"class.blink::PositionTemplate.2744", %"class.blink::PositionTemplate.2744"* %1, i64 0, i32 2
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %68, %70
  br i1 %71, label %72, label %102

72:                                               ; preds = %66
  %73 = icmp eq i32 %68, 0
  br i1 %73, label %74, label %80

74:                                               ; preds = %72
  %75 = getelementptr inbounds %"class.blink::PositionTemplate.2744", %"class.blink::PositionTemplate.2744"* %0, i64 0, i32 1
  %76 = load i32, i32* %75, align 8
  %77 = getelementptr inbounds %"class.blink::PositionTemplate.2744", %"class.blink::PositionTemplate.2744"* %1, i64 0, i32 1
  %78 = load i32, i32* %77, align 8
  %79 = icmp eq i32 %76, %78
  br i1 %79, label %80, label %102

80:                                               ; preds = %72, %62, %74
  %81 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %82 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %81, i64 0, i32 0, i32 0
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %84 = icmp eq %"class.WTF::StringImpl"* %83, null
  br i1 %84, label %303, label %85

85:                                               ; preds = %80
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load atomic i32, i32* %86 monotonic, align 4
  %88 = and i32 %87, 2
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %303

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  %93 = zext i32 %92 to i33
  %94 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %93, i33 1) #9
  %95 = extractvalue { i33, i1 } %94, 1
  %96 = extractvalue { i33, i1 } %94, 0
  %97 = icmp slt i33 %96, 0
  %98 = or i1 %95, %97
  br i1 %98, label %99, label %100, !prof !2

99:                                               ; preds = %90
  call void @llvm.trap() #9
  unreachable

100:                                              ; preds = %90
  %101 = trunc i33 %96 to i32
  store i32 %101, i32* %91, align 4
  br label %303

102:                                              ; preds = %64, %66, %62, %74
  %103 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate.2744"* %0) #9
  %104 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate.2744"* %1) #9
  %105 = call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal14CommonAncestorERKNS_4NodeES3_(%"class.blink::Node"* dereferenceable(64) %103, %"class.blink::Node"* dereferenceable(64) %104) #9
  %106 = icmp eq %"class.blink::Node"* %105, null
  br i1 %106, label %107, label %129

107:                                              ; preds = %102
  %108 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %109 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %108, i64 0, i32 0, i32 0
  %110 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %109, align 8
  %111 = icmp eq %"class.WTF::StringImpl"* %110, null
  br i1 %111, label %303, label %112

112:                                              ; preds = %107
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = load atomic i32, i32* %113 monotonic, align 4
  %115 = and i32 %114, 2
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %303

117:                                              ; preds = %112
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 0
  %119 = load i32, i32* %118, align 4
  %120 = zext i32 %119 to i33
  %121 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %120, i33 1) #9
  %122 = extractvalue { i33, i1 } %121, 1
  %123 = extractvalue { i33, i1 } %121, 0
  %124 = icmp slt i33 %123, 0
  %125 = or i1 %122, %124
  br i1 %125, label %126, label %127, !prof !2

126:                                              ; preds = %117
  call void @llvm.trap() #9
  unreachable

127:                                              ; preds = %117
  %128 = trunc i33 %123 to i32
  store i32 %128, i32* %118, align 4
  br label %303

129:                                              ; preds = %102
  %130 = load %"class.blink::Node"*, %"class.blink::Node"** %12, align 8
  %131 = icmp eq %"class.blink::Node"* %130, null
  br i1 %131, label %137, label %132

132:                                              ; preds = %129
  %133 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %130, i64 0, i32 3, i32 0, i32 0
  %134 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %133, align 8
  %135 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %134, i64 0, i32 2, i32 0, i32 0
  %136 = load %"class.blink::Document"*, %"class.blink::Document"** %135, align 8
  br label %137

137:                                              ; preds = %129, %132
  %138 = phi %"class.blink::Document"* [ %136, %132 ], [ null, %129 ]
  %139 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %138, i64 0, i32 5, i32 2
  %140 = load i32, i32* %139, align 4
  %141 = add nsw i32 %140, 1
  store i32 %141, i32* %139, align 4
  %142 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE20NodeAsRangeFirstNodeEv(%"class.blink::PositionTemplate.2744"* %0) #9
  %143 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate.2744"* %0) #9
  %144 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate.2744"* %1) #9
  %145 = call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal14CommonAncestorERKNS_4NodeES3_(%"class.blink::Node"* dereferenceable(64) %143, %"class.blink::Node"* dereferenceable(64) %144) #9
  %146 = getelementptr inbounds %"class.blink::CreateMarkupOptions", %"class.blink::CreateMarkupOptions"* %2, i64 0, i32 2
  %147 = load i8, i8* %146, align 4, !range !3
  %148 = icmp eq i8 %147, 0
  br i1 %148, label %238, label %149

149:                                              ; preds = %137
  %150 = call %"class.blink::Element"* @_ZN5blink14EnclosingBlockEPKNS_4NodeENS_27EditingBoundaryCrossingRuleE(%"class.blink::Node"* %145, i32 1) #9
  %151 = icmp eq %"class.blink::Element"* %150, null
  br i1 %151, label %210, label %152

152:                                              ; preds = %149
  %153 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %150, i64 0, i32 0, i32 0
  %154 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %150, i64 0, i32 0, i32 0, i32 1
  %155 = load i32, i32* %154, align 8
  %156 = and i32 %155, 48
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %158, label %206

158:                                              ; preds = %152
  %159 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTbodyTagE, align 8
  %160 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %159, i64 0, i32 0, i32 0, i32 0
  %161 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %160, align 8
  %162 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %153, i64 1, i32 2
  %163 = bitcast %"class.blink::Member"* %162 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %164 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %163, align 8
  %165 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %164, i64 0, i32 3, i32 0, i32 0, i32 0
  %166 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %165, align 8
  %167 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %161, i64 0, i32 3, i32 0, i32 0, i32 0
  %168 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %167, align 8
  %169 = icmp eq %"class.WTF::StringImpl"* %166, %168
  br i1 %169, label %177, label %170

170:                                              ; preds = %158
  %171 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTrTagE, align 8
  %172 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %171, i64 0, i32 0, i32 0, i32 0
  %173 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %172, align 8
  %174 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %173, i64 0, i32 3, i32 0, i32 0, i32 0
  %175 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %174, align 8
  %176 = icmp eq %"class.WTF::StringImpl"* %166, %175
  br i1 %176, label %177, label %206

177:                                              ; preds = %170, %158
  %178 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %153) #9
  %179 = icmp eq %"class.blink::ContainerNode"* %178, null
  br i1 %179, label %203, label %180

180:                                              ; preds = %177
  %181 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTableTagE, align 8
  %182 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %181, i64 0, i32 0, i32 0, i32 0
  br label %183

183:                                              ; preds = %200, %180
  %184 = phi %"class.blink::ContainerNode"* [ %178, %180 ], [ %201, %200 ]
  %185 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %184, i64 0, i32 0
  %186 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %184, i64 0, i32 0, i32 1
  %187 = load i32, i32* %186, align 8
  %188 = and i32 %187, 48
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %200

190:                                              ; preds = %183
  %191 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %182, align 8
  %192 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %185, i64 1, i32 2
  %193 = bitcast %"class.blink::Member"* %192 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %194 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %193, align 8
  %195 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %194, i64 0, i32 3, i32 0, i32 0, i32 0
  %196 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %195, align 8
  %197 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %191, i64 0, i32 3, i32 0, i32 0, i32 0
  %198 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %197, align 8
  %199 = icmp eq %"class.WTF::StringImpl"* %196, %198
  br i1 %199, label %203, label %200

200:                                              ; preds = %190, %183
  %201 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %185) #9
  %202 = icmp eq %"class.blink::ContainerNode"* %201, null
  br i1 %202, label %203, label %183

203:                                              ; preds = %200, %190, %177
  %204 = phi %"class.blink::ContainerNode"* [ null, %177 ], [ null, %200 ], [ %184, %190 ]
  %205 = bitcast %"class.blink::ContainerNode"* %204 to %"class.blink::HTMLElement"*
  br label %210

206:                                              ; preds = %170, %152
  %207 = call zeroext i1 @_ZN5blink30IsNonTableCellHTMLBlockElementEPKNS_4NodeE(%"class.blink::Node"* %153) #9
  %208 = bitcast %"class.blink::Element"* %150 to %"class.blink::HTMLElement"*
  %209 = select i1 %207, %"class.blink::HTMLElement"* %208, %"class.blink::HTMLElement"* null
  br label %210

210:                                              ; preds = %206, %203, %149
  %211 = phi %"class.blink::HTMLElement"* [ %209, %206 ], [ %205, %203 ], [ null, %149 ]
  %212 = icmp eq %"class.blink::Node"* %142, null
  br i1 %212, label %238, label %213

213:                                              ; preds = %210
  %214 = bitcast %"class.blink::PositionTemplate"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %214) #9
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE27FirstPositionInOrBeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %6, %"class.blink::Node"* nonnull dereferenceable(64) %142) #9
  %215 = call %"class.blink::Node"* @_ZN5blink19EnclosingNodeOfTypeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEEPFbPKNS_4NodeEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate"* nonnull dereferenceable(16) %6, i1 (%"class.blink::Node"*)* nonnull @_ZN5blink10IsListItemEPKNS_4NodeE, i32 1) #9
  %216 = icmp eq %"class.blink::Node"* %215, null
  br i1 %216, label %232, label %217

217:                                              ; preds = %213
  %218 = call zeroext i1 @_ZN5blink13AreSameRangesEPNS_4NodeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEES8_(%"class.blink::Node"* nonnull %215, %"class.blink::PositionTemplate.2744"* dereferenceable(16) %0, %"class.blink::PositionTemplate.2744"* dereferenceable(16) %1) #9
  br i1 %218, label %219, label %232

219:                                              ; preds = %217
  %220 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %215) #9
  %221 = icmp eq %"class.blink::ContainerNode"* %220, null
  br i1 %221, label %229, label %222

222:                                              ; preds = %219, %226
  %223 = phi %"class.blink::ContainerNode"* [ %227, %226 ], [ %220, %219 ]
  %224 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %223, i64 0, i32 0
  %225 = call zeroext i1 @_ZN5blink17IsHTMLListElementEPKNS_4NodeE(%"class.blink::Node"* %224) #9
  br i1 %225, label %229, label %226

226:                                              ; preds = %222
  %227 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %224) #9
  %228 = icmp eq %"class.blink::ContainerNode"* %227, null
  br i1 %228, label %229, label %222

229:                                              ; preds = %226, %222, %219
  %230 = phi %"class.blink::ContainerNode"* [ null, %219 ], [ null, %226 ], [ %223, %222 ]
  %231 = bitcast %"class.blink::ContainerNode"* %230 to %"class.blink::HTMLElement"*
  br label %232

232:                                              ; preds = %229, %217, %213
  %233 = phi %"class.blink::HTMLElement"* [ %231, %229 ], [ %211, %217 ], [ %211, %213 ]
  %234 = call %"class.blink::Node"* @_ZN5blink26HighestEnclosingNodeOfTypeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEEPFbPKNS_4NodeEENS_27EditingBoundaryCrossingRuleEPS7_(%"class.blink::PositionTemplate"* nonnull dereferenceable(16) %6, i1 (%"class.blink::Node"*)* nonnull @_ZN5blink27IsMailHTMLBlockquoteElementEPKNS_4NodeE, i32 0, %"class.blink::Node"* null) #9
  %235 = icmp eq %"class.blink::Node"* %234, null
  %236 = bitcast %"class.blink::Node"* %234 to %"class.blink::HTMLElement"*
  %237 = select i1 %235, %"class.blink::HTMLElement"* %233, %"class.blink::HTMLElement"* %236
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %214) #9
  br label %238

238:                                              ; preds = %232, %210, %137
  %239 = phi %"class.blink::HTMLElement"* [ %237, %232 ], [ %211, %210 ], [ null, %137 ]
  %240 = icmp eq %"class.blink::HTMLElement"* %239, null
  %241 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %239, i64 0, i32 0, i32 0, i32 0
  %242 = select i1 %240, %"class.blink::Node"* %145, %"class.blink::Node"* %241
  %243 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %242, i64 0, i32 1
  %244 = load i32, i32* %243, align 8
  %245 = and i32 %244, 1
  %246 = icmp eq i32 %245, 0
  %247 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %242, i64 0, i32 6, i32 0, i32 0
  br i1 %246, label %252, label %248

248:                                              ; preds = %238
  %249 = bitcast %"class.blink::NodeData"** %247 to %"class.blink::NodeRareData"**
  %250 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %249, align 8
  %251 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %250, i64 0, i32 1, i32 0, i32 0
  br label %254

252:                                              ; preds = %238
  %253 = bitcast %"class.blink::NodeData"** %247 to %"class.blink::NodeRenderingData"**
  br label %254

254:                                              ; preds = %252, %248
  %255 = phi %"class.blink::NodeRenderingData"** [ %251, %248 ], [ %253, %252 ]
  %256 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %255, align 8
  %257 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %256, i64 0, i32 1
  %258 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %257, align 8
  %259 = icmp eq %"class.blink::LayoutObject"* %258, null
  br i1 %259, label %274, label %260

260:                                              ; preds = %254
  %261 = getelementptr inbounds %"class.blink::CreateMarkupOptions", %"class.blink::CreateMarkupOptions"* %2, i64 0, i32 0
  %262 = load %"class.blink::Node"*, %"class.blink::Node"** %261, align 8
  %263 = icmp eq %"class.blink::Node"* %262, null
  br i1 %263, label %264, label %267

264:                                              ; preds = %260
  %265 = call %"class.blink::Element"* @_ZN5blink14EnclosingBlockEPKNS_4NodeENS_27EditingBoundaryCrossingRuleE(%"class.blink::Node"* %242, i32 1) #9
  %266 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %265, i64 0, i32 0, i32 0
  br label %267

267:                                              ; preds = %264, %260
  %268 = phi %"class.blink::Node"* [ %266, %264 ], [ %262, %260 ]
  %269 = bitcast %"class.blink::PositionTemplate"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %269) #9
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE19FirstPositionInNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %7, %"class.blink::Node"* dereferenceable(64) %242) #9
  %270 = call %"class.blink::Node"* @_ZN5blink26HighestEnclosingNodeOfTypeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEEPFbPKNS_4NodeEENS_27EditingBoundaryCrossingRuleEPS7_(%"class.blink::PositionTemplate"* nonnull dereferenceable(16) %7, i1 (%"class.blink::Node"*)* nonnull @_ZN5blink27IsPresentationalHTMLElementEPKNS_4NodeE, i32 0, %"class.blink::Node"* %268) #9
  %271 = bitcast %"class.blink::Node"* %270 to %"class.blink::HTMLElement"*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %269) #9
  %272 = icmp eq %"class.blink::Node"* %270, null
  %273 = select i1 %272, %"class.blink::HTMLElement"* %239, %"class.blink::HTMLElement"* %271
  br label %274

274:                                              ; preds = %267, %254
  %275 = phi %"class.blink::HTMLElement"* [ %273, %267 ], [ %239, %254 ]
  %276 = icmp eq %"class.blink::HTMLElement"* %275, null
  br i1 %276, label %277, label %287

277:                                              ; preds = %274
  %278 = call zeroext i1 @_ZN5blink28IsTabHTMLSpanElementTextNodeEPKNS_4NodeE(%"class.blink::Node"* %145) #9
  br i1 %278, label %279, label %283

279:                                              ; preds = %277
  %280 = call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %145) #9
  %281 = bitcast %"class.blink::ContainerNode"* %280 to %"class.blink::HTMLElement"*
  %282 = icmp eq %"class.blink::ContainerNode"* %280, null
  br i1 %282, label %283, label %287

283:                                              ; preds = %279, %277
  %284 = call zeroext i1 @_ZN5blink20IsTabHTMLSpanElementEPKNS_4NodeE(%"class.blink::Node"* %145) #9
  %285 = bitcast %"class.blink::Node"* %145 to %"class.blink::HTMLElement"*
  %286 = select i1 %284, %"class.blink::HTMLElement"* %285, %"class.blink::HTMLElement"* null
  br label %287

287:                                              ; preds = %274, %279, %283
  %288 = phi %"class.blink::HTMLElement"* [ %281, %279 ], [ %275, %274 ], [ %286, %283 ]
  %289 = bitcast %"class.blink::PositionTemplate"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %289) #9
  %290 = icmp eq %"class.blink::HTMLElement"* %288, null
  %291 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %288, i64 0, i32 0, i32 0, i32 0
  %292 = select i1 %290, %"class.blink::Node"* %145, %"class.blink::Node"* %291
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE19FirstPositionInNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %8, %"class.blink::Node"* dereferenceable(64) %292) #9
  %293 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names5kATagE to %"class.blink::QualifiedName"**), align 8
  %294 = call %"class.blink::Element"* @_ZN5blink23EnclosingElementWithTagERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEERKNS_13QualifiedNameE(%"class.blink::PositionTemplate"* nonnull dereferenceable(16) %8, %"class.blink::QualifiedName"* dereferenceable(8) %293) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %289) #9
  %295 = icmp eq %"class.blink::Element"* %294, null
  %296 = bitcast %"class.blink::Element"* %294 to %"class.blink::HTMLElement"*
  %297 = select i1 %295, %"class.blink::HTMLElement"* %288, %"class.blink::HTMLElement"* %296
  %298 = bitcast %"class.blink::StyledMarkupSerializer.2745"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %298) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %298, i8 -86, i64 72, i1 false)
  %299 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %297, i64 0, i32 0, i32 0, i32 0
  call void @_ZN5blink22StyledMarkupSerializerINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EES8_PNS_4NodeERKNS_19CreateMarkupOptionsE(%"class.blink::StyledMarkupSerializer.2745"* nonnull %11, %"class.blink::PositionTemplate.2744"* dereferenceable(16) %0, %"class.blink::PositionTemplate.2744"* dereferenceable(16) %1, %"class.blink::Node"* %299, %"class.blink::CreateMarkupOptions"* dereferenceable(16) %2) #9
  %300 = call %"class.WTF::StringImpl"* @_ZN5blink22StyledMarkupSerializerINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE12CreateMarkupEv(%"class.blink::StyledMarkupSerializer.2745"* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %298) #9
  %301 = load i32, i32* %139, align 4
  %302 = add nsw i32 %301, -1
  store i32 %302, i32* %139, align 4
  br label %303

303:                                              ; preds = %127, %112, %107, %100, %85, %80, %39, %24, %19, %287
  %304 = phi %"class.WTF::StringImpl"* [ %300, %287 ], [ null, %19 ], [ %22, %24 ], [ %22, %39 ], [ null, %80 ], [ %83, %85 ], [ %83, %100 ], [ null, %107 ], [ %110, %112 ], [ %110, %127 ]
  ret %"class.WTF::StringImpl"* %304
}

declare signext i16 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE9CompareToERKS4_(%"class.blink::PositionTemplate.2744"*, %"class.blink::PositionTemplate.2744"* dereferenceable(16)) local_unnamed_addr #2

declare %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal14CommonAncestorERKNS_4NodeES3_(%"class.blink::Node"* dereferenceable(64), %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate.2744"*) local_unnamed_addr #2

declare void @_ZN5blink22StyledMarkupSerializerINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EES8_PNS_4NodeERKNS_19CreateMarkupOptionsE(%"class.blink::StyledMarkupSerializer.2745"*, %"class.blink::PositionTemplate.2744"* dereferenceable(16), %"class.blink::PositionTemplate.2744"* dereferenceable(16), %"class.blink::Node"*, %"class.blink::CreateMarkupOptions"* dereferenceable(16)) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink22StyledMarkupSerializerINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE12CreateMarkupEv(%"class.blink::StyledMarkupSerializer.2745"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink28PropertyMissingOrEqualToNoneEPNS_19CSSPropertyValueSetENS_13CSSPropertyIDE(%"class.blink::CSSPropertyValueSet"*, i32) local_unnamed_addr #0 {
  %3 = icmp eq %"class.blink::CSSPropertyValueSet"* %0, null
  br i1 %3, label %16, label %4

4:                                                ; preds = %2
  %5 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* nonnull %0, i32 %1) #9
  %6 = icmp eq %"class.blink::CSSValue"* %5, null
  br i1 %6, label %16, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %5, i64 0, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 2
  br i1 %10, label %11, label %16

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %5, i64 1, i32 1
  %13 = bitcast i8* %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 3
  br label %16

16:                                               ; preds = %7, %4, %11, %2
  %17 = phi i1 [ false, %2 ], [ true, %4 ], [ %15, %11 ], [ false, %7 ]
  ret i1 %17
}

declare %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink12CreateMarkupERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEES6_RKNS_19CreateMarkupOptionsE(%"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::CreateMarkupOptions"* dereferenceable(16)) local_unnamed_addr #0 {
  %4 = tail call %"class.WTF::StringImpl"* @_ZN5blink21CreateMarkupAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEE12CreateMarkupERKNS_16PositionTemplateIS3_EES8_RKNS_19CreateMarkupOptionsE(%"class.blink::PositionTemplate"* dereferenceable(16) %0, %"class.blink::PositionTemplate"* dereferenceable(16) %1, %"class.blink::CreateMarkupOptions"* dereferenceable(16) %2)
  ret %"class.WTF::StringImpl"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink12CreateMarkupERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEES6_RKNS_19CreateMarkupOptionsE(%"class.blink::PositionTemplate.2744"* dereferenceable(16), %"class.blink::PositionTemplate.2744"* dereferenceable(16), %"class.blink::CreateMarkupOptions"* dereferenceable(16)) local_unnamed_addr #0 {
  %4 = tail call %"class.WTF::StringImpl"* @_ZN5blink21CreateMarkupAlgorithmINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE12CreateMarkupERKNS_16PositionTemplateIS3_EES8_RKNS_19CreateMarkupOptionsE(%"class.blink::PositionTemplate.2744"* dereferenceable(16) %0, %"class.blink::PositionTemplate.2744"* dereferenceable(16) %1, %"class.blink::CreateMarkupOptions"* dereferenceable(16) %2)
  ret %"class.WTF::StringImpl"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DocumentFragment"* @_ZN5blink24CreateFragmentFromMarkupERNS_8DocumentERKN3WTF6StringES5_NS_19ParserContentPolicyE(%"class.blink::Document"* dereferenceable(2848), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), i32) local_unnamed_addr #0 {
  %5 = alloca %"class.blink::HeapVector.2941", align 8
  %6 = alloca %"class.blink::KURL", align 8
  %7 = alloca %"class.blink::AttributeChange", align 8
  %8 = alloca %"class.blink::KURL", align 8
  %9 = tail call %"class.blink::HTMLBodyElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_15HTMLBodyElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848) %0) #9
  %10 = tail call %"class.blink::DocumentFragment"* @_ZN5blink16DocumentFragment6CreateERNS_8DocumentE(%"class.blink::Document"* dereferenceable(2848) %0) #9
  %11 = getelementptr inbounds %"class.blink::HTMLBodyElement", %"class.blink::HTMLBodyElement"* %9, i64 0, i32 0, i32 0
  tail call void @_ZN5blink16DocumentFragment9ParseHTMLERKN3WTF6StringEPNS_7ElementENS_19ParserContentPolicyE(%"class.blink::DocumentFragment"* %10, %"class.WTF::String"* dereferenceable(8) %1, %"class.blink::Element"* %11, i32 %3) #9
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %235, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %235, label %19

19:                                               ; preds = %15
  %20 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink8BlankURLEv() #9
  %21 = tail call zeroext i1 @_ZN5blinkneERKN3WTF6StringERKNS_4KURLE(%"class.WTF::String"* dereferenceable(8) %2, %"class.blink::KURL"* dereferenceable(112) %20) #9
  br i1 %21, label %22, label %235

22:                                               ; preds = %19
  %23 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink8Document7BaseURLEv(%"class.blink::Document"* %0) #9
  %24 = tail call zeroext i1 @_ZN5blinkneERKN3WTF6StringERKNS_4KURLE(%"class.WTF::String"* dereferenceable(8) %2, %"class.blink::KURL"* dereferenceable(112) %23) #9
  br i1 %24, label %25, label %235

25:                                               ; preds = %22
  %26 = bitcast %"class.blink::HeapVector.2941"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #9
  %27 = getelementptr inbounds %"class.blink::HeapVector.2941", %"class.blink::HeapVector.2941"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.blink::HeapVector.2941", %"class.blink::HeapVector.2941"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.blink::HeapVector.2941", %"class.blink::HeapVector.2941"* %5, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 0, i64 16, i1 false) #9
  %30 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %30) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 112, i1 false) #9
  call void @_ZN5blink4KURLC1ERKN3WTF6StringE(%"class.blink::KURL"* nonnull %6, %"class.WTF::String"* dereferenceable(8) %2) #9
  %31 = getelementptr inbounds %"class.blink::DocumentFragment", %"class.blink::DocumentFragment"* %10, i64 0, i32 0, i32 0
  %32 = icmp eq %"class.blink::DocumentFragment"* %10, null
  br i1 %32, label %234, label %33

33:                                               ; preds = %25
  %34 = getelementptr inbounds %"class.blink::DocumentFragment", %"class.blink::DocumentFragment"* %10, i64 0, i32 0, i32 0, i32 1
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %234, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %31, i64 1
  %40 = bitcast %"class.blink::Node"* %39 to %"class.blink::Node"**
  %41 = load %"class.blink::Node"*, %"class.blink::Node"** %40, align 8
  %42 = bitcast %"class.blink::Node"* %41 to %"class.blink::Element"*
  %43 = icmp eq %"class.blink::Node"* %41, null
  br i1 %43, label %61, label %44

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %41, i64 0, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = and i32 %46, 12
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %61, label %54

49:                                               ; preds = %54
  %50 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %57, i64 0, i32 1
  %51 = load i32, i32* %50, align 8
  %52 = and i32 %51, 12
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %59, label %54

54:                                               ; preds = %44, %49
  %55 = phi %"class.blink::Node"* [ %57, %49 ], [ %41, %44 ]
  %56 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %55, i64 0, i32 5, i32 0, i32 0
  %57 = load %"class.blink::Node"*, %"class.blink::Node"** %56, align 8
  %58 = icmp eq %"class.blink::Node"* %57, null
  br i1 %58, label %234, label %49

59:                                               ; preds = %49
  %60 = bitcast %"class.blink::Node"* %57 to %"class.blink::Element"*
  br label %61

61:                                               ; preds = %59, %44, %38
  %62 = phi %"class.blink::Element"* [ %42, %38 ], [ %42, %44 ], [ %60, %59 ]
  %63 = icmp eq %"class.blink::Element"* %62, null
  br i1 %63, label %234, label %64

64:                                               ; preds = %61
  %65 = getelementptr inbounds %"class.blink::HeapVector.2941", %"class.blink::HeapVector.2941"* %5, i64 0, i32 0
  %66 = bitcast %"class.blink::AttributeChange"* %7 to i8*
  %67 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %8, i64 0, i32 0
  %68 = getelementptr inbounds %"class.blink::AttributeChange", %"class.blink::AttributeChange"* %7, i64 0, i32 0, i32 0, i32 0
  %69 = getelementptr inbounds %"class.blink::AttributeChange", %"class.blink::AttributeChange"* %7, i64 0, i32 1, i32 0, i32 0
  %70 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %8, i64 0, i32 4, i32 0, i32 0
  %71 = getelementptr inbounds %"class.blink::AttributeChange", %"class.blink::AttributeChange"* %7, i64 0, i32 2, i32 0, i32 0
  %72 = getelementptr inbounds %"class.blink::AttributeChange", %"class.blink::AttributeChange"* %7, i64 0, i32 1
  br label %79

73:                                               ; preds = %126, %119, %145, %137
  %74 = load %"class.blink::AttributeChange"*, %"class.blink::AttributeChange"** %27, align 8
  %75 = load i32, i32* %29, align 4
  %76 = zext i32 %75 to i64
  %77 = getelementptr inbounds %"class.blink::AttributeChange", %"class.blink::AttributeChange"* %74, i64 %76
  %78 = icmp eq i32 %75, 0
  br i1 %78, label %234, label %230

79:                                               ; preds = %148, %64
  %80 = phi %"class.blink::Element"* [ %62, %64 ], [ %149, %148 ]
  %81 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %80, i64 0, i32 3, i32 0, i32 0
  %82 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %81, align 8
  %83 = icmp eq %"class.blink::ElementData"* %82, null
  br i1 %83, label %115, label %84

84:                                               ; preds = %79
  call void @_ZNK5blink7Element24SynchronizeAllAttributesEv(%"class.blink::Element"* nonnull %80) #9
  %85 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %81, align 8
  %86 = icmp eq %"class.blink::ElementData"* %85, null
  br i1 %86, label %87, label %89

87:                                               ; preds = %84
  %88 = load i32, i32* null, align 536870912
  br label %101

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %85, i64 0, i32 0, i32 0, i32 0
  %91 = load i32, i32* %90, align 4
  %92 = and i32 %91, 1
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %101, label %94

94:                                               ; preds = %89
  %95 = bitcast %"class.blink::ElementData"* %85 to %"class.blink::UniqueElementData"*
  %96 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %85, i64 1, i32 1
  %97 = bitcast %"class.blink::Member.30"* %96 to %"class.blink::Attribute"**
  %98 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %97, align 8
  %99 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %95, i64 0, i32 2, i32 0, i32 0, i32 2
  %100 = load i32, i32* %99, align 4
  br label %107

101:                                              ; preds = %89, %87
  %102 = phi i32 [ %88, %87 ], [ %91, %89 ]
  %103 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %85, i64 1
  %104 = bitcast %"class.blink::ElementData"* %103 to %"class.blink::Attribute"*
  %105 = lshr i32 %102, 1
  %106 = and i32 %105, 268435455
  br label %107

107:                                              ; preds = %101, %94
  %108 = phi i32 [ %106, %101 ], [ %100, %94 ]
  %109 = phi %"class.blink::Attribute"* [ %104, %101 ], [ %98, %94 ]
  %110 = zext i32 %108 to i64
  %111 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %109, i64 %110
  %112 = icmp eq i32 %108, 0
  br i1 %112, label %115, label %113

113:                                              ; preds = %107
  %114 = bitcast %"class.blink::Element"* %80 to i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)***
  br label %150

115:                                              ; preds = %227, %107, %79
  %116 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %80, i64 0, i32 0, i32 1, i32 0, i32 0
  %117 = load %"class.blink::Node"*, %"class.blink::Node"** %116, align 8
  %118 = icmp eq %"class.blink::Node"* %117, null
  br i1 %118, label %119, label %129

119:                                              ; preds = %115
  %120 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %80, i64 0, i32 0, i32 0
  %121 = icmp eq %"class.blink::Node"* %120, %31
  br i1 %121, label %73, label %122

122:                                              ; preds = %119
  %123 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %80, i64 0, i32 0, i32 0, i32 5, i32 0, i32 0
  %124 = load %"class.blink::Node"*, %"class.blink::Node"** %123, align 8
  %125 = icmp eq %"class.blink::Node"* %124, null
  br i1 %125, label %126, label %129

126:                                              ; preds = %122
  %127 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64) %120, %"class.blink::Node"* %31) #9
  %128 = icmp eq %"class.blink::Node"* %127, null
  br i1 %128, label %73, label %129

129:                                              ; preds = %126, %122, %115
  %130 = phi %"class.blink::Node"* [ %117, %115 ], [ %124, %122 ], [ %127, %126 ]
  br label %131

131:                                              ; preds = %129, %145
  %132 = phi %"class.blink::Node"* [ %146, %145 ], [ %130, %129 ]
  %133 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %132, i64 0, i32 1
  %134 = load i32, i32* %133, align 8
  %135 = and i32 %134, 12
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %148, label %137

137:                                              ; preds = %131
  %138 = icmp eq %"class.blink::Node"* %132, %31
  br i1 %138, label %73, label %139

139:                                              ; preds = %137
  %140 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %132, i64 0, i32 5, i32 0, i32 0
  %141 = load %"class.blink::Node"*, %"class.blink::Node"** %140, align 8
  %142 = icmp eq %"class.blink::Node"* %141, null
  br i1 %142, label %143, label %145

143:                                              ; preds = %139
  %144 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %132, %"class.blink::Node"* %31) #9
  br label %145

145:                                              ; preds = %143, %139
  %146 = phi %"class.blink::Node"* [ %144, %143 ], [ %141, %139 ]
  %147 = icmp eq %"class.blink::Node"* %146, null
  br i1 %147, label %73, label %131

148:                                              ; preds = %131
  %149 = bitcast %"class.blink::Node"* %132 to %"class.blink::Element"*
  br label %79

150:                                              ; preds = %227, %113
  %151 = phi %"class.blink::Attribute"* [ %109, %113 ], [ %228, %227 ]
  %152 = load i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)**, i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)*** %114, align 8
  %153 = getelementptr inbounds i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)*, i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)** %152, i64 93
  %154 = load i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)*, i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)** %153, align 8
  %155 = call zeroext i1 %154(%"class.blink::Element"* nonnull %80, %"class.blink::Attribute"* dereferenceable(16) %151) #9
  br i1 %155, label %156, label %227

156:                                              ; preds = %150
  %157 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %151, i64 0, i32 1
  %158 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %157, i64 0, i32 0, i32 0, i32 0
  %159 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %158, align 8
  %160 = icmp eq %"class.WTF::StringImpl"* %159, null
  br i1 %160, label %227, label %161

161:                                              ; preds = %156
  %162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %159, i64 0, i32 1
  %163 = load i32, i32* %162, align 4
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %227, label %165

165:                                              ; preds = %161
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66) #9
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %67) #9
  %166 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %157, i64 0, i32 0
  call void @_ZN5blink4KURLC1ERKS0_RKN3WTF6StringE(%"class.blink::KURL"* nonnull %8, %"class.blink::KURL"* nonnull dereferenceable(112) %6, %"class.WTF::String"* dereferenceable(8) %166) #9
  store %"class.blink::Element"* %80, %"class.blink::Element"** %68, align 8
  %167 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %151, i64 0, i32 0, i32 0, i32 0
  %168 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %167, align 8
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %168, %"class.blink::QualifiedName::QualifiedNameImpl"** %69, align 8
  %169 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %168, null
  br i1 %169, label %177, label %170

170:                                              ; preds = %165
  %171 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %168, i64 0, i32 1
  %172 = load i32, i32* %171, align 4
  %173 = and i32 %172, 16777216
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %175, label %177

175:                                              ; preds = %170
  %176 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %168, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %176) #9
  br label %177

177:                                              ; preds = %175, %170, %165
  %178 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  store %"class.WTF::StringImpl"* %178, %"class.WTF::StringImpl"** %71, align 8
  %179 = icmp eq %"class.WTF::StringImpl"* %178, null
  br i1 %179, label %197, label %180

180:                                              ; preds = %177
  %181 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %182 = load atomic i32, i32* %181 monotonic, align 4
  %183 = and i32 %182, 2
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %197

185:                                              ; preds = %180
  %186 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 0
  %187 = load i32, i32* %186, align 4
  %188 = zext i32 %187 to i33
  %189 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %188, i33 1) #9
  %190 = extractvalue { i33, i1 } %189, 1
  %191 = extractvalue { i33, i1 } %189, 0
  %192 = icmp slt i33 %191, 0
  %193 = or i1 %190, %192
  br i1 %193, label %194, label %195, !prof !2

194:                                              ; preds = %185
  call void @llvm.trap() #9
  unreachable

195:                                              ; preds = %185
  %196 = trunc i33 %191 to i32
  store i32 %196, i32* %186, align 4
  br label %197

197:                                              ; preds = %195, %180, %177
  %198 = load i32, i32* %29, align 4
  %199 = load i32, i32* %28, align 8
  %200 = icmp eq i32 %198, %199
  br i1 %200, label %209, label %201, !prof !2

201:                                              ; preds = %197
  %202 = load %"class.blink::AttributeChange"*, %"class.blink::AttributeChange"** %27, align 8
  %203 = zext i32 %198 to i64
  %204 = getelementptr inbounds %"class.blink::AttributeChange", %"class.blink::AttributeChange"* %202, i64 %203
  %205 = bitcast %"class.blink::AttributeChange"* %204 to i8*
  %206 = call %"class.blink::AttributeChange"* @_ZN3WTF15ConstructTraitsIN5blink15AttributeChangeENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8* %205, %"class.blink::AttributeChange"* nonnull dereferenceable(24) %7) #9
  %207 = load i32, i32* %29, align 4
  %208 = add i32 %207, 1
  store i32 %208, i32* %29, align 4
  br label %210

209:                                              ; preds = %197
  call void @_ZN3WTF6VectorIN5blink15AttributeChangeELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.2944"* nonnull %65, %"class.blink::AttributeChange"* nonnull dereferenceable(24) %7) #9
  br label %210

210:                                              ; preds = %209, %201
  %211 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  %212 = icmp eq %"class.WTF::StringImpl"* %211, null
  br i1 %212, label %226, label %213

213:                                              ; preds = %210
  %214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %215 = load atomic i32, i32* %214 monotonic, align 4
  %216 = and i32 %215, 2
  %217 = icmp eq i32 %216, 0
  %218 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 0
  %219 = load i32, i32* %218, align 4
  br i1 %217, label %220, label %222

220:                                              ; preds = %213
  %221 = add i32 %219, -1
  store i32 %221, i32* %218, align 4
  br label %222

222:                                              ; preds = %220, %213
  %223 = phi i32 [ %221, %220 ], [ %219, %213 ]
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %226

225:                                              ; preds = %222
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %211) #9
  br label %226

226:                                              ; preds = %225, %222, %210
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %72) #9
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %67) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66) #9
  br label %227

227:                                              ; preds = %226, %161, %156, %150
  %228 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %151, i64 1
  %229 = icmp eq %"class.blink::Attribute"* %228, %111
  br i1 %229, label %115, label %150

230:                                              ; preds = %73, %230
  %231 = phi %"class.blink::AttributeChange"* [ %232, %230 ], [ %74, %73 ]
  call void @_ZN5blink15AttributeChange5ApplyEv(%"class.blink::AttributeChange"* %231) #9
  %232 = getelementptr inbounds %"class.blink::AttributeChange", %"class.blink::AttributeChange"* %231, i64 1
  %233 = icmp eq %"class.blink::AttributeChange"* %232, %77
  br i1 %233, label %234, label %230

234:                                              ; preds = %54, %230, %25, %33, %61, %73
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %30) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #9
  br label %235

235:                                              ; preds = %4, %234, %22, %19, %15
  ret %"class.blink::DocumentFragment"* %10
}

declare %"class.blink::DocumentFragment"* @_ZN5blink16DocumentFragment6CreateERNS_8DocumentE(%"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #2

declare void @_ZN5blink16DocumentFragment9ParseHTMLERKN3WTF6StringEPNS_7ElementENS_19ParserContentPolicyE(%"class.blink::DocumentFragment"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::Element"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN5blinkneERKN3WTF6StringERKNS_4KURLE(%"class.WTF::String"* dereferenceable(8), %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #2

declare dereferenceable(112) %"class.blink::KURL"* @_ZN5blink8BlankURLEv() local_unnamed_addr #2

declare dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink8Document7BaseURLEv(%"class.blink::Document"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DocumentFragment"* @_ZN5blink35CreateFragmentFromMarkupWithContextERNS_8DocumentERKN3WTF6StringEjjS5_NS_19ParserContentPolicyE(%"class.blink::Document"* dereferenceable(2848), %"class.WTF::String"* dereferenceable(8), i32, i32, %"class.WTF::String"* dereferenceable(8), i32) local_unnamed_addr #0 {
  %7 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %8 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %9 = alloca %"class.blink::PositionTemplate", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringBuilder", align 8
  %13 = alloca %"class.WTF::StringView", align 8
  %14 = alloca %"class.WTF::String", align 8
  %15 = alloca %"class.WTF::StringView", align 8
  %16 = alloca %"class.WTF::String", align 8
  %17 = alloca %"class.WTF::StringView", align 8
  %18 = alloca %"class.WTF::String", align 8
  %19 = alloca %"class.blink::Document"*, align 8
  %20 = alloca %"class.blink::DocumentInit", align 8
  %21 = alloca %"class.blink::EphemeralRangeTemplate", align 8
  %22 = alloca %"class.blink::PositionTemplate", align 8
  %23 = alloca %"class.blink::PositionTemplate", align 8
  %24 = alloca %"class.blink::PositionTemplate", align 8
  %25 = alloca %"class.blink::PositionTemplate", align 8
  %26 = bitcast %"class.WTF::StringBuilder"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %26) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 48, i1 false)
  %27 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %12, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %27, align 8
  %28 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %12, i64 0, i32 1
  %29 = bitcast %union.anon.2746* %28 to i8*
  store i8 0, i8* %29, align 8
  %30 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %12, i64 0, i32 2
  store i32 0, i32* %30, align 8
  %31 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %12, i64 0, i32 3
  store i8 1, i8* %31, align 4
  %32 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %12, i64 0, i32 4
  store i8 0, i8* %32, align 1
  %33 = bitcast %"class.WTF::StringView"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #9
  %34 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* %1, i32 0, i32 %2) #9
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %36, label %41

36:                                               ; preds = %6
  %37 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  store i8* null, i8** %37, align 8
  %38 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %39 = bitcast %"class.WTF::StringView"* %13 to i64*
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  store i32 0, i32* %40, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %12, %"class.WTF::StringView"* nonnull dereferenceable(24) %13)
  br label %61

41:                                               ; preds = %6
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 0
  store %"class.WTF::StringImpl"* %34, %"class.WTF::StringImpl"** %42, align 8
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 1
  %46 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  %47 = bitcast i8** %46 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %45, %"class.WTF::StringImpl"** %47, align 8
  %48 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  store i32 %44, i32* %48, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %12, %"class.WTF::StringView"* nonnull dereferenceable(24) %13)
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  br i1 %52, label %55, label %57

55:                                               ; preds = %41
  %56 = add i32 %54, -1
  store i32 %56, i32* %53, align 4
  br label %57

57:                                               ; preds = %55, %41
  %58 = phi i32 [ %56, %55 ], [ %54, %41 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #9
  br label %61

61:                                               ; preds = %36, %57, %60
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #9
  %62 = bitcast %"class.WTF::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #9
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %14, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @_ZN5blinkL18kFragmentMarkerTagE, i64 0, i64 0), i64 22) #9
  call void @_ZN5blink15MarkupFormatter13AppendCommentERN3WTF13StringBuilderERKNS1_6StringE(%"class.WTF::StringBuilder"* nonnull dereferenceable(48) %12, %"class.WTF::String"* nonnull dereferenceable(8) %14) #9
  %63 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %64, null
  br i1 %65, label %79, label %66

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  br i1 %70, label %73, label %75

73:                                               ; preds = %66
  %74 = add i32 %72, -1
  store i32 %74, i32* %71, align 4
  br label %75

75:                                               ; preds = %73, %66
  %76 = phi i32 [ %74, %73 ], [ %72, %66 ]
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %64) #9
  br label %79

79:                                               ; preds = %61, %75, %78
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #9
  %80 = bitcast %"class.WTF::StringView"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %80) #9
  %81 = sub i32 %3, %2
  %82 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* %1, i32 %2, i32 %81) #9
  %83 = icmp eq %"class.WTF::StringImpl"* %82, null
  br i1 %83, label %84, label %89

84:                                               ; preds = %79
  %85 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  store i8* null, i8** %85, align 8
  %86 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %87 = bitcast %"class.WTF::StringView"* %15 to i64*
  store i64 %86, i64* %87, align 8
  %88 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 2
  store i32 0, i32* %88, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %12, %"class.WTF::StringView"* nonnull dereferenceable(24) %15)
  br label %109

89:                                               ; preds = %79
  %90 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 0
  store %"class.WTF::StringImpl"* %82, %"class.WTF::StringImpl"** %90, align 8
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 1
  %92 = load i32, i32* %91, align 4
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 1
  %94 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  %95 = bitcast i8** %94 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %93, %"class.WTF::StringImpl"** %95, align 8
  %96 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 2
  store i32 %92, i32* %96, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %12, %"class.WTF::StringView"* nonnull dereferenceable(24) %15)
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load atomic i32, i32* %97 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 0
  %102 = load i32, i32* %101, align 4
  br i1 %100, label %103, label %105

103:                                              ; preds = %89
  %104 = add i32 %102, -1
  store i32 %104, i32* %101, align 4
  br label %105

105:                                              ; preds = %103, %89
  %106 = phi i32 [ %104, %103 ], [ %102, %89 ]
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %109

108:                                              ; preds = %105
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %82) #9
  br label %109

109:                                              ; preds = %84, %105, %108
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %80) #9
  %110 = bitcast %"class.WTF::String"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %110) #9
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %16, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @_ZN5blinkL18kFragmentMarkerTagE, i64 0, i64 0), i64 22) #9
  call void @_ZN5blink15MarkupFormatter13AppendCommentERN3WTF13StringBuilderERKNS1_6StringE(%"class.WTF::StringBuilder"* nonnull dereferenceable(48) %12, %"class.WTF::String"* nonnull dereferenceable(8) %16) #9
  %111 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 0, i32 0, i32 0
  %112 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %111, align 8
  %113 = icmp eq %"class.WTF::StringImpl"* %112, null
  br i1 %113, label %127, label %114

114:                                              ; preds = %109
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = load atomic i32, i32* %115 monotonic, align 4
  %117 = and i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 0
  %120 = load i32, i32* %119, align 4
  br i1 %118, label %121, label %123

121:                                              ; preds = %114
  %122 = add i32 %120, -1
  store i32 %122, i32* %119, align 4
  br label %123

123:                                              ; preds = %121, %114
  %124 = phi i32 [ %122, %121 ], [ %120, %114 ]
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %126, label %127

126:                                              ; preds = %123
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %112) #9
  br label %127

127:                                              ; preds = %109, %123, %126
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %110) #9
  %128 = bitcast %"class.WTF::StringView"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %128) #9
  %129 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* %1, i32 %3, i32 -1) #9
  %130 = icmp eq %"class.WTF::StringImpl"* %129, null
  br i1 %130, label %131, label %136

131:                                              ; preds = %127
  %132 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 1
  store i8* null, i8** %132, align 8
  %133 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %134 = bitcast %"class.WTF::StringView"* %17 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 2
  store i32 0, i32* %135, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %12, %"class.WTF::StringView"* nonnull dereferenceable(24) %17)
  br label %156

136:                                              ; preds = %127
  %137 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 0
  store %"class.WTF::StringImpl"* %129, %"class.WTF::StringImpl"** %137, align 8
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 1
  %139 = load i32, i32* %138, align 4
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 1
  %141 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 1
  %142 = bitcast i8** %141 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %140, %"class.WTF::StringImpl"** %142, align 8
  %143 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 2
  store i32 %139, i32* %143, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %12, %"class.WTF::StringView"* nonnull dereferenceable(24) %17)
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load atomic i32, i32* %144 monotonic, align 4
  %146 = and i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 0
  %149 = load i32, i32* %148, align 4
  br i1 %147, label %150, label %152

150:                                              ; preds = %136
  %151 = add i32 %149, -1
  store i32 %151, i32* %148, align 4
  br label %152

152:                                              ; preds = %150, %136
  %153 = phi i32 [ %151, %150 ], [ %149, %136 ]
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %156

155:                                              ; preds = %152
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %129) #9
  br label %156

156:                                              ; preds = %131, %152, %155
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %128) #9
  %157 = bitcast %"class.WTF::String"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %157) #9
  %158 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %12) #9
  %159 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %158, %"class.WTF::StringImpl"** %159, align 8
  %160 = call %"class.blink::DocumentFragment"* @_ZN5blink24CreateFragmentFromMarkupERNS_8DocumentERKN3WTF6StringES5_NS_19ParserContentPolicyE(%"class.blink::Document"* dereferenceable(2848) %0, %"class.WTF::String"* nonnull dereferenceable(8) %18, %"class.WTF::String"* dereferenceable(8) %4, i32 %5)
  %161 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %159, align 8
  %162 = icmp eq %"class.WTF::StringImpl"* %161, null
  br i1 %162, label %176, label %163

163:                                              ; preds = %156
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %165 = load atomic i32, i32* %164 monotonic, align 4
  %166 = and i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 0, i32 0
  %169 = load i32, i32* %168, align 4
  br i1 %167, label %170, label %172

170:                                              ; preds = %163
  %171 = add i32 %169, -1
  store i32 %171, i32* %168, align 4
  br label %172

172:                                              ; preds = %170, %163
  %173 = phi i32 [ %171, %170 ], [ %169, %163 ]
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %175, label %176

175:                                              ; preds = %172
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %161) #9
  br label %176

176:                                              ; preds = %156, %172, %175
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %157) #9
  %177 = getelementptr inbounds %"class.blink::DocumentFragment", %"class.blink::DocumentFragment"* %160, i64 0, i32 0, i32 1, i32 0, i32 0
  %178 = load %"class.blink::Node"*, %"class.blink::Node"** %177, align 8
  %179 = icmp eq %"class.blink::Node"* %178, null
  br i1 %179, label %493, label %180

180:                                              ; preds = %176
  %181 = bitcast %"class.WTF::StringView"* %10 to i8*
  %182 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 0
  %183 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  %184 = bitcast i8** %183 to %"class.WTF::StringImpl"**
  %185 = bitcast %"class.WTF::StringView"* %10 to i64*
  %186 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  %187 = bitcast %"class.WTF::StringView"* %11 to i8*
  %188 = bitcast %"class.WTF::StringView"* %11 to i64*
  %189 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  %190 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  br label %191

191:                                              ; preds = %248, %180
  %192 = phi %"class.blink::Comment"* [ null, %180 ], [ %232, %248 ]
  %193 = phi %"class.blink::Node"* [ %178, %180 ], [ %249, %248 ]
  %194 = bitcast %"class.blink::Node"* %193 to i32 (%"class.blink::Node"*)***
  %195 = load i32 (%"class.blink::Node"*)**, i32 (%"class.blink::Node"*)*** %194, align 8
  %196 = getelementptr inbounds i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %195, i64 30
  %197 = load i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %196, align 8
  %198 = call i32 %197(%"class.blink::Node"* nonnull %193) #9
  %199 = icmp eq i32 %198, 8
  br i1 %199, label %200, label %231

200:                                              ; preds = %191
  %201 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %193, i64 1
  %202 = bitcast %"class.blink::Node"* %201 to i8*
  %203 = load i8, i8* %202, align 8, !range !3
  %204 = icmp eq i8 %203, 0
  br i1 %204, label %209, label %205

205:                                              ; preds = %200
  %206 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %193, i64 1, i32 0, i32 0, i32 1
  %207 = bitcast %"class.blink::TraceWrapperV8Reference"* %206 to %"class.blink::ParkableString"*
  %208 = call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"* %207) #9
  br label %212

209:                                              ; preds = %200
  %210 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %193, i64 1, i32 1
  %211 = bitcast i32* %210 to %"class.WTF::String"*
  br label %212

212:                                              ; preds = %209, %205
  %213 = phi %"class.WTF::String"* [ %208, %205 ], [ %211, %209 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %181) #9
  %214 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %213, i64 0, i32 0, i32 0
  %215 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %214, align 8
  %216 = icmp eq %"class.WTF::StringImpl"* %215, null
  br i1 %216, label %217, label %219

217:                                              ; preds = %212
  store i8* null, i8** %183, align 8
  %218 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %218, i64* %185, align 8
  br label %224

219:                                              ; preds = %212
  store %"class.WTF::StringImpl"* %215, %"class.WTF::StringImpl"** %182, align 8
  %220 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 1
  %221 = load i32, i32* %220, align 4
  %222 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 1
  store %"class.WTF::StringImpl"* %222, %"class.WTF::StringImpl"** %184, align 8
  %223 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %224

224:                                              ; preds = %219, %217
  %225 = phi i64 [ %223, %219 ], [ %218, %217 ]
  %226 = phi i32 [ %221, %219 ], [ 0, %217 ]
  store i32 %226, i32* %186, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %187) #9
  store i64 %225, i64* %188, align 8
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @_ZN5blinkL18kFragmentMarkerTagE, i64 0, i64 0), i8** %189, align 8
  store i32 22, i32* %190, align 8
  %227 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %11) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %187) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %181) #9
  br i1 %227, label %228, label %231

228:                                              ; preds = %224
  %229 = icmp eq %"class.blink::Comment"* %192, null
  %230 = bitcast %"class.blink::Node"* %193 to %"class.blink::Comment"*
  br i1 %229, label %231, label %251

231:                                              ; preds = %228, %224, %191
  %232 = phi %"class.blink::Comment"* [ %192, %224 ], [ %192, %191 ], [ %230, %228 ]
  %233 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %193, i64 0, i32 1
  %234 = load i32, i32* %233, align 8
  %235 = and i32 %234, 2
  %236 = icmp eq i32 %235, 0
  br i1 %236, label %242, label %237

237:                                              ; preds = %231
  %238 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %193, i64 1
  %239 = bitcast %"class.blink::Node"* %238 to %"class.blink::Node"**
  %240 = load %"class.blink::Node"*, %"class.blink::Node"** %239, align 8
  %241 = icmp eq %"class.blink::Node"* %240, null
  br i1 %241, label %242, label %248

242:                                              ; preds = %237, %231
  %243 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %193, i64 0, i32 5, i32 0, i32 0
  %244 = load %"class.blink::Node"*, %"class.blink::Node"** %243, align 8
  %245 = icmp eq %"class.blink::Node"* %244, null
  br i1 %245, label %246, label %248

246:                                              ; preds = %242
  %247 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %193) #9
  br label %248

248:                                              ; preds = %246, %242, %237
  %249 = phi %"class.blink::Node"* [ %247, %246 ], [ %244, %242 ], [ %240, %237 ]
  %250 = icmp eq %"class.blink::Node"* %249, null
  br i1 %250, label %493, label %191

251:                                              ; preds = %228
  %252 = bitcast %"class.blink::Document"** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %252) #9
  store %"class.blink::Document"* inttoptr (i64 -6148914691236517206 to %"class.blink::Document"*), %"class.blink::Document"** %19, align 8
  %253 = bitcast %"class.blink::DocumentInit"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 288, i8* nonnull %253) #9
  call void @_ZN5blink12DocumentInit6CreateEv(%"class.blink::DocumentInit"* nonnull sret %20) #9
  %254 = call %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"* %0) #9
  %255 = call dereferenceable(288) %"class.blink::DocumentInit"* @_ZN5blink12DocumentInit20WithExecutionContextEPNS_16ExecutionContextE(%"class.blink::DocumentInit"* nonnull %20, %"class.blink::ExecutionContext"* %254) #9
  %256 = call %"class.blink::Document"* @_ZN5blink25MakeGarbageCollectedTraitINS_8DocumentEE4CallIJRNS_12DocumentInitEEEEPS1_DpOT_(%"class.blink::DocumentInit"* dereferenceable(288) %255) #9
  call void @_ZN5blink12DocumentInitD1Ev(%"class.blink::DocumentInit"* nonnull %20) #9
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %253) #9
  store %"class.blink::Document"* %256, %"class.blink::Document"** %19, align 8
  %257 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %0, i64 0, i32 16, i32 0, i32 0
  %258 = load %"class.blink::ContextFeatures"*, %"class.blink::ContextFeatures"** %257, align 8
  call void @_ZN5blink8Document18SetContextFeaturesERNS_15ContextFeaturesE(%"class.blink::Document"* %256, %"class.blink::ContextFeatures"* dereferenceable(24) %258) #9
  %259 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %260 = call %"class.blink::Element"* @_ZN5blink25MakeGarbageCollectedTraitINS_7ElementEE4CallIJRKNS_13QualifiedNameERPNS_8DocumentEEEEPS1_DpOT_(%"class.blink::QualifiedName"* dereferenceable(8) %259, %"class.blink::Document"** nonnull dereferenceable(8) %19) #9
  %261 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %260, i64 0, i32 0
  %262 = getelementptr inbounds %"class.blink::DocumentFragment", %"class.blink::DocumentFragment"* %160, i64 0, i32 0, i32 0
  %263 = call %"class.blink::Node"* @_ZN5blink13ContainerNode11AppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %261, %"class.blink::Node"* %262) #9
  %264 = bitcast %"class.blink::Document"** %19 to %"class.blink::ContainerNode"**
  %265 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %264, align 8
  %266 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %260, i64 0, i32 0, i32 0
  %267 = call %"class.blink::Node"* @_ZN5blink13ContainerNode11AppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %265, %"class.blink::Node"* %266) #9
  %268 = bitcast %"class.blink::EphemeralRangeTemplate"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %268) #9
  %269 = bitcast %"class.blink::PositionTemplate"* %22 to i8*
  %270 = bitcast %"class.blink::EphemeralRangeTemplate"* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %270, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %269) #9
  %271 = bitcast %"class.blink::PositionTemplate"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %271) #9
  %272 = getelementptr inbounds %"class.blink::Comment", %"class.blink::Comment"* %192, i64 0, i32 0, i32 0
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE9AfterNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %23, %"class.blink::Node"* dereferenceable(64) %272) #9
  call void @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE24ParentAnchoredEquivalentEv(%"class.blink::PositionTemplate"* nonnull sret %22, %"class.blink::PositionTemplate"* nonnull %23) #9
  %273 = bitcast %"class.blink::PositionTemplate"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %273) #9
  %274 = bitcast %"class.blink::PositionTemplate"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %274) #9
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE10BeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %25, %"class.blink::Node"* nonnull dereferenceable(64) %193) #9
  call void @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE24ParentAnchoredEquivalentEv(%"class.blink::PositionTemplate"* nonnull sret %24, %"class.blink::PositionTemplate"* nonnull %25) #9
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EES8_(%"class.blink::EphemeralRangeTemplate"* nonnull %21, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %22, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %24) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %274) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %273) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %271) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %269) #9
  %275 = call %"class.blink::Node"* @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE23CommonAncestorContainerEv(%"class.blink::EphemeralRangeTemplate"* nonnull %21) #9
  %276 = bitcast %"class.blink::PositionTemplate"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %276) #9
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE27FirstPositionInOrBeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %9, %"class.blink::Node"* dereferenceable(64) %275) #9
  %277 = call %"class.blink::Node"* @_ZN5blink19EnclosingNodeOfTypeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEEPFbPKNS_4NodeEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate"* nonnull dereferenceable(16) %9, i1 (%"class.blink::Node"*)* nonnull @_ZN5blinkL18IsHTMLBlockElementEPKNS_4NodeE, i32 1) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %276) #9
  %278 = icmp eq %"class.blink::Node"* %277, null
  br i1 %278, label %335, label %279

279:                                              ; preds = %251
  %280 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %277, i64 0, i32 1
  %281 = load i32, i32* %280, align 8
  %282 = and i32 %281, 48
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %284, label %332

284:                                              ; preds = %279
  %285 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTbodyTagE, align 8
  %286 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %285, i64 0, i32 0, i32 0, i32 0
  %287 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %286, align 8
  %288 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %277, i64 1, i32 2
  %289 = bitcast %"class.blink::Member"* %288 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %290 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %289, align 8
  %291 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %290, i64 0, i32 3, i32 0, i32 0, i32 0
  %292 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %291, align 8
  %293 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %287, i64 0, i32 3, i32 0, i32 0, i32 0
  %294 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %293, align 8
  %295 = icmp eq %"class.WTF::StringImpl"* %292, %294
  br i1 %295, label %303, label %296

296:                                              ; preds = %284
  %297 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTrTagE, align 8
  %298 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %297, i64 0, i32 0, i32 0, i32 0
  %299 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %298, align 8
  %300 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %299, i64 0, i32 3, i32 0, i32 0, i32 0
  %301 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %300, align 8
  %302 = icmp eq %"class.WTF::StringImpl"* %292, %301
  br i1 %302, label %303, label %332

303:                                              ; preds = %296, %284
  %304 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %277) #9
  %305 = icmp eq %"class.blink::ContainerNode"* %304, null
  br i1 %305, label %329, label %306

306:                                              ; preds = %303
  %307 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTableTagE, align 8
  %308 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %307, i64 0, i32 0, i32 0, i32 0
  br label %309

309:                                              ; preds = %326, %306
  %310 = phi %"class.blink::ContainerNode"* [ %304, %306 ], [ %327, %326 ]
  %311 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %310, i64 0, i32 0
  %312 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %310, i64 0, i32 0, i32 1
  %313 = load i32, i32* %312, align 8
  %314 = and i32 %313, 48
  %315 = icmp eq i32 %314, 0
  br i1 %315, label %316, label %326

316:                                              ; preds = %309
  %317 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %308, align 8
  %318 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %311, i64 1, i32 2
  %319 = bitcast %"class.blink::Member"* %318 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %320 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %319, align 8
  %321 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %320, i64 0, i32 3, i32 0, i32 0, i32 0
  %322 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %321, align 8
  %323 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %317, i64 0, i32 3, i32 0, i32 0, i32 0
  %324 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %323, align 8
  %325 = icmp eq %"class.WTF::StringImpl"* %322, %324
  br i1 %325, label %329, label %326

326:                                              ; preds = %316, %309
  %327 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %311) #9
  %328 = icmp eq %"class.blink::ContainerNode"* %327, null
  br i1 %328, label %329, label %309

329:                                              ; preds = %326, %316, %303
  %330 = phi %"class.blink::ContainerNode"* [ null, %303 ], [ %310, %316 ], [ null, %326 ]
  %331 = bitcast %"class.blink::ContainerNode"* %330 to %"class.blink::HTMLElement"*
  br label %338

332:                                              ; preds = %296, %279
  %333 = call zeroext i1 @_ZN5blink30IsNonTableCellHTMLBlockElementEPKNS_4NodeE(%"class.blink::Node"* nonnull %277) #9
  %334 = bitcast %"class.blink::Node"* %277 to %"class.blink::HTMLElement"*
  br i1 %333, label %338, label %335

335:                                              ; preds = %332, %251
  %336 = call %"class.blink::DocumentFragment"* @_ZN5blink16DocumentFragment6CreateERNS_8DocumentE(%"class.blink::Document"* dereferenceable(2848) %0) #9
  %337 = getelementptr inbounds %"class.blink::DocumentFragment", %"class.blink::DocumentFragment"* %336, i64 0, i32 0
  br label %346

338:                                              ; preds = %332, %329
  %339 = phi %"class.blink::HTMLElement"* [ %331, %329 ], [ %334, %332 ]
  %340 = call %"class.blink::DocumentFragment"* @_ZN5blink16DocumentFragment6CreateERNS_8DocumentE(%"class.blink::Document"* dereferenceable(2848) %0) #9
  %341 = icmp eq %"class.blink::HTMLElement"* %339, null
  %342 = getelementptr inbounds %"class.blink::DocumentFragment", %"class.blink::DocumentFragment"* %340, i64 0, i32 0
  br i1 %341, label %346, label %343

343:                                              ; preds = %338
  %344 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %339, i64 0, i32 0, i32 0, i32 0
  %345 = call %"class.blink::Node"* @_ZN5blink13ContainerNode11AppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %342, %"class.blink::Node"* %344) #9
  br label %350

346:                                              ; preds = %335, %338
  %347 = phi %"class.blink::ContainerNode"* [ %337, %335 ], [ %342, %338 ]
  %348 = phi %"class.blink::DocumentFragment"* [ %336, %335 ], [ %340, %338 ]
  %349 = bitcast %"class.blink::Node"* %275 to %"class.blink::ContainerNode"*
  call void @_ZN5blink13ContainerNode25ParserTakeAllChildrenFromERS0_(%"class.blink::ContainerNode"* %347, %"class.blink::ContainerNode"* dereferenceable(80) %349) #9
  br label %350

350:                                              ; preds = %346, %343
  %351 = phi %"class.blink::DocumentFragment"* [ %348, %346 ], [ %340, %343 ]
  %352 = getelementptr inbounds %"class.blink::DocumentFragment", %"class.blink::DocumentFragment"* %351, i64 0, i32 0, i32 1, i32 0, i32 0
  %353 = load %"class.blink::Node"*, %"class.blink::Node"** %352, align 8
  %354 = icmp eq %"class.blink::Node"* %353, null
  br i1 %354, label %433, label %355

355:                                              ; preds = %350
  %356 = bitcast %"class.blink::DummyExceptionStateForTesting"* %7 to i8*
  %357 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %7, i64 0, i32 0, i32 0
  %358 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %7, i64 0, i32 0, i32 1, i32 0
  %359 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %7, i64 0, i32 0, i32 1, i32 1
  %360 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %7, i64 0, i32 0, i32 1, i32 2
  %361 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %7, i64 0, i32 0, i32 5, i32 0, i32 0
  %362 = bitcast %"class.WTF::StringImpl"** %361 to i8*
  %363 = bitcast i8** %360 to i8*
  %364 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %7, i64 0, i32 0
  %365 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %7, i64 0, i32 0, i32 4
  %366 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %7, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %367 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %7, i64 0, i32 0, i32 3
  br label %368

368:                                              ; preds = %430, %355
  %369 = phi %"class.blink::Node"* [ %353, %355 ], [ %431, %430 ]
  %370 = call zeroext i1 @_ZNK5blink4Node14IsDescendantOfEPKS0_(%"class.blink::Node"* %272, %"class.blink::Node"* nonnull %369) #9
  br i1 %370, label %371, label %387

371:                                              ; preds = %368
  %372 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %369, i64 0, i32 1
  %373 = load i32, i32* %372, align 8
  %374 = and i32 %373, 2
  %375 = icmp eq i32 %374, 0
  br i1 %375, label %381, label %376

376:                                              ; preds = %371
  %377 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %369, i64 1
  %378 = bitcast %"class.blink::Node"* %377 to %"class.blink::Node"**
  %379 = load %"class.blink::Node"*, %"class.blink::Node"** %378, align 8
  %380 = icmp eq %"class.blink::Node"* %379, null
  br i1 %380, label %381, label %430

381:                                              ; preds = %376, %371
  %382 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %369, i64 0, i32 5, i32 0, i32 0
  %383 = load %"class.blink::Node"*, %"class.blink::Node"** %382, align 8
  %384 = icmp eq %"class.blink::Node"* %383, null
  br i1 %384, label %385, label %430

385:                                              ; preds = %381
  %386 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %369) #9
  br label %430

387:                                              ; preds = %368
  %388 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %369, i64 0, i32 5, i32 0, i32 0
  %389 = load %"class.blink::Node"*, %"class.blink::Node"** %388, align 8
  %390 = icmp eq %"class.blink::Node"* %389, null
  br i1 %390, label %391, label %393

391:                                              ; preds = %387
  %392 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %369) #9
  br label %393

393:                                              ; preds = %391, %387
  %394 = phi %"class.blink::Node"* [ %392, %391 ], [ %389, %387 ]
  %395 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %369) #9
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %356) #9
  store i16 1, i16* %358, align 8
  store i16 0, i16* %359, align 2
  call void @llvm.memset.p0i8.i64(i8* align 8 %362, i8 0, i64 16, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* align 8 %363, i8 0, i64 36, i1 false) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %357, align 8
  %396 = call %"class.blink::Node"* @_ZN5blink13ContainerNode11RemoveChildEPNS_4NodeERNS_14ExceptionStateE(%"class.blink::ContainerNode"* %395, %"class.blink::Node"* nonnull %369, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %364) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %357, align 8
  %397 = load i32, i32* %365, align 8
  %398 = icmp eq i32 %397, 0
  br i1 %398, label %400, label %399

399:                                              ; preds = %393
  call void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"* nonnull %364) #9
  br label %400

400:                                              ; preds = %399, %393
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %357, align 8
  %401 = load i64*, i64** %366, align 8
  %402 = icmp eq i64* %401, null
  br i1 %402, label %412, label %403

403:                                              ; preds = %400
  %404 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %367, align 8
  %405 = bitcast %"class.v8::Isolate"* %404 to %"class.v8::internal::Isolate"*
  %406 = load i64, i64* %401, align 8
  %407 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %405, i64 %406) #9
  %408 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %404) #9
  br i1 %408, label %412, label %409

409:                                              ; preds = %403
  %410 = bitcast i64* %407 to %"class.v8::Value"*
  %411 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %404, %"class.v8::Value"* %410) #9
  br label %412

412:                                              ; preds = %409, %403, %400
  %413 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %361, align 8
  %414 = icmp eq %"class.WTF::StringImpl"* %413, null
  br i1 %414, label %428, label %415

415:                                              ; preds = %412
  %416 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %413, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %417 = load atomic i32, i32* %416 monotonic, align 4
  %418 = and i32 %417, 2
  %419 = icmp eq i32 %418, 0
  %420 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %413, i64 0, i32 0
  %421 = load i32, i32* %420, align 4
  br i1 %419, label %422, label %424

422:                                              ; preds = %415
  %423 = add i32 %421, -1
  store i32 %423, i32* %420, align 4
  br label %424

424:                                              ; preds = %422, %415
  %425 = phi i32 [ %423, %422 ], [ %421, %415 ]
  %426 = icmp eq i32 %425, 0
  br i1 %426, label %427, label %428

427:                                              ; preds = %424
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %413) #9
  br label %428

428:                                              ; preds = %427, %424, %412
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %356) #9
  %429 = icmp eq %"class.blink::Node"* %272, %369
  br i1 %429, label %433, label %430

430:                                              ; preds = %428, %385, %381, %376
  %431 = phi %"class.blink::Node"* [ %394, %428 ], [ %386, %385 ], [ %383, %381 ], [ %379, %376 ]
  %432 = icmp eq %"class.blink::Node"* %431, null
  br i1 %432, label %433, label %368

433:                                              ; preds = %430, %428, %350
  %434 = icmp eq %"class.blink::Node"* %193, null
  br i1 %434, label %492, label %435

435:                                              ; preds = %433
  %436 = bitcast %"class.blink::DummyExceptionStateForTesting"* %8 to i8*
  %437 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0, i32 0
  %438 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0, i32 1, i32 0
  %439 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0, i32 1, i32 1
  %440 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0, i32 1, i32 2
  %441 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0, i32 5, i32 0, i32 0
  %442 = bitcast %"class.WTF::StringImpl"** %441 to i8*
  %443 = bitcast i8** %440 to i8*
  %444 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0
  %445 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0, i32 4
  %446 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %447 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0, i32 3
  br label %448

448:                                              ; preds = %490, %435
  %449 = phi %"class.blink::Node"* [ %193, %435 ], [ %456, %490 ]
  %450 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %449, i64 0, i32 5, i32 0, i32 0
  %451 = load %"class.blink::Node"*, %"class.blink::Node"** %450, align 8
  %452 = icmp eq %"class.blink::Node"* %451, null
  br i1 %452, label %453, label %455

453:                                              ; preds = %448
  %454 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %449) #9
  br label %455

455:                                              ; preds = %453, %448
  %456 = phi %"class.blink::Node"* [ %454, %453 ], [ %451, %448 ]
  %457 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %449) #9
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %436) #9
  store i16 1, i16* %438, align 8
  store i16 0, i16* %439, align 2
  call void @llvm.memset.p0i8.i64(i8* align 8 %442, i8 0, i64 16, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* align 8 %443, i8 0, i64 36, i1 false) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %437, align 8
  %458 = call %"class.blink::Node"* @_ZN5blink13ContainerNode11RemoveChildEPNS_4NodeERNS_14ExceptionStateE(%"class.blink::ContainerNode"* %457, %"class.blink::Node"* nonnull %449, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %444) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %437, align 8
  %459 = load i32, i32* %445, align 8
  %460 = icmp eq i32 %459, 0
  br i1 %460, label %462, label %461

461:                                              ; preds = %455
  call void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"* nonnull %444) #9
  br label %462

462:                                              ; preds = %461, %455
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %437, align 8
  %463 = load i64*, i64** %446, align 8
  %464 = icmp eq i64* %463, null
  br i1 %464, label %474, label %465

465:                                              ; preds = %462
  %466 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %447, align 8
  %467 = bitcast %"class.v8::Isolate"* %466 to %"class.v8::internal::Isolate"*
  %468 = load i64, i64* %463, align 8
  %469 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %467, i64 %468) #9
  %470 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %466) #9
  br i1 %470, label %474, label %471

471:                                              ; preds = %465
  %472 = bitcast i64* %469 to %"class.v8::Value"*
  %473 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %466, %"class.v8::Value"* %472) #9
  br label %474

474:                                              ; preds = %471, %465, %462
  %475 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %441, align 8
  %476 = icmp eq %"class.WTF::StringImpl"* %475, null
  br i1 %476, label %490, label %477

477:                                              ; preds = %474
  %478 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %475, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %479 = load atomic i32, i32* %478 monotonic, align 4
  %480 = and i32 %479, 2
  %481 = icmp eq i32 %480, 0
  %482 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %475, i64 0, i32 0
  %483 = load i32, i32* %482, align 4
  br i1 %481, label %484, label %486

484:                                              ; preds = %477
  %485 = add i32 %483, -1
  store i32 %485, i32* %482, align 4
  br label %486

486:                                              ; preds = %484, %477
  %487 = phi i32 [ %485, %484 ], [ %483, %477 ]
  %488 = icmp eq i32 %487, 0
  br i1 %488, label %489, label %490

489:                                              ; preds = %486
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %475) #9
  br label %490

490:                                              ; preds = %489, %486, %474
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %436) #9
  %491 = icmp eq %"class.blink::Node"* %456, null
  br i1 %491, label %492, label %448

492:                                              ; preds = %490, %433
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate"* nonnull %21) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %268) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %252) #9
  br label %493

493:                                              ; preds = %248, %176, %492
  %494 = phi %"class.blink::DocumentFragment"* [ %351, %492 ], [ null, %176 ], [ null, %248 ]
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %12) #9
  %495 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %496 = icmp eq %"class.WTF::StringImpl"* %495, null
  br i1 %496, label %510, label %497

497:                                              ; preds = %493
  %498 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %495, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %499 = load atomic i32, i32* %498 monotonic, align 4
  %500 = and i32 %499, 2
  %501 = icmp eq i32 %500, 0
  %502 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %495, i64 0, i32 0
  %503 = load i32, i32* %502, align 4
  br i1 %501, label %504, label %506

504:                                              ; preds = %497
  %505 = add i32 %503, -1
  store i32 %505, i32* %502, align 4
  br label %506

506:                                              ; preds = %504, %497
  %507 = phi i32 [ %505, %504 ], [ %503, %497 ]
  %508 = icmp eq i32 %507, 0
  br i1 %508, label %509, label %510

509:                                              ; preds = %506
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %495) #9
  br label %510

510:                                              ; preds = %493, %506, %509
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %26) #9
  ret %"class.blink::DocumentFragment"* %494
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %10 = bitcast %"class.WTF::StringImpl"* %9 to i8*
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, %10
  %14 = bitcast i8* %12 to i16*
  br i1 %13, label %15, label %20

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %4, %17
  %19 = select i1 %18, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* null
  br label %20

20:                                               ; preds = %6, %15
  %21 = phi %"class.WTF::StringImpl"* [ %19, %15 ], [ null, %6 ]
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %74

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !3
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne %"class.WTF::StringImpl"* %21, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %74

31:                                               ; preds = %25
  %32 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #9
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !2

46:                                               ; preds = %37
  tail call void @llvm.trap() #9
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %31, %47
  %50 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %32, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #9
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %22, align 8
  %70 = load atomic i32, i32* %33 monotonic, align 4
  %71 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %72 = trunc i32 %70 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %71, align 4
  br label %81

74:                                               ; preds = %20, %25
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %12, i32 %4) #9
  br label %81

80:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %14, i32 %4) #9
  br label %81

81:                                               ; preds = %67, %80, %79, %2
  ret void
}

declare void @_ZN5blink15MarkupFormatter13AppendCommentERN3WTF13StringBuilderERKNS1_6StringE(%"class.WTF::StringBuilder"* dereferenceable(48), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"*, i32, i32) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #2

declare void @_ZN5blink12DocumentInit6CreateEv(%"class.blink::DocumentInit"* sret) local_unnamed_addr #2

declare dereferenceable(288) %"class.blink::DocumentInit"* @_ZN5blink12DocumentInit20WithExecutionContextEPNS_16ExecutionContextE(%"class.blink::DocumentInit"*, %"class.blink::ExecutionContext"*) local_unnamed_addr #2

declare %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink12DocumentInitD1Ev(%"class.blink::DocumentInit"*) unnamed_addr #3

declare void @_ZN5blink8Document18SetContextFeaturesERNS_15ContextFeaturesE(%"class.blink::Document"*, %"class.blink::ContextFeatures"* dereferenceable(24)) local_unnamed_addr #2

declare %"class.blink::Node"* @_ZN5blink13ContainerNode11AppendChildEPNS_4NodeE(%"class.blink::ContainerNode"*, %"class.blink::Node"*) local_unnamed_addr #2

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE9AfterNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare void @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE24ParentAnchoredEquivalentEv(%"class.blink::PositionTemplate"* sret, %"class.blink::PositionTemplate"*) local_unnamed_addr #2

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE10BeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EES8_(%"class.blink::EphemeralRangeTemplate"*, %"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::PositionTemplate"* dereferenceable(16)) unnamed_addr #2

declare %"class.blink::Node"* @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE23CommonAncestorContainerEv(%"class.blink::EphemeralRangeTemplate"*) local_unnamed_addr #2

declare void @_ZN5blink13ContainerNode25ParserTakeAllChildrenFromERS0_(%"class.blink::ContainerNode"*, %"class.blink::ContainerNode"* dereferenceable(80)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink12CreateMarkupEPKNS_4NodeENS_12ChildrenOnlyENS_12AbsoluteURLsENS_18IncludeShadowRootsENS_11HeapHashSetINS_6MemberINS_10ShadowRootEEEN3WTF10MemberHashIS8_EENSA_10HashTraitsIS9_EEEE(%"class.blink::Node"*, i32, i32, i32, %"class.blink::HeapHashSet.2786"* nocapture readonly) local_unnamed_addr #0 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.blink::MarkupAccumulator", align 8
  %8 = alloca %"class.blink::HeapHashSet.2786", align 8
  %9 = icmp eq %"class.blink::Node"* %0, null
  br i1 %9, label %10, label %11

10:                                               ; preds = %5
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i64 0) #9
  br label %65

11:                                               ; preds = %5
  %12 = bitcast %"class.blink::MarkupAccumulator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %12) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 120, i1 false)
  %13 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 3, i32 0, i32 0
  %14 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %14, i64 0, i32 2, i32 0, i32 0
  %16 = load %"class.blink::Document"*, %"class.blink::Document"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %16, i64 0, i32 107
  %18 = load i8, i8* %17, align 8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = zext i8 %20 to i32
  %22 = getelementptr inbounds %"class.blink::HeapHashSet.2786", %"class.blink::HeapHashSet.2786"* %8, i64 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.blink::HeapHashSet.2786", %"class.blink::HeapHashSet.2786"* %4, i64 0, i32 0, i32 0, i32 2
  %24 = bitcast %"class.blink::HeapHashSet.2786"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 0, i64 20, i1 false) #9
  %25 = load i32, i32* %23, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %62, label %27

27:                                               ; preds = %11
  call void @_ZN3WTF9HashTableIN5blink6MemberINS1_10ShadowRootEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.2790"* nonnull %22, i32 %25) #9
  %28 = load i32, i32* %23, align 4
  %29 = icmp eq i32 %28, 0
  %30 = getelementptr inbounds %"class.blink::HeapHashSet.2786", %"class.blink::HeapHashSet.2786"* %4, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.blink::Member.2792"*, %"class.blink::Member.2792"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::HeapHashSet.2786", %"class.blink::HeapHashSet.2786"* %4, i64 0, i32 0, i32 0, i32 1
  %33 = load i32, i32* %32, align 8
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds %"class.blink::Member.2792", %"class.blink::Member.2792"* %31, i64 %34
  br i1 %29, label %62, label %36

36:                                               ; preds = %27
  %37 = icmp eq i32 %33, 0
  br i1 %37, label %45, label %38

38:                                               ; preds = %36, %42
  %39 = phi %"class.blink::Member.2792"* [ %43, %42 ], [ %31, %36 ]
  %40 = bitcast %"class.blink::Member.2792"* %39 to i64*
  %41 = load i64, i64* %40, align 8
  switch i64 %41, label %45 [
    i64 -1, label %42
    i64 0, label %42
  ]

42:                                               ; preds = %38, %38
  %43 = getelementptr inbounds %"class.blink::Member.2792", %"class.blink::Member.2792"* %39, i64 1
  %44 = icmp eq %"class.blink::Member.2792"* %43, %35
  br i1 %44, label %62, label %38

45:                                               ; preds = %38, %36
  %46 = phi %"class.blink::Member.2792"* [ %31, %36 ], [ %39, %38 ]
  %47 = icmp eq %"class.blink::Member.2792"* %46, %35
  br i1 %47, label %62, label %48

48:                                               ; preds = %45, %60
  %49 = phi %"class.blink::Member.2792"* [ %54, %60 ], [ %46, %45 ]
  %50 = call { %"class.blink::Member.2792"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_10ShadowRootEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKS4_SG_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.2790"* nonnull %22, %"class.blink::Member.2792"* dereferenceable(8) %49, %"class.blink::Member.2792"* dereferenceable(8) %49) #9
  %51 = getelementptr inbounds %"class.blink::Member.2792", %"class.blink::Member.2792"* %49, i64 1
  %52 = icmp eq %"class.blink::Member.2792"* %51, %35
  br i1 %52, label %62, label %53

53:                                               ; preds = %48, %57
  %54 = phi %"class.blink::Member.2792"* [ %58, %57 ], [ %51, %48 ]
  %55 = bitcast %"class.blink::Member.2792"* %54 to i64*
  %56 = load i64, i64* %55, align 8
  switch i64 %56, label %60 [
    i64 -1, label %57
    i64 0, label %57
  ]

57:                                               ; preds = %53, %53
  %58 = getelementptr inbounds %"class.blink::Member.2792", %"class.blink::Member.2792"* %54, i64 1
  %59 = icmp eq %"class.blink::Member.2792"* %58, %35
  br i1 %59, label %62, label %53

60:                                               ; preds = %53
  %61 = icmp eq %"class.blink::Member.2792"* %54, %35
  br i1 %61, label %62, label %48

62:                                               ; preds = %42, %48, %60, %57, %11, %27, %45
  call void @_ZN5blink17MarkupAccumulatorC1ENS_12AbsoluteURLsENS_17SerializationTypeENS_18IncludeShadowRootsENS_11HeapHashSetINS_6MemberINS_10ShadowRootEEEN3WTF10MemberHashIS6_EENS8_10HashTraitsIS7_EEEE(%"class.blink::MarkupAccumulator"* nonnull %7, i32 %2, i32 %21, i32 %3, %"class.blink::HeapHashSet.2786"* nonnull %8) #9
  %63 = call %"class.WTF::StringImpl"* @_ZN5blink17MarkupAccumulator14SerializeNodesINS_16EditingAlgorithmINS_13NodeTraversalEEEEEN3WTF6StringERKNS_4NodeENS_12ChildrenOnlyE(%"class.blink::MarkupAccumulator"* nonnull %7, %"class.blink::Node"* nonnull dereferenceable(64) %0, i32 %1) #9
  %64 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %63, %"class.WTF::StringImpl"** %64, align 8
  call void @_ZN5blink17MarkupAccumulatorD1Ev(%"class.blink::MarkupAccumulator"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %12) #9
  br label %65

65:                                               ; preds = %62, %10
  %66 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  ret %"class.WTF::StringImpl"* %67
}

declare void @_ZN5blink17MarkupAccumulatorC1ENS_12AbsoluteURLsENS_17SerializationTypeENS_18IncludeShadowRootsENS_11HeapHashSetINS_6MemberINS_10ShadowRootEEEN3WTF10MemberHashIS6_EENS8_10HashTraitsIS7_EEEE(%"class.blink::MarkupAccumulator"*, i32, i32, i32, %"class.blink::HeapHashSet.2786"*) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink17MarkupAccumulator14SerializeNodesINS_16EditingAlgorithmINS_13NodeTraversalEEEEEN3WTF6StringERKNS_4NodeENS_12ChildrenOnlyE(%"class.blink::MarkupAccumulator"*, %"class.blink::Node"* dereferenceable(64), i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink17MarkupAccumulatorD1Ev(%"class.blink::MarkupAccumulator"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink17IsPlainTextMarkupEPNS_4NodeE(%"class.blink::Node"*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 48
  %5 = icmp ne i32 %4, 0
  %6 = icmp eq %"class.blink::Node"* %0, null
  %7 = or i1 %6, %5
  br i1 %7, label %93, label %8

8:                                                ; preds = %1
  %9 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kDivTagE, align 8
  %10 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1, i32 2
  %13 = bitcast %"class.blink::Member"* %12 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %14 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %14, i64 0, i32 3, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %11, i64 0, i32 3, i32 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %16, %18
  br i1 %19, label %20, label %93

20:                                               ; preds = %8
  %21 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1, i32 3
  %22 = bitcast %"class.blink::Member.1"* %21 to %"class.blink::ElementData"**
  %23 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %22, align 8
  %24 = icmp eq %"class.blink::ElementData"* %23, null
  br i1 %24, label %93, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Node"* %0 to %"class.blink::Element"*
  tail call void @_ZNK5blink7Element24SynchronizeAllAttributesEv(%"class.blink::Element"* %26) #9
  %27 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %22, align 8
  %28 = icmp eq %"class.blink::ElementData"* %27, null
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = load i32, i32* null, align 536870912
  br label %40

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 0, i32 0, i32 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = and i32 %33, 1
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %40, label %36

36:                                               ; preds = %31
  %37 = bitcast %"class.blink::ElementData"* %27 to %"class.blink::UniqueElementData"*
  %38 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %37, i64 0, i32 2, i32 0, i32 0, i32 2
  %39 = load i32, i32* %38, align 4
  br label %44

40:                                               ; preds = %31, %29
  %41 = phi i32 [ %30, %29 ], [ %33, %31 ]
  %42 = lshr i32 %41, 1
  %43 = and i32 %42, 268435455
  br label %44

44:                                               ; preds = %36, %40
  %45 = phi i32 [ %43, %40 ], [ %39, %36 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %93, label %47

47:                                               ; preds = %44
  %48 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1
  %49 = bitcast %"class.blink::Node"* %48 to %"class.blink::Node"**
  %50 = load %"class.blink::Node"*, %"class.blink::Node"** %49, align 8
  %51 = icmp eq %"class.blink::Node"* %50, null
  br i1 %51, label %93, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %50, i64 0, i32 5, i32 0, i32 0
  %54 = load %"class.blink::Node"*, %"class.blink::Node"** %53, align 8
  %55 = icmp eq %"class.blink::Node"* %54, null
  br i1 %55, label %56, label %69

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %50, i64 0, i32 1
  %58 = load i32, i32* %57, align 8
  %59 = and i32 %58, 12
  %60 = icmp eq i32 %59, 4
  br i1 %60, label %93, label %61

61:                                               ; preds = %56
  %62 = and i32 %58, 2
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %93, label %64

64:                                               ; preds = %61
  %65 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %50, i64 1
  %66 = bitcast %"class.blink::Node"* %65 to %"class.blink::Node"**
  %67 = load %"class.blink::Node"*, %"class.blink::Node"** %66, align 8
  %68 = icmp ne %"class.blink::Node"* %67, null
  br label %93

69:                                               ; preds = %52
  %70 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %54, i64 0, i32 5, i32 0, i32 0
  %71 = load %"class.blink::Node"*, %"class.blink::Node"** %70, align 8
  %72 = icmp eq %"class.blink::Node"* %71, null
  br i1 %72, label %73, label %93

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %50, i64 0, i32 1
  %75 = load i32, i32* %74, align 8
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %82, label %78

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %50, i64 1
  %80 = bitcast %"class.blink::Node"* %79 to %"class.blink::Node"**
  %81 = load %"class.blink::Node"*, %"class.blink::Node"** %80, align 8
  br label %82

82:                                               ; preds = %73, %78
  %83 = phi %"class.blink::Node"* [ %81, %78 ], [ null, %73 ]
  %84 = tail call zeroext i1 @_ZN5blink28IsTabHTMLSpanElementTextNodeEPKNS_4NodeE(%"class.blink::Node"* %83) #9
  br i1 %84, label %85, label %93

85:                                               ; preds = %82
  %86 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1, i32 0, i32 0, i32 1
  %87 = bitcast %"class.blink::TraceWrapperV8Reference"* %86 to %"class.blink::Node"**
  %88 = load %"class.blink::Node"*, %"class.blink::Node"** %87, align 8
  %89 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %88, i64 0, i32 1
  %90 = load i32, i32* %89, align 8
  %91 = and i32 %90, 12
  %92 = icmp eq i32 %91, 4
  br label %93

93:                                               ; preds = %69, %44, %8, %47, %20, %1, %64, %61, %82, %85, %56
  %94 = phi i1 [ false, %44 ], [ true, %56 ], [ false, %82 ], [ false, %69 ], [ %92, %85 ], [ %68, %64 ], [ false, %61 ], [ false, %8 ], [ false, %1 ], [ false, %20 ], [ false, %47 ]
  ret i1 %94
}

declare zeroext i1 @_ZN5blink28IsTabHTMLSpanElementTextNodeEPKNS_4NodeE(%"class.blink::Node"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DocumentFragment"* @_ZN5blink22CreateFragmentFromTextERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEERKN3WTF6StringE(%"class.blink::EphemeralRangeTemplate"* dereferenceable(32), %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 {
  %3 = alloca %"class.blink::PositionTemplate", align 8
  %4 = alloca %"class.blink::PositionTemplate", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.blink::PositionTemplate", align 8
  %9 = alloca %"class.WTF::AtomicString", align 8
  %10 = alloca %"class.blink::PositionTemplate", align 8
  %11 = alloca %"class.blink::PositionTemplate", align 8
  %12 = alloca %"class.WTF::Vector.1780", align 8
  %13 = alloca %"class.WTF::AtomicString", align 8
  %14 = getelementptr inbounds %"class.blink::EphemeralRangeTemplate", %"class.blink::EphemeralRangeTemplate"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %"class.blink::Node"*, %"class.blink::Node"** %14, align 8
  %16 = icmp eq %"class.blink::Node"* %15, null
  br i1 %16, label %399, label %17

17:                                               ; preds = %2
  %18 = tail call dereferenceable(2848) %"class.blink::Document"* @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE11GetDocumentEv(%"class.blink::EphemeralRangeTemplate"* %0) #9
  %19 = tail call %"class.blink::DocumentFragment"* @_ZN5blink8Document22createDocumentFragmentEv(%"class.blink::Document"* %18) #9
  %20 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %399, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %399, label %27

27:                                               ; preds = %23
  %28 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %21, %"class.WTF::StringImpl"** %29, align 8
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %47

34:                                               ; preds = %27
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i33
  %38 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %37, i33 1) #9
  %39 = extractvalue { i33, i1 } %38, 1
  %40 = extractvalue { i33, i1 } %38, 0
  %41 = icmp slt i33 %40, 0
  %42 = or i1 %39, %41
  br i1 %42, label %43, label %44, !prof !2

43:                                               ; preds = %34
  tail call void @llvm.trap() #9
  unreachable

44:                                               ; preds = %34
  %45 = trunc i33 %40 to i32
  store i32 %45, i32* %35, align 4
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  br label %47

47:                                               ; preds = %27, %44
  %48 = phi %"class.WTF::StringImpl"* [ %21, %27 ], [ %46, %44 ]
  %49 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #9
  %50 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %51 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %50, i64* %51, align 8
  %52 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8** %52, align 8
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 2, i32* %53, align 8
  %54 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #9
  %55 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %50, i64* %55, align 8
  %56 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i8** %56, align 8
  %57 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 1, i32* %57, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %58, label %59, label %60

59:                                               ; preds = %47
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #9
  br label %102

60:                                               ; preds = %47
  %61 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl7ReplaceERKNS_10StringViewES3_(%"class.WTF::StringImpl"* nonnull %48, %"class.WTF::StringView"* nonnull dereferenceable(24) %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #9
  %62 = ptrtoint %"class.WTF::StringImpl"* %61 to i64
  %63 = bitcast %"class.WTF::String"* %5 to i64*
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  store i64 %62, i64* %63, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %64, null
  br i1 %65, label %81, label %66

66:                                               ; preds = %60
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  br i1 %70, label %73, label %75

73:                                               ; preds = %66
  %74 = add i32 %72, -1
  store i32 %74, i32* %71, align 4
  br label %75

75:                                               ; preds = %73, %66
  %76 = phi i32 [ %74, %73 ], [ %72, %66 ]
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %64) #9
  br label %79

79:                                               ; preds = %78, %75
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  br label %81

81:                                               ; preds = %79, %60
  %82 = phi %"class.WTF::StringImpl"* [ %80, %79 ], [ %61, %60 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #9
  %83 = icmp eq %"class.WTF::StringImpl"* %82, null
  br i1 %83, label %102, label %84

84:                                               ; preds = %81
  %85 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl7ReplaceEDsDs(%"class.WTF::StringImpl"* nonnull %82, i16 zeroext 13, i16 zeroext 10) #9
  %86 = ptrtoint %"class.WTF::StringImpl"* %85 to i64
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  store i64 %86, i64* %63, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %102, label %89

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %95 = load i32, i32* %94, align 4
  br i1 %93, label %96, label %98

96:                                               ; preds = %89
  %97 = add i32 %95, -1
  store i32 %97, i32* %94, align 4
  br label %98

98:                                               ; preds = %96, %89
  %99 = phi i32 [ %97, %96 ], [ %95, %89 ]
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %98
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %87) #9
  br label %102

102:                                              ; preds = %59, %81, %84, %98, %101
  %103 = bitcast %"class.blink::PositionTemplate"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %103) #9
  call void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE13StartPositionEv(%"class.blink::PositionTemplate"* nonnull sret %8, %"class.blink::EphemeralRangeTemplate"* %0) #9
  %104 = call zeroext i1 @_ZN5blink24IsRichlyEditablePositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* nonnull dereferenceable(16) %8) #9
  br i1 %104, label %105, label %169

105:                                              ; preds = %102
  %106 = bitcast %"class.blink::PositionTemplate"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %106) #9
  call void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE13StartPositionEv(%"class.blink::PositionTemplate"* nonnull sret %3, %"class.blink::EphemeralRangeTemplate"* %0) #9
  %107 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20NodeAsRangeFirstNodeEv(%"class.blink::PositionTemplate"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %106) #9
  %108 = icmp eq %"class.blink::Node"* %107, null
  br i1 %108, label %127, label %109

109:                                              ; preds = %105
  %110 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %107, i64 0, i32 1
  %111 = load i32, i32* %110, align 8
  %112 = and i32 %111, 1
  %113 = icmp eq i32 %112, 0
  %114 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %107, i64 0, i32 6, i32 0, i32 0
  br i1 %113, label %119, label %115

115:                                              ; preds = %109
  %116 = bitcast %"class.blink::NodeData"** %114 to %"class.blink::NodeRareData"**
  %117 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %116, align 8
  %118 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %117, i64 0, i32 1, i32 0, i32 0
  br label %121

119:                                              ; preds = %109
  %120 = bitcast %"class.blink::NodeData"** %114 to %"class.blink::NodeRenderingData"**
  br label %121

121:                                              ; preds = %119, %115
  %122 = phi %"class.blink::NodeRenderingData"** [ %118, %115 ], [ %120, %119 ]
  %123 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %122, align 8
  %124 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %123, i64 0, i32 1
  %125 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %124, align 8
  %126 = icmp eq %"class.blink::LayoutObject"* %125, null
  br i1 %126, label %127, label %150

127:                                              ; preds = %121, %105
  %128 = bitcast %"class.blink::PositionTemplate"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %128) #9
  call void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE13StartPositionEv(%"class.blink::PositionTemplate"* nonnull sret %4, %"class.blink::EphemeralRangeTemplate"* %0) #9
  %129 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %4, i64 0, i32 0, i32 0, i32 0
  %130 = load %"class.blink::Node"*, %"class.blink::Node"** %129, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %128) #9
  %131 = icmp eq %"class.blink::Node"* %130, null
  br i1 %131, label %159, label %132

132:                                              ; preds = %127
  %133 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %130, i64 0, i32 1
  %134 = load i32, i32* %133, align 8
  %135 = and i32 %134, 1
  %136 = icmp eq i32 %135, 0
  %137 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %130, i64 0, i32 6, i32 0, i32 0
  br i1 %136, label %142, label %138

138:                                              ; preds = %132
  %139 = bitcast %"class.blink::NodeData"** %137 to %"class.blink::NodeRareData"**
  %140 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %139, align 8
  %141 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %140, i64 0, i32 1, i32 0, i32 0
  br label %144

142:                                              ; preds = %132
  %143 = bitcast %"class.blink::NodeData"** %137 to %"class.blink::NodeRenderingData"**
  br label %144

144:                                              ; preds = %142, %138
  %145 = phi %"class.blink::NodeRenderingData"** [ %141, %138 ], [ %143, %142 ]
  %146 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %145, align 8
  %147 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %146, i64 0, i32 1
  %148 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %147, align 8
  %149 = icmp eq %"class.blink::LayoutObject"* %148, null
  br i1 %149, label %159, label %160

150:                                              ; preds = %121
  %151 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %125, i64 0, i32 5, i32 0
  %152 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %151, align 8
  %153 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %152, i64 0, i32 0, i32 9
  %154 = bitcast [20 x i8]* %153 to i160*
  %155 = load i160, i160* %154, align 8
  %156 = lshr i160 %155, 12
  %157 = trunc i160 %156 to i32
  %158 = and i32 %157, 127
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %103) #9
  switch i32 %158, label %170 [
    i32 16, label %203
    i32 1, label %203
  ]

159:                                              ; preds = %127, %144
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %103) #9
  br label %203

160:                                              ; preds = %144
  %161 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %148, i64 0, i32 5, i32 0
  %162 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %161, align 8
  %163 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %162, i64 0, i32 0, i32 9
  %164 = bitcast [20 x i8]* %163 to i160*
  %165 = load i160, i160* %164, align 8
  %166 = lshr i160 %165, 12
  %167 = trunc i160 %166 to i32
  %168 = and i32 %167, 127
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %103) #9
  switch i32 %168, label %170 [
    i32 16, label %203
    i32 1, label %203
  ]

169:                                              ; preds = %102
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %103) #9
  br label %170

170:                                              ; preds = %160, %150, %169
  %171 = getelementptr inbounds %"class.blink::DocumentFragment", %"class.blink::DocumentFragment"* %19, i64 0, i32 0
  %172 = call %"class.blink::Text"* @_ZN5blink8Document14createTextNodeERKN3WTF6StringE(%"class.blink::Document"* %18, %"class.WTF::String"* nonnull dereferenceable(8) %5) #9
  %173 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %172, i64 0, i32 0, i32 0
  %174 = call %"class.blink::Node"* @_ZN5blink13ContainerNode11AppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %171, %"class.blink::Node"* %173) #9
  %175 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %176 = icmp eq %"class.WTF::StringImpl"* %175, null
  br i1 %176, label %398, label %177

177:                                              ; preds = %170
  %178 = call zeroext i1 @_ZNK3WTF10StringImpl8EndsWithEDs(%"class.WTF::StringImpl"* nonnull %175, i16 zeroext 10) #9
  br i1 %178, label %179, label %382

179:                                              ; preds = %177
  %180 = call %"class.blink::HTMLBRElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_13HTMLBRElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848) %18) #9
  %181 = getelementptr inbounds %"class.blink::HTMLBRElement", %"class.blink::HTMLBRElement"* %180, i64 0, i32 0, i32 0
  %182 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kClassAttrE, align 8
  %183 = bitcast %"class.WTF::AtomicString"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %183) #9
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %9, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i64 0, i64 0), i64 25) #9
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %181, %"class.blink::QualifiedName"* dereferenceable(8) %182, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %9) #9
  %184 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0, i32 0, i32 0
  %185 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %184, align 8
  %186 = icmp eq %"class.WTF::StringImpl"* %185, null
  br i1 %186, label %200, label %187

187:                                              ; preds = %179
  %188 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %185, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %189 = load atomic i32, i32* %188 monotonic, align 4
  %190 = and i32 %189, 2
  %191 = icmp eq i32 %190, 0
  %192 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %185, i64 0, i32 0
  %193 = load i32, i32* %192, align 4
  br i1 %191, label %194, label %196

194:                                              ; preds = %187
  %195 = add i32 %193, -1
  store i32 %195, i32* %192, align 4
  br label %196

196:                                              ; preds = %194, %187
  %197 = phi i32 [ %195, %194 ], [ %193, %187 ]
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %200

199:                                              ; preds = %196
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %185) #9
  br label %200

200:                                              ; preds = %179, %196, %199
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %183) #9
  %201 = getelementptr inbounds %"class.blink::HTMLBRElement", %"class.blink::HTMLBRElement"* %180, i64 0, i32 0, i32 0, i32 0, i32 0
  %202 = call %"class.blink::Node"* @_ZN5blink13ContainerNode11AppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %171, %"class.blink::Node"* %201) #9
  br label %382

203:                                              ; preds = %160, %160, %150, %150, %159
  %204 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %205 = icmp eq %"class.WTF::StringImpl"* %204, null
  br i1 %205, label %243, label %206

206:                                              ; preds = %203
  %207 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %208 = load atomic i32, i32* %207 monotonic, align 4
  %209 = and i32 %208, 1
  %210 = icmp eq i32 %209, 0
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 1
  br i1 %210, label %224, label %212

212:                                              ; preds = %206
  %213 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 1
  %214 = load i32, i32* %213, align 4
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %243, label %216

216:                                              ; preds = %212
  %217 = bitcast %"class.WTF::StringImpl"* %211 to i8*
  %218 = zext i32 %214 to i64
  %219 = call i8* @memchr(i8* %217, i32 10, i64 %218) #10
  %220 = icmp eq i8* %219, null
  %221 = ptrtoint i8* %219 to i64
  %222 = ptrtoint %"class.WTF::StringImpl"* %211 to i64
  %223 = sub i64 %221, %222
  br i1 %220, label %243, label %239

224:                                              ; preds = %206
  %225 = bitcast %"class.WTF::StringImpl"* %211 to i16*
  %226 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 1
  %227 = load i32, i32* %226, align 4
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %243, label %229

229:                                              ; preds = %224
  %230 = zext i32 %227 to i64
  br label %231

231:                                              ; preds = %229, %236
  %232 = phi i64 [ %237, %236 ], [ 0, %229 ]
  %233 = getelementptr inbounds i16, i16* %225, i64 %232
  %234 = load i16, i16* %233, align 2
  %235 = icmp eq i16 %234, 10
  br i1 %235, label %239, label %236

236:                                              ; preds = %231
  %237 = add nuw nsw i64 %232, 1
  %238 = icmp eq i64 %237, %230
  br i1 %238, label %243, label %231

239:                                              ; preds = %231, %216
  %240 = phi i64 [ %223, %216 ], [ %232, %231 ]
  %241 = trunc i64 %240 to i32
  %242 = icmp eq i32 %241, -1
  br i1 %242, label %243, label %245

243:                                              ; preds = %236, %224, %212, %216, %203, %239
  %244 = getelementptr inbounds %"class.blink::DocumentFragment", %"class.blink::DocumentFragment"* %19, i64 0, i32 0
  call fastcc void @_ZN5blinkL23FillContainerFromStringEPNS_13ContainerNodeERKN3WTF6StringE(%"class.blink::ContainerNode"* %244, %"class.WTF::String"* nonnull dereferenceable(8) %5)
  br label %382

245:                                              ; preds = %239
  %246 = bitcast %"class.blink::PositionTemplate"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %246) #9
  call void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE13StartPositionEv(%"class.blink::PositionTemplate"* nonnull sret %10, %"class.blink::EphemeralRangeTemplate"* %0) #9
  %247 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20NodeAsRangeFirstNodeEv(%"class.blink::PositionTemplate"* nonnull %10) #9
  %248 = call %"class.blink::Element"* @_ZN5blink14EnclosingBlockEPKNS_4NodeENS_27EditingBoundaryCrossingRuleE(%"class.blink::Node"* %247, i32 1) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %246) #9
  %249 = icmp eq %"class.blink::Element"* %248, null
  %250 = bitcast %"class.blink::PositionTemplate"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %250) #9
  br i1 %249, label %285, label %251

251:                                              ; preds = %245
  %252 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %248, i64 0, i32 0, i32 0, i32 1
  %253 = load i32, i32* %252, align 8
  %254 = and i32 %253, 48
  %255 = icmp eq i32 %254, 0
  br i1 %255, label %256, label %282

256:                                              ; preds = %251
  %257 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %248, i64 0, i32 0, i32 0
  %258 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kBodyTagE, align 8
  %259 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %258, i64 0, i32 0, i32 0, i32 0
  %260 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %259, align 8
  %261 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %257, i64 1, i32 2
  %262 = bitcast %"class.blink::Member"* %261 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %263 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %262, align 8
  %264 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %263, i64 0, i32 3, i32 0, i32 0, i32 0
  %265 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %264, align 8
  %266 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %260, i64 0, i32 3, i32 0, i32 0, i32 0
  %267 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %266, align 8
  %268 = icmp eq %"class.WTF::StringImpl"* %265, %267
  br i1 %268, label %285, label %269

269:                                              ; preds = %256
  %270 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %248, i64 0, i32 0, i32 0
  %271 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kHTMLTagE, align 8
  %272 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %271, i64 0, i32 0, i32 0, i32 0
  %273 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %272, align 8
  %274 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %270, i64 1, i32 2
  %275 = bitcast %"class.blink::Member"* %274 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %276 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %275, align 8
  %277 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %276, i64 0, i32 3, i32 0, i32 0, i32 0
  %278 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %277, align 8
  %279 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %273, i64 0, i32 3, i32 0, i32 0, i32 0
  %280 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %279, align 8
  %281 = icmp eq %"class.WTF::StringImpl"* %278, %280
  br i1 %281, label %285, label %282

282:                                              ; preds = %251, %269
  call void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE13StartPositionEv(%"class.blink::PositionTemplate"* nonnull sret %11, %"class.blink::EphemeralRangeTemplate"* %0) #9
  %283 = call %"class.blink::Element"* @_ZN5blink21RootEditableElementOfERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* nonnull dereferenceable(16) %11) #9
  %284 = icmp ne %"class.blink::Element"* %248, %283
  br label %285

285:                                              ; preds = %245, %282, %269, %256
  %286 = phi i1 [ false, %269 ], [ false, %256 ], [ false, %245 ], [ %284, %282 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %250) #9
  %287 = bitcast %"class.WTF::Vector.1780"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %287) #9
  %288 = getelementptr inbounds %"class.WTF::Vector.1780", %"class.WTF::Vector.1780"* %12, i64 0, i32 0, i32 0, i32 0
  %289 = getelementptr inbounds %"class.WTF::Vector.1780", %"class.WTF::Vector.1780"* %12, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %287, i8 0, i64 16, i1 false) #9
  call void @_ZNK3WTF6String5SplitEDsbRNS_6VectorIS0_Lj0ENS_18PartitionAllocatorEEE(%"class.WTF::String"* nonnull %5, i16 zeroext 10, i1 zeroext true, %"class.WTF::Vector.1780"* nonnull dereferenceable(16) %12) #9
  %290 = load i32, i32* %289, align 4
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %297, label %292

292:                                              ; preds = %285
  %293 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kClassAttrE, align 8
  %294 = bitcast %"class.WTF::AtomicString"* %13 to i8*
  %295 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %13, i64 0, i32 0, i32 0, i32 0
  %296 = getelementptr inbounds %"class.blink::DocumentFragment", %"class.blink::DocumentFragment"* %19, i64 0, i32 0
  br label %334

297:                                              ; preds = %377, %285
  %298 = load %"class.WTF::String"*, %"class.WTF::String"** %288, align 8
  %299 = icmp eq %"class.WTF::String"* %298, null
  br i1 %299, label %333, label %300, !prof !4

300:                                              ; preds = %297
  %301 = bitcast %"class.WTF::String"* %298 to i8*
  %302 = load i32, i32* %289, align 4
  %303 = icmp eq i32 %302, 0
  br i1 %303, label %331, label %304, !prof !2

304:                                              ; preds = %300
  %305 = zext i32 %302 to i64
  %306 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %298, i64 %305
  br label %307

307:                                              ; preds = %325, %304
  %308 = phi %"class.WTF::String"* [ %326, %325 ], [ %298, %304 ]
  %309 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %308, i64 0, i32 0, i32 0
  %310 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %309, align 8
  %311 = icmp eq %"class.WTF::StringImpl"* %310, null
  br i1 %311, label %325, label %312

312:                                              ; preds = %307
  %313 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %310, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %314 = load atomic i32, i32* %313 monotonic, align 4
  %315 = and i32 %314, 2
  %316 = icmp eq i32 %315, 0
  %317 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %310, i64 0, i32 0
  %318 = load i32, i32* %317, align 4
  br i1 %316, label %319, label %321

319:                                              ; preds = %312
  %320 = add i32 %318, -1
  store i32 %320, i32* %317, align 4
  br label %321

321:                                              ; preds = %319, %312
  %322 = phi i32 [ %320, %319 ], [ %318, %312 ]
  %323 = icmp eq i32 %322, 0
  br i1 %323, label %324, label %325

324:                                              ; preds = %321
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %310) #9
  br label %325

325:                                              ; preds = %324, %321, %307
  %326 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %308, i64 1
  %327 = icmp eq %"class.WTF::String"* %326, %306
  br i1 %327, label %328, label %307

328:                                              ; preds = %325
  store i32 0, i32* %289, align 4
  %329 = bitcast %"class.WTF::Vector.1780"* %12 to i8**
  %330 = load i8*, i8** %329, align 8
  br label %331

331:                                              ; preds = %328, %300
  %332 = phi i8* [ %330, %328 ], [ %301, %300 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %332) #9
  store %"class.WTF::String"* null, %"class.WTF::String"** %288, align 8
  br label %333

333:                                              ; preds = %297, %331
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %287) #9
  br label %382

334:                                              ; preds = %377, %292
  %335 = phi i32 [ 0, %292 ], [ %346, %377 ]
  %336 = call dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1780"* nonnull %12, i32 %335) #9
  %337 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %336, i64 0, i32 0, i32 0
  %338 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %337, align 8
  %339 = icmp eq %"class.WTF::StringImpl"* %338, null
  br i1 %339, label %344, label %340

340:                                              ; preds = %334
  %341 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %338, i64 0, i32 1
  %342 = load i32, i32* %341, align 4
  %343 = icmp eq i32 %342, 0
  br label %344

344:                                              ; preds = %334, %340
  %345 = phi i1 [ true, %334 ], [ %343, %340 ]
  %346 = add nuw i32 %335, 1
  %347 = icmp eq i32 %346, %290
  %348 = and i1 %347, %345
  br i1 %348, label %349, label %368

349:                                              ; preds = %344
  %350 = call %"class.blink::HTMLBRElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_13HTMLBRElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848) %18) #9
  %351 = getelementptr inbounds %"class.blink::HTMLBRElement", %"class.blink::HTMLBRElement"* %350, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %294) #9
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %13, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i64 0, i64 0), i64 25) #9
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %351, %"class.blink::QualifiedName"* dereferenceable(8) %293, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %13) #9
  %352 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %295, align 8
  %353 = icmp eq %"class.WTF::StringImpl"* %352, null
  br i1 %353, label %367, label %354

354:                                              ; preds = %349
  %355 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %352, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load atomic i32, i32* %355 monotonic, align 4
  %357 = and i32 %356, 2
  %358 = icmp eq i32 %357, 0
  %359 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %352, i64 0, i32 0
  %360 = load i32, i32* %359, align 4
  br i1 %358, label %361, label %363

361:                                              ; preds = %354
  %362 = add i32 %360, -1
  store i32 %362, i32* %359, align 4
  br label %363

363:                                              ; preds = %361, %354
  %364 = phi i32 [ %362, %361 ], [ %360, %354 ]
  %365 = icmp eq i32 %364, 0
  br i1 %365, label %366, label %367

366:                                              ; preds = %363
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %352) #9
  br label %367

367:                                              ; preds = %349, %363, %366
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %294) #9
  br label %377

368:                                              ; preds = %344
  br i1 %286, label %369, label %371

369:                                              ; preds = %368
  %370 = call dereferenceable(104) %"class.blink::Element"* @_ZNK5blink7Element20CloneWithoutChildrenEPNS_8DocumentE(%"class.blink::Element"* %248, %"class.blink::Document"* null) #9
  br label %374

371:                                              ; preds = %368
  %372 = call %"class.blink::HTMLElement"* @_ZN5blink29CreateDefaultParagraphElementERNS_8DocumentE(%"class.blink::Document"* dereferenceable(2848) %18) #9
  %373 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %372, i64 0, i32 0
  br label %374

374:                                              ; preds = %371, %369
  %375 = phi %"class.blink::Element"* [ %370, %369 ], [ %373, %371 ]
  %376 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %375, i64 0, i32 0
  call fastcc void @_ZN5blinkL23FillContainerFromStringEPNS_13ContainerNodeERKN3WTF6StringE(%"class.blink::ContainerNode"* %376, %"class.WTF::String"* dereferenceable(8) %336)
  br label %377

377:                                              ; preds = %374, %367
  %378 = phi %"class.blink::Element"* [ %351, %367 ], [ %375, %374 ]
  %379 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %378, i64 0, i32 0, i32 0
  %380 = call %"class.blink::Node"* @_ZN5blink13ContainerNode11AppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %296, %"class.blink::Node"* %379) #9
  %381 = icmp eq i32 %346, %290
  br i1 %381, label %297, label %334

382:                                              ; preds = %177, %200, %333, %243
  %383 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %384 = icmp eq %"class.WTF::StringImpl"* %383, null
  br i1 %384, label %398, label %385

385:                                              ; preds = %382
  %386 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %383, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %387 = load atomic i32, i32* %386 monotonic, align 4
  %388 = and i32 %387, 2
  %389 = icmp eq i32 %388, 0
  %390 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %383, i64 0, i32 0
  %391 = load i32, i32* %390, align 4
  br i1 %389, label %392, label %394

392:                                              ; preds = %385
  %393 = add i32 %391, -1
  store i32 %393, i32* %390, align 4
  br label %394

394:                                              ; preds = %392, %385
  %395 = phi i32 [ %393, %392 ], [ %391, %385 ]
  %396 = icmp eq i32 %395, 0
  br i1 %396, label %397, label %398

397:                                              ; preds = %394
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %383) #9
  br label %398

398:                                              ; preds = %170, %382, %394, %397
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  br label %399

399:                                              ; preds = %17, %398, %23, %2
  %400 = phi %"class.blink::DocumentFragment"* [ null, %2 ], [ %19, %23 ], [ %19, %398 ], [ %19, %17 ]
  ret %"class.blink::DocumentFragment"* %400
}

declare dereferenceable(2848) %"class.blink::Document"* @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE11GetDocumentEv(%"class.blink::EphemeralRangeTemplate"*) local_unnamed_addr #2

declare %"class.blink::DocumentFragment"* @_ZN5blink8Document22createDocumentFragmentEv(%"class.blink::Document"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink24IsRichlyEditablePositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE13StartPositionEv(%"class.blink::PositionTemplate"* sret, %"class.blink::EphemeralRangeTemplate"*) local_unnamed_addr #2

declare %"class.blink::Text"* @_ZN5blink8Document14createTextNodeERKN3WTF6StringE(%"class.blink::Document"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blinkL23FillContainerFromStringEPNS_13ContainerNodeERKN3WTF6StringE(%"class.blink::ContainerNode"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 {
  %3 = alloca %"class.WTF::Vector.1780", align 8
  %4 = alloca %"class.WTF::StringBuilder", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %9 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %9, i64 0, i32 2, i32 0, i32 0
  %11 = load %"class.blink::Document"*, %"class.blink::Document"** %10, align 8
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %23

19:                                               ; preds = %2, %15
  %20 = tail call %"class.blink::HTMLBRElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_13HTMLBRElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848) %11) #9
  %21 = getelementptr inbounds %"class.blink::HTMLBRElement", %"class.blink::HTMLBRElement"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = tail call %"class.blink::Node"* @_ZN5blink13ContainerNode11AppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %0, %"class.blink::Node"* %21) #9
  br label %184

23:                                               ; preds = %15
  %24 = bitcast %"class.WTF::Vector.1780"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #9
  %25 = getelementptr inbounds %"class.WTF::Vector.1780", %"class.WTF::Vector.1780"* %3, i64 0, i32 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.WTF::Vector.1780", %"class.WTF::Vector.1780"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 0, i64 16, i1 false) #9
  call void @_ZNK3WTF6String5SplitEDsbRNS_6VectorIS0_Lj0ENS_18PartitionAllocatorEEE(%"class.WTF::String"* %1, i16 zeroext 9, i1 zeroext true, %"class.WTF::Vector.1780"* nonnull dereferenceable(16) %3) #9
  %27 = bitcast %"class.WTF::StringBuilder"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %27) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 48, i1 false)
  %28 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %28, align 8
  %29 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 1
  %30 = bitcast %union.anon.2746* %29 to i8*
  store i8 0, i8* %30, align 8
  %31 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 2
  store i32 0, i32* %31, align 8
  %32 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 3
  store i8 1, i8* %32, align 4
  %33 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 4
  store i8 0, i8* %33, align 1
  %34 = load i32, i32* %26, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %43, label %36

36:                                               ; preds = %23
  %37 = bitcast %"class.WTF::String"* %5 to i8*
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %39 = bitcast %"class.WTF::String"* %6 to i8*
  %40 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %41 = bitcast %"class.WTF::String"* %7 to i8*
  %42 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  br label %96

43:                                               ; preds = %182, %23
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %4) #9
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %45, label %59, label %46

46:                                               ; preds = %43
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %52 = load i32, i32* %51, align 4
  br i1 %50, label %53, label %55

53:                                               ; preds = %46
  %54 = add i32 %52, -1
  store i32 %54, i32* %51, align 4
  br label %55

55:                                               ; preds = %53, %46
  %56 = phi i32 [ %54, %53 ], [ %52, %46 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %44) #9
  br label %59

59:                                               ; preds = %43, %55, %58
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %27) #9
  %60 = load %"class.WTF::String"*, %"class.WTF::String"** %25, align 8
  %61 = icmp eq %"class.WTF::String"* %60, null
  br i1 %61, label %95, label %62, !prof !4

62:                                               ; preds = %59
  %63 = bitcast %"class.WTF::String"* %60 to i8*
  %64 = load i32, i32* %26, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %93, label %66, !prof !2

66:                                               ; preds = %62
  %67 = zext i32 %64 to i64
  %68 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %60, i64 %67
  br label %69

69:                                               ; preds = %87, %66
  %70 = phi %"class.WTF::String"* [ %88, %87 ], [ %60, %66 ]
  %71 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %70, i64 0, i32 0, i32 0
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %87, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  br i1 %78, label %81, label %83

81:                                               ; preds = %74
  %82 = add i32 %80, -1
  store i32 %82, i32* %79, align 4
  br label %83

83:                                               ; preds = %81, %74
  %84 = phi i32 [ %82, %81 ], [ %80, %74 ]
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %87

86:                                               ; preds = %83
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %72) #9
  br label %87

87:                                               ; preds = %86, %83, %69
  %88 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %70, i64 1
  %89 = icmp eq %"class.WTF::String"* %88, %68
  br i1 %89, label %90, label %69

90:                                               ; preds = %87
  store i32 0, i32* %26, align 4
  %91 = bitcast %"class.WTF::Vector.1780"* %3 to i8**
  %92 = load i8*, i8** %91, align 8
  br label %93

93:                                               ; preds = %90, %62
  %94 = phi i8* [ %92, %90 ], [ %63, %62 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %94) #9
  store %"class.WTF::String"* null, %"class.WTF::String"** %25, align 8
  br label %95

95:                                               ; preds = %59, %93
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #9
  br label %184

96:                                               ; preds = %182, %36
  %97 = phi i32 [ 0, %36 ], [ %155, %182 ]
  %98 = phi i1 [ true, %36 ], [ false, %182 ]
  %99 = call dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1780"* nonnull %3, i32 %97) #9
  %100 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %99, i64 0, i32 0, i32 0
  %101 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %100, align 8
  %102 = icmp eq %"class.WTF::StringImpl"* %101, null
  br i1 %102, label %154, label %103

103:                                              ; preds = %96
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 1
  %105 = load i32, i32* %104, align 4
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %154, label %107

107:                                              ; preds = %103
  %108 = load i32, i32* %31, align 8
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %131, label %110

110:                                              ; preds = %107
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #9
  %111 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %4) #9
  store %"class.WTF::StringImpl"* %111, %"class.WTF::StringImpl"** %38, align 8
  %112 = call %"class.blink::HTMLSpanElement"* @_ZN5blink20CreateTabSpanElementERNS_8DocumentERKN3WTF6StringE(%"class.blink::Document"* dereferenceable(2848) %11, %"class.WTF::String"* nonnull dereferenceable(8) %5) #9
  %113 = getelementptr inbounds %"class.blink::HTMLSpanElement", %"class.blink::HTMLSpanElement"* %112, i64 0, i32 0, i32 0, i32 0, i32 0
  %114 = call %"class.blink::Node"* @_ZN5blink13ContainerNode11AppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %0, %"class.blink::Node"* %113) #9
  %115 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %116 = icmp eq %"class.WTF::StringImpl"* %115, null
  br i1 %116, label %130, label %117

117:                                              ; preds = %110
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = load atomic i32, i32* %118 monotonic, align 4
  %120 = and i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 0
  %123 = load i32, i32* %122, align 4
  br i1 %121, label %124, label %126

124:                                              ; preds = %117
  %125 = add i32 %123, -1
  store i32 %125, i32* %122, align 4
  br label %126

126:                                              ; preds = %124, %117
  %127 = phi i32 [ %125, %124 ], [ %123, %117 ]
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %130

129:                                              ; preds = %126
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %115) #9
  br label %130

130:                                              ; preds = %110, %126, %129
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #9
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %4) #9
  br label %131

131:                                              ; preds = %130, %107
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #9
  %132 = add nuw i32 %97, 1
  %133 = icmp eq i32 %132, %34
  %134 = call %"class.WTF::StringImpl"* @_ZN5blink30StringWithRebalancedWhitespaceERKN3WTF6StringEbb(%"class.WTF::String"* dereferenceable(8) %99, i1 zeroext %98, i1 zeroext %133) #9
  store %"class.WTF::StringImpl"* %134, %"class.WTF::StringImpl"** %40, align 8
  %135 = call %"class.blink::Text"* @_ZN5blink8Document14createTextNodeERKN3WTF6StringE(%"class.blink::Document"* %11, %"class.WTF::String"* nonnull dereferenceable(8) %6) #9
  %136 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %137 = icmp eq %"class.WTF::StringImpl"* %136, null
  br i1 %137, label %151, label %138

138:                                              ; preds = %131
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %136, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %140 = load atomic i32, i32* %139 monotonic, align 4
  %141 = and i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %136, i64 0, i32 0
  %144 = load i32, i32* %143, align 4
  br i1 %142, label %145, label %147

145:                                              ; preds = %138
  %146 = add i32 %144, -1
  store i32 %146, i32* %143, align 4
  br label %147

147:                                              ; preds = %145, %138
  %148 = phi i32 [ %146, %145 ], [ %144, %138 ]
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %151

150:                                              ; preds = %147
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %136) #9
  br label %151

151:                                              ; preds = %131, %147, %150
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #9
  %152 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %135, i64 0, i32 0, i32 0
  %153 = call %"class.blink::Node"* @_ZN5blink13ContainerNode11AppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %0, %"class.blink::Node"* %152) #9
  br label %154

154:                                              ; preds = %96, %151, %103
  %155 = add nuw i32 %97, 1
  %156 = icmp eq i32 %155, %34
  br i1 %156, label %158, label %157

157:                                              ; preds = %154
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %4, i8 zeroext 9) #9
  br label %182

158:                                              ; preds = %154
  %159 = load i32, i32* %31, align 8
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %182, label %161

161:                                              ; preds = %158
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #9
  %162 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %4) #9
  store %"class.WTF::StringImpl"* %162, %"class.WTF::StringImpl"** %42, align 8
  %163 = call %"class.blink::HTMLSpanElement"* @_ZN5blink20CreateTabSpanElementERNS_8DocumentERKN3WTF6StringE(%"class.blink::Document"* dereferenceable(2848) %11, %"class.WTF::String"* nonnull dereferenceable(8) %7) #9
  %164 = getelementptr inbounds %"class.blink::HTMLSpanElement", %"class.blink::HTMLSpanElement"* %163, i64 0, i32 0, i32 0, i32 0, i32 0
  %165 = call %"class.blink::Node"* @_ZN5blink13ContainerNode11AppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %0, %"class.blink::Node"* %164) #9
  %166 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %167 = icmp eq %"class.WTF::StringImpl"* %166, null
  br i1 %167, label %181, label %168

168:                                              ; preds = %161
  %169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %166, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %170 = load atomic i32, i32* %169 monotonic, align 4
  %171 = and i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %166, i64 0, i32 0
  %174 = load i32, i32* %173, align 4
  br i1 %172, label %175, label %177

175:                                              ; preds = %168
  %176 = add i32 %174, -1
  store i32 %176, i32* %173, align 4
  br label %177

177:                                              ; preds = %175, %168
  %178 = phi i32 [ %176, %175 ], [ %174, %168 ]
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %180, label %181

180:                                              ; preds = %177
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %166) #9
  br label %181

181:                                              ; preds = %161, %177, %180
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #9
  br label %182

182:                                              ; preds = %158, %181, %157
  %183 = icmp eq i32 %155, %34
  br i1 %183, label %43, label %96

184:                                              ; preds = %95, %19
  ret void
}

declare %"class.blink::Element"* @_ZN5blink14EnclosingBlockEPKNS_4NodeENS_27EditingBoundaryCrossingRuleE(%"class.blink::Node"*, i32) local_unnamed_addr #2

declare %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20NodeAsRangeFirstNodeEv(%"class.blink::PositionTemplate"*) local_unnamed_addr #2

declare %"class.blink::Element"* @_ZN5blink21RootEditableElementOfERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNK3WTF6String5SplitEDsbRNS_6VectorIS0_Lj0ENS_18PartitionAllocatorEEE(%"class.WTF::String"*, i16 zeroext, i1 zeroext, %"class.WTF::Vector.1780"* dereferenceable(16)) local_unnamed_addr #2

declare dereferenceable(104) %"class.blink::Element"* @_ZNK5blink7Element20CloneWithoutChildrenEPNS_8DocumentE(%"class.blink::Element"*, %"class.blink::Document"*) local_unnamed_addr #2

declare %"class.blink::HTMLElement"* @_ZN5blink29CreateDefaultParagraphElementERNS_8DocumentE(%"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DocumentFragment"* @_ZN5blink31CreateFragmentForInnerOuterHTMLERKN3WTF6StringEPNS_7ElementENS_19ParserContentPolicyEPKcbRNS_14ExceptionStateE(%"class.WTF::String"* dereferenceable(8), %"class.blink::Element"*, i32, i8* nocapture readnone, i1 zeroext, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 {
  %7 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kTemplateTagE, align 8
  %8 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0
  %9 = icmp eq %"class.blink::Element"* %1, null
  br i1 %9, label %35, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 48
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %31

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %7, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %8, i64 1, i32 2
  %19 = bitcast %"class.blink::Member"* %18 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %20 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %20, i64 0, i32 3, i32 0, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %17, i64 0, i32 3, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %22, %24
  br i1 %25, label %26, label %31

26:                                               ; preds = %15
  %27 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink4Node19GetExecutionContextEv(%"class.blink::Node"* %8) #9
  %28 = icmp eq %"class.blink::ExecutionContext"* %27, null
  br i1 %28, label %68, label %29

29:                                               ; preds = %26
  %30 = load i32, i32* %11, align 8
  br label %31

31:                                               ; preds = %29, %15, %10
  %32 = phi i32 [ %30, %29 ], [ %12, %15 ], [ %12, %10 ]
  %33 = and i32 %32, 48
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %40, label %35

35:                                               ; preds = %31, %6
  %36 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %37 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %37, i64 0, i32 2, i32 0, i32 0
  %39 = load %"class.blink::Document"*, %"class.blink::Document"** %38, align 8
  br label %57

40:                                               ; preds = %31
  %41 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %7, i64 0, i32 0, i32 0, i32 0
  %42 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %8, i64 1, i32 2
  %44 = bitcast %"class.blink::Member"* %43 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %45 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %45, i64 0, i32 3, i32 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %42, i64 0, i32 3, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %47, %49
  %51 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %52 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %52, i64 0, i32 2, i32 0, i32 0
  %54 = load %"class.blink::Document"*, %"class.blink::Document"** %53, align 8
  br i1 %50, label %55, label %57

55:                                               ; preds = %40
  %56 = tail call dereferenceable(2848) %"class.blink::Document"* @_ZN5blink8Document22EnsureTemplateDocumentEv(%"class.blink::Document"* %54) #9
  br label %57

57:                                               ; preds = %35, %40, %55
  %58 = phi %"class.blink::Document"* [ %56, %55 ], [ %54, %40 ], [ %39, %35 ]
  %59 = tail call %"class.blink::DocumentFragment"* @_ZN5blink16DocumentFragment6CreateERNS_8DocumentE(%"class.blink::Document"* dereferenceable(2848) %58) #9
  tail call void @_ZN5blink8Document30setAllowDeclarativeShadowRootsEb(%"class.blink::Document"* %58, i1 zeroext %4) #9
  %60 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %58, i64 0, i32 107
  %61 = load i8, i8* %60, align 8
  %62 = and i8 %61, 1
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %65, label %64

64:                                               ; preds = %57
  tail call void @_ZN5blink16DocumentFragment9ParseHTMLERKN3WTF6StringEPNS_7ElementENS_19ParserContentPolicyE(%"class.blink::DocumentFragment"* %59, %"class.WTF::String"* dereferenceable(8) %0, %"class.blink::Element"* %1, i32 %2) #9
  br label %68

65:                                               ; preds = %57
  %66 = tail call zeroext i1 @_ZN5blink16DocumentFragment8ParseXMLERKN3WTF6StringEPNS_7ElementENS_19ParserContentPolicyE(%"class.blink::DocumentFragment"* %59, %"class.WTF::String"* dereferenceable(8) %0, %"class.blink::Element"* %1, i32 %2) #9
  br i1 %66, label %68, label %67

67:                                               ; preds = %65
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %5, i32 12, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @.str.6, i64 0, i64 0)) #9
  br label %68

68:                                               ; preds = %64, %65, %67, %26
  %69 = phi %"class.blink::DocumentFragment"* [ null, %26 ], [ %59, %64 ], [ null, %67 ], [ %59, %65 ]
  ret %"class.blink::DocumentFragment"* %69
}

declare %"class.blink::ExecutionContext"* @_ZNK5blink4Node19GetExecutionContextEv(%"class.blink::Node"*) unnamed_addr #2

declare dereferenceable(2848) %"class.blink::Document"* @_ZN5blink8Document22EnsureTemplateDocumentEv(%"class.blink::Document"*) local_unnamed_addr #2

declare void @_ZN5blink8Document30setAllowDeclarativeShadowRootsEb(%"class.blink::Document"*, i1 zeroext) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink16DocumentFragment8ParseXMLERKN3WTF6StringEPNS_7ElementENS_19ParserContentPolicyE(%"class.blink::DocumentFragment"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::Element"*, i32) local_unnamed_addr #2

declare void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DocumentFragment"* @_ZN5blink36CreateFragmentForTransformToFragmentERKN3WTF6StringES3_RNS_8DocumentE(%"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #0 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = tail call %"class.blink::DocumentFragment"* @_ZN5blink8Document22createDocumentFragmentEv(%"class.blink::Document"* %2) #9
  %9 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %13, label %17

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %14, align 8
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %16 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %15, i64* %16, align 8
  br label %25

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %18, align 8
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 1
  %22 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %23 = bitcast i8** %22 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %21, %"class.WTF::StringImpl"** %23, align 8
  %24 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %25

25:                                               ; preds = %17, %13
  %26 = phi i64 [ %24, %17 ], [ %15, %13 ]
  %27 = phi i32 [ %20, %17 ], [ 0, %13 ]
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %27, i32* %28, align 8
  %29 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #9
  %30 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %26, i64* %30, align 8
  %31 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i64 0, i64 0), i8** %31, align 8
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 9, i32* %32, align 8
  %33 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #9
  br i1 %33, label %34, label %37

34:                                               ; preds = %25
  %35 = call %"class.blink::HTMLBodyElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_15HTMLBodyElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848) %2) #9
  %36 = getelementptr inbounds %"class.blink::HTMLBodyElement", %"class.blink::HTMLBodyElement"* %35, i64 0, i32 0, i32 0
  call void @_ZN5blink16DocumentFragment9ParseHTMLERKN3WTF6StringEPNS_7ElementENS_19ParserContentPolicyE(%"class.blink::DocumentFragment"* %8, %"class.WTF::String"* dereferenceable(8) %0, %"class.blink::Element"* %36, i32 1) #9
  br label %68

37:                                               ; preds = %25
  %38 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #9
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %41, label %45

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %42, align 8
  %43 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %44 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %43, i64* %44, align 8
  br label %53

45:                                               ; preds = %37
  %46 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %39, %"class.WTF::StringImpl"** %46, align 8
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 1
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 1
  %50 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %51 = bitcast i8** %50 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"** %51, align 8
  %52 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %53

53:                                               ; preds = %45, %41
  %54 = phi i64 [ %52, %45 ], [ %43, %41 ]
  %55 = phi i32 [ %48, %45 ], [ 0, %41 ]
  %56 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %55, i32* %56, align 8
  %57 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %57) #9
  %58 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %54, i64* %58, align 8
  %59 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i64 0, i64 0), i8** %59, align 8
  %60 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 10, i32* %60, align 8
  %61 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #9
  br i1 %61, label %62, label %66

62:                                               ; preds = %53
  %63 = getelementptr inbounds %"class.blink::DocumentFragment", %"class.blink::DocumentFragment"* %8, i64 0, i32 0
  %64 = call %"class.blink::Text"* @_ZN5blink4Text6CreateERNS_8DocumentERKN3WTF6StringE(%"class.blink::Document"* dereferenceable(2848) %2, %"class.WTF::String"* dereferenceable(8) %0) #9
  %65 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %64, i64 0, i32 0, i32 0
  call void @_ZN5blink13ContainerNode17ParserAppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %63, %"class.blink::Node"* %65) #9
  br label %68

66:                                               ; preds = %53
  %67 = call zeroext i1 @_ZN5blink16DocumentFragment8ParseXMLERKN3WTF6StringEPNS_7ElementENS_19ParserContentPolicyE(%"class.blink::DocumentFragment"* %8, %"class.WTF::String"* dereferenceable(8) %0, %"class.blink::Element"* null, i32 1) #9
  br i1 %67, label %68, label %69

68:                                               ; preds = %62, %66, %34
  br label %69

69:                                               ; preds = %66, %68
  %70 = phi %"class.blink::DocumentFragment"* [ %8, %68 ], [ null, %66 ]
  ret %"class.blink::DocumentFragment"* %70
}

declare void @_ZN5blink13ContainerNode17ParserAppendChildEPNS_4NodeE(%"class.blink::ContainerNode"*, %"class.blink::Node"*) local_unnamed_addr #2

declare %"class.blink::Text"* @_ZN5blink4Text6CreateERNS_8DocumentERKN3WTF6StringE(%"class.blink::Document"* dereferenceable(2848), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DocumentFragment"* @_ZN5blink24CreateContextualFragmentERKN3WTF6StringEPNS_7ElementENS_19ParserContentPolicyERNS_14ExceptionStateE(%"class.WTF::String"* dereferenceable(8), %"class.blink::Element"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 {
  %5 = tail call %"class.blink::DocumentFragment"* @_ZN5blink31CreateFragmentForInnerOuterHTMLERKN3WTF6StringEPNS_7ElementENS_19ParserContentPolicyEPKcbRNS_14ExceptionStateE(%"class.WTF::String"* dereferenceable(8) %0, %"class.blink::Element"* %1, i32 %2, i8* undef, i1 zeroext false, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %6 = icmp eq %"class.blink::DocumentFragment"* %5, null
  br i1 %6, label %76, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.blink::DocumentFragment", %"class.blink::DocumentFragment"* %5, i64 0, i32 0
  %9 = getelementptr inbounds %"class.blink::DocumentFragment", %"class.blink::DocumentFragment"* %5, i64 0, i32 0, i32 1, i32 0, i32 0
  %10 = load %"class.blink::Node"*, %"class.blink::Node"** %9, align 8
  %11 = icmp eq %"class.blink::Node"* %10, null
  br i1 %11, label %76, label %12

12:                                               ; preds = %7
  %13 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kHTMLTagE, align 8
  %14 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kHeadTagE, align 8
  %16 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kBodyTagE, align 8
  %18 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %17, i64 0, i32 0, i32 0, i32 0
  br label %19

19:                                               ; preds = %12, %73
  %20 = phi %"class.blink::Node"* [ %10, %12 ], [ %74, %73 ]
  %21 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %20, i64 0, i32 5, i32 0, i32 0
  %22 = load %"class.blink::Node"*, %"class.blink::Node"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %20, i64 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = and i32 %24, 48
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %73

27:                                               ; preds = %19
  %28 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %14, align 8
  %29 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %20, i64 1, i32 2
  %30 = bitcast %"class.blink::Member"* %29 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %31 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %31, i64 0, i32 3, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %28, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %33, %35
  br i1 %36, label %57, label %37

37:                                               ; preds = %27
  %38 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %16, align 8
  %39 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %20, i64 1, i32 2
  %40 = bitcast %"class.blink::Member"* %39 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %41 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %41, i64 0, i32 3, i32 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 3, i32 0, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %43, %45
  br i1 %46, label %57, label %47

47:                                               ; preds = %37
  %48 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %18, align 8
  %49 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %20, i64 1, i32 2
  %50 = bitcast %"class.blink::Member"* %49 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %51 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %51, i64 0, i32 3, i32 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %48, i64 0, i32 3, i32 0, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %53, %55
  br i1 %56, label %57, label %73

57:                                               ; preds = %47, %37, %27
  %58 = bitcast %"class.blink::Node"* %20 to %"class.blink::ContainerNode"*
  %59 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %20, i64 1
  %60 = bitcast %"class.blink::Node"* %59 to %"class.blink::Node"**
  %61 = load %"class.blink::Node"*, %"class.blink::Node"** %60, align 8
  %62 = icmp eq %"class.blink::Node"* %61, null
  %63 = select i1 %62, %"class.blink::Node"* %22, %"class.blink::Node"* %61
  br i1 %62, label %71, label %64

64:                                               ; preds = %57, %64
  %65 = phi %"class.blink::Node"* [ %67, %64 ], [ %61, %57 ]
  %66 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %65, i64 0, i32 5, i32 0, i32 0
  %67 = load %"class.blink::Node"*, %"class.blink::Node"** %66, align 8
  %68 = tail call %"class.blink::Node"* @_ZN5blink13ContainerNode11RemoveChildEPNS_4NodeE(%"class.blink::ContainerNode"* nonnull %58, %"class.blink::Node"* nonnull %65) #9
  %69 = tail call %"class.blink::Node"* @_ZN5blink13ContainerNode12InsertBeforeEPNS_4NodeES2_(%"class.blink::ContainerNode"* %8, %"class.blink::Node"* nonnull %65, %"class.blink::Node"* nonnull %20) #9
  %70 = icmp eq %"class.blink::Node"* %67, null
  br i1 %70, label %71, label %64

71:                                               ; preds = %64, %57
  %72 = tail call %"class.blink::Node"* @_ZN5blink13ContainerNode11RemoveChildEPNS_4NodeE(%"class.blink::ContainerNode"* %8, %"class.blink::Node"* nonnull %20) #9
  br label %73

73:                                               ; preds = %19, %47, %71
  %74 = phi %"class.blink::Node"* [ %63, %71 ], [ %22, %47 ], [ %22, %19 ]
  %75 = icmp eq %"class.blink::Node"* %74, null
  br i1 %75, label %76, label %19

76:                                               ; preds = %73, %7, %4
  ret %"class.blink::DocumentFragment"* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27ReplaceChildrenWithFragmentEPNS_13ContainerNodeEPNS_16DocumentFragmentERNS_14ExceptionStateE(%"class.blink::ContainerNode"*, %"class.blink::DocumentFragment"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 {
  %4 = alloca %"class.absl::optional.2803", align 8
  %5 = getelementptr inbounds %"class.absl::optional.2803", %"class.absl::optional.2803"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %5) #9
  %6 = bitcast %"class.absl::optional.2803"* %4 to i64*
  store i64 -6148914691236517206, i64* %6, align 8
  store i8 0, i8* %5, align 8
  %7 = getelementptr inbounds %"class.absl::optional.2803", %"class.absl::optional.2803"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast %union.anon.2807* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 48, i1 false) #9
  %9 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase36is_blink_runtime_call_stats_enabled_E, align 1, !range !3
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %26, label %11, !prof !4

11:                                               ; preds = %3
  %12 = tail call %"class.v8::Isolate"* @_ZN5blink16V8PerIsolateData17MainThreadIsolateEv() #9
  %13 = tail call %"class.blink::RuntimeCallStats"* @_ZN5blink16RuntimeCallStats4FromEPN2v87IsolateE(%"class.v8::Isolate"* %12) #9
  %14 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %13, i64 0, i32 3
  %15 = bitcast %"class.base::TickClock"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.absl::optional.2803", %"class.absl::optional.2803"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.blink::RuntimeCallStats"* %13, %"class.blink::RuntimeCallStats"** %17, align 8
  %18 = getelementptr inbounds %"class.absl::optional.2803", %"class.absl::optional.2803"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %19 = getelementptr inbounds %"class.absl::optional.2803", %"class.absl::optional.2803"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 2, i32 0, i32 0
  %20 = getelementptr inbounds %"class.absl::optional.2803", %"class.absl::optional.2803"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 4
  %21 = bitcast i64* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #9
  %22 = bitcast %"class.base::TickClock"** %20 to i64*
  store i64 %16, i64* %22, align 8
  %23 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %13, i64 0, i32 2, i64 14
  %24 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %13, i64 0, i32 0
  %25 = load %"class.blink::RuntimeCallTimer"*, %"class.blink::RuntimeCallTimer"** %24, align 8
  call void @_ZN5blink16RuntimeCallTimer5StartEPNS_18RuntimeCallCounterEPS0_(%"class.blink::RuntimeCallTimer"* %18, %"class.blink::RuntimeCallCounter"* %23, %"class.blink::RuntimeCallTimer"* %25) #9
  store %"class.blink::RuntimeCallTimer"* %18, %"class.blink::RuntimeCallTimer"** %24, align 8
  store i8 1, i8* %5, align 8
  br label %26

26:                                               ; preds = %3, %11
  %27 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %28 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %28, i64 0, i32 2, i32 0, i32 0
  %30 = load %"class.blink::Document"*, %"class.blink::Document"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %30, i64 0, i32 57
  %32 = load i8, i8* %31, align 2
  %33 = and i8 %32, 1
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %41, label %35

35:                                               ; preds = %26
  %36 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0
  %37 = call %"class.blink::ChildListMutationAccumulator"* @_ZN5blink28ChildListMutationAccumulator11GetOrCreateERNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %36) #9
  %38 = getelementptr inbounds %"class.blink::ChildListMutationAccumulator", %"class.blink::ChildListMutationAccumulator"* %37, i64 0, i32 7
  %39 = load i32, i32* %38, align 8
  %40 = add i32 %39, 1
  store i32 %40, i32* %38, align 8
  br label %41

41:                                               ; preds = %26, %35
  %42 = phi %"class.blink::ChildListMutationAccumulator"* [ null, %26 ], [ %37, %35 ]
  %43 = getelementptr inbounds %"class.blink::DocumentFragment", %"class.blink::DocumentFragment"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %44 = load %"class.blink::Node"*, %"class.blink::Node"** %43, align 8
  %45 = icmp eq %"class.blink::Node"* %44, null
  br i1 %45, label %46, label %47

46:                                               ; preds = %41
  call void @_ZN5blink13ContainerNode14RemoveChildrenENS_25SubtreeModificationActionE(%"class.blink::ContainerNode"* %0, i32 0) #9
  br label %61

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 1, i32 0, i32 0
  %49 = load %"class.blink::Node"*, %"class.blink::Node"** %48, align 8
  %50 = icmp eq %"class.blink::Node"* %49, null
  br i1 %50, label %58, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %49, i64 0, i32 5, i32 0, i32 0
  %53 = load %"class.blink::Node"*, %"class.blink::Node"** %52, align 8
  %54 = icmp eq %"class.blink::Node"* %53, null
  br i1 %54, label %55, label %58

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.blink::DocumentFragment", %"class.blink::DocumentFragment"* %1, i64 0, i32 0, i32 0
  %57 = call %"class.blink::Node"* @_ZN5blink13ContainerNode12ReplaceChildEPNS_4NodeES2_RNS_14ExceptionStateE(%"class.blink::ContainerNode"* %0, %"class.blink::Node"* %56, %"class.blink::Node"* nonnull %49, %"class.blink::ExceptionState"* dereferenceable(72) %2) #9
  br label %61

58:                                               ; preds = %47, %51
  call void @_ZN5blink13ContainerNode14RemoveChildrenENS_25SubtreeModificationActionE(%"class.blink::ContainerNode"* %0, i32 0) #9
  %59 = getelementptr inbounds %"class.blink::DocumentFragment", %"class.blink::DocumentFragment"* %1, i64 0, i32 0, i32 0
  %60 = call %"class.blink::Node"* @_ZN5blink13ContainerNode11AppendChildEPNS_4NodeERNS_14ExceptionStateE(%"class.blink::ContainerNode"* %0, %"class.blink::Node"* %59, %"class.blink::ExceptionState"* dereferenceable(72) %2) #9
  br label %61

61:                                               ; preds = %58, %55, %46
  %62 = icmp eq %"class.blink::ChildListMutationAccumulator"* %42, null
  br i1 %62, label %64, label %63

63:                                               ; preds = %61
  call void @_ZN5blink28ChildListMutationAccumulator18LeaveMutationScopeEv(%"class.blink::ChildListMutationAccumulator"* nonnull %42) #9
  br label %64

64:                                               ; preds = %61, %63
  %65 = load i8, i8* %5, align 8, !range !3
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %73, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds %"class.absl::optional.2803", %"class.absl::optional.2803"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %69 = load %"class.blink::RuntimeCallStats"*, %"class.blink::RuntimeCallStats"** %68, align 8
  %70 = getelementptr inbounds %"class.absl::optional.2803", %"class.absl::optional.2803"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %71 = call %"class.blink::RuntimeCallTimer"* @_ZN5blink16RuntimeCallTimer4StopEv(%"class.blink::RuntimeCallTimer"* %70) #9
  %72 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %69, i64 0, i32 0
  store %"class.blink::RuntimeCallTimer"* %71, %"class.blink::RuntimeCallTimer"** %72, align 8
  store i8 0, i8* %5, align 8
  br label %73

73:                                               ; preds = %64, %67
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %5) #9
  ret void
}

declare %"class.blink::RuntimeCallStats"* @_ZN5blink16RuntimeCallStats4FromEPN2v87IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.v8::Isolate"* @_ZN5blink16V8PerIsolateData17MainThreadIsolateEv() local_unnamed_addr #2

declare void @_ZN5blink13ContainerNode14RemoveChildrenENS_25SubtreeModificationActionE(%"class.blink::ContainerNode"*, i32) local_unnamed_addr #2

declare %"class.blink::Node"* @_ZN5blink13ContainerNode12ReplaceChildEPNS_4NodeES2_RNS_14ExceptionStateE(%"class.blink::ContainerNode"*, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare %"class.blink::Node"* @_ZN5blink13ContainerNode11AppendChildEPNS_4NodeERNS_14ExceptionStateE(%"class.blink::ContainerNode"*, %"class.blink::Node"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23ReplaceChildrenWithTextEPNS_13ContainerNodeERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::ContainerNode"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %5 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %5, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::Document"*, %"class.blink::Document"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %7, i64 0, i32 57
  %9 = load i8, i8* %8, align 2
  %10 = and i8 %9, 1
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %21, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0
  %14 = tail call %"class.blink::ChildListMutationAccumulator"* @_ZN5blink28ChildListMutationAccumulator11GetOrCreateERNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %13) #9
  %15 = getelementptr inbounds %"class.blink::ChildListMutationAccumulator", %"class.blink::ChildListMutationAccumulator"* %14, i64 0, i32 7
  %16 = load i32, i32* %15, align 8
  %17 = add i32 %16, 1
  store i32 %17, i32* %15, align 8
  %18 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %4, align 8
  %19 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %18, i64 0, i32 2, i32 0, i32 0
  %20 = load %"class.blink::Document"*, %"class.blink::Document"** %19, align 8
  br label %21

21:                                               ; preds = %3, %12
  %22 = phi %"class.blink::Document"* [ %7, %3 ], [ %20, %12 ]
  %23 = phi %"class.blink::ChildListMutationAccumulator"* [ null, %3 ], [ %14, %12 ]
  %24 = tail call %"class.blink::Text"* @_ZN5blink4Text6CreateERNS_8DocumentERKN3WTF6StringE(%"class.blink::Document"* dereferenceable(2848) %22, %"class.WTF::String"* dereferenceable(8) %1) #9
  %25 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 1, i32 0, i32 0
  %26 = load %"class.blink::Node"*, %"class.blink::Node"** %25, align 8
  %27 = icmp eq %"class.blink::Node"* %26, null
  br i1 %27, label %35, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %26, i64 0, i32 5, i32 0, i32 0
  %30 = load %"class.blink::Node"*, %"class.blink::Node"** %29, align 8
  %31 = icmp eq %"class.blink::Node"* %30, null
  br i1 %31, label %32, label %35

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %24, i64 0, i32 0, i32 0
  %34 = tail call %"class.blink::Node"* @_ZN5blink13ContainerNode12ReplaceChildEPNS_4NodeES2_RNS_14ExceptionStateE(%"class.blink::ContainerNode"* %0, %"class.blink::Node"* %33, %"class.blink::Node"* nonnull %26, %"class.blink::ExceptionState"* dereferenceable(72) %2) #9
  br label %38

35:                                               ; preds = %21, %28
  tail call void @_ZN5blink13ContainerNode14RemoveChildrenENS_25SubtreeModificationActionE(%"class.blink::ContainerNode"* %0, i32 0) #9
  %36 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %24, i64 0, i32 0, i32 0
  %37 = tail call %"class.blink::Node"* @_ZN5blink13ContainerNode11AppendChildEPNS_4NodeERNS_14ExceptionStateE(%"class.blink::ContainerNode"* %0, %"class.blink::Node"* %36, %"class.blink::ExceptionState"* dereferenceable(72) %2) #9
  br label %38

38:                                               ; preds = %35, %32
  %39 = icmp eq %"class.blink::ChildListMutationAccumulator"* %23, null
  br i1 %39, label %41, label %40

40:                                               ; preds = %38
  tail call void @_ZN5blink28ChildListMutationAccumulator18LeaveMutationScopeEv(%"class.blink::ChildListMutationAccumulator"* nonnull %23) #9
  br label %41

41:                                               ; preds = %38, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21MergeWithNextTextNodeEPNS_4TextERNS_14ExceptionStateE(%"class.blink::Text"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %0, i64 0, i32 0, i32 0, i32 5, i32 0, i32 0
  %4 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %5 = icmp eq %"class.blink::Node"* %4, null
  br i1 %5, label %29, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %4, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 12
  %10 = icmp eq i32 %9, 4
  br i1 %10, label %11, label %29

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %0, i64 0, i32 0
  %13 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %4, i64 1
  %14 = bitcast %"class.blink::Node"* %13 to i8*
  %15 = load i8, i8* %14, align 8, !range !3
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %21, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %4, i64 1, i32 0, i32 0, i32 1
  %19 = bitcast %"class.blink::TraceWrapperV8Reference"* %18 to %"class.blink::ParkableString"*
  %20 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"* %19) #9
  br label %24

21:                                               ; preds = %11
  %22 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %4, i64 1, i32 1
  %23 = bitcast i32* %22 to %"class.WTF::String"*
  br label %24

24:                                               ; preds = %17, %21
  %25 = phi %"class.WTF::String"* [ %20, %17 ], [ %23, %21 ]
  tail call void @_ZN5blink13CharacterData10appendDataERKN3WTF6StringE(%"class.blink::CharacterData"* %12, %"class.WTF::String"* dereferenceable(8) %25) #9
  %26 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %4) #9
  %27 = icmp eq %"class.blink::ContainerNode"* %26, null
  br i1 %27, label %29, label %28

28:                                               ; preds = %24
  tail call void @_ZN5blink4Node6removeERNS_14ExceptionStateE(%"class.blink::Node"* nonnull %4, %"class.blink::ExceptionState"* dereferenceable(72) %1) #9
  br label %29

29:                                               ; preds = %6, %2, %28, %24
  ret void
}

declare void @_ZN5blink13CharacterData10appendDataERKN3WTF6StringE(%"class.blink::CharacterData"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"*) local_unnamed_addr #2

declare void @_ZN5blink4Node6removeERNS_14ExceptionStateE(%"class.blink::Node"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DocumentFragment"* @_ZN5blink44CreateSanitizedFragmentFromMarkupWithContextERNS_8DocumentERKN3WTF6StringEjjS5_(%"class.blink::Document"* dereferenceable(2848), %"class.WTF::String"* dereferenceable(8), i32, i32, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 {
  %6 = alloca %"class.util::TokenType", align 8
  %7 = alloca %"class.blink::IntSize", align 4
  %8 = alloca %"class.blink::KURL", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.blink::PositionTemplate", align 8
  %11 = alloca %"class.blink::PositionTemplate", align 8
  %12 = alloca <2 x i64>, align 16
  %13 = bitcast <2 x i64>* %12 to %"class.blink::CreateMarkupOptions"*
  %14 = alloca %"class.blink::CreateMarkupOptions::Builder", align 8
  %15 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %178, label %18

18:                                               ; preds = %5
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %178, label %22

22:                                               ; preds = %18
  %23 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %0) #9
  %24 = tail call %"class.blink::FrameScheduler"* @_ZN5blink10LocalFrame17GetFrameSchedulerEv(%"class.blink::LocalFrame"* %23) #9
  %25 = bitcast %"class.blink::FrameScheduler"* %24 to %"class.blink::scheduler::WebAgentGroupScheduler"* (%"class.blink::FrameScheduler"*)***
  %26 = load %"class.blink::scheduler::WebAgentGroupScheduler"* (%"class.blink::FrameScheduler"*)**, %"class.blink::scheduler::WebAgentGroupScheduler"* (%"class.blink::FrameScheduler"*)*** %25, align 8
  %27 = getelementptr inbounds %"class.blink::scheduler::WebAgentGroupScheduler"* (%"class.blink::FrameScheduler"*)*, %"class.blink::scheduler::WebAgentGroupScheduler"* (%"class.blink::FrameScheduler"*)** %26, i64 25
  %28 = load %"class.blink::scheduler::WebAgentGroupScheduler"* (%"class.blink::FrameScheduler"*)*, %"class.blink::scheduler::WebAgentGroupScheduler"* (%"class.blink::FrameScheduler"*)** %27, align 8
  %29 = tail call %"class.blink::scheduler::WebAgentGroupScheduler"* %28(%"class.blink::FrameScheduler"* %24) #9
  %30 = tail call dereferenceable(40) %"class.blink::ChromeClient"* @_ZN5blink34GetStaticEmptyChromeClientInstanceEv() #9
  %31 = tail call %"class.blink::Page"* @_ZN5blink4Page17CreateNonOrdinaryERNS_12ChromeClientERNS_9scheduler22WebAgentGroupSchedulerE(%"class.blink::ChromeClient"* dereferenceable(40) %30, %"class.blink::scheduler::WebAgentGroupScheduler"* dereferenceable(8) %29) #9
  %32 = getelementptr inbounds %"class.blink::Page", %"class.blink::Page"* %31, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0
  %33 = load %"class.blink::Settings"*, %"class.blink::Settings"** %32, align 8
  tail call void @_ZN5blink8Settings16SetScriptEnabledEb(%"class.blink::Settings"* %33, i1 zeroext false) #9
  %34 = load %"class.blink::Settings"*, %"class.blink::Settings"** %32, align 8
  tail call void @_ZN5blink8Settings17SetPluginsEnabledEb(%"class.blink::Settings"* %34, i1 zeroext false) #9
  %35 = load %"class.blink::Settings"*, %"class.blink::Settings"** %32, align 8
  tail call void @_ZN5blink8Settings32SetAcceleratedCompositingEnabledEb(%"class.blink::Settings"* %35, i1 zeroext false) #9
  %36 = load %"class.blink::Settings"*, %"class.blink::Settings"** %32, align 8
  tail call void @_ZN5blink8Settings28SetParserScriptingFlagPolicyENS_25ParserScriptingFlagPolicyE(%"class.blink::Settings"* %36, i32 1) #9
  %37 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_11FrameClientEEEPhm(i64 16) #9
  %38 = getelementptr inbounds i8, i8* %37, i64 8
  %39 = bitcast i8* %38 to i64*
  store i64 0, i64* %39, align 8
  %40 = bitcast i8* %37 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [100 x i8*] }, { [100 x i8*] }* @_ZTVN5blink21EmptyLocalFrameClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  %41 = getelementptr inbounds i8, i8* %37, i64 -4
  %42 = bitcast i8* %41 to i16*
  %43 = load atomic i16, i16* %42 monotonic, align 2
  %44 = or i16 %43, 1
  store atomic i16 %44, i16* %42 release, align 2
  %45 = bitcast %"class.util::TokenType"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %45) #9
  %46 = tail call { i64, i64 } @_ZN4base16UnguessableToken6CreateEv() #9
  %47 = extractvalue { i64, i64 } %46, 0
  %48 = extractvalue { i64, i64 } %46, 1
  %49 = getelementptr inbounds %"class.util::TokenType", %"class.util::TokenType"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %47, i64* %49, align 8
  %50 = getelementptr inbounds %"class.util::TokenType", %"class.util::TokenType"* %6, i64 0, i32 0, i32 0, i32 0, i32 1
  store i64 %48, i64* %50, align 8
  %51 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_5FrameEEEPhm(i64 1176) #9
  %52 = bitcast i8* %51 to %"class.blink::LocalFrame"*
  %53 = bitcast i8* %37 to %"class.blink::LocalFrameClient"*
  %54 = tail call %"class.base::DefaultTickClock"* @_ZN4base16DefaultTickClock11GetInstanceEv() #9
  %55 = getelementptr inbounds %"class.base::DefaultTickClock", %"class.base::DefaultTickClock"* %54, i64 0, i32 0
  call void @_ZN5blink10LocalFrameC1EPNS_16LocalFrameClientERNS_4PageEPNS_10FrameOwnerEPNS_5FrameES8_NS_15FrameInsertTypeERKN4util9TokenTypeINS_25LocalFrameTokenTypeMarkerEEEPNS_18WindowAgentFactoryEPNS_17InterfaceRegistryEPKN4base9TickClockE(%"class.blink::LocalFrame"* %52, %"class.blink::LocalFrameClient"* %53, %"class.blink::Page"* dereferenceable(1264) %31, %"class.blink::FrameOwner"* null, %"class.blink::Frame"* null, %"class.blink::Frame"* null, i32 0, %"class.util::TokenType"* nonnull dereferenceable(16) %6, %"class.blink::WindowAgentFactory"* null, %"class.blink::InterfaceRegistry"* null, %"class.base::TickClock"* %55) #9
  %56 = getelementptr inbounds i8, i8* %51, i64 -4
  %57 = bitcast i8* %56 to i16*
  %58 = load atomic i16, i16* %57 monotonic, align 2
  %59 = or i16 %58, 1
  store atomic i16 %59, i16* %57 release, align 2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %45) #9
  %60 = bitcast %"class.blink::IntSize"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #9
  %61 = getelementptr inbounds %"class.blink::IntSize", %"class.blink::IntSize"* %7, i64 0, i32 0
  store i32 800, i32* %61, align 4
  %62 = getelementptr inbounds %"class.blink::IntSize", %"class.blink::IntSize"* %7, i64 0, i32 1
  store i32 600, i32* %62, align 4
  %63 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_14LocalFrameViewEEEPhm(i64 832) #9
  %64 = bitcast i8* %63 to %"class.blink::LocalFrameView"*
  call void @_ZN5blink14LocalFrameViewC1ERNS_10LocalFrameERKNS_7IntSizeE(%"class.blink::LocalFrameView"* %64, %"class.blink::LocalFrame"* dereferenceable(1176) %52, %"class.blink::IntSize"* nonnull dereferenceable(8) %7) #9
  %65 = getelementptr inbounds i8, i8* %63, i64 -4
  %66 = bitcast i8* %65 to i16*
  %67 = load atomic i16, i16* %66 monotonic, align 2
  %68 = or i16 %67, 1
  store atomic i16 %68, i16* %66 release, align 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #9
  call void @_ZN5blink10LocalFrame7SetViewEPNS_14LocalFrameViewE(%"class.blink::LocalFrame"* %52, %"class.blink::LocalFrameView"* %64) #9
  call void @_ZN5blink10LocalFrame4InitEPNS_5FrameENSt3__110unique_ptrINS_15PolicyContainerENS3_14default_deleteIS5_EEEE(%"class.blink::LocalFrame"* %52, %"class.blink::Frame"* null, %"class.blink::PolicyContainer"* null) #9
  %69 = call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* %52) #9
  %70 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %69, i64 0, i32 172
  store i8 1, i8* %70, align 1
  %71 = call %"class.blink::HTMLElement"* @_ZNK5blink8Document4bodyEv(%"class.blink::Document"* %69) #9
  %72 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %72) #9
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %8) #9
  %73 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %8, i64 0, i32 4
  %74 = call %"class.blink::DocumentFragment"* @_ZN5blink35CreateFragmentFromMarkupWithContextERNS_8DocumentERKN3WTF6StringEjjS5_NS_19ParserContentPolicyE(%"class.blink::Document"* dereferenceable(2848) %69, %"class.WTF::String"* dereferenceable(8) %1, i32 %2, i32 %3, %"class.WTF::String"* dereferenceable(8) %73, i32 0)
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %72) #9
  %75 = icmp eq %"class.blink::DocumentFragment"* %74, null
  br i1 %75, label %76, label %78

76:                                               ; preds = %22
  %77 = call %"class.blink::Page"* @_ZNK5blink8Document7GetPageEv(%"class.blink::Document"* %69) #9
  call void @_ZN5blink4Page15WillBeDestroyedEv(%"class.blink::Page"* %77) #9
  br label %178

78:                                               ; preds = %22
  %79 = getelementptr inbounds %"class.blink::DocumentFragment", %"class.blink::DocumentFragment"* %74, i64 0, i32 0, i32 0
  %80 = getelementptr inbounds %"class.blink::DocumentFragment", %"class.blink::DocumentFragment"* %74, i64 0, i32 0, i32 0, i32 1
  %81 = load i32, i32* %80, align 8
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %140, label %84

84:                                               ; preds = %78
  %85 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %79, i64 1
  %86 = bitcast %"class.blink::Node"* %85 to %"class.blink::Node"**
  %87 = load %"class.blink::Node"*, %"class.blink::Node"** %86, align 8
  %88 = icmp eq %"class.blink::Node"* %87, null
  br i1 %88, label %140, label %89

89:                                               ; preds = %84
  %90 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names9kStyleTagE, align 8
  %91 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %90, i64 0, i32 0, i32 0, i32 0
  %92 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kStyleTagE, align 8
  %93 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %92, i64 0, i32 0, i32 0, i32 0
  br label %94

94:                                               ; preds = %135, %89
  %95 = phi %"class.blink::Node"* [ %87, %89 ], [ %136, %135 ]
  %96 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %95, i64 0, i32 1
  %97 = load i32, i32* %96, align 8
  %98 = and i32 %97, 48
  switch i32 %98, label %119 [
    i32 0, label %99
    i32 32, label %109
  ]

99:                                               ; preds = %94
  %100 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %93, align 8
  %101 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %95, i64 1, i32 2
  %102 = bitcast %"class.blink::Member"* %101 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %103 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %102, align 8
  %104 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %103, i64 0, i32 3, i32 0, i32 0, i32 0
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %106 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %100, i64 0, i32 3, i32 0, i32 0, i32 0
  %107 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %106, align 8
  %108 = icmp eq %"class.WTF::StringImpl"* %105, %107
  br i1 %108, label %138, label %119

109:                                              ; preds = %94
  %110 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %91, align 8
  %111 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %95, i64 1, i32 2
  %112 = bitcast %"class.blink::Member"* %111 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %113 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %112, align 8
  %114 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %113, i64 0, i32 3, i32 0, i32 0, i32 0
  %115 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %114, align 8
  %116 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %110, i64 0, i32 3, i32 0, i32 0, i32 0
  %117 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %116, align 8
  %118 = icmp eq %"class.WTF::StringImpl"* %115, %117
  br i1 %118, label %138, label %119

119:                                              ; preds = %109, %99, %94
  %120 = and i32 %97, 2
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %127, label %122

122:                                              ; preds = %119
  %123 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %95, i64 1
  %124 = bitcast %"class.blink::Node"* %123 to %"class.blink::Node"**
  %125 = load %"class.blink::Node"*, %"class.blink::Node"** %124, align 8
  %126 = icmp eq %"class.blink::Node"* %125, null
  br i1 %126, label %127, label %135

127:                                              ; preds = %122, %119
  %128 = icmp eq %"class.blink::Node"* %95, %79
  br i1 %128, label %140, label %129

129:                                              ; preds = %127
  %130 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %95, i64 0, i32 5, i32 0, i32 0
  %131 = load %"class.blink::Node"*, %"class.blink::Node"** %130, align 8
  %132 = icmp eq %"class.blink::Node"* %131, null
  br i1 %132, label %133, label %135

133:                                              ; preds = %129
  %134 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %95, %"class.blink::Node"* %79) #9
  br label %135

135:                                              ; preds = %133, %129, %122
  %136 = phi %"class.blink::Node"* [ %134, %133 ], [ %131, %129 ], [ %125, %122 ]
  %137 = icmp eq %"class.blink::Node"* %136, null
  br i1 %137, label %140, label %94

138:                                              ; preds = %109, %99
  %139 = call fastcc zeroext i1 @_ZN5blinkL19StripSVGUseDataURLsERNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %79)
  br label %145

140:                                              ; preds = %135, %127, %78, %84
  %141 = call fastcc zeroext i1 @_ZN5blinkL19StripSVGUseDataURLsERNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %79)
  br i1 %141, label %145, label %142

142:                                              ; preds = %140
  %143 = call %"class.blink::Page"* @_ZNK5blink8Document7GetPageEv(%"class.blink::Document"* %69) #9
  call void @_ZN5blink4Page15WillBeDestroyedEv(%"class.blink::Page"* %143) #9
  %144 = call %"class.blink::DocumentFragment"* @_ZN5blink35CreateFragmentFromMarkupWithContextERNS_8DocumentERKN3WTF6StringEjjS5_NS_19ParserContentPolicyE(%"class.blink::Document"* dereferenceable(2848) %0, %"class.WTF::String"* dereferenceable(8) %1, i32 %2, i32 %3, %"class.WTF::String"* dereferenceable(8) %4, i32 0)
  br label %178

145:                                              ; preds = %138, %140
  %146 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %71, i64 0, i32 0, i32 0, i32 0
  %147 = call %"class.blink::Node"* @_ZN5blink4Node11appendChildEPS0_(%"class.blink::Node"* %146, %"class.blink::Node"* %79) #9
  call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %69, i32 7) #9
  %148 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %148) #9
  %149 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %149, align 8
  %150 = bitcast %"class.blink::PositionTemplate"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %150) #9
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE19FirstPositionInNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %10, %"class.blink::Node"* dereferenceable(64) %146) #9
  %151 = bitcast %"class.blink::PositionTemplate"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %151) #9
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE18LastPositionInNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %11, %"class.blink::Node"* dereferenceable(64) %146) #9
  %152 = bitcast <2 x i64>* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %152) #9
  %153 = bitcast %"class.blink::CreateMarkupOptions::Builder"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %153) #9
  %154 = bitcast %"class.blink::CreateMarkupOptions::Builder"* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %154, i8 0, i64 16, i1 false)
  %155 = call dereferenceable(16) %"class.blink::CreateMarkupOptions::Builder"* @_ZN5blink19CreateMarkupOptions7Builder31SetShouldAnnotateForInterchangeEb(%"class.blink::CreateMarkupOptions::Builder"* nonnull %14, i1 zeroext true) #9
  %156 = call dereferenceable(16) %"class.blink::CreateMarkupOptions::Builder"* @_ZN5blink19CreateMarkupOptions7Builder26SetIsForMarkupSanitizationEb(%"class.blink::CreateMarkupOptions::Builder"* %155, i1 zeroext true) #9
  %157 = bitcast %"class.blink::CreateMarkupOptions::Builder"* %156 to <2 x i64>*
  %158 = load <2 x i64>, <2 x i64>* %157, align 8
  store <2 x i64> %158, <2 x i64>* %12, align 16
  %159 = call %"class.WTF::StringImpl"* @_ZN5blink21CreateMarkupAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEE12CreateMarkupERKNS_16PositionTemplateIS3_EES8_RKNS_19CreateMarkupOptionsE(%"class.blink::PositionTemplate"* nonnull dereferenceable(16) %10, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %11, %"class.blink::CreateMarkupOptions"* nonnull dereferenceable(16) %13) #9
  store %"class.WTF::StringImpl"* %159, %"class.WTF::StringImpl"** %149, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %153) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %152) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %151) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %150) #9
  %160 = call %"class.blink::Page"* @_ZNK5blink8Document7GetPageEv(%"class.blink::Document"* %69) #9
  call void @_ZN5blink4Page15WillBeDestroyedEv(%"class.blink::Page"* %160) #9
  %161 = call %"class.blink::DocumentFragment"* @_ZN5blink24CreateFragmentFromMarkupERNS_8DocumentERKN3WTF6StringES5_NS_19ParserContentPolicyE(%"class.blink::Document"* dereferenceable(2848) %0, %"class.WTF::String"* nonnull dereferenceable(8) %9, %"class.WTF::String"* dereferenceable(8) %4, i32 0)
  %162 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %149, align 8
  %163 = icmp eq %"class.WTF::StringImpl"* %162, null
  br i1 %163, label %177, label %164

164:                                              ; preds = %145
  %165 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %166 = load atomic i32, i32* %165 monotonic, align 4
  %167 = and i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 0
  %170 = load i32, i32* %169, align 4
  br i1 %168, label %171, label %173

171:                                              ; preds = %164
  %172 = add i32 %170, -1
  store i32 %172, i32* %169, align 4
  br label %173

173:                                              ; preds = %171, %164
  %174 = phi i32 [ %172, %171 ], [ %170, %164 ]
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %176, label %177

176:                                              ; preds = %173
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %162) #9
  br label %177

177:                                              ; preds = %145, %173, %176
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %148) #9
  br label %178

178:                                              ; preds = %5, %76, %177, %142, %18
  %179 = phi %"class.blink::DocumentFragment"* [ null, %18 ], [ null, %76 ], [ %161, %177 ], [ %144, %142 ], [ null, %5 ]
  ret %"class.blink::DocumentFragment"* %179
}

declare %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"*) local_unnamed_addr #2

declare %"class.blink::FrameScheduler"* @_ZN5blink10LocalFrame17GetFrameSchedulerEv(%"class.blink::LocalFrame"*) local_unnamed_addr #2

declare %"class.blink::HTMLElement"* @_ZNK5blink8Document4bodyEv(%"class.blink::Document"*) local_unnamed_addr #2

declare void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #3

declare %"class.blink::Page"* @_ZNK5blink8Document7GetPageEv(%"class.blink::Document"*) local_unnamed_addr #2

declare void @_ZN5blink4Page15WillBeDestroyedEv(%"class.blink::Page"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5blinkL19StripSVGUseDataURLsERNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) unnamed_addr #0 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.blink::SVGURLReferenceResolver", align 8
  %4 = alloca %"class.blink::KURL", align 8
  %5 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 48
  %8 = icmp ne i32 %7, 32
  %9 = icmp eq %"class.blink::Node"* %0, null
  %10 = or i1 %9, %8
  br i1 %10, label %42, label %11

11:                                               ; preds = %1
  %12 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names7kUseTagE, align 8
  %13 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1, i32 2
  %16 = bitcast %"class.blink::Member"* %15 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %17 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %17, i64 0, i32 3, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %14, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %19, %21
  br i1 %22, label %23, label %42

23:                                               ; preds = %11
  %24 = bitcast %"class.blink::SVGURLReferenceResolver"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %24) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 136, i1 false)
  %25 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 3, i32 0, i32 0, i32 1
  %26 = bitcast %"class.blink::TraceWrapperV8Reference"* %25 to %"class.blink::SVGURIReference"*
  %27 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink15SVGURIReference10HrefStringEv(%"class.blink::SVGURIReference"* %26) #9
  %28 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 3, i32 0, i32 0
  %29 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %29, i64 0, i32 2, i32 0, i32 0
  %31 = load %"class.blink::Document"*, %"class.blink::Document"** %30, align 8
  call void @_ZN5blink23SVGURLReferenceResolverC1ERKN3WTF6StringERKNS_8DocumentE(%"class.blink::SVGURLReferenceResolver"* nonnull %3, %"class.WTF::String"* dereferenceable(8) %27, %"class.blink::Document"* dereferenceable(2848) %31) #9
  %32 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %32) #9
  call void @_ZNK5blink23SVGURLReferenceResolver11AbsoluteUrlEv(%"class.blink::KURL"* nonnull sret %4, %"class.blink::SVGURLReferenceResolver"* nonnull %3) #9
  %33 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33)
  %34 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %35 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %34, i64* %35, align 8
  %36 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25, i64 0, i64 0), i8** %36, align 8
  %37 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 4, i32* %37, align 8
  %38 = call zeroext i1 @_ZNK5blink4KURL10ProtocolIsEN3WTF10StringViewE(%"class.blink::KURL"* nonnull %4, %"class.WTF::StringView"* nonnull byval(%"class.WTF::StringView") align 8 %2) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33)
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %32) #9
  br i1 %38, label %39, label %40

39:                                               ; preds = %23
  call void @_ZN5blink4Node6removeEv(%"class.blink::Node"* nonnull %0) #9
  br label %40

40:                                               ; preds = %39, %23
  %41 = getelementptr inbounds %"class.blink::SVGURLReferenceResolver", %"class.blink::SVGURLReferenceResolver"* %3, i64 0, i32 2
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %41) #9
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %24) #9
  br label %62

42:                                               ; preds = %1, %11
  %43 = and i32 %6, 2
  %44 = icmp eq i32 %43, 0
  %45 = or i1 %9, %44
  br i1 %45, label %62, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1
  %48 = bitcast %"class.blink::Node"* %47 to %"class.blink::Node"**
  %49 = load %"class.blink::Node"*, %"class.blink::Node"** %48, align 8
  %50 = icmp eq %"class.blink::Node"* %49, null
  br i1 %50, label %62, label %54

51:                                               ; preds = %54
  %52 = and i8 %60, 1
  %53 = icmp ne i8 %52, 0
  br label %62

54:                                               ; preds = %46, %54
  %55 = phi %"class.blink::Node"* [ %58, %54 ], [ %49, %46 ]
  %56 = phi i8 [ %60, %54 ], [ 0, %46 ]
  %57 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %55, i64 0, i32 5, i32 0, i32 0
  %58 = load %"class.blink::Node"*, %"class.blink::Node"** %57, align 8
  %59 = tail call fastcc zeroext i1 @_ZN5blinkL19StripSVGUseDataURLsERNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %55)
  %60 = select i1 %59, i8 1, i8 %56
  %61 = icmp eq %"class.blink::Node"* %58, null
  br i1 %61, label %51, label %54

62:                                               ; preds = %42, %46, %51, %40
  %63 = phi i1 [ true, %40 ], [ false, %46 ], [ %53, %51 ], [ false, %42 ]
  ret i1 %63
}

declare %"class.blink::Node"* @_ZN5blink4Node11appendChildEPS0_(%"class.blink::Node"*, %"class.blink::Node"*) local_unnamed_addr #2

declare void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"*, i32) local_unnamed_addr #2

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE19FirstPositionInNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE18LastPositionInNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare dereferenceable(16) %"class.blink::CreateMarkupOptions::Builder"* @_ZN5blink19CreateMarkupOptions7Builder31SetShouldAnnotateForInterchangeEb(%"class.blink::CreateMarkupOptions::Builder"*, i1 zeroext) local_unnamed_addr #2

declare dereferenceable(16) %"class.blink::CreateMarkupOptions::Builder"* @_ZN5blink19CreateMarkupOptions7Builder26SetIsForMarkupSanitizationEb(%"class.blink::CreateMarkupOptions::Builder"*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare i8* @_ZN7logging15CheckOpValueStrEi(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIsEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS1_14remove_pointerIS3_E4typeEEE5valueEPcE4typeES5_ENUlRNS1_13basic_ostreamIcNS1_11char_traitsIcEEEEPKvE_8__invokeESG_SI_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #6 comdat align 2 {
  %3 = bitcast i8* %1 to i16*
  %4 = load i16, i16* %3, align 2
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEs(%"class.std::__1::basic_ostream"* %0, i16 signext %4) #9
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEs(%"class.std::__1::basic_ostream"*, i16 signext) local_unnamed_addr #2

declare void @_ZN5blink4KURLC1ERKN3WTF6StringE(%"class.blink::KURL"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

declare void @_ZN5blink4KURLC1ERKS0_RKN3WTF6StringE(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15AttributeChange5ApplyEv(%"class.blink::AttributeChange"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::AtomicString", align 8
  %3 = getelementptr inbounds %"class.blink::AttributeChange", %"class.blink::AttributeChange"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::Element"*, %"class.blink::Element"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::AttributeChange", %"class.blink::AttributeChange"* %0, i64 0, i32 1
  %6 = bitcast %"class.WTF::AtomicString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.blink::AttributeChange", %"class.blink::AttributeChange"* %0, i64 0, i32 2, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %33, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 acquire, align 4
  %13 = and i32 %12, 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %31, label %15

15:                                               ; preds = %10
  %16 = load atomic i32, i32* %11 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %33

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i33
  %23 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %22, i33 1) #9
  %24 = extractvalue { i33, i1 } %23, 1
  %25 = extractvalue { i33, i1 } %23, 0
  %26 = icmp slt i33 %25, 0
  %27 = or i1 %24, %26
  br i1 %27, label %28, label %29, !prof !2

28:                                               ; preds = %19
  tail call void @llvm.trap() #9
  unreachable

29:                                               ; preds = %19
  %30 = trunc i33 %25 to i32
  store i32 %30, i32* %20, align 4
  br label %33

31:                                               ; preds = %10
  %32 = tail call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %8) #9
  br label %33

33:                                               ; preds = %1, %15, %29, %31
  %34 = phi %"class.WTF::StringImpl"* [ %32, %31 ], [ %8, %15 ], [ %8, %29 ], [ null, %1 ]
  %35 = ptrtoint %"class.WTF::StringImpl"* %34 to i64
  %36 = bitcast %"class.WTF::AtomicString"* %2 to i64*
  store i64 %35, i64* %36, align 8
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %4, %"class.blink::QualifiedName"* dereferenceable(8) %5, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %2) #9
  %37 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #9
  br label %53

53:                                               ; preds = %33, %49, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  ret void
}

declare void @_ZNK5blink7Element24SynchronizeAllAttributesEv(%"class.blink::Element"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::AttributeChange"* @_ZN3WTF15ConstructTraitsIN5blink15AttributeChangeENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8*, %"class.blink::AttributeChange"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %0 to %"class.blink::AttributeChange"*
  %4 = bitcast %"class.blink::AttributeChange"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast i8* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.blink::AttributeChange", %"class.blink::AttributeChange"* %1, i64 0, i32 1, i32 0, i32 0
  %8 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %7, align 8
  %9 = getelementptr inbounds i8, i8* %0, i64 8
  %10 = bitcast i8* %9 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %8, %"class.blink::QualifiedName::QualifiedNameImpl"** %10, align 8
  %11 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %8, null
  br i1 %11, label %19, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %8, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = and i32 %14, 16777216
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %8, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %18) #9
  br label %19

19:                                               ; preds = %2, %12, %17
  %20 = getelementptr inbounds i8, i8* %0, i64 16
  %21 = getelementptr inbounds %"class.blink::AttributeChange", %"class.blink::AttributeChange"* %1, i64 0, i32 2
  %22 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %21, i64 0, i32 0, i32 0
  %23 = bitcast %"class.WTF::String"* %21 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast i8* %20 to i64*
  store i64 %24, i64* %25, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %22, align 8
  %26 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %61, label %28

28:                                               ; preds = %19
  %29 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %30 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %29, i64 0, i32 1
  %31 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %30) #9
  %32 = icmp eq i8* %31, null
  br i1 %32, label %33, label %35, !prof !2

33:                                               ; preds = %28
  %34 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %30, i8* %34) #9
  br label %35

35:                                               ; preds = %33, %28
  %36 = phi i8* [ %34, %33 ], [ %31, %28 ]
  %37 = bitcast i8* %36 to %"class.blink::ThreadState"**
  %38 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %38, i64 0, i32 9
  %40 = load i8, i8* %39, align 1, !range !3
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %61, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %38, i64 0, i32 13
  %44 = load i64, i64* %43, align 8
  %45 = add i64 %44, 1
  store i64 %45, i64* %43, align 8
  %46 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %38, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %47 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %46, align 8
  %48 = load atomic i64, i64* %6 monotonic, align 8
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %58, label %50

50:                                               ; preds = %42
  %51 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %47, i64 0, i32 0, i32 0
  %52 = inttoptr i64 %48 to i8*
  %53 = bitcast %"class.blink::MarkingVisitor"* %47 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %54 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %54, i64 5
  %56 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %55, align 8
  tail call void %56(%"class.blink::Visitor"* %51, i8* nonnull %52, i8* %52, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv) #9
  %57 = load i64, i64* %43, align 8
  br label %58

58:                                               ; preds = %50, %42
  %59 = phi i64 [ %45, %42 ], [ %57, %50 ]
  %60 = add i64 %59, -1
  store i64 %60, i64* %43, align 8
  br label %61

61:                                               ; preds = %19, %35, %58
  ret %"class.blink::AttributeChange"* %3
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink15AttributeChangeELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.2944"*, %"class.blink::AttributeChange"* dereferenceable(24)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2944", %"class.WTF::Vector.2944"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2944", %"class.WTF::Vector.2944"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::AttributeChange"*, %"class.blink::AttributeChange"** %6, align 8
  %8 = icmp ugt %"class.blink::AttributeChange"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::AttributeChange", %"class.blink::AttributeChange"* %7, i64 %10
  %12 = icmp ugt %"class.blink::AttributeChange"* %11, %1
  br i1 %12, label %24, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.2944", %"class.WTF::Vector.2944"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink15AttributeChangeELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.2944"* %0, i32 %22) #9
  %23 = load %"class.blink::AttributeChange"*, %"class.blink::AttributeChange"** %6, align 8
  br label %40

24:                                               ; preds = %9
  %25 = ptrtoint %"class.blink::AttributeChange"* %1 to i64
  %26 = ptrtoint %"class.blink::AttributeChange"* %7 to i64
  %27 = sub i64 %25, %26
  %28 = sdiv exact i64 %27, 24
  %29 = getelementptr inbounds %"class.WTF::Vector.2944", %"class.WTF::Vector.2944"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = lshr i32 %30, 2
  %32 = add i32 %30, 1
  %33 = add i32 %32, %31
  %34 = icmp ugt i32 %33, 4
  %35 = select i1 %34, i32 %33, i32 4
  %36 = icmp ugt i32 %35, %5
  %37 = select i1 %36, i32 %35, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink15AttributeChangeELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.2944"* %0, i32 %37) #9
  %38 = load %"class.blink::AttributeChange"*, %"class.blink::AttributeChange"** %6, align 8
  %39 = getelementptr inbounds %"class.blink::AttributeChange", %"class.blink::AttributeChange"* %38, i64 %28
  br label %40

40:                                               ; preds = %13, %24
  %41 = phi %"class.blink::AttributeChange"* [ %23, %13 ], [ %38, %24 ]
  %42 = phi %"class.blink::AttributeChange"* [ %1, %13 ], [ %39, %24 ]
  %43 = load i32, i32* %3, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"class.blink::AttributeChange", %"class.blink::AttributeChange"* %41, i64 %44
  %46 = bitcast %"class.blink::AttributeChange"* %45 to i8*
  %47 = tail call %"class.blink::AttributeChange"* @_ZN3WTF15ConstructTraitsIN5blink15AttributeChangeENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8* %46, %"class.blink::AttributeChange"* dereferenceable(24) %42)
  %48 = load i32, i32* %3, align 4
  %49 = add i32 %48, 1
  store i32 %49, i32* %3, align 4
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Element"*
  %4 = bitcast i8* %1 to void (%"class.blink::Element"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Element"*, %"class.blink::Visitor"*)**, void (%"class.blink::Element"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Element"*, %"class.blink::Visitor"*)*, void (%"class.blink::Element"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Element"*, %"class.blink::Visitor"*)*, void (%"class.blink::Element"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Element"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink15AttributeChangeELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.2944"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.2944", %"class.WTF::Vector.2944"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !4

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.2944", %"class.WTF::Vector.2944"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::AttributeChange"*, %"class.blink::AttributeChange"** %8, align 8
  %10 = icmp eq %"class.blink::AttributeChange"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_15AttributeChangeEEEmm(i64 %11) #9
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = udiv i64 %12, 24
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_15AttributeChangeEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64 %14) #9
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.2944"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #9
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::AttributeChange"*, %"class.blink::AttributeChange"** %8, align 8
  %26 = icmp eq %"class.blink::AttributeChange"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::AttributeChange"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #9
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = udiv i64 %12, 24
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #9
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #9
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !3
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.10, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.11, i64 0, i64 0)) #9
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #9
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink15AttributeChangeELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2944"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink15AttributeChangeELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2944"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %15

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.2944", %"class.WTF::Vector.2944"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::AttributeChange"*, %"class.blink::AttributeChange"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.2944", %"class.WTF::Vector.2944"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::AttributeChange", %"class.blink::AttributeChange"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.2944"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.2944", %"class.WTF::Vector.2944"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  tail call void @_ZN3WTF11VectorMoverILb0EN5blink15AttributeChangeENS1_13HeapAllocatorEE4MoveEPS2_S5_S5_b(%"class.blink::AttributeChange"* %6, %"class.blink::AttributeChange"* %10, %"class.blink::AttributeChange"* null, i1 zeroext true) #9
  %13 = bitcast %"class.blink::AttributeChange"* %6 to i8*
  %14 = mul nuw nsw i64 %9, 24
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %13, i64 %14) #9
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %13) #9
  br label %80

15:                                               ; preds = %2
  %16 = zext i32 %1 to i64
  %17 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_15AttributeChangeEEEmm(i64 %16) #9
  %18 = udiv i64 %17, 24
  %19 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_15AttributeChangeEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64 %18) #9
  %20 = ptrtoint %"class.blink::HeapVectorBacking"* %19 to i64
  %21 = getelementptr inbounds %"class.WTF::Vector.2944", %"class.WTF::Vector.2944"* %0, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.blink::AttributeChange"*, %"class.blink::AttributeChange"** %21, align 8
  %23 = getelementptr inbounds %"class.WTF::Vector.2944", %"class.WTF::Vector.2944"* %0, i64 0, i32 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %"class.blink::AttributeChange", %"class.blink::AttributeChange"* %22, i64 %25
  %27 = icmp eq i32 %24, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %15
  %29 = bitcast %"class.blink::AttributeChange"* %22 to i8*
  %30 = bitcast %"class.WTF::Vector.2944"* %0 to i8**
  br label %67

31:                                               ; preds = %15
  %32 = bitcast %"class.blink::HeapVectorBacking"* %19 to %"class.blink::AttributeChange"*
  br label %33

33:                                               ; preds = %31, %50
  %34 = phi %"class.blink::AttributeChange"* [ %59, %50 ], [ %22, %31 ]
  %35 = phi %"class.blink::AttributeChange"* [ %58, %50 ], [ %32, %31 ]
  %36 = bitcast %"class.blink::AttributeChange"* %34 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %"class.blink::AttributeChange"* %35 to i64*
  store i64 %37, i64* %38, align 8
  %39 = getelementptr inbounds %"class.blink::AttributeChange", %"class.blink::AttributeChange"* %34, i64 0, i32 1, i32 0, i32 0
  %40 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::AttributeChange", %"class.blink::AttributeChange"* %35, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %40, %"class.blink::QualifiedName::QualifiedNameImpl"** %41, align 8
  %42 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %40, null
  br i1 %42, label %50, label %43

43:                                               ; preds = %33
  %44 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %40, i64 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = and i32 %45, 16777216
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %50

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %40, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %49) #9
  br label %50

50:                                               ; preds = %33, %43, %48
  %51 = getelementptr inbounds %"class.blink::AttributeChange", %"class.blink::AttributeChange"* %35, i64 0, i32 2
  %52 = getelementptr inbounds %"class.blink::AttributeChange", %"class.blink::AttributeChange"* %34, i64 0, i32 2
  %53 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %52, i64 0, i32 0, i32 0
  %54 = bitcast %"class.WTF::String"* %52 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.WTF::String"* %51 to i64*
  store i64 %55, i64* %56, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %53, align 8
  %57 = getelementptr inbounds %"class.blink::AttributeChange", %"class.blink::AttributeChange"* %34, i64 0, i32 1
  tail call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %57) #9
  %58 = getelementptr inbounds %"class.blink::AttributeChange", %"class.blink::AttributeChange"* %35, i64 1
  %59 = getelementptr inbounds %"class.blink::AttributeChange", %"class.blink::AttributeChange"* %34, i64 1
  %60 = icmp eq %"class.blink::AttributeChange"* %59, %26
  br i1 %60, label %61, label %33

61:                                               ; preds = %50
  %62 = bitcast %"class.WTF::Vector.2944"* %0 to i8**
  %63 = load i8*, i8** %62, align 8
  %64 = load i32, i32* %23, align 4
  %65 = zext i32 %64 to i64
  %66 = mul nuw nsw i64 %65, 24
  br label %67

67:                                               ; preds = %28, %61
  %68 = phi i8** [ %30, %28 ], [ %62, %61 ]
  %69 = phi i64 [ 0, %28 ], [ %66, %61 ]
  %70 = phi i8* [ %29, %28 ], [ %63, %61 ]
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %70, i64 %69) #9
  %71 = load i8*, i8** %68, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %71) #9
  %72 = bitcast %"class.WTF::Vector.2944"* %0 to i64*
  store atomic i64 %20, i64* %72 monotonic, align 8
  %73 = trunc i64 %18 to i32
  %74 = getelementptr inbounds %"class.WTF::Vector.2944", %"class.WTF::Vector.2944"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %73, i32* %74, align 8
  %75 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %80, label %77

77:                                               ; preds = %67
  %78 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %19, i64 0, i32 0
  %79 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %78) #9
  br label %80

80:                                               ; preds = %77, %67, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_15AttributeChangeEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 5592405
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 5592405) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.12, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.13, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = mul i64 %0, 24
  ret i64 %20
}

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_15AttributeChangeEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.15, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = mul i64 %0, 24
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_15AttributeChangeEN3WTF12VectorTraitsIS1_EEE14AllocateObjectIS5_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_15AttributeChangeEN3WTF12VectorTraitsIS1_EEE14AllocateObjectIS5_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_15AttributeChangeEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_15AttributeChangeEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_15AttributeChangeEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([140 x i8], [140 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_15AttributeChangeENS_12VectorTraitsIS3_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #6 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #9
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #9
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.16, i64 0, i64 0), i8* %21, i8* %22) #9
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.17, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #9
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #9
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #9
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #9
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_15AttributeChangeEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_15AttributeChangeEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv, i64 %23) #9
  br i1 %28, label %68, label %29

29:                                               ; preds = %2, %22
  %30 = bitcast i8* %1 to %"class.blink::AttributeChange"*
  %31 = getelementptr inbounds i8, i8* %1, i64 -2
  %32 = bitcast i8* %31 to i16*
  %33 = load i16, i16* %32, align 2
  %34 = lshr i16 %33, 2
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %36, label %44, !prof !2

36:                                               ; preds = %29
  %37 = getelementptr inbounds i8, i8* %1, i64 -8
  %38 = ptrtoint i8* %37 to i64
  %39 = and i64 %38, -131072
  %40 = inttoptr i64 %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 4144
  %42 = bitcast i8* %41 to i64*
  %43 = load i64, i64* %42, align 16
  br label %47

44:                                               ; preds = %29
  %45 = zext i16 %34 to i64
  %46 = shl nuw nsw i64 %45, 3
  br label %47

47:                                               ; preds = %44, %36
  %48 = phi i64 [ %43, %36 ], [ %46, %44 ]
  %49 = add i64 %48, -8
  %50 = udiv i64 %49, 24
  %51 = icmp ugt i64 %49, 23
  br i1 %51, label %52, label %68

52:                                               ; preds = %47
  %53 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %54

54:                                               ; preds = %65, %52
  %55 = phi i64 [ 0, %52 ], [ %66, %65 ]
  %56 = getelementptr inbounds %"class.blink::AttributeChange", %"class.blink::AttributeChange"* %30, i64 %55
  %57 = bitcast %"class.blink::AttributeChange"* %56 to i64*
  %58 = load atomic i64, i64* %57 monotonic, align 8
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %65, label %60

60:                                               ; preds = %54
  %61 = inttoptr i64 %58 to i8*
  %62 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %53, align 8
  %63 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %62, i64 5
  %64 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %63, align 8
  tail call void %64(%"class.blink::Visitor"* %0, i8* nonnull %61, i8* nonnull %61, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv) #9
  br label %65

65:                                               ; preds = %60, %54
  %66 = add nuw nsw i64 %55, 1
  %67 = icmp ult i64 %66, %50
  br i1 %67, label %54, label %68

68:                                               ; preds = %65, %47, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17HeapVectorBackingINS_15AttributeChangeEN3WTF12VectorTraitsIS3_EEEEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -2
  %3 = bitcast i8* %2 to i16*
  %4 = load i16, i16* %3, align 2
  %5 = lshr i16 %4, 2
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %7, label %15, !prof !2

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i64 -8
  %9 = ptrtoint i8* %8 to i64
  %10 = and i64 %9, -131072
  %11 = inttoptr i64 %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 4144
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 16
  br label %18

15:                                               ; preds = %1
  %16 = zext i16 %5 to i64
  %17 = shl nuw nsw i64 %16, 3
  br label %18

18:                                               ; preds = %15, %7
  %19 = phi i64 [ %14, %7 ], [ %17, %15 ]
  %20 = add i64 %19, -8
  %21 = udiv i64 %20, 24
  %22 = bitcast i8* %0 to %"class.blink::AttributeChange"*
  %23 = icmp ugt i64 %20, 23
  br i1 %23, label %24, label %48

24:                                               ; preds = %18, %43
  %25 = phi i64 [ %46, %43 ], [ 0, %18 ]
  %26 = phi i32 [ %45, %43 ], [ 0, %18 ]
  %27 = getelementptr inbounds %"class.blink::AttributeChange", %"class.blink::AttributeChange"* %22, i64 %25, i32 2, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #9
  br label %43

43:                                               ; preds = %42, %39, %24
  %44 = getelementptr inbounds %"class.blink::AttributeChange", %"class.blink::AttributeChange"* %22, i64 %25, i32 1
  tail call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %44) #9
  %45 = add i32 %26, 1
  %46 = zext i32 %45 to i64
  %47 = icmp ugt i64 %21, %46
  br i1 %47, label %24, label %48

48:                                               ; preds = %43, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_15AttributeChangeEN3WTF12VectorTraitsIS2_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF11VectorMoverILb0EN5blink15AttributeChangeENS1_13HeapAllocatorEE4MoveEPS2_S5_S5_b(%"class.blink::AttributeChange"*, %"class.blink::AttributeChange"*, %"class.blink::AttributeChange"*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = icmp eq %"class.blink::AttributeChange"* %0, %1
  br i1 %5, label %88, label %6

6:                                                ; preds = %4, %83
  %7 = phi %"class.blink::AttributeChange"* [ %86, %83 ], [ %0, %4 ]
  %8 = phi %"class.blink::AttributeChange"* [ %85, %83 ], [ %2, %4 ]
  %9 = bitcast %"class.blink::AttributeChange"* %7 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.blink::AttributeChange"* %8 to i64*
  store i64 %10, i64* %11, align 8
  %12 = getelementptr inbounds %"class.blink::AttributeChange", %"class.blink::AttributeChange"* %7, i64 0, i32 1, i32 0, i32 0
  %13 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::AttributeChange", %"class.blink::AttributeChange"* %8, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %13, %"class.blink::QualifiedName::QualifiedNameImpl"** %14, align 8
  %15 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %13, null
  br i1 %15, label %23, label %16

16:                                               ; preds = %6
  %17 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %13, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = and i32 %18, 16777216
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %13, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %22) #9
  br label %23

23:                                               ; preds = %6, %16, %21
  %24 = getelementptr inbounds %"class.blink::AttributeChange", %"class.blink::AttributeChange"* %8, i64 0, i32 2
  %25 = getelementptr inbounds %"class.blink::AttributeChange", %"class.blink::AttributeChange"* %7, i64 0, i32 2
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %25, i64 0, i32 0, i32 0
  %27 = bitcast %"class.WTF::String"* %25 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.WTF::String"* %24 to i64*
  store i64 %28, i64* %29, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %26, align 8
  br i1 %3, label %30, label %66

30:                                               ; preds = %23
  %31 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %66, label %33

33:                                               ; preds = %30
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #9
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #9
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 9
  %45 = load i8, i8* %44, align 1, !range !3
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %66, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %49, 1
  store i64 %50, i64* %48, align 8
  %51 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %52 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %51, align 8
  %53 = load atomic i64, i64* %11 monotonic, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %63, label %55

55:                                               ; preds = %47
  %56 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %52, i64 0, i32 0, i32 0
  %57 = inttoptr i64 %53 to i8*
  %58 = bitcast %"class.blink::MarkingVisitor"* %52 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %59 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %59, i64 5
  %61 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %60, align 8
  tail call void %61(%"class.blink::Visitor"* %56, i8* nonnull %57, i8* %57, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv) #9
  %62 = load i64, i64* %48, align 8
  br label %63

63:                                               ; preds = %55, %47
  %64 = phi i64 [ %50, %47 ], [ %62, %55 ]
  %65 = add i64 %64, -1
  store i64 %65, i64* %48, align 8
  br label %66

66:                                               ; preds = %63, %40, %30, %23
  %67 = getelementptr inbounds %"class.blink::AttributeChange", %"class.blink::AttributeChange"* %7, i64 0, i32 2, i32 0, i32 0
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %69, label %83, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  br i1 %74, label %77, label %79

77:                                               ; preds = %70
  %78 = add i32 %76, -1
  store i32 %78, i32* %75, align 4
  br label %79

79:                                               ; preds = %77, %70
  %80 = phi i32 [ %78, %77 ], [ %76, %70 ]
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %79
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %68) #9
  br label %83

83:                                               ; preds = %66, %79, %82
  %84 = getelementptr inbounds %"class.blink::AttributeChange", %"class.blink::AttributeChange"* %7, i64 0, i32 1
  tail call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %84) #9
  %85 = getelementptr inbounds %"class.blink::AttributeChange", %"class.blink::AttributeChange"* %8, i64 1
  %86 = getelementptr inbounds %"class.blink::AttributeChange", %"class.blink::AttributeChange"* %7, i64 1
  %87 = icmp eq %"class.blink::AttributeChange"* %86, %1
  br i1 %87, label %88, label %6

88:                                               ; preds = %83, %4
  ret void
}

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"*) unnamed_addr #3

declare %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64), %"class.blink::Node"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"*, i16*, i32) local_unnamed_addr #2

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

declare %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare %"class.blink::Node"* @_ZN5blink19EnclosingNodeOfTypeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEEPFbPKNS_4NodeEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate"* dereferenceable(16), i1 (%"class.blink::Node"*)*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN5blinkL18IsHTMLBlockElementEPKNS_4NodeE(%"class.blink::Node"*) #0 {
  %2 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 48
  %5 = icmp ne i32 %4, 0
  %6 = icmp eq %"class.blink::Node"* %0, null
  %7 = or i1 %6, %5
  br i1 %7, label %27, label %8

8:                                                ; preds = %1
  %9 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTdTagE, align 8
  %10 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1, i32 2
  %13 = bitcast %"class.blink::Member"* %12 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %14 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %14, i64 0, i32 3, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %11, i64 0, i32 3, i32 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %16, %18
  br i1 %19, label %29, label %20

20:                                               ; preds = %8
  %21 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kThTagE, align 8
  %22 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %21, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %23, i64 0, i32 3, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %16, %25
  br i1 %26, label %29, label %27

27:                                               ; preds = %1, %20
  %28 = tail call zeroext i1 @_ZN5blink30IsNonTableCellHTMLBlockElementEPKNS_4NodeE(%"class.blink::Node"* %0) #9
  br label %29

29:                                               ; preds = %8, %27, %20
  %30 = phi i1 [ true, %20 ], [ %28, %27 ], [ true, %8 ]
  ret i1 %30
}

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE27FirstPositionInOrBeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink30IsNonTableCellHTMLBlockElementEPKNS_4NodeE(%"class.blink::Node"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink4Node14IsDescendantOfEPKS0_(%"class.blink::Node"*, %"class.blink::Node"*) local_unnamed_addr #2

declare %"class.blink::Node"* @_ZN5blink13ContainerNode11RemoveChildEPNS_4NodeERNS_14ExceptionStateE(%"class.blink::ContainerNode"*, %"class.blink::Node"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"*) unnamed_addr #2

declare zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #2

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink6MemberINS1_10ShadowRootEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.2790"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i8, align 1
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %17, label %6

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %10, %6 ], [ %1, %2 ]
  %8 = phi i32 [ %9, %6 ], [ %1, %2 ]
  %9 = or i32 %8, %7
  %10 = lshr i32 %7, 1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %6

12:                                               ; preds = %6
  %13 = shl i32 %9, 1
  %14 = add i32 %13, 2
  %15 = icmp ugt i32 %14, 8
  %16 = select i1 %15, i32 %14, i32 8
  br label %17

17:                                               ; preds = %12, %2
  %18 = phi i32 [ 8, %2 ], [ %16, %12 ]
  %19 = getelementptr inbounds %"class.WTF::HashTable.2790", %"class.WTF::HashTable.2790"* %0, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp ugt i32 %18, %20
  br i1 %21, label %22, label %40

22:                                               ; preds = %17
  %23 = icmp slt i32 %18, 0
  br i1 %23, label %24, label %28

24:                                               ; preds = %22
  %25 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.19, i64 0, i64 0), i32 1094, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.20, i64 0, i64 0)) #9
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #9
  %27 = load i32, i32* %19, align 8
  br label %28

28:                                               ; preds = %22, %24
  %29 = phi i32 [ %20, %22 ], [ %27, %24 ]
  %30 = icmp ult i32 %29, %18
  br i1 %30, label %31, label %35

31:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #9
  store i8 -86, i8* %3, align 1
  %32 = call %"class.blink::Member.2792"* @_ZN3WTF9HashTableIN5blink6MemberINS1_10ShadowRootEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb(%"class.WTF::HashTable.2790"* %0, i32 %18, %"class.blink::Member.2792"* null, i8* nonnull dereferenceable(1) %3) #9
  %33 = load i8, i8* %3, align 1, !range !3
  %34 = icmp eq i8 %33, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #9
  br i1 %34, label %35, label %40

35:                                               ; preds = %31, %28
  %36 = zext i32 %18 to i64
  %37 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10ShadowRootEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %36) #9
  %38 = bitcast %"class.blink::HeapHashTableBacking"* %37 to %"class.blink::Member.2792"*
  %39 = call %"class.blink::Member.2792"* @_ZN3WTF9HashTableIN5blink6MemberINS1_10ShadowRootEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.2790"* %0, %"class.blink::Member.2792"* %38, i32 %18, %"class.blink::Member.2792"* null) #9
  br label %40

40:                                               ; preds = %35, %31, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.2792"* @_ZN3WTF9HashTableIN5blink6MemberINS1_10ShadowRootEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb(%"class.WTF::HashTable.2790"*, i32, %"class.blink::Member.2792"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #9
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #9
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !3
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.19, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.11, i64 0, i64 0)) #9
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.2790", %"class.WTF::HashTable.2790"* %0, i64 0, i32 0
  %32 = load %"class.blink::Member.2792"*, %"class.blink::Member.2792"** %31, align 8
  %33 = icmp eq %"class.blink::Member.2792"* %32, null
  br i1 %33, label %103, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 3
  %37 = bitcast %"class.blink::Member.2792"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #9
  br i1 %38, label %39, label %103

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.2790", %"class.WTF::HashTable.2790"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"class.blink::Member.2792"*, %"class.blink::Member.2792"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10ShadowRootEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #9
  %45 = bitcast %"class.blink::HeapHashTableBacking"* %44 to %"class.blink::Member.2792"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %69, label %47

47:                                               ; preds = %39
  %48 = and i64 %43, 1
  %49 = icmp eq i32 %41, 1
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  %51 = sub nsw i64 %43, %48
  br label %80

52:                                               ; preds = %106, %47
  %53 = phi %"class.blink::Member.2792"* [ undef, %47 ], [ %100, %106 ]
  %54 = phi i64 [ 0, %47 ], [ %109, %106 ]
  %55 = phi %"class.blink::Member.2792"* [ null, %47 ], [ %100, %106 ]
  %56 = icmp eq i64 %48, 0
  br i1 %56, label %69, label %57

57:                                               ; preds = %52
  %58 = load %"class.blink::Member.2792"*, %"class.blink::Member.2792"** %31, align 8
  %59 = getelementptr inbounds %"class.blink::Member.2792", %"class.blink::Member.2792"* %58, i64 %54
  %60 = icmp eq %"class.blink::Member.2792"* %59, %2
  %61 = getelementptr inbounds %"class.blink::Member.2792", %"class.blink::Member.2792"* %45, i64 %54
  %62 = select i1 %60, %"class.blink::Member.2792"* %61, %"class.blink::Member.2792"* %55
  %63 = bitcast %"class.blink::Member.2792"* %59 to i64*
  %64 = load i64, i64* %63, align 8
  switch i64 %64, label %65 [
    i64 -1, label %66
    i64 0, label %66
  ]

65:                                               ; preds = %57
  br label %66

66:                                               ; preds = %65, %57, %57
  %67 = phi i64 [ %64, %65 ], [ 0, %57 ], [ 0, %57 ]
  %68 = bitcast %"class.blink::Member.2792"* %61 to i64*
  store i64 %67, i64* %68, align 8
  br label %69

69:                                               ; preds = %66, %52, %39
  %70 = phi %"class.blink::Member.2792"* [ null, %39 ], [ %53, %52 ], [ %62, %66 ]
  %71 = bitcast %"class.WTF::HashTable.2790"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %44, %"class.blink::HeapHashTableBacking"** %71, align 8
  %72 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %77, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %44, i64 0, i32 0
  %76 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %75) #9
  br label %77

77:                                               ; preds = %69, %74
  %78 = bitcast %"class.blink::Member.2792"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 %36, i1 false)
  %79 = call %"class.blink::Member.2792"* @_ZN3WTF9HashTableIN5blink6MemberINS1_10ShadowRootEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.2790"* %0, %"class.blink::Member.2792"* %42, i32 %1, %"class.blink::Member.2792"* %70)
  br label %103

80:                                               ; preds = %106, %50
  %81 = phi i64 [ 0, %50 ], [ %109, %106 ]
  %82 = phi %"class.blink::Member.2792"* [ null, %50 ], [ %100, %106 ]
  %83 = phi i64 [ %51, %50 ], [ %110, %106 ]
  %84 = load %"class.blink::Member.2792"*, %"class.blink::Member.2792"** %31, align 8
  %85 = getelementptr inbounds %"class.blink::Member.2792", %"class.blink::Member.2792"* %84, i64 %81
  %86 = icmp eq %"class.blink::Member.2792"* %85, %2
  %87 = getelementptr inbounds %"class.blink::Member.2792", %"class.blink::Member.2792"* %45, i64 %81
  %88 = select i1 %86, %"class.blink::Member.2792"* %87, %"class.blink::Member.2792"* %82
  %89 = bitcast %"class.blink::Member.2792"* %85 to i64*
  %90 = load i64, i64* %89, align 8
  switch i64 %90, label %91 [
    i64 -1, label %92
    i64 0, label %92
  ]

91:                                               ; preds = %80
  br label %92

92:                                               ; preds = %80, %80, %91
  %93 = phi i64 [ %90, %91 ], [ 0, %80 ], [ 0, %80 ]
  %94 = bitcast %"class.blink::Member.2792"* %87 to i64*
  store i64 %93, i64* %94, align 8
  %95 = or i64 %81, 1
  %96 = load %"class.blink::Member.2792"*, %"class.blink::Member.2792"** %31, align 8
  %97 = getelementptr inbounds %"class.blink::Member.2792", %"class.blink::Member.2792"* %96, i64 %95
  %98 = icmp eq %"class.blink::Member.2792"* %97, %2
  %99 = getelementptr inbounds %"class.blink::Member.2792", %"class.blink::Member.2792"* %45, i64 %95
  %100 = select i1 %98, %"class.blink::Member.2792"* %99, %"class.blink::Member.2792"* %88
  %101 = bitcast %"class.blink::Member.2792"* %97 to i64*
  %102 = load i64, i64* %101, align 8
  switch i64 %102, label %105 [
    i64 -1, label %106
    i64 0, label %106
  ]

103:                                              ; preds = %34, %30, %77
  %104 = phi %"class.blink::Member.2792"* [ %79, %77 ], [ null, %30 ], [ null, %34 ]
  ret %"class.blink::Member.2792"* %104

105:                                              ; preds = %92
  br label %106

106:                                              ; preds = %105, %92, %92
  %107 = phi i64 [ %102, %105 ], [ 0, %92 ], [ 0, %92 ]
  %108 = bitcast %"class.blink::Member.2792"* %99 to i64*
  store i64 %107, i64* %108, align 8
  %109 = add nuw nsw i64 %81, 2
  %110 = add i64 %83, -2
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %52, label %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.2792"* @_ZN3WTF9HashTableIN5blink6MemberINS1_10ShadowRootEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.2790"*, %"class.blink::Member.2792"*, i32, %"class.blink::Member.2792"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.blink::Member.2792"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.2790", %"class.WTF::HashTable.2790"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.WTF::HashTable.2790", %"class.WTF::HashTable.2790"* %0, i64 0, i32 0
  %11 = add i32 %2, -1
  %12 = zext i32 %11 to i64
  %13 = load %"class.blink::Member.2792"*, %"class.blink::Member.2792"** %10, align 8
  br label %37

14:                                               ; preds = %125, %4
  %15 = phi %"class.blink::Member.2792"* [ null, %4 ], [ %128, %125 ]
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = bitcast %"class.blink::Member.2792"* %1 to i8*
  tail call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %19) #9
  br label %20

20:                                               ; preds = %14, %18
  %21 = getelementptr inbounds %"class.WTF::HashTable.2790", %"class.WTF::HashTable.2790"* %0, i64 0, i32 0
  %22 = load %"class.blink::Member.2792"*, %"class.blink::Member.2792"** %21, align 8
  %23 = bitcast %"class.WTF::HashTable.2790"* %0 to i64*
  store atomic i64 %5, i64* %23 monotonic, align 8
  %24 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %20
  %27 = bitcast %"class.blink::Member.2792"* %1 to i8*
  %28 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %27) #9
  br label %29

29:                                               ; preds = %20, %26
  store i32 %2, i32* %6, align 8
  %30 = icmp eq %"class.blink::Member.2792"* %22, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = bitcast %"class.blink::Member.2792"* %22 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %32) #9
  br label %33

33:                                               ; preds = %29, %31
  %34 = getelementptr inbounds %"class.WTF::HashTable.2790", %"class.WTF::HashTable.2790"* %0, i64 0, i32 3
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, -2147483648
  store i32 %36, i32* %34, align 8
  ret %"class.blink::Member.2792"* %15

37:                                               ; preds = %9, %125
  %38 = phi i32 [ %7, %9 ], [ %126, %125 ]
  %39 = phi %"class.blink::Member.2792"* [ %13, %9 ], [ %127, %125 ]
  %40 = phi %"class.blink::Member.2792"* [ null, %9 ], [ %128, %125 ]
  %41 = phi i32 [ 0, %9 ], [ %129, %125 ]
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"class.blink::Member.2792", %"class.blink::Member.2792"* %39, i64 %42
  %44 = bitcast %"class.blink::Member.2792"* %43 to i64*
  %45 = load i64, i64* %44, align 8
  switch i64 %45, label %46 [
    i64 -1, label %125
    i64 0, label %125
  ]

46:                                               ; preds = %37
  %47 = shl i64 %45, 32
  %48 = xor i64 %47, -1
  %49 = add i64 %45, %48
  %50 = lshr i64 %49, 22
  %51 = xor i64 %50, %49
  %52 = shl i64 %51, 13
  %53 = xor i64 %52, -1
  %54 = add i64 %51, %53
  %55 = lshr i64 %54, 8
  %56 = xor i64 %55, %54
  %57 = mul i64 %56, 9
  %58 = lshr i64 %57, 15
  %59 = xor i64 %58, %57
  %60 = shl i64 %59, 27
  %61 = xor i64 %60, -1
  %62 = add i64 %59, %61
  %63 = lshr i64 %62, 31
  %64 = xor i64 %63, %62
  %65 = trunc i64 %64 to i32
  %66 = and i32 %11, %65
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"class.blink::Member.2792", %"class.blink::Member.2792"* %1, i64 %67
  %69 = ptrtoint %"class.blink::Member.2792"* %68 to i64
  %70 = getelementptr inbounds %"class.blink::Member.2792", %"class.blink::Member.2792"* %68, i64 0, i32 0, i32 0
  %71 = load %"class.blink::ShadowRoot"*, %"class.blink::ShadowRoot"** %70, align 8
  %72 = icmp eq %"class.blink::ShadowRoot"* %71, null
  %73 = inttoptr i64 %45 to %"class.blink::ShadowRoot"*
  br i1 %72, label %91, label %74

74:                                               ; preds = %46
  %75 = xor i32 %65, -1
  %76 = lshr i32 %65, 23
  %77 = add i32 %76, %75
  %78 = shl i32 %77, 12
  %79 = xor i32 %78, %77
  %80 = lshr i32 %79, 7
  %81 = xor i32 %80, %79
  %82 = shl i32 %81, 2
  %83 = xor i32 %82, %81
  %84 = lshr i32 %83, 20
  %85 = xor i32 %84, %83
  %86 = or i32 %85, 1
  %87 = zext i32 %86 to i64
  br label %97

88:                                               ; preds = %104
  %89 = ptrtoint %"class.blink::Member.2792"* %111 to i64
  %90 = inttoptr i64 %106 to %"class.blink::Member.2792"*
  br label %91

91:                                               ; preds = %88, %46
  %92 = phi i64 [ %89, %88 ], [ %69, %46 ]
  %93 = phi %"class.blink::Member.2792"* [ %90, %88 ], [ null, %46 ]
  %94 = icmp eq %"class.blink::Member.2792"* %93, null
  %95 = ptrtoint %"class.blink::Member.2792"* %93 to i64
  %96 = select i1 %94, i64 %92, i64 %95
  br label %116

97:                                               ; preds = %104, %74
  %98 = phi i64 [ 0, %74 ], [ %106, %104 ]
  %99 = phi %"class.blink::ShadowRoot"* [ %71, %74 ], [ %114, %104 ]
  %100 = phi i64 [ %69, %74 ], [ %112, %104 ]
  %101 = phi i64 [ %67, %74 ], [ %110, %104 ]
  %102 = phi i64 [ 0, %74 ], [ %108, %104 ]
  %103 = icmp eq %"class.blink::ShadowRoot"* %99, %73
  br i1 %103, label %116, label %104

104:                                              ; preds = %97
  %105 = icmp eq %"class.blink::ShadowRoot"* %99, inttoptr (i64 -1 to %"class.blink::ShadowRoot"*)
  %106 = select i1 %105, i64 %100, i64 %98
  %107 = icmp eq i64 %102, 0
  %108 = select i1 %107, i64 %87, i64 %102
  %109 = add i64 %108, %101
  %110 = and i64 %109, %12
  %111 = getelementptr inbounds %"class.blink::Member.2792", %"class.blink::Member.2792"* %1, i64 %110
  %112 = ptrtoint %"class.blink::Member.2792"* %111 to i64
  %113 = getelementptr inbounds %"class.blink::Member.2792", %"class.blink::Member.2792"* %111, i64 0, i32 0, i32 0
  %114 = load %"class.blink::ShadowRoot"*, %"class.blink::ShadowRoot"** %113, align 8
  %115 = icmp eq %"class.blink::ShadowRoot"* %114, null
  br i1 %115, label %88, label %97

116:                                              ; preds = %97, %91
  %117 = phi i64 [ %96, %91 ], [ %100, %97 ]
  %118 = inttoptr i64 %117 to %"class.blink::Member.2792"*
  %119 = inttoptr i64 %117 to i64*
  store i64 %45, i64* %119, align 8
  %120 = load %"class.blink::Member.2792"*, %"class.blink::Member.2792"** %10, align 8
  %121 = getelementptr inbounds %"class.blink::Member.2792", %"class.blink::Member.2792"* %120, i64 %42
  %122 = icmp eq %"class.blink::Member.2792"* %121, %3
  %123 = select i1 %122, %"class.blink::Member.2792"* %118, %"class.blink::Member.2792"* %40
  %124 = load i32, i32* %6, align 8
  br label %125

125:                                              ; preds = %37, %37, %116
  %126 = phi i32 [ %38, %37 ], [ %124, %116 ], [ %38, %37 ]
  %127 = phi %"class.blink::Member.2792"* [ %39, %37 ], [ %120, %116 ], [ %39, %37 ]
  %128 = phi %"class.blink::Member.2792"* [ %40, %37 ], [ %123, %116 ], [ %40, %37 ]
  %129 = add i32 %41, 1
  %130 = icmp eq i32 %129, %126
  br i1 %130, label %14, label %37
}

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10ShadowRootEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.21, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  %21 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %22 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10ShadowRootEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %26 = call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %25, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10ShadowRootEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10ShadowRootEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %27

27:                                               ; preds = %19, %24
  %28 = phi i32 [ %22, %19 ], [ %26, %24 ]
  %29 = call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %21, %"class.blink::ThreadState"* bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadState"*), i64 %20, i32 5, i32 %28, i8* getelementptr inbounds ([346 x i8], [346 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_10ShadowRootEEES6_NS_17IdentityExtractorENS_10MemberHashIS5_EENS_10HashTraitsIS6_EESB_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0)) #9
  %30 = bitcast i8* %29 to %"class.blink::HeapHashTableBacking"*
  %31 = getelementptr inbounds i8, i8* %29, i64 -4
  %32 = bitcast i8* %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = or i16 %33, 1
  store atomic i16 %34, i16* %32 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %30
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10ShadowRootEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.2792"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #9
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %56, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi i64 [ 0, %30 ], [ %54, %53 ]
  %34 = getelementptr inbounds %"class.blink::Member.2792", %"class.blink::Member.2792"* %3, i64 %33
  %35 = bitcast %"class.blink::Member.2792"* %34 to i64*
  br i1 %28, label %36, label %43

36:                                               ; preds = %32
  %37 = load atomic i64, i64* %35 monotonic, align 8
  switch i64 %37, label %38 [
    i64 -1, label %53
    i64 0, label %53
  ]

38:                                               ; preds = %36
  %39 = inttoptr i64 %37 to i8*
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %41 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, i64 5
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, align 8
  tail call void %42(%"class.blink::Visitor"* %0, i8* nonnull %39, i8* nonnull %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10ShadowRootEE5TraceEPNS_7VisitorEPKv) #9
  br label %53

43:                                               ; preds = %32
  %44 = load i64, i64* %35, align 8
  switch i64 %44, label %45 [
    i64 -1, label %53
    i64 0, label %53
  ]

45:                                               ; preds = %43
  %46 = load atomic i64, i64* %35 monotonic, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %45
  %49 = inttoptr i64 %46 to i8*
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %51 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %50, i64 5
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, align 8
  tail call void %52(%"class.blink::Visitor"* %0, i8* nonnull %49, i8* nonnull %49, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10ShadowRootEE5TraceEPNS_7VisitorEPKv) #9
  br label %53

53:                                               ; preds = %48, %45, %43, %43, %38, %36, %36
  %54 = add nuw nsw i64 %33, 1
  %55 = icmp eq i64 %54, %23
  br i1 %55, label %56, label %32

56:                                               ; preds = %53, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10ShadowRootEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_10ShadowRootEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ShadowRoot"*
  tail call void @_ZNK5blink10ShadowRoot5TraceEPNS_7VisitorE(%"class.blink::ShadowRoot"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

declare void @_ZNK5blink10ShadowRoot5TraceEPNS_7VisitorE(%"class.blink::ShadowRoot"*, %"class.blink::Visitor"*) unnamed_addr #2

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::Member.2792"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_10ShadowRootEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKS4_SG_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.2790"*, %"class.blink::Member.2792"* dereferenceable(8), %"class.blink::Member.2792"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.2790", %"class.WTF::HashTable.2790"* %0, i64 0, i32 0
  %5 = load %"class.blink::Member.2792"*, %"class.blink::Member.2792"** %4, align 8
  %6 = icmp eq %"class.blink::Member.2792"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::Member.2792"* @_ZN3WTF9HashTableIN5blink6MemberINS1_10ShadowRootEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.2790"* %0, %"class.blink::Member.2792"* null)
  %9 = load %"class.blink::Member.2792"*, %"class.blink::Member.2792"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::Member.2792"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.2790", %"class.WTF::HashTable.2790"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::Member.2792"* %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::Member.2792", %"class.blink::Member.2792"* %11, i64 %38
  %40 = getelementptr inbounds %"class.blink::Member.2792", %"class.blink::Member.2792"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.blink::ShadowRoot"*, %"class.blink::ShadowRoot"** %40, align 8
  %42 = icmp eq %"class.blink::ShadowRoot"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::ShadowRoot"*
  br i1 %42, label %86, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::ShadowRoot"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"class.blink::Member.2792"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"class.blink::Member.2792"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::ShadowRoot"* %59, %43
  br i1 %64, label %115, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::ShadowRoot"* %59, inttoptr (i64 -1 to %"class.blink::ShadowRoot"*)
  %67 = select i1 %66, %"class.blink::Member.2792"* %60, %"class.blink::Member.2792"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"class.blink::Member.2792", %"class.blink::Member.2792"* %11, i64 %71
  %73 = getelementptr inbounds %"class.blink::Member.2792", %"class.blink::Member.2792"* %72, i64 0, i32 0, i32 0
  %74 = load %"class.blink::ShadowRoot"*, %"class.blink::ShadowRoot"** %73, align 8
  %75 = icmp eq %"class.blink::ShadowRoot"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"class.blink::Member.2792"* %67, null
  br i1 %77, label %86, label %78

78:                                               ; preds = %76
  %79 = bitcast %"class.blink::Member.2792"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 8) #9
  %80 = getelementptr inbounds %"class.WTF::HashTable.2790", %"class.WTF::HashTable.2790"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  br label %86

86:                                               ; preds = %10, %76, %78
  %87 = phi %"class.blink::Member.2792"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %88 = bitcast %"class.blink::Member.2792"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"class.blink::Member.2792"* %87 to i64*
  store atomic i64 %89, i64* %90 monotonic, align 8
  %91 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %86
  %94 = inttoptr i64 %89 to i8*
  %95 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %94) #9
  br label %96

96:                                               ; preds = %86, %93
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %103, label %99

99:                                               ; preds = %96
  %100 = bitcast %"class.blink::Member.2792"* %87 to i8**
  %101 = load i8*, i8** %100, align 8
  %102 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %101) #9
  br label %103

103:                                              ; preds = %96, %99
  %104 = getelementptr inbounds %"class.WTF::HashTable.2790", %"class.WTF::HashTable.2790"* %0, i64 0, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = add i32 %105, 1
  store i32 %106, i32* %104, align 4
  %107 = getelementptr inbounds %"class.WTF::HashTable.2790", %"class.WTF::HashTable.2790"* %0, i64 0, i32 3
  %108 = load i32, i32* %107, align 8
  %109 = add i32 %108, %106
  %110 = shl i32 %109, 1
  %111 = load i32, i32* %12, align 8
  %112 = icmp ult i32 %110, %111
  br i1 %112, label %115, label %113

113:                                              ; preds = %103
  %114 = tail call %"class.blink::Member.2792"* @_ZN3WTF9HashTableIN5blink6MemberINS1_10ShadowRootEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.2790"* %0, %"class.blink::Member.2792"* %87)
  br label %115

115:                                              ; preds = %58, %103, %113
  %116 = phi i8 [ 1, %103 ], [ 1, %113 ], [ 0, %58 ]
  %117 = phi %"class.blink::Member.2792"* [ %87, %103 ], [ %114, %113 ], [ %60, %58 ]
  %118 = insertvalue { %"class.blink::Member.2792"*, i8 } undef, %"class.blink::Member.2792"* %117, 0
  %119 = insertvalue { %"class.blink::Member.2792"*, i8 } %118, i8 %116, 1
  ret { %"class.blink::Member.2792"*, i8 } %119
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.2792"* @_ZN3WTF9HashTableIN5blink6MemberINS1_10ShadowRootEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.2790"*, %"class.blink::Member.2792"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.2790", %"class.WTF::HashTable.2790"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.2790", %"class.WTF::HashTable.2790"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #9
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.22, i64 0, i64 0), i8* %23, i8* %24) #9
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.19, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #9
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #9
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #9
  store i8 -86, i8* %4, align 1
  %36 = call %"class.blink::Member.2792"* @_ZN3WTF9HashTableIN5blink6MemberINS1_10ShadowRootEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb(%"class.WTF::HashTable.2790"* %0, i32 %35, %"class.blink::Member.2792"* %1, i8* nonnull dereferenceable(1) %4) #9
  %37 = load i8, i8* %4, align 1, !range !3
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #9
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10ShadowRootEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #9
  %43 = bitcast %"class.blink::HeapHashTableBacking"* %42 to %"class.blink::Member.2792"*
  %44 = call %"class.blink::Member.2792"* @_ZN3WTF9HashTableIN5blink6MemberINS1_10ShadowRootEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.2790"* %0, %"class.blink::Member.2792"* %43, i32 %40, %"class.blink::Member.2792"* %1) #9
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"class.blink::Member.2792"* [ %44, %39 ], [ %36, %34 ]
  ret %"class.blink::Member.2792"* %46
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl7ReplaceERKNS_10StringViewES3_(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl7ReplaceEDsDs(%"class.WTF::StringImpl"*, i16 zeroext, i16 zeroext) local_unnamed_addr #2

declare zeroext i1 @_ZNK3WTF10StringImpl8EndsWithEDs(%"class.WTF::StringImpl"*, i16 zeroext) local_unnamed_addr #2

declare void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"*, i8*, i64) unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #8

declare %"class.blink::HTMLSpanElement"* @_ZN5blink20CreateTabSpanElementERNS_8DocumentERKN3WTF6StringE(%"class.blink::Document"* dereferenceable(2848), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink30StringWithRebalancedWhitespaceERKN3WTF6StringEbb(%"class.WTF::String"* dereferenceable(8), i1 zeroext, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"*, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i16, align 2
  %4 = alloca i8, align 1
  store i8 %1, i8* %4, align 1
  %5 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 4, !range !3
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %35

8:                                                ; preds = %2
  %9 = zext i8 %1 to i16
  %10 = bitcast i16* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %10)
  store i16 %9, i16* %3, align 2
  %11 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %12 = load i8, i8* %11, align 1, !range !3
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %8
  tail call void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"* %0, i32 1) #9
  br label %15

15:                                               ; preds = %14, %8
  %16 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %29, label %22, !prof !2

22:                                               ; preds = %15
  %23 = bitcast %union.anon.2746* %16 to i16**
  %24 = load i16*, i16** %23, align 8
  %25 = zext i32 %18 to i64
  %26 = getelementptr inbounds i16, i16* %24, i64 %25
  store i16 %9, i16* %26, align 2
  %27 = load i32, i32* %17, align 4
  %28 = add i32 %27, 1
  store i32 %28, i32* %17, align 4
  br label %31

29:                                               ; preds = %15
  %30 = bitcast %union.anon.2746* %16 to %"class.WTF::Vector.2752"*
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.2752"* %30, i16* nonnull dereferenceable(2) %3) #9
  br label %31

31:                                               ; preds = %22, %29
  %32 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = add i32 %33, 1
  store i32 %34, i32* %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %10)
  br label %59

35:                                               ; preds = %2
  %36 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %37 = load i8, i8* %36, align 1, !range !3
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  tail call void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"* %0, i32 1) #9
  br label %40

40:                                               ; preds = %35, %39
  %41 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0
  %42 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %43, %45
  br i1 %46, label %54, label %47, !prof !2

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.WTF::Vector.2747", %"class.WTF::Vector.2747"* %41, i64 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = zext i32 %43 to i64
  %51 = getelementptr inbounds i8, i8* %49, i64 %50
  store i8 %1, i8* %51, align 1
  %52 = load i32, i32* %42, align 4
  %53 = add i32 %52, 1
  store i32 %53, i32* %42, align 4
  br label %55

54:                                               ; preds = %40
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.2747"* %41, i8* nonnull dereferenceable(1) %4) #9
  br label %55

55:                                               ; preds = %47, %54
  %56 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %57 = load i32, i32* %56, align 8
  %58 = add i32 %57, 1
  store i32 %58, i32* %56, align 8
  br label %59

59:                                               ; preds = %55, %31
  ret void
}

declare void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.2752"*, i16* dereferenceable(2)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2752", %"class.WTF::Vector.2752"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2752", %"class.WTF::Vector.2752"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i16*, i16** %6, align 8
  %8 = icmp ugt i16* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i16, i16* %7, i64 %10
  %12 = icmp ugt i16* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2752"* %0, i32 %5) #9
  %14 = load i16*, i16** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint i16* %1 to i64
  %17 = ptrtoint i16* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 1
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2752"* %0, i32 %5) #9
  %20 = load i16*, i16** %6, align 8
  %21 = getelementptr inbounds i16, i16* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi i16* [ %14, %13 ], [ %20, %15 ]
  %24 = phi i16* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i16, i16* %23, i64 %26
  %28 = load i16, i16* %24, align 2
  store i16 %28, i16* %27, align 2
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2752"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.2752", %"class.WTF::Vector.2752"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #9
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.23, i64 0, i64 0), i8* %15, i8* %16) #9
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.10, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #9
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !4

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.2752", %"class.WTF::Vector.2752"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = icmp eq i16* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 8
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %37) #9
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #9
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.2752"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 1
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.2752", %"class.WTF::Vector.2752"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.2752"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 8, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2752"* %0, i32 %27) #9
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2752"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 9
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.2752", %"class.WTF::Vector.2752"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = icmp eq i16* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.2752", %"class.WTF::Vector.2752"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to i16*
  %10 = icmp eq i16* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.2752"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.2752", %"class.WTF::Vector.2752"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.2752", %"class.WTF::Vector.2752"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.2752", %"class.WTF::Vector.2752"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.2752"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.2752", %"class.WTF::Vector.2752"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !2

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast i16* %6 to i8*
  %27 = shl nuw nsw i64 %25, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %8, i8* nonnull align 2 %26, i64 %27, i1 false) #9
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.2753"* %19, i16* nonnull %6) #9
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %30) #9
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #9
  %33 = lshr i64 %31, 1
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.2752", %"class.WTF::Vector.2752"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load i16*, i16** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne i16* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !4

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.2752", %"class.WTF::Vector.2752"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast i16* %36 to i8*
  %45 = shl nuw nsw i64 %43, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %32, i8* nonnull align 2 %44, i64 %45, i1 false) #9
  %46 = load i16*, i16** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi i16* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.2752", %"class.WTF::Vector.2752"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i16*
  %51 = icmp eq i16* %48, %50
  br i1 %51, label %54, label %52, !prof !4

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.2752", %"class.WTF::Vector.2752"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.2753"* %53, i16* %48) #9
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.2752"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.2752", %"class.WTF::Vector.2752"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 1072693248
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 1072693248) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.12, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.24, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 1
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.2753"*, i16*) local_unnamed_addr #7 comdat align 2 {
  %3 = bitcast i16* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #9
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.2747"*, i8* dereferenceable(1)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2747", %"class.WTF::Vector.2747"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2747", %"class.WTF::Vector.2747"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ugt i8* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i8, i8* %7, i64 %10
  %12 = icmp ugt i8* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2747"* %0, i32 %5) #9
  %14 = load i8*, i8** %6, align 8
  br label %21

15:                                               ; preds = %9
  %16 = ptrtoint i8* %1 to i64
  %17 = ptrtoint i8* %7 to i64
  %18 = sub i64 %16, %17
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2747"* %0, i32 %5) #9
  %19 = load i8*, i8** %6, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 %18
  br label %21

21:                                               ; preds = %13, %15
  %22 = phi i8* [ %14, %13 ], [ %19, %15 ]
  %23 = phi i8* [ %1, %13 ], [ %20, %15 ]
  %24 = load i32, i32* %3, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %22, i64 %25
  %27 = load i8, i8* %23, align 1
  store i8 %27, i8* %26, align 1
  %28 = load i32, i32* %3, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2747"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.2747", %"class.WTF::Vector.2747"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #9
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.23, i64 0, i64 0), i8* %15, i8* %16) #9
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.10, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #9
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %50, !prof !4

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.2747", %"class.WTF::Vector.2747"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %49

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 16
  br i1 %35, label %36, label %43

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %37) #9
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #9
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.2747"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = trunc i64 %38 to i32
  br label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.WTF::Vector.2747", %"class.WTF::Vector.2747"* %0, i64 0, i32 0, i32 1, i64 0
  %45 = ptrtoint i8* %44 to i64
  %46 = bitcast %"class.WTF::Vector.2747"* %0 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  br label %47

47:                                               ; preds = %43, %36
  %48 = phi i32 [ 16, %43 ], [ %42, %36 ]
  store i32 %48, i32* %6, align 8
  br label %50

49:                                               ; preds = %30
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2747"* %0, i32 %27) #9
  br label %50

50:                                               ; preds = %23, %47, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2747"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 17
  br i1 %3, label %4, label %26

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.2747", %"class.WTF::Vector.2747"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.2747", %"class.WTF::Vector.2747"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = icmp eq i8* %8, %6
  %10 = or i1 %7, %9
  br i1 %10, label %11, label %15

11:                                               ; preds = %4
  %12 = ptrtoint i8* %8 to i64
  %13 = bitcast %"class.WTF::Vector.2747"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector.2747", %"class.WTF::Vector.2747"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %14, align 8
  br label %51

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.WTF::Vector.2747", %"class.WTF::Vector.2747"* %0, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::Vector.2747", %"class.WTF::Vector.2747"* %0, i64 0, i32 0
  %19 = ptrtoint i8* %8 to i64
  %20 = bitcast %"class.WTF::Vector.2747"* %0 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.2747", %"class.WTF::Vector.2747"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %21, align 8
  %22 = icmp eq i8* %8, null
  br i1 %22, label %25, label %23, !prof !2

23:                                               ; preds = %15
  %24 = zext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %8, i8* nonnull align 1 %6, i64 %24, i1 false) #9
  br label %25

25:                                               ; preds = %23, %15
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.2748"* %18, i8* nonnull %6) #9
  br label %51

26:                                               ; preds = %2
  %27 = zext i32 %1 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %27) #9
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #9
  %30 = ptrtoint i8* %29 to i64
  %31 = getelementptr inbounds %"class.WTF::Vector.2747", %"class.WTF::Vector.2747"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp ne i8* %29, null
  %34 = icmp ne i8* %32, null
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %41, !prof !4

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.WTF::Vector.2747", %"class.WTF::Vector.2747"* %0, i64 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* nonnull align 1 %32, i64 %39, i1 false) #9
  %40 = load i8*, i8** %31, align 8
  br label %41

41:                                               ; preds = %26, %36
  %42 = phi i8* [ %32, %26 ], [ %40, %36 ]
  %43 = getelementptr inbounds %"class.WTF::Vector.2747", %"class.WTF::Vector.2747"* %0, i64 0, i32 0, i32 1, i64 0
  %44 = icmp eq i8* %43, %42
  br i1 %44, label %47, label %45, !prof !4

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::Vector.2747", %"class.WTF::Vector.2747"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.2748"* %46, i8* %42) #9
  br label %47

47:                                               ; preds = %41, %45
  %48 = bitcast %"class.WTF::Vector.2747"* %0 to i64*
  store atomic i64 %30, i64* %48 monotonic, align 8
  %49 = trunc i64 %28 to i32
  %50 = getelementptr inbounds %"class.WTF::Vector.2747", %"class.WTF::Vector.2747"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %49, i32* %50, align 8
  br label %51

51:                                               ; preds = %25, %47, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.12, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.24, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #9
  ret i64 %20
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.2748"*, i8*) local_unnamed_addr #7 comdat align 2 {
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1) #9
  ret void
}

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

declare %"class.blink::Node"* @_ZN5blink13ContainerNode11RemoveChildEPNS_4NodeE(%"class.blink::ContainerNode"*, %"class.blink::Node"*) local_unnamed_addr #2

declare %"class.blink::Node"* @_ZN5blink13ContainerNode12InsertBeforeEPNS_4NodeES2_(%"class.blink::ContainerNode"*, %"class.blink::Node"*, %"class.blink::Node"*) local_unnamed_addr #2

declare %"class.blink::ChildListMutationAccumulator"* @_ZN5blink28ChildListMutationAccumulator11GetOrCreateERNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare void @_ZN5blink28ChildListMutationAccumulator18LeaveMutationScopeEv(%"class.blink::ChildListMutationAccumulator"*) local_unnamed_addr #2

declare %"class.blink::RuntimeCallTimer"* @_ZN5blink16RuntimeCallTimer4StopEv(%"class.blink::RuntimeCallTimer"*) local_unnamed_addr #2

declare dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"*) local_unnamed_addr #2

declare %"class.blink::Page"* @_ZN5blink4Page17CreateNonOrdinaryERNS_12ChromeClientERNS_9scheduler22WebAgentGroupSchedulerE(%"class.blink::ChromeClient"* dereferenceable(40), %"class.blink::scheduler::WebAgentGroupScheduler"* dereferenceable(8)) local_unnamed_addr #2

declare dereferenceable(40) %"class.blink::ChromeClient"* @_ZN5blink34GetStaticEmptyChromeClientInstanceEv() local_unnamed_addr #2

declare void @_ZN5blink8Settings16SetScriptEnabledEb(%"class.blink::Settings"*, i1 zeroext) local_unnamed_addr #2

declare void @_ZN5blink8Settings17SetPluginsEnabledEb(%"class.blink::Settings"*, i1 zeroext) local_unnamed_addr #2

declare void @_ZN5blink8Settings32SetAcceleratedCompositingEnabledEb(%"class.blink::Settings"*, i1 zeroext) local_unnamed_addr #2

declare void @_ZN5blink8Settings28SetParserScriptingFlagPolicyENS_25ParserScriptingFlagPolicyE(%"class.blink::Settings"*, i32) local_unnamed_addr #2

declare void @_ZN5blink10LocalFrame7SetViewEPNS_14LocalFrameViewE(%"class.blink::LocalFrame"*, %"class.blink::LocalFrameView"*) local_unnamed_addr #2

declare void @_ZN5blink10LocalFrame4InitEPNS_5FrameENSt3__110unique_ptrINS_15PolicyContainerENS3_14default_deleteIS5_EEEE(%"class.blink::LocalFrame"*, %"class.blink::Frame"*, %"class.blink::PolicyContainer"*) local_unnamed_addr #2

declare %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"*) local_unnamed_addr #2

declare %"class.base::DefaultTickClock"* @_ZN4base16DefaultTickClock11GetInstanceEv() local_unnamed_addr #2

declare void @_ZN5blink10LocalFrameC1EPNS_16LocalFrameClientERNS_4PageEPNS_10FrameOwnerEPNS_5FrameES8_NS_15FrameInsertTypeERKN4util9TokenTypeINS_25LocalFrameTokenTypeMarkerEEEPNS_18WindowAgentFactoryEPNS_17InterfaceRegistryEPKN4base9TickClockE(%"class.blink::LocalFrame"*, %"class.blink::LocalFrameClient"*, %"class.blink::Page"* dereferenceable(1264), %"class.blink::FrameOwner"*, %"class.blink::Frame"*, %"class.blink::Frame"*, i32, %"class.util::TokenType"* dereferenceable(16), %"class.blink::WindowAgentFactory"*, %"class.blink::InterfaceRegistry"*, %"class.base::TickClock"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_5FrameEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_5FrameEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_5FrameEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_5FrameEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink5FrameEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_5FrameEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Frame"*
  %4 = bitcast i8* %1 to void (%"class.blink::Frame"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Frame"*, %"class.blink::Visitor"*)**, void (%"class.blink::Frame"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Frame"*, %"class.blink::Visitor"*)*, void (%"class.blink::Frame"*, %"class.blink::Visitor"*)** %5, i64 2
  %7 = load void (%"class.blink::Frame"*, %"class.blink::Visitor"*)*, void (%"class.blink::Frame"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Frame"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_5FrameEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::Frame"*
  %3 = bitcast i8* %0 to void (%"class.blink::Frame"*)***
  %4 = load void (%"class.blink::Frame"*)**, void (%"class.blink::Frame"*)*** %3, align 8
  %5 = load void (%"class.blink::Frame"*)*, void (%"class.blink::Frame"*)** %4, align 8
  tail call void %5(%"class.blink::Frame"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_5FrameEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_11FrameClientEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_11FrameClientEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_11FrameClientEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_11FrameClientEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11FrameClientEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11FrameClientEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::FrameClient"*
  %4 = bitcast i8* %1 to void (%"class.blink::FrameClient"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::FrameClient"*, %"class.blink::Visitor"*)**, void (%"class.blink::FrameClient"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::FrameClient"*, %"class.blink::Visitor"*)*, void (%"class.blink::FrameClient"*, %"class.blink::Visitor"*)** %5, i64 6
  %7 = load void (%"class.blink::FrameClient"*, %"class.blink::Visitor"*)*, void (%"class.blink::FrameClient"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::FrameClient"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_11FrameClientEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::FrameClient"*
  %3 = bitcast i8* %0 to void (%"class.blink::FrameClient"*)***
  %4 = load void (%"class.blink::FrameClient"*)**, void (%"class.blink::FrameClient"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::FrameClient"*)*, void (%"class.blink::FrameClient"*)** %4, i64 4
  %6 = load void (%"class.blink::FrameClient"*)*, void (%"class.blink::FrameClient"*)** %5, align 8
  tail call void %6(%"class.blink::FrameClient"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_11FrameClientEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0), i8 1 }
}

declare { i64, i64 } @_ZN4base16UnguessableToken6CreateEv() local_unnamed_addr #2

declare void @_ZN5blink14LocalFrameViewC1ERNS_10LocalFrameERKNS_7IntSizeE(%"class.blink::LocalFrameView"*, %"class.blink::LocalFrame"* dereferenceable(1176), %"class.blink::IntSize"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_14LocalFrameViewEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_14LocalFrameViewEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_14LocalFrameViewEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_14LocalFrameViewEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14LocalFrameViewEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14LocalFrameViewEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::LocalFrameView"*
  tail call void @_ZNK5blink14LocalFrameView5TraceEPNS_7VisitorE(%"class.blink::LocalFrameView"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_14LocalFrameViewEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::LocalFrameView"*
  tail call void @_ZN5blink14LocalFrameViewD1Ev(%"class.blink::LocalFrameView"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_14LocalFrameViewEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink14LocalFrameView5TraceEPNS_7VisitorE(%"class.blink::LocalFrameView"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink14LocalFrameViewD1Ev(%"class.blink::LocalFrameView"*) unnamed_addr #3

declare dereferenceable(8) %"class.WTF::String"* @_ZNK5blink15SVGURIReference10HrefStringEv(%"class.blink::SVGURIReference"*) local_unnamed_addr #2

declare void @_ZN5blink23SVGURLReferenceResolverC1ERKN3WTF6StringERKNS_8DocumentE(%"class.blink::SVGURLReferenceResolver"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #2

declare void @_ZNK5blink23SVGURLReferenceResolver11AbsoluteUrlEv(%"class.blink::KURL"* sret, %"class.blink::SVGURLReferenceResolver"*) local_unnamed_addr #2

declare void @_ZN5blink4Node6removeEv(%"class.blink::Node"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink4KURL10ProtocolIsEN3WTF10StringViewE(%"class.blink::KURL"*, %"class.WTF::StringView"* byval(%"class.WTF::StringView") align 8) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HTMLBodyElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_15HTMLBodyElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %3 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %7 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %6, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %3, %1 ], [ %7, %5 ]
  %10 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %2, i64 0, i32 19, i64 6
  %11 = bitcast %"class.blink::BaseArena"** %10 to %"class.blink::NormalPageArena"**
  %12 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 112
  br i1 %15, label %46, label %16, !prof !2

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 3
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 112
  store i8* %19, i8** %17, align 8
  %20 = add i64 %14, -112
  store i64 %20, i64* %13, align 8
  %21 = bitcast i8* %18 to i32*
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %18, i64 4
  %23 = bitcast i8* %22 to i16*
  %24 = trunc i32 %9 to i16
  %25 = shl i16 %24, 2
  store atomic i16 %25, i16* %23 monotonic, align 2
  %26 = getelementptr inbounds i8, i8* %18, i64 6
  %27 = bitcast i8* %26 to i16*
  store i16 56, i16* %27, align 2
  %28 = ptrtoint i8* %18 to i64
  %29 = and i64 %28, -131072
  %30 = inttoptr i64 %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 4400
  %32 = bitcast i8* %31 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %33 = bitcast i8* %31 to i64*
  %34 = load i64, i64* %33, align 16
  %35 = sub i64 %28, %34
  %36 = lshr i64 %35, 3
  %37 = lshr i64 %35, 6
  %38 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %32, i64 0, i32 0, i32 1, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = trunc i64 %36 to i32
  %41 = and i32 %40, 7
  %42 = shl i32 1, %41
  %43 = trunc i32 %42 to i8
  %44 = or i8 %39, %43
  store atomic i8 %44, i8* %38 release, align 1
  %45 = getelementptr inbounds i8, i8* %18, i64 8
  br label %49

46:                                               ; preds = %8
  %47 = zext i32 %9 to i64
  %48 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %12, i64 112, i64 %47) #9
  br label %49

49:                                               ; preds = %16, %46
  %50 = phi i8* [ %45, %16 ], [ %48, %46 ]
  %51 = bitcast i8* %50 to %"class.blink::HTMLBodyElement"*
  tail call void @_ZN5blink15HTMLBodyElementC1ERNS_8DocumentE(%"class.blink::HTMLBodyElement"* %51, %"class.blink::Document"* dereferenceable(2848) %0) #9
  %52 = getelementptr inbounds i8, i8* %50, i64 -4
  %53 = bitcast i8* %52 to i16*
  %54 = load atomic i16, i16* %53 monotonic, align 2
  %55 = or i16 %54, 1
  store atomic i16 %55, i16* %53 release, align 2
  ret %"class.blink::HTMLBodyElement"* %51
}

declare void @_ZN5blink15HTMLBodyElementC1ERNS_8DocumentE(%"class.blink::HTMLBodyElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #9
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Document"* @_ZN5blink25MakeGarbageCollectedTraitINS_8DocumentEE4CallIJRNS_12DocumentInitEEEEPS1_DpOT_(%"class.blink::DocumentInit"* dereferenceable(288)) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %3 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %7 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %6, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %3, %1 ], [ %7, %5 ]
  %10 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %2, i64 0, i32 19, i64 6
  %11 = bitcast %"class.blink::BaseArena"** %10 to %"class.blink::NormalPageArena"**
  %12 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 2856
  br i1 %15, label %46, label %16, !prof !2

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 3
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 2856
  store i8* %19, i8** %17, align 8
  %20 = add i64 %14, -2856
  store i64 %20, i64* %13, align 8
  %21 = bitcast i8* %18 to i32*
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %18, i64 4
  %23 = bitcast i8* %22 to i16*
  %24 = trunc i32 %9 to i16
  %25 = shl i16 %24, 2
  store atomic i16 %25, i16* %23 monotonic, align 2
  %26 = getelementptr inbounds i8, i8* %18, i64 6
  %27 = bitcast i8* %26 to i16*
  store i16 1428, i16* %27, align 2
  %28 = ptrtoint i8* %18 to i64
  %29 = and i64 %28, -131072
  %30 = inttoptr i64 %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 4400
  %32 = bitcast i8* %31 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %33 = bitcast i8* %31 to i64*
  %34 = load i64, i64* %33, align 16
  %35 = sub i64 %28, %34
  %36 = lshr i64 %35, 3
  %37 = lshr i64 %35, 6
  %38 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %32, i64 0, i32 0, i32 1, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = trunc i64 %36 to i32
  %41 = and i32 %40, 7
  %42 = shl i32 1, %41
  %43 = trunc i32 %42 to i8
  %44 = or i8 %39, %43
  store atomic i8 %44, i8* %38 release, align 1
  %45 = getelementptr inbounds i8, i8* %18, i64 8
  br label %49

46:                                               ; preds = %8
  %47 = zext i32 %9 to i64
  %48 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %12, i64 2856, i64 %47) #9
  br label %49

49:                                               ; preds = %16, %46
  %50 = phi i8* [ %45, %16 ], [ %48, %46 ]
  %51 = bitcast i8* %50 to %"class.blink::Document"*
  tail call void @_ZN5blink8DocumentC1ERKNS_12DocumentInitEh(%"class.blink::Document"* %51, %"class.blink::DocumentInit"* dereferenceable(288) %0, i8 zeroext 0) #9
  %52 = getelementptr inbounds i8, i8* %50, i64 -4
  %53 = bitcast i8* %52 to i16*
  %54 = load atomic i16, i16* %53 monotonic, align 2
  %55 = or i16 %54, 1
  store atomic i16 %55, i16* %53 release, align 2
  ret %"class.blink::Document"* %51
}

declare void @_ZN5blink8DocumentC1ERKNS_12DocumentInitEh(%"class.blink::Document"*, %"class.blink::DocumentInit"* dereferenceable(288), i8 zeroext) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Element"* @_ZN5blink25MakeGarbageCollectedTraitINS_7ElementEE4CallIJRKNS_13QualifiedNameERPNS_8DocumentEEEEPS1_DpOT_(%"class.blink::QualifiedName"* dereferenceable(8), %"class.blink::Document"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %4 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %8 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %7, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %9

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %4, %2 ], [ %8, %6 ]
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %3, i64 0, i32 19, i64 6
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %15, 112
  br i1 %16, label %47, label %17, !prof !2

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 112
  store i8* %20, i8** %18, align 8
  %21 = add i64 %15, -112
  store i64 %21, i64* %14, align 8
  %22 = bitcast i8* %19 to i32*
  store i32 0, i32* %22, align 4
  %23 = getelementptr inbounds i8, i8* %19, i64 4
  %24 = bitcast i8* %23 to i16*
  %25 = trunc i32 %10 to i16
  %26 = shl i16 %25, 2
  store atomic i16 %26, i16* %24 monotonic, align 2
  %27 = getelementptr inbounds i8, i8* %19, i64 6
  %28 = bitcast i8* %27 to i16*
  store i16 56, i16* %28, align 2
  %29 = ptrtoint i8* %19 to i64
  %30 = and i64 %29, -131072
  %31 = inttoptr i64 %30 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 4400
  %33 = bitcast i8* %32 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %34 = bitcast i8* %32 to i64*
  %35 = load i64, i64* %34, align 16
  %36 = sub i64 %29, %35
  %37 = lshr i64 %36, 3
  %38 = lshr i64 %36, 6
  %39 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %33, i64 0, i32 0, i32 1, i64 %38
  %40 = load i8, i8* %39, align 1
  %41 = trunc i64 %37 to i32
  %42 = and i32 %41, 7
  %43 = shl i32 1, %42
  %44 = trunc i32 %43 to i8
  %45 = or i8 %40, %44
  store atomic i8 %45, i8* %39 release, align 1
  %46 = getelementptr inbounds i8, i8* %19, i64 8
  br label %50

47:                                               ; preds = %9
  %48 = zext i32 %10 to i64
  %49 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 112, i64 %48) #9
  br label %50

50:                                               ; preds = %17, %47
  %51 = phi i8* [ %46, %17 ], [ %49, %47 ]
  %52 = bitcast i8* %51 to %"class.blink::Element"*
  %53 = load %"class.blink::Document"*, %"class.blink::Document"** %1, align 8
  tail call void @_ZN5blink7ElementC1ERKNS_13QualifiedNameEPNS_8DocumentENS_4Node16ConstructionTypeE(%"class.blink::Element"* %52, %"class.blink::QualifiedName"* dereferenceable(8) %0, %"class.blink::Document"* %53, i32 1074) #9
  %54 = getelementptr inbounds i8, i8* %51, i64 -4
  %55 = bitcast i8* %54 to i16*
  %56 = load atomic i16, i16* %55 monotonic, align 2
  %57 = or i16 %56, 1
  store atomic i16 %57, i16* %55 release, align 2
  ret %"class.blink::Element"* %52
}

declare void @_ZN5blink7ElementC1ERKNS_13QualifiedNameEPNS_8DocumentENS_4Node16ConstructionTypeE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.blink::Document"*, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HTMLBRElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_13HTMLBRElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %3 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %7 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %6, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %3, %1 ], [ %7, %5 ]
  %10 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %2, i64 0, i32 19, i64 6
  %11 = bitcast %"class.blink::BaseArena"** %10 to %"class.blink::NormalPageArena"**
  %12 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 112
  br i1 %15, label %46, label %16, !prof !2

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 3
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 112
  store i8* %19, i8** %17, align 8
  %20 = add i64 %14, -112
  store i64 %20, i64* %13, align 8
  %21 = bitcast i8* %18 to i32*
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %18, i64 4
  %23 = bitcast i8* %22 to i16*
  %24 = trunc i32 %9 to i16
  %25 = shl i16 %24, 2
  store atomic i16 %25, i16* %23 monotonic, align 2
  %26 = getelementptr inbounds i8, i8* %18, i64 6
  %27 = bitcast i8* %26 to i16*
  store i16 56, i16* %27, align 2
  %28 = ptrtoint i8* %18 to i64
  %29 = and i64 %28, -131072
  %30 = inttoptr i64 %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 4400
  %32 = bitcast i8* %31 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %33 = bitcast i8* %31 to i64*
  %34 = load i64, i64* %33, align 16
  %35 = sub i64 %28, %34
  %36 = lshr i64 %35, 3
  %37 = lshr i64 %35, 6
  %38 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %32, i64 0, i32 0, i32 1, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = trunc i64 %36 to i32
  %41 = and i32 %40, 7
  %42 = shl i32 1, %41
  %43 = trunc i32 %42 to i8
  %44 = or i8 %39, %43
  store atomic i8 %44, i8* %38 release, align 1
  %45 = getelementptr inbounds i8, i8* %18, i64 8
  br label %49

46:                                               ; preds = %8
  %47 = zext i32 %9 to i64
  %48 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %12, i64 112, i64 %47) #9
  br label %49

49:                                               ; preds = %16, %46
  %50 = phi i8* [ %45, %16 ], [ %48, %46 ]
  %51 = bitcast i8* %50 to %"class.blink::HTMLBRElement"*
  tail call void @_ZN5blink13HTMLBRElementC1ERNS_8DocumentE(%"class.blink::HTMLBRElement"* %51, %"class.blink::Document"* dereferenceable(2848) %0) #9
  %52 = getelementptr inbounds i8, i8* %50, i64 -4
  %53 = bitcast i8* %52 to i16*
  %54 = load atomic i16, i16* %53 monotonic, align 2
  %55 = or i16 %54, 1
  store atomic i16 %55, i16* %53 release, align 2
  ret %"class.blink::HTMLBRElement"* %51
}

declare void @_ZN5blink13HTMLBRElementC1ERNS_8DocumentE(%"class.blink::HTMLBRElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1780"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1780", %"class.WTF::Vector.1780"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #9
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.27, i64 0, i64 0), i8* %14, i8* %15) #9
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.10, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %23 = getelementptr inbounds %"class.WTF::Vector.1780", %"class.WTF::Vector.1780"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::String"*, %"class.WTF::String"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 %25
  ret %"class.WTF::String"* %26
}

declare void @_ZN5blink16RuntimeCallTimer5StartEPNS_18RuntimeCallCounterEPS0_(%"class.blink::RuntimeCallTimer"*, %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink10IsListItemEPKNS_4NodeE(%"class.blink::Node"*) #2

declare zeroext i1 @_ZN5blink13AreSameRangesEPNS_4NodeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEES8_(%"class.blink::Node"*, %"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink17IsHTMLListElementEPKNS_4NodeE(%"class.blink::Node"*) local_unnamed_addr #2

declare %"class.blink::Node"* @_ZN5blink26HighestEnclosingNodeOfTypeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEEPFbPKNS_4NodeEENS_27EditingBoundaryCrossingRuleEPS7_(%"class.blink::PositionTemplate"* dereferenceable(16), i1 (%"class.blink::Node"*)*, i32, %"class.blink::Node"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink27IsMailHTMLBlockquoteElementEPKNS_4NodeE(%"class.blink::Node"*) #2

declare zeroext i1 @_ZN5blink27IsPresentationalHTMLElementEPKNS_4NodeE(%"class.blink::Node"*) #2

declare zeroext i1 @_ZN5blink20IsTabHTMLSpanElementEPKNS_4NodeE(%"class.blink::Node"*) local_unnamed_addr #2

declare %"class.blink::Element"* @_ZN5blink23EnclosingElementWithTagERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEERKNS_13QualifiedNameE(%"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE20NodeAsRangeFirstNodeEv(%"class.blink::PositionTemplate.2744"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink13AreSameRangesEPNS_4NodeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEES8_(%"class.blink::Node"*, %"class.blink::PositionTemplate.2744"* dereferenceable(16), %"class.blink::PositionTemplate.2744"* dereferenceable(16)) local_unnamed_addr #2

declare %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 2000, i32 1}
