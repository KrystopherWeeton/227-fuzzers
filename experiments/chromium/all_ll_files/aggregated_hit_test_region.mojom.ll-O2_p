; ModuleID = 'gen/services/viz/public/mojom/hit_test/aggregated_hit_test_region.mojom.cc'
source_filename = "gen/services/viz/public/mojom/hit_test/aggregated_hit_test_region.mojom.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.viz::mojom::AggregatedHitTestRegion" = type { %"class.viz::FrameSinkId", i32, i32, %"class.gfx::Rect", i32, %"class.gfx::Transform" }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.perfetto::TracedValue" = type <{ %"class.perfetto::protos::pbzero::DebugAnnotation"*, %"class.perfetto::internal::CheckedScope", [7 x i8] }>
%"class.perfetto::protos::pbzero::DebugAnnotation" = type { %"class.protozero::Message.base", [7 x i8] }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i64 }
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.perfetto::internal::CheckedScope" = type { i8 }
%"class.perfetto::TracedDictionary" = type <{ %"class.protozero::Message"*, i32, %"class.perfetto::internal::CheckedScope", [3 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.mojo::internal::ValidationContext" = type <{ %"class.mojo::Message"*, i8*, i32, [4 x i8], i64, i64, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.mojo::Message" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::internal::Buffer", %"class.std::__1::vector", %"class.std::__1::vector.12", %"class.mojo::ConnectionGroup::Ref"*, i8, i8, i8* }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessageHandle" }
%"class.mojo::MessageHandle" = type { i64 }
%"class.mojo::internal::Buffer" = type { %"class.mojo::MessageHandle", i64, i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.mojo::ScopedHandleBase.6"*, %"class.mojo::ScopedHandleBase.6"*, %"class.std::__1::__compressed_pair.7" }
%"class.mojo::ScopedHandleBase.6" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.mojo::ScopedHandleBase.6"* }
%"class.std::__1::vector.12" = type { %"class.std::__1::__vector_base.13" }
%"class.std::__1::__vector_base.13" = type { %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.std::__1::__compressed_pair.14" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.mojo::ScopedInterfaceEndpointHandle"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.19 }
%class.scoped_refptr.19 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.23, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.25", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.21 }
%class.scoped_refptr.21 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.22", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.22" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.23 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.24" }>
%"class.base::RefCountedThreadSafe.24" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__atomic_base.27" }
%"struct.std::__1::__atomic_base.27" = type { %"struct.std::__1::__cxx_atomic_impl.28" }
%"struct.std::__1::__cxx_atomic_impl.28" = type { %"struct.std::__1::__cxx_atomic_base_impl.29" }
%"struct.std::__1::__cxx_atomic_base_impl.29" = type { i32 }
%"class.viz::mojom::internal::AggregatedHitTestRegion_Data" = type { %"struct.mojo::internal::StructHeader", %"struct.mojo::internal::Pointer", i32, i32, %"struct.mojo::internal::Pointer.30", i32, [4 x i8], %"struct.mojo::internal::Pointer.31" }
%"struct.mojo::internal::StructHeader" = type { i32, i32 }
%"struct.mojo::internal::Pointer" = type { i64 }
%"struct.mojo::internal::Pointer.30" = type { i64 }
%"struct.mojo::internal::Pointer.31" = type { i64 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.viz::mojom::AggregatedHitTestRegion"* }

@.str = private unnamed_addr constant [14 x i8] c"frame_sink_id\00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"<value>\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"flags\00", align 1
@.str.3 = private unnamed_addr constant [23 x i8] c"async_hit_test_reasons\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"rect\00", align 1
@.str.5 = private unnamed_addr constant [12 x i8] c"child_count\00", align 1
@.str.6 = private unnamed_addr constant [10 x i8] c"transform\00", align 1
@constinit = private unnamed_addr constant [4 x [4 x float]] [[4 x float] [float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00]], align 4

@_ZN3viz5mojom23AggregatedHitTestRegionC1Ev = hidden unnamed_addr alias void (%"class.viz::mojom::AggregatedHitTestRegion"*), void (%"class.viz::mojom::AggregatedHitTestRegion"*)* @_ZN3viz5mojom23AggregatedHitTestRegionC2Ev
@_ZN3viz5mojom23AggregatedHitTestRegionC1ERKNS_11FrameSinkIdEjjRKN3gfx4RectEjRKNS5_9TransformE = hidden unnamed_addr alias void (%"class.viz::mojom::AggregatedHitTestRegion"*, %"class.viz::FrameSinkId"*, i32, i32, %"class.gfx::Rect"*, i32, %"class.gfx::Transform"*), void (%"class.viz::mojom::AggregatedHitTestRegion"*, %"class.viz::FrameSinkId"*, i32, i32, %"class.gfx::Rect"*, i32, %"class.gfx::Transform"*)* @_ZN3viz5mojom23AggregatedHitTestRegionC2ERKNS_11FrameSinkIdEjjRKN3gfx4RectEjRKNS5_9TransformE
@_ZN3viz5mojom23AggregatedHitTestRegionD1Ev = hidden unnamed_addr alias void (%"class.viz::mojom::AggregatedHitTestRegion"*), void (%"class.viz::mojom::AggregatedHitTestRegion"*)* @_ZN3viz5mojom23AggregatedHitTestRegionD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom23AggregatedHitTestRegionC2Ev(%"class.viz::mojom::AggregatedHitTestRegion"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::mojom::AggregatedHitTestRegion", %"class.viz::mojom::AggregatedHitTestRegion"* %0, i64 0, i32 5
  %3 = bitcast %"class.gfx::Transform"* %2 to i8*
  %4 = bitcast %"class.viz::mojom::AggregatedHitTestRegion"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %4, i8 0, i64 36, i1 false)
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #6
  %5 = getelementptr inbounds %"class.viz::mojom::AggregatedHitTestRegion", %"class.viz::mojom::AggregatedHitTestRegion"* %0, i64 0, i32 5, i32 0, i32 1
  store i8 0, i8* %5, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom23AggregatedHitTestRegionC2ERKNS_11FrameSinkIdEjjRKN3gfx4RectEjRKNS5_9TransformE(%"class.viz::mojom::AggregatedHitTestRegion"* nocapture, %"class.viz::FrameSinkId"* nocapture readonly dereferenceable(8), i32, i32, %"class.gfx::Rect"* nocapture readonly dereferenceable(16), i32, %"class.gfx::Transform"* nocapture readonly dereferenceable(68)) unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %"class.viz::mojom::AggregatedHitTestRegion", %"class.viz::mojom::AggregatedHitTestRegion"* %0, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %1, i64 0, i32 0
  %10 = load i32, i32* %9, align 4
  store i32 %10, i32* %8, align 4
  %11 = getelementptr inbounds %"class.viz::mojom::AggregatedHitTestRegion", %"class.viz::mojom::AggregatedHitTestRegion"* %0, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %1, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  store i32 %13, i32* %11, align 4
  %14 = getelementptr inbounds %"class.viz::mojom::AggregatedHitTestRegion", %"class.viz::mojom::AggregatedHitTestRegion"* %0, i64 0, i32 1
  store i32 %2, i32* %14, align 4
  %15 = getelementptr inbounds %"class.viz::mojom::AggregatedHitTestRegion", %"class.viz::mojom::AggregatedHitTestRegion"* %0, i64 0, i32 2
  store i32 %3, i32* %15, align 4
  %16 = getelementptr inbounds %"class.viz::mojom::AggregatedHitTestRegion", %"class.viz::mojom::AggregatedHitTestRegion"* %0, i64 0, i32 3
  %17 = bitcast %"class.gfx::Rect"* %16 to i8*
  %18 = bitcast %"class.gfx::Rect"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %17, i8* align 4 %18, i64 16, i1 false)
  %19 = getelementptr inbounds %"class.viz::mojom::AggregatedHitTestRegion", %"class.viz::mojom::AggregatedHitTestRegion"* %0, i64 0, i32 4
  store i32 %5, i32* %19, align 4
  %20 = getelementptr inbounds %"class.viz::mojom::AggregatedHitTestRegion", %"class.viz::mojom::AggregatedHitTestRegion"* %0, i64 0, i32 5
  %21 = bitcast %"class.gfx::Transform"* %20 to i8*
  %22 = bitcast %"class.gfx::Transform"* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %21, i8* align 4 %22, i64 68, i1 false) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3viz5mojom23AggregatedHitTestRegionD2Ev(%"class.viz::mojom::AggregatedHitTestRegion"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3viz5mojom23AggregatedHitTestRegion14WriteIntoTraceEN8perfetto11TracedValueE(%"class.viz::mojom::AggregatedHitTestRegion"* nocapture readonly, %"class.perfetto::TracedValue"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.perfetto::TracedValue", align 8
  %4 = alloca %"class.perfetto::TracedValue", align 8
  %5 = alloca %"class.perfetto::TracedValue", align 8
  %6 = alloca %"class.perfetto::TracedDictionary", align 8
  %7 = alloca %"class.perfetto::TracedValue", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.perfetto::TracedValue", align 8
  %10 = alloca %"class.perfetto::TracedValue", align 8
  %11 = alloca %"class.perfetto::TracedValue", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.perfetto::TracedValue", align 8
  %14 = alloca %"class.perfetto::TracedValue", align 8
  %15 = alloca %"class.std::__1::basic_string", align 8
  %16 = bitcast %"class.perfetto::TracedDictionary"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #6
  %17 = bitcast %"class.perfetto::TracedDictionary"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 16, i1 false)
  call void @_ZNO8perfetto11TracedValue15WriteDictionaryEv(%"class.perfetto::TracedDictionary"* nonnull sret %6, %"class.perfetto::TracedValue"* %1) #6
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %7, %"class.perfetto::TracedDictionary"* nonnull %6, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0)) #6
  %18 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #6
  %19 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  store i8 7, i8* %20, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %18, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i64 7, i1 false) #6
  %21 = getelementptr inbounds i8, i8* %18, i64 7
  store i8 0, i8* %21, align 1
  call void @_ZNO8perfetto11TracedValue11WriteStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.perfetto::TracedValue"* nonnull %7, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8) #6
  %22 = load i8, i8* %20, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @_ZdlPv(i8* %26) #7
  br label %27

27:                                               ; preds = %2, %24
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #6
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %9, %"class.perfetto::TracedDictionary"* nonnull %6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0)) #6
  %28 = getelementptr inbounds %"class.viz::mojom::AggregatedHitTestRegion", %"class.viz::mojom::AggregatedHitTestRegion"* %0, i64 0, i32 1
  %29 = bitcast %"class.perfetto::TracedValue"* %9 to i8*
  %30 = bitcast %"class.perfetto::TracedValue"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* nonnull align 8 %29, i64 16, i1 false) #6
  %31 = load i32, i32* %28, align 4
  %32 = zext i32 %31 to i64
  call void @_ZNO8perfetto11TracedValue11WriteUInt64Em(%"class.perfetto::TracedValue"* nonnull %5, i64 %32) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #6
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %10, %"class.perfetto::TracedDictionary"* nonnull %6, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0)) #6
  %33 = getelementptr inbounds %"class.viz::mojom::AggregatedHitTestRegion", %"class.viz::mojom::AggregatedHitTestRegion"* %0, i64 0, i32 2
  %34 = bitcast %"class.perfetto::TracedValue"* %10 to i8*
  %35 = bitcast %"class.perfetto::TracedValue"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %35, i8* nonnull align 8 %34, i64 16, i1 false) #6
  %36 = load i32, i32* %33, align 4
  %37 = zext i32 %36 to i64
  call void @_ZNO8perfetto11TracedValue11WriteUInt64Em(%"class.perfetto::TracedValue"* nonnull %4, i64 %37) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #6
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %11, %"class.perfetto::TracedDictionary"* nonnull %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0)) #6
  %38 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #6
  %39 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  store i8 7, i8* %40, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %38, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i64 7, i1 false) #6
  %41 = getelementptr inbounds i8, i8* %38, i64 7
  store i8 0, i8* %41, align 1
  call void @_ZNO8perfetto11TracedValue11WriteStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.perfetto::TracedValue"* nonnull %11, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %12) #6
  %42 = load i8, i8* %40, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %27
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  call void @_ZdlPv(i8* %46) #7
  br label %47

47:                                               ; preds = %44, %27
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #6
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %13, %"class.perfetto::TracedDictionary"* nonnull %6, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i64 0, i64 0)) #6
  %48 = getelementptr inbounds %"class.viz::mojom::AggregatedHitTestRegion", %"class.viz::mojom::AggregatedHitTestRegion"* %0, i64 0, i32 4
  %49 = bitcast %"class.perfetto::TracedValue"* %13 to i8*
  %50 = bitcast %"class.perfetto::TracedValue"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %50) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %50, i8* nonnull align 8 %49, i64 16, i1 false) #6
  %51 = load i32, i32* %48, align 4
  %52 = zext i32 %51 to i64
  call void @_ZNO8perfetto11TracedValue11WriteUInt64Em(%"class.perfetto::TracedValue"* nonnull %3, i64 %52) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #6
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %14, %"class.perfetto::TracedDictionary"* nonnull %6, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6, i64 0, i64 0)) #6
  %53 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #6
  %54 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %54, i64 0, i32 1, i32 0
  store i8 7, i8* %55, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %53, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i64 7, i1 false) #6
  %56 = getelementptr inbounds i8, i8* %53, i64 7
  store i8 0, i8* %56, align 1
  call void @_ZNO8perfetto11TracedValue11WriteStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.perfetto::TracedValue"* nonnull %14, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %15) #6
  %57 = load i8, i8* %55, align 1
  %58 = icmp slt i8 %57, 0
  br i1 %58, label %59, label %62

59:                                               ; preds = %47
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  call void @_ZdlPv(i8* %61) #7
  br label %62

62:                                               ; preds = %47, %59
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZNO8perfetto11TracedValue15WriteDictionaryEv(%"class.perfetto::TracedDictionary"* sret, %"class.perfetto::TracedValue"*) local_unnamed_addr #3

declare void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* sret, %"class.perfetto::TracedDictionary"*, i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3viz5mojom23AggregatedHitTestRegion8ValidateEPKvPN4mojo8internal17ValidationContextE(i8*, %"class.mojo::internal::ValidationContext"*) local_unnamed_addr #0 align 2 {
  %3 = tail call zeroext i1 @_ZN3viz5mojom8internal28AggregatedHitTestRegion_Data8ValidateEPKvPN4mojo8internal17ValidationContextE(i8* %0, %"class.mojo::internal::ValidationContext"* %1) #6
  ret i1 %3
}

declare zeroext i1 @_ZN3viz5mojom8internal28AggregatedHitTestRegion_Data8ValidateEPKvPN4mojo8internal17ValidationContextE(i8*, %"class.mojo::internal::ValidationContext"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN3viz5mojom31AggregatedHitTestRegionDataViewENS_9StructPtrINS2_23AggregatedHitTestRegionEEEE4ReadES3_PS6_(%"class.viz::mojom::internal::AggregatedHitTestRegion_Data"*, %"class.mojo::Message"*, %"class.mojo::StructPtr"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_Znwm(i64 104) #7, !noalias !2
  %5 = getelementptr inbounds i8, i8* %4, i64 36
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %4, i8 0, i64 36, i1 false) #6, !noalias !2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #6, !noalias !2
  %6 = getelementptr inbounds i8, i8* %4, i64 100
  store i8 0, i8* %6, align 4, !noalias !2
  %7 = ptrtoint i8* %4 to i64
  %8 = getelementptr inbounds %"class.viz::mojom::internal::AggregatedHitTestRegion_Data", %"class.viz::mojom::internal::AggregatedHitTestRegion_Data"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %8, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  %12 = bitcast %"struct.mojo::internal::Pointer"* %8 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 %10
  br i1 %11, label %28, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds i8, i8* %13, i64 8
  %16 = bitcast i8* %15 to i32*
  %17 = load i32, i32* %16, align 1
  %18 = getelementptr inbounds i8, i8* %13, i64 12
  %19 = bitcast i8* %18 to i32*
  %20 = load i32, i32* %19, align 1
  %21 = bitcast i8* %4 to i64*
  %22 = zext i32 %20 to i64
  %23 = shl nuw i64 %22, 32
  %24 = zext i32 %17 to i64
  %25 = or i64 %23, %24
  store i64 %25, i64* %21, align 4
  %26 = or i32 %20, %17
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %106, label %28

28:                                               ; preds = %14, %3
  %29 = getelementptr inbounds %"class.viz::mojom::internal::AggregatedHitTestRegion_Data", %"class.viz::mojom::internal::AggregatedHitTestRegion_Data"* %0, i64 0, i32 2
  %30 = load i32, i32* %29, align 1
  %31 = getelementptr inbounds i8, i8* %4, i64 8
  %32 = bitcast i8* %31 to i32*
  store i32 %30, i32* %32, align 4
  %33 = getelementptr inbounds %"class.viz::mojom::internal::AggregatedHitTestRegion_Data", %"class.viz::mojom::internal::AggregatedHitTestRegion_Data"* %0, i64 0, i32 3
  %34 = load i32, i32* %33, align 1
  %35 = getelementptr inbounds i8, i8* %4, i64 12
  %36 = bitcast i8* %35 to i32*
  store i32 %34, i32* %36, align 4
  %37 = getelementptr inbounds i8, i8* %4, i64 16
  %38 = getelementptr inbounds %"class.viz::mojom::internal::AggregatedHitTestRegion_Data", %"class.viz::mojom::internal::AggregatedHitTestRegion_Data"* %0, i64 0, i32 4
  %39 = getelementptr inbounds %"struct.mojo::internal::Pointer.30", %"struct.mojo::internal::Pointer.30"* %38, i64 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, 0
  %42 = bitcast %"struct.mojo::internal::Pointer.30"* %38 to i8*
  %43 = getelementptr inbounds i8, i8* %42, i64 %40
  br i1 %41, label %84, label %44

44:                                               ; preds = %28
  %45 = getelementptr inbounds i8, i8* %43, i64 16
  %46 = bitcast i8* %45 to i32*
  %47 = load i32, i32* %46, align 1
  %48 = icmp slt i32 %47, 0
  br i1 %48, label %106, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds i8, i8* %43, i64 20
  %51 = bitcast i8* %50 to i32*
  %52 = load i32, i32* %51, align 1
  %53 = icmp slt i32 %52, 0
  br i1 %53, label %106, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds i8, i8* %43, i64 8
  %56 = bitcast i8* %55 to i32*
  %57 = load i32, i32* %56, align 1
  %58 = getelementptr inbounds i8, i8* %43, i64 12
  %59 = bitcast i8* %58 to i32*
  %60 = load i32, i32* %59, align 1
  %61 = bitcast i8* %37 to i32*
  store i32 %57, i32* %61, align 4
  %62 = getelementptr inbounds i8, i8* %4, i64 20
  %63 = bitcast i8* %62 to i32*
  store i32 %60, i32* %63, align 4
  %64 = icmp sgt i32 %57, 0
  %65 = icmp sgt i32 %47, 0
  %66 = and i1 %65, %64
  %67 = sub nuw nsw i32 2147483647, %57
  %68 = icmp ult i32 %67, %47
  %69 = and i1 %68, %66
  %70 = select i1 %69, i32 %67, i32 %47
  %71 = icmp sgt i32 %70, 0
  %72 = select i1 %71, i32 %70, i32 0
  %73 = getelementptr inbounds i8, i8* %4, i64 24
  %74 = bitcast i8* %73 to i32*
  store i32 %72, i32* %74, align 4
  %75 = icmp sgt i32 %60, 0
  %76 = sub nuw nsw i32 2147483647, %60
  %77 = icmp ult i32 %76, %52
  %78 = and i1 %75, %77
  %79 = select i1 %78, i32 %76, i32 %52
  %80 = icmp sgt i32 %79, 0
  %81 = select i1 %80, i32 %79, i32 0
  %82 = getelementptr inbounds i8, i8* %4, i64 28
  %83 = bitcast i8* %82 to i32*
  store i32 %81, i32* %83, align 4
  br label %84

84:                                               ; preds = %54, %28
  %85 = getelementptr inbounds %"class.viz::mojom::internal::AggregatedHitTestRegion_Data", %"class.viz::mojom::internal::AggregatedHitTestRegion_Data"* %0, i64 0, i32 5
  %86 = load i32, i32* %85, align 1
  %87 = getelementptr inbounds i8, i8* %4, i64 32
  %88 = bitcast i8* %87 to i32*
  store i32 %86, i32* %88, align 4
  %89 = getelementptr inbounds %"class.viz::mojom::internal::AggregatedHitTestRegion_Data", %"class.viz::mojom::internal::AggregatedHitTestRegion_Data"* %0, i64 0, i32 7
  %90 = getelementptr inbounds %"struct.mojo::internal::Pointer.31", %"struct.mojo::internal::Pointer.31"* %89, i64 0, i32 0
  %91 = load i64, i64* %90, align 8
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %106, label %93

93:                                               ; preds = %84
  %94 = bitcast %"struct.mojo::internal::Pointer.31"* %89 to i8*
  %95 = getelementptr inbounds i8, i8* %94, i64 %91
  %96 = getelementptr inbounds i8, i8* %95, i64 8
  %97 = bitcast i8* %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = icmp eq i64 %98, 0
  %100 = bitcast i8* %5 to %class.SkMatrix44*
  br i1 %99, label %101, label %102

101:                                              ; preds = %93
  tail call void @_ZN10SkMatrix4411setIdentityEv(%class.SkMatrix44* %100) #6
  br label %106

102:                                              ; preds = %93
  %103 = getelementptr inbounds i8, i8* %96, i64 %98
  %104 = getelementptr inbounds i8, i8* %103, i64 8
  %105 = bitcast i8* %104 to float*
  tail call void @_ZN10SkMatrix4412setColMajorfEPKf(%class.SkMatrix44* %100, float* %105) #6
  br label %106

106:                                              ; preds = %14, %49, %44, %102, %101, %84
  %107 = phi i1 [ true, %84 ], [ true, %101 ], [ true, %102 ], [ false, %14 ], [ false, %44 ], [ false, %49 ]
  %108 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %109 = load %"class.viz::mojom::AggregatedHitTestRegion"*, %"class.viz::mojom::AggregatedHitTestRegion"** %108, align 8
  store %"class.viz::mojom::AggregatedHitTestRegion"* null, %"class.viz::mojom::AggregatedHitTestRegion"** %108, align 8
  %110 = icmp eq %"class.viz::mojom::AggregatedHitTestRegion"* %109, null
  br i1 %110, label %111, label %113

111:                                              ; preds = %106
  %112 = bitcast %"class.mojo::StructPtr"* %2 to i64*
  store i64 %7, i64* %112, align 8
  br label %120

113:                                              ; preds = %106
  %114 = bitcast %"class.viz::mojom::AggregatedHitTestRegion"* %109 to i8*
  tail call void @_ZdlPv(i8* %114) #7
  %115 = bitcast %"class.mojo::StructPtr"* %2 to i64*
  %116 = load %"class.viz::mojom::AggregatedHitTestRegion"*, %"class.viz::mojom::AggregatedHitTestRegion"** %108, align 8
  store i64 %7, i64* %115, align 8
  %117 = icmp eq %"class.viz::mojom::AggregatedHitTestRegion"* %116, null
  br i1 %117, label %120, label %118

118:                                              ; preds = %113
  %119 = bitcast %"class.viz::mojom::AggregatedHitTestRegion"* %116 to i8*
  tail call void @_ZdlPv(i8* %119) #7
  br label %120

120:                                              ; preds = %111, %113, %118
  ret i1 %107
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

declare void @_ZNO8perfetto11TracedValue11WriteStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.perfetto::TracedValue"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZNO8perfetto11TracedValue11WriteUInt64Em(%"class.perfetto::TracedValue"*, i64) local_unnamed_addr #3

declare void @_ZN10SkMatrix4412setColMajorfEPKf(%class.SkMatrix44*, float*) local_unnamed_addr #3

declare void @_ZN10SkMatrix4411setIdentityEv(%class.SkMatrix44*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN3viz5mojom23AggregatedHitTestRegion3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_: argument 0"}
!4 = distinct !{!4, !"_ZN3viz5mojom23AggregatedHitTestRegion3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_"}
