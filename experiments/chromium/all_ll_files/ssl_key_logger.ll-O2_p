; ModuleID = '../../net/ssl/ssl_key_logger.cc'
source_filename = "../../net/ssl/ssl_key_logger.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.base::NoDestructor" = type { [8 x i8] }
%"class.net::SSLKeyLoggerManager" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.net::SSLKeyLogger"* }
%"class.net::SSLKeyLogger" = type { i32 (...)** }
%struct.ssl_st = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@_ZZN3net19SSLKeyLoggerManager3GetEvE5owner = internal global %"class.base::NoDestructor" zeroinitializer, align 8
@_ZGVZN3net19SSLKeyLoggerManager3GetEvE5owner = internal global i64 0, align 8

@_ZN3net19SSLKeyLoggerManagerC1Ev = hidden unnamed_addr alias void (%"class.net::SSLKeyLoggerManager"*), void (%"class.net::SSLKeyLoggerManager"*)* @_ZN3net19SSLKeyLoggerManagerC2Ev

; Function Attrs: nofree nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net19SSLKeyLoggerManager8IsActiveEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN3net19SSLKeyLoggerManager3GetEvE5owner to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %7, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN3net19SSLKeyLoggerManager3GetEvE5owner) #9
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  store i64 0, i64* bitcast (%"class.base::NoDestructor"* @_ZZN3net19SSLKeyLoggerManager3GetEvE5owner to i64*), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN3net19SSLKeyLoggerManager3GetEvE5owner) #9
  br label %7

7:                                                ; preds = %0, %3, %6
  %8 = load %"class.net::SSLKeyLogger"*, %"class.net::SSLKeyLogger"** bitcast (%"class.base::NoDestructor"* @_ZZN3net19SSLKeyLoggerManager3GetEvE5owner to %"class.net::SSLKeyLogger"**), align 8
  %9 = icmp ne %"class.net::SSLKeyLogger"* %8, null
  ret i1 %9
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden %"class.net::SSLKeyLoggerManager"* @_ZN3net19SSLKeyLoggerManager3GetEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN3net19SSLKeyLoggerManager3GetEvE5owner to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %7, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN3net19SSLKeyLoggerManager3GetEvE5owner) #9
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  store i64 0, i64* bitcast (%"class.base::NoDestructor"* @_ZZN3net19SSLKeyLoggerManager3GetEvE5owner to i64*), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN3net19SSLKeyLoggerManager3GetEvE5owner) #9
  br label %7

7:                                                ; preds = %3, %6, %0
  ret %"class.net::SSLKeyLoggerManager"* bitcast (%"class.base::NoDestructor"* @_ZZN3net19SSLKeyLoggerManager3GetEvE5owner to %"class.net::SSLKeyLoggerManager"*)
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19SSLKeyLoggerManager15SetSSLKeyLoggerENSt3__110unique_ptrINS_12SSLKeyLoggerENS1_14default_deleteIS3_EEEE(%"class.net::SSLKeyLogger"*) local_unnamed_addr #1 align 2 {
  %2 = ptrtoint %"class.net::SSLKeyLogger"* %0 to i64
  %3 = load atomic i8, i8* bitcast (i64* @_ZGVZN3net19SSLKeyLoggerManager3GetEvE5owner to i8*) acquire, align 8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %9, !prof !2

5:                                                ; preds = %1
  %6 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN3net19SSLKeyLoggerManager3GetEvE5owner) #9
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %5
  store i64 0, i64* bitcast (%"class.base::NoDestructor"* @_ZZN3net19SSLKeyLoggerManager3GetEvE5owner to i64*), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN3net19SSLKeyLoggerManager3GetEvE5owner) #9
  br label %9

9:                                                ; preds = %1, %5, %8
  %10 = load %"class.net::SSLKeyLogger"*, %"class.net::SSLKeyLogger"** bitcast (%"class.base::NoDestructor"* @_ZZN3net19SSLKeyLoggerManager3GetEvE5owner to %"class.net::SSLKeyLogger"**), align 8
  store i64 %2, i64* bitcast (%"class.base::NoDestructor"* @_ZZN3net19SSLKeyLoggerManager3GetEvE5owner to i64*), align 8
  %11 = icmp eq %"class.net::SSLKeyLogger"* %10, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %9
  %13 = bitcast %"class.net::SSLKeyLogger"* %10 to void (%"class.net::SSLKeyLogger"*)***
  %14 = load void (%"class.net::SSLKeyLogger"*)**, void (%"class.net::SSLKeyLogger"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.net::SSLKeyLogger"*)*, void (%"class.net::SSLKeyLogger"*)** %14, i64 1
  %16 = load void (%"class.net::SSLKeyLogger"*)*, void (%"class.net::SSLKeyLogger"*)** %15, align 8
  tail call void %16(%"class.net::SSLKeyLogger"* nonnull %10) #9
  br label %17

17:                                               ; preds = %12, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19SSLKeyLoggerManager14KeyLogCallbackEPK6ssl_stPKc(%struct.ssl_st* nocapture readnone, i8* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = load atomic i8, i8* bitcast (i64* @_ZGVZN3net19SSLKeyLoggerManager3GetEvE5owner to i8*) acquire, align 8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %10, !prof !2

6:                                                ; preds = %2
  %7 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN3net19SSLKeyLoggerManager3GetEvE5owner) #9
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %6
  store i64 0, i64* bitcast (%"class.base::NoDestructor"* @_ZZN3net19SSLKeyLoggerManager3GetEvE5owner to i64*), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN3net19SSLKeyLoggerManager3GetEvE5owner) #9
  br label %10

10:                                               ; preds = %2, %6, %9
  %11 = load %"class.net::SSLKeyLogger"*, %"class.net::SSLKeyLogger"** bitcast (%"class.base::NoDestructor"* @_ZZN3net19SSLKeyLoggerManager3GetEvE5owner to %"class.net::SSLKeyLogger"**), align 8
  %12 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #9
  %13 = tail call i64 @strlen(i8* %1) #9
  %14 = icmp ugt i64 %13, -17
  br i1 %14, label %15, label %17

15:                                               ; preds = %10
  %16 = bitcast %"class.std::__1::basic_string"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %16) #10
  unreachable

17:                                               ; preds = %10
  %18 = icmp ult i64 %13, 23
  br i1 %18, label %28, label %19

19:                                               ; preds = %17
  %20 = add nuw i64 %13, 16
  %21 = and i64 %20, -16
  %22 = tail call i8* @_Znwm(i64 %21) #11
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %22, i8** %23, align 8
  %24 = or i64 %21, -9223372036854775808
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %13, i64* %26, align 8
  %27 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %33

28:                                               ; preds = %17
  %29 = trunc i64 %13 to i8
  %30 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  store i8 %29, i8* %31, align 1
  %32 = icmp eq i64 %13, 0
  br i1 %32, label %36, label %33

33:                                               ; preds = %28, %19
  %34 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %30, %28 ], [ %27, %19 ]
  %35 = phi i8* [ %12, %28 ], [ %22, %19 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %35, i8* align 1 %1, i64 %13, i1 false) #9
  br label %36

36:                                               ; preds = %28, %33
  %37 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %30, %28 ], [ %34, %33 ]
  %38 = phi i8* [ %12, %28 ], [ %35, %33 ]
  %39 = getelementptr inbounds i8, i8* %38, i64 %13
  store i8 0, i8* %39, align 1
  %40 = bitcast %"class.net::SSLKeyLogger"* %11 to void (%"class.net::SSLKeyLogger"*, %"class.std::__1::basic_string"*)***
  %41 = load void (%"class.net::SSLKeyLogger"*, %"class.std::__1::basic_string"*)**, void (%"class.net::SSLKeyLogger"*, %"class.std::__1::basic_string"*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.net::SSLKeyLogger"*, %"class.std::__1::basic_string"*)*, void (%"class.net::SSLKeyLogger"*, %"class.std::__1::basic_string"*)** %41, i64 2
  %43 = load void (%"class.net::SSLKeyLogger"*, %"class.std::__1::basic_string"*)*, void (%"class.net::SSLKeyLogger"*, %"class.std::__1::basic_string"*)** %42, align 8
  call void %43(%"class.net::SSLKeyLogger"* %11, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #9
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  br i1 %46, label %47, label %50

47:                                               ; preds = %36
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @_ZdlPv(i8* %49) #11
  br label %50

50:                                               ; preds = %36, %47
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net19SSLKeyLoggerManagerC2Ev(%"class.net::SSLKeyLoggerManager"* nocapture) unnamed_addr #3 align 2 {
  %2 = bitcast %"class.net::SSLKeyLoggerManager"* %0 to i64*
  store i64 0, i64* %2, align 8
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #8

attributes #0 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
