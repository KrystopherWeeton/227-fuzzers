; ModuleID = '../../third_party/skia/src/gpu/GrXferProcessor.cpp'
source_filename = "../../third_party/skia/src/gpu/GrXferProcessor.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.GrXferProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef, i8, i8, [2 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.GrNonAtomicRef = type { i32 }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.GrProcessorKeyBuilder = type { i32 (...)**, %class.SkTArray*, i32, i32 }
%class.SkTArray = type { i32*, i64 }
%class.GrXPFactory = type { i32 (...)** }
%class.GrProcessorAnalysisColor = type { i32, %struct.SkRGBA4f }
%struct.SkRGBA4f = type { float, float, float, float }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp = type { %class.GrShaderCaps* }
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.sk_sp.1 = type { %class.GrXferProcessor* }
%"struct.GrXferProcessor::BlendInfo" = type <{ i32, i32, i32, %struct.SkRGBA4f, i8, [3 x i8] }>

$_ZN11GrProcessorD2Ev = comdat any

$_ZN15GrXferProcessorD0Ev = comdat any

$_ZNK15GrXferProcessor15xferBarrierTypeERK6GrCaps = comdat any

$_ZNK15GrXferProcessor20onHasSecondaryOutputEv = comdat any

$_ZNK15GrXferProcessor14onGetBlendInfoEPNS_9BlendInfoE = comdat any

$_ZTV15GrXferProcessor = comdat any

@_ZTV15GrXferProcessor = linkonce_odr hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrProcessor*)* @_ZN11GrProcessorD2Ev to i8*), i8* bitcast (void (%class.GrXferProcessor*)* @_ZN15GrXferProcessorD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i32 (%class.GrXferProcessor*, %class.GrCaps*)* @_ZNK15GrXferProcessor15xferBarrierTypeERK6GrCaps to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%class.GrXferProcessor*)* @_ZNK15GrXferProcessor20onHasSecondaryOutputEv to i8*), i8* bitcast (void (%class.GrXferProcessor*, %"struct.GrXferProcessor::BlendInfo"*)* @_ZNK15GrXferProcessor14onGetBlendInfoEPNS_9BlendInfoE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str = private unnamed_addr constant [8 x i8] c"unknown\00", align 1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN15GrXferProcessorC2EN11GrProcessor7ClassIDE(%class.GrXferProcessor* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrXferProcessor, %class.GrXferProcessor* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %class.GrXferProcessor, %class.GrXferProcessor* %0, i64 0, i32 0, i32 1
  store i32 %1, i32* %4, align 8
  %5 = getelementptr inbounds %class.GrXferProcessor, %class.GrXferProcessor* %0, i64 0, i32 0, i32 2
  store i32 0, i32* %5, align 4
  %6 = getelementptr inbounds %class.GrXferProcessor, %class.GrXferProcessor* %0, i64 0, i32 1, i32 0
  store i32 1, i32* %6, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV15GrXferProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %7 = getelementptr inbounds %class.GrXferProcessor, %class.GrXferProcessor* %0, i64 0, i32 2
  store i8 0, i8* %7, align 4
  %8 = getelementptr inbounds %class.GrXferProcessor, %class.GrXferProcessor* %0, i64 0, i32 3
  store i8 0, i8* %8, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN15GrXferProcessorC2EN11GrProcessor7ClassIDEb27GrProcessorAnalysisCoverage(%class.GrXferProcessor* nocapture, i32, i1 zeroext, i32) unnamed_addr #0 align 2 {
  %5 = zext i1 %2 to i8
  %6 = getelementptr inbounds %class.GrXferProcessor, %class.GrXferProcessor* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %class.GrXferProcessor, %class.GrXferProcessor* %0, i64 0, i32 0, i32 1
  store i32 %1, i32* %7, align 8
  %8 = getelementptr inbounds %class.GrXferProcessor, %class.GrXferProcessor* %0, i64 0, i32 0, i32 2
  store i32 0, i32* %8, align 4
  %9 = getelementptr inbounds %class.GrXferProcessor, %class.GrXferProcessor* %0, i64 0, i32 1, i32 0
  store i32 1, i32* %9, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV15GrXferProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %10 = getelementptr inbounds %class.GrXferProcessor, %class.GrXferProcessor* %0, i64 0, i32 2
  store i8 %5, i8* %10, align 4
  %11 = getelementptr inbounds %class.GrXferProcessor, %class.GrXferProcessor* %0, i64 0, i32 3
  %12 = icmp eq i32 %3, 2
  %13 = zext i1 %12 to i8
  store i8 %13, i8* %11, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK15GrXferProcessor18hasSecondaryOutputEv(%class.GrXferProcessor*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.GrXferProcessor, %class.GrXferProcessor* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %11

5:                                                ; preds = %1
  %6 = bitcast %class.GrXferProcessor* %0 to i1 (%class.GrXferProcessor*)***
  %7 = load i1 (%class.GrXferProcessor*)**, i1 (%class.GrXferProcessor*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%class.GrXferProcessor*)*, i1 (%class.GrXferProcessor*)** %7, i64 6
  %9 = load i1 (%class.GrXferProcessor*)*, i1 (%class.GrXferProcessor*)** %8, align 8
  %10 = tail call zeroext i1 %9(%class.GrXferProcessor* %0) #5
  br label %11

11:                                               ; preds = %1, %5
  %12 = phi i1 [ %10, %5 ], [ false, %1 ]
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK15GrXferProcessor19getGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilderPK15GrSurfaceOrigin15GrDstSampleType(%class.GrXferProcessor*, %class.GrShaderCaps* dereferenceable(144), %class.GrProcessorKeyBuilder*, i32* readonly, i32) local_unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %class.GrXferProcessor, %class.GrXferProcessor* %0, i64 0, i32 2
  %7 = load i8, i8* %6, align 4, !range !2
  %8 = icmp ne i8 %7, 0
  %9 = zext i8 %7 to i32
  %10 = icmp ne i32* %3, null
  %11 = and i1 %10, %8
  br i1 %11, label %12, label %20

12:                                               ; preds = %5
  %13 = load i32, i32* %3, align 4
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %14, i32 6, i32 2
  %16 = or i32 %15, %9
  %17 = icmp eq i32 %4, 3
  %18 = or i32 %16, 8
  %19 = select i1 %17, i32 %18, i32 %16
  br label %20

20:                                               ; preds = %12, %5
  %21 = phi i32 [ %9, %5 ], [ %19, %12 ]
  %22 = getelementptr inbounds %class.GrXferProcessor, %class.GrXferProcessor* %0, i64 0, i32 3
  %23 = load i8, i8* %22, align 1, !range !2
  %24 = icmp eq i8 %23, 0
  %25 = or i32 %21, 16
  %26 = select i1 %24, i32 %21, i32 %25
  %27 = bitcast %class.GrProcessorKeyBuilder* %2 to void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)***
  %28 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %27, align 8
  %29 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %28, i64 2
  %30 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %29, align 8
  tail call void %30(%class.GrProcessorKeyBuilder* %2, i32 32, i32 %26, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0)) #5
  %31 = bitcast %class.GrXferProcessor* %0 to void (%class.GrXferProcessor*, %class.GrShaderCaps*, %class.GrProcessorKeyBuilder*)***
  %32 = load void (%class.GrXferProcessor*, %class.GrShaderCaps*, %class.GrProcessorKeyBuilder*)**, void (%class.GrXferProcessor*, %class.GrShaderCaps*, %class.GrProcessorKeyBuilder*)*** %31, align 8
  %33 = getelementptr inbounds void (%class.GrXferProcessor*, %class.GrShaderCaps*, %class.GrProcessorKeyBuilder*)*, void (%class.GrXferProcessor*, %class.GrShaderCaps*, %class.GrProcessorKeyBuilder*)** %32, i64 5
  %34 = load void (%class.GrXferProcessor*, %class.GrShaderCaps*, %class.GrProcessorKeyBuilder*)*, void (%class.GrXferProcessor*, %class.GrShaderCaps*, %class.GrProcessorKeyBuilder*)** %33, align 8
  tail call void %34(%class.GrXferProcessor* %0, %class.GrShaderCaps* dereferenceable(144) %1, %class.GrProcessorKeyBuilder* %2) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11GrXPFactory21GetAnalysisPropertiesEPKS_RK24GrProcessorAnalysisColorRK27GrProcessorAnalysisCoverageRK6GrCaps11GrClampType(%class.GrXPFactory*, %class.GrProcessorAnalysisColor* dereferenceable(20), i32* dereferenceable(4), %class.GrCaps* dereferenceable(232), i32) local_unnamed_addr #1 align 2 {
  %6 = icmp eq %class.GrXPFactory* %0, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %5
  %8 = bitcast %class.GrXPFactory* %0 to i32 (%class.GrXPFactory*, %class.GrProcessorAnalysisColor*, i32*, %class.GrCaps*, i32)***
  %9 = load i32 (%class.GrXPFactory*, %class.GrProcessorAnalysisColor*, i32*, %class.GrCaps*, i32)**, i32 (%class.GrXPFactory*, %class.GrProcessorAnalysisColor*, i32*, %class.GrCaps*, i32)*** %8, align 8
  %10 = getelementptr inbounds i32 (%class.GrXPFactory*, %class.GrProcessorAnalysisColor*, i32*, %class.GrCaps*, i32)*, i32 (%class.GrXPFactory*, %class.GrProcessorAnalysisColor*, i32*, %class.GrCaps*, i32)** %9, i64 1
  %11 = load i32 (%class.GrXPFactory*, %class.GrProcessorAnalysisColor*, i32*, %class.GrCaps*, i32)*, i32 (%class.GrXPFactory*, %class.GrProcessorAnalysisColor*, i32*, %class.GrCaps*, i32)** %10, align 8
  %12 = tail call i32 %11(%class.GrXPFactory* nonnull %0, %class.GrProcessorAnalysisColor* dereferenceable(20) %1, i32* dereferenceable(4) %2, %class.GrCaps* dereferenceable(232) %3, i32 %4) #5
  br label %15

13:                                               ; preds = %5
  %14 = tail call i32 @_ZN21GrPorterDuffXPFactory25SrcOverAnalysisPropertiesERK24GrProcessorAnalysisColorRK27GrProcessorAnalysisCoverageRK6GrCaps11GrClampType(%class.GrProcessorAnalysisColor* dereferenceable(20) %1, i32* dereferenceable(4) %2, %class.GrCaps* dereferenceable(232) %3, i32 %4) #5
  br label %15

15:                                               ; preds = %13, %7
  %16 = phi i32 [ %14, %13 ], [ %12, %7 ]
  %17 = load i32, i32* %2, align 4
  %18 = icmp eq i32 %17, 0
  %19 = or i32 %16, 2
  %20 = select i1 %18, i32 %19, i32 %16
  %21 = and i32 %20, 1
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %33, label %23

23:                                               ; preds = %15
  %24 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %3, i64 0, i32 2, i32 0
  %25 = load %class.GrShaderCaps*, %class.GrShaderCaps** %24, align 8
  %26 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %25, i64 0, i32 2
  %27 = bitcast i56* %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = and i64 %28, 8
  %30 = icmp eq i64 %29, 0
  %31 = or i32 %20, 48
  %32 = select i1 %30, i32 %31, i32 %20
  ret i32 %32

33:                                               ; preds = %15
  ret i32 %20
}

declare i32 @_ZN21GrPorterDuffXPFactory25SrcOverAnalysisPropertiesERK24GrProcessorAnalysisColorRK27GrProcessorAnalysisCoverageRK6GrCaps11GrClampType(%class.GrProcessorAnalysisColor* dereferenceable(20), i32* dereferenceable(4), %class.GrCaps* dereferenceable(232), i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11GrXPFactory17MakeXferProcessorEPKS_RK24GrProcessorAnalysisColor27GrProcessorAnalysisCoverageRK6GrCaps11GrClampType(%class.sk_sp.1* noalias sret, %class.GrXPFactory*, %class.GrProcessorAnalysisColor* dereferenceable(20), i32, %class.GrCaps* dereferenceable(232), i32) local_unnamed_addr #1 align 2 {
  %7 = icmp eq %class.GrXPFactory* %1, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %6
  %9 = bitcast %class.GrXPFactory* %1 to void (%class.sk_sp.1*, %class.GrXPFactory*, %class.GrProcessorAnalysisColor*, i32, %class.GrCaps*, i32)***
  %10 = load void (%class.sk_sp.1*, %class.GrXPFactory*, %class.GrProcessorAnalysisColor*, i32, %class.GrCaps*, i32)**, void (%class.sk_sp.1*, %class.GrXPFactory*, %class.GrProcessorAnalysisColor*, i32, %class.GrCaps*, i32)*** %9, align 8
  %11 = load void (%class.sk_sp.1*, %class.GrXPFactory*, %class.GrProcessorAnalysisColor*, i32, %class.GrCaps*, i32)*, void (%class.sk_sp.1*, %class.GrXPFactory*, %class.GrProcessorAnalysisColor*, i32, %class.GrCaps*, i32)** %10, align 8
  tail call void %11(%class.sk_sp.1* sret %0, %class.GrXPFactory* nonnull %1, %class.GrProcessorAnalysisColor* dereferenceable(20) %2, i32 %3, %class.GrCaps* dereferenceable(232) %4, i32 %5) #5
  br label %13

12:                                               ; preds = %6
  tail call void @_ZN21GrPorterDuffXPFactory24MakeSrcOverXferProcessorERK24GrProcessorAnalysisColor27GrProcessorAnalysisCoverageRK6GrCaps(%class.sk_sp.1* sret %0, %class.GrProcessorAnalysisColor* dereferenceable(20) %2, i32 %3, %class.GrCaps* dereferenceable(232) %4) #5
  br label %13

13:                                               ; preds = %12, %8
  ret void
}

declare void @_ZN21GrPorterDuffXPFactory24MakeSrcOverXferProcessorERK24GrProcessorAnalysisColor27GrProcessorAnalysisCoverageRK6GrCaps(%class.sk_sp.1* sret, %class.GrProcessorAnalysisColor* dereferenceable(20), i32, %class.GrCaps* dereferenceable(232)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11GrProcessorD2Ev(%class.GrProcessor*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15GrXferProcessorD0Ev(%class.GrXferProcessor*) unnamed_addr #3 comdat align 2 {
  tail call void @llvm.trap() #6
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK15GrXferProcessor15xferBarrierTypeERK6GrCaps(%class.GrXferProcessor*, %class.GrCaps* dereferenceable(232)) unnamed_addr #1 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK15GrXferProcessor20onHasSecondaryOutputEv(%class.GrXferProcessor*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK15GrXferProcessor14onGetBlendInfoEPNS_9BlendInfoE(%class.GrXferProcessor*, %"struct.GrXferProcessor::BlendInfo"*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nounwind }
attributes #6 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
