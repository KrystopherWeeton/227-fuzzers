; ModuleID = '../../third_party/openscreen/src/third_party/tinycbor/src/src/cborencoder.c'
source_filename = "../../third_party/openscreen/src/third_party/tinycbor/src/src/cborencoder.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.CborEncoder = type { %union.anon, i8*, i64, i32 }
%union.anon = type { i8* }

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @cbor_encoder_init(%struct.CborEncoder* nocapture, i8*, i64, i32) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.CborEncoder, %struct.CborEncoder* %0, i64 0, i32 0, i32 0
  store i8* %1, i8** %5, align 8
  %6 = getelementptr inbounds i8, i8* %1, i64 %2
  %7 = getelementptr inbounds %struct.CborEncoder, %struct.CborEncoder* %0, i64 0, i32 1
  store i8* %6, i8** %7, align 8
  %8 = getelementptr inbounds %struct.CborEncoder, %struct.CborEncoder* %0, i64 0, i32 2
  store i64 2, i64* %8, align 8
  %9 = getelementptr inbounds %struct.CborEncoder, %struct.CborEncoder* %0, i64 0, i32 3
  store i32 %3, i32* %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @cbor_encode_uint(%struct.CborEncoder* nocapture, i64) local_unnamed_addr #1 {
  %3 = alloca [2 x i64], align 16
  %4 = getelementptr inbounds %struct.CborEncoder, %struct.CborEncoder* %0, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %2
  %8 = add i64 %5, -1
  store i64 %8, i64* %4, align 8
  br label %9

9:                                                ; preds = %7, %2
  %10 = bitcast [2 x i64]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #5
  %11 = getelementptr inbounds [2 x i64], [2 x i64]* %3, i64 0, i64 0
  store i64 -6148914691236517206, i64* %11, align 16
  %12 = getelementptr inbounds [2 x i64], [2 x i64]* %3, i64 0, i64 1
  %13 = getelementptr inbounds [2 x i64], [2 x i64]* %3, i64 1
  %14 = bitcast [2 x i64]* %13 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 -1
  %16 = tail call i64 @llvm.bswap.i64(i64 %1) #5
  store i64 %16, i64* %12, align 8
  %17 = icmp ult i64 %1, 24
  br i1 %17, label %18, label %21

18:                                               ; preds = %9
  %19 = lshr i64 %16, 56
  %20 = trunc i64 %19 to i8
  store i8 %20, i8* %15, align 1
  br label %34

21:                                               ; preds = %9
  %22 = icmp ugt i64 %1, 255
  %23 = zext i1 %22 to i8
  %24 = icmp ugt i64 %1, 65535
  %25 = select i1 %22, i8 2, i8 1
  %26 = select i1 %24, i8 %25, i8 %23
  %27 = icmp ugt i64 %1, 4294967295
  %28 = zext i1 %27 to i8
  %29 = add nuw nsw i8 %26, %28
  %30 = zext i8 %29 to i64
  %31 = shl i64 -1, %30
  %32 = getelementptr inbounds i8, i8* %15, i64 %31
  %33 = or i8 %29, 24
  store i8 %33, i8* %32, align 1
  br label %34

34:                                               ; preds = %21, %18
  %35 = phi i8* [ %15, %18 ], [ %32, %21 ]
  %36 = ptrtoint [2 x i64]* %13 to i64
  %37 = ptrtoint i8* %35 to i64
  %38 = sub i64 %36, %37
  %39 = getelementptr inbounds %struct.CborEncoder, %struct.CborEncoder* %0, i64 0, i32 1
  %40 = bitcast i8** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %struct.CborEncoder* %0 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = sub nsw i64 %41, %43
  %45 = icmp slt i64 %44, %38
  br i1 %45, label %46, label %56

46:                                               ; preds = %34
  %47 = icmp eq i64 %41, 0
  br i1 %47, label %52, label %48

48:                                               ; preds = %46
  %49 = sub i64 %38, %41
  %50 = add i64 %49, %43
  %51 = bitcast %struct.CborEncoder* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 16, i1 false) #5
  br label %52

52:                                               ; preds = %48, %46
  %53 = phi i64 [ 0, %48 ], [ %43, %46 ]
  %54 = phi i64 [ %50, %48 ], [ %38, %46 ]
  %55 = add i64 %54, %53
  store i64 %55, i64* %42, align 8
  br label %61

56:                                               ; preds = %34
  %57 = inttoptr i64 %43 to i8*
  %58 = getelementptr inbounds %struct.CborEncoder, %struct.CborEncoder* %0, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %57, i8* align 1 %35, i64 %38, i1 false) #5
  %59 = load i8*, i8** %58, align 8
  %60 = getelementptr inbounds i8, i8* %59, i64 %38
  store i8* %60, i8** %58, align 8
  br label %61

61:                                               ; preds = %52, %56
  %62 = phi i32 [ -2147483648, %52 ], [ 0, %56 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #5
  ret i32 %62
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @cbor_encode_negative_int(%struct.CborEncoder* nocapture, i64) local_unnamed_addr #1 {
  %3 = alloca [2 x i64], align 16
  %4 = add i64 %1, -1
  %5 = getelementptr inbounds %struct.CborEncoder, %struct.CborEncoder* %0, i64 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %2
  %9 = add i64 %6, -1
  store i64 %9, i64* %5, align 8
  br label %10

10:                                               ; preds = %8, %2
  %11 = bitcast [2 x i64]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #5
  %12 = getelementptr inbounds [2 x i64], [2 x i64]* %3, i64 0, i64 0
  store i64 -6148914691236517206, i64* %12, align 16
  %13 = getelementptr inbounds [2 x i64], [2 x i64]* %3, i64 0, i64 1
  %14 = getelementptr inbounds [2 x i64], [2 x i64]* %3, i64 1
  %15 = bitcast [2 x i64]* %14 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 -1
  %17 = tail call i64 @llvm.bswap.i64(i64 %4) #5
  store i64 %17, i64* %13, align 8
  %18 = icmp ult i64 %4, 24
  br i1 %18, label %19, label %23

19:                                               ; preds = %10
  %20 = lshr i64 %17, 56
  %21 = trunc i64 %20 to i8
  %22 = add i8 %21, 32
  store i8 %22, i8* %16, align 1
  br label %36

23:                                               ; preds = %10
  %24 = icmp ugt i64 %4, 255
  %25 = zext i1 %24 to i8
  %26 = icmp ugt i64 %4, 65535
  %27 = select i1 %24, i8 2, i8 1
  %28 = select i1 %26, i8 %27, i8 %25
  %29 = icmp ugt i64 %4, 4294967295
  %30 = zext i1 %29 to i8
  %31 = add nuw nsw i8 %28, %30
  %32 = zext i8 %31 to i64
  %33 = shl i64 -1, %32
  %34 = getelementptr inbounds i8, i8* %16, i64 %33
  %35 = or i8 %31, 56
  store i8 %35, i8* %34, align 1
  br label %36

36:                                               ; preds = %23, %19
  %37 = phi i8* [ %16, %19 ], [ %34, %23 ]
  %38 = ptrtoint [2 x i64]* %14 to i64
  %39 = ptrtoint i8* %37 to i64
  %40 = sub i64 %38, %39
  %41 = getelementptr inbounds %struct.CborEncoder, %struct.CborEncoder* %0, i64 0, i32 1
  %42 = bitcast i8** %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %struct.CborEncoder* %0 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = sub nsw i64 %43, %45
  %47 = icmp slt i64 %46, %40
  br i1 %47, label %48, label %58

48:                                               ; preds = %36
  %49 = icmp eq i64 %43, 0
  br i1 %49, label %54, label %50

50:                                               ; preds = %48
  %51 = sub i64 %40, %43
  %52 = add i64 %51, %45
  %53 = bitcast %struct.CborEncoder* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 16, i1 false) #5
  br label %54

54:                                               ; preds = %50, %48
  %55 = phi i64 [ 0, %50 ], [ %45, %48 ]
  %56 = phi i64 [ %52, %50 ], [ %40, %48 ]
  %57 = add i64 %56, %55
  store i64 %57, i64* %44, align 8
  br label %63

58:                                               ; preds = %36
  %59 = inttoptr i64 %45 to i8*
  %60 = getelementptr inbounds %struct.CborEncoder, %struct.CborEncoder* %0, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %59, i8* align 1 %37, i64 %40, i1 false) #5
  %61 = load i8*, i8** %60, align 8
  %62 = getelementptr inbounds i8, i8* %61, i64 %40
  store i8* %62, i8** %60, align 8
  br label %63

63:                                               ; preds = %54, %58
  %64 = phi i32 [ -2147483648, %54 ], [ 0, %58 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #5
  ret i32 %64
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @cbor_encode_int(%struct.CborEncoder* nocapture, i64) local_unnamed_addr #1 {
  %3 = alloca [2 x i64], align 16
  %4 = ashr i64 %1, 63
  %5 = trunc i64 %4 to i8
  %6 = and i8 %5, 32
  %7 = xor i64 %4, %1
  %8 = getelementptr inbounds %struct.CborEncoder, %struct.CborEncoder* %0, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %2
  %12 = add i64 %9, -1
  store i64 %12, i64* %8, align 8
  br label %13

13:                                               ; preds = %11, %2
  %14 = bitcast [2 x i64]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #5
  %15 = getelementptr inbounds [2 x i64], [2 x i64]* %3, i64 0, i64 0
  store i64 -6148914691236517206, i64* %15, align 16
  %16 = getelementptr inbounds [2 x i64], [2 x i64]* %3, i64 0, i64 1
  %17 = getelementptr inbounds [2 x i64], [2 x i64]* %3, i64 1
  %18 = bitcast [2 x i64]* %17 to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 -1
  %20 = tail call i64 @llvm.bswap.i64(i64 %7) #5
  store i64 %20, i64* %16, align 8
  %21 = icmp ult i64 %7, 24
  br i1 %21, label %22, label %26

22:                                               ; preds = %13
  %23 = lshr i64 %20, 56
  %24 = trunc i64 %23 to i8
  %25 = add i8 %6, %24
  store i8 %25, i8* %19, align 1
  br label %40

26:                                               ; preds = %13
  %27 = icmp ugt i64 %7, 255
  %28 = zext i1 %27 to i8
  %29 = icmp ugt i64 %7, 65535
  %30 = select i1 %27, i8 2, i8 1
  %31 = select i1 %29, i8 %30, i8 %28
  %32 = icmp ugt i64 %7, 4294967295
  %33 = zext i1 %32 to i8
  %34 = add nuw nsw i8 %31, %33
  %35 = zext i8 %34 to i64
  %36 = shl i64 -1, %35
  %37 = getelementptr inbounds i8, i8* %19, i64 %36
  %38 = or i8 %6, %34
  %39 = or i8 %38, 24
  store i8 %39, i8* %37, align 1
  br label %40

40:                                               ; preds = %26, %22
  %41 = phi i8* [ %19, %22 ], [ %37, %26 ]
  %42 = ptrtoint [2 x i64]* %17 to i64
  %43 = ptrtoint i8* %41 to i64
  %44 = sub i64 %42, %43
  %45 = getelementptr inbounds %struct.CborEncoder, %struct.CborEncoder* %0, i64 0, i32 1
  %46 = bitcast i8** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %struct.CborEncoder* %0 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = sub nsw i64 %47, %49
  %51 = icmp slt i64 %50, %44
  br i1 %51, label %52, label %62

52:                                               ; preds = %40
  %53 = icmp eq i64 %47, 0
  br i1 %53, label %58, label %54

54:                                               ; preds = %52
  %55 = sub i64 %44, %47
  %56 = add i64 %55, %49
  %57 = bitcast %struct.CborEncoder* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 16, i1 false) #5
  br label %58

58:                                               ; preds = %54, %52
  %59 = phi i64 [ 0, %54 ], [ %49, %52 ]
  %60 = phi i64 [ %56, %54 ], [ %44, %52 ]
  %61 = add i64 %60, %59
  store i64 %61, i64* %48, align 8
  br label %67

62:                                               ; preds = %40
  %63 = inttoptr i64 %49 to i8*
  %64 = getelementptr inbounds %struct.CborEncoder, %struct.CborEncoder* %0, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %63, i8* align 1 %41, i64 %44, i1 false) #5
  %65 = load i8*, i8** %64, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %44
  store i8* %66, i8** %64, align 8
  br label %67

67:                                               ; preds = %58, %62
  %68 = phi i32 [ -2147483648, %58 ], [ 0, %62 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #5
  ret i32 %68
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @cbor_encode_simple_value(%struct.CborEncoder* nocapture, i8 zeroext) local_unnamed_addr #1 {
  %3 = alloca [2 x i64], align 16
  %4 = add i8 %1, -25
  %5 = icmp ult i8 %4, 7
  br i1 %5, label %57, label %6

6:                                                ; preds = %2
  %7 = zext i8 %1 to i64
  %8 = getelementptr inbounds %struct.CborEncoder, %struct.CborEncoder* %0, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %6
  %12 = add i64 %9, -1
  store i64 %12, i64* %8, align 8
  br label %13

13:                                               ; preds = %11, %6
  %14 = bitcast [2 x i64]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #5
  %15 = getelementptr inbounds [2 x i64], [2 x i64]* %3, i64 0, i64 0
  store i64 -6148914691236517206, i64* %15, align 16
  %16 = getelementptr inbounds [2 x i64], [2 x i64]* %3, i64 0, i64 1
  %17 = getelementptr inbounds [2 x i64], [2 x i64]* %3, i64 1
  %18 = bitcast [2 x i64]* %17 to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 -1
  %20 = tail call i64 @llvm.bswap.i64(i64 %7) #5
  store i64 %20, i64* %16, align 8
  %21 = icmp ult i8 %1, 24
  br i1 %21, label %22, label %26

22:                                               ; preds = %13
  %23 = lshr exact i64 %20, 56
  %24 = trunc i64 %23 to i8
  %25 = add i8 %24, -32
  store i8 %25, i8* %19, align 1
  br label %28

26:                                               ; preds = %13
  %27 = getelementptr inbounds i8, i8* %18, i64 -2
  store i8 -8, i8* %27, align 2
  br label %28

28:                                               ; preds = %26, %22
  %29 = phi i8* [ %19, %22 ], [ %27, %26 ]
  %30 = ptrtoint [2 x i64]* %17 to i64
  %31 = ptrtoint i8* %29 to i64
  %32 = sub i64 %30, %31
  %33 = getelementptr inbounds %struct.CborEncoder, %struct.CborEncoder* %0, i64 0, i32 1
  %34 = bitcast i8** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %struct.CborEncoder* %0 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = sub nsw i64 %35, %37
  %39 = icmp slt i64 %38, %32
  br i1 %39, label %40, label %50

40:                                               ; preds = %28
  %41 = icmp eq i64 %35, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %40
  %43 = sub i64 %32, %35
  %44 = add i64 %43, %37
  %45 = bitcast %struct.CborEncoder* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 16, i1 false) #5
  br label %46

46:                                               ; preds = %42, %40
  %47 = phi i64 [ 0, %42 ], [ %37, %40 ]
  %48 = phi i64 [ %44, %42 ], [ %32, %40 ]
  %49 = add i64 %48, %47
  store i64 %49, i64* %36, align 8
  br label %55

50:                                               ; preds = %28
  %51 = inttoptr i64 %37 to i8*
  %52 = getelementptr inbounds %struct.CborEncoder, %struct.CborEncoder* %0, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %51, i8* align 1 %29, i64 %32, i1 false) #5
  %53 = load i8*, i8** %52, align 8
  %54 = getelementptr inbounds i8, i8* %53, i64 %32
  store i8* %54, i8** %52, align 8
  br label %55

55:                                               ; preds = %46, %50
  %56 = phi i32 [ -2147483648, %46 ], [ 0, %50 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #5
  br label %57

57:                                               ; preds = %2, %55
  %58 = phi i32 [ %56, %55 ], [ 262, %2 ]
  ret i32 %58
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @cbor_encode_floating_point(%struct.CborEncoder* nocapture, i32, i8* nocapture readonly) local_unnamed_addr #1 {
  %4 = alloca [9 x i8], align 1
  %5 = getelementptr inbounds [9 x i8], [9 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 9, i8* nonnull %5)
  %6 = getelementptr inbounds [9 x i8], [9 x i8]* %4, i64 0, i64 1
  %7 = add i32 %1, -249
  %8 = icmp ult i32 %7, 3
  %9 = getelementptr inbounds [9 x i8], [9 x i8]* %4, i64 0, i64 1
  %10 = bitcast i8* %9 to i64*
  store i64 -6148914691236517206, i64* %10, align 1
  tail call void @llvm.assume(i1 %8)
  %11 = trunc i32 %1 to i8
  store i8 %11, i8* %5, align 1
  %12 = shl i32 2, %7
  switch i32 %1, label %23 [
    i32 251, label %13
    i32 250, label %18
  ]

13:                                               ; preds = %3
  %14 = bitcast i8* %2 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = tail call i64 @llvm.bswap.i64(i64 %15) #5
  %17 = bitcast i8* %6 to i64*
  store i64 %16, i64* %17, align 1
  br label %28

18:                                               ; preds = %3
  %19 = bitcast i8* %2 to i32*
  %20 = load i32, i32* %19, align 4
  %21 = tail call i32 @llvm.bswap.i32(i32 %20) #5
  %22 = bitcast i8* %6 to i32*
  store i32 %21, i32* %22, align 1
  br label %28

23:                                               ; preds = %3
  %24 = bitcast i8* %2 to i16*
  %25 = load i16, i16* %24, align 2
  %26 = tail call i16 @llvm.bswap.i16(i16 %25) #5
  %27 = bitcast i8* %6 to i16*
  store i16 %26, i16* %27, align 1
  br label %28

28:                                               ; preds = %18, %23, %13
  %29 = getelementptr inbounds %struct.CborEncoder, %struct.CborEncoder* %0, i64 0, i32 2
  %30 = load i64, i64* %29, align 8
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %34, label %32

32:                                               ; preds = %28
  %33 = add i64 %30, -1
  store i64 %33, i64* %29, align 8
  br label %34

34:                                               ; preds = %28, %32
  %35 = or i32 %12, 1
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds %struct.CborEncoder, %struct.CborEncoder* %0, i64 0, i32 1
  %38 = bitcast i8** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %struct.CborEncoder* %0 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = sub nsw i64 %39, %41
  %43 = icmp slt i64 %42, %36
  br i1 %43, label %44, label %54

44:                                               ; preds = %34
  %45 = icmp eq i64 %39, 0
  br i1 %45, label %50, label %46

46:                                               ; preds = %44
  %47 = sub i64 %36, %39
  %48 = add i64 %47, %41
  %49 = bitcast %struct.CborEncoder* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 16, i1 false) #5
  br label %50

50:                                               ; preds = %46, %44
  %51 = phi i64 [ 0, %46 ], [ %41, %44 ]
  %52 = phi i64 [ %48, %46 ], [ %36, %44 ]
  %53 = add i64 %52, %51
  store i64 %53, i64* %40, align 8
  br label %59

54:                                               ; preds = %34
  %55 = inttoptr i64 %41 to i8*
  %56 = getelementptr inbounds %struct.CborEncoder, %struct.CborEncoder* %0, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %55, i8* nonnull align 1 %5, i64 %36, i1 false) #5
  %57 = load i8*, i8** %56, align 8
  %58 = getelementptr inbounds i8, i8* %57, i64 %36
  store i8* %58, i8** %56, align 8
  br label %59

59:                                               ; preds = %50, %54
  %60 = phi i32 [ -2147483648, %50 ], [ 0, %54 ]
  call void @llvm.lifetime.end.p0i8(i64 9, i8* nonnull %5)
  ret i32 %60
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @cbor_encode_tag(%struct.CborEncoder* nocapture, i64) local_unnamed_addr #1 {
  %3 = alloca [2 x i64], align 16
  %4 = bitcast [2 x i64]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #5
  %5 = getelementptr inbounds [2 x i64], [2 x i64]* %3, i64 0, i64 0
  store i64 -6148914691236517206, i64* %5, align 16
  %6 = getelementptr inbounds [2 x i64], [2 x i64]* %3, i64 0, i64 1
  %7 = getelementptr inbounds [2 x i64], [2 x i64]* %3, i64 1
  %8 = bitcast [2 x i64]* %7 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 -1
  %10 = tail call i64 @llvm.bswap.i64(i64 %1) #5
  store i64 %10, i64* %6, align 8
  %11 = icmp ult i64 %1, 24
  br i1 %11, label %12, label %16

12:                                               ; preds = %2
  %13 = lshr i64 %10, 56
  %14 = trunc i64 %13 to i8
  %15 = add i8 %14, -64
  store i8 %15, i8* %9, align 1
  br label %29

16:                                               ; preds = %2
  %17 = icmp ugt i64 %1, 255
  %18 = zext i1 %17 to i8
  %19 = icmp ugt i64 %1, 65535
  %20 = select i1 %17, i8 2, i8 1
  %21 = select i1 %19, i8 %20, i8 %18
  %22 = icmp ugt i64 %1, 4294967295
  %23 = zext i1 %22 to i8
  %24 = add nuw nsw i8 %21, %23
  %25 = zext i8 %24 to i64
  %26 = shl i64 -1, %25
  %27 = getelementptr inbounds i8, i8* %9, i64 %26
  %28 = or i8 %24, -40
  store i8 %28, i8* %27, align 1
  br label %29

29:                                               ; preds = %16, %12
  %30 = phi i8* [ %9, %12 ], [ %27, %16 ]
  %31 = ptrtoint [2 x i64]* %7 to i64
  %32 = ptrtoint i8* %30 to i64
  %33 = sub i64 %31, %32
  %34 = getelementptr inbounds %struct.CborEncoder, %struct.CborEncoder* %0, i64 0, i32 1
  %35 = bitcast i8** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %struct.CborEncoder* %0 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = sub nsw i64 %36, %38
  %40 = icmp slt i64 %39, %33
  br i1 %40, label %41, label %51

41:                                               ; preds = %29
  %42 = icmp eq i64 %36, 0
  br i1 %42, label %47, label %43

43:                                               ; preds = %41
  %44 = sub i64 %33, %36
  %45 = add i64 %44, %38
  %46 = bitcast %struct.CborEncoder* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 16, i1 false) #5
  br label %47

47:                                               ; preds = %43, %41
  %48 = phi i64 [ 0, %43 ], [ %38, %41 ]
  %49 = phi i64 [ %45, %43 ], [ %33, %41 ]
  %50 = add i64 %49, %48
  store i64 %50, i64* %37, align 8
  br label %56

51:                                               ; preds = %29
  %52 = inttoptr i64 %38 to i8*
  %53 = getelementptr inbounds %struct.CborEncoder, %struct.CborEncoder* %0, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %52, i8* align 1 %30, i64 %33, i1 false) #5
  %54 = load i8*, i8** %53, align 8
  %55 = getelementptr inbounds i8, i8* %54, i64 %33
  store i8* %55, i8** %53, align 8
  br label %56

56:                                               ; preds = %47, %51
  %57 = phi i32 [ -2147483648, %47 ], [ 0, %51 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #5
  ret i32 %57
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @cbor_encode_byte_string(%struct.CborEncoder* nocapture, i8* nocapture readonly, i64) local_unnamed_addr #1 {
  %4 = tail call fastcc i32 @encode_string(%struct.CborEncoder* %0, i64 %2, i8 zeroext 64, i8* %1)
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @encode_string(%struct.CborEncoder* nocapture, i64, i8 zeroext, i8* nocapture readonly) unnamed_addr #1 {
  %5 = alloca [2 x i64], align 16
  %6 = getelementptr inbounds %struct.CborEncoder, %struct.CborEncoder* %0, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %4
  %10 = add i64 %7, -1
  store i64 %10, i64* %6, align 8
  br label %11

11:                                               ; preds = %9, %4
  %12 = bitcast [2 x i64]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #5
  %13 = getelementptr inbounds [2 x i64], [2 x i64]* %5, i64 0, i64 0
  store i64 -6148914691236517206, i64* %13, align 16
  %14 = getelementptr inbounds [2 x i64], [2 x i64]* %5, i64 0, i64 1
  %15 = getelementptr inbounds [2 x i64], [2 x i64]* %5, i64 1
  %16 = bitcast [2 x i64]* %15 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 -1
  %18 = tail call i64 @llvm.bswap.i64(i64 %1) #5
  store i64 %18, i64* %14, align 8
  %19 = icmp ult i64 %1, 24
  br i1 %19, label %20, label %24

20:                                               ; preds = %11
  %21 = lshr i64 %18, 56
  %22 = trunc i64 %21 to i8
  %23 = add i8 %22, %2
  br label %38

24:                                               ; preds = %11
  %25 = icmp ugt i64 %1, 255
  %26 = zext i1 %25 to i8
  %27 = icmp ugt i64 %1, 65535
  %28 = select i1 %25, i8 2, i8 1
  %29 = select i1 %27, i8 %28, i8 %26
  %30 = icmp ugt i64 %1, 4294967295
  %31 = zext i1 %30 to i8
  %32 = add nuw nsw i8 %29, %31
  %33 = zext i8 %32 to i64
  %34 = shl i64 -1, %33
  %35 = getelementptr inbounds i8, i8* %17, i64 %34
  %36 = add i8 %2, 24
  %37 = add i8 %36, %32
  br label %38

38:                                               ; preds = %24, %20
  %39 = phi i8* [ %35, %24 ], [ %17, %20 ]
  %40 = phi i8 [ %37, %24 ], [ %23, %20 ]
  store i8 %40, i8* %39, align 1
  %41 = ptrtoint [2 x i64]* %15 to i64
  %42 = ptrtoint i8* %39 to i64
  %43 = sub i64 %41, %42
  %44 = getelementptr inbounds %struct.CborEncoder, %struct.CborEncoder* %0, i64 0, i32 1
  %45 = bitcast i8** %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %struct.CborEncoder* %0 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = sub nsw i64 %46, %48
  %50 = icmp slt i64 %49, %43
  br i1 %50, label %51, label %57

51:                                               ; preds = %38
  %52 = icmp eq i64 %46, 0
  br i1 %52, label %64, label %53

53:                                               ; preds = %51
  %54 = sub i64 %43, %46
  %55 = add i64 %54, %48
  %56 = bitcast %struct.CborEncoder* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 16, i1 false) #5
  br label %64

57:                                               ; preds = %38
  %58 = inttoptr i64 %48 to i8*
  %59 = getelementptr inbounds %struct.CborEncoder, %struct.CborEncoder* %0, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %58, i8* align 1 %39, i64 %43, i1 false) #5
  %60 = load i8*, i8** %59, align 8
  %61 = getelementptr inbounds i8, i8* %60, i64 %43
  store i8* %61, i8** %59, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #5
  %62 = load i64, i64* %45, align 8
  %63 = ptrtoint i8* %61 to i64
  br label %68

64:                                               ; preds = %53, %51
  %65 = phi i64 [ 0, %53 ], [ %48, %51 ]
  %66 = phi i64 [ %55, %53 ], [ %43, %51 ]
  %67 = add i64 %66, %65
  store i64 %67, i64* %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #5
  br label %68

68:                                               ; preds = %57, %64
  %69 = phi i64 [ %63, %57 ], [ %67, %64 ]
  %70 = phi i64 [ %62, %57 ], [ 0, %64 ]
  %71 = sub nsw i64 %70, %69
  %72 = icmp slt i64 %71, %1
  br i1 %72, label %73, label %83

73:                                               ; preds = %68
  %74 = icmp eq i64 %70, 0
  br i1 %74, label %79, label %75

75:                                               ; preds = %73
  %76 = sub i64 %1, %70
  %77 = add i64 %76, %69
  %78 = bitcast %struct.CborEncoder* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 16, i1 false) #5
  br label %79

79:                                               ; preds = %75, %73
  %80 = phi i64 [ 0, %75 ], [ %69, %73 ]
  %81 = phi i64 [ %77, %75 ], [ %1, %73 ]
  %82 = add i64 %81, %80
  store i64 %82, i64* %47, align 8
  br label %88

83:                                               ; preds = %68
  %84 = inttoptr i64 %69 to i8*
  %85 = getelementptr inbounds %struct.CborEncoder, %struct.CborEncoder* %0, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %84, i8* align 1 %3, i64 %1, i1 false) #5
  %86 = load i8*, i8** %85, align 8
  %87 = getelementptr inbounds i8, i8* %86, i64 %1
  store i8* %87, i8** %85, align 8
  br label %88

88:                                               ; preds = %79, %83
  %89 = phi i32 [ -2147483648, %79 ], [ 0, %83 ]
  ret i32 %89
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @cbor_encode_text_string(%struct.CborEncoder* nocapture, i8* nocapture readonly, i64) local_unnamed_addr #1 {
  %4 = tail call fastcc i32 @encode_string(%struct.CborEncoder* %0, i64 %2, i8 zeroext 96, i8* %1)
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @cbor_encoder_create_array(%struct.CborEncoder* nocapture, %struct.CborEncoder* nocapture, i64) local_unnamed_addr #1 {
  %4 = tail call fastcc i32 @create_container(%struct.CborEncoder* %0, %struct.CborEncoder* %1, i64 %2, i8 zeroext -128)
  ret i32 %4
}

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc i32 @create_container(%struct.CborEncoder* nocapture, %struct.CborEncoder* nocapture, i64, i8 zeroext) unnamed_addr #3 {
  %5 = alloca [2 x i64], align 16
  %6 = bitcast %struct.CborEncoder* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %struct.CborEncoder* %1 to i64*
  store i64 %7, i64* %8, align 8
  %9 = getelementptr inbounds %struct.CborEncoder, %struct.CborEncoder* %0, i64 0, i32 1
  %10 = bitcast i8** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %struct.CborEncoder, %struct.CborEncoder* %1, i64 0, i32 1
  %13 = bitcast i8** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = getelementptr inbounds %struct.CborEncoder, %struct.CborEncoder* %0, i64 0, i32 2
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %19, label %17

17:                                               ; preds = %4
  %18 = add i64 %15, -1
  store i64 %18, i64* %14, align 8
  br label %19

19:                                               ; preds = %4, %17
  %20 = add i64 %2, 1
  %21 = getelementptr inbounds %struct.CborEncoder, %struct.CborEncoder* %1, i64 0, i32 2
  store i64 %20, i64* %21, align 8
  %22 = and i8 %3, 32
  %23 = zext i8 %22 to i32
  %24 = getelementptr inbounds %struct.CborEncoder, %struct.CborEncoder* %1, i64 0, i32 3
  store i32 %23, i32* %24, align 8
  %25 = icmp eq i64 %2, -1
  br i1 %25, label %26, label %47

26:                                               ; preds = %19
  %27 = or i32 %23, 4
  store i32 %27, i32* %24, align 8
  %28 = load i64, i64* %13, align 8
  %29 = load i64, i64* %8, align 8
  %30 = icmp sgt i64 %28, %29
  br i1 %30, label %41, label %31

31:                                               ; preds = %26
  %32 = icmp eq i64 %28, 0
  br i1 %32, label %37, label %33

33:                                               ; preds = %31
  %34 = sub i64 1, %28
  %35 = add i64 %34, %29
  %36 = bitcast %struct.CborEncoder* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 16, i1 false) #5
  br label %37

37:                                               ; preds = %33, %31
  %38 = phi i64 [ 0, %33 ], [ %29, %31 ]
  %39 = phi i64 [ %35, %33 ], [ 1, %31 ]
  %40 = add i64 %39, %38
  store i64 %40, i64* %8, align 8
  br label %105

41:                                               ; preds = %26
  %42 = add i8 %3, 31
  %43 = inttoptr i64 %29 to i8*
  %44 = getelementptr inbounds %struct.CborEncoder, %struct.CborEncoder* %1, i64 0, i32 0, i32 0
  store i8 %42, i8* %43, align 1
  %45 = load i8*, i8** %44, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 1
  store i8* %46, i8** %44, align 8
  br label %105

47:                                               ; preds = %19
  %48 = icmp eq i8 %22, 0
  br i1 %48, label %51, label %49

49:                                               ; preds = %47
  %50 = add i64 %20, %2
  store i64 %50, i64* %21, align 8
  br label %51

51:                                               ; preds = %47, %49
  %52 = bitcast [2 x i64]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52) #5
  %53 = getelementptr inbounds [2 x i64], [2 x i64]* %5, i64 0, i64 0
  store i64 -6148914691236517206, i64* %53, align 16
  %54 = getelementptr inbounds [2 x i64], [2 x i64]* %5, i64 0, i64 1
  %55 = getelementptr inbounds [2 x i64], [2 x i64]* %5, i64 1
  %56 = bitcast [2 x i64]* %55 to i8*
  %57 = getelementptr inbounds i8, i8* %56, i64 -1
  %58 = tail call i64 @llvm.bswap.i64(i64 %2) #5
  store i64 %58, i64* %54, align 8
  %59 = icmp ult i64 %2, 24
  br i1 %59, label %60, label %64

60:                                               ; preds = %51
  %61 = lshr i64 %58, 56
  %62 = trunc i64 %61 to i8
  %63 = add i8 %62, %3
  br label %78

64:                                               ; preds = %51
  %65 = icmp ugt i64 %2, 255
  %66 = zext i1 %65 to i8
  %67 = icmp ugt i64 %2, 65535
  %68 = select i1 %65, i8 2, i8 1
  %69 = select i1 %67, i8 %68, i8 %66
  %70 = icmp ugt i64 %2, 4294967295
  %71 = zext i1 %70 to i8
  %72 = add nuw nsw i8 %69, %71
  %73 = zext i8 %72 to i64
  %74 = shl i64 -1, %73
  %75 = getelementptr inbounds i8, i8* %57, i64 %74
  %76 = add i8 %3, 24
  %77 = add i8 %76, %72
  br label %78

78:                                               ; preds = %64, %60
  %79 = phi i8* [ %75, %64 ], [ %57, %60 ]
  %80 = phi i8 [ %77, %64 ], [ %63, %60 ]
  store i8 %80, i8* %79, align 1
  %81 = ptrtoint [2 x i64]* %55 to i64
  %82 = ptrtoint i8* %79 to i64
  %83 = sub i64 %81, %82
  %84 = load i64, i64* %13, align 8
  %85 = load i64, i64* %8, align 8
  %86 = sub nsw i64 %84, %85
  %87 = icmp slt i64 %86, %83
  br i1 %87, label %88, label %98

88:                                               ; preds = %78
  %89 = icmp eq i64 %84, 0
  br i1 %89, label %94, label %90

90:                                               ; preds = %88
  %91 = sub i64 %83, %84
  %92 = add i64 %91, %85
  %93 = bitcast %struct.CborEncoder* %1 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %93, i8 0, i64 16, i1 false) #5
  br label %94

94:                                               ; preds = %90, %88
  %95 = phi i64 [ 0, %90 ], [ %85, %88 ]
  %96 = phi i64 [ %92, %90 ], [ %83, %88 ]
  %97 = add i64 %96, %95
  store i64 %97, i64* %8, align 8
  br label %103

98:                                               ; preds = %78
  %99 = inttoptr i64 %85 to i8*
  %100 = getelementptr inbounds %struct.CborEncoder, %struct.CborEncoder* %1, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %99, i8* align 1 %79, i64 %83, i1 false) #5
  %101 = load i8*, i8** %100, align 8
  %102 = getelementptr inbounds i8, i8* %101, i64 %83
  store i8* %102, i8** %100, align 8
  br label %103

103:                                              ; preds = %94, %98
  %104 = phi i32 [ -2147483648, %94 ], [ 0, %98 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52) #5
  br label %105

105:                                              ; preds = %41, %37, %103
  %106 = phi i32 [ %104, %103 ], [ -2147483648, %37 ], [ 0, %41 ]
  ret i32 %106
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @cbor_encoder_create_map(%struct.CborEncoder* nocapture, %struct.CborEncoder* nocapture, i64) local_unnamed_addr #1 {
  %4 = icmp slt i64 %2, -1
  br i1 %4, label %7, label %5

5:                                                ; preds = %3
  %6 = tail call fastcc i32 @create_container(%struct.CborEncoder* %0, %struct.CborEncoder* %1, i64 %2, i8 zeroext -96)
  br label %7

7:                                                ; preds = %3, %5
  %8 = phi i32 [ %6, %5 ], [ 1024, %3 ]
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @cbor_encoder_close_container(%struct.CborEncoder* nocapture, %struct.CborEncoder* nocapture readonly) local_unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.CborEncoder, %struct.CborEncoder* %1, i64 0, i32 1
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %struct.CborEncoder, %struct.CborEncoder* %0, i64 0, i32 1
  %7 = bitcast i8** %6 to i64*
  store i64 %5, i64* %7, align 8
  %8 = bitcast %struct.CborEncoder* %1 to i64*
  %9 = bitcast %struct.CborEncoder* %0 to i64*
  %10 = load i64, i64* %8, align 8
  store i64 %10, i64* %9, align 8
  %11 = getelementptr inbounds %struct.CborEncoder, %struct.CborEncoder* %1, i64 0, i32 3
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %32, label %15

15:                                               ; preds = %2
  %16 = icmp sgt i64 %5, %10
  br i1 %16, label %27, label %17

17:                                               ; preds = %15
  %18 = icmp eq i64 %5, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %17
  %20 = sub i64 1, %5
  %21 = add i64 %20, %10
  %22 = bitcast %struct.CborEncoder* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false) #5
  br label %23

23:                                               ; preds = %19, %17
  %24 = phi i64 [ 0, %19 ], [ %10, %17 ]
  %25 = phi i64 [ %21, %19 ], [ 1, %17 ]
  %26 = add i64 %25, %24
  store i64 %26, i64* %9, align 8
  br label %42

27:                                               ; preds = %15
  %28 = inttoptr i64 %10 to i8*
  %29 = getelementptr inbounds %struct.CborEncoder, %struct.CborEncoder* %0, i64 0, i32 0, i32 0
  store i8 -1, i8* %28, align 1
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds i8, i8* %30, i64 1
  store i8* %31, i8** %29, align 8
  br label %42

32:                                               ; preds = %2
  %33 = getelementptr inbounds %struct.CborEncoder, %struct.CborEncoder* %1, i64 0, i32 2
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %34, 1
  br i1 %35, label %39, label %36

36:                                               ; preds = %32
  %37 = icmp eq i64 %34, 0
  %38 = select i1 %37, i32 768, i32 769
  br label %42

39:                                               ; preds = %32
  %40 = icmp eq i64 %5, 0
  %41 = select i1 %40, i32 -2147483648, i32 0
  br label %42

42:                                               ; preds = %27, %23, %39, %36
  %43 = phi i32 [ %38, %36 ], [ %41, %39 ], [ -2147483648, %23 ], [ 0, %27 ]
  ret i32 %43
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.bswap.i64(i64) #4

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.bswap.i32(i32) #4

; Function Attrs: nounwind readnone speculatable
declare i16 @llvm.bswap.i16(i16) #4

; Function Attrs: nounwind
declare void @llvm.assume(i1) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
