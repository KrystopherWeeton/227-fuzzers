; ModuleID = '../../third_party/crashpad/crashpad/util/misc/random_string.cc'
source_filename = "../../third_party/crashpad/crashpad/util/misc/random_string.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8crashpad12RandomStringEv(%"class.std::__1::basic_string"* noalias sret) local_unnamed_addr #0 {
  %2 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 24, i1 false) #3
  %3 = tail call i32 @_ZN4base7RandIntEii(i32 65, i32 90) #3
  %4 = trunc i32 %3 to i8
  %5 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEmc(%"class.std::__1::basic_string"* %0, i64 1, i8 signext %4) #3
  %6 = tail call i32 @_ZN4base7RandIntEii(i32 65, i32 90) #3
  %7 = trunc i32 %6 to i8
  %8 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEmc(%"class.std::__1::basic_string"* %0, i64 1, i8 signext %7) #3
  %9 = tail call i32 @_ZN4base7RandIntEii(i32 65, i32 90) #3
  %10 = trunc i32 %9 to i8
  %11 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEmc(%"class.std::__1::basic_string"* %0, i64 1, i8 signext %10) #3
  %12 = tail call i32 @_ZN4base7RandIntEii(i32 65, i32 90) #3
  %13 = trunc i32 %12 to i8
  %14 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEmc(%"class.std::__1::basic_string"* %0, i64 1, i8 signext %13) #3
  %15 = tail call i32 @_ZN4base7RandIntEii(i32 65, i32 90) #3
  %16 = trunc i32 %15 to i8
  %17 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEmc(%"class.std::__1::basic_string"* %0, i64 1, i8 signext %16) #3
  %18 = tail call i32 @_ZN4base7RandIntEii(i32 65, i32 90) #3
  %19 = trunc i32 %18 to i8
  %20 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEmc(%"class.std::__1::basic_string"* %0, i64 1, i8 signext %19) #3
  %21 = tail call i32 @_ZN4base7RandIntEii(i32 65, i32 90) #3
  %22 = trunc i32 %21 to i8
  %23 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEmc(%"class.std::__1::basic_string"* %0, i64 1, i8 signext %22) #3
  %24 = tail call i32 @_ZN4base7RandIntEii(i32 65, i32 90) #3
  %25 = trunc i32 %24 to i8
  %26 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEmc(%"class.std::__1::basic_string"* %0, i64 1, i8 signext %25) #3
  %27 = tail call i32 @_ZN4base7RandIntEii(i32 65, i32 90) #3
  %28 = trunc i32 %27 to i8
  %29 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEmc(%"class.std::__1::basic_string"* %0, i64 1, i8 signext %28) #3
  %30 = tail call i32 @_ZN4base7RandIntEii(i32 65, i32 90) #3
  %31 = trunc i32 %30 to i8
  %32 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEmc(%"class.std::__1::basic_string"* %0, i64 1, i8 signext %31) #3
  %33 = tail call i32 @_ZN4base7RandIntEii(i32 65, i32 90) #3
  %34 = trunc i32 %33 to i8
  %35 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEmc(%"class.std::__1::basic_string"* %0, i64 1, i8 signext %34) #3
  %36 = tail call i32 @_ZN4base7RandIntEii(i32 65, i32 90) #3
  %37 = trunc i32 %36 to i8
  %38 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEmc(%"class.std::__1::basic_string"* %0, i64 1, i8 signext %37) #3
  %39 = tail call i32 @_ZN4base7RandIntEii(i32 65, i32 90) #3
  %40 = trunc i32 %39 to i8
  %41 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEmc(%"class.std::__1::basic_string"* %0, i64 1, i8 signext %40) #3
  %42 = tail call i32 @_ZN4base7RandIntEii(i32 65, i32 90) #3
  %43 = trunc i32 %42 to i8
  %44 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEmc(%"class.std::__1::basic_string"* %0, i64 1, i8 signext %43) #3
  %45 = tail call i32 @_ZN4base7RandIntEii(i32 65, i32 90) #3
  %46 = trunc i32 %45 to i8
  %47 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEmc(%"class.std::__1::basic_string"* %0, i64 1, i8 signext %46) #3
  %48 = tail call i32 @_ZN4base7RandIntEii(i32 65, i32 90) #3
  %49 = trunc i32 %48 to i8
  %50 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEmc(%"class.std::__1::basic_string"* %0, i64 1, i8 signext %49) #3
  ret void
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEmc(%"class.std::__1::basic_string"*, i64, i8 signext) local_unnamed_addr #1

declare i32 @_ZN4base7RandIntEii(i32, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
