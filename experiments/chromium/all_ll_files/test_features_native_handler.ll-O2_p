; ModuleID = '../../extensions/renderer/test_features_native_handler.cc'
source_filename = "../../extensions/renderer/test_features_native_handler.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.extensions::TestFeaturesNativeHandler" = type { %"class.extensions::ObjectBackedNativeHandler" }
%"class.extensions::ObjectBackedNativeHandler" = type { %"class.extensions::NativeHandler.base", i32, %"class.v8::PersistentValueVector", %"class.extensions::ScriptContext"*, %"class.v8::Global.30" }
%"class.extensions::NativeHandler.base" = type <{ i32 (...)**, i8 }>
%"class.v8::PersistentValueVector" = type { %"class.v8::Isolate"*, %"class.std::__1::vector" }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i64*, i64*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i64* }
%"class.v8::Global.30" = type { %"class.v8::PersistentBase.31" }
%"class.v8::PersistentBase.31" = type { %"class.v8::ObjectTemplate"* }
%"class.v8::ObjectTemplate" = type { i8 }
%"class.extensions::ScriptContext" = type <{ i8, [7 x i8], %"class.v8::Global", %"class.blink::WebLocalFrame"*, %class.scoped_refptr, i32, [4 x i8], %class.scoped_refptr, i32, [4 x i8], %"class.base::UnguessableToken", %"class.std::__1::unique_ptr", %"class.extensions::SafeBuiltins", %"class.extensions::APIPermissionSet", %"class.std::__1::vector.12", %"class.v8::Isolate"*, %class.GURL, %class.GURL, i64, %"class.base::ThreadChecker", [7 x i8] }>
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%"class.blink::WebLocalFrame" = type opaque
%class.scoped_refptr = type { %"class.extensions::Extension"* }
%"class.extensions::Extension" = type opaque
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.extensions::ModuleSystem"* }
%"class.extensions::ModuleSystem" = type { %"class.extensions::ObjectBackedNativeHandler", %"class.extensions::ScriptContext"*, %"class.extensions::SourceMap"*, %"class.std::__1::map.32", i32, %"class.std::__1::unique_ptr.43", %"class.std::__1::set", %"class.std::__1::vector.56", %"class.v8::Eternal", %"class.base::RepeatingCallback", %"class.std::__1::set" }
%"class.extensions::SourceMap" = type opaque
%"class.std::__1::map.32" = type { %"class.std::__1::__tree.33" }
%"class.std::__1::__tree.33" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.34", %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { i64 }
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.extensions::ModuleSystem::ExceptionHandler"* }
%"class.extensions::ModuleSystem::ExceptionHandler" = type { i32 (...)**, %"class.extensions::ScriptContext"* }
%"class.std::__1::vector.56" = type { %"class.std::__1::__vector_base.57" }
%"class.std::__1::__vector_base.57" = type { %"class.std::__1::unique_ptr.58"*, %"class.std::__1::unique_ptr.58"*, %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::unique_ptr.58" = type opaque
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.std::__1::unique_ptr.58"* }
%"class.v8::Eternal" = type { %"class.v8::FunctionTemplate"* }
%"class.v8::FunctionTemplate" = type { i8 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.64 }
%class.scoped_refptr.64 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.65" }
%"struct.std::__1::__atomic_base.65" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::set" = type { %"class.std::__1::__tree.49" }
%"class.std::__1::__tree.49" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.50", %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.extensions::SafeBuiltins" = type { %"class.extensions::ScriptContext"* }
%"class.extensions::APIPermissionSet" = type { %"class.extensions::BaseSetOperators" }
%"class.extensions::BaseSetOperators" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.4", %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::vector.12" = type { %"class.std::__1::__vector_base.13" }
%"class.std::__1::__vector_base.13" = type { %"class.base::OnceCallback"*, %"class.base::OnceCallback"*, %"class.std::__1::__compressed_pair.14" }
%"class.base::OnceCallback" = type opaque
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.base::OnceCallback"* }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.24" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %class.GURL* }
%"class.base::ThreadChecker" = type { i8 }
%"class.base::RepeatingCallback.66" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.extensions::ExtensionsClient" = type <{ i32 (...)**, %"class.std::__1::vector.102", i8, [7 x i8] }>
%"class.std::__1::vector.102" = type { %"class.std::__1::__vector_base.103" }
%"class.std::__1::__vector_base.103" = type { %"class.std::__1::unique_ptr.104"*, %"class.std::__1::unique_ptr.104"*, %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::unique_ptr.104" = type opaque
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.std::__1::unique_ptr.104"* }
%"class.extensions::JSONFeatureProviderSource" = type { %"class.std::__1::basic_string", %"class.base::DictionaryValue" }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.70" }
%"union.absl::variant_internal::DestructibleUnionImpl.70" = type { %"union.absl::variant_internal::DestructibleUnionImpl.71" }
%"union.absl::variant_internal::DestructibleUnionImpl.71" = type { %"union.absl::variant_internal::DestructibleUnionImpl.72" }
%"union.absl::variant_internal::DestructibleUnionImpl.72" = type { %"union.absl::variant_internal::DestructibleUnionImpl.73" }
%"union.absl::variant_internal::DestructibleUnionImpl.73" = type { %"class.std::__1::basic_string" }
%"class.content::V8ValueConverter" = type { %"class.blink::WebV8ValueConverter" }
%"class.blink::WebV8ValueConverter" = type { i32 (...)** }
%"class.v8::internal::Isolate" = type opaque
%"class.v8::Value" = type { i8 }
%"class.v8::Object" = type { i8 }

$_ZN10extensions25TestFeaturesNativeHandlerD0Ev = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN10extensions25TestFeaturesNativeHandlerEFvRKN2v820FunctionCallbackInfoINS5_5ValueEEEEJNS0_17UnretainedWrapperIS4_EEEEEFvSA_EE3RunEPNS0_13BindStateBaseESA_ = comdat any

$_ZN4base8internal9BindStateIMN10extensions25TestFeaturesNativeHandlerEFvRKN2v820FunctionCallbackInfoINS4_5ValueEEEEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

@_ZTVN10extensions25TestFeaturesNativeHandlerE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.extensions::ObjectBackedNativeHandler"*)* @_ZN10extensions25ObjectBackedNativeHandlerD2Ev to i8*), i8* bitcast (void (%"class.extensions::TestFeaturesNativeHandler"*)* @_ZN10extensions25TestFeaturesNativeHandlerD0Ev to i8*), i8* bitcast (void (%"class.extensions::ObjectBackedNativeHandler"*)* @_ZN10extensions25ObjectBackedNativeHandler10InitializeEv to i8*), i8* bitcast (i1 (%"class.extensions::ObjectBackedNativeHandler"*)* @_ZN10extensions25ObjectBackedNativeHandler13IsInitializedEv to i8*), i8* bitcast (%"class.v8::Object"* (%"class.extensions::ObjectBackedNativeHandler"*)* @_ZN10extensions25ObjectBackedNativeHandler11NewInstanceEv to i8*), i8* bitcast (void (%"class.extensions::ObjectBackedNativeHandler"*)* @_ZN10extensions25ObjectBackedNativeHandler10InvalidateEv to i8*), i8* bitcast (void (%"class.extensions::TestFeaturesNativeHandler"*)* @_ZN10extensions25TestFeaturesNativeHandler9AddRoutesEv to i8*)] }, align 8
@.str = private unnamed_addr constant [15 x i8] c"GetAPIFeatures\00", align 1

@_ZN10extensions25TestFeaturesNativeHandlerC1EPNS_13ScriptContextE = hidden unnamed_addr alias void (%"class.extensions::TestFeaturesNativeHandler"*, %"class.extensions::ScriptContext"*), void (%"class.extensions::TestFeaturesNativeHandler"*, %"class.extensions::ScriptContext"*)* @_ZN10extensions25TestFeaturesNativeHandlerC2EPNS_13ScriptContextE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions25TestFeaturesNativeHandlerC2EPNS_13ScriptContextE(%"class.extensions::TestFeaturesNativeHandler"*, %"class.extensions::ScriptContext"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.extensions::TestFeaturesNativeHandler", %"class.extensions::TestFeaturesNativeHandler"* %0, i64 0, i32 0
  tail call void @_ZN10extensions25ObjectBackedNativeHandlerC2EPNS_13ScriptContextE(%"class.extensions::ObjectBackedNativeHandler"* %3, %"class.extensions::ScriptContext"* %1) #7
  %4 = getelementptr inbounds %"class.extensions::TestFeaturesNativeHandler", %"class.extensions::TestFeaturesNativeHandler"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN10extensions25TestFeaturesNativeHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  ret void
}

declare void @_ZN10extensions25ObjectBackedNativeHandlerC2EPNS_13ScriptContextE(%"class.extensions::ObjectBackedNativeHandler"*, %"class.extensions::ScriptContext"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions25TestFeaturesNativeHandler9AddRoutesEv(%"class.extensions::TestFeaturesNativeHandler"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.base::RepeatingCallback.66", align 8
  %5 = getelementptr inbounds %"class.extensions::TestFeaturesNativeHandler", %"class.extensions::TestFeaturesNativeHandler"* %0, i64 0, i32 0
  %6 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #7
  %7 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  store i8 14, i8* %8, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 1 getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i64 14, i1 false) #7
  %9 = getelementptr inbounds i8, i8* %6, i64 14
  store i8 0, i8* %9, align 2
  %10 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #7
  %11 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  store i8 4, i8* %12, align 1
  %13 = bitcast %"class.std::__1::basic_string"* %3 to i32*
  store i32 1953719668, i32* %13, align 8
  %14 = getelementptr inbounds i8, i8* %10, i64 4
  store i8 0, i8* %14, align 4
  %15 = ptrtoint %"class.extensions::TestFeaturesNativeHandler"* %0 to i64
  %16 = tail call i8* @_Znwm(i64 56) #8, !noalias !2
  %17 = bitcast i8* %16 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %17, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.v8::FunctionCallbackInfo"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN10extensions25TestFeaturesNativeHandlerEFvRKN2v820FunctionCallbackInfoINS5_5ValueEEEEJNS0_17UnretainedWrapperIS4_EEEEEFvSA_EE3RunEPNS0_13BindStateBaseESA_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN10extensions25TestFeaturesNativeHandlerEFvRKN2v820FunctionCallbackInfoINS4_5ValueEEEEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #7, !noalias !2
  %18 = getelementptr inbounds i8, i8* %16, i64 32
  %19 = bitcast i8* %18 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.extensions::TestFeaturesNativeHandler"*, %"class.v8::FunctionCallbackInfo"*)* @_ZN10extensions25TestFeaturesNativeHandler14GetAPIFeaturesERKN2v820FunctionCallbackInfoINS1_5ValueEEE to i64), i64 0>, <2 x i64>* %19, align 8, !noalias !2
  %20 = getelementptr inbounds i8, i8* %16, i64 48
  %21 = bitcast i8* %20 to i64*
  store i64 %15, i64* %21, align 8, !noalias !2
  %22 = bitcast %"class.base::RepeatingCallback.66"* %4 to i8**
  store i8* %16, i8** %22, align 8, !alias.scope !2
  call void @_ZN10extensions25ObjectBackedNativeHandler20RouteHandlerFunctionERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_N4base17RepeatingCallbackIFvRKN2v820FunctionCallbackInfoINSC_5ValueEEEEEE(%"class.extensions::ObjectBackedNativeHandler"* %5, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3, %"class.base::RepeatingCallback.66"* nonnull %4) #7
  %23 = getelementptr inbounds %"class.base::RepeatingCallback.66", %"class.base::RepeatingCallback.66"* %4, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %23) #7
  %24 = load i8, i8* %12, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %1
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @_ZdlPv(i8* %28) #8
  br label %29

29:                                               ; preds = %1, %26
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #7
  %30 = load i8, i8* %8, align 1
  %31 = icmp slt i8 %30, 0
  br i1 %31, label %32, label %35

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  call void @_ZdlPv(i8* %34) #8
  br label %35

35:                                               ; preds = %29, %32
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #7
  ret void
}

declare void @_ZN10extensions25ObjectBackedNativeHandler20RouteHandlerFunctionERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_N4base17RepeatingCallbackIFvRKN2v820FunctionCallbackInfoINSC_5ValueEEEEEE(%"class.extensions::ObjectBackedNativeHandler"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), %"class.base::RepeatingCallback.66"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions25TestFeaturesNativeHandler14GetAPIFeaturesERKN2v820FunctionCallbackInfoINS1_5ValueEEE(%"class.extensions::TestFeaturesNativeHandler"* nocapture readonly, %"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 align 2 {
  %3 = tail call %"class.extensions::ExtensionsClient"* @_ZN10extensions16ExtensionsClient3GetEv() #7
  %4 = tail call %"class.extensions::JSONFeatureProviderSource"* @_ZNK10extensions16ExtensionsClient22CreateAPIFeatureSourceEv(%"class.extensions::ExtensionsClient"* %3) #7
  %5 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %1, i64 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = getelementptr inbounds i64, i64* %6, i64 3
  %8 = tail call %"class.content::V8ValueConverter"* @_ZN7content16V8ValueConverter6CreateEv() #7
  %9 = getelementptr inbounds %"class.extensions::JSONFeatureProviderSource", %"class.extensions::JSONFeatureProviderSource"* %4, i64 0, i32 1, i32 0
  %10 = getelementptr inbounds %"class.extensions::TestFeaturesNativeHandler", %"class.extensions::TestFeaturesNativeHandler"* %0, i64 0, i32 0, i32 3
  %11 = load %"class.extensions::ScriptContext"*, %"class.extensions::ScriptContext"** %10, align 8
  %12 = getelementptr inbounds %"class.extensions::ScriptContext", %"class.extensions::ScriptContext"* %11, i64 0, i32 2, i32 0, i32 0
  %13 = load %"class.v8::Context"*, %"class.v8::Context"** %12, align 8
  %14 = icmp eq %"class.v8::Context"* %13, null
  br i1 %14, label %23, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.extensions::ScriptContext", %"class.extensions::ScriptContext"* %11, i64 0, i32 15
  %17 = bitcast %"class.v8::Isolate"** %16 to %"class.v8::internal::Isolate"**
  %18 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %17, align 8
  %19 = bitcast %"class.v8::Context"* %13 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %18, i64 %20) #7
  %22 = bitcast i64* %21 to %"class.v8::Context"*
  br label %23

23:                                               ; preds = %2, %15
  %24 = phi %"class.v8::Context"* [ %22, %15 ], [ null, %2 ]
  %25 = bitcast %"class.content::V8ValueConverter"* %8 to %"class.v8::Value"* (%"class.content::V8ValueConverter"*, %"class.base::Value"*, %"class.v8::Context"*)***
  %26 = load %"class.v8::Value"* (%"class.content::V8ValueConverter"*, %"class.base::Value"*, %"class.v8::Context"*)**, %"class.v8::Value"* (%"class.content::V8ValueConverter"*, %"class.base::Value"*, %"class.v8::Context"*)*** %25, align 8
  %27 = getelementptr inbounds %"class.v8::Value"* (%"class.content::V8ValueConverter"*, %"class.base::Value"*, %"class.v8::Context"*)*, %"class.v8::Value"* (%"class.content::V8ValueConverter"*, %"class.base::Value"*, %"class.v8::Context"*)** %26, i64 4
  %28 = load %"class.v8::Value"* (%"class.content::V8ValueConverter"*, %"class.base::Value"*, %"class.v8::Context"*)*, %"class.v8::Value"* (%"class.content::V8ValueConverter"*, %"class.base::Value"*, %"class.v8::Context"*)** %27, align 8
  %29 = tail call %"class.v8::Value"* %28(%"class.content::V8ValueConverter"* %8, %"class.base::Value"* %9, %"class.v8::Context"* %24) #7
  %30 = icmp eq %"class.v8::Value"* %29, null
  %31 = bitcast %"class.v8::Value"* %29 to i64*
  %32 = getelementptr inbounds i64, i64* %6, i64 2
  %33 = select i1 %30, i64* %32, i64* %31, !prof !7
  %34 = load i64, i64* %33, align 8
  store i64 %34, i64* %7, align 8
  %35 = icmp eq %"class.content::V8ValueConverter"* %8, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %23
  %37 = bitcast %"class.content::V8ValueConverter"* %8 to void (%"class.content::V8ValueConverter"*)***
  %38 = load void (%"class.content::V8ValueConverter"*)**, void (%"class.content::V8ValueConverter"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.content::V8ValueConverter"*)*, void (%"class.content::V8ValueConverter"*)** %38, i64 1
  %40 = load void (%"class.content::V8ValueConverter"*)*, void (%"class.content::V8ValueConverter"*)** %39, align 8
  tail call void %40(%"class.content::V8ValueConverter"* nonnull %8) #7
  br label %41

41:                                               ; preds = %23, %36
  %42 = icmp eq %"class.extensions::JSONFeatureProviderSource"* %4, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  tail call void @_ZN10extensions25JSONFeatureProviderSourceD1Ev(%"class.extensions::JSONFeatureProviderSource"* nonnull %4) #7
  %44 = bitcast %"class.extensions::JSONFeatureProviderSource"* %4 to i8*
  tail call void @_ZdlPv(i8* %44) #8
  br label %45

45:                                               ; preds = %41, %43
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.extensions::ExtensionsClient"* @_ZN10extensions16ExtensionsClient3GetEv() local_unnamed_addr #1

declare %"class.extensions::JSONFeatureProviderSource"* @_ZNK10extensions16ExtensionsClient22CreateAPIFeatureSourceEv(%"class.extensions::ExtensionsClient"*) local_unnamed_addr #1

declare %"class.content::V8ValueConverter"* @_ZN7content16V8ValueConverter6CreateEv() local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN10extensions25ObjectBackedNativeHandlerD2Ev(%"class.extensions::ObjectBackedNativeHandler"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10extensions25TestFeaturesNativeHandlerD0Ev(%"class.extensions::TestFeaturesNativeHandler"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.extensions::TestFeaturesNativeHandler", %"class.extensions::TestFeaturesNativeHandler"* %0, i64 0, i32 0
  tail call void @_ZN10extensions25ObjectBackedNativeHandlerD2Ev(%"class.extensions::ObjectBackedNativeHandler"* %2) #7
  %3 = bitcast %"class.extensions::TestFeaturesNativeHandler"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #8
  ret void
}

declare void @_ZN10extensions25ObjectBackedNativeHandler10InitializeEv(%"class.extensions::ObjectBackedNativeHandler"*) unnamed_addr #1

declare zeroext i1 @_ZN10extensions25ObjectBackedNativeHandler13IsInitializedEv(%"class.extensions::ObjectBackedNativeHandler"*) unnamed_addr #1

declare %"class.v8::Object"* @_ZN10extensions25ObjectBackedNativeHandler11NewInstanceEv(%"class.extensions::ObjectBackedNativeHandler"*) unnamed_addr #1

declare void @_ZN10extensions25ObjectBackedNativeHandler10InvalidateEv(%"class.extensions::ObjectBackedNativeHandler"*) unnamed_addr #1

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN10extensions25TestFeaturesNativeHandlerEFvRKN2v820FunctionCallbackInfoINS5_5ValueEEEEJNS0_17UnretainedWrapperIS4_EEEEEFvSA_EE3RunEPNS0_13BindStateBaseESA_(%"class.base::internal::BindStateBase"*, %"class.v8::FunctionCallbackInfo"* dereferenceable(24)) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %10 = bitcast void ()** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds i8, i8* %6, i64 %11
  %13 = bitcast i8* %12 to %"class.extensions::TestFeaturesNativeHandler"*
  %14 = and i64 %8, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %2
  %17 = bitcast i8* %12 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = add i64 %8, -1
  %20 = getelementptr i8, i8* %18, i64 %19
  %21 = bitcast i8* %20 to void (%"class.extensions::TestFeaturesNativeHandler"*, %"class.v8::FunctionCallbackInfo"*)**
  %22 = load void (%"class.extensions::TestFeaturesNativeHandler"*, %"class.v8::FunctionCallbackInfo"*)*, void (%"class.extensions::TestFeaturesNativeHandler"*, %"class.v8::FunctionCallbackInfo"*)** %21, align 8
  br label %25

23:                                               ; preds = %2
  %24 = inttoptr i64 %8 to void (%"class.extensions::TestFeaturesNativeHandler"*, %"class.v8::FunctionCallbackInfo"*)*
  br label %25

25:                                               ; preds = %16, %23
  %26 = phi void (%"class.extensions::TestFeaturesNativeHandler"*, %"class.v8::FunctionCallbackInfo"*)* [ %22, %16 ], [ %24, %23 ]
  tail call void %26(%"class.extensions::TestFeaturesNativeHandler"* %13, %"class.v8::FunctionCallbackInfo"* dereferenceable(24) %1) #7
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN10extensions25TestFeaturesNativeHandlerEFvRKN2v820FunctionCallbackInfoINS4_5ValueEEEEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #8
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind
declare void @_ZN10extensions25JSONFeatureProviderSourceD1Ev(%"class.extensions::JSONFeatureProviderSource"*) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN10extensions25TestFeaturesNativeHandlerEFvRKN2v820FunctionCallbackInfoINS5_5ValueEEEEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN10extensions25TestFeaturesNativeHandlerEFvRKN2v820FunctionCallbackInfoINS5_5ValueEEEEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base13BindRepeatingIMN10extensions25TestFeaturesNativeHandlerEFvRKN2v820FunctionCallbackInfoINS3_5ValueEEEEJNS_8internal17UnretainedWrapperIS2_EEEEENS_17RepeatingCallbackINSB_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSG_DpOSH_: argument 0"}
!6 = distinct !{!6, !"_ZN4base13BindRepeatingIMN10extensions25TestFeaturesNativeHandlerEFvRKN2v820FunctionCallbackInfoINS3_5ValueEEEEJNS_8internal17UnretainedWrapperIS2_EEEEENS_17RepeatingCallbackINSB_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSG_DpOSH_"}
!7 = !{!"branch_weights", i32 1, i32 2000}
