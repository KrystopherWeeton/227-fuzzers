; ModuleID = '../../third_party/dawn/third_party/tint/src/sem/external_texture_type.cc'
source_filename = "../../third_party/dawn/third_party/tint/src/sem/external_texture_type.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.tint::TypeInfo" = type { %"struct.tint::TypeInfo"*, i8* }
%"class.tint::sem::ExternalTexture" = type { %"class.tint::Castable.base", [4 x i8] }
%"class.tint::Castable.base" = type { %"class.tint::sem::Texture.base" }
%"class.tint::sem::Texture.base" = type <{ %"class.tint::Castable.0", i32 }>
%"class.tint::Castable.0" = type { %"class.tint::sem::Type" }
%"class.tint::sem::Type" = type { %"class.tint::Castable.1" }
%"class.tint::Castable.1" = type { %"class.tint::sem::Node" }
%"class.tint::sem::Node" = type { %"class.tint::Castable.2" }
%"class.tint::Castable.2" = type { %"class.tint::CastableBase" }
%"class.tint::CastableBase" = type { i32 (...)** }
%"class.tint::sem::Texture" = type <{ %"class.tint::Castable.0", i32, [4 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.tint::SymbolTable" = type { i32, [4 x i8], %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.22", %"class.tint::ProgramID", [4 x i8] }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.12", %"class.std::__1::__compressed_pair.17", %"class.std::__1::__compressed_pair.19", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5", %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { i64 }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { float }
%"class.std::__1::unordered_map.22" = type { %"class.std::__1::__hash_table.23" }
%"class.std::__1::__hash_table.23" = type <{ %"class.std::__1::unique_ptr.24", %"class.std::__1::__compressed_pair.34", %"class.std::__1::__compressed_pair.39", %"class.std::__1::__compressed_pair.42", [4 x i8] }>
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26", %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"struct.std::__1::__hash_node_base.27"** }
%"struct.std::__1::__hash_node_base.27" = type { %"struct.std::__1::__hash_node_base.27"* }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.std::__1::__bucket_list_deallocator.29" }
%"class.std::__1::__bucket_list_deallocator.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"struct.std::__1::__hash_node_base.27" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.tint::ProgramID" = type { i32 }
%"class.tint::Castable" = type { %"class.tint::sem::Texture.base", [4 x i8] }

$_ZNK4tint8CastableINS_3sem15ExternalTextureENS1_7TextureEE8TypeInfoEv = comdat any

@_ZN4tint6detail10TypeInfoOfINS_3sem7TextureEE4infoE = external global %"struct.tint::TypeInfo", align 8
@.str = private unnamed_addr constant [27 x i8] c"tint::sem::ExternalTexture\00", align 1
@_ZN4tint6detail10TypeInfoOfINS_3sem15ExternalTextureEE4infoE = hidden constant %"struct.tint::TypeInfo" { %"struct.tint::TypeInfo"* @_ZN4tint6detail10TypeInfoOfINS_3sem7TextureEE4infoE, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str, i32 0, i32 0) }, align 8
@_ZTVN4tint3sem15ExternalTextureE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.tint::sem::ExternalTexture"*)* @_ZN4tint3sem15ExternalTextureD2Ev to i8*), i8* bitcast (void (%"class.tint::sem::ExternalTexture"*)* @_ZN4tint3sem15ExternalTextureD0Ev to i8*), i8* bitcast (%"struct.tint::TypeInfo"* (%"class.tint::Castable"*)* @_ZNK4tint8CastableINS_3sem15ExternalTextureENS1_7TextureEE8TypeInfoEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.tint::sem::ExternalTexture"*)* @_ZNK4tint3sem15ExternalTexture9type_nameEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.tint::sem::ExternalTexture"*, %"class.tint::SymbolTable"*)* @_ZNK4tint3sem15ExternalTexture12FriendlyNameERKNS_11SymbolTableE to i8*)] }, align 8
@.str.1 = private unnamed_addr constant [19 x i8] c"__external_texture\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"texture_external\00", align 1

@_ZN4tint3sem15ExternalTextureC1Ev = hidden unnamed_addr alias void (%"class.tint::sem::ExternalTexture"*), void (%"class.tint::sem::ExternalTexture"*)* @_ZN4tint3sem15ExternalTextureC2Ev
@_ZN4tint3sem15ExternalTextureC1EOS1_ = hidden unnamed_addr alias void (%"class.tint::sem::ExternalTexture"*, %"class.tint::sem::ExternalTexture"*), void (%"class.tint::sem::ExternalTexture"*, %"class.tint::sem::ExternalTexture"*)* @_ZN4tint3sem15ExternalTextureC2EOS1_
@_ZN4tint3sem15ExternalTextureD1Ev = hidden unnamed_addr alias void (%"class.tint::sem::ExternalTexture"*), void (%"class.tint::sem::ExternalTexture"*)* @_ZN4tint3sem15ExternalTextureD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4tint3sem15ExternalTextureC2Ev(%"class.tint::sem::ExternalTexture"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.tint::sem::ExternalTexture"* %0 to %"class.tint::sem::Texture"*
  tail call void @_ZN4tint3sem7TextureC2ENS_3ast16TextureDimensionE(%"class.tint::sem::Texture"* %2, i32 1) #5
  %3 = getelementptr inbounds %"class.tint::sem::ExternalTexture", %"class.tint::sem::ExternalTexture"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4tint3sem15ExternalTextureE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4tint3sem15ExternalTextureC2EOS1_(%"class.tint::sem::ExternalTexture"*, %"class.tint::sem::ExternalTexture"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.tint::sem::ExternalTexture"* %0 to %"class.tint::sem::Texture"*
  %4 = bitcast %"class.tint::sem::ExternalTexture"* %1 to %"class.tint::sem::Texture"*
  tail call void @_ZN4tint3sem7TextureC2EOS1_(%"class.tint::sem::Texture"* %3, %"class.tint::sem::Texture"* dereferenceable(16) %4) #5
  %5 = getelementptr inbounds %"class.tint::sem::ExternalTexture", %"class.tint::sem::ExternalTexture"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4tint3sem15ExternalTextureE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4tint3sem15ExternalTextureD2Ev(%"class.tint::sem::ExternalTexture"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.tint::sem::ExternalTexture"* %0 to %"class.tint::sem::Texture"*
  tail call void @_ZN4tint3sem7TextureD2Ev(%"class.tint::sem::Texture"* %2) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4tint3sem15ExternalTextureD0Ev(%"class.tint::sem::ExternalTexture"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.tint::sem::ExternalTexture"* %0 to %"class.tint::sem::Texture"*
  tail call void @_ZN4tint3sem7TextureD2Ev(%"class.tint::sem::Texture"* %2) #5
  %3 = bitcast %"class.tint::sem::ExternalTexture"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4tint3sem15ExternalTexture9type_nameEv(%"class.std::__1::basic_string"* noalias sret, %"class.tint::sem::ExternalTexture"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  store i8 18, i8* %4, align 1
  %5 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 1 getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i64 0, i64 0), i64 18, i1 false) #5
  %6 = getelementptr inbounds i8, i8* %5, i64 18
  store i8 0, i8* %6, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4tint3sem15ExternalTexture12FriendlyNameERKNS_11SymbolTableE(%"class.std::__1::basic_string"* noalias sret, %"class.tint::sem::ExternalTexture"* nocapture readnone, %"class.tint::SymbolTable"* nocapture readnone dereferenceable(96)) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  store i8 16, i8* %5, align 1
  %6 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 1 getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0), i64 16, i1 false) #5
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %8 = bitcast i64* %7 to i8*
  store i8 0, i8* %8, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"struct.tint::TypeInfo"* @_ZNK4tint8CastableINS_3sem15ExternalTextureENS1_7TextureEE8TypeInfoEv(%"class.tint::Castable"*) unnamed_addr #0 comdat align 2 {
  ret %"struct.tint::TypeInfo"* @_ZN4tint6detail10TypeInfoOfINS_3sem15ExternalTextureEE4infoE
}

declare void @_ZN4tint3sem7TextureC2ENS_3ast16TextureDimensionE(%"class.tint::sem::Texture"*, i32) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4tint3sem7TextureD2Ev(%"class.tint::sem::Texture"*) unnamed_addr #3

declare void @_ZN4tint3sem7TextureC2EOS1_(%"class.tint::sem::Texture"*, %"class.tint::sem::Texture"* dereferenceable(16)) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
