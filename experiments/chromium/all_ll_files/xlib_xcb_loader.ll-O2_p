; ModuleID = 'gen/library_loaders/xlib_xcb_loader.cc'
source_filename = "gen/library_loaders/xlib_xcb_loader.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%class.XlibXcbLoader = type <{ %struct.xcb_connection_t* (%struct._XDisplay*)*, i8*, i8, [7 x i8] }>
%struct.xcb_connection_t = type opaque
%struct._XDisplay = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@.str = private unnamed_addr constant [18 x i8] c"XGetXCBConnection\00", align 1

@_ZN13XlibXcbLoaderC1Ev = hidden unnamed_addr alias void (%class.XlibXcbLoader*), void (%class.XlibXcbLoader*)* @_ZN13XlibXcbLoaderC2Ev
@_ZN13XlibXcbLoaderD1Ev = hidden unnamed_addr alias void (%class.XlibXcbLoader*), void (%class.XlibXcbLoader*)* @_ZN13XlibXcbLoaderD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN13XlibXcbLoaderC2Ev(%class.XlibXcbLoader* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.XlibXcbLoader, %class.XlibXcbLoader* %0, i64 0, i32 2
  store i8 0, i8* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13XlibXcbLoaderD2Ev(%class.XlibXcbLoader* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.XlibXcbLoader, %class.XlibXcbLoader* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.XlibXcbLoader, %class.XlibXcbLoader* %0, i64 0, i32 1
  %7 = load i8*, i8** %6, align 8
  %8 = tail call i32 @dlclose(i8* %7) #4
  store i8* null, i8** %6, align 8
  br label %9

9:                                                ; preds = %1, %5
  store i8 0, i8* %2, align 8
  %10 = getelementptr inbounds %class.XlibXcbLoader, %class.XlibXcbLoader* %0, i64 0, i32 0
  store %struct.xcb_connection_t* (%struct._XDisplay*)* null, %struct.xcb_connection_t* (%struct._XDisplay*)** %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13XlibXcbLoader7CleanUpEb(%class.XlibXcbLoader* nocapture, i1 zeroext) local_unnamed_addr #1 align 2 {
  br i1 %1, label %3, label %7

3:                                                ; preds = %2
  %4 = getelementptr inbounds %class.XlibXcbLoader, %class.XlibXcbLoader* %0, i64 0, i32 1
  %5 = load i8*, i8** %4, align 8
  %6 = tail call i32 @dlclose(i8* %5) #4
  store i8* null, i8** %4, align 8
  br label %7

7:                                                ; preds = %3, %2
  %8 = getelementptr inbounds %class.XlibXcbLoader, %class.XlibXcbLoader* %0, i64 0, i32 2
  store i8 0, i8* %8, align 8
  %9 = getelementptr inbounds %class.XlibXcbLoader, %class.XlibXcbLoader* %0, i64 0, i32 0
  store %struct.xcb_connection_t* (%struct._XDisplay*)* null, %struct.xcb_connection_t* (%struct._XDisplay*)** %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN13XlibXcbLoader4LoadERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.XlibXcbLoader* nocapture, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.XlibXcbLoader, %class.XlibXcbLoader* %0, i64 0, i32 2
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %27

6:                                                ; preds = %2
  %7 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %14 = select i1 %10, i8* %12, i8* %13
  %15 = tail call i8* @dlopen(i8* %14, i32 1) #4
  %16 = getelementptr inbounds %class.XlibXcbLoader, %class.XlibXcbLoader* %0, i64 0, i32 1
  store i8* %15, i8** %16, align 8
  %17 = icmp eq i8* %15, null
  br i1 %17, label %27, label %18

18:                                               ; preds = %6
  %19 = tail call i8* @dlsym(i8* nonnull %15, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0)) #4
  %20 = bitcast %class.XlibXcbLoader* %0 to i8**
  store i8* %19, i8** %20, align 8
  %21 = icmp eq i8* %19, null
  br i1 %21, label %22, label %26

22:                                               ; preds = %18
  %23 = load i8*, i8** %16, align 8
  %24 = tail call i32 @dlclose(i8* %23) #4
  %25 = bitcast %class.XlibXcbLoader* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 17, i1 false)
  br label %27

26:                                               ; preds = %18
  store i8 1, i8* %3, align 8
  br label %27

27:                                               ; preds = %6, %2, %26, %22
  %28 = phi i1 [ true, %26 ], [ false, %22 ], [ false, %2 ], [ false, %6 ]
  ret i1 %28
}

; Function Attrs: nounwind
declare i8* @dlopen(i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare i8* @dlsym(i8*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @dlclose(i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
