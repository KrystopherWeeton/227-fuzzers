; ModuleID = '../../sql/recover_module/record.cc'
source_filename = "../../sql/recover_module/record.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.sql::recover::RecordReader" = type <{ %"class.std::__1::vector", %"class.std::__1::vector.1", %"class.sql::recover::LeafPayloadReader"*, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.sql::recover::RecordReader::ValueHeader"*, %"struct.sql::recover::RecordReader::ValueHeader"*, %"class.std::__1::__compressed_pair" }
%"struct.sql::recover::RecordReader::ValueHeader" = type <{ i64, i64, i32, i8, i8, [2 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.sql::recover::RecordReader::ValueHeader"* }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { i8*, i8*, %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { i8* }
%"class.sql::recover::LeafPayloadReader" = type { %"class.sql::recover::DatabasePageReader"*, i64, i32, i32, i32, i32, i32, %"class.std::__1::vector.10" }
%"class.sql::recover::DatabasePageReader" = type <{ i32, [4 x i8], %"class.std::__1::unique_ptr", %"class.sql::recover::VirtualTable"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.sql::recover::VirtualTable" = type opaque
%"class.std::__1::vector.10" = type { %"class.std::__1::__vector_base.11" }
%"class.std::__1::__vector_base.11" = type { i32*, i32*, %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { i32* }
%"class.std::__1::__vector_base_common" = type { i8 }
%struct.sqlite3_context = type opaque
%union.anon = type { double }

$_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm = comdat any

@_ZN3sql7recover12RecordReaderC1EPNS0_17LeafPayloadReaderEi = hidden unnamed_addr alias void (%"class.sql::recover::RecordReader"*, %"class.sql::recover::LeafPayloadReader"*, i32), void (%"class.sql::recover::RecordReader"*, %"class.sql::recover::LeafPayloadReader"*, i32)* @_ZN3sql7recover12RecordReaderC2EPNS0_17LeafPayloadReaderEi
@_ZN3sql7recover12RecordReaderD1Ev = hidden unnamed_addr alias void (%"class.sql::recover::RecordReader"*), void (%"class.sql::recover::RecordReader"*)* @_ZN3sql7recover12RecordReaderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3sql7recover12RecordReaderC2EPNS0_17LeafPayloadReaderEi(%"class.sql::recover::RecordReader"* nocapture, %"class.sql::recover::LeafPayloadReader"*, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.sql::recover::RecordReader", %"class.sql::recover::RecordReader"* %0, i64 0, i32 2
  %5 = bitcast %"class.sql::recover::RecordReader"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 48, i1 false)
  store %"class.sql::recover::LeafPayloadReader"* %1, %"class.sql::recover::LeafPayloadReader"** %4, align 8
  %6 = getelementptr inbounds %"class.sql::recover::RecordReader", %"class.sql::recover::RecordReader"* %0, i64 0, i32 3
  store i32 %2, i32* %6, align 8
  %7 = sext i32 %2 to i64
  %8 = getelementptr inbounds %"class.sql::recover::RecordReader", %"class.sql::recover::RecordReader"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"struct.sql::recover::RecordReader::ValueHeader"** %8 to i64*
  %10 = bitcast %"class.sql::recover::RecordReader"* %0 to i64*
  %11 = icmp eq i32 %2, 0
  br i1 %11, label %24, label %12

12:                                               ; preds = %3
  %13 = icmp slt i32 %2, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %12
  tail call void @abort() #9
  unreachable

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.sql::recover::RecordReader", %"class.sql::recover::RecordReader"* %0, i64 0, i32 0, i32 0, i32 1
  %17 = bitcast %"struct.sql::recover::RecordReader::ValueHeader"** %16 to i64*
  %18 = mul nsw i64 %7, 24
  %19 = tail call i8* @_Znwm(i64 %18) #10
  %20 = bitcast i8* %19 to %"struct.sql::recover::RecordReader::ValueHeader"*
  %21 = ptrtoint i8* %19 to i64
  %22 = getelementptr inbounds %"struct.sql::recover::RecordReader::ValueHeader", %"struct.sql::recover::RecordReader::ValueHeader"* %20, i64 %7
  %23 = ptrtoint %"struct.sql::recover::RecordReader::ValueHeader"* %22 to i64
  store i64 %21, i64* %10, align 8
  store i64 %21, i64* %17, align 8
  store i64 %23, i64* %9, align 8
  br label %24

24:                                               ; preds = %15, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3sql7recover12RecordReaderD2Ev(%"class.sql::recover::RecordReader"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.sql::recover::RecordReader", %"class.sql::recover::RecordReader"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = ptrtoint i8* %3 to i64
  %7 = getelementptr inbounds %"class.sql::recover::RecordReader", %"class.sql::recover::RecordReader"* %0, i64 0, i32 1, i32 0, i32 1
  %8 = bitcast i8** %7 to i64*
  store i64 %6, i64* %8, align 8
  tail call void @_ZdlPv(i8* nonnull %3) #10
  br label %9

9:                                                ; preds = %1, %5
  %10 = getelementptr inbounds %"class.sql::recover::RecordReader", %"class.sql::recover::RecordReader"* %0, i64 0, i32 0, i32 0, i32 0
  %11 = load %"struct.sql::recover::RecordReader::ValueHeader"*, %"struct.sql::recover::RecordReader::ValueHeader"** %10, align 8
  %12 = icmp eq %"struct.sql::recover::RecordReader::ValueHeader"* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %9
  %14 = ptrtoint %"struct.sql::recover::RecordReader::ValueHeader"* %11 to i64
  %15 = getelementptr inbounds %"class.sql::recover::RecordReader", %"class.sql::recover::RecordReader"* %0, i64 0, i32 0, i32 0, i32 1
  %16 = bitcast %"struct.sql::recover::RecordReader::ValueHeader"** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = bitcast %"struct.sql::recover::RecordReader::ValueHeader"* %11 to i8*
  tail call void @_ZdlPv(i8* %17) #10
  br label %18

18:                                               ; preds = %9, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3sql7recover12RecordReader10InitializeEv(%"class.sql::recover::RecordReader"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.sql::recover::RecordReader"* %0 to i64*
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.sql::recover::RecordReader", %"class.sql::recover::RecordReader"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = bitcast %"struct.sql::recover::RecordReader::ValueHeader"** %4 to i64*
  store i64 %3, i64* %5, align 8
  %6 = tail call i64 @_ZN3sql7recover12RecordReader22InitializeHeaderBufferEv(%"class.sql::recover::RecordReader"* %0)
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %124, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.sql::recover::RecordReader", %"class.sql::recover::RecordReader"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %"class.sql::recover::RecordReader", %"class.sql::recover::RecordReader"* %0, i64 0, i32 1, i32 0, i32 1
  %12 = bitcast i8** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = ptrtoint i8* %10 to i64
  %15 = sub i64 %13, %14
  %16 = getelementptr inbounds i8, i8* %10, i64 %15
  %17 = getelementptr inbounds %"class.sql::recover::RecordReader", %"class.sql::recover::RecordReader"* %0, i64 0, i32 3
  %18 = load i32, i32* %17, align 8
  %19 = icmp sgt i32 %18, 0
  br i1 %19, label %20, label %124

20:                                               ; preds = %8
  %21 = getelementptr inbounds %"class.sql::recover::RecordReader", %"class.sql::recover::RecordReader"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %22 = bitcast %"struct.sql::recover::RecordReader::ValueHeader"** %21 to i64*
  %23 = getelementptr inbounds %"class.sql::recover::RecordReader", %"class.sql::recover::RecordReader"* %0, i64 0, i32 0, i32 0, i32 0
  br label %24

24:                                               ; preds = %20, %119
  %25 = phi i8* [ %10, %20 ], [ %49, %119 ]
  %26 = phi i32 [ 0, %20 ], [ %121, %119 ]
  %27 = phi i64 [ %6, %20 ], [ %120, %119 ]
  %28 = icmp eq i8* %25, %16
  br i1 %28, label %46, label %29

29:                                               ; preds = %24
  %30 = tail call { i64, i8* } @_ZN3sql7recover11ParseVarintEPKhS2_(i8* %25, i8* %16) #11
  %31 = extractvalue { i64, i8* } %30, 0
  %32 = extractvalue { i64, i8* } %30, 1
  switch i64 %31, label %38 [
    i64 0, label %46
    i64 1, label %48
    i64 2, label %48
    i64 3, label %48
    i64 4, label %48
    i64 5, label %33
    i64 6, label %34
    i64 7, label %35
    i64 8, label %36
    i64 9, label %37
  ]

33:                                               ; preds = %29
  br label %48

34:                                               ; preds = %29
  br label %48

35:                                               ; preds = %29
  br label %48

36:                                               ; preds = %29
  br label %48

37:                                               ; preds = %29
  br label %48

38:                                               ; preds = %29
  %39 = icmp slt i64 %31, 12
  br i1 %39, label %124, label %40

40:                                               ; preds = %38
  %41 = add nsw i64 %31, -12
  %42 = and i64 %41, 1
  %43 = icmp eq i64 %42, 0
  %44 = select i1 %43, i32 4, i32 3
  %45 = ashr i64 %41, 1
  br label %48

46:                                               ; preds = %24, %29
  %47 = phi i8* [ %32, %29 ], [ %16, %24 ]
  br label %48

48:                                               ; preds = %29, %29, %29, %40, %37, %36, %35, %34, %33, %29, %46
  %49 = phi i8* [ %47, %46 ], [ %32, %29 ], [ %32, %33 ], [ %32, %34 ], [ %32, %35 ], [ %32, %36 ], [ %32, %37 ], [ %32, %40 ], [ %32, %29 ], [ %32, %29 ], [ %32, %29 ]
  %50 = phi i8 [ 0, %46 ], [ 0, %29 ], [ 0, %33 ], [ 0, %34 ], [ 0, %35 ], [ 1, %36 ], [ 1, %37 ], [ 0, %40 ], [ 0, %29 ], [ 0, %29 ], [ 0, %29 ]
  %51 = phi i8 [ 0, %46 ], [ 0, %29 ], [ 0, %33 ], [ 0, %34 ], [ 0, %35 ], [ 0, %36 ], [ 1, %37 ], [ 0, %40 ], [ 0, %29 ], [ 0, %29 ], [ 0, %29 ]
  %52 = phi i64 [ 0, %46 ], [ %31, %29 ], [ 6, %33 ], [ 8, %34 ], [ 8, %35 ], [ 0, %36 ], [ 0, %37 ], [ %45, %40 ], [ %31, %29 ], [ %31, %29 ], [ %31, %29 ]
  %53 = phi i32 [ 0, %46 ], [ 1, %29 ], [ 1, %33 ], [ 1, %34 ], [ 2, %35 ], [ 1, %36 ], [ 1, %37 ], [ %44, %40 ], [ 1, %29 ], [ 1, %29 ], [ 1, %29 ]
  %54 = load %"struct.sql::recover::RecordReader::ValueHeader"*, %"struct.sql::recover::RecordReader::ValueHeader"** %4, align 8
  %55 = load %"struct.sql::recover::RecordReader::ValueHeader"*, %"struct.sql::recover::RecordReader::ValueHeader"** %21, align 8
  %56 = icmp ult %"struct.sql::recover::RecordReader::ValueHeader"* %54, %55
  %57 = ptrtoint %"struct.sql::recover::RecordReader::ValueHeader"* %55 to i64
  br i1 %56, label %58, label %66

58:                                               ; preds = %48
  %59 = getelementptr inbounds %"struct.sql::recover::RecordReader::ValueHeader", %"struct.sql::recover::RecordReader::ValueHeader"* %54, i64 0, i32 0
  store i64 %27, i64* %59, align 8
  %60 = getelementptr inbounds %"struct.sql::recover::RecordReader::ValueHeader", %"struct.sql::recover::RecordReader::ValueHeader"* %54, i64 0, i32 1
  store i64 %52, i64* %60, align 8
  %61 = getelementptr inbounds %"struct.sql::recover::RecordReader::ValueHeader", %"struct.sql::recover::RecordReader::ValueHeader"* %54, i64 0, i32 2
  store i32 %53, i32* %61, align 8
  %62 = getelementptr inbounds %"struct.sql::recover::RecordReader::ValueHeader", %"struct.sql::recover::RecordReader::ValueHeader"* %54, i64 0, i32 3
  store i8 %51, i8* %62, align 4
  %63 = getelementptr inbounds %"struct.sql::recover::RecordReader::ValueHeader", %"struct.sql::recover::RecordReader::ValueHeader"* %54, i64 0, i32 4
  store i8 %50, i8* %63, align 1
  %64 = getelementptr inbounds %"struct.sql::recover::RecordReader::ValueHeader", %"struct.sql::recover::RecordReader::ValueHeader"* %54, i64 1
  %65 = ptrtoint %"struct.sql::recover::RecordReader::ValueHeader"* %64 to i64
  store i64 %65, i64* %5, align 8
  br label %119

66:                                               ; preds = %48
  %67 = ptrtoint %"struct.sql::recover::RecordReader::ValueHeader"* %54 to i64
  %68 = load i64, i64* %2, align 8
  %69 = sub i64 %67, %68
  %70 = sdiv exact i64 %69, 24
  %71 = add nsw i64 %70, 1
  %72 = icmp ugt i64 %71, 768614336404564650
  br i1 %72, label %73, label %75

73:                                               ; preds = %66
  %74 = bitcast %"class.sql::recover::RecordReader"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %74) #9
  unreachable

75:                                               ; preds = %66
  %76 = sub i64 %57, %68
  %77 = sdiv exact i64 %76, 24
  %78 = icmp ult i64 %77, 384307168202282325
  br i1 %78, label %79, label %84

79:                                               ; preds = %75
  %80 = shl nsw i64 %77, 1
  %81 = icmp ult i64 %80, %71
  %82 = select i1 %81, i64 %71, i64 %80
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %89, label %84

84:                                               ; preds = %79, %75
  %85 = phi i64 [ %82, %79 ], [ 768614336404564650, %75 ]
  %86 = mul i64 %85, 24
  %87 = tail call i8* @_Znwm(i64 %86) #10
  %88 = bitcast i8* %87 to %"struct.sql::recover::RecordReader::ValueHeader"*
  br label %89

89:                                               ; preds = %84, %79
  %90 = phi i64 [ %85, %84 ], [ 0, %79 ]
  %91 = phi %"struct.sql::recover::RecordReader::ValueHeader"* [ %88, %84 ], [ null, %79 ]
  %92 = getelementptr inbounds %"struct.sql::recover::RecordReader::ValueHeader", %"struct.sql::recover::RecordReader::ValueHeader"* %91, i64 %70
  %93 = getelementptr inbounds %"struct.sql::recover::RecordReader::ValueHeader", %"struct.sql::recover::RecordReader::ValueHeader"* %91, i64 %90
  %94 = ptrtoint %"struct.sql::recover::RecordReader::ValueHeader"* %93 to i64
  %95 = getelementptr inbounds %"struct.sql::recover::RecordReader::ValueHeader", %"struct.sql::recover::RecordReader::ValueHeader"* %92, i64 0, i32 0
  store i64 %27, i64* %95, align 8
  %96 = getelementptr inbounds %"struct.sql::recover::RecordReader::ValueHeader", %"struct.sql::recover::RecordReader::ValueHeader"* %91, i64 %70, i32 1
  store i64 %52, i64* %96, align 8
  %97 = getelementptr inbounds %"struct.sql::recover::RecordReader::ValueHeader", %"struct.sql::recover::RecordReader::ValueHeader"* %91, i64 %70, i32 2
  store i32 %53, i32* %97, align 8
  %98 = getelementptr inbounds %"struct.sql::recover::RecordReader::ValueHeader", %"struct.sql::recover::RecordReader::ValueHeader"* %91, i64 %70, i32 3
  store i8 %51, i8* %98, align 4
  %99 = getelementptr inbounds %"struct.sql::recover::RecordReader::ValueHeader", %"struct.sql::recover::RecordReader::ValueHeader"* %91, i64 %70, i32 4
  store i8 %50, i8* %99, align 1
  %100 = getelementptr inbounds %"struct.sql::recover::RecordReader::ValueHeader", %"struct.sql::recover::RecordReader::ValueHeader"* %92, i64 1
  %101 = ptrtoint %"struct.sql::recover::RecordReader::ValueHeader"* %100 to i64
  %102 = load %"struct.sql::recover::RecordReader::ValueHeader"*, %"struct.sql::recover::RecordReader::ValueHeader"** %23, align 8
  %103 = load i64, i64* %5, align 8
  %104 = ptrtoint %"struct.sql::recover::RecordReader::ValueHeader"* %102 to i64
  %105 = sub i64 %103, %104
  %106 = sdiv exact i64 %105, -24
  %107 = getelementptr inbounds %"struct.sql::recover::RecordReader::ValueHeader", %"struct.sql::recover::RecordReader::ValueHeader"* %92, i64 %106
  %108 = ptrtoint %"struct.sql::recover::RecordReader::ValueHeader"* %107 to i64
  %109 = icmp sgt i64 %105, 0
  br i1 %109, label %110, label %114

110:                                              ; preds = %89
  %111 = bitcast %"struct.sql::recover::RecordReader::ValueHeader"* %107 to i8*
  %112 = bitcast %"struct.sql::recover::RecordReader::ValueHeader"* %102 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %111, i8* align 8 %112, i64 %105, i1 false) #11
  %113 = load %"struct.sql::recover::RecordReader::ValueHeader"*, %"struct.sql::recover::RecordReader::ValueHeader"** %23, align 8
  br label %114

114:                                              ; preds = %110, %89
  %115 = phi %"struct.sql::recover::RecordReader::ValueHeader"* [ %102, %89 ], [ %113, %110 ]
  store i64 %108, i64* %2, align 8
  store i64 %101, i64* %5, align 8
  store i64 %94, i64* %22, align 8
  %116 = icmp eq %"struct.sql::recover::RecordReader::ValueHeader"* %115, null
  br i1 %116, label %119, label %117

117:                                              ; preds = %114
  %118 = bitcast %"struct.sql::recover::RecordReader::ValueHeader"* %115 to i8*
  tail call void @_ZdlPv(i8* %118) #10
  br label %119

119:                                              ; preds = %58, %114, %117
  %120 = add nsw i64 %52, %27
  %121 = add nuw nsw i32 %26, 1
  %122 = load i32, i32* %17, align 8
  %123 = icmp slt i32 %121, %122
  br i1 %123, label %24, label %124

124:                                              ; preds = %38, %119, %8, %1
  %125 = phi i1 [ false, %1 ], [ true, %8 ], [ true, %119 ], [ false, %38 ]
  ret i1 %125
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN3sql7recover12RecordReader22InitializeHeaderBufferEv(%"class.sql::recover::RecordReader"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.sql::recover::RecordReader", %"class.sql::recover::RecordReader"* %0, i64 0, i32 2
  %3 = load %"class.sql::recover::LeafPayloadReader"*, %"class.sql::recover::LeafPayloadReader"** %2, align 8
  %4 = tail call i8* @_ZN3sql7recover17LeafPayloadReader17ReadInlinePayloadEv(%"class.sql::recover::LeafPayloadReader"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %53, label %6

6:                                                ; preds = %1
  %7 = load %"class.sql::recover::LeafPayloadReader"*, %"class.sql::recover::LeafPayloadReader"** %2, align 8
  %8 = getelementptr inbounds %"class.sql::recover::LeafPayloadReader", %"class.sql::recover::LeafPayloadReader"* %7, i64 0, i32 4
  %9 = load i32, i32* %8, align 8
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds i8, i8* %4, i64 %10
  %12 = tail call { i64, i8* } @_ZN3sql7recover11ParseVarintEPKhS2_(i8* nonnull %4, i8* %11) #11
  %13 = extractvalue { i64, i8* } %12, 0
  %14 = extractvalue { i64, i8* } %12, 1
  %15 = ptrtoint i8* %14 to i64
  %16 = icmp slt i64 %13, 0
  br i1 %16, label %53, label %17

17:                                               ; preds = %6
  %18 = load %"class.sql::recover::LeafPayloadReader"*, %"class.sql::recover::LeafPayloadReader"** %2, align 8
  %19 = getelementptr inbounds %"class.sql::recover::LeafPayloadReader", %"class.sql::recover::LeafPayloadReader"* %18, i64 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = shl i64 %20, 32
  %22 = ashr exact i64 %21, 32
  %23 = icmp sgt i64 %13, %22
  br i1 %23, label %53, label %24

24:                                               ; preds = %17
  %25 = ptrtoint i8* %4 to i64
  %26 = sub i64 %15, %25
  %27 = shl i64 %26, 32
  %28 = ashr exact i64 %27, 32
  %29 = sub nsw i64 %13, %28
  %30 = getelementptr inbounds %"class.sql::recover::RecordReader", %"class.sql::recover::RecordReader"* %0, i64 0, i32 1
  %31 = getelementptr inbounds %"class.sql::recover::RecordReader", %"class.sql::recover::RecordReader"* %0, i64 0, i32 1, i32 0, i32 1
  %32 = bitcast i8** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.std::__1::vector.1"* %30 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = sub i64 %33, %35
  %37 = icmp ugt i64 %29, %36
  %38 = inttoptr i64 %35 to i8*
  br i1 %37, label %39, label %44

39:                                               ; preds = %24
  %40 = sub i64 %29, %36
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector.1"* %30, i64 %40) #11
  %41 = load %"class.sql::recover::LeafPayloadReader"*, %"class.sql::recover::LeafPayloadReader"** %2, align 8
  %42 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %30, i64 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  br label %48

44:                                               ; preds = %24
  %45 = icmp ult i64 %29, %36
  br i1 %45, label %46, label %48

46:                                               ; preds = %44
  %47 = getelementptr inbounds i8, i8* %38, i64 %29
  store i8* %47, i8** %31, align 8
  br label %48

48:                                               ; preds = %39, %44, %46
  %49 = phi i8* [ %43, %39 ], [ %38, %44 ], [ %38, %46 ]
  %50 = phi %"class.sql::recover::LeafPayloadReader"* [ %41, %39 ], [ %18, %44 ], [ %18, %46 ]
  %51 = tail call zeroext i1 @_ZN3sql7recover17LeafPayloadReader11ReadPayloadEllPh(%"class.sql::recover::LeafPayloadReader"* %50, i64 %28, i64 %29, i8* %49) #11
  %52 = select i1 %51, i64 %13, i64 0
  br label %53

53:                                               ; preds = %17, %6, %48, %1
  %54 = phi i64 [ 0, %1 ], [ 0, %17 ], [ 0, %6 ], [ %52, %48 ]
  ret i64 %54
}

declare { i64, i8* } @_ZN3sql7recover11ParseVarintEPKhS2_(i8*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK3sql7recover12RecordReader12GetValueTypeEi(%"class.sql::recover::RecordReader"* nocapture readonly, i32) local_unnamed_addr #3 align 2 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds %"class.sql::recover::RecordReader", %"class.sql::recover::RecordReader"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"struct.sql::recover::RecordReader::ValueHeader"*, %"struct.sql::recover::RecordReader::ValueHeader"** %4, align 8
  %6 = getelementptr inbounds %"struct.sql::recover::RecordReader::ValueHeader", %"struct.sql::recover::RecordReader::ValueHeader"* %5, i64 %3, i32 2
  %7 = load i32, i32* %6, align 8
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3sql7recover12RecordReader9ReadValueEiP15sqlite3_context(%"class.sql::recover::RecordReader"* nocapture readonly, i32, %struct.sqlite3_context*) local_unnamed_addr #0 align 2 {
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to [8 x i8]*
  %6 = bitcast i64* %4 to i8*
  %7 = alloca %union.anon, align 8
  %8 = sext i32 %1 to i64
  %9 = getelementptr inbounds %"class.sql::recover::RecordReader", %"class.sql::recover::RecordReader"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load %"struct.sql::recover::RecordReader::ValueHeader"*, %"struct.sql::recover::RecordReader::ValueHeader"** %9, align 8
  %11 = getelementptr inbounds %"struct.sql::recover::RecordReader::ValueHeader", %"struct.sql::recover::RecordReader::ValueHeader"* %10, i64 %8, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"struct.sql::recover::RecordReader::ValueHeader", %"struct.sql::recover::RecordReader::ValueHeader"* %10, i64 %8, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"struct.sql::recover::RecordReader::ValueHeader", %"struct.sql::recover::RecordReader::ValueHeader"* %10, i64 %8, i32 2
  %16 = load i32, i32* %15, align 8
  switch i32 %16, label %143 [
    i32 0, label %17
    i32 1, label %18
    i32 2, label %81
    i32 4, label %130
    i32 3, label %130
  ]

17:                                               ; preds = %3
  tail call void @chrome_sqlite3_result_null(%struct.sqlite3_context* %2) #11
  br label %143

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"struct.sql::recover::RecordReader::ValueHeader", %"struct.sql::recover::RecordReader::ValueHeader"* %10, i64 %8, i32 4
  %20 = load i8, i8* %19, align 1, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %26, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"struct.sql::recover::RecordReader::ValueHeader", %"struct.sql::recover::RecordReader::ValueHeader"* %10, i64 %8, i32 3
  %24 = load i8, i8* %23, align 4
  %25 = sext i8 %24 to i32
  tail call void @chrome_sqlite3_result_int(%struct.sqlite3_context* %2, i32 %25) #11
  br label %143

26:                                               ; preds = %18
  %27 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #11
  %28 = getelementptr inbounds [8 x i8], [8 x i8]* %5, i64 0, i64 1
  %29 = getelementptr inbounds [8 x i8], [8 x i8]* %5, i64 0, i64 2
  %30 = getelementptr inbounds [8 x i8], [8 x i8]* %5, i64 0, i64 3
  %31 = getelementptr inbounds [8 x i8], [8 x i8]* %5, i64 0, i64 4
  %32 = getelementptr inbounds [8 x i8], [8 x i8]* %5, i64 0, i64 5
  %33 = getelementptr inbounds [8 x i8], [8 x i8]* %5, i64 0, i64 6
  %34 = getelementptr inbounds [8 x i8], [8 x i8]* %5, i64 0, i64 7
  %35 = getelementptr inbounds i64, i64* %4, i64 1
  %36 = bitcast i64* %35 to i8*
  %37 = sub i64 0, %14
  %38 = getelementptr inbounds i8, i8* %36, i64 %37
  %39 = getelementptr inbounds %"class.sql::recover::RecordReader", %"class.sql::recover::RecordReader"* %0, i64 0, i32 2
  store i64 -6148914691236517206, i64* %4, align 8
  %40 = load %"class.sql::recover::LeafPayloadReader"*, %"class.sql::recover::LeafPayloadReader"** %39, align 8
  %41 = call zeroext i1 @_ZN3sql7recover17LeafPayloadReader11ReadPayloadEllPh(%"class.sql::recover::LeafPayloadReader"* %40, i64 %12, i64 %14, i8* %38) #11
  br i1 %41, label %42, label %79

42:                                               ; preds = %26
  %43 = icmp ugt i8* %38, %27
  br i1 %43, label %44, label %48

44:                                               ; preds = %42
  %45 = load i8, i8* %38, align 1
  %46 = ashr i8 %45, 7
  %47 = sub i64 8, %14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 %46, i64 %47, i1 false)
  br label %48

48:                                               ; preds = %44, %42
  %49 = load i8, i8* %27, align 8
  %50 = zext i8 %49 to i64
  %51 = shl nuw i64 %50, 56
  %52 = load i8, i8* %28, align 1
  %53 = zext i8 %52 to i64
  %54 = shl nuw nsw i64 %53, 48
  %55 = or i64 %54, %51
  %56 = load i8, i8* %29, align 2
  %57 = zext i8 %56 to i64
  %58 = shl nuw nsw i64 %57, 40
  %59 = or i64 %55, %58
  %60 = load i8, i8* %30, align 1
  %61 = zext i8 %60 to i64
  %62 = shl nuw nsw i64 %61, 32
  %63 = or i64 %59, %62
  %64 = load i8, i8* %31, align 4
  %65 = zext i8 %64 to i64
  %66 = shl nuw nsw i64 %65, 24
  %67 = or i64 %63, %66
  %68 = load i8, i8* %32, align 1
  %69 = zext i8 %68 to i64
  %70 = shl nuw nsw i64 %69, 16
  %71 = or i64 %67, %70
  %72 = load i8, i8* %33, align 2
  %73 = zext i8 %72 to i64
  %74 = shl nuw nsw i64 %73, 8
  %75 = or i64 %71, %74
  %76 = load i8, i8* %34, align 1
  %77 = zext i8 %76 to i64
  %78 = or i64 %75, %77
  call void @chrome_sqlite3_result_int64(%struct.sqlite3_context* %2, i64 %78) #11
  br label %79

79:                                               ; preds = %26, %48
  %80 = phi i1 [ true, %48 ], [ false, %26 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #11
  br label %143

81:                                               ; preds = %3
  %82 = bitcast %union.anon* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #11
  %83 = getelementptr inbounds %union.anon, %union.anon* %7, i64 0, i32 0
  store double 0xFFFFFFFFFFFFFFFF, double* %83, align 8
  %84 = getelementptr inbounds %"class.sql::recover::RecordReader", %"class.sql::recover::RecordReader"* %0, i64 0, i32 2
  %85 = load %"class.sql::recover::LeafPayloadReader"*, %"class.sql::recover::LeafPayloadReader"** %84, align 8
  %86 = load i64, i64* %11, align 8
  %87 = call zeroext i1 @_ZN3sql7recover17LeafPayloadReader11ReadPayloadEllPh(%"class.sql::recover::LeafPayloadReader"* %85, i64 %86, i64 8, i8* nonnull %82) #11
  br i1 %87, label %88, label %128

88:                                               ; preds = %81
  %89 = load i8, i8* %82, align 8
  %90 = zext i8 %89 to i64
  %91 = shl nuw i64 %90, 56
  %92 = getelementptr inbounds i8, i8* %82, i64 1
  %93 = load i8, i8* %92, align 1
  %94 = zext i8 %93 to i64
  %95 = shl nuw nsw i64 %94, 48
  %96 = or i64 %95, %91
  %97 = getelementptr inbounds i8, i8* %82, i64 2
  %98 = load i8, i8* %97, align 2
  %99 = zext i8 %98 to i64
  %100 = shl nuw nsw i64 %99, 40
  %101 = or i64 %96, %100
  %102 = getelementptr inbounds i8, i8* %82, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = shl nuw nsw i64 %104, 32
  %106 = or i64 %101, %105
  %107 = getelementptr inbounds i8, i8* %82, i64 4
  %108 = load i8, i8* %107, align 4
  %109 = zext i8 %108 to i64
  %110 = shl nuw nsw i64 %109, 24
  %111 = or i64 %106, %110
  %112 = getelementptr inbounds i8, i8* %82, i64 5
  %113 = load i8, i8* %112, align 1
  %114 = zext i8 %113 to i64
  %115 = shl nuw nsw i64 %114, 16
  %116 = or i64 %111, %115
  %117 = getelementptr inbounds i8, i8* %82, i64 6
  %118 = load i8, i8* %117, align 2
  %119 = zext i8 %118 to i64
  %120 = shl nuw nsw i64 %119, 8
  %121 = or i64 %116, %120
  %122 = getelementptr inbounds i8, i8* %82, i64 7
  %123 = load i8, i8* %122, align 1
  %124 = zext i8 %123 to i64
  %125 = or i64 %121, %124
  %126 = bitcast %union.anon* %7 to i64*
  store i64 %125, i64* %126, align 8
  %127 = bitcast i64 %125 to double
  call void @chrome_sqlite3_result_double(%struct.sqlite3_context* %2, double %127) #11
  br label %128

128:                                              ; preds = %81, %88
  %129 = phi i1 [ true, %88 ], [ false, %81 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #11
  br label %143

130:                                              ; preds = %3, %3
  %131 = tail call i8* @_Znam(i64 %14) #10
  %132 = icmp sgt i64 %14, 0
  br i1 %132, label %133, label %138

133:                                              ; preds = %130
  %134 = getelementptr inbounds %"class.sql::recover::RecordReader", %"class.sql::recover::RecordReader"* %0, i64 0, i32 2
  %135 = load %"class.sql::recover::LeafPayloadReader"*, %"class.sql::recover::LeafPayloadReader"** %134, align 8
  %136 = tail call zeroext i1 @_ZN3sql7recover17LeafPayloadReader11ReadPayloadEllPh(%"class.sql::recover::LeafPayloadReader"* %135, i64 %12, i64 %14, i8* nonnull %131) #11
  br i1 %136, label %138, label %137

137:                                              ; preds = %133
  tail call void @_ZdaPv(i8* nonnull %131) #10
  br label %143

138:                                              ; preds = %133, %130
  %139 = load i32, i32* %15, align 8
  %140 = icmp eq i32 %139, 4
  br i1 %140, label %141, label %142

141:                                              ; preds = %138
  tail call void @chrome_sqlite3_result_blob64(%struct.sqlite3_context* %2, i8* nonnull %131, i64 %14, void (i8*)* nonnull @_ZN3sql7recover12_GLOBAL__N_117ValueBytesDeleterEPv) #11
  br label %143

142:                                              ; preds = %138
  tail call void @chrome_sqlite3_result_text64(%struct.sqlite3_context* %2, i8* nonnull %131, i64 %14, void (i8*)* nonnull @_ZN3sql7recover12_GLOBAL__N_117ValueBytesDeleterEPv, i8 zeroext 1) #11
  br label %143

143:                                              ; preds = %3, %137, %142, %141, %128, %79, %22, %17
  %144 = phi i1 [ true, %17 ], [ true, %22 ], [ %80, %79 ], [ %129, %128 ], [ false, %137 ], [ true, %142 ], [ true, %141 ], [ false, %3 ]
  ret i1 %144
}

declare void @chrome_sqlite3_result_null(%struct.sqlite3_context*) local_unnamed_addr #2

declare void @chrome_sqlite3_result_int(%struct.sqlite3_context*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN3sql7recover17LeafPayloadReader11ReadPayloadEllPh(%"class.sql::recover::LeafPayloadReader"*, i64, i64, i8*) local_unnamed_addr #2

declare void @chrome_sqlite3_result_int64(%struct.sqlite3_context*, i64) local_unnamed_addr #2

declare void @chrome_sqlite3_result_double(%struct.sqlite3_context*, double) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #5

declare void @chrome_sqlite3_result_blob64(%struct.sqlite3_context*, i8*, i64, void (i8*)*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3sql7recover12_GLOBAL__N_117ValueBytesDeleterEPv(i8*) #0 {
  %2 = icmp eq i8* %0, null
  br i1 %2, label %4, label %3

3:                                                ; preds = %1
  tail call void @_ZdaPv(i8* nonnull %0) #10
  br label %4

4:                                                ; preds = %3, %1
  ret void
}

declare void @chrome_sqlite3_result_text64(%struct.sqlite3_context*, i8*, i64, void (i8*)*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3sql7recover12RecordReader5ResetEv(%"class.sql::recover::RecordReader"* nocapture) local_unnamed_addr #6 align 2 {
  %2 = bitcast %"class.sql::recover::RecordReader"* %0 to i64*
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.sql::recover::RecordReader", %"class.sql::recover::RecordReader"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = bitcast %"struct.sql::recover::RecordReader::ValueHeader"** %4 to i64*
  store i64 %3, i64* %5, align 8
  ret void
}

declare i8* @_ZN3sql7recover17LeafPayloadReader17ReadInlinePayloadEv(%"class.sql::recover::LeafPayloadReader"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector.1"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = icmp ult i64 %9, %1
  br i1 %10, label %22, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %8 to i8*
  %13 = icmp eq i64 %1, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds i8, i8* %12, i64 %1
  %16 = sub i64 %1, %8
  %17 = getelementptr i8, i8* %12, i64 %16
  %18 = ptrtoint i8* %17 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %12, i8 0, i64 %18, i1 false) #11
  %19 = ptrtoint i8* %15 to i64
  br label %20

20:                                               ; preds = %11, %14
  %21 = phi i64 [ %19, %14 ], [ %8, %11 ]
  store i64 %21, i64* %7, align 8
  br label %68

22:                                               ; preds = %2
  %23 = bitcast %"class.std::__1::vector.1"* %0 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %8, %24
  %26 = add i64 %25, %1
  %27 = icmp slt i64 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %22
  %29 = bitcast %"class.std::__1::vector.1"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %29) #9
  unreachable

30:                                               ; preds = %22
  %31 = sub i64 %5, %24
  %32 = icmp ult i64 %31, 4611686018427387903
  br i1 %32, label %33, label %38

33:                                               ; preds = %30
  %34 = shl i64 %31, 1
  %35 = icmp ult i64 %34, %26
  %36 = select i1 %35, i64 %26, i64 %34
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %30, %33
  %39 = phi i64 [ %36, %33 ], [ 9223372036854775807, %30 ]
  %40 = tail call i8* @_Znwm(i64 %39) #10
  br label %41

41:                                               ; preds = %38, %33
  %42 = phi i64 [ %39, %38 ], [ 0, %33 ]
  %43 = phi i8* [ %40, %38 ], [ null, %33 ]
  %44 = getelementptr inbounds i8, i8* %43, i64 %25
  %45 = ptrtoint i8* %44 to i64
  %46 = getelementptr inbounds i8, i8* %43, i64 %42
  %47 = getelementptr inbounds i8, i8* %44, i64 %1
  %48 = sub i64 %1, %45
  %49 = getelementptr i8, i8* %44, i64 %48
  %50 = ptrtoint i8* %49 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %44, i8 0, i64 %50, i1 false) #11
  %51 = ptrtoint i8* %46 to i64
  %52 = ptrtoint i8* %47 to i64
  %53 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = load i64, i64* %7, align 8
  %56 = ptrtoint i8* %54 to i64
  %57 = sub i64 %55, %56
  %58 = sub i64 0, %57
  %59 = getelementptr inbounds i8, i8* %44, i64 %58
  %60 = ptrtoint i8* %59 to i64
  %61 = icmp sgt i64 %57, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %41
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %59, i8* align 1 %54, i64 %57, i1 false) #11
  %63 = load i8*, i8** %53, align 8
  br label %64

64:                                               ; preds = %41, %62
  %65 = phi i8* [ %54, %41 ], [ %63, %62 ]
  store i64 %60, i64* %23, align 8
  store i64 %52, i64* %7, align 8
  store i64 %51, i64* %4, align 8
  %66 = icmp eq i8* %65, null
  br i1 %66, label %68, label %67

67:                                               ; preds = %64
  tail call void @_ZdlPv(i8* nonnull %65) #10
  br label %68

68:                                               ; preds = %67, %64, %20
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
