; ModuleID = '../../media/blink/webmediasource_impl.cc'
source_filename = "../../media/blink/webmediasource_impl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.media::WebMediaSourceImpl" = type { %"class.blink::WebMediaSource", %"class.media::ChunkDemuxer"* }
%"class.blink::WebMediaSource" = type { i32 (...)** }
%"class.media::ChunkDemuxer" = type { %"class.media::Demuxer", %"class.base::Lock", i32, i8, %"class.media::DemuxerHost"*, %"class.base::OnceCallback", %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.1", %"class.media::MediaLog"*, %"class.base::OnceCallback.4", %"class.base::OnceCallback.4", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::set", %"class.base::TimeDelta", double, %"class.base::Time", i32, %"class.std::__1::map", %"class.std::__1::map.21", %"class.std::__1::vector", %"class.std::__1::map.30" }
%"class.media::Demuxer" = type { %"class.media::MediaResource" }
%"class.media::MediaResource" = type { i32 (...)** }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.media::DemuxerHost" = type { i32 (...)** }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::RepeatingCallback.1" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.media::MediaLog" = type { i32 (...)**, %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"struct.media::MediaLog::ParentLogRecord"* }
%"struct.media::MediaLog::ParentLogRecord" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.3", i32, %"class.base::Lock", %"class.media::MediaLog"* }
%"class.base::RefCountedThreadSafe.3" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::OnceCallback.4" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.6", %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { i64 }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree.14" }
%"class.std::__1::__tree.14" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.15", %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::map.21" = type { %"class.std::__1::__tree.22" }
%"class.std::__1::__tree.22" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.23", %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::unique_ptr" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::map.30" = type { %"class.std::__1::__tree.31" }
%"class.std::__1::__tree.31" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.32", %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.blink::WebSourceBuffer" = type { i32 (...)** }
%"class.blink::WebString" = type { %class.scoped_refptr.45 }
%class.scoped_refptr.45 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.media::WebSourceBufferImpl" = type { %"class.blink::WebSourceBuffer", %"class.std::__1::basic_string", %"class.media::ChunkDemuxer"*, %"class.blink::WebSourceBufferClient"*, %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta" }
%"class.blink::WebSourceBufferClient" = type opaque
%"class.media::AudioDecoderConfig" = type <{ i32, i32, i32, i32, i32, i32, %"class.std::__1::vector.60", i32, i32, i32, i32, %"class.base::TimeDelta", i32, i8, [3 x i8] }>
%"class.std::__1::vector.60" = type { %"class.std::__1::__vector_base.61" }
%"class.std::__1::__vector_base.61" = type { i8*, i8*, %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { i8* }
%"class.media::VideoDecoderConfig" = type <{ i32, i32, i32, i32, %"struct.media::VideoTransformation", %"class.gfx::Size", %"class.gfx::Rect", %"class.gfx::Size", %"class.std::__1::vector.60", i32, %"class.media::VideoColorSpace", %"class.absl::optional", i8, [3 x i8] }>
%"struct.media::VideoTransformation" = type <{ i32, i8, [3 x i8] }>
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.media::VideoColorSpace" = type { i8, i8, i8, i8 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.73 }
%union.anon.73 = type { %"struct.gfx::HDRMetadata" }
%"struct.gfx::HDRMetadata" = type { %"struct.gfx::MasteringMetadata", i32, i32 }
%"struct.gfx::MasteringMetadata" = type { %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", float, float }
%"class.gfx::PointF" = type { float, float }

@_ZTVN5media18WebMediaSourceImplE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.media::WebMediaSourceImpl"*)* @_ZN5media18WebMediaSourceImplD2Ev to i8*), i8* bitcast (void (%"class.media::WebMediaSourceImpl"*)* @_ZN5media18WebMediaSourceImplD0Ev to i8*), i8* bitcast (%"class.blink::WebSourceBuffer"* (%"class.media::WebMediaSourceImpl"*, %"class.blink::WebString"*, %"class.blink::WebString"*, i32*)* @_ZN5media18WebMediaSourceImpl15AddSourceBufferERKN5blink9WebStringES4_RNS1_14WebMediaSource9AddStatusE to i8*), i8* bitcast (%"class.blink::WebSourceBuffer"* (%"class.media::WebMediaSourceImpl"*, %"class.media::AudioDecoderConfig"*, i32*)* @_ZN5media18WebMediaSourceImpl15AddSourceBufferENSt3__110unique_ptrINS_18AudioDecoderConfigENS1_14default_deleteIS3_EEEERN5blink14WebMediaSource9AddStatusE to i8*), i8* bitcast (%"class.blink::WebSourceBuffer"* (%"class.media::WebMediaSourceImpl"*, %"class.media::VideoDecoderConfig"*, i32*)* @_ZN5media18WebMediaSourceImpl15AddSourceBufferENSt3__110unique_ptrINS_18VideoDecoderConfigENS1_14default_deleteIS3_EEEERN5blink14WebMediaSource9AddStatusE to i8*), i8* bitcast (double (%"class.media::WebMediaSourceImpl"*)* @_ZN5media18WebMediaSourceImpl8DurationEv to i8*), i8* bitcast (void (%"class.media::WebMediaSourceImpl"*, double)* @_ZN5media18WebMediaSourceImpl11SetDurationEd to i8*), i8* bitcast (void (%"class.media::WebMediaSourceImpl"*, i32)* @_ZN5media18WebMediaSourceImpl15MarkEndOfStreamEN5blink14WebMediaSource17EndOfStreamStatusE to i8*), i8* bitcast (void (%"class.media::WebMediaSourceImpl"*)* @_ZN5media18WebMediaSourceImpl17UnmarkEndOfStreamEv to i8*)] }, align 8

@_ZN5media18WebMediaSourceImplC1EPNS_12ChunkDemuxerE = hidden unnamed_addr alias void (%"class.media::WebMediaSourceImpl"*, %"class.media::ChunkDemuxer"*), void (%"class.media::WebMediaSourceImpl"*, %"class.media::ChunkDemuxer"*)* @_ZN5media18WebMediaSourceImplC2EPNS_12ChunkDemuxerE
@_ZN5media18WebMediaSourceImplD1Ev = hidden unnamed_addr alias void (%"class.media::WebMediaSourceImpl"*), void (%"class.media::WebMediaSourceImpl"*)* @_ZN5media18WebMediaSourceImplD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5media18WebMediaSourceImplC2EPNS_12ChunkDemuxerE(%"class.media::WebMediaSourceImpl"* nocapture, %"class.media::ChunkDemuxer"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.media::WebMediaSourceImpl", %"class.media::WebMediaSourceImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5media18WebMediaSourceImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.media::WebMediaSourceImpl", %"class.media::WebMediaSourceImpl"* %0, i64 0, i32 1
  store %"class.media::ChunkDemuxer"* %1, %"class.media::ChunkDemuxer"** %4, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5media18WebMediaSourceImplD2Ev(%"class.media::WebMediaSourceImpl"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media18WebMediaSourceImplD0Ev(%"class.media::WebMediaSourceImpl"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.media::WebMediaSourceImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::WebSourceBuffer"* @_ZN5media18WebMediaSourceImpl15AddSourceBufferERKN5blink9WebStringES4_RNS1_14WebMediaSource9AddStatusE(%"class.media::WebMediaSourceImpl"* nocapture readonly, %"class.blink::WebString"* dereferenceable(8), %"class.blink::WebString"* dereferenceable(8), i32* nocapture dereferenceable(4)) unnamed_addr #2 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #8
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  call void @_ZN4base12GenerateGUIDEv(%"class.std::__1::basic_string"* nonnull sret %5) #8
  %11 = getelementptr inbounds %"class.media::WebMediaSourceImpl", %"class.media::WebMediaSourceImpl"* %0, i64 0, i32 1
  %12 = load %"class.media::ChunkDemuxer"*, %"class.media::ChunkDemuxer"** %11, align 8
  %13 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #8
  call void @_ZNK5blink9WebString4Utf8ENS0_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %6, %"class.blink::WebString"* %1, i32 0) #8
  %14 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #8
  call void @_ZNK5blink9WebString4Utf8ENS0_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %7, %"class.blink::WebString"* %2, i32 0) #8
  %15 = call i32 @_ZN5media12ChunkDemuxer5AddIdERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_S9_(%"class.media::ChunkDemuxer"* %12, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #8
  store i32 %15, i32* %3, align 4
  %16 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %4
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  call void @_ZdlPv(i8* %22) #7
  br label %23

23:                                               ; preds = %4, %20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #8
  %24 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  call void @_ZdlPv(i8* %30) #7
  br label %31

31:                                               ; preds = %23, %28
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #8
  %32 = load i32, i32* %3, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %39

34:                                               ; preds = %31
  %35 = call i8* @_Znwm(i64 72) #7
  %36 = bitcast i8* %35 to %"class.media::WebSourceBufferImpl"*
  %37 = load %"class.media::ChunkDemuxer"*, %"class.media::ChunkDemuxer"** %11, align 8
  call void @_ZN5media19WebSourceBufferImplC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS_12ChunkDemuxerE(%"class.media::WebSourceBufferImpl"* nonnull %36, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5, %"class.media::ChunkDemuxer"* %37) #8
  %38 = bitcast i8* %35 to %"class.blink::WebSourceBuffer"*
  br label %39

39:                                               ; preds = %31, %34
  %40 = phi %"class.blink::WebSourceBuffer"* [ %38, %34 ], [ null, %31 ]
  %41 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %47

45:                                               ; preds = %39
  %46 = load i8*, i8** %9, align 8
  call void @_ZdlPv(i8* %46) #7
  br label %47

47:                                               ; preds = %39, %45
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #8
  ret %"class.blink::WebSourceBuffer"* %40
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN4base12GenerateGUIDEv(%"class.std::__1::basic_string"* sret) local_unnamed_addr #5

declare i32 @_ZN5media12ChunkDemuxer5AddIdERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_S9_(%"class.media::ChunkDemuxer"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #5

declare void @_ZNK5blink9WebString4Utf8ENS0_18UTF8ConversionModeE(%"class.std::__1::basic_string"* sret, %"class.blink::WebString"*, i32) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::WebSourceBuffer"* @_ZN5media18WebMediaSourceImpl15AddSourceBufferENSt3__110unique_ptrINS_18AudioDecoderConfigENS1_14default_deleteIS3_EEEERN5blink14WebMediaSource9AddStatusE(%"class.media::WebMediaSourceImpl"* nocapture readonly, %"class.media::AudioDecoderConfig"*, i32* nocapture dereferenceable(4)) unnamed_addr #2 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 24, i1 false)
  call void @_ZN4base12GenerateGUIDEv(%"class.std::__1::basic_string"* nonnull sret %4) #8
  %8 = getelementptr inbounds %"class.media::WebMediaSourceImpl", %"class.media::WebMediaSourceImpl"* %0, i64 0, i32 1
  %9 = load %"class.media::ChunkDemuxer"*, %"class.media::ChunkDemuxer"** %8, align 8
  %10 = call i32 @_ZN5media12ChunkDemuxer5AddIdERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10unique_ptrINS_18AudioDecoderConfigENS1_14default_deleteISB_EEEE(%"class.media::ChunkDemuxer"* %9, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, %"class.media::AudioDecoderConfig"* %1) #8
  store i32 %10, i32* %2, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %17

12:                                               ; preds = %3
  %13 = call i8* @_Znwm(i64 72) #7
  %14 = bitcast i8* %13 to %"class.media::WebSourceBufferImpl"*
  %15 = load %"class.media::ChunkDemuxer"*, %"class.media::ChunkDemuxer"** %8, align 8
  call void @_ZN5media19WebSourceBufferImplC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS_12ChunkDemuxerE(%"class.media::WebSourceBufferImpl"* nonnull %14, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, %"class.media::ChunkDemuxer"* %15) #8
  %16 = bitcast i8* %13 to %"class.blink::WebSourceBuffer"*
  br label %17

17:                                               ; preds = %3, %12
  %18 = phi %"class.blink::WebSourceBuffer"* [ %16, %12 ], [ null, %3 ]
  %19 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %17
  %24 = load i8*, i8** %6, align 8
  call void @_ZdlPv(i8* %24) #7
  br label %25

25:                                               ; preds = %23, %17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #8
  ret %"class.blink::WebSourceBuffer"* %18
}

declare i32 @_ZN5media12ChunkDemuxer5AddIdERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10unique_ptrINS_18AudioDecoderConfigENS1_14default_deleteISB_EEEE(%"class.media::ChunkDemuxer"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.media::AudioDecoderConfig"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::WebSourceBuffer"* @_ZN5media18WebMediaSourceImpl15AddSourceBufferENSt3__110unique_ptrINS_18VideoDecoderConfigENS1_14default_deleteIS3_EEEERN5blink14WebMediaSource9AddStatusE(%"class.media::WebMediaSourceImpl"* nocapture readonly, %"class.media::VideoDecoderConfig"*, i32* nocapture dereferenceable(4)) unnamed_addr #2 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 24, i1 false)
  call void @_ZN4base12GenerateGUIDEv(%"class.std::__1::basic_string"* nonnull sret %4) #8
  %8 = getelementptr inbounds %"class.media::WebMediaSourceImpl", %"class.media::WebMediaSourceImpl"* %0, i64 0, i32 1
  %9 = load %"class.media::ChunkDemuxer"*, %"class.media::ChunkDemuxer"** %8, align 8
  %10 = call i32 @_ZN5media12ChunkDemuxer5AddIdERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10unique_ptrINS_18VideoDecoderConfigENS1_14default_deleteISB_EEEE(%"class.media::ChunkDemuxer"* %9, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, %"class.media::VideoDecoderConfig"* %1) #8
  store i32 %10, i32* %2, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %17

12:                                               ; preds = %3
  %13 = call i8* @_Znwm(i64 72) #7
  %14 = bitcast i8* %13 to %"class.media::WebSourceBufferImpl"*
  %15 = load %"class.media::ChunkDemuxer"*, %"class.media::ChunkDemuxer"** %8, align 8
  call void @_ZN5media19WebSourceBufferImplC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS_12ChunkDemuxerE(%"class.media::WebSourceBufferImpl"* nonnull %14, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, %"class.media::ChunkDemuxer"* %15) #8
  %16 = bitcast i8* %13 to %"class.blink::WebSourceBuffer"*
  br label %17

17:                                               ; preds = %3, %12
  %18 = phi %"class.blink::WebSourceBuffer"* [ %16, %12 ], [ null, %3 ]
  %19 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %17
  %24 = load i8*, i8** %6, align 8
  call void @_ZdlPv(i8* %24) #7
  br label %25

25:                                               ; preds = %23, %17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #8
  ret %"class.blink::WebSourceBuffer"* %18
}

declare i32 @_ZN5media12ChunkDemuxer5AddIdERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10unique_ptrINS_18VideoDecoderConfigENS1_14default_deleteISB_EEEE(%"class.media::ChunkDemuxer"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.media::VideoDecoderConfig"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZN5media18WebMediaSourceImpl8DurationEv(%"class.media::WebMediaSourceImpl"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.media::WebMediaSourceImpl", %"class.media::WebMediaSourceImpl"* %0, i64 0, i32 1
  %3 = load %"class.media::ChunkDemuxer"*, %"class.media::ChunkDemuxer"** %2, align 8
  %4 = tail call double @_ZN5media12ChunkDemuxer11GetDurationEv(%"class.media::ChunkDemuxer"* %3) #8
  ret double %4
}

declare double @_ZN5media12ChunkDemuxer11GetDurationEv(%"class.media::ChunkDemuxer"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media18WebMediaSourceImpl11SetDurationEd(%"class.media::WebMediaSourceImpl"* nocapture readonly, double) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.media::WebMediaSourceImpl", %"class.media::WebMediaSourceImpl"* %0, i64 0, i32 1
  %4 = load %"class.media::ChunkDemuxer"*, %"class.media::ChunkDemuxer"** %3, align 8
  tail call void @_ZN5media12ChunkDemuxer11SetDurationEd(%"class.media::ChunkDemuxer"* %4, double %1) #8
  ret void
}

declare void @_ZN5media12ChunkDemuxer11SetDurationEd(%"class.media::ChunkDemuxer"*, double) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media18WebMediaSourceImpl15MarkEndOfStreamEN5blink14WebMediaSource17EndOfStreamStatusE(%"class.media::WebMediaSourceImpl"* nocapture readonly, i32) unnamed_addr #2 align 2 {
  %3 = icmp eq i32 %1, 1
  %4 = select i1 %3, i32 18, i32 0
  %5 = icmp eq i32 %1, 2
  %6 = select i1 %5, i32 17, i32 %4
  %7 = getelementptr inbounds %"class.media::WebMediaSourceImpl", %"class.media::WebMediaSourceImpl"* %0, i64 0, i32 1
  %8 = load %"class.media::ChunkDemuxer"*, %"class.media::ChunkDemuxer"** %7, align 8
  tail call void @_ZN5media12ChunkDemuxer15MarkEndOfStreamENS_14PipelineStatusE(%"class.media::ChunkDemuxer"* %8, i32 %6) #8
  ret void
}

declare void @_ZN5media12ChunkDemuxer15MarkEndOfStreamENS_14PipelineStatusE(%"class.media::ChunkDemuxer"*, i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media18WebMediaSourceImpl17UnmarkEndOfStreamEv(%"class.media::WebMediaSourceImpl"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.media::WebMediaSourceImpl", %"class.media::WebMediaSourceImpl"* %0, i64 0, i32 1
  %3 = load %"class.media::ChunkDemuxer"*, %"class.media::ChunkDemuxer"** %2, align 8
  tail call void @_ZN5media12ChunkDemuxer17UnmarkEndOfStreamEv(%"class.media::ChunkDemuxer"* %3) #8
  ret void
}

declare void @_ZN5media12ChunkDemuxer17UnmarkEndOfStreamEv(%"class.media::ChunkDemuxer"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZN5media19WebSourceBufferImplC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS_12ChunkDemuxerE(%"class.media::WebSourceBufferImpl"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.media::ChunkDemuxer"*) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { builtin nounwind }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
