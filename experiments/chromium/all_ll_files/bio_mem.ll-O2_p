; ModuleID = '../../third_party/boringssl/src/crypto/bio/bio_mem.c'
source_filename = "../../third_party/boringssl/src/crypto/bio/bio_mem.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.bio_method_st = type { i32, i8*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*)*, i32 (%struct.bio_st*, i8*, i32)*, i64 (%struct.bio_st*, i32, i64, i8*)*, i32 (%struct.bio_st*)*, i32 (%struct.bio_st*)*, i64 (%struct.bio_st*, i32, i64 (%struct.bio_st*, i32, i8*, i32, i64, i64)*)* }
%struct.bio_st = type { %struct.bio_method_st*, i32, i32, i32, i32, i32, i32, i8*, %struct.bio_st*, i64, i64 }
%struct.buf_mem_st = type { i64, i8*, i64 }

@.str = private unnamed_addr constant [53 x i8] c"../../third_party/boringssl/src/crypto/bio/bio_mem.c\00", align 1
@mem_method = internal constant %struct.bio_method_st { i32 1025, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i32 0, i32 0), i32 (%struct.bio_st*, i8*, i32)* @mem_write, i32 (%struct.bio_st*, i8*, i32)* @mem_read, i32 (%struct.bio_st*, i8*)* null, i32 (%struct.bio_st*, i8*, i32)* @mem_gets, i64 (%struct.bio_st*, i32, i64, i8*)* @mem_ctrl, i32 (%struct.bio_st*)* @mem_new, i32 (%struct.bio_st*)* @mem_free, i64 (%struct.bio_st*, i32, i64 (%struct.bio_st*, i32, i8*, i32, i64, i64)*)* null }, align 8
@.str.1 = private unnamed_addr constant [14 x i8] c"memory buffer\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.bio_st* @BIO_new_mem_buf(i8*, i32) local_unnamed_addr #0 {
  %3 = icmp slt i32 %1, 0
  br i1 %3, label %4, label %6

4:                                                ; preds = %2
  %5 = tail call i64 @strlen(i8* %0) #6
  br label %8

6:                                                ; preds = %2
  %7 = sext i32 %1 to i64
  br label %8

8:                                                ; preds = %6, %4
  %9 = phi i64 [ %5, %4 ], [ %7, %6 ]
  %10 = icmp eq i8* %0, null
  %11 = icmp ne i32 %1, 0
  %12 = and i1 %10, %11
  br i1 %12, label %13, label %14

13:                                               ; preds = %8
  tail call void @ERR_put_error(i32 17, i32 0, i32 111, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i32 75) #7
  br label %28

14:                                               ; preds = %8
  %15 = tail call %struct.bio_st* @BIO_new(%struct.bio_method_st* nonnull @mem_method) #7
  %16 = icmp eq %struct.bio_st* %15, null
  br i1 %16, label %28, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %15, i64 0, i32 7
  %19 = bitcast i8** %18 to %struct.buf_mem_st**
  %20 = load %struct.buf_mem_st*, %struct.buf_mem_st** %19, align 8
  %21 = getelementptr inbounds %struct.buf_mem_st, %struct.buf_mem_st* %20, i64 0, i32 1
  store i8* %0, i8** %21, align 8
  %22 = getelementptr inbounds %struct.buf_mem_st, %struct.buf_mem_st* %20, i64 0, i32 0
  store i64 %9, i64* %22, align 8
  %23 = getelementptr inbounds %struct.buf_mem_st, %struct.buf_mem_st* %20, i64 0, i32 2
  store i64 %9, i64* %23, align 8
  %24 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %15, i64 0, i32 3
  %25 = load i32, i32* %24, align 8
  %26 = or i32 %25, 512
  store i32 %26, i32* %24, align 8
  %27 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %15, i64 0, i32 5
  store i32 0, i32* %27, align 8
  br label %28

28:                                               ; preds = %14, %17, %13
  %29 = phi %struct.bio_st* [ null, %13 ], [ %15, %17 ], [ null, %14 ]
  ret %struct.bio_st* %29
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #1

declare void @ERR_put_error(i32, i32, i32, i8*, i32) local_unnamed_addr #2

declare %struct.bio_st* @BIO_new(%struct.bio_method_st*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.bio_method_st* @BIO_s_mem() local_unnamed_addr #3 {
  ret %struct.bio_method_st* @mem_method
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @BIO_mem_contents(%struct.bio_st* nocapture readonly, i8** nocapture, i64* nocapture) local_unnamed_addr #4 {
  %4 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 0
  %5 = load %struct.bio_method_st*, %struct.bio_method_st** %4, align 8
  %6 = icmp eq %struct.bio_method_st* %5, @mem_method
  br i1 %6, label %7, label %17

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 7
  %9 = bitcast i8** %8 to %struct.buf_mem_st**
  %10 = load %struct.buf_mem_st*, %struct.buf_mem_st** %9, align 8
  %11 = getelementptr inbounds %struct.buf_mem_st, %struct.buf_mem_st* %10, i64 0, i32 1
  %12 = bitcast i8** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast i8** %1 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %struct.buf_mem_st, %struct.buf_mem_st* %10, i64 0, i32 0
  %16 = load i64, i64* %15, align 8
  store i64 %16, i64* %2, align 8
  br label %17

17:                                               ; preds = %3, %7
  %18 = phi i32 [ 1, %7 ], [ 0, %3 ]
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @BIO_get_mem_data(%struct.bio_st*, i8**) local_unnamed_addr #0 {
  %3 = bitcast i8** %1 to i8*
  %4 = tail call i64 @BIO_ctrl(%struct.bio_st* %0, i32 3, i64 0, i8* %3) #7
  ret i64 %4
}

declare i64 @BIO_ctrl(%struct.bio_st*, i32, i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @BIO_get_mem_ptr(%struct.bio_st*, %struct.buf_mem_st**) local_unnamed_addr #0 {
  %3 = bitcast %struct.buf_mem_st** %1 to i8*
  %4 = tail call i64 @BIO_ctrl(%struct.bio_st* %0, i32 115, i64 0, i8* %3) #7
  %5 = trunc i64 %4 to i32
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @BIO_set_mem_buf(%struct.bio_st*, %struct.buf_mem_st*, i32) local_unnamed_addr #0 {
  %4 = sext i32 %2 to i64
  %5 = bitcast %struct.buf_mem_st* %1 to i8*
  %6 = tail call i64 @BIO_ctrl(%struct.bio_st* %0, i32 114, i64 %4, i8* %5) #7
  %7 = trunc i64 %6 to i32
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @BIO_set_mem_eof_return(%struct.bio_st*, i32) local_unnamed_addr #0 {
  %3 = sext i32 %1 to i64
  %4 = tail call i64 @BIO_ctrl(%struct.bio_st* %0, i32 130, i64 %3, i8* null) #7
  %5 = trunc i64 %4 to i32
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mem_write(%struct.bio_st*, i8* nocapture readonly, i32) #0 {
  %4 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 7
  %5 = bitcast i8** %4 to %struct.buf_mem_st**
  %6 = load %struct.buf_mem_st*, %struct.buf_mem_st** %5, align 8
  %7 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 512
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %3
  tail call void @ERR_put_error(i32 17, i32 0, i32 116, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i32 173) #7
  br label %33

12:                                               ; preds = %3
  tail call void @BIO_clear_retry_flags(%struct.bio_st* %0) #7
  %13 = getelementptr inbounds %struct.buf_mem_st, %struct.buf_mem_st* %6, i64 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = trunc i64 %14 to i32
  %16 = sub nsw i32 2147483647, %15
  %17 = icmp slt i32 %16, %2
  br i1 %17, label %33, label %18

18:                                               ; preds = %12
  %19 = add nsw i32 %15, %2
  %20 = sext i32 %19 to i64
  %21 = tail call i64 @BUF_MEM_grow_clean(%struct.buf_mem_st* %6, i64 %20) #7
  %22 = shl i64 %14, 32
  %23 = ashr exact i64 %22, 32
  %24 = sext i32 %2 to i64
  %25 = add nsw i64 %23, %24
  %26 = icmp eq i64 %21, %25
  br i1 %26, label %27, label %33

27:                                               ; preds = %18
  %28 = icmp eq i32 %2, 0
  br i1 %28, label %33, label %29

29:                                               ; preds = %27
  %30 = getelementptr inbounds %struct.buf_mem_st, %struct.buf_mem_st* %6, i64 0, i32 1
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds i8, i8* %31, i64 %23
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %32, i8* align 1 %1, i64 %24, i1 false) #7
  br label %33

33:                                               ; preds = %29, %27, %18, %12, %11
  %34 = phi i32 [ -1, %11 ], [ -1, %12 ], [ -1, %18 ], [ 0, %27 ], [ %2, %29 ]
  ret i32 %34
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mem_read(%struct.bio_st*, i8* nocapture, i32) #0 {
  %4 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 7
  %5 = bitcast i8** %4 to %struct.buf_mem_st**
  %6 = load %struct.buf_mem_st*, %struct.buf_mem_st** %5, align 8
  tail call void @BIO_clear_retry_flags(%struct.bio_st* %0) #7
  %7 = getelementptr inbounds %struct.buf_mem_st, %struct.buf_mem_st* %6, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, 2147483647
  %10 = trunc i64 %8 to i32
  %11 = icmp slt i32 %10, %2
  %12 = and i1 %9, %11
  %13 = select i1 %12, i32 %10, i32 %2
  %14 = icmp sgt i32 %13, 0
  br i1 %14, label %15, label %31

15:                                               ; preds = %3
  %16 = getelementptr inbounds %struct.buf_mem_st, %struct.buf_mem_st* %6, i64 0, i32 1
  %17 = sext i32 %13 to i64
  %18 = load i8*, i8** %16, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %18, i64 %17, i1 false) #7
  %19 = load i64, i64* %7, align 8
  %20 = sub i64 %19, %17
  store i64 %20, i64* %7, align 8
  %21 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 3
  %22 = load i32, i32* %21, align 8
  %23 = and i32 %22, 512
  %24 = icmp eq i32 %23, 0
  %25 = load i8*, i8** %16, align 8
  %26 = getelementptr inbounds i8, i8* %25, i64 %17
  br i1 %24, label %28, label %27

27:                                               ; preds = %15
  store i8* %26, i8** %16, align 8
  br label %38

28:                                               ; preds = %15
  %29 = icmp eq i64 %20, 0
  br i1 %29, label %38, label %30

30:                                               ; preds = %28
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %26, i64 %20, i1 false) #7
  br label %38

31:                                               ; preds = %3
  %32 = icmp eq i64 %8, 0
  br i1 %32, label %33, label %38

33:                                               ; preds = %31
  %34 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 5
  %35 = load i32, i32* %34, align 8
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %38, label %37

37:                                               ; preds = %33
  tail call void @BIO_set_retry_read(%struct.bio_st* %0) #7
  br label %38

38:                                               ; preds = %30, %28, %33, %31, %37, %27
  %39 = phi i32 [ %13, %27 ], [ %35, %37 ], [ 0, %33 ], [ %13, %31 ], [ %13, %28 ], [ %13, %30 ]
  ret i32 %39
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mem_gets(%struct.bio_st*, i8* nocapture, i32) #0 {
  %4 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 7
  %5 = bitcast i8** %4 to %struct.buf_mem_st**
  %6 = load %struct.buf_mem_st*, %struct.buf_mem_st** %5, align 8
  tail call void @BIO_clear_retry_flags(%struct.bio_st* %0) #7
  %7 = getelementptr inbounds %struct.buf_mem_st, %struct.buf_mem_st* %6, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %8 to i32
  %10 = icmp slt i32 %9, %2
  %11 = add nsw i32 %2, -1
  %12 = select i1 %10, i32 %9, i32 %11
  %13 = icmp slt i32 %12, 1
  br i1 %13, label %14, label %17

14:                                               ; preds = %3
  %15 = icmp sgt i32 %2, 0
  br i1 %15, label %16, label %74

16:                                               ; preds = %14
  store i8 0, i8* %1, align 1
  br label %74

17:                                               ; preds = %3
  %18 = getelementptr inbounds %struct.buf_mem_st, %struct.buf_mem_st* %6, i64 0, i32 1
  %19 = load i8*, i8** %18, align 8
  %20 = zext i32 %12 to i64
  br label %21

21:                                               ; preds = %25, %17
  %22 = phi i64 [ %29, %25 ], [ 0, %17 ]
  %23 = phi i32 [ %30, %25 ], [ 0, %17 ]
  %24 = icmp eq i64 %22, %20
  br i1 %24, label %31, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds i8, i8* %19, i64 %22
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 10
  %29 = add nuw nsw i64 %22, 1
  %30 = add nuw nsw i32 %23, 1
  br i1 %28, label %33, label %21

31:                                               ; preds = %21
  %32 = trunc i64 %22 to i32
  br label %33

33:                                               ; preds = %25, %31
  %34 = phi i32 [ %32, %31 ], [ %30, %25 ]
  %35 = load %struct.buf_mem_st*, %struct.buf_mem_st** %5, align 8
  tail call void @BIO_clear_retry_flags(%struct.bio_st* %0) #7
  %36 = getelementptr inbounds %struct.buf_mem_st, %struct.buf_mem_st* %35, i64 0, i32 0
  %37 = load i64, i64* %36, align 8
  %38 = icmp ult i64 %37, 2147483647
  %39 = trunc i64 %37 to i32
  %40 = icmp sgt i32 %34, %39
  %41 = and i1 %38, %40
  %42 = select i1 %41, i32 %39, i32 %34
  %43 = icmp sgt i32 %42, 0
  br i1 %43, label %44, label %60

44:                                               ; preds = %33
  %45 = getelementptr inbounds %struct.buf_mem_st, %struct.buf_mem_st* %35, i64 0, i32 1
  %46 = sext i32 %42 to i64
  %47 = load i8*, i8** %45, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %47, i64 %46, i1 false) #7
  %48 = load i64, i64* %36, align 8
  %49 = sub i64 %48, %46
  store i64 %49, i64* %36, align 8
  %50 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 3
  %51 = load i32, i32* %50, align 8
  %52 = and i32 %51, 512
  %53 = icmp eq i32 %52, 0
  %54 = load i8*, i8** %45, align 8
  %55 = getelementptr inbounds i8, i8* %54, i64 %46
  br i1 %53, label %57, label %56

56:                                               ; preds = %44
  store i8* %55, i8** %45, align 8
  br label %70

57:                                               ; preds = %44
  %58 = icmp eq i64 %49, 0
  br i1 %58, label %70, label %59

59:                                               ; preds = %57
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %54, i8* align 1 %55, i64 %49, i1 false) #7
  br label %70

60:                                               ; preds = %33
  %61 = icmp eq i64 %37, 0
  br i1 %61, label %62, label %74

62:                                               ; preds = %60
  %63 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 5
  %64 = load i32, i32* %63, align 8
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %74, label %66

66:                                               ; preds = %62
  tail call void @BIO_set_retry_read(%struct.bio_st* %0) #7
  %67 = icmp sgt i32 %64, 0
  br i1 %67, label %68, label %74

68:                                               ; preds = %66
  %69 = sext i32 %64 to i64
  br label %70

70:                                               ; preds = %68, %59, %57, %56
  %71 = phi i64 [ %69, %68 ], [ %46, %59 ], [ %46, %57 ], [ %46, %56 ]
  %72 = phi i32 [ %64, %68 ], [ %42, %59 ], [ %42, %57 ], [ %42, %56 ]
  %73 = getelementptr inbounds i8, i8* %1, i64 %71
  store i8 0, i8* %73, align 1
  br label %74

74:                                               ; preds = %60, %62, %66, %70, %14, %16
  %75 = phi i32 [ 0, %16 ], [ 0, %14 ], [ %72, %70 ], [ %64, %66 ], [ %42, %60 ], [ 0, %62 ]
  ret i32 %75
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @mem_ctrl(%struct.bio_st*, i32, i64, i8*) #0 {
  %5 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 7
  %6 = load i8*, i8** %5, align 8
  switch i32 %1, label %87 [
    i32 1, label %7
    i32 2, label %30
    i32 130, label %35
    i32 3, label %38
    i32 114, label %47
    i32 115, label %72
    i32 8, label %76
    i32 9, label %80
    i32 11, label %86
    i32 10, label %83
  ]

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %6, i64 8
  %9 = bitcast i8* %8 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %87, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 3
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 512
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds i8, i8* %6, i64 16
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 8
  br i1 %16, label %25, label %20

20:                                               ; preds = %12
  %21 = bitcast i8* %6 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %22, %19
  %24 = getelementptr inbounds i8, i8* %10, i64 %23
  store i8* %24, i8** %9, align 8
  store i64 %19, i64* %21, align 8
  br label %87

25:                                               ; preds = %12
  %26 = icmp eq i64 %19, 0
  br i1 %26, label %28, label %27

27:                                               ; preds = %25
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %10, i8 0, i64 %19, i1 false) #7
  br label %28

28:                                               ; preds = %25, %27
  %29 = bitcast i8* %6 to i64*
  store i64 0, i64* %29, align 8
  br label %87

30:                                               ; preds = %4
  %31 = bitcast i8* %6 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = icmp eq i64 %32, 0
  %34 = zext i1 %33 to i64
  br label %87

35:                                               ; preds = %4
  %36 = trunc i64 %2 to i32
  %37 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 5
  store i32 %36, i32* %37, align 8
  br label %87

38:                                               ; preds = %4
  %39 = bitcast i8* %6 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i8* %3, null
  br i1 %41, label %87, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds i8, i8* %6, i64 8
  %44 = bitcast i8* %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast i8* %3 to i64*
  store i64 %45, i64* %46, align 8
  br label %87

47:                                               ; preds = %4
  %48 = icmp eq %struct.bio_st* %0, null
  br i1 %48, label %69, label %49

49:                                               ; preds = %47
  %50 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 2
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %69, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 1
  %55 = load i32, i32* %54, align 8
  %56 = icmp eq i32 %55, 0
  %57 = icmp eq i8* %6, null
  %58 = or i1 %57, %56
  br i1 %58, label %69, label %59

59:                                               ; preds = %53
  %60 = bitcast i8* %6 to %struct.buf_mem_st*
  %61 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 3
  %62 = load i32, i32* %61, align 8
  %63 = and i32 %62, 512
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %68, label %65

65:                                               ; preds = %59
  %66 = getelementptr inbounds i8, i8* %6, i64 8
  %67 = bitcast i8* %66 to i8**
  store i8* null, i8** %67, align 8
  br label %68

68:                                               ; preds = %65, %59
  tail call void @BUF_MEM_free(%struct.buf_mem_st* nonnull %60) #7
  store i8* null, i8** %5, align 8
  br label %69

69:                                               ; preds = %47, %49, %53, %68
  %70 = trunc i64 %2 to i32
  %71 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 2
  store i32 %70, i32* %71, align 4
  store i8* %3, i8** %5, align 8
  br label %87

72:                                               ; preds = %4
  %73 = icmp eq i8* %3, null
  br i1 %73, label %87, label %74

74:                                               ; preds = %72
  %75 = bitcast i8* %3 to i8**
  store i8* %6, i8** %75, align 8
  br label %87

76:                                               ; preds = %4
  %77 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 2
  %78 = load i32, i32* %77, align 4
  %79 = sext i32 %78 to i64
  br label %87

80:                                               ; preds = %4
  %81 = trunc i64 %2 to i32
  %82 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 2
  store i32 %81, i32* %82, align 4
  br label %87

83:                                               ; preds = %4
  %84 = bitcast i8* %6 to i64*
  %85 = load i64, i64* %84, align 8
  br label %87

86:                                               ; preds = %4
  br label %87

87:                                               ; preds = %4, %7, %38, %72, %74, %42, %28, %20, %86, %83, %80, %76, %69, %35, %30
  %88 = phi i64 [ 1, %86 ], [ %85, %83 ], [ 1, %80 ], [ %79, %76 ], [ 1, %74 ], [ 1, %72 ], [ 1, %69 ], [ %40, %42 ], [ %40, %38 ], [ 1, %35 ], [ %34, %30 ], [ 1, %20 ], [ 1, %28 ], [ 1, %7 ], [ 0, %4 ]
  ret i64 %88
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mem_new(%struct.bio_st* nocapture) #0 {
  %2 = tail call %struct.buf_mem_st* @BUF_MEM_new() #7
  %3 = icmp eq %struct.buf_mem_st* %2, null
  br i1 %3, label %10, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 2
  store i32 1, i32* %5, align 4
  %6 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 1
  store i32 1, i32* %6, align 8
  %7 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 5
  store i32 -1, i32* %7, align 8
  %8 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 7
  %9 = bitcast i8** %8 to %struct.buf_mem_st**
  store %struct.buf_mem_st* %2, %struct.buf_mem_st** %9, align 8
  br label %10

10:                                               ; preds = %1, %4
  %11 = phi i32 [ 1, %4 ], [ 0, %1 ]
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @mem_free(%struct.bio_st*) #0 {
  %2 = icmp eq %struct.bio_st* %0, null
  br i1 %2, label %25, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %25, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %25, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 7
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %13, null
  br i1 %14, label %25, label %15

15:                                               ; preds = %11
  %16 = bitcast i8* %13 to %struct.buf_mem_st*
  %17 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 3
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 512
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %24, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds i8, i8* %13, i64 8
  %23 = bitcast i8* %22 to i8**
  store i8* null, i8** %23, align 8
  br label %24

24:                                               ; preds = %15, %21
  tail call void @BUF_MEM_free(%struct.buf_mem_st* nonnull %16) #7
  store i8* null, i8** %12, align 8
  br label %25

25:                                               ; preds = %11, %3, %7, %1, %24
  %26 = phi i32 [ 1, %24 ], [ 0, %1 ], [ 1, %7 ], [ 1, %3 ], [ 1, %11 ]
  ret i32 %26
}

declare void @BIO_clear_retry_flags(%struct.bio_st*) local_unnamed_addr #2

declare i64 @BUF_MEM_grow_clean(%struct.buf_mem_st*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

declare void @BIO_set_retry_read(%struct.bio_st*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

declare %struct.buf_mem_st* @BUF_MEM_new() local_unnamed_addr #2

declare void @BUF_MEM_free(%struct.buf_mem_st*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nounwind readonly }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
