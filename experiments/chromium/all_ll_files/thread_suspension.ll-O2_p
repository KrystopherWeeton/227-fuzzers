; ModuleID = '../../native_client/src/trusted/service_runtime/linux/thread_suspension.c'
source_filename = "../../native_client/src/trusted/service_runtime/linux/thread_suspension.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.NaClAppThread = type { %struct.NaClThreadContext, %struct.NaClMutex, %struct.NaClApp*, i32, i32, %struct.NaClThread, %struct.NaClMutex, i32, %struct.NaClAppThreadSuspendedRegisters*, i32, i64, i8*, i32, i32, i32, %struct.NaClListNode, i32, %struct.NaClCondVar }
%struct.NaClThreadContext = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i32, i16, i16, i64, i32, i32 }
%struct.NaClApp = type { i8, i64, i32, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, %struct.NaClMutex, %struct.NaClCondVar, [151 x %struct.NaClSyscallTableEntry], %struct.NaClResourceNaClApp, i32, i32, %struct.NaClVmmap, %struct.NaClIntervalMultiset*, %struct.NaClDescEffector*, i32, i32, %struct.NaClDesc*, %struct.NaClMutex, i8*, %struct.NaClDynamicRegion*, i32, i32, i32, i32, i64, i32, i32, i32, %struct.NaClCPUFeaturesAbstract*, %struct.NaClValidationCache*, i32, i32, i32, i32, i32, i64, %struct.NaClMutex, %struct.DynArray, i32, %struct.NaClFastMutex, %struct.DynArray, %struct.NaClDebugCallbacks*, %struct.NaClDesc*, %struct.NaClDesc*, %struct.NaClMutex, i32, i32, i32, i32, i32, i32, i32, %struct.NaClValidatorInterface* }
%struct.NaClSyscallTableEntry = type { i32 (%struct.NaClAppThread*)* }
%struct.NaClResourceNaClApp = type { %struct.NaClResource, %struct.NaClApp* }
%struct.NaClResource = type { %struct.NaClResourceSchemes*, i64 }
%struct.NaClResourceSchemes = type { i8*, i32, %struct.NaClDesc* (%struct.NaClResource*, i8*, i32, i32, i32)* }
%struct.NaClVmmap = type { %struct.NaClVmmapEntry**, i64, i64, i32 }
%struct.NaClVmmapEntry = type { i64, i64, i32, i32, i32, %struct.NaClDesc*, i64, i64 }
%struct.NaClIntervalMultiset = type { %struct.NaClIntervalMultisetVtbl* }
%struct.NaClIntervalMultisetVtbl = type { void (%struct.NaClIntervalMultiset*)*, void (%struct.NaClIntervalMultiset*, i32, i32)*, void (%struct.NaClIntervalMultiset*, i32, i32)*, i32 (%struct.NaClIntervalMultiset*, i32, i32)* }
%struct.NaClDescEffector = type opaque
%struct.NaClDynamicRegion = type opaque
%struct.NaClCPUFeaturesAbstract = type opaque
%struct.NaClValidationCache = type opaque
%struct.NaClFastMutex = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct.DynArray = type { i64, i8**, i64, i32*, i64 }
%struct.NaClDebugCallbacks = type { void (%struct.NaClAppThread*)*, void (%struct.NaClAppThread*)*, void ()* }
%struct.NaClDesc = type opaque
%struct.NaClValidatorInterface = type { i32, i32, i32, i32 (i64, i8*, i64, i32, i32, i32, %struct.NaClCPUFeaturesAbstract*, %struct.NaClValidationMetadata*, %struct.NaClValidationCache*)*, i32 (i64, i8*, i8*, i64, %struct.NaClCPUFeaturesAbstract*, i32 (i8*, i8*, i8)*)*, i32 (i64, i8*, i8*, i64, %struct.NaClCPUFeaturesAbstract*)*, i64, void (%struct.NaClCPUFeaturesAbstract*)*, void (%struct.NaClCPUFeaturesAbstract*)*, i32 (i64, i64, i8*, i64, %struct.NaClCPUFeaturesAbstract*)* }
%struct.NaClValidationMetadata = type opaque
%struct.NaClThread = type { i64 }
%struct.NaClMutex = type { %union.pthread_mutex_t, i32 }
%struct.NaClAppThreadSuspendedRegisters = type { %struct.NaClSignalContext }
%struct.NaClSignalContext = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.NaClListNode = type { %struct.NaClListNode*, %struct.NaClListNode* }
%struct.NaClCondVar = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon, %union.anon.0, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon = type { i64 }
%union.anon.0 = type { i64 }
%struct.__sigset_t = type { [16 x i64] }

@.str = private unnamed_addr constant [52 x i8] c"NaClAppThreadSetSuspendState: Unexpected state: %i\0A\00", align 1
@nacl_check_debug_mode = external local_unnamed_addr global i32, align 4
@.str.1 = private unnamed_addr constant [40 x i8] c"Fatal error in file %s, line %d: !(%s)\0A\00", align 1
@.str.2 = private unnamed_addr constant [74 x i8] c"../../native_client/src/trusted/service_runtime/linux/thread_suspension.c\00", align 1
@.str.3 = private unnamed_addr constant [46 x i8] c"(old_state & NACL_APP_THREAD_SUSPENDING) == 0\00", align 1
@.str.4 = private unnamed_addr constant [40 x i8] c"natp->suspend_state == suspending_state\00", align 1
@.str.5 = private unnamed_addr constant [45 x i8] c"NaClUntrustedThreadSuspend: malloc() failed\0A\00", align 1
@.str.6 = private unnamed_addr constant [29 x i8] c"natp->host_thread_is_defined\00", align 1
@.str.7 = private unnamed_addr constant [56 x i8] c"NaClUntrustedThreadSuspend: pthread_kill() call failed\0A\00", align 1
@.str.8 = private unnamed_addr constant [46 x i8] c"(old_state & NACL_APP_THREAD_SUSPENDING) != 0\00", align 1
@.str.9 = private unnamed_addr constant [189 x i8] c"natp->suspend_state == (NACL_APP_THREAD_UNTRUSTED | NACL_APP_THREAD_SUSPENDING | NACL_APP_THREAD_SUSPENDED) || natp->suspend_state == (NACL_APP_THREAD_TRUSTED | NACL_APP_THREAD_SUSPENDING)\00", align 1
@.str.10 = private unnamed_addr constant [41 x i8] c"FutexWait: futex() failed with error %d\0A\00", align 1
@.str.11 = private unnamed_addr constant [47 x i8] c"HandleSuspendSignal: Unexpected suspend_state\0A\00", align 1
@.str.12 = private unnamed_addr constant [48 x i8] c"HandleUntrustedFault: Unexpected suspend_state\0A\00", align 1
@.str.13 = private unnamed_addr constant [40 x i8] c"HandleUntrustedFault: sigwait() failed\0A\00", align 1
@.str.14 = private unnamed_addr constant [60 x i8] c"HandleUntrustedFault: sigwait() returned unexpected result\0A\00", align 1
@.str.15 = private unnamed_addr constant [49 x i8] c"FireDebugStubEvent: Can't send debug stub event\0A\00", align 1
@.str.16 = private unnamed_addr constant [55 x i8] c"WaitForUntrustedThreadToSuspend: Unexpected state: %d\0A\00", align 1
@.str.17 = private unnamed_addr constant [41 x i8] c"FutexWake: futex() failed with error %d\0A\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @NaClAppThreadSetSuspendState(%struct.NaClAppThread*, i32, i32) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %0, i64 0, i32 7
  %5 = cmpxchg i32* %4, i32 %1, i32 %2 seq_cst seq_cst
  %6 = extractvalue { i32, i1 } %5, 1
  br i1 %6, label %25, label %7, !prof !2

7:                                                ; preds = %3
  %8 = extractvalue { i32, i1 } %5, 0
  br label %9

9:                                                ; preds = %7, %21
  %10 = phi i32 [ %23, %21 ], [ %8, %7 ]
  %11 = and i32 %10, 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %20, label %13

13:                                               ; preds = %9
  %14 = tail call i64 (i64, ...) @syscall(i64 202, i32* %4, i32 128, i32 %10, i32 0, i32 0, i32 0) #7
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %21, label %16

16:                                               ; preds = %13
  %17 = tail call i32* @__errno_location() #8
  %18 = load i32, i32* %17, align 4
  switch i32 %18, label %19 [
    i32 4, label %21
    i32 11, label %21
  ]

19:                                               ; preds = %16
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.10, i64 0, i64 0), i32 %18) #7
  br label %21

20:                                               ; preds = %9
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i32 %10) #7
  br label %21

21:                                               ; preds = %19, %16, %16, %13, %20
  %22 = cmpxchg i32* %4, i32 %1, i32 %2 seq_cst seq_cst
  %23 = extractvalue { i32, i1 } %22, 0
  %24 = extractvalue { i32, i1 } %22, 1
  br i1 %24, label %25, label %9, !prof !2

25:                                               ; preds = %21, %3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @FutexWait(i32*, i32) unnamed_addr #0 {
  %3 = tail call i64 (i64, ...) @syscall(i64 202, i32* %0, i32 128, i32 %1, i32 0, i32 0, i32 0) #7
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %9, label %5

5:                                                ; preds = %2
  %6 = tail call i32* @__errno_location() #8
  %7 = load i32, i32* %6, align 4
  switch i32 %7, label %8 [
    i32 4, label %9
    i32 11, label %9
  ]

8:                                                ; preds = %5
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.10, i64 0, i64 0), i32 %7) #7
  br label %9

9:                                                ; preds = %5, %5, %2, %8
  ret void
}

declare void @NaClLog(i32, i8*, ...) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClThreadSuspensionSignalHandler(i32, %struct.NaClSignalContext* nocapture, i32, %struct.NaClAppThread* nocapture) local_unnamed_addr #0 {
  %5 = alloca i8, align 1
  %6 = alloca i32, align 4
  %7 = alloca %struct.__sigset_t, align 8
  %8 = icmp eq i32 %0, 10
  br i1 %8, label %9, label %10

9:                                                ; preds = %4
  tail call fastcc void @HandleSuspendSignal(%struct.NaClSignalContext* %1)
  br label %56

10:                                               ; preds = %4
  %11 = icmp eq i32 %2, 0
  br i1 %11, label %56, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %3, i64 0, i32 2
  %14 = load %struct.NaClApp*, %struct.NaClApp** %13, align 8
  %15 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %14, i64 0, i32 59
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %56, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %3, i64 0, i32 7
  %20 = load i32, i32* %19, align 8
  %21 = and i32 %20, 1
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %18
  %24 = tail call i64 @NaClSignalErrorMessage(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.12, i64 0, i64 0)) #7
  tail call void @NaClAbort() #7
  %25 = load %struct.NaClApp*, %struct.NaClApp** %13, align 8
  br label %26

26:                                               ; preds = %23, %18
  %27 = phi %struct.NaClApp* [ %25, %23 ], [ %14, %18 ]
  %28 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %3, i64 0, i32 9
  store i32 %0, i32* %28, align 8
  %29 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %27, i64 0, i32 60
  %30 = atomicrmw add i32* %29, i32 1 seq_cst
  %31 = load %struct.NaClApp*, %struct.NaClApp** %13, align 8
  %32 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %31, i64 0, i32 62
  %33 = load i32, i32* %32, align 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #7
  store i8 0, i8* %5, align 1
  %34 = call i64 @write(i32 %33, i8* nonnull %5, i64 1) #7
  %35 = icmp eq i64 %34, 1
  br i1 %35, label %38, label %36

36:                                               ; preds = %26
  %37 = tail call i64 @NaClSignalErrorMessage(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.15, i64 0, i64 0)) #7
  tail call void @NaClAbort() #7
  br label %38

38:                                               ; preds = %36, %26
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #7
  %39 = bitcast i32* %6 to i8*
  %40 = bitcast %struct.__sigset_t* %7 to i8*
  br label %41

41:                                               ; preds = %53, %38
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %39) #7
  store i32 -1431655766, i32* %6, align 4
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %40) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 -86, i64 128, i1 false) #7
  %42 = call i32 @sigemptyset(%struct.__sigset_t* nonnull %7) #7
  %43 = call i32 @sigaddset(%struct.__sigset_t* nonnull %7, i32 10) #7
  %44 = call i32 @sigwait(%struct.__sigset_t* nonnull %7, i32* nonnull %6) #7
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %48, label %46

46:                                               ; preds = %41
  %47 = call i64 @NaClSignalErrorMessage(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.13, i64 0, i64 0)) #7
  call void @NaClAbort() #7
  br label %48

48:                                               ; preds = %46, %41
  %49 = load i32, i32* %6, align 4
  %50 = icmp eq i32 %49, 10
  br i1 %50, label %53, label %51

51:                                               ; preds = %48
  %52 = call i64 @NaClSignalErrorMessage(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.14, i64 0, i64 0)) #7
  call void @NaClAbort() #7
  br label %53

53:                                               ; preds = %51, %48
  call fastcc void @HandleSuspendSignal(%struct.NaClSignalContext* %1) #7
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %40) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %39) #7
  %54 = load i32, i32* %28, align 8
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %41

56:                                               ; preds = %53, %10, %12, %9
  %57 = phi i32 [ 1, %9 ], [ 0, %12 ], [ 0, %10 ], [ 1, %53 ]
  ret i32 %57
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @HandleSuspendSignal(%struct.NaClSignalContext* nocapture) unnamed_addr #0 {
  %2 = tail call %struct.NaClAppThread* @NaClTlsGetCurrentThread() #7
  %3 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %2, i64 0, i32 8
  %4 = load %struct.NaClAppThreadSuspendedRegisters*, %struct.NaClAppThreadSuspendedRegisters** %3, align 8
  %5 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %2, i64 0, i32 7
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 5
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = tail call i64 @NaClSignalErrorMessage(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.11, i64 0, i64 0)) #7
  tail call void @NaClAbort() #7
  br label %10

10:                                               ; preds = %1, %8
  %11 = icmp ne %struct.NaClAppThreadSuspendedRegisters* %4, null
  br i1 %11, label %12, label %15

12:                                               ; preds = %10
  %13 = bitcast %struct.NaClAppThreadSuspendedRegisters* %4 to i8*
  %14 = bitcast %struct.NaClSignalContext* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 8 %14, i64 168, i1 false)
  tail call void asm sideeffect "sfence", "~{dirflag},~{fpsr},~{flags}"() #7, !srcloc !3
  br label %15

15:                                               ; preds = %12, %10
  %16 = load i32, i32* %5, align 8
  %17 = or i32 %16, 8
  store i32 %17, i32* %5, align 8
  tail call fastcc void @FutexWake(i32* %5)
  %18 = load i32, i32* %5, align 8
  %19 = and i32 %18, 8
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %15, %21
  %22 = phi i32 [ %23, %21 ], [ %18, %15 ]
  tail call fastcc void @FutexWait(i32* %5, i32 %22)
  %23 = load i32, i32* %5, align 8
  %24 = and i32 %23, 8
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %21

26:                                               ; preds = %21, %15
  br i1 %11, label %27, label %30

27:                                               ; preds = %26
  %28 = bitcast %struct.NaClSignalContext* %0 to i8*
  %29 = bitcast %struct.NaClAppThreadSuspendedRegisters* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* nonnull align 8 %29, i64 168, i1 false)
  br label %30

30:                                               ; preds = %27, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @NaClUntrustedThreadSuspend(%struct.NaClAppThread*, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %0, i64 0, i32 7
  br label %4

4:                                                ; preds = %12, %2
  %5 = load i32, i32* %3, align 8
  %6 = load i32, i32* @nacl_check_debug_mode, align 4
  %7 = icmp eq i32 %6, 0
  %8 = and i32 %5, 4
  %9 = icmp eq i32 %8, 0
  %10 = or i1 %7, %9
  br i1 %10, label %12, label %11

11:                                               ; preds = %4
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.2, i64 0, i64 0), i32 244, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.3, i64 0, i64 0)) #7
  br label %12

12:                                               ; preds = %4, %11
  %13 = or i32 %5, 4
  %14 = cmpxchg i32* %3, i32 %5, i32 %13 seq_cst seq_cst
  %15 = extractvalue { i32, i1 } %14, 1
  br i1 %15, label %16, label %4

16:                                               ; preds = %12
  %17 = load i32, i32* @nacl_check_debug_mode, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %16
  %20 = load i32, i32* %3, align 8
  %21 = icmp eq i32 %20, %13
  br i1 %21, label %23, label %22

22:                                               ; preds = %19
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.2, i64 0, i64 0), i32 257, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.4, i64 0, i64 0)) #7
  br label %23

23:                                               ; preds = %16, %22, %19
  %24 = icmp eq i32 %5, 1
  br i1 %24, label %25, label %59

25:                                               ; preds = %23
  %26 = icmp eq i32 %1, 0
  br i1 %26, label %36, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %0, i64 0, i32 8
  %29 = load %struct.NaClAppThreadSuspendedRegisters*, %struct.NaClAppThreadSuspendedRegisters** %28, align 8
  %30 = icmp eq %struct.NaClAppThreadSuspendedRegisters* %29, null
  br i1 %30, label %31, label %36

31:                                               ; preds = %27
  %32 = tail call noalias i8* @malloc(i64 168) #7
  %33 = bitcast %struct.NaClAppThreadSuspendedRegisters** %28 to i8**
  store i8* %32, i8** %33, align 8
  %34 = icmp eq i8* %32, null
  br i1 %34, label %35, label %36

35:                                               ; preds = %31
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.5, i64 0, i64 0)) #7
  br label %36

36:                                               ; preds = %25, %27, %35, %31
  %37 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %0, i64 0, i32 4
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %36
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.2, i64 0, i64 0), i32 271, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6, i64 0, i64 0)) #7
  br label %41

41:                                               ; preds = %36, %40
  %42 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %0, i64 0, i32 5, i32 0
  %43 = load i64, i64* %42, align 8
  %44 = tail call i32 @pthread_kill(i64 %43, i32 10) #7
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %47, label %46

46:                                               ; preds = %41
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.7, i64 0, i64 0)) #7
  br label %47

47:                                               ; preds = %41, %46
  br label %48

48:                                               ; preds = %57, %47
  %49 = load i32, i32* %3, align 8
  switch i32 %49, label %58 [
    i32 5, label %50
    i32 13, label %59
  ]

50:                                               ; preds = %48
  %51 = tail call i64 (i64, ...) @syscall(i64 202, i32* %3, i32 128, i32 5, i32 0, i32 0, i32 0) #7
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %57, label %53

53:                                               ; preds = %50
  %54 = tail call i32* @__errno_location() #8
  %55 = load i32, i32* %54, align 4
  switch i32 %55, label %56 [
    i32 4, label %57
    i32 11, label %57
  ]

56:                                               ; preds = %53
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.10, i64 0, i64 0), i32 %55) #7
  br label %57

57:                                               ; preds = %56, %53, %53, %50
  br label %48

58:                                               ; preds = %48
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.16, i64 0, i64 0), i32 %49) #7
  br label %59

59:                                               ; preds = %48, %58, %23
  ret void
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @pthread_kill(i64, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @NaClUntrustedThreadResume(%struct.NaClAppThread*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %0, i64 0, i32 7
  br label %3

3:                                                ; preds = %12, %1
  %4 = load i32, i32* %2, align 8
  %5 = and i32 %4, -13
  %6 = load i32, i32* @nacl_check_debug_mode, align 4
  %7 = icmp ne i32 %6, 0
  %8 = and i32 %4, 4
  %9 = icmp eq i32 %8, 0
  %10 = and i1 %7, %9
  br i1 %10, label %11, label %12

11:                                               ; preds = %3
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.2, i64 0, i64 0), i32 287, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.8, i64 0, i64 0)) #7
  br label %12

12:                                               ; preds = %3, %11
  %13 = cmpxchg i32* %2, i32 %4, i32 %5 seq_cst seq_cst
  %14 = extractvalue { i32, i1 } %13, 1
  br i1 %14, label %15, label %3

15:                                               ; preds = %12
  %16 = tail call i64 (i64, ...) @syscall(i64 202, i32* %2, i32 129, i32 1, i32 0, i32 0, i32 0) #7
  %17 = icmp slt i64 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %15
  %19 = tail call i32* @__errno_location() #8
  %20 = load i32, i32* %19, align 4
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.17, i64 0, i64 0), i32 %20) #7
  br label %21

21:                                               ; preds = %15, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @FutexWake(i32*) unnamed_addr #0 {
  %2 = tail call i64 (i64, ...) @syscall(i64 202, i32* %0, i32 129, i32 1, i32 0, i32 0, i32 0) #7
  %3 = icmp slt i64 %2, 0
  br i1 %3, label %4, label %7

4:                                                ; preds = %1
  %5 = tail call i32* @__errno_location() #8
  %6 = load i32, i32* %5, align 4
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.17, i64 0, i64 0), i32 %6) #7
  br label %7

7:                                                ; preds = %4, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @NaClAppThreadGetSuspendedRegistersInternal(%struct.NaClAppThread* nocapture readonly, %struct.NaClSignalContext* nocapture) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %0, i64 0, i32 8
  %4 = bitcast %struct.NaClAppThreadSuspendedRegisters** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = bitcast %struct.NaClSignalContext* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %5, i64 168, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @NaClAppThreadSetSuspendedRegistersInternal(%struct.NaClAppThread* nocapture readonly, %struct.NaClSignalContext* nocapture readonly) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %0, i64 0, i32 8
  %4 = bitcast %struct.NaClAppThreadSuspendedRegisters** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = bitcast %struct.NaClSignalContext* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 168, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClAppThreadUnblockIfFaulted(%struct.NaClAppThread* nocapture, i32* nocapture) local_unnamed_addr #0 {
  %3 = load i32, i32* @nacl_check_debug_mode, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %9, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %0, i64 0, i32 7
  %7 = load i32, i32* %6, align 8
  switch i32 %7, label %8 [
    i32 13, label %9
    i32 6, label %9
  ]

8:                                                ; preds = %5
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.2, i64 0, i64 0), i32 318, i8* getelementptr inbounds ([189 x i8], [189 x i8]* @.str.9, i64 0, i64 0)) #7
  br label %9

9:                                                ; preds = %5, %5, %2, %8
  %10 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %0, i64 0, i32 9
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %18, label %13

13:                                               ; preds = %9
  store i32 %11, i32* %1, align 4
  store i32 0, i32* %10, align 8
  %14 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %0, i64 0, i32 2
  %15 = load %struct.NaClApp*, %struct.NaClApp** %14, align 8
  %16 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %15, i64 0, i32 60
  %17 = atomicrmw add i32* %16, i32 -1 seq_cst
  br label %18

18:                                               ; preds = %9, %13
  %19 = phi i32 [ 1, %13 ], [ 0, %9 ]
  ret i32 %19
}

; Function Attrs: nounwind
declare i64 @syscall(i64, ...) local_unnamed_addr #4

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #5

declare %struct.NaClAppThread* @NaClTlsGetCurrentThread() local_unnamed_addr #2

declare i64 @NaClSignalErrorMessage(i8*) local_unnamed_addr #2

declare void @NaClAbort() local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind
declare i32 @sigemptyset(%struct.__sigset_t*) local_unnamed_addr #4

; Function Attrs: nounwind
declare i32 @sigaddset(%struct.__sigset_t*, i32) local_unnamed_addr #4

declare i32 @sigwait(%struct.__sigset_t*, i32*) local_unnamed_addr #2

; Function Attrs: nofree
declare i64 @write(i32, i8* nocapture readonly, i64) local_unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i32 254883}
